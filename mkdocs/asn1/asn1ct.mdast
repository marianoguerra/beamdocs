{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\b# asn1ct"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\b# asn1ct"},null},null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"1ASN.1 compiler and compile-time support functions"}],
         0,false}],
       0,true},
      null},
     null}}},
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {sep,
      [{sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [407,84,104,101,32,65,83,78,46,49,32,99,111,109,112,105,
                    108,101,114,32,116,97,107,101,115,32,97,110,32,65,83,78,
                    46,49,32,109,111,100,117,108,101,32,97,115,32,105,110,112,
                    117,116,32,97,110,100,32,103,101,110,101,114,97,116,101,
                    115,32,97,32,99,111,114,114,101,115,112,111,110,100,105,
                    110,103,32,69,114,108,97,110,103,32,109,111,100,117,108,
                    101,44,32,119,104,105,99,104,32,99,97,110,32,101,110,99,
                    111,100,101,32,97,110,100,32,100,101,99,111,100,101,32,
                    116,104,101,32,115,112,101,99,105,102,105,101,100,32,100,
                    97,116,97,32,116,121,112,101,115,46,32,65,108,116,101,114,
                    110,97,116,105,118,101,108,121,44,32,116,104,101,32,99,
                    111,109,112,105,108,101,114,32,116,97,107,101,115,32,97,
                    32,115,112,101,99,105,102,105,99,97,116,105,111,110,32,
                    109,111,100,117,108,101,32,115,112,101,99,105,102,121,105,
                    110,103,32,97,108,108,32,105,110,112,117,116,32,109,111,
                    100,117,108,101,115,44,32,97,110,100,32,103,101,110,101,
                    114,97,116,101,115,32,97,32,109,111,100,117,108,101,32,
                    119,105,116,104,32,101,110,99,111,100,101,47,100,101,99,
                    111,100,101,32,102,117,110,99,116,105,111,110,115,46,32,
                    73,110,32,97,100,100,105,116,105,111,110,44,32,115,111,
                    109,101,32,103,101,110,101,114,105,99,32,102,117,110,99,
                    116,105,111,110,115,32,99,97,110,32,98,101,32,117,115,101,
                    100,32,100,117,114,105,110,103,32,100,101,118,101,108,111,
                    112,109,101,110,116,32,111,102,32,97,112,112,108,105,99,
                    97,116,105,111,110,115,32,116,104,97,116,32,104,97,110,
                    100,108,101,115,32,65,83,78,46,49,32,100,97,116,97,32,40,
                    101,110,99,111,100,101,100,32,97,115]}],
                 0,false},
                {text,[5,42,66,69,82,42]},
                {sep,[{text,[2,111,114]}],0,false},
                {text,[5,42,80,69,82,42]},
                {sep,[{text,[2,41,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,"/By default in OTP 17, the representation of the"}],
                   0,false},
                  {text,"\f*BIT STRING*"},
                  {sep,[{text,[3,97,110,100]}],0,false},
                  {text,[14,42,79,67,84,69,84,32,83,84,82,73,78,71,42]},
                  {sep,
                   [{text,"#types as Erlang terms were changed."}],
                   0,false},
                  {text,"\f*BIT STRING*"},
                  {sep,
                   [{text,"%values are now Erlang bit strings and"}],
                   0,false},
                  {text,[14,42,79,67,84,69,84,32,83,84,82,73,78,71,42]},
                  {sep,
                   [{text,
                     "Fvalues are binaries. Also, an undecoded open type is now wrapped in an"}],
                   0,false},
                  {text,[15,42,97,115,110,49,95,79,80,69,78,84,89,80,69,42]},
                  {sep,
                   [{text,
                     [23,116,117,112,108,101,46,32,70,111,114,32,100,101,116,
                      97,105,108,115,44,32,115,101,101]}],
                   0,false},
                  {text,"/[BIT STRING](./asn1_getting_started#BIT STRING)"},
                  {sep,[{text,[1,44]}],0,false},
                  {text,
                   "3[OCTET STRING](./asn1_getting_started#OCTET STRING)"},
                  {sep,[{text,[5,44,32,97,110,100]}],0,false},
                  {text,
                   "F[ASN.1 Information Objects](./asn1_getting_started#Information Object)"},
                  {sep,
                   [{text,
                     [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,
                      71,117,105,100,101,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "<To revert to the old representation of the types, use option"}],
                   0,false},
                  {text,
                   [21,42,108,101,103,97,99,121,95,101,114,108,97,110,103,95,
                    116,121,112,101,115,42]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "XIn OTP R16, the options were simplified. The back end is chosen using one of the options"}],
                   0,false},
                  {text,[5,42,98,101,114,42]},
                  {sep,[{text,[1,44]}],0,false},
                  {text,[5,42,112,101,114,42]},
                  {sep,[{text,[4,44,32,111,114]}],0,false},
                  {text,[6,42,117,112,101,114,42]},
                  {sep,[{text,"\t. Options"}],0,false},
                  {text,"\n*optimize*"},
                  {sep,[{text,[1,44]}],0,false},
                  {text,[5,42,110,105,102,42]},
                  {sep,[{text,[5,44,32,97,110,100]}],0,false},
                  {text,"\b*driver*"},
                  {sep,
                   [{text,
                     "foptions are no longer necessary (and the ASN.1 compiler generates a warning if they are used). Options"}],
                   0,false},
                  {text,"\t*ber_bin*"},
                  {sep,[{text,[1,44]}],0,false},
                  {text,"\t*per_bin*"},
                  {sep,[{text,[5,44,32,97,110,100]}],0,false},
                  {text,"\n*uper_bin*"},
                  {sep,
                   [{text,",options still work, but generates a warning."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "8Another change in OTP R16 is that the generated function"}],
                   0,false},
                  {text,"\n*encode/2*"},
                  {sep,[{text,"!always returns a binary. Function"}],0,false},
                  {text,"\n*encode/2*"},
                  {sep,[{text,[7,102,111,114,32,116,104,101]}],0,false},
                  {text,[5,42,66,69,82,42]},
                  {sep,
                   [{text,"\"back end used to return an iolist."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,false}],
      0,true},
     null},
    null}}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,".## compile(Asn1module) -> ok | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"7## compile(Asn1module, Options) -> ok | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "fCompiles an ASN.1 module and generates encode/decode functions according to encoding rules BER or PER."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [30,65,115,110,49,109,111,100,117,108,101,32,61,32,97,116,111,
              109,40,41,32,124,32,115,116,114,105,110,103,40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [29,79,112,116,105,111,110,115,32,61,32,91,79,112,116,105,111,
              110,124,32,79,108,100,79,112,116,105,111,110,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [291,79,112,116,105,111,110,32,61,32,98,101,114,32,124,32,112,101,
             114,32,124,32,117,112,101,114,32,124,32,100,101,114,32,124,32,99,
             111,109,112,97,99,116,95,98,105,116,95,115,116,114,105,110,103,
             32,124,32,108,101,103,97,99,121,95,98,105,116,95,115,116,114,105,
             110,103,32,124,32,108,101,103,97,99,121,95,101,114,108,97,110,
             103,95,116,121,112,101,115,32,124,32,110,111,111,98,106,32,124,
             32,123,110,50,110,44,32,69,110,117,109,84,121,112,101,78,97,109,
             101,125,32,124,123,111,117,116,100,105,114,44,32,68,105,114,125,
             32,124,32,123,105,44,32,73,110,99,108,117,100,101,68,105,114,125,
             32,124,32,97,115,110,49,99,111,110,102,105,103,32,124,32,117,110,
             100,101,99,95,114,101,115,116,32,124,32,110,111,95,111,107,95,
             119,114,97,112,112,101,114,32,124,32,123,109,97,99,114,111,95,
             110,97,109,101,95,112,114,101,102,105,120,44,32,80,114,101,102,
             105,120,125,32,124,32,123,114,101,99,111,114,100,95,110,97,109,
             101,95,112,114,101,102,105,120,44,32,80,114,101,102,105,120,125,
             32,124,32,118,101,114,98,111,115,101,32,124,32,119,97,114,110,
             105,110,103,115,95,97,115,95,101,114,114,111,114,115]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [21,79,108,100,79,112,116,105,111,110,32,61,32,98,101,114,32,124,
            32,112,101,114]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,80,114,101,102,105,120,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fCompiles the"}],0,false},
            {text,[7,42,65,83,78,46,49,42]},
            {sep,[{text,[6,109,111,100,117,108,101]}],0,false},
            {text,"\f*Asn1module*"},
            {sep,
             [{text,
               [30,97,110,100,32,103,101,110,101,114,97,116,101,115,32,97,110,
                32,69,114,108,97,110,103,32,109,111,100,117,108,101]}],
             0,false},
            {text,
             [16,42,65,115,110,49,109,111,100,117,108,101,46,101,114,108,42]},
            {sep,
             [{text,
               "9with encode and decode functions for the types defined in"}],
             0,false},
            {text,"\f*Asn1module*"},
            {sep,
             [{text,
               "~. For each ASN.1 value defined in the module, an Erlang function that returns the value in Erlang representation is generated."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,"\f*Asn1module*"},
            {sep,[{text,"&is a filename without extension, first"}],0,false},
            {text,"\t*\".asn1\"*"},
            {sep,
             [{text,
               [16,105,115,32,97,115,115,117,109,101,100,44,32,116,104,101,
                110]}],
             0,false},
            {text,"\b*\".asn\"*"},
            {sep,[{text,"\r, and finally"}],0,false},
            {text,[7,42,34,46,112,121,34,42]},
            {sep,
             [{text,"/(to be compatible with the old ASN.1 compiler)."}],
             0,false},
            {text,"\f*Asn1module*"},
            {sep,
             [{text,
               "]can be a full pathname (relative or absolute) including filename with (or without) extension."}],
             0,false},
            {text,
             [29,60,97,32,110,97,109,101,61,34,97,115,110,49,115,101,116,34,
              62,97,115,110,49,115,101,116,60,47,97,62]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"#If it is needed to compile a set of"}],0,false},
            {text,[7,42,65,83,78,46,49,42]},
            {sep,
             [{text,
               "©modules into an Erlang file with encode/decode functions, ensure to list all involved files in a configuration file. This configuration file must have a double extension"}],
             0,false},
            {text,"\f*\".set.asn\"*"},
            {sep,[{text,[1,40]}],0,false},
            {text,"\b*\".asn\"*"},
            {sep,
             [{text,
               [20,99,97,110,32,97,108,116,101,114,110,97,116,105,118,101,108,
                121,32,98,101]}],
             0,false},
            {text,"\t*\".asn1\"*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[7,42,34,46,112,121,34,42]},
            {sep,
             [{text,
               "m). List the input file names within quotation marks (\"\"), one at each row in the file. If the input files are"}],
             0,false},
            {text,"\v*File1.asn*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\v*File2.asn*"},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,"\v*File3.asn*"},
            {sep,
             [{text,"., the configuration file must look as follows:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [30,10,70,105,108,101,49,46,97,115,110,10,70,105,108,101,50,46,
              97,115,110,10,70,105,108,101,51,46,97,115,110]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "mThe output files in this case get their names from the configuration file. If the configuration file is named"}],
             0,false},
            {text,
             [20,42,83,101,116,79,102,70,105,108,101,115,46,115,101,116,46,97,
              115,110,42]},
            {sep,[{text,"#, the names of the output files are"}],0,false},
            {text,"7*SetOfFiles.hrl, SetOfFiles.erl, and SetOfFiles.asn1db*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [24,83,111,109,101,116,105,109,101,115,32,105,110,32,97,32,115,
                121,115,116,101,109,32,111,102]}],
             0,false},
            {text,[7,42,65,83,78,46,49,42]},
            {sep,
             [{text,"2modules, different default tag modes, for example,"}],
             0,false},
            {text,"\v*AUTOMATIC*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\n*IMPLICIT*"},
            {sep,[{text,[4,44,32,111,114]}],0,false},
            {text,"\n*EXPLICIT*"},
            {sep,
             [{text,
               "e. The multi-file compilation resolves the default tagging as if the modules were compiled separately."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [137,78,97,109,101,32,99,111,108,108,105,115,105,111,110,115,32,
              105,115,32,97,110,111,116,104,101,114,32,117,110,119,97,110,116,
              101,100,32,101,102,102,101,99,116,32,116,104,97,116,32,99,97,
              110,32,111,99,99,117,114,32,105,110,32,109,117,108,116,105,32,
              102,105,108,101,45,99,111,109,112,105,108,97,116,105,111,110,46,
              32,84,104,101,32,99,111,109,112,105,108,101,114,32,115,111,108,
              118,101,115,32,116,104,105,115,32,112,114,111,98,108,101,109,32,
              105,110,32,111,110,101,32,111,102,32,116,119,111,32,119,97,121,
              115,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {text,
         "eIf the definitions are identical, the output module keeps only one definition with the original name."}],
       0,false},
      {sep,
       [{text,[1,42]},
        {text,
         "§If the definitions have the same name and differs in the definition, they are renamed. The new names are the definition name and the original module name concatenated."}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"2If a name collision occurs, the compiler reports a"}],
             0,false},
            {text,[15,42,34,78,79,84,73,67,69,58,32,46,46,46,34,42]},
            {sep,
             [{text,
               "imessage that tells if a definition was renamed, and the new name that must be used to encode/decode data."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\t*Options*"},
            {sep,[{text,"'is a list with options specific for the"}],0,false},
            {text,[7,42,65,83,78,46,49,42]},
            {sep,
             [{text,
               "^compiler and options that are applied to the Erlang compiler. The latter are not recognized as"}],
             0,false},
            {text,[7,42,65,83,78,46,49,42]},
            {sep,
             [{text,"/specific. The available options are as follows:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{text,[4,60,100,116,62]},
                                              {sep,
                                               [{text,
                                                 [16,98,101,114,32,124,32,112,
                                                  101,114,32,124,32,117,112,
                                                  101,114]}],
                                               0,false},
                                              {text,[5,60,47,100,116,62]}],
                                             0,true},
                                            null},
                                           null}},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{text,[4,60,100,100,62]},
                                              {sep,
                                               [{above,
                                                 {above,
                                                  {above,{text,[0]},null},
                                                  null},
                                                 {above,
                                                  {above,
                                                   {sep,
                                                    [{sep,
                                                      [{sep,
                                                        [{text,
                                                          "ºThe encoding rule to be used. The supported encoding rules are Basic Encoding Rules (BER), Packed Encoding Rules (PER) aligned, and PER unaligned. If the encoding rule option is omitted,"}],
                                                        0,false},
                                                       {text,[3,98,101,114]},
                                                       {sep,
                                                        [{text,
                                                          [15,105,115,32,116,
                                                           104,101,32,100,101,
                                                           102,97,117,108,116,
                                                           46]}],
                                                        0,false}],
                                                      0,false}],
                                                    0,true},
                                                   null},
                                                  null}},
                                                {above,
                                                 {above,
                                                  {above,{text,[0]},null},
                                                  null},
                                                 {above,
                                                  {above,
                                                   {sep,
                                                    [{sep,
                                                      [{sep,
                                                        [{text,
                                                          "<The generated Erlang module always gets the same name as the"}],
                                                        0,false},
                                                       {text,
                                                        [5,65,83,78,46,49]},
                                                       {sep,
                                                        [{text,
                                                          "-module. Therefore, only one encoding rule per"}],
                                                        0,false},
                                                       {text,
                                                        [5,65,83,78,46,49]},
                                                       {sep,
                                                        [{text,
                                                          [30,109,111,100,117,
                                                           108,101,32,99,97,
                                                           110,32,98,101,32,
                                                           117,115,101,100,32,
                                                           97,116,32,114,117,
                                                           110,116,105,109,
                                                           101,46]}],
                                                        0,false}],
                                                      0,false}],
                                                    0,true},
                                                   null},
                                                  null}}],
                                               0,false},
                                              {text,[5,60,47,100,100,62]}],
                                             0,true},
                                            null},
                                           null}}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{text,[4,60,100,116,62]},
                                             {sep,
                                              [{text,[3,100,101,114]}],
                                              0,false},
                                             {text,[5,60,47,100,116,62]}],
                                            0,true},
                                           null},
                                          null}}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,100,62]},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      "ÂWith this option the Distinguished Encoding Rules (DER) is chosen. DER is regarded as a specialized variant of the BER encoding rule. Therefore, this option only makes sense together with option"}],
                                                    0,false},
                                                   {text,[3,98,101,114]},
                                                   {sep,
                                                    [{text,
                                                      [143,46,32,84,104,105,
                                                       115,32,111,112,116,105,
                                                       111,110,32,115,111,109,
                                                       101,116,105,109,101,
                                                       115,32,97,100,100,115,
                                                       32,115,111,114,116,105,
                                                       110,103,32,97,110,100,
                                                       32,118,97,108,117,101,
                                                       32,99,104,101,99,107,
                                                       115,32,119,104,101,110,
                                                       32,101,110,99,111,100,
                                                       105,110,103,44,32,119,
                                                       104,105,99,104,32,105,
                                                       109,112,108,105,101,
                                                       115,32,97,32,115,108,
                                                       111,119,101,114,32,101,
                                                       110,99,111,100,105,110,
                                                       103,46,32,84,104,101,
                                                       32,100,101,99,111,100,
                                                       105,110,103,32,114,111,
                                                       117,116,105,110,101,
                                                       115,32,97,114,101,32,
                                                       116,104,101,32,115,97,
                                                       109,101,32,97,115,32,
                                                       102,111,114]}],
                                                    0,false},
                                                   {text,[3,98,101,114]},
                                                   {sep,
                                                    [{text,[1,46]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {text,[5,60,47,100,100,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,116,62]},
                                           {sep,
                                            [{text,[4,109,97,112,115]}],
                                            0,false},
                                           {text,[5,60,47,100,116,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,100,62]},
                                          {sep,
                                           [{above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      "3This option changes the representation of the types"}],
                                                    0,false},
                                                   {text,"\bSEQUENCE"},
                                                   {sep,
                                                    [{text,[3,97,110,100]}],
                                                    0,false},
                                                   {text,[3,83,69,84]},
                                                   {sep,
                                                    [{text,
                                                      "Oto use maps (instead of records). This option also suppresses the generation of"}],
                                                    0,false},
                                                   {text,[4,46,104,114,108]},
                                                   {sep,
                                                    [{text,
                                                      [6,102,105,108,101,115,
                                                       46]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      [24,70,111,114,32,100,
                                                       101,116,97,105,108,115,
                                                       44,32,115,101,101,32,
                                                       83,101,99,116,105,111,
                                                       110]}],
                                                    0,false},
                                                   {text,
                                                    "'Map representation for SEQUENCE and SET"},
                                                   {sep,
                                                    [{text,
                                                      [20,105,110,32,116,104,
                                                       101,32,85,115,101,114,
                                                       39,115,32,71,117,105,
                                                       100,101,46]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}}],
                                           0,false},
                                          {text,[5,60,47,100,100,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,116,62]},
                                         {sep,
                                          [{text,
                                            [18,99,111,109,112,97,99,116,95,
                                             98,105,116,95,115,116,114,105,
                                             110,103]}],
                                          0,false},
                                         {text,[5,60,47,100,116,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,100,62]},
                                        {sep,
                                         [{above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{sep,
                                                [{sep,
                                                  [{text,[3,84,104,101]}],
                                                  0,false},
                                                 {text,"\nBIT STRING"},
                                                 {sep,
                                                  [{text,
                                                    "&type is decoded to \"compact notation\"."}],
                                                  0,false},
                                                 {text,
                                                  ",This option is not recommended for new code."},
                                                 {sep,
                                                  [{text,
                                                    ".This option cannot be combined with the option"}],
                                                  0,false},
                                                 {text,[4,109,97,112,115]},
                                                 {sep,
                                                  [{text,[1,46]}],
                                                  0,false}],
                                                0,false}],
                                              0,true},
                                             null},
                                            null}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{sep,
                                                [{sep,
                                                  [{text,
                                                    [24,70,111,114,32,100,101,
                                                     116,97,105,108,115,44,32,
                                                     115,101,101,32,83,101,99,
                                                     116,105,111,110]}],
                                                  0,false},
                                                 {text,"\nBIT STRING"},
                                                 {sep,
                                                  [{text,
                                                    [20,105,110,32,116,104,
                                                     101,32,85,115,101,114,39,
                                                     115,32,71,117,105,100,
                                                     101,46]}],
                                                  0,false}],
                                                0,false}],
                                              0,true},
                                             null},
                                            null}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{sep,
                                                [{sep,
                                                  [{text,
                                                    [26,84,104,105,115,32,111,
                                                     112,116,105,111,110,32,
                                                     105,109,112,108,105,101,
                                                     115,32,111,112,116,105,
                                                     111,110]}],
                                                  0,false},
                                                 {text,
                                                  [19,108,101,103,97,99,121,
                                                   95,101,114,108,97,110,103,
                                                   95,116,121,112,101,115]},
                                                 {sep,
                                                  [{text,[1,46]}],
                                                  0,false}],
                                                0,false}],
                                              0,true},
                                             null},
                                            null}}],
                                         0,false},
                                        {text,[5,60,47,100,100,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,
                                        [{text,
                                          [17,108,101,103,97,99,121,95,98,105,
                                           116,95,115,116,114,105,110,103]}],
                                        0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,100,62]},
                                      {sep,
                                       [{above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{sep,
                                                [{text,[3,84,104,101]}],
                                                0,false},
                                               {text,"\nBIT STRING"},
                                               {sep,
                                                [{text,
                                                  "Itype is decoded to the legacy format, that is, a list of zeroes and ones."}],
                                                0,false},
                                               {text,
                                                ",This option is not recommended for new code."},
                                               {sep,
                                                [{text,
                                                  ".This option cannot be combined with the option"}],
                                                0,false},
                                               {text,[4,109,97,112,115]},
                                               {sep,[{text,[1,46]}],0,false}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{sep,
                                                [{text,
                                                  [24,70,111,114,32,100,101,
                                                   116,97,105,108,115,44,32,
                                                   115,101,101,32,83,101,99,
                                                   116,105,111,110]}],
                                                0,false},
                                               {text,"\nBIT STRING"},
                                               {sep,
                                                [{text,
                                                  [19,105,110,32,116,104,101,
                                                   32,85,115,101,114,39,115,
                                                   32,71,117,105,100,101]}],
                                                0,false}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{sep,
                                                [{text,
                                                  [26,84,104,105,115,32,111,
                                                   112,116,105,111,110,32,105,
                                                   109,112,108,105,101,115,32,
                                                   111,112,116,105,111,110]}],
                                                0,false},
                                               {text,
                                                [19,108,101,103,97,99,121,95,
                                                 101,114,108,97,110,103,95,
                                                 116,121,112,101,115]},
                                               {sep,[{text,[1,46]}],0,false}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}}],
                                       0,false},
                                      {text,[5,60,47,100,100,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,
                                      [{text,
                                        [19,108,101,103,97,99,121,95,101,114,
                                         108,97,110,103,95,116,121,112,101,
                                         115]}],
                                      0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {sep,
                                     [{above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{sep,
                                              [{text,
                                                "&Use the same Erlang types to represent"}],
                                              0,false},
                                             {text,"\nBIT STRING"},
                                             {sep,
                                              [{text,[3,97,110,100]}],
                                              0,false},
                                             {text,"\fOCTET STRING"},
                                             {sep,
                                              [{text,
                                                [14,97,115,32,105,110,32,79,
                                                 84,80,32,82,49,54,46]}],
                                              0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{sep,
                                              [{text,
                                                [24,70,111,114,32,100,101,116,
                                                 97,105,108,115,44,32,115,101,
                                                 101,32,83,101,99,116,105,111,
                                                 110]}],
                                              0,false},
                                             {text,"\nBIT STRING"},
                                             {sep,
                                              [{text,"\vand Section"}],
                                              0,false},
                                             {text,"\fOCTET STRING"},
                                             {sep,
                                              [{text,
                                                [20,105,110,32,116,104,101,32,
                                                 85,115,101,114,39,115,32,71,
                                                 117,105,100,101,46]}],
                                              0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{text,
                                              ",This option is not recommended for new code."},
                                             {sep,
                                              [{text,
                                                ".This option cannot be combined with the option"}],
                                              0,false},
                                             {text,[4,109,97,112,115]},
                                             {sep,[{text,[1,46]}],0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}}],
                                     0,false},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,
                                    [{text,
                                      [19,123,110,50,110,44,32,69,110,117,109,
                                       84,121,112,101,78,97,109,101,125]}],
                                    0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {sep,
                                   [{above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,
                                              "}Tells the compiler to generate functions for conversion between names (as atoms) and numbers and conversely for the specified"}],
                                            0,false},
                                           {text,"\fEnumTypeName"},
                                           {sep,
                                            [{text,
                                              "t. There can be multiple occurrences of this option to specify several type names. The type names must be declared as"}],
                                            0,false},
                                           {text,"\fENUMERATIONS"},
                                           {sep,
                                            [{text,
                                              "\ein the ASN.1 specification."}],
                                            0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,[{text,[2,73,102]}],0,false},
                                           {text,"\fEnumTypeName"},
                                           {sep,
                                            [{text,
                                              "Tdoes not exist in the ASN.1 specification, the compilation stops with an error code."}],
                                            0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,
                                              ",The generated conversion functions are named"}],
                                            0,false},
                                           {text,
                                            [23,110,97,109,101,50,110,117,109,
                                             95,69,110,117,109,84,121,112,101,
                                             78,97,109,101,47,49]},
                                           {sep,
                                            [{text,[3,97,110,100]}],
                                            0,false},
                                           {text,
                                            [23,110,117,109,50,110,97,109,101,
                                             95,69,110,117,109,84,121,112,101,
                                             78,97,109,101,47,49]},
                                           {sep,[{text,[1,46]}],0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}}],
                                   0,false},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,[{text,[5,110,111,111,98,106]}],0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          "BDo not compile (that is, do not produce object code) the generated"}],
                                        0,false},
                                       {text,[4,46,101,114,108]},
                                       {sep,
                                        [{text,
                                          "Ifile. If this option is omitted, the generated Erlang module is compiled."}],
                                        0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{text,
                                  [15,123,105,44,32,73,110,99,108,117,100,101,
                                   68,105,114,125]}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,[{text,[4,65,100,100,115]}],0,false},
                                     {text,"\nIncludeDir"},
                                     {sep,
                                      [{text,
                                        [22,116,111,32,116,104,101,32,115,101,
                                         97,114,99,104,45,112,97,116,104,32,
                                         102,111,114]}],
                                      0,false},
                                     {text,[7,46,97,115,110,49,100,98]},
                                     {sep,[{text,[3,97,110,100]}],0,false},
                                     {text,[5,65,83,78,46,49]},
                                     {sep,
                                      [{text,
                                        "+source files. The compiler tries to open an"}],
                                      0,false},
                                     {text,[7,46,97,115,110,49,100,98]},
                                     {sep,
                                      [{text,
                                        "3file when a module imports definitions from another"}],
                                      0,false},
                                     {text,[5,65,83,78,46,49]},
                                     {sep,[{text,"\rmodule. If no"}],0,false},
                                     {text,[7,46,97,115,110,49,100,98]},
                                     {sep,
                                      [{text,
                                        [18,102,105,108,101,32,105,115,32,102,
                                         111,117,110,100,44,32,116,104,101]}],
                                      0,false},
                                     {text,[5,65,83,78,46,49]},
                                     {sep,
                                      [{text,
                                        [30,115,111,117,114,99,101,32,102,105,
                                         108,101,32,105,115,32,112,97,114,115,
                                         101,100,46,32,83,101,118,101,114,97,
                                         108]}],
                                      0,false},
                                     {text,
                                      [15,123,105,44,32,73,110,99,108,117,100,
                                       101,68,105,114,125]},
                                     {sep,[{text,"\rcan be given."}],0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,[{text,"\r{outdir, Dir}"}],0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      [19,83,112,101,99,105,102,105,101,115,
                                       32,100,105,114,101,99,116,111,114,
                                       121]}],
                                    0,false},
                                   {text,[3,68,105,114]},
                                   {sep,
                                    [{text,
                                      "uwhere all generated files are to be placed. If this option is omitted, the files are placed in the current directory."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,"\nasn1config"}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {sep,
                           [{above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      [132,87,104,101,110,32,117,115,105,110,
                                       103,32,111,110,101,32,111,102,32,116,
                                       104,101,32,115,112,101,99,105,97,108,
                                       105,122,101,100,32,100,101,99,111,100,
                                       101,115,44,32,101,120,99,108,117,115,
                                       105,118,101,32,111,114,32,115,101,108,
                                       101,99,116,105,118,101,32,100,101,99,
                                       111,100,101,44,32,105,110,115,116,114,
                                       117,99,116,105,111,110,115,32,109,117,
                                       115,116,32,98,101,32,103,105,118,101,
                                       110,32,105,110,32,97,32,99,111,110,102,
                                       105,103,117,114,97,116,105,111,110,32,
                                       102,105,108,101,46,32,79,112,116,105,
                                       111,110]}],
                                    0,false},
                                   {text,"\nasn1config"},
                                   {sep,
                                    [{text,
                                      " enables specialized decodes and takes the configuration file in concern. The configuration file has the same name as the ASN.1 specification, but with extension"}],
                                    0,false},
                                   {text,"\v.asn1config"},
                                   {sep,[{text,[1,46]}],0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      "2For instructions for exclusive decode, see Section"}],
                                    0,false},
                                   {text,
                                    [16,69,120,99,108,117,115,105,118,101,32,
                                     68,101,99,111,100,101]},
                                   {sep,
                                    [{text,
                                      [20,105,110,32,116,104,101,32,85,115,
                                       101,114,39,115,32,71,117,105,100,101,
                                       46]}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      "2For instructions for selective decode, see Section"}],
                                    0,false},
                                   {text,
                                    [16,83,101,108,101,99,116,105,118,101,32,
                                     68,101,99,111,100,101]},
                                   {sep,
                                    [{text,
                                      [20,105,110,32,116,104,101,32,85,115,
                                       101,114,39,115,32,71,117,105,100,101,
                                       46]}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}}],
                           0,false},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,[{text,"\nundec_rest"}],0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  "ÞA buffer that holds a message, being decoded it can also have some following bytes. Those following bytes can now be returned together with the decoded value. If an ASN.1 specification is compiled with this option, a tuple"}],
                                0,false},
                               {text,
                                [17,123,111,107,44,32,86,97,108,117,101,44,32,
                                 82,101,115,116,125]},
                               {sep,[{text,"\fis returned."}],0,false},
                               {text,[4,82,101,115,116]},
                               {sep,
                                [{text,
                                  "Zcan be a list or a binary. Earlier versions of the compiler ignored those following bytes."}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,[{text,"\rno_ok_wrapper"}],0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                [31,87,105,116,104,32,116,104,105,115,32,111,
                                 112,116,105,111,110,44,32,116,104,101,32,103,
                                 101,110,101,114,97,116,101,100]}],
                              0,false},
                             {text,"\bencode/2"},
                             {sep,[{text,[3,97,110,100]}],0,false},
                             {text,"\bdecode/2"},
                             {sep,
                              [{text,
                                "5functions do not wrap a successful return value in an"}],
                              0,false},
                             {text,"\b{ok,...}"},
                             {sep,
                              [{text,
                                "8tuple. If any error occurs, an exception will be raised."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,"\e{macro_name_prefix, Prefix}"}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              ";All macro names generated by the compiler are prefixed with"}],
                            0,false},
                           {text,[6,80,114,101,102,105,120]},
                           {sep,
                            [{text,
                              "r. This is useful when multiple protocols that contain macros with identical names are included in a single module."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{text,
                      [28,123,114,101,99,111,114,100,95,110,97,109,101,95,112,
                       114,101,102,105,120,44,32,80,114,101,102,105,120,125]}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            "<All record names generated by the compiler are prefixed with"}],
                          0,false},
                         {text,[6,80,114,101,102,105,120]},
                         {sep,
                          [{text,
                            "s. This is useful when multiple protocols that contain records with identical names are included in a single module."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[7,118,101,114,98,111,115,101]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "NCauses more verbose information from the compiler describing what it is doing."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [18,119,97,114,110,105,110,103,115,95,97,115,95,101,114,114,
                   111,114,115]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,"(Causes warnings to be treated as errors."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "NAny more option that is applied is passed to the final step when the generated"}],
             0,false},
            {text,[6,42,46,101,114,108,42]},
            {sep,
             [{text,
               [17,102,105,108,101,32,105,115,32,99,111,109,112,105,108,101,
                100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+The compiler generates the following files:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [16,42,65,115,110,49,109,111,100,117,108,101,46,104,114,108,42]},
           {sep,[{text,[7,40,105,102,32,97,110,121]}],0,false},
           {text,[5,42,83,69,84,42]},
           {sep,[{text,[2,111,114]}],0,false},
           {text,"\n*SEQUENCE*"},
           {sep,[{text,"\vis defined)"}],0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [16,42,65,115,110,49,109,111,100,117,108,101,46,101,114,108,42]},
           {sep,
            [{text,
              "8- Erlang module with encode, decode, and value functions"}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [19,42,65,115,110,49,109,111,100,117,108,101,46,97,115,110,49,100,
            98,42]},
          {sep,
           [{text,"7- Intermediate format used by the compiler when modules"}],
           0,false},
          {text,"\b*IMPORT*"},
          {sep,
           [{text,
             [28,100,101,102,105,110,105,116,105,111,110,115,32,102,114,111,
              109,32,101,97,99,104,32,111,116,104,101,114,46]}],
           0,false}],
         0,false}],
       0,false}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"7## value(Module, Type) -> {ok, Value} | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")Creates an ASN.1 value for test purposes."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [22,77,111,100,117,108,101,32,61,32,84,121,112,101,32,61,32,97,116,
           111,109,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "\\Returns an Erlang term that is an example of a valid Erlang representation of a value of the"}],
             0,false},
            {text,[7,42,65,83,78,46,49,42]},
            {sep,[{text,[4,116,121,112,101]}],0,false},
            {text,[6,42,84,121,112,101,42]},
            {sep,
             [{text,
               "p. The value is a random value and subsequent calls to this function will for most types return different values."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [14,67,117,114,114,101,110,116,108,121,44,32,116,
                           104,101]}],
                        0,false},
                       {text,[7,42,118,97,108,117,101,42]},
                       {sep,
                        [{text,
                          "Çfunction has many limitations. Essentially, it will mostly work for old specifications based on the 1997 standard for ASN.1, but not for most modern-style applications. Another limitation is that the"}],
                        0,false},
                       {text,[7,42,118,97,108,117,101,42]},
                       {sep,
                        [{text,
                          "\\function may not work if options that change code generations strategies such as the options"}],
                        0,false},
                       {text,
                        [19,42,109,97,99,114,111,95,110,97,109,101,95,112,114,
                         101,102,105,120,42]},
                       {sep,[{text,[3,97,110,100]}],0,false},
                       {text,
                        [20,42,114,101,99,111,114,100,95,110,97,109,101,95,
                         112,114,101,102,105,120,42]},
                       {sep,
                        [{text,
                          [15,104,97,118,101,32,98,101,101,110,32,117,115,101,
                           100,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"'## test(Module) -> ok | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"7## test(Module, Type | Options) -> ok | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,">## test(Module, Type, Value | Options) -> ok | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "BPerforms a test of encode and decode for types in an ASN.1 module."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [22,77,111,100,117,108,101,32,61,32,84,121,112,101,32,61,32,97,116,
            111,109,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},{sep,[{text,"\eOptions = [{i, IncludeDir}]"}],0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"0Performs a test of encode and decode of types in"}],
             0,false},
            {text,"\b*Module*"},
            {sep,
             [{text,
               "Ì. The generated functions are called by this function. This function is useful during test to secure that the generated encode and decode functions as well as the general runtime support work as expected."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [14,67,117,114,114,101,110,116,108,121,44,32,116,
                           104,101]}],
                        0,false},
                       {text,[6,42,116,101,115,116,42]},
                       {sep,
                        [{text,
                          "Ëfunctions have many limitations. Essentially, they will mostly work for old specifications based on the 1997 standard for ASN.1, but not for most modern-style applications. Another limitation is that the"}],
                        0,false},
                       {text,[6,42,116,101,115,116,42]},
                       {sep,
                        [{text,
                          "]functions may not work if options that change code generations strategies such as the options"}],
                        0,false},
                       {text,
                        [19,42,109,97,99,114,111,95,110,97,109,101,95,112,114,
                         101,102,105,120,42]},
                       {sep,[{text,[3,97,110,100]}],0,false},
                       {text,
                        [20,42,114,101,99,111,114,100,95,110,97,109,101,95,
                         112,114,101,102,105,120,42]},
                       {sep,
                        [{text,
                          [15,104,97,118,101,32,98,101,101,110,32,117,115,101,
                           100,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\b*test/1*"},
           {sep,
            [{text,
              [26,105,116,101,114,97,116,101,115,32,111,118,101,114,32,97,108,
               108,32,116,121,112,101,115,32,105,110]}],
            0,false},
           {text,"\b*Module*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\b*test/2*"},
           {sep,[{text,"\ntests type"}],0,false},
           {text,[6,42,84,121,112,101,42]},
           {sep,
            [{text,
              [20,119,105,116,104,32,97,32,114,97,110,100,111,109,32,118,97,
               108,117,101,46]}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"\b*test/3*"},
          {sep,[{text,"\ntests type"}],0,false},
          {text,[6,42,84,121,112,101,42]},
          {sep,[{text,[4,119,105,116,104]}],0,false},
          {text,[7,42,86,97,108,117,101,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "@Schematically, the following occurs for each type in the module:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "~\n{ok, Value} = asn1ct:value(Module, Type),\n{ok, Bytes} = Module:encode(Type, Value),\n{ok, Value} = Module:decode(Type, Bytes)."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,[6,42,116,101,115,116,42]},
            {sep,
             [{text,
               [17,102,117,110,99,116,105,111,110,115,32,117,115,101,32,116,
                104,101]}],
             0,false},
            {text,"\n**.asn1db*"},
            {sep,
             [{text,
               "xfiles for all included modules. If they are located in a different directory than the current working directory, use the"}],
             0,false},
            {text,"\t*include*"},
            {sep,
             [{text,
               "foption to add paths. This is only needed when automatically generating values. For static values using"}],
             0,false},
            {text,[7,42,86,97,108,117,101,42]},
            {sep,
             [{text,
               [22,110,111,32,111,112,116,105,111,110,115,32,97,114,101,32,
                110,101,101,100,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
