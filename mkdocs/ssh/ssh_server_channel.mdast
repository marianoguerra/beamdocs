{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [20,35,32,115,115,104,95,115,101,114,118,101,114,95,99,104,97,110,
          110,101,108]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [20,35,32,115,115,104,95,115,101,114,118,101,114,95,99,104,97,110,
          110,101,108]},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "=-behaviour(ssh_server_channel). (Replaces ssh_daemon_channel)"}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,"(This module replaces ssh_daemon_channel."}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "Â¥The old module is still available for compatibility, but should not be used for new programs. The old module will not be maintained except for some error corrections"}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [132,83,83,72,32,115,101,114,118,105,99,101,115,32,40,99,
                     108,105,101,110,116,115,32,97,110,100,32,115,101,114,118,
                     101,114,115,41,32,97,114,101,32,105,109,112,108,101,109,
                     101,110,116,101,100,32,97,115,32,99,104,97,110,110,101,
                     108,115,32,116,104,97,116,32,97,114,101,32,109,117,108,
                     116,105,112,108,101,120,101,100,32,111,118,101,114,32,97,
                     110,32,83,83,72,32,99,111,110,110,101,99,116,105,111,110,
                     32,97,110,100,32,99,111,109,109,117,110,105,99,97,116,
                     101,115,32,111,118,101,114,32,116,104,101]}],
                  0,false},
                 {text,
                  ">[SSH Connection Protocol](http://www.ietf.org/rfc/rfc4254.txt)"},
                 {sep,
                  [{text,
                    [450,46,32,84,104,105,115,32,109,111,100,117,108,101,32,
                     112,114,111,118,105,100,101,115,32,97,32,99,97,108,108,
                     98,97,99,107,32,65,80,73,32,116,104,97,116,32,116,97,107,
                     101,115,32,99,97,114,101,32,111,102,32,103,101,110,101,
                     114,105,99,32,99,104,97,110,110,101,108,32,97,115,112,
                     101,99,116,115,32,102,111,114,32,100,97,101,109,111,110,
                     115,44,32,115,117,99,104,32,97,115,32,102,108,111,119,32,
                     99,111,110,116,114,111,108,32,97,110,100,32,99,108,111,
                     115,101,32,109,101,115,115,97,103,101,115,46,32,73,116,
                     32,108,101,116,115,32,116,104,101,32,99,97,108,108,98,97,
                     99,107,32,102,117,110,99,116,105,111,110,115,32,116,97,
                     107,101,32,99,97,114,101,32,111,102,32,116,104,101,32,
                     115,101,114,118,105,99,101,32,40,97,112,112,108,105,99,
                     97,116,105,111,110,41,32,115,112,101,99,105,102,105,99,
                     32,112,97,114,116,115,46,32,84,104,105,115,32,98,101,104,
                     97,118,105,111,114,32,97,108,115,111,32,101,110,115,117,
                     114,101,115,32,116,104,97,116,32,116,104,101,32,99,104,
                     97,110,110,101,108,32,112,114,111,99,101,115,115,32,104,
                     111,110,111,114,115,32,116,104,101,32,112,114,105,110,99,
                     105,112,97,108,32,111,102,32,97,110,32,79,84,80,45,112,
                     114,111,99,101,115,115,32,115,111,32,116,104,97,116,32,
                     105,116,32,99,97,110,32,98,101,32,112,97,114,116,32,111,
                     102,32,97,32,115,117,112,101,114,118,105,115,111,114,32,
                     116,114,101,101,46,32,84,104,105,115,32,105,115,32,97,32,
                     114,101,113,117,105,114,101,109,101,110,116,32,111,102,
                     32,99,104,97,110,110,101,108,32,112,114,111,99,101,115,
                     115,101,115,32,105,109,112,108,101,109,101,110,116,105,
                     110,103,32,97,32,115,117,98,115,121,115,116,101,109,32,
                     116,104,97,116,32,119,105,108,108,32,98,101,32,97,100,
                     100,101,100,32,116,111,32,116,104,101]}],
                  0,false},
                 {text,[5,42,115,115,104,42]},
                 {sep,
                  [{text,
                    [29,97,112,112,108,105,99,97,116,105,111,110,115,32,115,
                     117,112,101,114,118,105,115,111,114,32,116,114,101,101,
                     46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "1When implementing a client subsystem handler, use"}],
                    0,false},
                   {text,
                    "4[-behaviour(ssh_client_channel)](ssh_client_channel)"},
                   {sep,[{text,"\binstead."}],0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [21,35,35,32,67,97,108,108,98,97,99,107,32,70,117,110,99,116,105,111,
         110,115]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"1The following functions are to be exported from a"}],
            0,false},
           {text,
            [20,42,115,115,104,95,115,101,114,118,101,114,95,99,104,97,110,
             110,101,108,42]},
           {sep,
            [{text,
              [16,99,97,108,108,98,97,99,107,32,109,111,100,117,108,101,46]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "S## Module:init(Args) -> {ok, State} | {ok, State, timeout()} |\n      {stop, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "eMakes necessary initializations and returns the initial channel state if the initializations succeed."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,[{text,[1,42]},{sep,[{text,"\rArgs = term()"}],0,false}],0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,
             [{text,
               [16,76,97,115,116,32,97,114,103,117,109,101,110,116,32,116,
                111]}],
             0,false},
            {text,[14,42,115,116,97,114,116,95,108,105,110,107,47,52,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,83,116,97,116,101,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "eMakes necessary initializations and returns the initial channel state if the initializations succeed."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "HThe time-out values that can be returned have the same semantics as in a"}],
             0,false},
            {text,
             [26,91,103,101,110,95,115,101,114,118,101,114,93,40,46,47,103,
              101,110,95,115,101,114,118,101,114,41]},
            {sep,
             [{text,
               [25,46,32,73,102,32,116,104,101,32,116,105,109,101,45,111,117,
                116,32,111,99,99,117,114,115,44]}],
             0,false},
            {text,"$[handle_msg/2](#Module:handle_msg-2)"},
            {sep,[{text,"\fis called as"}],0,false},
            {text,
             [28,42,104,97,110,100,108,101,95,109,115,103,40,116,105,109,101,
              111,117,116,44,32,83,116,97,116,101,41,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "P## Module:handle_msg(Msg, State) -> {ok, State} |\n      {stop, ChannelId, State}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "`Handles other messages than SSH connection protocol, call, or cast messages sent to the channel."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [22,77,115,103,32,61,32,116,105,109,101,111,117,116,32,124,32,116,
           101,114,109,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\vChannelId ="}],0,false},
           {text,")[ssh:channel_id()](./ssh#type-channel_id)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,83,116,97,116,101,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "`Handles other messages than SSH Connection Protocol, call, or cast messages sent to the channel."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "wPossible Erlang 'EXIT' messages is to be handled by this function and all channels are to handle the following message."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,116,62]},
              {sep,
               [{text,
                 "8{ssh_channel_up, ssh:channel_id(), ssh:connection_ref()}"}],
               0,false},
              {text,[5,60,47,100,116,62]}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [267,84,104,105,115,32,105,115,32,116,104,101,32,102,
                         105,114,115,116,32,109,101,115,115,97,103,101,32,116,
                         104,97,116,32,116,104,101,32,99,104,97,110,110,101,
                         108,32,114,101,99,101,105,118,101,115,46,32,84,104,
                         105,115,32,105,115,32,101,115,112,101,99,105,97,108,
                         108,121,32,117,115,101,102,117,108,32,105,102,32,116,
                         104,101,32,115,101,114,118,101,114,32,119,97,110,116,
                         115,32,116,111,32,115,101,110,100,32,97,32,109,101,
                         115,115,97,103,101,32,116,111,32,116,104,101,32,99,
                         108,105,101,110,116,32,119,105,116,104,111,117,116,
                         32,102,105,114,115,116,32,114,101,99,101,105,118,105,
                         110,103,32,97,32,109,101,115,115,97,103,101,32,102,
                         114,111,109,32,105,116,46,32,73,102,32,116,104,101,
                         32,109,101,115,115,97,103,101,32,105,115,32,110,111,
                         116,32,117,115,101,102,117,108,32,102,111,114,32,121,
                         111,117,114,32,112,97,114,116,105,99,117,108,97,114,
                         32,115,99,101,110,97,114,105,111,44,32,105,103,110,
                         111,114,101,32,105,116,32,98,121,32,105,109,109,101,
                         100,105,97,116,101,108,121,32,114,101,116,117,114,
                         110,105,110,103]}],
                      0,false},
                     {text,"\v{ok, State}"},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "T## Module:handle_ssh_msg(Msg, State) -> {ok, State} | {stop,\n      ChannelId, State}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[7,72,97,110,100,108,101,115]}],0,false},
          {text,[5,42,115,115,104,42]},
          {sep,
           [{text,
             [29,99,111,110,110,101,99,116,105,111,110,32,112,114,111,116,111,
              99,111,108,32,109,101,115,115,97,103,101,115,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [28,77,115,103,32,61,32,115,115,104,95,99,111,110,110,101,99,116,
           105,111,110,58,101,118,101,110,116,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\vChannelId ="}],0,false},
           {text,")[ssh:channel_id()](./ssh#type-channel_id)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,83,116,97,116,101,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "cHandles SSH Connection Protocol messages that may need service-specific attention. For details, see"}],
             0,false},
            {text,"([ssh_connection:event()](ssh_connection)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"-The following message is taken care of by the"}],
             0,false},
            {text,
             [20,42,115,115,104,95,115,101,114,118,101,114,95,99,104,97,110,
              110,101,108,42]},
            {sep,[{text,"\tbehavior."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,116,62]},
              {sep,
               [{text,
                 [26,123,99,108,111,115,101,100,44,32,115,115,104,58,99,104,
                  97,110,110,101,108,95,105,100,40,41,125]}],
               0,false},
              {text,[5,60,47,100,116,62]}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [149,84,104,101,32,99,104,97,110,110,101,108,32,98,
                         101,104,97,118,105,111,114,32,115,101,110,100,115,32,
                         97,32,99,108,111,115,101,32,109,101,115,115,97,103,
                         101,32,116,111,32,116,104,101,32,111,116,104,101,114,
                         32,115,105,100,101,44,32,105,102,32,115,117,99,104,
                         32,97,32,109,101,115,115,97,103,101,32,104,97,115,32,
                         110,111,116,32,97,108,114,101,97,100,121,32,98,101,
                         101,110,32,115,101,110,116,46,32,84,104,101,110,32,
                         105,116,32,116,101,114,109,105,110,97,116,101,115,32,
                         116,104,101,32,99,104,97,110,110,101,108,32,119,105,
                         116,104,32,114,101,97,115,111,110]}],
                      0,false},
                     {text,[6,110,111,114,109,97,108]},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"'## Module:terminate(Reason, State) -> _"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"4Does cleaning up before channel process termination."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,83,116,97,116,101,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "kThis function is called by a channel process when it is about to terminate. Before this function is called,"}],
             0,false},
            {text,"2[ssh_connection:close/2](./ssh_connection#close-2)"},
            {sep,
             [{text,
               [151,105,115,32,99,97,108,108,101,100,44,32,105,102,32,105,116,
                32,104,97,115,32,110,111,116,32,98,101,101,110,32,99,97,108,
                108,101,100,32,101,97,114,108,105,101,114,46,32,84,104,105,
                115,32,102,117,110,99,116,105,111,110,32,100,111,101,115,32,
                97,110,121,32,110,101,99,101,115,115,97,114,121,32,99,108,101,
                97,110,105,110,103,32,117,112,46,32,87,104,101,110,32,105,116,
                32,114,101,116,117,114,110,115,44,32,116,104,101,32,99,104,97,
                110,110,101,108,32,112,114,111,99,101,115,115,32,116,101,114,
                109,105,110,97,116,101,115,32,119,105,116,104,32,114,101,97,
                115,111,110]}],
             0,false},
            {text,"\b*Reason*"},
            {sep,
             [{text,
               [30,46,32,84,104,101,32,114,101,116,117,114,110,32,118,97,108,
                117,101,32,105,115,32,105,103,110,111,114,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
