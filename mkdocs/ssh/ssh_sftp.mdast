{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n# ssh_sftp"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n# ssh_sftp"},null},null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\fSFTP client."}],0,false}],0,true},null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "uThis module implements an SSH FTP (SFTP) client. SFTP is a secure, encrypted file transfer service available for SSH."}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r## DATA TYPES"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [133,84,121,112,101,32,100,101,102,105,110,105,116,105,111,110,
              115,32,116,104,97,116,32,97,114,101,32,117,115,101,100,32,109,
              111,114,101,32,116,104,97,110,32,111,110,99,101,32,105,110,32,
              116,104,105,115,32,109,111,100,117,108,101,44,32,111,114,32,97,
              98,115,116,114,97,99,116,105,111,110,115,32,116,111,32,105,110,
              100,105,99,97,116,101,32,116,104,101,32,105,110,116,101,110,100,
              101,100,32,117,115,101,32,111,102,32,116,104,101,32,100,97,116,
              97,32,116,121,112,101,44,32,111,114,32,98,111,116,104,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\breason()"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,[{text,[1,61]}],0,false},
                           {text,"\eatom() | string() | tuple()"},
                           {sep,
                            [{text,
                              "4A description of the reason why an operation failed."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,[{text,[3,84,104,101]}],0,false},
                           {text,[6,97,116,111,109,40,41]},
                           {sep,
                            [{text,
                              "Wvalue is formed from the sftp error codes in the protocol-level responses as defined in"}],
                            0,false},
                           {text," draft-ietf-secsh-filexfer-13.txt"},
                           {sep,[{text,"\fsection 9.1."}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [22,84,104,101,32,99,111,100,101,115,32,97,114,
                               101,32,110,97,109,101,100,32,97,115]}],
                            0,false},
                           {text,"\bSSH_FX_*"},
                           {sep,
                            [{text,
                              "Jwhich are transformed into lowercase of the star-part. E.g. the error code"}],
                            0,false},
                           {text,
                            [19,83,83,72,95,70,88,95,78,79,95,83,85,67,72,95,
                             70,73,76,69]},
                           {sep,
                            [{text,
                              [14,119,105,108,108,32,99,97,117,115,101,32,116,
                               104,101]}],
                            0,false},
                           {text,"\breason()"},
                           {sep,[{text,[5,116,111,32,98,101]}],0,false},
                           {text,"\fno_such_file"},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,[{text,[3,84,104,101]}],0,false},
                           {text,"\bstring()"},
                           {sep,
                            [{text,
                              [140,114,101,97,115,111,110,32,105,115,32,116,
                               104,101,32,101,114,114,111,114,32,105,110,102,
                               111,114,109,97,116,105,111,110,32,102,114,111,
                               109,32,116,104,101,32,115,101,114,118,101,114,
                               32,105,110,32,99,97,115,101,32,111,102,32,97,
                               110,32,101,120,105,116,45,115,105,103,110,97,
                               108,46,32,73,102,32,116,104,97,116,32,105,110,
                               102,111,114,109,97,116,105,111,110,32,105,115,
                               32,101,109,112,116,121,44,32,116,104,101,32,
                               114,101,97,115,111,110,32,105,115,32,116,104,
                               101,32,101,120,105,116,32,115,105,103,110,97,
                               108,32,110,97,109,101,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,[{text,[3,84,104,101]}],0,false},
                           {text,[7,116,117,112,108,101,40,41]},
                           {sep,
                            [{text," reason are other errors like the"}],
                            0,false},
                           {text,
                            [23,123,101,120,105,116,95,115,116,97,116,117,115,
                             44,105,110,116,101,103,101,114,40,41,125]},
                           {sep,
                            [{text,
                              [28,105,102,32,116,104,101,32,101,120,105,116,
                               32,115,116,97,116,117,115,32,105,115,32,110,
                               111,116,32,48,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{text,
                    [18,99,111,110,110,101,99,116,105,111,110,95,114,101,102,
                     40,41,32,61]}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,"\bopaque()"},
                       {sep,
                        [{text,
                          [16,45,32,97,115,32,114,101,116,117,114,110,101,100,
                           32,98,121]}],
                        0,false},
                       {text,"\rssh#connect-3"}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,"\ttimeout()"}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,[{text,[1,61]}],0,false},
                     {text,
                      [20,105,110,102,105,110,105,116,121,32,124,32,105,110,
                       116,101,103,101,114,40,41]},
                     {sep,
                      [{text,"\"in milliseconds. Default infinity."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f## Time-outs"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"4If the request functions for the SFTP channel return"}],
            0,false},
           {text,
            [18,42,123,101,114,114,111,114,44,32,116,105,109,101,111,117,116,
             125,42]},
           {sep,
            [{text,
              "B, no answer was received from the server within the expected time."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [142,84,104,101,32,114,101,113,117,101,115,116,32,109,97,121,32,
             104,97,118,101,32,114,101,97,99,104,101,100,32,116,104,101,32,
             115,101,114,118,101,114,32,97,110,100,32,109,97,121,32,104,97,
             118,101,32,98,101,101,110,32,112,101,114,102,111,114,109,101,100,
             46,32,72,111,119,101,118,101,114,44,32,110,111,32,97,110,115,119,
             101,114,32,119,97,115,32,114,101,99,101,105,118,101,100,32,102,
             114,111,109,32,116,104,101,32,115,101,114,118,101,114,32,119,105,
             116,104,105,110,32,116,104,101,32,101,120,112,101,99,116,101,100,
             32,116,105,109,101,46]}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "N## apread(ChannelPid, Handle, Position, Len) -> {async, N} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Reads asynchronously from an open file."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [20,80,111,115,105,116,105,111,110,32,61,32,105,110,116,101,103,
            101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,76,101,110,32,61,32,105,110,116,101,103,101,114,40,41]}],
        0,false}],
      0,false}},
    {sep,[{text,[1,42]},{sep,[{text,"\nN = term()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\n*apread/4*"},
            {sep,
             [{text,
               "7function reads from a specified position, combining the"}],
             0,false},
            {text,
             [25,91,112,111,115,105,116,105,111,110,45,51,93,40,35,112,111,
              115,105,116,105,111,110,45,51,41]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [19,91,97,114,101,97,100,45,51,93,40,35,97,114,101,97,100,45,51,
              41]},
            {sep,[{text,"\nfunctions."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "P## apwrite(ChannelPid, Handle, Position, Data) -> {async, N} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"&Writes asynchronously to an open file."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,
               40,41]}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [20,80,111,115,105,116,105,111,110,32,61,32,105,110,116,101,103,
              101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,76,101,110,32,61,32,105,110,116,101,103,101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,68,97,116,97,32,61,32,98,105,110,97,114,121,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
           40,41]}],
        0,false}],
      0,false}},
    {sep,[{text,[1,42]},{sep,[{text,"\nN = term()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\v*apwrite/4*"},
            {sep,
             [{text,
               "6function writes to a specified position, combining the"}],
             0,false},
            {text,
             [25,91,112,111,115,105,116,105,111,110,45,51,93,40,35,112,111,
              115,105,116,105,111,110,45,51,41]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [21,91,97,119,114,105,116,101,45,51,93,40,35,97,119,114,105,116,
              101,45,51,41]},
            {sep,[{text,"\nfunctions."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "C## aread(ChannelPid, Handle, Len) -> {async, N} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Reads asynchronously from an open file."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [20,80,111,115,105,116,105,111,110,32,61,32,105,110,116,101,103,
            101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,76,101,110,32,61,32,105,110,116,101,103,101,114,40,41]}],
        0,false}],
      0,false}},
    {sep,[{text,[1,42]},{sep,[{text,"\nN = term()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "eReads from an open file, without waiting for the result. If the handle is valid, the function returns"}],
             0,false},
            {text,"\f*{async, N}*"},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,[3,42,78,42]},
            {sep,
             [{text,"2is a term guaranteed to be unique between calls of"}],
             0,false},
            {text,[7,42,97,114,101,97,100,42]},
            {sep,
             [{text,
               "X. The actual data is sent as a message to the calling process. This message has the form"}],
             0,false},
            {text,
             [26,42,123,97,115,121,110,99,95,114,101,112,108,121,44,32,78,44,
              32,82,101,115,117,108,116,125,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,"\b*Result*"},
            {sep,[{text,"#is the result from the read, either"}],0,false},
            {text,"\f*{ok, Data}*"},
            {sep,[{text,[1,44]}],0,false},
            {text,[5,42,101,111,102,42]},
            {sep,[{text,[4,44,32,111,114]}],0,false},
            {text,
             [19,42,123,101,114,114,111,114,44,32,114,101,97,115,111,110,40,
              41,125,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "E## awrite(ChannelPid, Handle, Data) -> {async, N} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"&Writes asynchronously to an open file."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
              41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [20,80,111,115,105,116,105,111,110,32,61,32,105,110,116,101,103,
             101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,76,101,110,32,61,32,105,110,116,101,103,101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,68,97,116,97,32,61,32,98,105,110,97,114,121,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "dWrites to an open file, without waiting for the result. If the handle is valid, the function returns"}],
             0,false},
            {text,"\f*{async, N}*"},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,[3,42,78,42]},
            {sep,
             [{text,"2is a term guaranteed to be unique between calls of"}],
             0,false},
            {text,"\b*awrite*"},
            {sep,
             [{text,
               [19,46,32,84,104,101,32,114,101,115,117,108,116,32,111,102,32,
                116,104,101]}],
             0,false},
            {text,[7,42,119,114,105,116,101,42]},
            {sep,
             [{text,
               "Poperation is sent as a message to the calling process. This message has the form"}],
             0,false},
            {text,
             [26,42,123,97,115,121,110,99,95,114,101,112,108,121,44,32,78,44,
              32,82,101,115,117,108,116,125,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,"\b*Result*"},
            {sep,[{text,"$is the result from the write, either"}],0,false},
            {text,[4,42,111,107,42]},
            {sep,[{text,[4,44,32,111,114]}],0,false},
            {text,
             [19,42,123,101,114,114,111,114,44,32,114,101,97,115,111,110,40,
              41,125,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,99,108,111,115,101,40,67,104,97,110,110,101,108,80,105,
        100,44,32,72,97,110,100,108,101,41,32,45,62]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "?## close(ChannelPid, Handle, Timeout) -> ok | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [22,67,108,111,115,101,115,32,97,110,32,111,112,101,110,32,104,97,
            110,100,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
           41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             ";Closes a handle to an open file or directory on the server."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [30,35,35,32,100,101,108,101,116,101,40,67,104,97,110,110,101,108,80,
        105,100,44,32,78,97,109,101,41,32,45,62]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,">## delete(ChannelPid, Name, Timeout) -> ok | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[15,68,101,108,101,116,101,115,32,97,32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
           41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,78,97,109,101,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,68,101,108,101,116,101,115,32,116,104,101,32,102,105,108,
                101,32,115,112,101,99,105,102,105,101,100,32,98,121]}],
             0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,100,101,108,95,100,105,114,40,67,104,97,110,110,101,108,
        80,105,100,44,32,78,97,109,101,41,32,45,62]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "?## del_dir(ChannelPid, Name, Timeout) -> ok | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,[{sep,[{text,"\eDeletes an empty directory."}],0,false}],0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
           41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,78,97,109,101,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text," Deletes a directory specified by"}],0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,
             [{text,
               "D. The directory must be empty before it can be successfully deleted."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text," ## list_dir(ChannelPid, Path) ->"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "M## list_dir(ChannelPid, Path, Timeout) -> {ok, Filenames} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,76,105,115,116,115,32,116,104,101,32,100,105,114,101,99,116,
            111,114,121,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,80,97,116,104,32,61,32,115,116,114,105,110,103,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [22,70,105,108,101,110,97,109,101,115,32,61,32,91,70,105,108,101,
            110,97,109,101,93]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,70,105,108,101,110,97,109,101,32,61,32,115,116,114,105,110,103,
           40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "VLists the given directory on the server, returning the filenames as a list of strings."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text," ## make_dir(ChannelPid, Name) ->"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "@## make_dir(ChannelPid, Name, Timeout) -> ok | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,67,114,101,97,116,101,115,32,97,32,100,105,114,101,99,116,111,
            114,121,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
           41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,78,97,109,101,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text," Creates a directory specified by"}],0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text,[1,46]}],0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,
             [{text,
               "cmust be a full path to a new directory. The directory can only be created in an existing directory."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,",## make_symlink(ChannelPid, Name, Target) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "L## make_symlink(ChannelPid, Name, Target, Timeout) -> ok | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [24,67,114,101,97,116,101,115,32,97,32,115,121,109,98,111,108,105,
            99,32,108,105,110,107,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
           41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,78,97,109,101,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,84,97,114,103,101,116,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"#Creates a symbolic link pointing to"}],0,false},
            {text,"\b*Target*"},
            {sep,[{text,"\rwith the name"}],0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\"## open(ChannelPid, File, Mode) ->"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "L## open(ChannelPid, File, Mode, Timeout) -> {ok, Handle} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"\"Opens a file and returns a handle."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
              41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[15,70,105,108,101,32,61,32,115,116,114,105,110,103,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,77,111,100,101,32,61,32,91,77,111,100,101,102,108,97,103,93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"9Modeflag = read | write | creat | trunc | append | binary"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
           40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ZOpens a file on the server and returns a handle, which can be used for reading or writing."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,111,112,101,110,100,105,114,40,67,104,97,110,110,101,108,
        80,105,100,44,32,80,97,116,104,41,32,45,62]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "I## opendir(ChannelPid, Path, Timeout) -> {ok, Handle} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Opens a directory and returns a handle."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
           41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,80,97,116,104,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "cOpens a handle to a directory on the server. The handle can be used for reading directory contents."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"&## open_tar(ChannelPid, Path, Mode) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "P## open_tar(ChannelPid, Path, Mode, Timeout) -> {ok, Handle} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"'Opens a tar file on the server to which"}],0,false},
          {text,"\f*ChannelPid*"},
          {sep,[{text,"\"is connected and returns a handle."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,
                        105,100,40,41]}],
                     0,false}],
                   0,false},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       [15,80,97,116,104,32,61,32,115,116,114,105,110,103,40,
                        41]}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      "@Mode = [read] | [write] | [read,EncryptOpt] | [write,DecryptOpt]"}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "3EncryptOpt = {crypto,{InitFun,EncryptFun,CloseFun}}"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,"*DecryptOpt = {crypto,{InitFun,DecryptFun}}"}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   "MInitFun = (fun() -> {ok,CryptoState}) | (fun() -> {ok,CryptoState,ChunkSize})"}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [19,67,114,121,112,116,111,83,116,97,116,101,32,61,32,97,
                   110,121,40,41]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,[{text,"%ChunkSize = undefined | pos_integer()"}],0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "9EncryptFun = (fun(PlainBin,CryptoState) -> EncryptResult)"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "WEncryptResult = {ok,EncryptedBin,CryptoState} | {ok,EncryptedBin,CryptoState,ChunkSize}"}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [19,80,108,97,105,110,66,105,110,32,61,32,98,105,110,97,114,121,
               40,41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [23,69,110,99,114,121,112,116,101,100,66,105,110,32,61,32,98,105,
              110,97,114,121,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "=DecryptFun = (fun(EncryptedBin,CryptoState) -> DecryptResult)"}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           "ODecryptResult = {ok,PlainBin,CryptoState} | {ok,PlainBin,CryptoState,ChunkSize}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          ";CloseFun = (fun(PlainBin,CryptoState) -> {ok,EncryptedBin})"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ";Opens a handle to a tar file on the server, associated with"}],
             0,false},
            {text,"\f*ChannelPid*"},
            {sep,
             [{text,
               "R. The handle can be used for remote tar creation and extraction, as defined by the"}],
             0,false},
            {text,"*[erl_tar:init/3](../stdlib/erl_tar#init-3)"},
            {sep,[{text,"\tfunction."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [28,70,111,114,32,99,111,100,101,32,101,120,97,109,112,101,108,
                32,115,101,101,32,83,101,99,116,105,111,110]}],
             0,false},
            {text,
             "<[SFTP Client with TAR Compression and Encryption](using_ssh)"},
            {sep,
             [{text,
               [23,105,110,32,116,104,101,32,115,115,104,32,85,115,101,114,
                115,32,71,117,105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\b*crypto*"},
            {sep,
             [{text,
               "¥mode option is applied to the generated stream of bytes prior to sending them to the SFTP server. This is intended for encryption but can be used for other purposes."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\t*InitFun*"},
            {sep,[{text,"\"is applied once prior to any other"}],0,false},
            {text,"\b*crypto*"},
            {sep,
             [{text,
               [23,111,112,101,114,97,116,105,111,110,46,32,84,104,101,32,114,
                101,116,117,114,110,101,100]}],
             0,false},
            {text,"\r*CryptoState*"},
            {sep,
             [{text,"0is then folded into repeated applications of the"}],
             0,false},
            {text,"\f*EncryptFun*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\f*DecryptFun*"},
            {sep,
             [{text,
               "s. The binary returned from those funs are sent further to the remote SFTP server. Finally, if doing encryption, the"}],
             0,false},
            {text,"\n*CloseFun*"},
            {sep,
             [{text,")is applied to the last piece of data. The"}],
             0,false},
            {text,"\n*CloseFun*"},
            {sep,
             [{text,
               "Iis responsible for padding (if needed) and encryption of that last piece."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\v*ChunkSize*"},
            {sep,
             [{text,
               [23,100,101,102,105,110,101,115,32,116,104,101,32,115,105,122,
                101,32,111,102,32,116,104,101]}],
             0,false},
            {text,"\n*PlainBin*"},
            {sep,[{text,[6,115,32,116,104,97,116]}],0,false},
            {text,"\v*EncodeFun*"},
            {sep,
             [{text,
               [21,105,115,32,97,112,112,108,105,101,100,32,116,111,46,32,73,
                102,32,116,104,101]}],
             0,false},
            {text,"\v*ChunkSize*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,"\v*undefined*"},
            {sep,
             [{text,
               [17,44,32,116,104,101,32,115,105,122,101,32,111,102,32,116,104,
                101]}],
             0,false},
            {text,"\n*PlainBin*"},
            {sep,
             [{text,
               "Es varies, because this is intended for stream crypto, whereas a fixed"}],
             0,false},
            {text,"\v*ChunkSize*"},
            {sep,
             [{text,
               [29,105,115,32,105,110,116,101,110,100,101,100,32,102,111,114,
                32,98,108,111,99,107,32,99,114,121,112,116,111,46]}],
             0,false},
            {text,"\v*ChunkSize*"},
            {sep,[{text,"'s can be changed in the return from the"}],0,false},
            {text,"\f*EncryptFun*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\f*DecryptFun*"},
            {sep,[{text,"\". The value can be changed between"}],0,false},
            {text,[15,42,112,111,115,95,105,110,116,101,103,101,114,40,41,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\v*undefined*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,",## position(ChannelPid, Handle, Location) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "Z## position(ChannelPid, Handle, Location, Timeout) -> {ok, NewPosition | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"!Sets the file position of a file."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
              41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "SLocation = Offset | {bof, Offset} | {cur, Offset} | {eof, Offset} | bof | cur | eof"}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,79,102,102,115,101,116,32,61,32,105,110,116,101,103,101,114,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
           40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [23,78,101,119,80,111,115,105,116,105,111,110,32,61,32,105,110,116,
          101,103,101,114,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"0Sets the file position of the file referenced by"}],
             0,false},
            {text,"\b*Handle*"},
            {sep,[{text,"\t. Returns"}],0,false},
            {text,
             [19,42,123,111,107,44,32,78,101,119,80,111,115,105,116,105,111,
              110,125,42]},
            {sep,
             [{text,"0(as an absolute offset) if successful, otherwise"}],
             0,false},
            {text,
             [19,42,123,101,114,114,111,114,44,32,114,101,97,115,111,110,40,
              41,125,42]},
            {sep,[{text,[1,46]}],0,false},
            {text,"\n*Location*"},
            {sep,
             [{text,
               [24,105,115,32,111,110,101,32,111,102,32,116,104,101,32,102,
                111,108,108,111,119,105,110,103,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[6,79,102,102,115,101,116]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,[{text,"\vThe same as"}],0,false},
                             {text,"\r{bof, Offset}"},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,"\r{bof, Offset}"}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            [16,65,98,115,111,108,117,116,101,32,111,102,102,
                             115,101,116,46]}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\r{cur, Offset}"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,"!Offset from the current position."}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,"\r{eof, Offset}"}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [28,79,102,102,115,101,116,32,102,114,111,109,32,116,
                         104,101,32,101,110,100,32,111,102,32,102,105,108,101,
                         46]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [15,98,111,102,32,124,32,99,117,114,32,124,32,101,111,102]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [24,84,104,101,32,115,97,109,101,32,97,115,32,101,97,
                         114,105,108,101,114,32,119,105,116,104]}],
                      0,false},
                     {text,[6,79,102,102,115,101,116]},
                     {sep,[{text,"\v0, that is,"}],0,false},
                     {text,
                      [30,123,98,111,102,44,32,48,125,32,124,32,123,99,117,
                       114,44,32,48,125,32,124,32,123,101,111,102,44,32,48,
                       125]},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,".## pread(ChannelPid, Handle, Position, Len) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "\\## pread(ChannelPid, Handle, Position, Len, Timeout) -> {ok, Data} | eof | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [24,82,101,97,100,115,32,102,114,111,109,32,97,110,32,111,112,101,
            110,32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
              41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [20,80,111,115,105,116,105,111,110,32,61,32,105,110,116,101,103,
             101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,76,101,110,32,61,32,105,110,116,101,103,101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
           40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [26,68,97,116,97,32,61,32,115,116,114,105,110,103,40,41,32,124,32,98,
          105,110,97,114,121,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\v*pread/3,4*"},
            {sep,
             [{text,
               "7function reads from a specified position, combining the"}],
             0,false},
            {text,
             [25,91,112,111,115,105,116,105,111,110,45,51,93,40,35,112,111,
              115,105,116,105,111,110,45,51,41]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [17,91,114,101,97,100,45,51,93,40,35,114,101,97,100,45,51,41]},
            {sep,[{text,"\nfunctions."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"3## pwrite(ChannelPid, Handle, Position, Data) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "P## pwrite(ChannelPid, Handle, Position, Data, Timeout) -> ok | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,87,114,105,116,101,115,32,116,111,32,97,110,32,111,112,101,110,
            32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [20,80,111,115,105,116,105,111,110,32,61,32,105,110,116,101,103,
            101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,68,97,116,97,32,61,32,105,111,108,105,115,116,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\f*pwrite/3,4*"},
            {sep,
             [{text,
               "6function writes to a specified position, combining the"}],
             0,false},
            {text,
             [25,91,112,111,115,105,116,105,111,110,45,51,93,40,35,112,111,
              115,105,116,105,111,110,45,51,41]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [19,91,119,114,105,116,101,45,51,93,40,35,119,114,105,116,101,45,
              51,41]},
            {sep,[{text,"\nfunctions."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"### read(ChannelPid, Handle, Len) ->"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "Q## read(ChannelPid, Handle, Len, Timeout) -> {ok, Data} | eof | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [24,82,101,97,100,115,32,102,114,111,109,32,97,110,32,111,112,101,
            110,32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,76,101,110,32,61,32,105,110,116,101,103,101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
           40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [26,68,97,116,97,32,61,32,115,116,114,105,110,103,40,41,32,124,32,98,
          105,110,97,114,121,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[5,82,101,97,100,115]}],0,false},
            {text,[5,42,76,101,110,42]},
            {sep,[{text,"!bytes from the file referenced by"}],0,false},
            {text,"\b*Handle*"},
            {sep,[{text,"\t. Returns"}],0,false},
            {text,"\f*{ok, Data}*"},
            {sep,[{text,[1,44]}],0,false},
            {text,[5,42,101,111,102,42]},
            {sep,[{text,[4,44,32,111,114]}],0,false},
            {text,
             [19,42,123,101,114,114,111,114,44,32,114,101,97,115,111,110,40,
              41,125,42]},
            {sep,
             [{text,
               [28,46,32,73,102,32,116,104,101,32,102,105,108,101,32,105,115,
                32,111,112,101,110,101,100,32,119,105,116,104]}],
             0,false},
            {text,"\b*binary*"},
            {sep,[{text,[1,44]}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,[{text,"&is a binary, otherwise it is a string."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [24,73,102,32,116,104,101,32,102,105,108,101,32,105,115,32,114,
                101,97,100,32,112,97,115,116]}],
             0,false},
            {text,[5,42,101,111,102,42]},
            {sep,
             [{text,
               "G, only the remaining bytes are read and returned. If no bytes are read,"}],
             0,false},
            {text,[5,42,101,111,102,42]},
            {sep,[{text,"\fis returned."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"!## read_file(ChannelPid, File) ->"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "I## read_file(ChannelPid, File, Timeout) -> {ok, Data} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{sep,[{sep,[{text,"\rReads a file."}],0,false}],0,true},null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
            41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,70,105,108,101,32,61,32,115,116,114,105,110,103,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,68,97,116,97,32,61,32,98,105,110,97,114,121,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "?Reads a file from the server, and returns the data in a binary."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"&## read_file_info(ChannelPid, Name) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "R## read_file_info(ChannelPid, Name, Timeout) -> {ok, FileInfo} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [30,71,101,116,115,32,105,110,102,111,114,109,97,116,105,111,110,
            32,97,98,111,117,116,32,97,32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,78,97,109,101,32,61,32,115,116,114,105,110,103,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
           40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,70,105,108,101,73,110,102,111,32,61,32,114,101,99,111,114,100,40,
          41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\tReturns a"}],0,false},
            {text,"\v*file_info*"},
            {sep,
             [{text,"/record from the file system object specified by"}],
             0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\b*Handle*"},
            {sep,[{text,[5,46,32,83,101,101]}],0,false},
            {text,"8[file:read_file_info/2](../kernel/file#read_file_info-2)"},
            {sep,[{text,"!for information about the record."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "tDepending on the underlying OS:es links might be followed and info on the final file, directory etc is returned. See"}],
             0,false},
            {text,"/[ssh_sftp::read_link_info/2](#read_link_info-2)"},
            {sep,
             [{text,"+on how to get information on links instead."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"!## read_link(ChannelPid, Name) ->"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "K## read_link(ChannelPid, Name, Timeout) -> {ok, Target} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,82,101,97,100,115,32,115,121,109,98,111,108,105,99,32,108,105,
            110,107,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
           41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,78,97,109,101,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,84,97,114,103,101,116,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "9Reads the link target from the symbolic link specified by"}],
             0,false},
            {text,[6,42,110,97,109,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "I## read_link_info(ChannelPid, Name) -> {ok, FileInfo} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "R## read_link_info(ChannelPid, Name, Timeout) -> {ok, FileInfo} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Gets information about a symbolic link."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,78,97,109,101,32,61,32,115,116,114,105,110,103,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
           40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,70,105,108,101,73,110,102,111,32,61,32,114,101,99,111,114,100,40,
          41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\tReturns a"}],0,false},
            {text,"\v*file_info*"},
            {sep,
             [{text,"*record from the symbolic link specified by"}],
             0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\b*Handle*"},
            {sep,[{text,[5,46,32,83,101,101]}],0,false},
            {text,"8[file:read_link_info/2](../kernel/file#read_link_info-2)"},
            {sep,[{text,"!for information about the record."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"*## rename(ChannelPid, OldName, NewName) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "J## rename(ChannelPid, OldName, NewName, Timeout) -> ok | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[15,82,101,110,97,109,101,115,32,97,32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
            41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,79,108,100,78,97,109,101,32,61,32,115,116,114,105,110,103,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,78,101,119,78,97,109,101,32,61,32,115,116,114,105,110,103,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [20,82,101,110,97,109,101,115,32,97,32,102,105,108,101,32,110,
                97,109,101,100]}],
             0,false},
            {text,"\t*OldName*"},
            {sep,
             [{text,
               [21,97,110,100,32,103,105,118,101,115,32,105,116,32,116,104,
                101,32,110,97,109,101]}],
             0,false},
            {text,"\t*NewName*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\"## start_channel(ConnectionRef) ->"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "V## start_channel(ConnectionRef, Options) ->\n      {ok, Pid} | {error, reason()|term()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\"## start_channel(Host, Options) ->"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "c## start_channel(Host, Port, Options) -> \n      {ok, Pid, ConnectionRef} | {error, reason()|term()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [30,35,35,32,115,116,97,114,116,95,99,104,97,110,110,101,108,40,84,99,
        112,83,111,99,107,101,116,41,32,45,62]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "a## start_channel(TcpSocket, Options) ->\n      {ok, Pid, ConnectionRef} | {error, reason()|term()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [22,83,116,97,114,116,115,32,97,110,32,83,70,84,80,32,99,108,105,
            101,110,116,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[15,72,111,115,116,32,61,32,115,116,114,105,110,103,40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [16,80,111,114,116,32,61,32,105,110,116,101,103,101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,84,99,112,83,111,99,107,101,116,32,61,32,112,111,114,116,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"!The socket is supposed to be from"}],0,false},
           {text,".[gen_tcp:connect](../kernel/gen_tcp#connect-3)"},
           {sep,[{text,[2,111,114]}],0,false},
           {text,",[gen_tcp:accept](../kernel/gen_tcp#accept-1)"},
           {sep,[{text,"\vwith option"}],0,false},
           {text,
            [16,42,123,97,99,116,105,118,101,44,102,97,108,115,101,125,42]}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},{sep,[{text,"\eOptions = [{Option, Value}]"}],0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ÄIf no connection reference is provided, a connection is set up, and the new connection is returned. An SSH channel process is started to handle the communication with the SFTP server. The returned"}],
             0,false},
            {text,[5,42,112,105,100,42]},
            {sep,
             [{text,
               "Rfor this process is to be used as input to all other API functions in this module."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bOptions:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,
                   [20,123,116,105,109,101,111,117,116,44,32,116,105,109,101,
                    111,117,116,40,41,125]}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "FThere are two ways to set a timeout for the underlying ssh connection:"}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,
                        [{text," If the connection timeout option"}],
                        0,false},
                       {text,
                        [15,99,111,110,110,101,99,116,95,116,105,109,101,111,
                         117,116]},
                       {sep,
                        [{text,
                          "Mis set, that value is used also for the negotiation timeout and this option ("}],
                        0,false},
                       {text,[7,116,105,109,101,111,117,116]},
                       {sep,[{text,"\r) is ignored."}],0,false}],
                      0,false}],
                    0,false},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,
                        [{text,
                          [24,79,116,104,101,114,119,105,115,101,44,32,116,
                           104,105,115,32,111,112,116,105,111,110,32,40]}],
                        0,false},
                       {text,[7,116,105,109,101,111,117,116]},
                       {sep,
                        [{text,
                          "P) is used as the negotiation timeout only and there is no connection timeout set"}],
                        0,false}],
                      0,false}],
                    0,false}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [21,84,104,101,32,118,97,108,117,101,32,100,101,
                             102,97,117,108,116,115,32,116,111]}],
                          0,false},
                         {text,"\binfinity"},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [21,123,115,102,116,112,95,118,115,110,44,32,105,110,116,
                   101,103,101,114,40,41,125]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      [142,68,101,115,105,114,101,100,32,83,70,84,80,32,112,
                       114,111,116,111,99,111,108,32,118,101,114,115,105,111,
                       110,46,32,84,104,101,32,97,99,116,117,97,108,32,118,
                       101,114,115,105,111,110,32,105,115,32,116,104,101,32,
                       109,105,110,105,109,117,109,32,111,102,32,116,104,101,
                       32,100,101,115,105,114,101,100,32,118,101,114,115,105,
                       111,110,32,97,110,100,32,116,104,101,32,109,97,120,105,
                       109,117,109,32,115,117,112,112,111,114,116,101,100,32,
                       118,101,114,115,105,111,110,115,32,98,121,32,116,104,
                       101,32,83,70,84,80,32,115,101,114,118,101,114,46]}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"(All other options are directly passed to"}],0,false},
            {text,
             [20,91,115,115,104,58,99,111,110,110,101,99,116,47,51,93,40,115,
              115,104,41]},
            {sep,
             [{text,"/or ignored if a connection is already provided."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"!## stop_channel(ChannelPid) -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [30,83,116,111,112,115,32,116,104,101,32,83,70,84,80,32,99,108,105,
            101,110,116,32,99,104,97,110,110,101,108,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "=Stops an SFTP channel. Does not close the SSH connection. Use"}],
             0,false},
            {text,
             [28,91,115,115,104,58,99,108,111,115,101,47,49,93,40,46,47,115,
              115,104,35,99,108,111,115,101,45,49,41]},
            {sep,[{text,"\fto close it."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"%## write(ChannelPid, Handle, Data) ->"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "E## write(ChannelPid, Handle, Data, Timeout) -> ok | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,87,114,105,116,101,115,32,116,111,32,97,110,32,111,112,101,110,
            32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,72,97,110,100,108,101,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [20,80,111,115,105,116,105,111,110,32,61,32,105,110,116,101,103,
            101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,68,97,116,97,32,61,32,105,111,108,105,115,116,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[6,87,114,105,116,101,115]}],0,false},
            {text,[6,42,100,97,116,97,42]},
            {sep,
             [{text,
               [25,116,111,32,116,104,101,32,102,105,108,101,32,114,101,102,
                101,114,101,110,99,101,100,32,98,121]}],
             0,false},
            {text,"\b*Handle*"},
            {sep,
             [{text,
               [31,46,32,84,104,101,32,102,105,108,101,32,105,115,32,116,111,
                32,98,101,32,111,112,101,110,101,100,32,119,105,116,104]}],
             0,false},
            {text,[7,42,119,114,105,116,101,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\b*append*"},
            {sep,[{text,"\rflag. Returns"}],0,false},
            {text,[4,42,111,107,42]},
            {sep,
             [{text,
               [16,105,102,32,115,117,99,99,101,115,115,102,117,108,32,111,
                114]}],
             0,false},
            {text,
             [19,42,123,101,114,114,111,114,44,32,114,101,97,115,111,110,40,
              41,125,42]},
            {sep,[{text,"\notherwise."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"*## write_file(ChannelPid, File, Iolist) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "J## write_file(ChannelPid, File, Iolist, Timeout) -> ok | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,87,114,105,116,101,115,32,97,32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
            41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,70,105,108,101,32,61,32,115,116,114,105,110,103,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,73,111,108,105,115,116,32,61,32,105,111,108,105,115,116,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "cWrites a file to the server. The file is created if it does not exist but overwritten if it exists."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"-## write_file_info(ChannelPid, Name, Info) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "M## write_file_info(ChannelPid, Name, Info, Timeout) -> ok | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [30,87,114,105,116,101,115,32,105,110,102,111,114,109,97,116,105,
            111,110,32,102,111,114,32,97,32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,67,104,97,110,110,101,108,80,105,100,32,61,32,112,105,100,40,
            41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,78,97,109,101,32,61,32,115,116,114,105,110,103,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,73,110,102,111,32,61,32,114,101,99,111,114,100,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [30,87,114,105,116,101,115,32,102,105,108,101,32,105,110,102,
                111,114,109,97,116,105,111,110,32,102,114,111,109,32,97]}],
             0,false},
            {text,"\v*file_info*"},
            {sep,
             [{text,
               [31,114,101,99,111,114,100,32,116,111,32,116,104,101,32,102,
                105,108,101,32,115,112,101,99,105,102,105,101,100,32,98,121]}],
             0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text,[5,46,32,83,101,101]}],0,false},
            {text,
             ">[file:write_file_info/[2,3]](../kernel/file#write_file_info-2)"},
            {sep,[{text,"!for information about the record."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
