{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[16,35,32,115,115,104,95,99,111,110,110,101,99,116,105,111,110]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[16,35,32,115,115,104,95,99,111,110,110,101,99,116,105,111,110]},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "nThis module provides API functions to send SSH Connection Protocol events to the other side of an SSH channel."}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[3,84,104,101]}],0,false},
                 {text,
                  ">[SSH Connection Protocol](http://www.ietf.org/rfc/rfc4254.txt)"},
                 {sep,
                  [{text,
                    [294,105,115,32,117,115,101,100,32,98,121,32,99,108,105,
                     101,110,116,115,32,97,110,100,32,115,101,114,118,101,114,
                     115,44,32,116,104,97,116,32,105,115,44,32,83,83,72,32,99,
                     104,97,110,110,101,108,115,44,32,116,111,32,99,111,109,
                     109,117,110,105,99,97,116,101,32,111,118,101,114,32,116,
                     104,101,32,83,83,72,32,99,111,110,110,101,99,116,105,111,
                     110,46,32,84,104,101,32,65,80,73,32,102,117,110,99,116,
                     105,111,110,115,32,105,110,32,116,104,105,115,32,109,111,
                     100,117,108,101,32,115,101,110,100,32,83,83,72,32,67,111,
                     110,110,101,99,116,105,111,110,32,80,114,111,116,111,99,
                     111,108,32,101,118,101,110,116,115,44,32,119,104,105,99,
                     104,32,97,114,101,32,114,101,99,101,105,118,101,100,32,
                     97,115,32,109,101,115,115,97,103,101,115,32,98,121,32,
                     116,104,101,32,114,101,109,111,116,101,32,99,104,97,110,
                     110,101,108,46,32,73,102,32,116,104,101,32,114,101,99,
                     101,105,118,105,110,103,32,99,104,97,110,110,101,108,32,
                     105,115,32,97,110,32,69,114,108,97,110,103,32,112,114,
                     111,99,101,115,115,44,32,116,104,101,32,109,101,115,115,
                     97,103,101,115,32,104,97,118,101,32,116,104,101,32,102,
                     111,114,109,97,116]}],
                  0,false},
                 {text,"-*{ssh_cm, connection_ref(), ssh_event_msg()}*"},
                 {sep,[{text,"\b. If the"}],0,false},
                 {text,"([ssh_client_channel](ssh_client_channel)"},
                 {sep,
                  [{text,
                    "Pbehavior is used to implement the channel process, these messages are handled by"}],
                  0,false},
                 {text,
                  "@[handle_ssh_msg/2](./ssh_client_channel#Module:handle_ssh_msg-2)"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## DATA TYPES"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [133,84,121,112,101,32,100,101,102,105,110,105,116,105,111,110,
             115,32,116,104,97,116,32,97,114,101,32,117,115,101,100,32,109,
             111,114,101,32,116,104,97,110,32,111,110,99,101,32,105,110,32,
             116,104,105,115,32,109,111,100,117,108,101,44,32,111,114,32,97,
             98,115,116,114,97,99,116,105,111,110,115,32,116,111,32,105,110,
             100,105,99,97,116,101,32,116,104,101,32,105,110,116,101,110,100,
             101,100,32,117,115,101,32,111,102,32,116,104,101,32,100,97,116,
             97,32,116,121,112,101,44,32,111,114,32,98,111,116,104,58]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {text,[4,60,100,108,62]},
      {nest,4,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,"\vboolean() ="}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,[{text,"\ftrue | false"}],0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,[{text,"\nstring() ="}],0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,
                                     [24,108,105,115,116,32,111,102,32,65,83,
                                      67,73,73,32,99,104,97,114,97,99,116,101,
                                      114,115]}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,[{text,"\vtimeout() ="}],0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   [20,105,110,102,105,110,105,116,121,32,124,
                                    32,105,110,116,101,103,101,114,40,41]},
                                  {sep,
                                   [{text,
                                     [15,105,110,32,109,105,108,108,105,115,
                                      101,99,111,110,100,115]}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,
                             [18,99,111,110,110,101,99,116,105,111,110,95,114,
                              101,102,40,41,32,61]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,
                                 [{text,
                                   [24,111,112,97,113,117,101,40,41,32,45,97,
                                    115,32,114,101,116,117,114,110,101,100,32,
                                    98,121]}],
                                 0,false},
                                {text,"\rssh:connect/3"},
                                {sep,
                                 [{text,
                                   "#or sent to an SSH channel processes"}],
                                 0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [14,99,104,97,110,110,101,108,95,105,100,40,41,32,
                            61]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,[{sep,[{text,"\tinteger()"}],0,false}],0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         [22,115,115,104,95,100,97,116,97,95,116,121,112,101,
                          95,99,111,100,101,40,41,32,61]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,[1,49]},
                            {sep,[{text,"\f(\"stderr\") |"}],0,false},
                            {text,[1,48]},
                            {sep,
                             [{text," (\"normal\") are valid values, see"}],
                             0,false},
                            {text,"\bRFC 4254"},
                            {sep,[{text,"\fSection 5.2."}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [22,115,115,104,95,114,101,113,117,101,115,116,95,115,
                        116,97,116,117,115,40,41,32,61]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [17,115,117,99,99,101,115,115,32,124,32,102,97,105,
                            108,117,114,101]}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\tevent() ="}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,"+{ssh_cm, connection_ref(), ssh_event_msg()}"}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,
                   [17,115,115,104,95,101,118,101,110,116,95,109,115,103,40,
                    41,32,61]}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "3data_events() | status_events() | terminal_events()"}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,116,62]},
              {sep,[{text,"\nreason() ="}],0,false},
              {text,[5,60,47,100,116,62]}],
             0,true},
            null},
           null}}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{text,[4,60,100,100,62]},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [16,116,105,109,101,111,117,116,32,124,32,99,108,111,115,
                      101,100]}],
                   0,false}],
                 0,true},
                null},
               null}},
             {text,[5,60,47,100,100,62]}],
            0,true},
           null},
          null}}}}},
     {text,[5,60,47,100,108,62]}},
    {above,
     {above,
      {text,[4,60,100,108,62]},
      {nest,4,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,"\rdata_events()"}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,
                   {text,[4,60,100,108,62]},
                   {nest,4,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               "<{data, channel_id(), ssh_data_type_code(), Data :: binary()}"}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      "JData has arrived on the channel. This event is sent as a result of calling"}],
                                    0,false},
                                   {text,"\essh_connection:send/[3,4,5]"},
                                   {sep,[{text,[1,46]}],0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,
                              [19,123,101,111,102,44,32,99,104,97,110,110,101,
                               108,95,105,100,40,41,125]}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    "[Indicates that the other side sends no more data. This event is sent as a result of calling"}],
                                  0,false},
                                 {text,
                                  [25,115,115,104,95,99,111,110,110,101,99,
                                   116,105,111,110,58,115,101,110,100,95,101,
                                   111,102,47,50]},
                                 {sep,[{text,[1,46]}],0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}}}},
                  {text,[5,60,47,100,108,62]}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,
                   [15,115,116,97,116,117,115,95,101,118,101,110,116,115,40,
                    41]}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,
                 {text,[4,60,100,108,62]},
                 {nest,4,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,
                               [{text,
                                 "${signal, channel_id(), ssh_signal()}"}],
                               0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{text,
                                      [315,65,32,115,105,103,110,97,108,32,99,
                                       97,110,32,98,101,32,100,101,108,105,
                                       118,101,114,101,100,32,116,111,32,116,
                                       104,101,32,114,101,109,111,116,101,32,
                                       112,114,111,99,101,115,115,47,115,101,
                                       114,118,105,99,101,32,117,115,105,110,
                                       103,32,116,104,101,32,102,111,108,108,
                                       111,119,105,110,103,32,109,101,115,115,
                                       97,103,101,46,32,83,111,109,101,32,115,
                                       121,115,116,101,109,115,32,100,111,32,
                                       110,111,116,32,115,117,112,112,111,114,
                                       116,32,115,105,103,110,97,108,115,44,
                                       32,105,110,32,119,104,105,99,104,32,99,
                                       97,115,101,32,116,104,101,121,32,97,
                                       114,101,32,116,111,32,105,103,110,111,
                                       114,101,32,116,104,105,115,32,109,101,
                                       115,115,97,103,101,46,32,84,104,101,
                                       114,101,32,105,115,32,99,117,114,114,
                                       101,110,116,108,121,32,110,111,32,102,
                                       117,110,99,116,105,111,110,32,116,111,
                                       32,103,101,110,101,114,97,116,101,32,
                                       116,104,105,115,32,101,118,101,110,116,
                                       32,97,115,32,116,104,101,32,115,105,
                                       103,110,97,108,115,32,114,101,102,101,
                                       114,114,101,100,32,116,111,32,97,114,
                                       101,32,111,110,32,79,83,45,108,101,118,
                                       101,108,32,97,110,100,32,110,111,116,
                                       32,115,111,109,101,116,104,105,110,103,
                                       32,103,101,110,101,114,97,116,101,100,
                                       32,98,121,32,97,110,32,69,114,108,97,
                                       110,103,32,112,114,111,103,114,97,109,
                                       46]}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                "d{exit_signal, channel_id(), ExitSignal :: string(), ErrorMsg ::string(), LanguageString :: string()}"}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      [138,65,32,114,101,109,111,116,101,32,
                                       101,120,101,99,117,116,105,111,110,32,
                                       99,97,110,32,116,101,114,109,105,110,
                                       97,116,101,32,118,105,111,108,101,110,
                                       116,108,121,32,98,101,99,97,117,115,
                                       101,32,111,102,32,97,32,115,105,103,
                                       110,97,108,46,32,84,104,101,110,32,116,
                                       104,105,115,32,109,101,115,115,97,103,
                                       101,32,99,97,110,32,98,101,32,114,101,
                                       99,101,105,118,101,100,46,32,70,111,
                                       114,32,100,101,116,97,105,108,115,32,
                                       111,110,32,118,97,108,105,100,32,115,
                                       116,114,105,110,103,32,118,97,108,117,
                                       101,115,44,32,115,101,101]}],
                                    0,false},
                                   {text,"\bRFC 4254"},
                                   {sep,
                                    [{text,
                                      ":Section 6.10, which shows a special case of these signals."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,
                              "4{exit_status, channel_id(), ExitStatus :: integer()}"}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    [136,87,104,101,110,32,116,104,101,32,99,
                                     111,109,109,97,110,100,32,114,117,110,
                                     110,105,110,103,32,97,116,32,116,104,101,
                                     32,111,116,104,101,114,32,101,110,100,32,
                                     116,101,114,109,105,110,97,116,101,115,
                                     44,32,116,104,101,32,102,111,108,108,111,
                                     119,105,110,103,32,109,101,115,115,97,
                                     103,101,32,99,97,110,32,98,101,32,115,
                                     101,110,116,32,116,111,32,114,101,116,
                                     117,114,110,32,116,104,101,32,101,120,
                                     105,116,32,115,116,97,116,117,115,32,111,
                                     102,32,116,104,101,32,99,111,109,109,97,
                                     110,100,46,32,65,32,122,101,114,111]}],
                                  0,false},
                                 {text,"\vexit_status"},
                                 {sep,
                                  [{text,
                                    "ausually means that the command terminated successfully. This event is sent as a result of calling"}],
                                  0,false},
                                 {text,
                                  [28,115,115,104,95,99,111,110,110,101,99,
                                   116,105,111,110,58,101,120,105,116,95,115,
                                   116,97,116,117,115,47,51]},
                                 {sep,[{text,[1,46]}],0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,
                            [22,123,99,108,111,115,101,100,44,32,99,104,97,
                             110,110,101,108,95,105,100,40,41,125]}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  ")This event is sent as a result of calling"}],
                                0,false},
                               {text,
                                [22,115,115,104,95,99,111,110,110,101,99,116,
                                 105,111,110,58,99,108,111,115,101,47,50]},
                               {sep,
                                [{text,
                                  "I. Both the handling of this event and sending it are taken care of by the"}],
                                0,false},
                               {text,
                                [18,115,115,104,95,99,108,105,101,110,116,95,
                                 99,104,97,110,110,101,108]},
                               {sep,[{text,"\tbehavior."}],0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}}}},
                {text,[5,60,47,100,108,62]}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,116,62]},
              {sep,
               [{text,
                 [17,116,101,114,109,105,110,97,108,95,101,118,101,110,116,
                  115,40,41]}],
               0,false},
              {text,[5,60,47,100,116,62]}],
             0,true},
            null},
           null}}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{text,[4,60,100,100,62]},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       [154,67,104,97,110,110,101,108,115,32,105,109,112,108,
                        101,109,101,110,116,105,110,103,32,97,32,115,104,101,
                        108,108,32,97,110,100,32,99,111,109,109,97,110,100,32,
                        101,120,101,99,117,116,105,111,110,32,111,110,32,116,
                        104,101,32,115,101,114,118,101,114,32,115,105,100,101,
                        32,97,114,101,32,116,111,32,104,97,110,100,108,101,32,
                        116,104,101,32,102,111,108,108,111,119,105,110,103,32,
                        109,101,115,115,97,103,101,115,32,116,104,97,116,32,
                        99,97,110,32,98,101,32,115,101,110,116,32,98,121,32,
                        99,108,105,101,110,116,45,32,99,104,97,110,110,101,
                        108,32,112,114,111,99,101,115,115,101,115,46]}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         [21,69,118,101,110,116,115,32,116,104,97,116,32,105,
                          110,99,108,117,100,101,32,97]}],
                       0,false},
                      {text,"\tWantReply"},
                      {sep,
                       [{text,")expect the event handling process to call"}],
                       0,false},
                      {text,
                       [30,115,115,104,95,99,111,110,110,101,99,116,105,111,
                        110,58,114,101,112,108,121,95,114,101,113,117,101,115,
                        116,47,52]},
                      {sep,
                       [{text,
                         [25,119,105,116,104,32,116,104,101,32,98,111,111,108,
                          101,97,110,32,118,97,108,117,101,32,111,102]}],
                       0,false},
                      {text,"\tWantReply"},
                      {sep,
                       [{text,
                         [23,97,115,32,116,104,101,32,115,101,99,111,110,100,
                          32,97,114,103,117,109,101,110,116,46]}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,
                 {text,[4,60,100,108,62]},
                 {nest,4,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,
                                 [{text,
                                   "N{env, channel_id(), WantReply :: boolean(), Var ::string(), Value :: string()}"}],
                                 0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          "wEnvironment variables can be passed to the shell/command to be started later. This event is sent as a result of calling"}],
                                        0,false},
                                       {text,
                                        [23,115,115,104,95,99,111,110,110,101,
                                         99,116,105,111,110,58,115,101,116,
                                         101,110,118,47,53]},
                                       {sep,[{text,[1,46]}],0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{text,
                                  "í{pty, channel_id(), WantReply :: boolean(), {Terminal :: string(), CharWidth :: integer(), RowHeight :: integer(), PixelWidth :: integer(), PixelHeight :: integer(), TerminalModes :: [{Opcode :: atom() | integer(), Value :: integer()}]}}"}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        "5A pseudo-terminal has been requested for the session."}],
                                      0,false},
                                     {text,"\bTerminal"},
                                     {sep,
                                      [{text,
                                        "=is the value of the TERM environment variable value, that is,"}],
                                      0,false},
                                     {text,[5,118,116,49,48,48]},
                                     {sep,
                                      [{text,
                                        "³. Zero dimension parameters must be ignored. The character/row dimensions override the pixel dimensions (when non-zero). Pixel dimensions refer to the drawable area of the window."}],
                                      0,false},
                                     {text,[6,79,112,99,111,100,101]},
                                     {sep,
                                      [{text,[6,105,110,32,116,104,101]}],
                                      0,false},
                                     {text,"\rTerminalModes"},
                                     {sep,
                                      [{text,
                                        "Mlist is the mnemonic name, represented as a lowercase Erlang atom, defined in"}],
                                      0,false},
                                     {text,"\bRFC 4254"},
                                     {sep,
                                      [{text,
                                        [30,44,32,83,101,99,116,105,111,110,
                                         32,56,46,32,73,116,32,99,97,110,32,
                                         97,108,115,111,32,98,101,32,97,110]}],
                                      0,false},
                                     {text,[6,79,112,99,111,100,101]},
                                     {sep,
                                      [{text,
                                        "7if the mnemonic name is not listed in the RFC. Example:"}],
                                      0,false},
                                     {text,
                                      "1OP code: 53, mnemonic name ECHO erlang atom: echo"},
                                     {sep,
                                      [{text,
                                        "+. This event is sent as a result of calling"}],
                                      0,false},
                                     {text,"\essh_connection:ptty_alloc/4"},
                                     {sep,[{text,[1,46]}],0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                [31,123,115,104,101,108,108,44,32,87,97,110,
                                 116,82,101,112,108,121,32,58,58,32,98,111,
                                 111,108,101,97,110,40,41,125]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      "xThis message requests that the user default shell is started at the other end. This event is sent as a result of calling"}],
                                    0,false},
                                   {text,
                                    [22,115,115,104,95,99,111,110,110,101,99,
                                     116,105,111,110,58,115,104,101,108,108,
                                     47,50]},
                                   {sep,[{text,[1,46]}],0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,
                              "~{window_change, channel_id(), CharWidth() :: integer(), RowHeight :: integer(), PixWidth :: integer(), PixHeight :: integer()}"}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    ">When the window (terminal) size changes on the client side, it"}],
                                  0,false},
                                 {text,[3,99,97,110]},
                                 {sep,
                                  [{text,
                                    "ksend a message to the server side to inform it of the new dimensions. No API function generates this event."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,
                            "={exec, channel_id(), WantReply :: boolean(), Cmd :: string()}"}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  "vThis message requests that the server starts execution of the given command. This event is sent as a result of calling"}],
                                0,false},
                               {text,
                                [21,115,115,104,95,99,111,110,110,101,99,116,
                                 105,111,110,58,101,120,101,99,47,52]},
                               {sep,[{text,[1,46]}],0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}}}},
                {text,[5,60,47,100,108,62]}}],
              0,false},
             {text,[5,60,47,100,100,62]}],
            0,true},
           null},
          null}}}}},
     {text,[5,60,47,100,108,62]}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"<## adjust_window(ConnectionRef, ChannelId, NumOfBytes) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Adjusts the SSH flow control window."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,101,
           108,95,105,100,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [22,78,117,109,79,102,66,121,116,101,115,32,61,32,105,110,116,101,
          103,101,114,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "nAdjusts the SSH flow control window. This is to be done by both the client- and server-side channel processes."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [29,67,104,97,110,110,101,108,115,32,105,109,112,
                           108,101,109,101,110,116,101,100,32,119,105,116,104,
                           32,116,104,101]}],
                        0,false},
                       {text,"([ssh_client_channel](ssh_client_channel)"},
                       {sep,
                        [{text,
                          [151,98,101,104,97,118,105,111,114,32,100,111,32,
                           110,111,116,32,110,111,114,109,97,108,108,121,32,
                           110,101,101,100,32,116,111,32,99,97,108,108,32,116,
                           104,105,115,32,102,117,110,99,116,105,111,110,32,
                           97,115,32,102,108,111,119,32,99,111,110,116,114,
                           111,108,32,105,115,32,104,97,110,100,108,101,100,
                           32,98,121,32,116,104,101,32,98,101,104,97,118,105,
                           111,114,46,32,84,104,101,32,98,101,104,97,118,105,
                           111,114,32,97,100,106,117,115,116,115,32,116,104,
                           101,32,119,105,110,100,111,119,32,101,118,101,114,
                           121,32,116,105,109,101,32,116,104,101,32,99,97,108,
                           108,98,97,99,107]}],
                        0,false},
                       {text,
                        "@[handle_ssh_msg/2](./ssh_client_channel#Module:handle_ssh_msg-2)"},
                       {sep,
                        [{text,"&returns after processing channel data."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"(## close(ConnectionRef, ChannelId) -> ok"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"$Sends a close message on the channel"}],0,false},
          {text,"\v*ChannelId*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,101,
          108,95,105,100,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "_A server- or client-channel process can choose to close their session by sending a close event."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [30,84,104,105,115,32,102,117,110,99,116,105,111,
                           110,32,105,115,32,99,97,108,108,101,100,32,98,121,
                           32,116,104,101]}],
                        0,false},
                       {text,
                        [20,42,115,115,104,95,99,108,105,101,110,116,95,99,
                         104,97,110,110,101,108,42]},
                       {sep,
                        [{text,
                          ",behavior when the channel is terminated, see"}],
                        0,false},
                       {text,"+[ssh_client_channel(3)](ssh_client_channel)"},
                       {sep,
                        [{text,
                          "X. Thus, channels implemented with the behavior are not to call this function explicitly."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "d## exec(ConnectionRef, ChannelId, Command, TimeOut) -> ssh_request_status() |\n     {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "CRequests that the server starts the execution of the given command."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,
            101,108,95,105,100,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,111,109,109,97,110,100,32,61,32,115,116,114,105,110,103,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "áIs to be called by a client-channel process to request that the server starts executing the given command. The result is several messages according to the following pattern. The last message is a channel close message, as the"}],
             0,false},
            {text,[6,42,101,120,101,99,42]},
            {sep,
             [{text,
               "Hrequest is a one-time execution that closes the channel when it is done."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         "\\N x {ssh_cm, connection_ref(), {data, channel_id(), ssh_data_type_code(), Data :: binary()}}"}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              "hThe result of executing the command can be only one line or thousands of lines depending on the command."}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{text,
                        "80 or 1 x {ssh_cm, connection_ref(), {eof, channel_id()}}"}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "*Indicates that no more data is to be sent."}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{text,
                      [138,48,32,111,114,32,49,32,120,32,123,115,115,104,95,
                       99,109,44,32,99,111,110,110,101,99,116,105,111,110,95,
                       114,101,102,40,41,44,32,123,101,120,105,116,95,115,105,
                       103,110,97,108,44,32,99,104,97,110,110,101,108,95,105,
                       100,40,41,44,32,69,120,105,116,83,105,103,110,97,108,
                       32,58,58,32,115,116,114,105,110,103,40,41,44,32,69,114,
                       114,111,114,77,115,103,32,58,58,32,115,116,114,105,110,
                       103,40,41,44,32,76,97,110,103,117,97,103,101,83,116,
                       114,105,110,103,32,58,58,32,115,116,114,105,110,103,40,
                       41,125,125]}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "\\Not all systems send signals. For details on valid string values, see RFC 4254, Section 6.10"}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{text,
                    "Y0 or 1 x {ssh_cm, connection_ref(), {exit_status, channel_id(), ExitStatus :: integer()}}"}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "gIt is recommended by the SSH Connection Protocol to send this message, but that is not always the case."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  "61 x {ssh_cm, connection_ref(), {closed, channel_id()}}"}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [18,73,110,100,105,99,97,116,101,115,32,116,104,97,
                         116,32,116,104,101]}],
                      0,false},
                     {text,
                      [18,115,115,104,95,99,108,105,101,110,116,95,99,104,97,
                       110,110,101,108]},
                     {sep,
                      [{text,
                        "@started for the execution of the command has now been shut down."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"6## exit_status(ConnectionRef, ChannelId, Status) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"1Sends the exit status of a command to the client."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,101,
           108,95,105,100,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [18,83,116,97,116,117,115,32,61,32,105,110,116,101,103,101,114,40,
          41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "_Is to be called by a server-channel process to send the exit status of a command to the client."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"3## ptty_alloc(ConnectionRef, ChannelId, Options) ->"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "m## ptty_alloc(ConnectionRef, ChannelId, Options, Timeout) ->  > ssh_request_status() |\n     {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text," Sends an SSH Connection Protocol"}],0,false},
          {text,"\t*pty_req*"},
          {sep,[{text," , to allocate a pseudo-terminal."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,101,
           108,95,105,100,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [30,79,112,116,105,111,110,115,32,61,32,112,114,111,112,108,105,115,
          116,115,58,112,114,111,112,108,105,115,116,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text," Sends an SSH Connection Protocol"}],0,false},
            {text,"\t*pty_req*"},
            {sep,
             [{text,
               "J, to allocate a pseudo-terminal. Is to be called by an SSH client process."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bOptions:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [16,123,116,101,114,109,44,32,115,116,114,105,110,
                            103,40,41,125]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,[{text,"\vDefaults to"}],0,false},
                               {text,
                                [17,111,115,58,103,101,116,101,110,118,40,34,
                                 84,69,82,77,34,41]},
                               {sep,[{text,[2,111,114]}],0,false},
                               {text,[5,118,116,49,48,48]},
                               {sep,
                                [{text,
                                  [19,105,102,32,105,116,32,105,115,32,117,
                                   110,100,101,102,105,110,101,100,46]}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{text,
                          [18,123,119,105,100,116,104,44,32,105,110,116,101,
                           103,101,114,40,41,125]}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                [17,68,101,102,97,117,108,116,115,32,116,111,
                                 32,56,48,32,105,102]}],
                              0,false},
                             {text,"\vpixel_width"},
                             {sep,
                              [{text,
                                [15,105,115,32,110,111,116,32,100,101,102,105,
                                 110,101,100,46]}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{text,
                        [19,123,104,101,105,103,104,116,44,32,105,110,116,101,
                         103,101,114,40,41,125]}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [17,68,101,102,97,117,108,116,115,32,116,111,32,
                               50,52,32,105,102]}],
                            0,false},
                           {text,"\fpixel_height"},
                           {sep,
                            [{text,
                              [15,105,115,32,110,111,116,32,100,101,102,105,
                               110,101,100,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{text,
                      [24,123,112,105,120,101,108,95,119,105,100,116,104,44,
                       32,105,110,116,101,103,101,114,40,41,125]}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [17,73,115,32,100,105,115,114,101,103,97,114,100,
                             101,100,32,105,102]}],
                          0,false},
                         {text,[5,119,105,100,116,104]},
                         {sep,[{text,"\vis defined."}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{text,
                    [25,123,112,105,120,101,108,95,104,101,105,103,104,116,44,
                     32,105,110,116,101,103,101,114,40,41,125]}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [17,73,115,32,100,105,115,114,101,103,97,114,100,
                           101,100,32,105,102]}],
                        0,false},
                       {text,[6,104,101,105,103,104,116]},
                       {sep,[{text,"\vis defined."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,"'{pty_opts, [{posix_atom(), integer()}]}"}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "4Option can be an empty list. Otherwise, see possible"}],
                      0,false},
                     {text,[5,80,79,83,73,88]},
                     {sep,
                      [{text,
                        [21,110,97,109,101,115,32,105,110,32,83,101,99,116,
                         105,111,110,32,56,32,105,110]}],
                      0,false},
                     {text,"\bRFC 4254"},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "C## reply_request(ConnectionRef, WantReply, Status, ChannelId) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"8Sends status replies to requests that want such replies."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [21,87,97,110,116,82,101,112,108,121,32,61,32,98,111,111,108,101,
            97,110,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [29,83,116,97,116,117,115,32,61,32,115,115,104,95,114,101,113,117,
           101,115,116,95,115,116,97,116,117,115,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,101,
          108,95,105,100,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "gSends status replies to requests where the requester has stated that it wants a status report, that is,"}],
             0,false},
            {text,
             [18,42,87,97,110,116,82,101,112,108,121,32,61,32,116,114,117,101,
              42]},
            {sep,[{text,[4,46,32,73,102]}],0,false},
            {text,"\v*WantReply*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,
             [{text,
               "x, calling this function becomes a \"noop\". Is to be called while handling an SSH Connection Protocol message containing a"}],
             0,false},
            {text,"\v*WantReply*"},
            {sep,
             [{text,[14,98,111,111,108,101,97,110,32,118,97,108,117,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"*## send(ConnectionRef, ChannelId, Data) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"3## send(ConnectionRef, ChannelId, Data, Timeout) ->"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"0## send(ConnectionRef, ChannelId, Type, Data) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "h## send(ConnectionRef, ChannelId, Type, Data, TimeOut) ->\n       ok | {error, timeout} | {error, closed}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [19,83,101,110,100,115,32,99,104,97,110,110,101,108,32,100,97,116,
            97,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,
             101,108,95,105,100,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,68,97,116,97,32,61,32,98,105,110,97,114,121,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},{sep,[{text,"\eType = ssh_data_type_code()"}],0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "SIs to be called by client- and server-channel processes to send data to each other."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fThe function"}],0,false},
            {text,"0[subsystem/4](../ssh/ssh_connection#subsystem/4)"},
            {sep,
             [{text,
               [23,97,110,100,32,115,117,98,115,101,113,117,101,110,116,32,99,
                97,108,108,115,32,111,102]}],
             0,false},
            {text,"\f*send/3,4,5*"},
            {sep,[{text,"%must be executed in the same process."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"=## send_eof(ConnectionRef, ChannelId) -> ok | {error, closed}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [20,83,101,110,100,115,32,69,79,70,32,111,110,32,99,104,97,110,
              110,101,108]}],
           0,false},
          {text,"\v*ChannelId*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,101,
          108,95,105,100,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [20,83,101,110,100,115,32,69,79,70,32,111,110,32,99,104,97,110,
                110,101,108]}],
             0,false},
            {text,"\v*ChannelId*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"-## session_channel(ConnectionRef, Timeout) ->"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "}## session_channel(ConnectionRef, InitialWindowSize,\n       MaxPacketSize, Timeout) -> {ok, channel_id()} | {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"#Opens a channel for an SSH session."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [29,73,110,105,116,105,97,108,87,105,110,100,111,119,83,105,122,
             101,32,61,32,105,110,116,101,103,101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [25,77,97,120,80,97,99,107,101,116,83,105,122,101,32,61,32,105,110,
            116,101,103,101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
           40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [141,79,112,101,110,115,32,97,32,99,104,97,110,110,101,108,32,
              102,111,114,32,97,110,32,83,83,72,32,115,101,115,115,105,111,
              110,46,32,84,104,101,32,99,104,97,110,110,101,108,32,105,100,32,
              114,101,116,117,114,110,101,100,32,102,114,111,109,32,116,104,
              105,115,32,102,117,110,99,116,105,111,110,32,105,115,32,116,104,
              101,32,105,100,32,117,115,101,100,32,97,115,32,105,110,112,117,
              116,32,116,111,32,116,104,101,32,111,116,104,101,114,32,102,117,
              110,99,116,105,111,110,115,32,105,110,32,116,104,105,115,32,109,
              111,100,117,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "j## setenv(ConnectionRef, ChannelId, Var, Value, TimeOut) -> ssh_request_status() |\n      {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "MEnvironment variables can be passed to the shell/command to be started later."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,
             101,108,95,105,100,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[14,86,97,114,32,61,32,115,116,114,105,110,103,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[16,86,97,108,117,101,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "uEnvironment variables can be passed before starting the shell/command. Is to be called by a client channel processes."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "E## shell(ConnectionRef, ChannelId) -> ok | failure | {error, closed}\n"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "|Requests that the user default shell (typically defined in /etc/passwd in Unix systems) is to be executed at the server end."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,101,
          108,95,105,100,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "¤Is to be called by a client channel process to request that the user default shell (typically defined in /etc/passwd in Unix systems) is executed at the server end."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [25,78,111,116,101,58,32,116,104,101,32,114,101,116,117,114,
                110,32,118,97,108,117,101,32,105,115]}],
             0,false},
            {text,[4,42,111,107,42]},
            {sep,[{text,"\ninstead of"}],0,false},
            {text,"\t*success*"},
            {sep,
             [{text,
               [154,117,110,108,105,107,101,32,105,110,32,111,116,104,101,114,
                32,102,117,110,99,116,105,111,110,115,32,105,110,32,116,104,
                105,115,32,109,111,100,117,108,101,46,32,84,104,105,115,32,
                105,115,32,97,32,102,97,117,108,116,32,116,104,97,116,32,119,
                97,115,32,105,110,116,114,111,100,117,99,101,100,32,115,111,
                32,108,111,110,103,32,97,103,111,32,116,104,97,116,32,97,110,
                121,32,99,104,97,110,103,101,32,119,111,117,108,100,32,98,114,
                101,97,107,32,97,32,108,97,114,103,101,32,110,117,109,98,101,
                114,32,111,102,32,101,120,105,115,116,105,110,103,32,115,111,
                102,116,119,97,114,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "l## subsystem(ConnectionRef, ChannelId, Subsystem, Timeout) -> ssh_request_status() |\n      {error, reason()}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"9Requests to execute a predefined subsystem on the server."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,[{text," ConnectionRef = connection_ref()"}],0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [24,67,104,97,110,110,101,108,73,100,32,61,32,99,104,97,110,110,
            101,108,95,105,100,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [20,83,117,98,115,121,115,116,101,109,32,61,32,115,116,114,105,110,
           103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,84,105,109,101,111,117,116,32,61,32,116,105,109,101,111,117,116,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "kIs to be called by a client-channel process for requesting to execute a predefined subsystem on the server."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fThe function"}],0,false},
            {text,"\r*subsystem/4*"},
            {sep,
             [{text,
               [23,97,110,100,32,115,117,98,115,101,113,117,101,110,116,32,99,
                97,108,108,115,32,111,102]}],
             0,false},
            {text,"*[send/3,4,5](../ssh/ssh_connection#send/3)"},
            {sep,[{text,"%must be executed in the same process."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
