{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [20,35,32,115,115,104,95,99,108,105,101,110,116,95,107,101,121,95,97,
          112,105]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [20,35,32,115,115,104,95,99,108,105,101,110,116,95,107,101,121,95,97,
          112,105]},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,45,98,101,104,97,118,105,111,117,114,40,115,115,104,95,99,108,
             105,101,110,116,95,107,101,121,95,97,112,105,41,46]}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "ÃˆBehavior describing the API for public key handling of an SSH client. By implementing the callbacks defined in this behavior, the public key handling of an SSH client can be customized. By default the"}],
                  0,false},
                 {text,[5,42,115,115,104,42]},
                 {sep,
                  [{text,
                    "Uapplication implements this behavior with help of the standard OpenSSH files, see the"}],
                  0,false},
                 {text,
                  [17,91,115,115,104,40,54,41,93,40,83,83,72,95,97,112,112,
                   41]},
                 {sep,
                  [{text,
                    [19,97,112,112,108,105,99,97,116,105,111,110,32,109,97,
                     110,117,97,108,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# Data Types"},null},null}},
    {sep,
     [{sep,
       [{text,
         [21,99,108,105,101,110,116,95,107,101,121,95,99,98,95,111,112,116,
          105,111,110,115]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [19,79,112,116,105,111,110,115,32,112,114,111,118,105,100,
                   101,100,32,116,111]}],
                0,false},
               {text,"$[ssh:connect/[3,4]](./ssh#connect-3)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [28,84,104,101,32,111,112,116,105,111,110,32,108,105,115,
                   116,32,103,105,118,101,110,32,105,110,32,116,104,101]}],
                0,false},
               {text,
                "@[ssh#type-key_cb_common_option](./ssh#type-key_cb_common_option)"},
               {sep,[{text," option is available with the key"}],0,false},
               {text,
                [16,42,107,101,121,95,99,98,95,112,114,105,118,97,116,101,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "X## Module:add_host_key(HostNames, PublicHostKey, ConnectOptions) -> ok | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0Adds a host key to the set of trusted host keys."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [20,72,111,115,116,78,97,109,101,115,32,61,32,115,116,114,105,110,
             103,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{sep,[{text,"%Description of the host that owns the"}],0,false},
             {text,[15,42,80,117,98,108,105,99,72,111,115,116,75,101,121,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,
             [{text,
               [15,80,117,98,108,105,99,72,111,115,116,75,101,121,32,61]}],
             0,false},
            {text,
             "C[public_key:public_key()](../public_key/public_key#type-public_key)"}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "qOf ECDSA keys, only the Normally an RSA, DSA or ECDSA public key, but handling of other public keys can be added."}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,
           [{text,
             [16,67,111,110,110,101,99,116,79,112,116,105,111,110,115,32,61]}],
           0,false},
          {text,"6[client_key_cb_options()](#type-client_key_cb_options)"}],
         0,false}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"0Adds a host key to the set of trusted host keys."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "E## Module:is_host_key(Key, Host, Algorithm, ConnectOptions) -> Result"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text," Checks if a host key is trusted."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{sep,[{text,[5,75,101,121,32,61]}],0,false},
                {text,
                 "C[public_key:public_key()](../public_key/public_key#type-public_key)"}],
               0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "YNormally an RSA, DSA or ECDSA public key, but handling of other public keys can be added."}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [15,72,111,115,116,32,61,32,115,116,114,105,110,103,40,41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [24,68,101,115,99,114,105,112,116,105,111,110,32,111,102,32,116,
              104,101,32,104,111,115,116,46]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{sep,[{text,"\vAlgorithm ="}],0,false},
             {text,")[ssh:pubkey_alg()](./ssh#type-pubkey_alg)"}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [19,72,111,115,116,32,107,101,121,32,97,108,103,111,114,105,116,
            104,109,46]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,
            [{text,
              [16,67,111,110,110,101,99,116,79,112,116,105,111,110,115,32,
               61]}],
            0,false},
           {text,"6[client_key_cb_options()](#type-client_key_cb_options)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [18,82,101,115,117,108,116,32,61,32,98,111,111,108,101,97,110,40,
          41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," Checks if a host key is trusted."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "Z## Module:user_key(Algorithm, ConnectOptions) ->\n      {ok, PrivateKey}  | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [17,70,101,116,99,104,101,115,32,116,104,101,32,117,115,101,114,
              115]}],
           0,false},
          {text,[14,42,42,112,117,98,108,105,99,32,107,101,121,42,42]},
          {sep,[{text,"\fmatching the"}],0,false},
          {text,"\v*Algorithm*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{sep,[{text,"\vAlgorithm ="}],0,false},
              {text,")[ssh:pubkey_alg()](./ssh#type-pubkey_alg)"}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [19,72,111,115,116,32,107,101,121,32,97,108,103,111,114,105,116,
              104,109,46]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,67,111,110,110,101,99,116,79,112,116,105,111,110,115,32,
                 61]}],
              0,false},
             {text,"6[client_key_cb_options()](#type-client_key_cb_options)"}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,[{text,"\fPrivateKey ="}],0,false},
            {text,
             "E[public_key:private_key()](../public_key/public_key#type-private_key)"}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"$Private key of the user matching the"}],0,false},
           {text,"\v*Algorithm*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [17,70,101,116,99,104,101,115,32,116,104,101,32,117,115,101,
                114,115]}],
             0,false},
            {text,[14,42,42,112,117,98,108,105,99,32,107,101,121,42,42]},
            {sep,[{text,"\fmatching the"}],0,false},
            {text,"\v*Algorithm*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,"(The private key contains the public key."}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false}],
  0,false}}
