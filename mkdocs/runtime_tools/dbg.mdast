{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,[5,35,32,100,98,103]},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,[5,35,32,100,98,103]},null},null}}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,101,32,84,101,120,116,32,66,97,115,101,100,32,84,114,
               97,99,101,32,70,97,99,105,108,105,116,121]}],
            0,false}],
          0,true},
         null},
        null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "4This module implements a text based interface to the"}],
                    0,false},
                   {text,"-[erts/erlang#trace-3](../erts/erlang#trace-3)"},
                   {sep,[{text,[7,97,110,100,32,116,104,101]}],0,false},
                   {text,
                    "=[erts/erlang#trace_pattern-2](../erts/erlang#trace_pattern-2)"},
                   {sep,
                    [{text,
                      "MBIFs. It makes it possible to trace functions, processes, ports and messages."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "dTo quickly get started on tracing function calls you can use the following code in the Erlang shell:"}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {above,
                {above,
                 {text,[3,96,96,96]},
                 {sep,
                  [{text,
                    [434,10,49,62,32,100,98,103,58,116,114,97,99,101,114,40,
                     41,46,32,37,37,32,83,116,97,114,116,32,116,104,101,32,
                     100,101,102,97,117,108,116,32,116,114,97,99,101,32,109,
                     101,115,115,97,103,101,32,114,101,99,101,105,118,101,114,
                     10,123,111,107,44,60,48,46,51,54,46,48,62,125,10,50,62,
                     32,100,98,103,58,112,40,97,108,108,44,32,99,41,46,32,37,
                     37,32,83,101,116,117,112,32,99,97,108,108,32,40,99,41,32,
                     116,114,97,99,105,110,103,32,111,110,32,97,108,108,32,
                     112,114,111,99,101,115,115,101,115,10,123,111,107,44,91,
                     123,109,97,116,99,104,101,100,44,110,111,110,111,100,101,
                     64,110,111,104,111,115,116,44,50,54,125,93,125,10,51,62,
                     32,100,98,103,58,116,112,40,108,105,115,116,115,44,32,
                     115,101,113,44,32,120,41,46,32,37,37,32,83,101,116,117,
                     112,32,97,110,32,101,120,99,101,112,116,105,111,110,32,
                     114,101,116,117,114,110,32,116,114,97,99,101,32,40,120,
                     41,32,111,110,32,108,105,115,116,115,58,115,101,113,10,
                     123,111,107,44,91,123,109,97,116,99,104,101,100,44,110,
                     111,110,111,100,101,64,110,111,104,111,115,116,44,50,125,
                     44,123,115,97,118,101,100,44,120,125,93,125,10,52,62,32,
                     108,105,115,116,115,58,115,101,113,40,49,44,49,48,41,46,
                     10,40,60,48,46,51,52,46,48,62,41,32,99,97,108,108,32,108,
                     105,115,116,115,58,115,101,113,40,49,44,49,48,41,10,40,
                     60,48,46,51,52,46,48,62,41,32,114,101,116,117,114,110,
                     101,100,32,102,114,111,109,32,108,105,115,116,115,58,115,
                     101,113,47,50,32,45,62,32,91,49,44,50,44,51,44,52,44,53,
                     44,54,44,55,44,56,44,57,44,49,48,93,10,91,49,44,50,44,51,
                     44,52,44,53,44,54,44,55,44,56,44,57,44,49,48,93,10,32,32,
                     32,32]}],
                  0,true}},
                {text,[3,96,96,96]}},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      [31,70,111,114,32,109,111,114,101,32,101,120,97,109,112,
                       108,101,115,32,111,102,32,104,111,119,32,116,111,32,
                       117,115,101]}],
                    0,false},
                   {text,[5,42,100,98,103,42]},
                   {sep,
                    [{text,
                      [30,102,114,111,109,32,116,104,101,32,69,114,108,97,110,
                       103,32,115,104,101,108,108,44,32,115,101,101,32,116,
                       104,101]}],
                    0,false},
                   {text,"![simple example](#simple_example)"},
                   {sep,[{text,"\bsection."}],0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "Ã”The utilities are also suitable to use in system testing on large systems, where other tools have too much impact on the system performance. Some primitive support for sequential tracing is also included, see the"}],
                    0,false},
                   {text,
                    [28,91,97,100,118,97,110,99,101,100,32,116,111,112,105,99,
                     115,93,40,35,97,100,118,97,110,99,101,100,41]},
                   {sep,[{text,"\bsection."}],0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,true},
        null},
       null}}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v# Functions"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"\"## fun2ms(LiteralFun) -> MatchSpec"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "9Pseudo function that transforms fun syntax to match_spec."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [26,76,105,116,101,114,97,108,70,117,110,32,61,32,102,117,110,40,
             41,32,108,105,116,101,114,97,108]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,77,97,116,99,104,83,112,101,99,32,61,32,116,101,114,109,40,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\"Pseudo function that by means of a"}],0,false},
               {text,
                [17,42,112,97,114,115,101,95,116,114,97,110,115,102,111,114,
                 109,42]},
               {sep,
                [{text,
                  [14,116,114,97,110,115,108,97,116,101,115,32,116,104,101]}],
                0,false},
               {text,"\v**literal**"},
               {text,[7,42,102,117,110,40,41,42]},
               {sep,
                [{text,
                  "Ttyped as parameter in the function call to a match specification as described in the"}],
                0,false},
               {text,"\f*match_spec*"},
               {sep,
                [{text,
                  "9manual of ERTS users guide. (with literal I mean that the"}],
                0,false},
               {text,[7,42,102,117,110,40,41,42]},
               {sep,
                [{text,
                  [137,110,101,101,100,115,32,116,111,32,116,101,120,116,117,
                   97,108,108,121,32,98,101,32,119,114,105,116,116,101,110,32,
                   97,115,32,116,104,101,32,112,97,114,97,109,101,116,101,114,
                   32,111,102,32,116,104,101,32,102,117,110,99,116,105,111,
                   110,44,32,105,116,32,99,97,110,110,111,116,32,98,101,32,
                   104,101,108,100,32,105,110,32,97,32,118,97,114,105,97,98,
                   108,101,32,119,104,105,99,104,32,105,110,32,116,117,114,
                   110,32,105,115,32,112,97,115,115,101,100,32,116,111,32,116,
                   104,101,32,102,117,110,99,116,105,111,110,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"0The parse transform is implemented in the module"}],
                0,false},
               {text,[14,42,109,115,95,116,114,97,110,115,102,111,114,109,42]},
               {sep,
                [{text,
                  [14,97,110,100,32,116,104,101,32,115,111,117,114,99,101]}],
                0,false},
               {text,"\b**must**"},
               {sep,
                [{text,
                  [16,105,110,99,108,117,100,101,32,116,104,101,32,102,105,
                   108,101]}],
                0,false},
               {text,
                [18,42,109,115,95,116,114,97,110,115,102,111,114,109,46,104,
                 114,108,42]},
               {sep,
                [{text,
                  "Ã‹in STDLIB for this pseudo function to work. Failing to include the hrl file in the source will result in a runtime error, not a compile time ditto. The include file is easiest included by adding the line"}],
                0,false},
               {text,"2*-include_lib(\"stdlib/include/ms_transform.hrl\").*"},
               {sep,
                [{text,
                  [19,116,111,32,116,104,101,32,115,111,117,114,99,101,32,102,
                   105,108,101,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,[7,42,102,117,110,40,41,42]},
               {sep,
                [{text,
                  [133,105,115,32,118,101,114,121,32,114,101,115,116,114,105,
                   99,116,101,100,44,32,105,116,32,99,97,110,32,116,97,107,
                   101,32,111,110,108,121,32,97,32,115,105,110,103,108,101,32,
                   112,97,114,97,109,101,116,101,114,32,40,116,104,101,32,112,
                   97,114,97,109,101,116,101,114,32,108,105,115,116,32,116,
                   111,32,109,97,116,99,104,41,44,32,97,32,115,111,108,101,32,
                   118,97,114,105,97,98,108,101,32,111,114,32,97,32,108,105,
                   115,116,46,32,73,116,32,110,101,101,100,115,32,116,111,32,
                   117,115,101,32,116,104,101]}],
                0,false},
               {text,[5,42,105,115,95,42]},
               {sep,
                [{text,
                  "hXXX guard tests and one cannot use language constructs that have no representation in a match_spec (like"}],
                0,false},
               {text,[4,42,105,102,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[6,42,99,97,115,101,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,
                  "Yetc). The return value from the fun will be the return value of the resulting match_spec."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\bExample:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                "8dbg:fun2ms(fun([M,N]) when N > 3 -> return_trace() end)."},
               {text,"0\n[{['$1','$2'],[{'>','$2',3}],[{return_trace}]}]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "CVariables from the environment can be imported, so that this works:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,50,62,32]},
               {text,[4,88,61,51,46]},
               {text,[6,10,51,10,51,62,32]},
               {text,
                "9dbg:fun2ms(fun([M,N]) when N > X  -> return_trace() end)."},
               {text,
                "8\n[{['$1','$2'],[{'>','$2',{const,3}}],[{return_trace}]}]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "5The imported variables will be replaced by match_spec"}],
                0,false},
               {text,[7,42,99,111,110,115,116,42]},
               {sep,
                [{text,
                  "Cexpressions, which is consistent with the static scoping for Erlang"}],
                0,false},
               {text,[7,42,102,117,110,40,41,42]},
               {sep,
                [{text,
                  [144,115,46,32,76,111,99,97,108,32,111,114,32,103,108,111,
                   98,97,108,32,102,117,110,99,116,105,111,110,32,99,97,108,
                   108,115,32,99,97,110,110,111,116,32,98,101,32,105,110,32,
                   116,104,101,32,103,117,97,114,100,32,111,114,32,98,111,100,
                   121,32,111,102,32,116,104,101,32,102,117,110,32,104,111,
                   119,101,118,101,114,46,32,67,97,108,108,115,32,116,111,32,
                   98,117,105,108,116,105,110,32,109,97,116,99,104,95,115,112,
                   101,99,32,102,117,110,99,116,105,111,110,115,32,111,102,32,
                   99,111,117,114,115,101,32,105,115,32,97,108,108,111,119,
                   101,100,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,52,62,32]},
               {text,
                "Fdbg:fun2ms(fun([M,N]) when N > X, is_atomm(M)  -> return_trace() end)."},
               {text,
                [146,10,69,114,114,111,114,58,32,102,117,110,32,99,111,110,
                 116,97,105,110,105,110,103,32,108,111,99,97,108,32,101,114,
                 108,97,110,103,32,102,117,110,99,116,105,111,110,32,99,97,
                 108,108,115,32,40,39,105,115,95,97,116,111,109,109,39,32,99,
                 97,108,108,101,100,32,105,110,32,103,117,97,114,100,41,92,10,
                 32,99,97,110,110,111,116,32,98,101,32,116,114,97,110,115,108,
                 97,116,101,100,32,105,110,116,111,32,109,97,116,99,104,95,
                 115,112,101,99,10,123,101,114,114,111,114,44,116,114,97,110,
                 115,102,111,114,109,95,101,114,114,111,114,125,10,53,62,32]},
               {text,
                "Edbg:fun2ms(fun([M,N]) when N > X, is_atom(M)  -> return_trace() end)."},
               {text,
                "G\n[{['$1','$2'],[{'>','$2',{const,3}},{is_atom,'$1'}],[{return_trace}]}]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "QAs you can see by the example, the function can be called from the shell too. The"}],
                0,false},
               {text,[7,42,102,117,110,40,41,42]},
               {sep,
                [{text,
                  "Ã¶needs to be literally in the call when used from the shell as well. Other means than the parse_transform are used in the shell case, but more or less the same restrictions apply (the exception being records, as they are not handled by the shell)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,
              [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
               105,110,103,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "yIf the parse_transform is not applied to a module which calls this pseudo function, the call will fail in runtime (with a"}],
                           0,false},
                          {text,"\b*badarg*"},
                          {sep,[{text,"\r). The module"}],0,false},
                          {text,[5,42,100,98,103,42]},
                          {sep,
                           [{text,
                             [136,97,99,116,117,97,108,108,121,32,101,120,112,
                              111,114,116,115,32,97,32,102,117,110,99,116,105,
                              111,110,32,119,105,116,104,32,116,104,105,115,
                              32,110,97,109,101,44,32,98,117,116,32,105,116,
                              32,115,104,111,117,108,100,32,110,101,118,101,
                              114,32,114,101,97,108,108,121,32,98,101,32,99,
                              97,108,108,101,100,32,101,120,99,101,112,116,32,
                              102,111,114,32,119,104,101,110,32,117,115,105,
                              110,103,32,116,104,101,32,102,117,110,99,116,
                              105,111,110,32,105,110,32,116,104,101,32,115,
                              104,101,108,108,46,32,73,102,32,116,104,101]}],
                           0,false},
                          {text,
                           [17,42,112,97,114,115,101,95,116,114,97,110,115,
                            102,111,114,109,42]},
                          {sep,
                           [{text,"$is properly applied by including the"}],
                           0,false},
                          {text,
                           [18,42,109,115,95,116,114,97,110,115,102,111,114,
                            109,46,104,114,108,42]},
                          {sep,
                           [{text,
                             "sheader file, compiled code will never call the function, but the function call is replaced by a literal match_spec."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#More information is provided by the"}],0,false},
               {text,[14,42,109,115,95,116,114,97,110,115,102,111,114,109,42]},
               {sep,
                [{text,
                  [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   83,84,68,76,73,66,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f## h() -> ok"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "7Give a list of available help items on standard output."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,",Gives a list of items for brief online help."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[16,35,35,32,104,40,73,116,101,109,41,32,45,62,32,111,107]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [28,71,105,118,101,32,98,114,105,101,102,32,104,101,108,112,32,
               102,111,114,32,97,110,32,105,116,101,109,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,[{text,[1,42]},{sep,[{text,"\rItem = atom()"}],0,false}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "_Gives a brief help text for functions in the dbg module. The available items can be listed with"}],
                0,false},
               {text,"\t*dbg:h/0*"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"/## p(Item) -> {ok, MatchDesc} | {error, term()}"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text," Trace messages to and from Item."}],0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rEquivalent to"}],0,false},
               {text,[14,42,112,40,73,116,101,109,44,32,91,109,93,41,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,"6## p(Item, Flags) -> {ok, MatchDesc} | {error, term()}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [30,84,114,97,99,101,32,73,116,101,109,32,97,99,99,111,114,100,
               105,110,103,32,116,111,32,70,108,97,103,115,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [22,77,97,116,99,104,68,101,115,99,32,61,32,91,77,97,116,99,104,
              78,117,109,93]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             "HMatchNum = {matched, node(), integer()} | {matched, node(), 0, RPCError}"}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,82,80,67,69,114,114,111,114,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[6,84,114,97,99,101,115]}],0,false},
               {text,[6,42,73,116,101,109,42]},
               {sep,
                [{text,"'in accordance to the value specified by"}],
                0,false},
               {text,[7,42,70,108,97,103,115,42]},
               {sep,
                [{text,
                  [18,46,32,84,104,101,32,118,97,114,105,97,116,105,111,110,
                   32,111,102]}],
                0,false},
               {text,[6,42,73,116,101,109,42]},
               {sep,
                [{text,
                  [16,105,115,32,108,105,115,116,101,100,32,98,101,108,111,
                   119,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,116,62]},
                                           {sep,
                                            [{sep,
                                              [{text,[5,112,105,100,40,41]},
                                               {sep,
                                                [{text,[2,111,114]}],
                                                0,false},
                                               {text,
                                                [6,112,111,114,116,40,41]}],
                                              0,false}],
                                            0,false},
                                           {text,[5,60,47,100,116,62]}],
                                          0,true},
                                         null},
                                        null}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,100,62]},
                                           {sep,
                                            [{sep,
                                              [{text,
                                                "Â¬The corresponding process or port is traced. The process or port may be a remote process or port (on another Erlang node). The node must be in the list of traced nodes (see"}],
                                              0,false},
                                             {text,[3,110,45,49]},
                                             {sep,
                                              [{text,[3,97,110,100]}],
                                              0,false},
                                             {text,"\btracer-3"},
                                             {sep,[{text,[2,41,46]}],0,false}],
                                            0,false},
                                           {text,[5,60,47,100,100,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,116,62]},
                                          {sep,
                                           [{text,[3,97,108,108]}],
                                           0,false},
                                          {text,[5,60,47,100,116,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,100,62]},
                                         {text,
                                          "lAll processes and ports in the system as well as all processes and ports created hereafter are to be traced."},
                                         {text,[5,60,47,100,100,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,116,62]},
                                        {sep,[{text,"\tprocesses"}],0,false},
                                        {text,[5,60,47,100,116,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,100,62]},
                                       {text,
                                        "XAll processes in the system as well as all processes created hereafter are to be traced."},
                                       {text,[5,60,47,100,100,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,116,62]},
                                      {sep,
                                       [{text,[5,112,111,114,116,115]}],
                                       0,false},
                                      {text,[5,60,47,100,116,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,100,62]},
                                     {text,
                                      "PAll ports in the system as well as all ports created hereafter are to be traced."},
                                     {text,[5,60,47,100,100,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,[{text,[3,110,101,119]}],0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,100,62]},
                                   {text,
                                    "CAll processes and ports created after the call is are to be traced."},
                                   {text,[5,60,47,100,100,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,[{text,"\rnew_processes"}],0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {text,
                                  "9All processes created after the call is are to be traced."},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,[{text,"\tnew_ports"}],0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {text,
                                "5All ports created after the call is are to be traced."},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,[{text,"\bexisting"}],0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {text,
                              ",All existing processes and ports are traced."},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               [18,101,120,105,115,116,105,110,103,95,112,114,
                                111,99,101,115,115,101,115]}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {text,"\"All existing processes are traced."},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,
                             [14,101,120,105,115,116,105,110,103,95,112,111,
                              114,116,115]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {text,
                          [30,65,108,108,32,101,120,105,115,116,105,110,103,
                           32,112,111,114,116,115,32,97,114,101,32,116,114,97,
                           99,101,100,46]},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,[6,97,116,111,109,40,41]}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {sep,
                        [{sep,
                          [{text,
                            "Â«The process or port with the corresponding registered name is traced. The process or port may be a remote process (on another Erlang node). The node must be added with the"}],
                          0,false},
                         {text,[3,110,45,49]},
                         {sep,[{text,[2,111,114]}],0,false},
                         {text,"\btracer-3"},
                         {sep,[{text,"\tfunction."}],0,false}],
                        0,false},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,"\tinteger()"}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {sep,
                      [{sep,[{text,"\vThe process"}],0,false},
                       {text,"\n<0.Item.0>"},
                       {sep,[{text,"\nis traced."}],0,false}],
                      0,false},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,"\t{X, Y, Z}"}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,[{text,"\vThe process"}],0,false},
                     {text,[7,60,88,46,89,46,90,62]},
                     {sep,[{text,"\nis traced."}],0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\bstring()"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{sep,[{text,[6,73,102,32,116,104,101]}],0,false},
                   {text,[4,73,116,101,109]},
                   {sep,[{text,"\vis a string"}],0,false},
                   {sep,[{text,"\t\"<X.Y.Z>\""}],0,false},
                   {sep,
                    [{text,
                      [16,97,115,32,114,101,116,117,114,110,101,100,32,102,
                       114,111,109]}],
                    0,false},
                   {text,
                    [25,101,114,116,115,47,101,114,108,97,110,103,35,112,105,
                     100,95,116,111,95,108,105,115,116,45,49]},
                   {sep,[{text,"\r, the process"}],0,false},
                   {text,[7,60,88,46,89,46,90,62]},
                   {sep,[{text,"\nis traced."}],0,false}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [16,87,104,101,110,32,101,110,97,98,108,105,110,103,32,97,
                   110]}],
                0,false},
               {text,[6,42,73,116,101,109,42]},
               {sep,
                [{text,")that represents a group of processes, the"}],
                0,false},
               {text,[6,42,73,116,101,109,42]},
               {sep,
                [{text,"&is enabled on all nodes added with the"}],
                0,false},
               {text,"\v[n-1](#n-1)"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,51,93,40,35,116,114,97,99,101,
                 114,45,51,41]},
               {sep,[{text,"\tfunction."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[7,42,70,108,97,103,115,42]},
               {sep,
                [{text,
                  "Bcan be a single atom, or a list of flags. The available flags are:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,[{text,"\bs (send)"}],0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,100,62]},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{text,
                                               ".Traces the messages the process or port sends."}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {text,[5,60,47,100,100,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,116,62]},
                                      {sep,[{text,"\vr (receive)"}],0,false},
                                      {text,[5,60,47,100,116,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,100,62]},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{sep,
                                           [{text,
                                             "1Traces the messages the process or port receives."}],
                                           0,false}],
                                         0,true},
                                        null},
                                       null}},
                                     {text,[5,60,47,100,100,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,[{text,"\fm (messages)"}],0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,100,62]},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{sep,
                                         [{text,
                                           ";Traces the messages the process or port receives and sends."}],
                                         0,false}],
                                       0,true},
                                      null},
                                     null}},
                                   {text,[5,60,47,100,100,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,[{text,"\bc (call)"}],0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{text,
                                         "jTraces global function calls for the process according to the trace patterns set in the system (see tp/2)."}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,[{text,"\tp (procs)"}],0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{text,
                                       "-Traces process related events to the process."}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,[{text,[5,112,111,114,116,115]}],0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,
                                     "'Traces port related events to the port."}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               [18,115,111,115,32,40,115,101,116,32,111,110,
                                32,115,112,97,119,110,41]}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   "_Lets all processes created by the traced process inherit the trace flags of the traced process."}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,
                             [17,115,111,108,32,40,115,101,116,32,111,110,32,
                              108,105,110,107,41]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,
                                 [{text,
                                   [21,76,101,116,115,32,97,110,111,116,104,
                                    101,114,32,112,114,111,99,101,115,115,
                                    44]}],
                                 0,false},
                                {text,[2,80,50]},
                                {sep,
                                 [{text,
                                   "T, inherit the trace flags of the traced process whenever the traced process links to"}],
                                 0,false},
                                {text,[2,80,50]},
                                {sep,[{text,[1,46]}],0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [25,115,111,102,115,32,40,115,101,116,32,111,110,
                            32,102,105,114,115,116,32,115,112,97,119,110,41]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 [19,84,104,105,115,32,105,115,32,116,104,101,
                                  32,115,97,109,101,32,97,115]}],
                               0,false},
                              {text,[3,115,111,115]},
                              {sep,
                               [{text,
                                 "?, but only for the first process spawned by the traced process."}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         [24,115,111,102,108,32,40,115,101,116,32,111,110,32,
                          102,105,114,115,116,32,108,105,110,107,41]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               [19,84,104,105,115,32,105,115,32,116,104,101,
                                32,115,97,109,101,32,97,115]}],
                             0,false},
                            {text,[3,115,111,108]},
                            {sep,
                             [{text," , but only for the first call to"}],
                             0,false},
                            {text,
                             [18,101,114,116,115,47,101,114,108,97,110,103,35,
                              108,105,110,107,45,49]},
                            {sep,
                             [{text,
                               [22,98,121,32,116,104,101,32,116,114,97,99,101,
                                100,32,112,114,111,99,101,115,115,46]}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[3,97,108,108]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             [21,83,101,116,115,32,97,108,108,32,102,108,97,
                              103,115,32,101,120,99,101,112,116]}],
                           0,false},
                          {text,[6,115,105,108,101,110,116]},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[5,99,108,101,97,114]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [17,67,108,101,97,114,115,32,97,108,108,32,102,108,
                          97,103,115,46]}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "5The list can also include any of the flags allowed in"}],
                0,false},
               {text,"-[erts/erlang#trace-3](../erts/erlang#trace-3)"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "5The function returns either an error tuple or a tuple"}],
                0,false},
               {text,"\f*{ok, List}*"},
               {sep,[{text,[5,46,32,84,104,101]}],0,false},
               {text,[6,42,76,105,115,116,42]},
               {sep,
                [{text,
                  [154,99,111,110,115,105,115,116,115,32,111,102,32,115,112,
                   101,99,105,102,105,99,97,116,105,111,110,115,32,111,102,32,
                   104,111,119,32,109,97,110,121,32,112,114,111,99,101,115,
                   115,101,115,32,97,110,100,32,112,111,114,116,115,32,116,
                   104,97,116,32,109,97,116,99,104,101,100,32,40,105,110,32,
                   116,104,101,32,99,97,115,101,32,111,102,32,97,32,112,117,
                   114,101,32,112,105,100,40,41,32,101,120,97,99,116,108,121,
                   32,49,41,46,32,84,104,101,32,115,112,101,99,105,102,105,99,
                   97,116,105,111,110,32,111,102,32,109,97,116,99,104,101,100,
                   32,112,114,111,99,101,115,115,101,115,32,105,115]}],
                0,false},
               {text,
                [20,42,123,109,97,116,99,104,101,100,44,32,78,111,100,101,44,
                 32,78,125,42]},
               {sep,
                [{text,
                  [31,46,32,73,102,32,116,104,101,32,114,101,109,111,116,101,
                   32,112,114,111,99,101,115,115,111,114,32,99,97,108,108,
                   44]}],
                0,false},
               {text,[5,42,114,112,99,42]},
               {sep,
                [{text,
                  [29,44,32,116,111,32,97,32,114,101,109,111,116,101,32,110,
                   111,100,101,32,102,97,105,108,115,44,32,116,104,101]}],
                0,false},
               {text,[5,42,114,112,99,42]},
               {sep,
                [{text,
                  [147,101,114,114,111,114,32,109,101,115,115,97,103,101,32,
                   105,115,32,100,101,108,105,118,101,114,101,100,32,97,115,
                   32,97,32,102,111,117,114,116,104,32,97,114,103,117,109,101,
                   110,116,32,97,110,100,32,116,104,101,32,110,117,109,98,101,
                   114,32,111,102,32,109,97,116,99,104,101,100,32,112,114,111,
                   99,101,115,115,101,115,32,97,114,101,32,48,46,32,78,111,
                   116,101,32,116,104,97,116,32,116,104,101,32,114,101,115,
                   117,108,116,32,123,111,107,44,32,76,105,115,116,125,32,109,
                   97,121,32,99,111,110,116,97,105,110,32,97,32,108,105,115,
                   116,32,119,104,101,114,101]}],
                0,false},
               {text,[5,42,114,112,99,42]},
               {sep,
                [{text,"/calls to one, several or even all nodes failed."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [20,35,35,32,99,40,77,111,100,44,32,70,117,110,44,32,65,114,103,115,
           41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bEvaluate"}],0,false},
             {text,
              [17,42,97,112,112,108,121,40,77,44,70,44,65,114,103,115,41,42]},
             {sep,[{text,[4,119,105,116,104]}],0,false},
             {text,[5,42,97,108,108,42]},
             {sep,
              [{text,
                [16,116,114,97,99,101,32,102,108,97,103,115,32,115,101,116,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rEquivalent to"}],0,false},
               {text,
                [24,42,99,40,77,111,100,44,32,70,117,110,44,32,65,114,103,115,
                 44,32,97,108,108,41,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\e## c(Mod, Fun, Args, Flags)"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bEvaluate"}],0,false},
             {text,
              [17,42,97,112,112,108,121,40,77,44,70,44,65,114,103,115,41,42]},
             {sep,[{text,[4,119,105,116,104]}],0,false},
             {text,[7,42,70,108,97,103,115,42]},
             {sep,
              [{text,
                [16,116,114,97,99,101,32,102,108,97,103,115,32,115,101,116,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,69,118,97,108,117,97,116,101,115,32,116,104,101,32,101,
                   120,112,114,101,115,115,105,111,110]}],
                0,false},
               {text,
                [23,42,97,112,112,108,121,40,77,111,100,44,32,70,117,110,44,
                 32,65,114,103,115,41,42]},
               {sep,
                [{text,
                  [23,119,105,116,104,32,116,104,101,32,116,114,97,99,101,32,
                   102,108,97,103,115,32,105,110]}],
                0,false},
               {text,[7,42,70,108,97,103,115,42]},
               {sep,
                [{text,
                  "Gset. This is a convenient way to trace processes from the Erlang shell."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f## i() -> ok"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "9Display information about all traced processes and ports."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                ":Displays information about all traced processes and ports."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [23,35,35,32,116,112,40,77,111,100,117,108,101,44,77,97,116,99,104,
           83,112,101,99,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,",Set pattern for traced global function calls"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,")Same as tp({Module, '_', '_'}, MatchSpec)"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text," ## tp(Module,Function,MatchSpec)"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,",Set pattern for traced global function calls"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,".Same as tp({Module, Function, '_'}, MatchSpec)"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,")## tp(Module, Function, Arity, MatchSpec)"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,",Set pattern for traced global function calls"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"0Same as tp({Module, Function, Arity}, MatchSpec)"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          "P## tp({Module, Function, Arity}, MatchSpec) -> {ok, MatchDesc} | {error, term()}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,",Set pattern for traced global function calls"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [21,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41,32,
                   124,32,39,95,39]}],
                0,false}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [23,70,117,110,99,116,105,111,110,32,61,32,97,116,111,109,
                   40,41,32,124,32,39,95,39]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [22,65,114,105,116,121,32,61,32,105,110,116,101,103,101,114,
                  40,41,32,124,39,95,39]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "9MatchSpec = integer() | Built-inAlias | [] | match_spec()"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [26,66,117,105,108,116,45,105,110,65,108,105,97,115,32,61,32,
                120,32,124,32,99,32,124,32,99,120]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [23,77,97,116,99,104,68,101,115,99,32,61,32,91,77,97,116,99,104,
               73,110,102,111,93]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,[{text,")MatchInfo = {saved, integer()} | MatchNum"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "HMatchNum = {matched, node(), integer()} | {matched, node(), 0, RPCError}"}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "_This function enables call trace for one or more functions. All exported functions matching the"}],
                0,false},
               {text,"\e*{Module, Function, Arity}*"},
               {sep,[{text,"#argument will be concerned, but the"}],0,false},
               {text,[14,42,109,97,116,99,104,95,115,112,101,99,40,41,42]},
               {sep,
                [{text,
                  "Lmay further narrow down the set of function calls generating trace messages."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,70,111,114,32,97,32,100,101,115,99,114,105,112,116,105,
                   111,110,32,111,102,32,116,104,101]}],
                0,false},
               {text,[14,42,109,97,116,99,104,95,115,112,101,99,40,41,42]},
               {sep,
                [{text,
                  [26,115,121,110,116,97,120,44,32,112,108,101,97,115,101,32,
                   116,117,114,110,32,116,111,32,116,104,101]}],
                0,false},
               {text,
                [16,42,42,85,115,101,114,39,115,32,103,117,105,100,101,42,42]},
               {sep,
                [{text,
                  "9part of the online documentation for the runtime system ("}],
                0,false},
               {text,"\b**erts**"},
               {sep,
                [{text,[14,41,46,32,84,104,101,32,99,104,97,112,116,101,114]}],
                0,false},
               {text,
                [31,91,101,114,116,115,47,109,97,116,99,104,95,115,112,101,99,
                 93,40,46,47,109,97,116,99,104,95,115,112,101,99,41]},
               {sep,
                [{text,
                  "vexplains the general match specification \"language\". The most common generic match specifications used can be found as"}],
                0,false},
               {text,
                [15,42,66,117,105,108,116,45,105,110,65,108,105,97,115,42]},
               {sep,[{text,[6,39,44,32,115,101,101]}],0,false},
               {text,[15,91,108,116,112,45,48,93,40,35,108,116,112,45,48,41]},
               {sep,
                [{text,
                  [18,98,101,108,111,119,32,102,111,114,32,100,101,116,97,105,
                   108,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "QThe Module, Function and/or Arity parts of the tuple may be specified as the atom"}],
                0,false},
               {text,[5,42,39,95,39,42]},
               {sep,
                [{text,
                  "bwhich is a \"wild-card\" matching all modules/functions/arities. Note, if the Module is specified as"}],
                0,false},
               {text,[5,42,39,95,39,42]},
               {sep,
                [{text,
                  "w, the Function and Arity parts have to be specified as '_' too. The same holds for the Functions relation to the Arity."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,65,108,108,32,110,111,100,101,115,32,97,100,100,101,100,
                   32,119,105,116,104]}],
                0,false},
               {text,"\v[n-1](#n-1)"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,51,93,40,35,116,114,97,99,101,
                 114,45,51,41]},
               {sep,
                [{text,
                  "3will be affected by this call, and if Module is not"}],
                0,false},
               {text,[5,42,39,95,39,42]},
               {sep,
                [{text,"'the module will be loaded on all nodes."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "5The function returns either an error tuple or a tuple"}],
                0,false},
               {text,"\f*{ok, List}*"},
               {sep,[{text,[5,46,32,84,104,101]}],0,false},
               {text,[6,42,76,105,115,116,42]},
               {sep,
                [{text,
                  [142,99,111,110,115,105,115,116,115,32,111,102,32,115,112,
                   101,99,105,102,105,99,97,116,105,111,110,115,32,111,102,32,
                   104,111,119,32,109,97,110,121,32,102,117,110,99,116,105,
                   111,110,115,32,116,104,97,116,32,109,97,116,99,104,101,100,
                   44,32,105,110,32,116,104,101,32,115,97,109,101,32,119,97,
                   121,32,97,115,32,116,104,101,32,112,114,111,99,101,115,115,
                   101,115,32,97,110,100,32,112,111,114,116,115,32,97,114,101,
                   32,112,114,101,115,101,110,116,101,100,32,105,110,32,116,
                   104,101,32,114,101,116,117,114,110,32,118,97,108,117,101,
                   32,111,102]}],
                0,false},
               {text,"\v[p-2](#p-2)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,84,104,101,114,101,32,109,97,121,32,98,101,32,97,32,116,
                   117,112,108,101]}],
                0,false},
               {text,"\f*{saved, N}*"},
               {sep,
                [{text,
                  "Cin the return value, if the MatchSpec is other than []. The integer"}],
                0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  "Â´may then be used in subsequent calls to this function and will stand as an \"alias\" for the given expression. There are also a couple of built-in aliases for common expressions, see"}],
                0,false},
               {text,[15,91,108,116,112,45,48,93,40,35,108,116,112,45,48,41]},
               {sep,
                [{text,
                  [18,98,101,108,111,119,32,102,111,114,32,100,101,116,97,105,
                   108,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [137,73,102,32,97,110,32,101,114,114,111,114,32,105,115,32,
                   114,101,116,117,114,110,101,100,44,32,105,116,32,99,97,110,
                   32,98,101,32,100,117,101,32,116,111,32,101,114,114,111,114,
                   115,32,105,110,32,99,111,109,112,105,108,97,116,105,111,
                   110,32,111,102,32,116,104,101,32,109,97,116,99,104,32,115,
                   112,101,99,105,102,105,99,97,116,105,111,110,46,32,83,117,
                   99,104,32,101,114,114,111,114,115,32,97,114,101,32,112,114,
                   101,115,101,110,116,101,100,32,97,115,32,97,32,108,105,115,
                   116,32,111,102,32,116,117,112,108,101,115]}],
                0,false},
               {text,
                [19,42,123,101,114,114,111,114,44,32,115,116,114,105,110,103,
                 40,41,125,42]},
               {sep,
                [{text,
                  "Owhere the string is a textual explanation of the compilation error. An example:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"\t\n(x@y)4> "},
               {text,
                "Edbg:tp({dbg,ltp,0},[{[],[],[{message, two, arguments}, {noexist}]}])."},
               {text,
                "Â©\n{error,\n [{error,\"Special form 'message' called with wrong number of\n          arguments in {message,two,arguments}.\"},\n  {error,\"Function noexist/1 does_not_exist.\"}]}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [24,35,35,32,116,112,108,40,77,111,100,117,108,101,44,77,97,116,99,
           104,83,112,101,99,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "?Set pattern for traced local (as well as global) function calls"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"*Same as tpl({Module, '_', '_'}, MatchSpec)"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"!## tpl(Module,Function,MatchSpec)"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "?Set pattern for traced local (as well as global) function calls"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"/Same as tpl({Module, Function, '_'}, MatchSpec)"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"*## tpl(Module, Function, Arity, MatchSpec)"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "?Set pattern for traced local (as well as global) function calls"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"1Same as tpl({Module, Function, Arity}, MatchSpec)"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          "Q## tpl({Module, Function, Arity}, MatchSpec) -> {ok, MatchDesc} | {error, term()}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "?Set pattern for traced local (as well as global) function calls"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [22,84,104,105,115,32,102,117,110,99,116,105,111,110,32,119,
                   111,114,107,115,32,97,115]}],
                0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,
                [{text,
                  "h, but enables tracing for local calls (and local functions) as well as for global calls (and functions)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          "=## tpe(Event, MatchSpec) -> {ok, MatchDesc} | {error, term()}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [28,83,101,116,32,112,97,116,116,101,114,110,32,102,111,114,32,
               116,114,97,99,101,100,32,101,118,101,110,116]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [24,69,118,101,110,116,32,61,32,115,101,110,100,32,124,32,39,
                 114,101,99,101,105,118,101,39]}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "9MatchSpec = integer() | Built-inAlias | [] | match_spec()"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [26,66,117,105,108,116,45,105,110,65,108,105,97,115,32,61,32,
                120,32,124,32,99,32,124,32,99,120]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [23,77,97,116,99,104,68,101,115,99,32,61,32,91,77,97,116,99,104,
               73,110,102,111,93]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,[{text,")MatchInfo = {saved, integer()} | MatchNum"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "@MatchNum = {matched, node(), 1} | {matched, node(), 0, RPCError}"}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "?This function associates a match specification with trace event"}],
                0,false},
               {text,[6,42,115,101,110,100,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"\v*'receive'*"},
               {sep,
                [{text,
                  [25,46,32,66,121,32,100,101,102,97,117,108,116,32,97,108,
                   108,32,101,120,101,99,117,116,101,100]}],
                0,false},
               {text,[6,42,115,101,110,100,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\v*'receive'*"},
               {sep,
                [{text,
                  [151,101,118,101,110,116,115,32,97,114,101,32,116,114,97,99,
                   101,100,32,105,102,32,101,110,97,98,108,101,100,32,102,111,
                   114,32,97,32,112,114,111,99,101,115,115,46,32,65,32,109,97,
                   116,99,104,32,115,112,101,99,105,102,105,99,97,116,105,111,
                   110,32,99,97,110,32,98,101,32,117,115,101,100,32,116,111,
                   32,102,105,108,116,101,114,32,116,114,97,99,101,100,32,101,
                   118,101,110,116,115,32,98,97,115,101,100,32,111,110,32,115,
                   101,110,100,101,114,44,32,114,101,99,101,105,118,101,114,
                   32,97,110,100,47,111,114,32,109,101,115,115,97,103,101,32,
                   99,111,110,116,101,110,116,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,70,111,114,32,97,32,100,101,115,99,114,105,112,116,105,
                   111,110,32,111,102,32,116,104,101]}],
                0,false},
               {text,[14,42,109,97,116,99,104,95,115,112,101,99,40,41,42]},
               {sep,
                [{text,
                  [26,115,121,110,116,97,120,44,32,112,108,101,97,115,101,32,
                   116,117,114,110,32,116,111,32,116,104,101]}],
                0,false},
               {text,
                [16,42,42,85,115,101,114,39,115,32,103,117,105,100,101,42,42]},
               {sep,
                [{text,
                  "9part of the online documentation for the runtime system ("}],
                0,false},
               {text,"\b**erts**"},
               {sep,
                [{text,[14,41,46,32,84,104,101,32,99,104,97,112,116,101,114]}],
                0,false},
               {text,
                [31,91,101,114,116,115,47,109,97,116,99,104,95,115,112,101,99,
                 93,40,46,47,109,97,116,99,104,95,115,112,101,99,41]},
               {sep,
                [{text,
                  "4explains the general match specification \"language\"."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,70,111,114]}],0,false},
               {text,[6,42,115,101,110,100,42]},
               {sep,[{text,"\", the matching is done on the list"}],0,false},
               {text,
                [17,42,91,82,101,99,101,105,118,101,114,44,32,77,115,103,93,
                 42]},
               {sep,[{text,[1,46]}],0,false},
               {text,"\n*Receiver*"},
               {sep,
                [{text,
                  "3is the process or port identity of the receiver and"}],
                0,false},
               {text,[5,42,77,115,103,42]},
               {sep,
                [{text,
                  "[is the message term. The pid of the sending process can be accessed with the guard function"}],
                0,false},
               {text,"\b*self/0*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,70,111,114]}],0,false},
               {text,"\v*'receive'*"},
               {sep,[{text,"\", the matching is done on the list"}],0,false},
               {text,
                [21,42,91,78,111,100,101,44,32,83,101,110,100,101,114,44,32,
                 77,115,103,93,42]},
               {sep,[{text,[1,46]}],0,false},
               {text,[6,42,78,111,100,101,42]},
               {sep,
                [{text,
                  [31,105,115,32,116,104,101,32,110,111,100,101,32,110,97,109,
                   101,32,111,102,32,116,104,101,32,115,101,110,100,101,114,
                   46]}],
                0,false},
               {text,"\b*Sender*"},
               {sep,
                [{text,
                  ":is the process or port identity of the sender, or the atom"}],
                0,false},
               {text,"\v*undefined*"},
               {sep,
                [{text,
                  "Fif the sender is not known (which may be the case for remote senders)."}],
                0,false},
               {text,[5,42,77,115,103,42]},
               {sep,
                [{text,
                  "]is the message term. The pid of the receiving process can be accessed with the guard function"}],
                0,false},
               {text,"\b*self/0*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,65,108,108,32,110,111,100,101,115,32,97,100,100,101,100,
                   32,119,105,116,104]}],
                0,false},
               {text,"\v[n-1](#n-1)"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,51,93,40,35,116,114,97,99,101,
                 114,45,51,41]},
               {sep,
                [{text,
                  [30,119,105,108,108,32,98,101,32,97,102,102,101,99,116,101,
                   100,32,98,121,32,116,104,105,115,32,99,97,108,108,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#The return value is the same as for"}],0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,
                [{text,
                  "9. The number of matched events are never larger than 1 as"}],
                0,false},
               {text,[7,42,116,112,101,47,50,42]},
               {sep,
                [{text,"2does not accept any form of wildcards for argument"}],
                0,false},
               {text,[7,42,69,118,101,110,116,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\b## ctp()"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [28,83,97,109,101,32,97,115,32,99,116,112,40,123,39,95,39,44,
                 32,39,95,39,44,32,39,95,39,125,41]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[14,35,35,32,99,116,112,40,77,111,100,117,108,101,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [31,83,97,109,101,32,97,115,32,99,116,112,40,123,77,111,100,
                 117,108,101,44,32,39,95,39,44,32,39,95,39,125,41]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [24,35,35,32,99,116,112,40,77,111,100,117,108,101,44,32,70,117,110,
           99,116,105,111,110,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"$Same as ctp({Module, Function, '_'})"}],0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [31,35,35,32,99,116,112,40,77,111,100,117,108,101,44,32,70,117,110,
           99,116,105,111,110,44,32,65,114,105,116,121,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"&Same as ctp({Module, Function, Arity})"}],0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          "F## ctp({Module, Function, Arity}) -> {ok, MatchDesc} | {error, term()}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [21,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41,32,
                124,32,39,95,39]}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [23,70,117,110,99,116,105,111,110,32,61,32,97,116,111,109,40,
                41,32,124,32,39,95,39]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [23,65,114,105,116,121,32,61,32,105,110,116,101,103,101,114,40,
               41,32,124,32,39,95,39]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [22,77,97,116,99,104,68,101,115,99,32,61,32,91,77,97,116,99,104,
              78,117,109,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "HMatchNum = {matched, node(), integer()} | {matched, node(), 0, RPCError}"}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [157,84,104,105,115,32,102,117,110,99,116,105,111,110,32,
                   100,105,115,97,98,108,101,115,32,99,97,108,108,32,116,114,
                   97,99,105,110,103,32,111,110,32,116,104,101,32,115,112,101,
                   99,105,102,105,101,100,32,102,117,110,99,116,105,111,110,
                   115,46,32,84,104,101,32,115,101,109,97,110,116,105,99,115,
                   32,111,102,32,116,104,101,32,112,97,114,97,109,101,116,101,
                   114,32,105,115,32,116,104,101,32,115,97,109,101,32,97,115,
                   32,102,111,114,32,116,104,101,32,99,111,114,114,101,115,
                   112,111,110,100,105,110,103,32,102,117,110,99,116,105,111,
                   110,32,115,112,101,99,105,102,105,99,97,116,105,111,110,32,
                   105,110]}],
                0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,[15,91,116,112,108,45,50,93,40,35,116,112,108,45,50,41]},
               {sep,
                [{text,"/. Both local and global call trace is disabled."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "]The return value reflects how many functions that matched, and is constructed as described in"}],
                0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,[{text,"\n. No tuple"}],0,false},
               {text,"\f*{saved, N}*"},
               {sep,
                [{text,"/is however ever returned (for obvious reasons)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\t## ctpl()"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [29,83,97,109,101,32,97,115,32,99,116,112,108,40,123,39,95,39,
                 44,32,39,95,39,44,32,39,95,39,125,41]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[15,35,35,32,99,116,112,108,40,77,111,100,117,108,101,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text," Same as ctpl({Module, '_', '_'})"}],0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [25,35,35,32,99,116,112,108,40,77,111,100,117,108,101,44,32,70,117,
           110,99,116,105,111,110,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"%Same as ctpl({Module, Function, '_'})"}],0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text," ## ctpl(Module, Function, Arity)"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"'Same as ctpl({Module, Function, Arity})"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          "G## ctpl({Module, Function, Arity}) -> {ok, MatchDesc} | {error, term()}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [22,84,104,105,115,32,102,117,110,99,116,105,111,110,32,119,
                   111,114,107,115,32,97,115]}],
                0,false},
               {text,[15,91,99,116,112,45,49,93,40,35,99,116,112,45,49,41]},
               {sep,
                [{text,"', but only disables tracing set up with"}],
                0,false},
               {text,[15,91,116,112,108,45,50,93,40,35,116,112,108,45,50,41]},
               {sep,[{text,"\t(not with"}],0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,[{text,[2,41,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\t## ctpg()"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [29,83,97,109,101,32,97,115,32,99,116,112,103,40,123,39,95,39,
                 44,32,39,95,39,44,32,39,95,39,125,41]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[15,35,35,32,99,116,112,103,40,77,111,100,117,108,101,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text," Same as ctpg({Module, '_', '_'})"}],0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [25,35,35,32,99,116,112,103,40,77,111,100,117,108,101,44,32,70,117,
           110,99,116,105,111,110,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"5>Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"%Same as ctpg({Module, Function, '_'})"}],0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text," ## ctpg(Module, Function, Arity)"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"5>Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"'Same as ctpg({Module, Function, Arity})"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          "G## ctpg({Module, Function, Arity}) -> {ok, MatchDesc} | {error, term()}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Clear call trace pattern for the specified functions"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [22,84,104,105,115,32,102,117,110,99,116,105,111,110,32,119,
                   111,114,107,115,32,97,115]}],
                0,false},
               {text,[15,91,99,116,112,45,49,93,40,35,99,116,112,45,49,41]},
               {sep,
                [{text,"', but only disables tracing set up with"}],
                0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,[{text,"\t(not with"}],0,false},
               {text,[15,91,116,112,108,45,50,93,40,35,116,112,108,45,50,41]},
               {sep,[{text,[2,41,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,"3## ctpe(Event) -> {ok, MatchDesc} | {error, term()}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"+Clear trace pattern for the specified event"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [24,69,118,101,110,116,32,61,32,115,101,110,100,32,124,32,39,114,
              101,99,101,105,118,101,39]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [22,77,97,116,99,104,68,101,115,99,32,61,32,91,77,97,116,99,104,
              78,117,109,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "@MatchNum = {matched, node(), 1} | {matched, node(), 0, RPCError}"}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "IThis function clears match specifications for the specified trace event ("}],
                0,false},
               {text,[6,42,115,101,110,100,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"\v*'receive'*"},
               {sep,
                [{text,
                  "O). It will revert back to the default behavior of tracing all triggered events."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"-The return value follow the same style as for"}],
                0,false},
               {text,[15,91,99,116,112,45,49,93,40,35,99,116,112,45,49,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[14,35,35,32,108,116,112,40,41,32,45,62,32,111,107]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "<List saved and built-in match specifications on the console."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "{Use this function to recall all match specifications previously used in the session (i. e. previously saved during calls to"}],
                0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,
                [{text,
                  "Â£, and built-in match specifications. This is very useful, as a complicated match_spec can be quite awkward to write. Note that the match specifications are lost if"}],
                0,false},
               {text,
                [17,91,115,116,111,112,45,48,93,40,35,115,116,111,112,45,48,
                 41]},
               {sep,[{text,"\nis called."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [130,77,97,116,99,104,32,115,112,101,99,105,102,105,99,97,
                   116,105,111,110,115,32,117,115,101,100,32,99,97,110,32,98,
                   101,32,115,97,118,101,100,32,105,110,32,97,32,102,105,108,
                   101,32,40,105,102,32,97,32,114,101,97,100,45,119,114,105,
                   116,101,32,102,105,108,101,32,115,121,115,116,101,109,32,
                   105,115,32,112,114,101,115,101,110,116,41,32,102,111,114,
                   32,117,115,101,32,105,110,32,108,97,116,101,114,32,100,101,
                   98,117,103,103,105,110,103,32,115,101,115,115,105,111,110,
                   115,44,32,115,101,101]}],
                0,false},
               {text,[15,91,119,116,112,45,49,93,40,35,119,116,112,45,49,41]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[15,91,114,116,112,45,49,93,40,35,114,116,112,45,49,41]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(There are three built-in trace patterns:"}],
                0,false},
               {text,
                [17,42,101,120,99,101,112,116,105,111,110,95,116,114,97,99,
                 101,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[14,42,99,97,108,108,101,114,95,116,114,97,99,101,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,
                [24,42,99,97,108,108,101,114,95,101,120,99,101,112,116,105,
                 111,110,95,116,114,97,99,101,42]},
               {sep,[{text,[3,40,111,114]}],0,false},
               {text,[3,42,120,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[3,42,99,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[4,42,99,120,42]},
               {sep,
                [{text,
                  [271,114,101,115,112,101,99,116,105,118,101,108,121,41,46,
                   32,69,120,99,101,112,116,105,111,110,32,116,114,97,99,101,
                   32,115,101,116,115,32,97,32,116,114,97,99,101,32,119,104,
                   105,99,104,32,119,105,108,108,32,115,104,111,119,32,102,
                   117,110,99,116,105,111,110,32,110,97,109,101,115,44,32,112,
                   97,114,97,109,101,116,101,114,115,44,32,114,101,116,117,
                   114,110,32,118,97,108,117,101,115,32,97,110,100,32,101,120,
                   99,101,112,116,105,111,110,115,32,116,104,114,111,119,110,
                   32,102,114,111,109,32,102,117,110,99,116,105,111,110,115,
                   46,32,67,97,108,108,101,114,32,116,114,97,99,101,115,32,
                   100,105,115,112,108,97,121,32,102,117,110,99,116,105,111,
                   110,32,110,97,109,101,115,44,32,112,97,114,97,109,101,116,
                   101,114,115,32,97,110,100,32,105,110,102,111,114,109,97,
                   116,105,111,110,32,97,98,111,117,116,32,119,104,105,99,104,
                   32,102,117,110,99,116,105,111,110,32,99,97,108,108,101,100,
                   32,105,116,46,32,65,110,32,101,120,97,109,112,108,101,32,
                   117,115,105,110,103,32,97,32,98,117,105,108,116,45,105,110,
                   32,97,108,105,97,115,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"\t\n(x@y)4> "},
               {text,
                [22,100,98,103,58,116,112,40,108,105,115,116,115,44,115,111,
                 114,116,44,99,120,41,46]},
               {text,
                "5\n{ok,[{matched,nonode@nohost,2},{saved,cx}]}\n(x@y)4> "},
               {text,
                [18,108,105,115,116,115,58,115,111,114,116,40,91,50,44,49,93,
                 41,46]},
               {text,[2,10,40]},
               {text,[7,60,48,46,51,50,46,48]},
               {text,"3>) call lists:sort([2,1]) ({erl_eval,do_apply,5})\n("},
               {text,[7,60,48,46,51,50,46,48]},
               {text,",>) returned from lists:sort/1 -> [1,2]\n[1,2]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[14,35,35,32,100,116,112,40,41,32,45,62,32,111,107]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"&Delete all saved match specifications."}],0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "LUse this function to \"forget\" all match specifications saved during calls to"}],
                0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,
                [{text,
                  "V. This is useful when one wants to restore other match specifications from a file with"}],
                0,false},
               {text,[15,91,114,116,112,45,49,93,40,35,114,116,112,45,49,41]},
               {sep,[{text,[5,46,32,85,115,101]}],0,false},
               {text,[15,91,100,116,112,45,49,93,40,35,100,116,112,45,49,41]},
               {sep,
                [{text,".to delete specific saved match specifications."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[15,35,35,32,100,116,112,40,78,41,32,45,62,32,111,107]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"#Delete a specific saved match_spec."}],0,false}],
          0,true},
         null},
        null}},
      {sep,[{text,[1,42]},{sep,[{text,"\rN = integer()"}],0,false}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "RUse this function to \"forget\" a specific match specification saved during calls to"}],
                0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"%## wtp(Name) -> ok | {error, IOError}"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              ";Write all saved and built-in match specifications to a file"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,78,97,109,101,32,61,32,115,116,114,105,110,103,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [16,73,79,69,114,114,111,114,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ZThis function will save all match specifications saved during the session (during calls to"}],
                0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,
                [{text,
                  "N) and built-in match specifications in a text file with the name designated by"}],
                0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,
                [{text,
                  "n. The format of the file is textual, why it can be edited with an ordinary text editor, and then restored with"}],
                0,false},
               {text,[15,91,114,116,112,45,49,93,40,35,114,116,112,45,49,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "3Each match spec in the file ends with a full stop ("}],
                0,false},
               {text,[3,42,46,42]},
               {sep,
                [{text,
                  "Y) and new (syntactically correct) match specifications can be added to the file manually."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                   116,117,114,110,115]}],
                0,false},
               {text,[4,42,111,107,42]},
               {sep,
                [{text,
                  "cor an error tuple where the second element contains the I/O error that made the writing impossible."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"### rtp(Name) -> ok | {error, Error}"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"*Read saved match specifications from file."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,78,97,109,101,32,61,32,115,116,114,105,110,103,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[14,69,114,114,111,114,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "PThis function reads match specifications from a file (possibly) generated by the"}],
                0,false},
               {text,[15,91,119,116,112,45,49,93,40,35,119,116,112,45,49,41]},
               {sep,
                [{text,
                  [300,102,117,110,99,116,105,111,110,46,32,73,116,32,99,104,
                   101,99,107,115,32,116,104,101,32,115,121,110,116,97,120,32,
                   111,102,32,97,108,108,32,109,97,116,99,104,32,115,112,101,
                   99,105,102,105,99,97,116,105,111,110,115,32,97,110,100,32,
                   118,101,114,105,102,105,101,115,32,116,104,97,116,32,116,
                   104,101,121,32,97,114,101,32,99,111,114,114,101,99,116,46,
                   32,84,104,101,32,101,114,114,111,114,32,104,97,110,100,108,
                   105,110,103,32,112,114,105,110,99,105,112,108,101,32,105,
                   115,32,34,97,108,108,32,111,114,32,110,111,116,104,105,110,
                   103,34,44,32,105,46,32,101,46,32,105,102,32,115,111,109,
                   101,32,111,102,32,116,104,101,32,109,97,116,99,104,32,115,
                   112,101,99,105,102,105,99,97,116,105,111,110,115,32,97,114,
                   101,32,119,114,111,110,103,44,32,110,111,110,101,32,111,
                   102,32,116,104,101,32,115,112,101,99,105,102,105,99,97,116,
                   105,111,110,115,32,97,114,101,32,97,100,100,101,100,32,116,
                   111,32,116,104,101,32,108,105,115,116,32,111,102,32,115,97,
                   118,101,100,32,109,97,116,99,104,32,115,112,101,99,105,102,
                   105,99,97,116,105,111,110,115,32,102,111,114,32,116,104,
                   101,32,114,117,110,110,105,110,103,32,115,121,115,116,101,
                   109,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(The match specifications in the file are"}],
                0,false},
               {text,"\n**merged**"},
               {sep,
                [{text,
                  "Owith the current match specifications, so that no duplicates are generated. Use"}],
                0,false},
               {text,[15,91,108,116,112,45,48,93,40,35,108,116,112,45,48,41]},
               {sep,
                [{text,
                  "Fto see what numbers were assigned to the specifications from the file."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [262,84,104,101,32,102,117,110,99,116,105,111,110,32,119,105,
                 108,108,32,114,101,116,117,114,110,32,97,110,32,101,114,114,
                 111,114,44,32,101,105,116,104,101,114,32,100,117,101,32,116,
                 111,32,73,47,79,32,112,114,111,98,108,101,109,115,32,40,108,
                 105,107,101,32,97,32,110,111,110,32,101,120,105,115,116,105,
                 110,103,32,111,114,32,110,111,110,32,114,101,97,100,97,98,
                 108,101,32,102,105,108,101,41,32,111,114,32,100,117,101,32,
                 116,111,32,102,105,108,101,32,102,111,114,109,97,116,32,112,
                 114,111,98,108,101,109,115,46,32,84,104,101,32,101,114,114,
                 111,114,115,32,102,114,111,109,32,97,32,98,97,100,32,102,111,
                 114,109,97,116,32,102,105,108,101,32,97,114,101,32,105,110,
                 32,97,32,109,111,114,101,32,111,114,32,108,101,115,115,32,
                 116,101,120,116,117,97,108,32,102,111,114,109,97,116,44,32,
                 119,104,105,99,104,32,119,105,108,108,32,103,105,118,101,32,
                 97,32,104,105,110,116,32,116,111,32,119,104,97,116,39,115,32,
                 99,97,117,115,105,110,103,32,116,104,101,32,112,114,111,98,
                 108,101,109,46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,"2## n(Nodename) -> {ok, Nodename} | {error, Reason}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"-Add a remote node to the list of traced nodes"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,78,111,100,101,110,97,109,101,32,61,32,97,116,111,109,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,[5,42,100,98,103,42]},
               {sep,
                [{text,
                  "Jserver keeps a list of nodes where tracing should be performed. Whenever a"}],
                0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,[{text,"\tcall or a"}],0,false},
               {text,"\v[p-2](#p-2)"},
               {sep,
                [{text,
                  "\\call is made, it is executed for all nodes in this list including the local node (except for"}],
                0,false},
               {text,"\v[p-2](#p-2)"},
               {sep,
                [{text,
                  [15,119,105,116,104,32,97,32,115,112,101,99,105,102,105,
                   99]}],
                0,false},
               {text,[7,42,112,105,100,40,41,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"\b*port()*"},
               {sep,
                [{text,
                  "xas first argument, in which case the command is executed only on the node where the designated process or port resides)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\"This function adds a remote node ("}],0,false},
               {text,"\n*Nodename*"},
               {sep,
                [{text,
                  [271,41,32,116,111,32,116,104,101,32,108,105,115,116,32,111,
                   102,32,110,111,100,101,115,32,119,104,101,114,101,32,116,
                   114,97,99,105,110,103,32,105,115,32,112,101,114,102,111,
                   114,109,101,100,46,32,73,116,32,115,116,97,114,116,115,32,
                   97,32,116,114,97,99,101,114,32,112,114,111,99,101,115,115,
                   32,111,110,32,116,104,101,32,114,101,109,111,116,101,32,
                   110,111,100,101,44,32,119,104,105,99,104,32,119,105,108,
                   108,32,115,101,110,100,32,97,108,108,32,116,114,97,99,101,
                   32,109,101,115,115,97,103,101,115,32,116,111,32,116,104,
                   101,32,116,114,97,99,101,114,32,112,114,111,99,101,115,115,
                   32,111,110,32,116,104,101,32,108,111,99,97,108,32,110,111,
                   100,101,32,40,118,105,97,32,116,104,101,32,69,114,108,97,
                   110,103,32,100,105,115,116,114,105,98,117,116,105,111,110,
                   41,46,32,73,102,32,110,111,32,116,114,97,99,101,114,32,112,
                   114,111,99,101,115,115,32,105,115,32,114,117,110,110,105,
                   110,103,32,111,110,32,116,104,101,32,108,111,99,97,108,32,
                   110,111,100,101,44,32,116,104,101,32,101,114,114,111,114,
                   32,114,101,97,115,111,110]}],
                0,false},
               {text,
                [17,42,110,111,95,108,111,99,97,108,95,116,114,97,99,101,114,
                 42]},
               {sep,
                [{text,
                  "Jis returned. The tracer process on the local node must be started with the"}],
                0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,50,93,40,35,116,114,97,99,101,
                 114,45,50,41]},
               {sep,[{text,"\tfunction."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,"\n*Nodename*"},
               {sep,[{text,"#is the local node, the error reason"}],0,false},
               {text,
                [21,42,99,97,110,116,95,97,100,100,95,108,111,99,97,108,95,
                 110,111,100,101,42]},
               {sep,[{text,"\fis returned."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,73,102,32,97,32,116,114,97,99,101,32,112,111,114,116,32,
                   40,115,101,101]}],
                0,false},
               {text,
                [29,91,116,114,97,99,101,95,112,111,114,116,45,50,93,40,35,
                 116,114,97,99,101,95,112,111,114,116,45,50,41]},
               {sep,
                [{text,
                  "e) is running on the local node, remote nodes cannot be traced with a tracer process. The error reason"}],
                0,false},
               {text,"%*cant_trace_remote_pid_to_local_port*"},
               {sep,
                [{text,
                  "Lis returned. A trace port can however be started on the remote node with the"}],
                0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,51,93,40,35,116,114,97,99,101,
                 114,45,51,41]},
               {sep,[{text,"\tfunction."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"2The function will also return an error if the node"}],
                0,false},
               {text,"\n*Nodename*"},
               {sep,
                [{text,
                  [17,105,115,32,110,111,116,32,114,101,97,99,104,97,98,108,
                   101,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [21,35,35,32,99,110,40,78,111,100,101,110,97,109,101,41,32,45,62,32,
           111,107]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"+Clear a node from the list of traced nodes."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,78,111,100,101,110,97,109,101,32,61,32,97,116,111,109,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "@Clears a node from the list of traced nodes. Subsequent calls to"}],
                0,false},
               {text,"\r[tp-2](#tp-2)"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\v[p-2](#p-2)"},
               {sep,
                [{text,
                  "ewill not consider that node, but tracing already activated on the node will continue to be in effect."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
               {text,[4,42,111,107,42]},
               {sep,
                [{text,[14,44,32,99,97,110,110,111,116,32,102,97,105,108,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\r## ln() -> ok"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"-Show the list of traced nodes on the console."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,".Shows the list of traced nodes on the console."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,"5## tracer() -> {ok, pid()} | {error, already_started}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"2Start a tracer server that handles trace messages."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "yThis function starts a server on the local node that will be the recipient of all trace messages. All subsequent calls to"}],
                0,false},
               {text,"\v[p-2](#p-2)"},
               {sep,
                [{text,
                  "?will result in messages sent to the newly started trace server."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [139,65,32,116,114,97,99,101,32,115,101,114,118,101,114,32,
                   115,116,97,114,116,101,100,32,105,110,32,116,104,105,115,
                   32,119,97,121,32,119,105,108,108,32,115,105,109,112,108,
                   121,32,100,105,115,112,108,97,121,32,116,104,101,32,116,
                   114,97,99,101,32,109,101,115,115,97,103,101,115,32,105,110,
                   32,97,32,102,111,114,109,97,116,116,101,100,32,119,97,121,
                   32,105,110,32,116,104,101,32,69,114,108,97,110,103,32,115,
                   104,101,108,108,32,40,105,46,32,101,46,32,117,115,101,32,
                   105,111,58,102,111,114,109,97,116,41,46,32,83,101,101]}],
                0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,50,93,40,35,116,114,97,99,101,
                 114,45,50,41]},
               {sep,
                [{text,
                  "Efor a description of how the trace message handler can be customized."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"/To start a similar tracer on a remote node, use"}],
                0,false},
               {text,"\v[n-1](#n-1)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,"5## tracer(Type, Data) -> {ok, pid()} | {error, Error}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"0Start a tracer server with additional parameters"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [30,84,121,112,101,32,61,32,112,111,114,116,32,124,32,112,
                    114,111,99,101,115,115,32,124,32,109,111,100,117,108,
                    101]}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"/Data = PortGenerator | HandlerSpec | ModuleSpec"}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,[{text,"$PortGenerator = fun() (no arguments)"}],0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,[14,69,114,114,111,114,32,61,32,116,101,114,109,40,41]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"'HandlerSpec = {HandlerFun, InitialData}"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,[{text,"\"HandlerFun = fun() (two arguments)"}],0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "?ModuleSpec = fun() (no arguments) | {TracerModule, TracerState}"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [21,84,114,97,99,101,114,77,111,100,117,108,101,32,61,32,97,116,
              111,109,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"\"InitialData = TracerState = term()"}],0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "kThis function starts a tracer server with additional parameters on the local node. The first parameter, the"}],
                0,false},
               {text,[6,42,84,121,112,101,42]},
               {sep,
                [{text,
                  "H, indicates if trace messages should be handled by a receiving process ("}],
                0,false},
               {text,"\t*process*"},
               {sep,
                [{text,
                  [21,41,44,32,98,121,32,97,32,116,114,97,99,101,114,32,112,
                   111,114,116,32,40]}],
                0,false},
               {text,[6,42,112,111,114,116,42]},
               {sep,
                [{text,
                  [25,41,32,111,114,32,98,121,32,97,32,116,114,97,99,101,114,
                   32,109,111,100,117,108,101,32,40]}],
                0,false},
               {text,"\b*module*"},
               {sep,
                [{text,"+). For a description about tracer ports see"}],
                0,false},
               {text,
                [29,91,116,114,97,99,101,95,112,111,114,116,45,50,93,40,35,
                 116,114,97,99,101,95,112,111,114,116,45,50,41]},
               {sep,
                [{text,
                  [28,97,110,100,32,102,111,114,32,97,32,116,114,97,99,101,
                   114,32,109,111,100,117,108,101,115,32,115,101,101]}],
                0,false},
               {text,
                [31,91,101,114,116,115,47,101,114,108,95,116,114,97,99,101,
                 114,93,40,46,47,101,114,108,95,116,114,97,99,101,114,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,[6,42,84,121,112,101,42]},
               {sep,[{text,[2,105,115]}],0,false},
               {text,"\t*process*"},
               {sep,
                [{text,"/, a message handler function can be specified ("}],
                0,false},
               {text,"\r*HandlerSpec*"},
               {sep,
                [{text,"*). The handler function, which should be a"}],
                0,false},
               {text,[5,42,102,117,110,42]},
               {sep,
                [{text,
                  [267,116,97,107,105,110,103,32,116,119,111,32,97,114,103,
                   117,109,101,110,116,115,44,32,119,105,108,108,32,98,101,32,
                   99,97,108,108,101,100,32,102,111,114,32,101,97,99,104,32,
                   116,114,97,99,101,32,109,101,115,115,97,103,101,44,32,119,
                   105,116,104,32,116,104,101,32,102,105,114,115,116,32,97,
                   114,103,117,109,101,110,116,32,99,111,110,116,97,105,110,
                   105,110,103,32,116,104,101,32,109,101,115,115,97,103,101,
                   32,97,115,32,105,116,32,105,115,32,97,110,100,32,116,104,
                   101,32,115,101,99,111,110,100,32,97,114,103,117,109,101,
                   110,116,32,99,111,110,116,97,105,110,105,110,103,32,116,
                   104,101,32,114,101,116,117,114,110,32,118,97,108,117,101,
                   32,102,114,111,109,32,116,104,101,32,108,97,115,116,32,105,
                   110,118,111,99,97,116,105,111,110,32,111,102,32,116,104,
                   101,32,102,117,110,46,32,84,104,101,32,105,110,105,116,105,
                   97,108,32,118,97,108,117,101,32,111,102,32,116,104,101,32,
                   115,101,99,111,110,100,32,112,97,114,97,109,101,116,101,
                   114,32,105,115,32,115,112,101,99,105,102,105,101,100,32,
                   105,110,32,116,104,101]}],
                0,false},
               {text,"\r*InitialData*"},
               {sep,[{text,"\vpart of the"}],0,false},
               {text,"\r*HandlerSpec*"},
               {sep,[{text,[5,46,32,84,104,101]}],0,false},
               {text,"\f*HandlerFun*"},
               {sep,
                [{text,
                  "umay choose any appropriate action to take when invoked, and can save a state for the next invocation by returning it."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,[6,42,84,121,112,101,42]},
               {sep,[{text,[2,105,115]}],0,false},
               {text,[6,42,112,111,114,116,42]},
               {sep,
                [{text,"', then the second parameter should be a"}],
                0,false},
               {text,[7,42,42,102,117,110,42,42]},
               {sep,
                [{text,
                  "Rwhich takes no arguments and returns a newly opened trace port when called. Such a"}],
                0,false},
               {text,[7,42,42,102,117,110,42,42]},
               {sep,[{text,"\"is preferably generated by calling"}],0,false},
               {text,
                [29,91,116,114,97,99,101,95,112,111,114,116,45,50,93,40,35,
                 116,114,97,99,101,95,112,111,114,116,45,50,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,105,102]}],0,false},
               {text,[6,42,84,121,112,101,42]},
               {sep,[{text,[2,105,115]}],0,false},
               {text,"\b*module*"},
               {sep,
                [{text,
                  "C, then the second parameter should be either a tuple describing the"}],
                0,false},
               {text,
                [31,91,101,114,116,115,47,101,114,108,95,116,114,97,99,101,
                 114,93,40,46,47,101,114,108,95,116,114,97,99,101,114,41]},
               {sep,
                [{text,
                  "pmodule to be used for tracing and the state to be used for that tracer module or a fun returning the same tuple."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "RIf an error is returned, it can either be due to a tracer server already running ("}],
                0,false},
               {text,
                [25,42,123,101,114,114,111,114,44,97,108,114,101,97,100,121,
                 95,115,116,97,114,116,101,100,125,42]},
               {sep,
                [{text,
                  [15,41,32,111,114,32,100,117,101,32,116,111,32,116,104,
                   101]}],
                0,false},
               {text,"\f*HandlerFun*"},
               {sep,
                [{text,
                  [22,116,104,114,111,119,105,110,103,32,97,110,32,101,120,99,
                   101,112,116,105,111,110,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"/To start a similar tracer on a remote node, use"}],
                0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,51,93,40,35,116,114,97,99,101,
                 114,45,51,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          "C## tracer(Nodename, Type, Data) -> {ok, Nodename} | {error, Reason}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              ">Start a tracer server on given node with additional parameters"}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,78,111,100,101,110,97,109,101,32,61,32,97,116,111,109,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [30,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,
                   115,32,101,113,117,105,118,97,108,101,110,116,32,116,111]}],
                0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,50,93,40,35,116,114,97,99,101,
                 114,45,50,41]},
               {sep,
                [{text,
                  "?, but acts on the given node. A tracer is started on the node ("}],
                0,false},
               {text,"\n*Nodename*"},
               {sep,
                [{text,
                  "4) and the node is added to the list of traced nodes."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,"\"This function is not equivalent to"}],
                           0,false},
                          {text,"\v[n-1](#n-1)"},
                          {sep,[{text,[7,46,32,87,104,105,108,101]}],0,false},
                          {text,"\v[n-1](#n-1)"},
                          {sep,
                           [{text,
                             [130,115,116,97,114,116,115,32,97,32,112,114,111,
                              99,101,115,115,32,116,114,97,99,101,114,32,119,
                              104,105,99,104,32,114,101,100,105,114,101,99,
                              116,115,32,97,108,108,32,116,114,97,99,101,32,
                              105,110,102,111,114,109,97,116,105,111,110,32,
                              116,111,32,97,32,112,114,111,99,101,115,115,32,
                              116,114,97,99,101,114,32,111,110,32,116,104,101,
                              32,108,111,99,97,108,32,110,111,100,101,32,40,
                              105,46,101,46,32,116,104,101,32,116,114,97,99,
                              101,32,99,111,110,116,114,111,108,32,110,111,
                              100,101,41,44]}],
                           0,false},
                          {text,
                           [21,91,116,114,97,99,101,114,45,51,93,40,35,116,
                            114,97,99,101,114,45,51,41]},
                          {sep,
                           [{text,
                             "Ystarts a tracer of any type which is independent of the tracer on the trace control node."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [16,70,111,114,32,100,101,116,97,105,108,115,44,32,115,101,
                   101]}],
                0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,50,93,40,35,116,114,97,99,101,
                 114,45,50,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"(## trace_port(Type, Parameters) -> fun()"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"*Create and returns a trace port generating"}],
              0,false},
             {text,[7,42,42,102,117,110,42,42]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [16,84,121,112,101,32,61,32,105,112,32,124,32,102,105,
                      108,101]}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "2Parameters = Filename | WrapFilesSpec | IPPortSpec"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,")Filename = string() | [string()] | atom()"}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   "{WrapFilesSpec = {Filename, wrap, Suffix} | {Filename, wrap, Suffix, WrapSize} | {Filename, wrap, Suffix, WrapSize, WrapCnt}"}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [17,83,117,102,102,105,120,32,61,32,115,116,114,105,110,103,
                   40,41]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,",WrapSize = integer() >= 0 | {time, WrapTime}"}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [25,87,114,97,112,84,105,109,101,32,61,32,105,110,116,101,103,
                 101,114,40,41,32,62,61,32,49]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [24,87,114,97,112,67,110,116,32,61,32,105,110,116,101,103,101,
                114,40,41,32,62,61,32,49]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"/IpPortSpec = PortNumber | {PortNumber, QueSize}"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [22,80,111,114,116,78,117,109,98,101,114,32,61,32,105,110,116,
              101,103,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [19,81,117,101,83,105,122,101,32,61,32,105,110,116,101,103,101,
             114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"-This function creates a trace port generating"}],
                0,false},
               {text,[7,42,42,102,117,110,42,42]},
               {sep,[{text,[5,46,32,84,104,101]}],0,false},
               {text,[7,42,42,102,117,110,42,42]},
               {sep,
                [{text,
                  [145,116,97,107,101,115,32,110,111,32,97,114,103,117,109,
                   101,110,116,115,32,97,110,100,32,114,101,116,117,114,110,
                   115,32,97,32,110,101,119,108,121,32,111,112,101,110,101,
                   100,32,116,114,97,99,101,32,112,111,114,116,46,32,84,104,
                   101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,
                   102,114,111,109,32,116,104,105,115,32,102,117,110,99,116,
                   105,111,110,32,105,115,32,115,117,105,116,97,98,108,101,32,
                   97,115,32,97,32,115,101,99,111,110,100,32,112,97,114,97,
                   109,101,116,101,114,32,116,111,32,116,114,97,99,101,114,47,
                   50,44,32,105,46,101,46]}],
                0,false},
               {text,",*dbg:tracer(port, dbg:trace_port(ip, 4711))*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "Â¶A trace port is an Erlang port to a dynamically linked in driver that handles trace messages directly, without the overhead of sending them as messages in the Erlang virtual machine."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"0Two trace drivers are currently implemented, the"}],
                0,false},
               {text,[6,42,102,105,108,101,42]},
               {sep,[{text,[7,97,110,100,32,116,104,101]}],0,false},
               {text,[4,42,105,112,42]},
               {sep,
                [{text,
                  [149,116,114,97,99,101,32,100,114,105,118,101,114,115,46,32,
                   84,104,101,32,102,105,108,101,32,100,114,105,118,101,114,
                   32,115,101,110,100,115,32,97,108,108,32,116,114,97,99,101,
                   32,109,101,115,115,97,103,101,115,32,105,110,116,111,32,
                   111,110,101,32,111,114,32,115,101,118,101,114,97,108,32,98,
                   105,110,97,114,121,32,102,105,108,101,115,44,32,102,114,
                   111,109,32,119,104,101,114,101,32,116,104,101,121,32,108,
                   97,116,101,114,32,99,97,110,32,98,101,32,102,101,116,99,
                   104,101,100,32,97,110,100,32,112,114,111,99,101,115,115,
                   101,100,32,119,105,116,104,32,116,104,101]}],
                0,false},
               {text,"![trace_client-2](#trace_client-2)"},
               {sep,
                [{text,
                  "zfunction. The ip driver opens a TCP/IP port where it listens for connections. When a client (preferably started by calling"}],
                0,false},
               {text,"![trace_client-2](#trace_client-2)"},
               {sep,
                [{text,
                  "~on another Erlang node) connects, all trace messages are sent over the IP network for further processing by the remote client."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "NUsing a trace port significantly lowers the overhead imposed by using tracing."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "Â¢The file trace driver expects a filename or a wrap files specification as parameter. A file is written with a high degree of buffering, why all trace messages are"}],
                0,false},
               {text,[7,42,42,110,111,116,42,42]},
               {sep,
                [{text,
                  "pguaranteed to be saved in the file in case of a system crash. That is the price to pay for low tracing overhead."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "Â¶A wrap files specification is used to limit the disk space consumed by the trace. The trace is written to a limited number of files each with a limited size. The actual filenames are"}],
                0,false},
               {text,
                [30,42,70,105,108,101,110,97,109,101,32,43,43,32,83,101,113,
                 67,110,116,32,43,43,32,83,117,102,102,105,120,42]},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,"\b*SeqCnt*"},
               {sep,
                [{text,
                  [31,99,111,117,110,116,115,32,97,115,32,97,32,100,101,99,
                   105,109,97,108,32,115,116,114,105,110,103,32,102,114,111,
                   109]}],
                0,false},
               {text,[3,42,48,42]},
               {sep,[{text,[2,116,111]}],0,false},
               {text,"\t*WrapCnt*"},
               {sep,
                [{text,
                  [26,97,110,100,32,116,104,101,110,32,97,114,111,117,110,100,
                   32,97,103,97,105,110,32,102,114,111,109]}],
                0,false},
               {text,[3,42,48,42]},
               {sep,
                [{text,
                  "D. When a trace term written to the current file makes it longer than"}],
                0,false},
               {text,"\n*WrapSize*"},
               {sep,
                [{text,
                  "N, that file is closed, if the number of files in this wrap trace is as many as"}],
                0,false},
               {text,"\t*WrapCnt*"},
               {sep,
                [{text,
                  [135,116,104,101,32,111,108,100,101,115,116,32,102,105,108,
                   101,32,105,115,32,100,101,108,101,116,101,100,32,116,104,
                   101,110,32,97,32,110,101,119,32,102,105,108,101,32,105,115,
                   32,111,112,101,110,101,100,32,116,111,32,98,101,99,111,109,
                   101,32,116,104,101,32,99,117,114,114,101,110,116,46,32,84,
                   104,117,115,44,32,119,104,101,110,32,97,32,119,114,97,112,
                   32,116,114,97,99,101,32,104,97,115,32,98,101,101,110,32,
                   115,116,111,112,112,101,100,44,32,116,104,101,114,101,32,
                   97,114,101,32,97,116,32,109,111,115,116]}],
                0,false},
               {text,"\t*WrapCnt*"},
               {sep,
                [{text,")trace files saved with a size of at least"}],
                0,false},
               {text,"\n*WrapSize*"},
               {sep,
                [{text,
                  "`(but not much bigger), except for the last file that might even be empty. The default values are"}],
                0,false},
               {text,
                [21,42,87,114,97,112,83,105,122,101,32,61,32,49,50,56,42,49,
                 48,50,52,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\r*WrapCnt = 8*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,"\b*SeqCnt*"},
               {sep,
                [{text,",values in the filenames are all in the range"}],
                0,false},
               {text,[3,42,48,42]},
               {sep,[{text,[7,116,104,114,111,117,103,104]}],0,false},
               {text,"\t*WrapCnt*"},
               {sep,
                [{text,
                  "Twith a gap in the circular sequence. The gap is needed to find the end of the trace."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[6,73,102,32,116,104,101]}],0,false},
               {text,"\n*WrapSize*"},
               {sep,
                [{text,
                  [15,105,115,32,115,112,101,99,105,102,105,101,100,32,97,
                   115]}],
                0,false},
               {text,
                [18,42,123,116,105,109,101,44,32,87,114,97,112,84,105,109,101,
                 125,42]},
               {sep,
                [{text,
                  "<, the current file is closed when it has been open more than"}],
                0,false},
               {text,"\n*WrapTime*"},
               {sep,
                [{text,"2milliseconds, regardless of it being empty or not."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\"The ip trace driver has a queue of"}],0,false},
               {text,"\t*QueSize*"},
               {sep,
                [{text,
                  [264,109,101,115,115,97,103,101,115,32,119,97,105,116,105,
                   110,103,32,116,111,32,98,101,32,100,101,108,105,118,101,
                   114,101,100,46,32,73,102,32,116,104,101,32,100,114,105,118,
                   101,114,32,99,97,110,110,111,116,32,100,101,108,105,118,
                   101,114,32,109,101,115,115,97,103,101,115,32,97,115,32,102,
                   97,115,116,32,97,115,32,116,104,101,121,32,97,114,101,32,
                   112,114,111,100,117,99,101,100,32,98,121,32,116,104,101,32,
                   114,117,110,116,105,109,101,32,115,121,115,116,101,109,44,
                   32,97,32,115,112,101,99,105,97,108,32,109,101,115,115,97,
                   103,101,32,105,115,32,115,101,110,116,44,32,119,104,105,99,
                   104,32,105,110,100,105,99,97,116,101,115,32,104,111,119,32,
                   109,97,110,121,32,109,101,115,115,97,103,101,115,32,116,
                   104,97,116,32,97,114,101,32,100,114,111,112,112,101,100,46,
                   32,84,104,97,116,32,109,101,115,115,97,103,101,32,119,105,
                   108,108,32,97,114,114,105,118,101,32,97,116,32,116,104,101,
                   32,104,97,110,100,108,101,114,32,102,117,110,99,116,105,
                   111,110,32,115,112,101,99,105,102,105,101,100,32,105,110]}],
                0,false},
               {text,"![trace_client-3](#trace_client-3)"},
               {sep,[{text,"\fas the tuple"}],0,false},
               {text,"\v*{drop, N}*"},
               {sep,[{text,[5,119,104,101,114,101]}],0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  "Â»is the number of consecutive messages dropped. In case of heavy tracing, drop's are likely to occur, and they surely occur if no client is reading the trace messages. The default value of"}],
                0,false},
               {text,"\t*QueSize*"},
               {sep,[{text,[7,105,115,32,50,48,48,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [21,35,35,32,102,108,117,115,104,95,116,114,97,99,101,95,112,111,
           114,116,40,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"'Equivalent to flush_trace_port(node())."}],0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rEquivalent to"}],0,false},
               {text,
                [26,42,102,108,117,115,104,95,116,114,97,99,101,95,112,111,
                 114,116,40,110,111,100,101,40,41,41,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,"5## flush_trace_port(Nodename) -> ok | {error, Reason}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "@Flush internal data buffers in a trace driver on the given node."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rEquivalent to"}],0,false},
               {text,"$*trace_port_control(Nodename,flush)*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text," ## trace_port_control(Operation)"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"3Equivalent to trace_port_control(node(),Operation)."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rEquivalent to"}],0,false},
               {text,"&*trace_port_control(node(),Operation)*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          "Q## trace_port_control(Nodename,Operation) ->  ok | {ok, Result} | {error, Reason}"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "NPerform a control operation on the active trace port driver on the given node."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,78,111,100,101,110,97,109,101,32,61,32,97,116,111,109,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "cThis function is used to do a control operation on the active trace port driver on the given node ("}],
                0,false},
               {text,"\n*Nodename*"},
               {sep,
                [{text,
                  "d). Which operations are allowed as well as their return values depend on which trace driver is used."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [14,82,101,116,117,114,110,115,32,101,105,116,104,101,114]}],
                0,false},
               {text,[4,42,111,107,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,[14,42,123,111,107,44,32,82,101,115,117,108,116,125,42]},
               {sep,[{text,"#if the operation was successful, or"}],0,false},
               {text,
                [17,42,123,101,114,114,111,114,44,32,82,101,97,115,111,110,
                 125,42]},
               {sep,
                [{text,
                  "Sif the current tracer is a process or if it is a port not supporting the operation."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [22,84,104,101,32,97,108,108,111,119,101,100,32,118,97,108,
                   117,101,115,32,102,111,114]}],
                0,false},
               {text,"\v*Operation*"},
               {sep,[{text,[4,97,114,101,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,[5,102,108,117,115,104]}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             [150,84,104,105,115,32,102,117,110,99,116,105,
                              111,110,32,105,115,32,117,115,101,100,32,116,
                              111,32,102,108,117,115,104,32,116,104,101,32,
                              105,110,116,101,114,110,97,108,32,98,117,102,
                              102,101,114,115,32,104,101,108,100,32,98,121,32,
                              97,32,116,114,97,99,101,32,112,111,114,116,32,
                              100,114,105,118,101,114,46,32,67,117,114,114,
                              101,110,116,108,121,32,111,110,108,121,32,116,
                              104,101,32,102,105,108,101,32,116,114,97,99,101,
                              32,100,114,105,118,101,114,32,115,117,112,112,
                              111,114,116,115,32,116,104,105,115,32,111,112,
                              101,114,97,116,105,111,110,46,32,82,101,116,117,
                              114,110,115]}],
                           0,false},
                          {text,[2,111,107]},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     [15,103,101,116,95,108,105,115,116,101,110,95,112,111,
                      114,116]}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
                        {text,"\f{ok, IpPort}"},
                        {sep,[{text,[5,119,104,101,114,101]}],0,false},
                        {text,[6,73,112,80,111,114,116]},
                        {sep,
                         [{text,
                           "iis the IP port number used by the driver listen socket. Only the ip trace driver supports this operation."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"*## trace_client(Type, Parameters) -> pid()"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "GStart a trace client that reads messages created by a trace port driver"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [30,84,121,112,101,32,61,32,105,112,32,124,32,102,105,108,
                   101,32,124,32,102,111,108,108,111,119,95,102,105,108,101]}],
                0,false}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  "8Parameters = Filename | WrapFilesSpec | IPClientPortSpec"}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,")Filename = string() | [string()] | atom()"}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,[{text," WrapFilesSpec = see trace_port/2"}],0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [17,83,117,102,102,105,120,32,61,32,115,116,114,105,110,103,40,
                41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"6IpClientPortSpec = PortNumber | {Hostname, PortNumber}"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [22,80,111,114,116,78,117,109,98,101,114,32,61,32,105,110,116,
              101,103,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [19,72,111,115,116,110,97,109,101,32,61,32,115,116,114,105,110,
             103,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "Â¡This function starts a trace client that reads the output created by a trace port driver and handles it in mostly the same way as a tracer process created by the"}],
                0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,48,93,40,35,116,114,97,99,101,
                 114,45,48,41]},
               {sep,[{text,"\tfunction."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,[6,42,84,121,112,101,42]},
               {sep,[{text,[2,105,115]}],0,false},
               {text,[6,42,102,105,108,101,42]},
               {sep,
                [{text,
                  ">, the client reads all trace messages stored in the file named"}],
                0,false},
               {text,"\n*Filename*"},
               {sep,
                [{text,
                  [15,111,114,32,115,112,101,99,105,102,105,101,100,32,98,
                   121]}],
                0,false},
               {text,
                [15,42,87,114,97,112,70,105,108,101,115,83,112,101,99,42]},
               {sep,
                [{text,
                  "Ã¥(must be the same as used when creating the trace, see trace_port/2) and let's the default handler function format the messages on the console. This is one way to interpret the data stored in a file by the file trace port driver."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,[6,42,84,121,112,101,42]},
               {sep,[{text,[2,105,115]}],0,false},
               {text,"\r*follow_file*"},
               {sep,
                [{text,
                  [30,44,32,116,104,101,32,99,108,105,101,110,116,32,98,101,
                   104,97,118,101,115,32,97,115,32,105,110,32,116,104,101]}],
                0,false},
               {text,[6,42,102,105,108,101,42]},
               {sep,
                [{text,
                  "Ucase, but keeps trying to read (and process) more data from the file until stopped by"}],
                0,false},
               {text,"+[stop_trace_client-1](#stop_trace_client-1)"},
               {sep,[{text,[1,46]}],0,false},
               {text,
                [15,42,87,114,97,112,70,105,108,101,115,83,112,101,99,42]},
               {sep,
                [{text,"*is not allowed as second argument for this"}],
                0,false},
               {text,[6,42,84,121,112,101,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,[6,42,84,121,112,101,42]},
               {sep,[{text,[2,105,115]}],0,false},
               {text,[4,42,105,112,42]},
               {sep,
                [{text,"(, the client connects to the TCP/IP port"}],
                0,false},
               {text,"\f*PortNumber*"},
               {sep,[{text,"\von the host"}],0,false},
               {text,"\n*Hostname*"},
               {sep,
                [{text,
                  "Q, from where it reads trace messages until the TCP/IP connection is closed. If no"}],
                0,false},
               {text,"\n*Hostname*"},
               {sep,
                [{text,"(is specified, the local host is assumed."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "eAs an example, one can let trace messages be sent over the network to another Erlang node (preferably"}],
                0,false},
               {text,[7,42,42,110,111,116,42,42]},
               {sep,
                [{text,"*distributed), where the formatting occurs:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\vOn the node"}],0,false},
               {text,[7,42,115,116,97,99,107,42]},
               {sep,
                [{text,
                  [22,116,104,101,114,101,39,115,32,97,110,32,69,114,108,97,
                   110,103,32,110,111,100,101]}],
                0,false},
               {text,"\v*ant@stack*"},
               {sep,[{text,"#, in the shell, type the following:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"\f\nant@stack> "},
               {text,"*dbg:tracer(port, dbg:trace_port(ip,4711))."},
               {text,[1,10]},
               {text,
                [20,60,48,46,49,55,46,48,62,10,97,110,116,64,115,116,97,99,
                 107,62,32]},
               {text,
                [20,100,98,103,58,112,40,115,101,108,102,40,41,44,32,115,101,
                 110,100,41,46]},
               {text,[7,10,123,111,107,44,49,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "Ã•All trace messages are now sent to the trace port driver, which in turn listens for connections on the TCP/IP port 4711. If we want to see the messages on another node, preferably on another host, we do like this:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,45,62,32]},
               {text,"&dbg:trace_client(ip, {\"stack\", 4711})."},
               {text,[1,10]},
               {text,"\b<0.42.0>"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "3If we now send a message from the shell on the node"}],
                0,false},
               {text,"\v*ant@stack*"},
               {sep,
                [{text,",, where all sends from the shell are traced:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"\f\nant@stack> "},
               {text,
                [15,115,101,108,102,40,41,32,33,32,104,101,108,108,111,46]},
               {text,[6,10,104,101,108,108,111]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "SThe following will appear at the console on the node that started the trace client:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "[\n(<0.23.0>) <0.23.0> ! hello\n(<0.23.0>) <0.22.0> ! {shell_rep,<0.23.0>,{value,hello,[],[]}}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "kThe last line is generated due to internal message passing in the Erlang shell. The process id's will vary."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,"7## trace_client(Type, Parameters, HandlerSpec) -> pid()"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "dStart a trace client that reads messages created by a trace port driver, with a user defined handler"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [30,84,121,112,101,32,61,32,105,112,32,124,32,102,105,
                      108,101,32,124,32,102,111,108,108,111,119,95,102,105,
                      108,101]}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "8Parameters = Filename | WrapFilesSpec | IPClientPortSpec"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,")Filename = string() | [string()] | atom()"}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,[{text," WrapFilesSpec = see trace_port/2"}],0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [17,83,117,102,102,105,120,32,61,32,115,116,114,105,110,103,
                   40,41]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 "6IpClientPortSpec = PortNumber | {Hostname, PortNumber}"}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [22,80,111,114,116,78,117,109,98,101,114,32,61,32,105,110,116,
                 101,103,101,114,40,41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [19,72,111,115,116,110,97,109,101,32,61,32,115,116,114,105,110,
                103,40,41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,[{text,"'HandlerSpec = {HandlerFun, InitialData}"}],0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,[{text,"\"HandlerFun = fun() (two arguments)"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [20,73,110,105,116,105,97,108,68,97,116,97,32,61,32,116,101,114,
             109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [30,84,104,105,115,32,102,117,110,99,116,105,111,110,32,119,
                   111,114,107,115,32,101,120,97,99,116,108,121,32,97,115]}],
                0,false},
               {text,"![trace_client-2](#trace_client-2)"},
               {sep,
                [{text,
                  "n, but allows you to write your own handler function. The handler function works mostly as the one described in"}],
                0,false},
               {text,
                [21,91,116,114,97,99,101,114,45,50,93,40,35,116,114,97,99,101,
                 114,45,50,41]},
               {sep,
                [{text,
                  "H, but will also have to be prepared to handle trace messages of the form"}],
                0,false},
               {text,"\v*{drop, N}*"},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  "lis the number of dropped messages. This pseudo trace message will only occur if the ip trace driver is used."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [14,70,111,114,32,116,114,97,99,101,32,116,121,112,101]}],
                0,false},
               {text,[6,42,102,105,108,101,42]},
               {sep,
                [{text,
                  [26,44,32,116,104,101,32,112,115,101,117,100,111,32,116,114,
                   97,99,101,32,109,101,115,115,97,103,101]}],
                0,false},
               {text,[14,42,101,110,100,95,111,102,95,116,114,97,99,101,42]},
               {sep,
                [{text,
                  "hwill appear at the end of the trace. The return value from the handler function is in this case ignored."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [31,35,35,32,115,116,111,112,95,116,114,97,99,101,95,99,108,105,101,
           110,116,40,80,105,100,41,32,45,62,32,111,107]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [31,83,116,111,112,32,97,32,116,114,97,99,101,32,99,108,105,101,
               110,116,32,103,114,97,99,101,102,117,108,108,121,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,[{text,[1,42]},{sep,[{text,"\vPid = pid()"}],0,false}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "?This function shuts down a previously started trace client. The"}],
                0,false},
               {text,[5,42,80,105,100,42]},
               {sep,
                [{text,",argument is the process id returned from the"}],
                0,false},
               {text,"![trace_client-2](#trace_client-2)"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"![trace_client-3](#trace_client-3)"},
               {sep,[{text,[5,99,97,108,108,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[15,35,35,32,103,101,116,95,116,114,97,99,101,114,40,41]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"!Equivalent to get_tracer(node())."}],0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rEquivalent to"}],0,false},
               {text,
                [20,42,103,101,116,95,116,114,97,99,101,114,40,110,111,100,
                 101,40,41,41,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"'## get_tracer(Nodename) -> {ok, Tracer}"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "@Return the process or port to which all trace messages are sent."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,78,111,100,101,110,97,109,101,32,61,32,97,116,111,109,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,",Tracer = port() | pid() | {module(), term()}"}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "PReturns the process, port or tracer module to which all trace messages are sent."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[15,35,35,32,115,116,111,112,40,41,32,45,62,32,111,107]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bStop the"}],0,false},
             {text,[5,42,100,98,103,42]},
             {sep,
              [{text,"(server and the tracing of all processes."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\tStops the"}],0,false},
               {text,[5,42,100,98,103,42]},
               {sep,
                [{text,
                  "Â¡server and clears all trace flags for all processes and all local trace patterns for all functions. Also shuts down all trace clients and closes all trace ports."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ANote that no global trace patterns are affected by this function."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [21,35,35,32,115,116,111,112,95,99,108,101,97,114,40,41,32,45,62,32,
           111,107]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bStop the"}],0,false},
             {text,[5,42,100,98,103,42]},
             {sep,
              [{text,
                "Cserver and the tracing of all processes, and clears trace patterns."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "MSame as stop/0, but also clears all trace patterns on global functions calls."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}},
   {sep,
    [{text,"+<a name=\"simple_example\">simple_example</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"+## Simple examples - tracing from the shell"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ";The simplest way of tracing from the Erlang shell is to use"}],
             0,false},
            {text,"\t*dbg:c/3*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\t*dbg:c/4*"},
            {sep,[{text,"\e, e.g. tracing the function"}],0,false},
            {text,
             [18,42,100,98,103,58,103,101,116,95,116,114,97,99,101,114,47,48,
              42]},
            {sep,[{text,[1,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [18,10,40,116,105,103,101,114,64,100,117,114,105,110,41,56,52,62,
              32]},
            {text,
             [25,100,98,103,58,99,40,100,98,103,44,103,101,116,95,116,114,97,
              99,101,114,44,91,93,41,46]},
            {text,[2,10,40]},
            {text,"\v<0.154.0>) "},
            {text,"\r<0.152.0> ! {"},
            {text,"%<0.154.0>,{get_tracer,tiger@durin}}\n("},
            {text,
             [28,60,48,46,49,53,52,46,48,62,41,32,111,117,116,32,123,100,98,
              103,44,114,101,113,44,49,125,10,40]},
            {text,"\v<0.154.0>) "},
            {text,[1,60]},
            {text,"\v< {dbg,{ok,"},
            {text,"\r<0.153.0>}}\n("},
            {text,"\e<0.154.0>) in {dbg,req,1}\n("},
            {text,"\v<0.154.0>) "},
            {text,[1,60]},
            {text,[14,60,32,116,105,109,101,111,117,116,10,123,111,107,44]},
            {text,"\e<0.153.0>}\n(tiger@durin)85>"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ">Another way of tracing from the shell is to explicitly start a"}],
             0,false},
            {text,"\n**tracer**"},
            {sep,
             [{text,
               [16,97,110,100,32,116,104,101,110,32,115,101,116,32,116,104,
                101]}],
             0,false},
            {text,[15,42,42,116,114,97,99,101,32,102,108,97,103,115,42,42]},
            {sep,
             [{text,
               "Zof your choice on the processes you want to trace, e.g. trace messages and process events:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [18,10,40,116,105,103,101,114,64,100,117,114,105,110,41,54,54,62,
              32]},
            {text,
             "?Pid = spawn(fun() -> receive {From,Msg} -> From ! Msg end end)."},
            {text,[1,10]},
            {text,"\e<0.126.0>\n(tiger@durin)67> "},
            {text,"\rdbg:tracer()."},
            {text,[5,10,123,111,107,44]},
            {text,
             [28,60,48,46,49,50,56,46,48,62,125,10,40,116,105,103,101,114,64,
              100,117,114,105,110,41,54,56,62,32]},
            {text,
             [21,100,98,103,58,112,40,80,105,100,44,91,109,44,112,114,111,99,
              115,93,41,46]},
            {text,"1\n{ok,[{matched,tiger@durin,1}]}\n(tiger@durin)69> "},
            {text,
             [21,80,105,100,32,33,32,123,115,101,108,102,40,41,44,104,101,108,
              108,111,125,46]},
            {text,[2,10,40]},
            {text,"\v<0.126.0>) "},
            {text,[1,60]},
            {text,[3,60,32,123]},
            {text,
             [18,60,48,46,49,49,54,46,48,62,44,104,101,108,108,111,125,10,
              123]},
            {text,
             [18,60,48,46,49,49,54,46,48,62,44,104,101,108,108,111,125,10,40]},
            {text,"\v<0.126.0>) "},
            {text,[1,60]},
            {text,"\v< timeout\n("},
            {text,"\v<0.126.0>) "},
            {text,
             [19,60,48,46,49,49,54,46,48,62,32,33,32,104,101,108,108,111,10,
              40]},
            {text,"(<0.126.0>) exit normal\n(tiger@durin)70> "},
            {text,"\bflush()."},
            {text,"$\nShell got hello\nok\n(tiger@durin)71>"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,[14,73,102,32,121,111,117,32,115,101,116,32,116,104,101]}],
             0,false},
            {text,[6,42,99,97,108,108,42]},
            {sep,[{text,"\"trace flag, you also have to set a"}],0,false},
            {text,
             [17,42,42,116,114,97,99,101,32,112,97,116,116,101,114,110,42,42]},
            {sep,[{text,"$for the functions you want to trace:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [18,10,40,116,105,103,101,114,64,100,117,114,105,110,41,55,55,62,
              32]},
            {text,"\rdbg:tracer()."},
            {text,[5,10,123,111,107,44]},
            {text,
             [28,60,48,46,49,52,50,46,48,62,125,10,40,116,105,103,101,114,64,
              100,117,114,105,110,41,55,56,62,32]},
            {text,[16,100,98,103,58,112,40,97,108,108,44,99,97,108,108,41,46]},
            {text,"1\n{ok,[{matched,tiger@durin,3}]}\n(tiger@durin)79> "},
            {text,
             [28,100,98,103,58,116,112,40,100,98,103,44,103,101,116,95,116,
              114,97,99,101,114,44,48,44,91,93,41,46]},
            {text,"1\n{ok,[{matched,tiger@durin,1}]}\n(tiger@durin)80> "},
            {text,
             [17,100,98,103,58,103,101,116,95,116,114,97,99,101,114,40,41,46]},
            {text,[2,10,40]},
            {text,"%<0.116.0>) call dbg:get_tracer()\n{ok,"},
            {text,
             [28,60,48,46,49,52,51,46,48,62,125,10,40,116,105,103,101,114,64,
              100,117,114,105,110,41,56,49,62,32]},
            {text,"5dbg:tp(dbg,get_tracer,0,[{'_',[],[{return_trace}]}])."},
            {text,
             ";\n{ok,[{matched,tiger@durin,1},{saved,1}]}\n(tiger@durin)82> "},
            {text,
             [17,100,98,103,58,103,101,116,95,116,114,97,99,101,114,40,41,46]},
            {text,[2,10,40]},
            {text,"\"<0.116.0>) call dbg:get_tracer()\n("},
            {text,"1<0.116.0>) returned from dbg:get_tracer/0 -> {ok,"},
            {text,[15,60,48,46,49,52,51,46,48,62,125,10,123,111,107,44]},
            {text,"\e<0.143.0>}\n(tiger@durin)83>"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false}},
  {sep,
   [{text,
     [31,60,97,32,110,97,109,101,61,34,97,100,118,97,110,99,101,100,34,62,97,
      100,118,97,110,99,101,100,60,47,97,62]},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"-## Advanced topics - combining with seq_trace"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,[3,84,104,101]}],0,false},
           {text,[5,42,100,98,103,42]},
           {sep,
            [{text,
              "8module is primarily targeted towards tracing through the"}],
            0,false},
           {text,[16,42,101,114,108,97,110,103,58,116,114,97,99,101,47,51,42]},
           {sep,
            [{text,
              "rfunction. It is sometimes desired to trace messages in a more delicate way, which can be done with the help of the"}],
            0,false},
           {text,"\v*seq_trace*"},
           {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"\v*seq_trace*"},
           {sep,
            [{text,
              "aimplements sequential tracing (known in the AXE10 world, and sometimes called \"forlopp tracing\")."}],
            0,false},
           {text,[5,42,100,98,103,42]},
           {sep,[{text,"%can interpret messages generated from"}],0,false},
           {text,"\v*seq_trace*"},
           {sep,
            [{text,
              "Gand the same tracer function for both types of tracing can be used. The"}],
            0,false},
           {text,"\v*seq_trace*"},
           {sep,
            [{text,
              "?messages can even be sent to a trace port for further analysis."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "KAs a match specification can turn on sequential tracing, the combination of"}],
            0,false},
           {text,[5,42,100,98,103,42]},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,"\v*seq_trace*"},
           {sep,
            [{text,
              "[can be quite powerful. This brief example shows a session where sequential tracing is used:"}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,[4,10,49,62,32]},
           {text,"\rdbg:tracer()."},
           {text,[5,10,123,111,107,44]},
           {text,"\r<0.30.0>}\n2> "},
           {text," {ok, Tracer} = dbg:get_tracer()."},
           {text,[5,10,123,111,107,44]},
           {text,"\r<0.31.0>}\n3> "},
           {text,"$seq_trace:set_system_tracer(Tracer)."},
           {text,"\n\nfalse\n4> "},
           {text,
            "Ddbg:tp(dbg, get_tracer, 0, [{[],[],[{set_seq_token, send, true}]}])."},
           {text,"/\n{ok,[{matched,nonode@nohost,1},{saved,1}]}\n5> "},
           {text,[16,100,98,103,58,112,40,97,108,108,44,99,97,108,108,41,46]},
           {text,"&\n{ok,[{matched,nonode@nohost,22}]}\n6> "},
           {text,"*dbg:get_tracer(), seq_trace:set_token([])."},
           {text,[2,10,40]},
           {text,"/<0.25.0>) call dbg:get_tracer()\nSeqTrace [0]: ("},
           {text,"\n<0.25.0>) "},
           {text,"\f<0.30.0> ! {"},
           {text,"4<0.25.0>,get_tracer} [Serial: {2,4}]\nSeqTrace [0]: ("},
           {text,"\n<0.30.0>) "},
           {text,
            [20,60,48,46,50,53,46,48,62,32,33,32,123,100,98,103,44,123,111,
             107,44]},
           {text,"\"<0.31.0>}} [Serial: {4,5}]\n{1,0,5,"},
           {text,"\v<0.30.0>,4}"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [147,84,104,105,115,32,115,101,115,115,105,111,110,32,115,101,
               116,115,32,116,104,101,32,115,121,115,116,101,109,95,116,114,
               97,99,101,114,32,116,111,32,116,104,101,32,115,97,109,101,32,
               112,114,111,99,101,115,115,32,97,115,32,116,104,101,32,111,114,
               100,105,110,97,114,121,32,116,114,97,99,101,114,32,112,114,111,
               99,101,115,115,32,40,105,46,32,101,46,32,60,48,46,51,49,46,48,
               62,41,32,97,110,100,32,115,101,116,115,32,116,104,101,32,116,
               114,97,99,101,32,112,97,116,116,101,114,110,32,102,111,114,32,
               116,104,101,32,102,117,110,99,116,105,111,110]}],
            0,false},
           {text,
            [16,42,100,98,103,58,103,101,116,95,116,114,97,99,101,114,42]},
           {sep,
            [{text,
              "Ãƒto one that has the action of setting a sequential token. When the function is called by a traced process (all processes are traced in this case), the process gets \"contaminated\" by the token and"}],
            0,false},
           {text,"\v*seq_trace*"},
           {sep,
            [{text,
              "Cmessages are sent both for the server request and the response. The"}],
            0,false},
           {text,
            [25,42,115,101,113,95,116,114,97,99,101,58,115,101,116,95,116,111,
             107,101,110,40,91,93,41,42]},
           {sep,
            [{text,
              [25,97,102,116,101,114,32,116,104,101,32,99,97,108,108,32,99,
               108,101,97,114,115,32,116,104,101]}],
            0,false},
           {text,"\v*seq_trace*"},
           {sep,
            [{text,
              [142,116,111,107,101,110,44,32,119,104,121,32,110,111,32,109,
               101,115,115,97,103,101,115,32,97,114,101,32,115,101,110,116,32,
               119,104,101,110,32,116,104,101,32,97,110,115,119,101,114,32,
               112,114,111,112,97,103,97,116,101,115,32,118,105,97,32,116,104,
               101,32,115,104,101,108,108,32,116,111,32,116,104,101,32,99,111,
               110,115,111,108,101,32,112,111,114,116,46,32,84,104,101,32,111,
               117,116,112,117,116,32,119,111,117,108,100,32,111,116,104,101,
               114,119,105,115,101,32,104,97,118,101,32,98,101,101,110,32,109,
               111,114,101,32,110,111,105,115,121,46]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [18,35,35,32,78,111,116,101,32,111,102,32,99,97,117,116,105,111,110]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [356,87,104,101,110,32,116,114,97,99,105,110,103,32,102,117,110,
              99,116,105,111,110,32,99,97,108,108,115,32,111,110,32,97,32,103,
              114,111,117,112,32,108,101,97,100,101,114,32,112,114,111,99,101,
              115,115,32,40,97,110,32,73,79,32,112,114,111,99,101,115,115,41,
              44,32,116,104,101,114,101,32,105,115,32,114,105,115,107,32,111,
              102,32,99,97,117,115,105,110,103,32,97,32,100,101,97,100,108,
              111,99,107,46,32,84,104,105,115,32,119,105,108,108,32,104,97,
              112,112,101,110,32,105,102,32,97,32,103,114,111,117,112,32,108,
              101,97,100,101,114,32,112,114,111,99,101,115,115,32,103,101,110,
              101,114,97,116,101,115,32,97,32,116,114,97,99,101,32,109,101,
              115,115,97,103,101,32,97,110,100,32,116,104,101,32,116,114,97,
              99,101,114,32,112,114,111,99,101,115,115,44,32,98,121,32,99,97,
              108,108,105,110,103,32,116,104,101,32,116,114,97,99,101,32,104,
              97,110,100,108,101,114,32,102,117,110,99,116,105,111,110,44,32,
              115,101,110,100,115,32,97,110,32,73,79,32,114,101,113,117,101,
              115,116,32,116,111,32,116,104,101,32,115,97,109,101,32,103,114,
              111,117,112,32,108,101,97,100,101,114,46,32,84,104,101,32,112,
              114,111,98,108,101,109,32,99,97,110,32,111,110,108,121,32,111,
              99,99,117,114,32,105,102,32,116,104,101,32,116,114,97,99,101,32,
              104,97,110,100,108,101,114,32,112,114,105,110,116,115,32,116,
              111,32,116,116,121,32,117,115,105,110,103,32,97,110]}],
           0,false},
          {text,[4,42,105,111,42]},
          {sep,
           [{text,
             [16,102,117,110,99,116,105,111,110,32,115,117,99,104,32,97,115]}],
           0,false},
          {text,"+[stdlib/io#format-2](../stdlib/io#format-2)"},
          {sep,
           [{text,
             [16,46,32,78,111,116,101,32,116,104,97,116,32,119,104,101,110]}],
           0,false},
          {text,
           [17,42,100,98,103,58,112,40,97,108,108,44,99,97,108,108,41,42]},
          {sep,
           [{text,
             ";is called, IO processes are also traced. Here's an example:"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,"*\n%% Using a default line editing shell\n1> "},
          {text,
           "Hdbg:tracer(process, {fun(Msg,_) -> io:format(\"~p~n\", [Msg]), 0 end, 0})."},
          {text,[5,10,123,111,107,44]},
          {text,"\r<0.37.0>}\n2> "},
          {text,
           [19,100,98,103,58,112,40,97,108,108,44,32,91,99,97,108,108,93,41,
            46]},
          {text,"&\n{ok,[{matched,nonode@nohost,25}]}\n3> "},
          {text,
           [28,100,98,103,58,116,112,40,109,121,109,111,100,44,91,123,39,95,
            39,44,91,93,44,91,93,125,93,41,46]},
          {text,"/\n{ok,[{matched,nonode@nohost,0},{saved,1}]}\n4> "},
          {text,[6,109,121,109,111,100,58]},
          {text,"% % TAB pressed here\n%% -- Deadlock --"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,72,101,114,101,39,115,32,97,110,111,116,104,101,114,32,101,120,
            97,109,112,108,101,58]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,"5\n%% Using a shell without line editing (oldshell)\n1> "},
          {text,
           [20,100,98,103,58,116,114,97,99,101,114,40,112,114,111,99,101,115,
            115,41,46]},
          {text,[5,10,123,111,107,44]},
          {text,"\r<0.31.0>}\n2> "},
          {text,
           [19,100,98,103,58,112,40,97,108,108,44,32,91,99,97,108,108,93,41,
            46]},
          {text,"&\n{ok,[{matched,nonode@nohost,25}]}\n3> "},
          {text,
           [28,100,98,103,58,116,112,40,108,105,115,116,115,44,91,123,39,95,
            39,44,91,93,44,91,93,125,93,41,46]},
          {text,
           "<\n{ok,[{matched,nonode@nohost,0},{saved,1}]}\n% -- Deadlock --"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "Â¤The reason we get a deadlock in the first example is because when TAB is pressed to expand the function name, the group leader (which handles character input) calls"}],
           0,false},
          {text,
           [21,42,109,121,109,111,100,58,109,111,100,117,108,101,95,105,110,
            102,111,40,41,42]},
          {sep,
           [{text,
             [128,46,32,84,104,105,115,32,103,101,110,101,114,97,116,101,115,
              32,97,32,116,114,97,99,101,32,109,101,115,115,97,103,101,32,119,
              104,105,99,104,44,32,105,110,32,116,117,114,110,44,32,99,97,117,
              115,101,115,32,116,104,101,32,116,114,97,99,101,114,32,112,114,
              111,99,101,115,115,32,116,111,32,115,101,110,100,32,97,110,32,
              73,79,32,114,101,113,117,101,115,116,32,116,111,32,116,104,101,
              32,103,114,111,117,112,32,108,101,97,100,101,114,32,40,98,121,
              32,99,97,108,108,105,110,103]}],
           0,false},
          {text,"\r*io:format/2*"},
          {sep,[{text,"\e). We end up in a deadlock."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "yIn the second example we use the default trace handler function. This handler prints to tty by sending IO requests to the"}],
           0,false},
          {text,[6,42,117,115,101,114,42]},
          {sep,
           [{text,
             "Mprocess. When Erlang is started in oldshell mode, the shell process will have"}],
           0,false},
          {text,[6,42,117,115,101,114,42]},
          {sep,
           [{text,
             "Ias its group leader and so will the tracer process in this example. Since"}],
           0,false},
          {text,[6,42,117,115,101,114,42]},
          {sep,
           [{text,
             [18,99,97,108,108,115,32,102,117,110,99,116,105,111,110,115,32,
              105,110]}],
           0,false},
          {text,[7,42,108,105,115,116,115,42]},
          {sep,
           [{text,
             "@we end up in a deadlock as soon as the first IO request is sent."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"5Here are a few suggestions for how to avoid deadlock:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{text,
            "kDon't trace the group leader of the tracer process. If tracing has been switched on for all processes, call"}],
          0,false},
         {text,
          [26,42,100,98,103,58,112,40,84,114,97,99,101,114,71,76,80,105,100,
           44,99,108,101,97,114,41,42]},
         {sep,[{text,"\"to stop tracing the group leader ("}],0,false},
         {text,"\r*TracerGLPid*"},
         {sep,[{text,[2,41,46]}],0,false},
         {text,"&*process_info(TracerPid,group_leader)*"},
         {sep,[{text,"!tells you which process this is ("}],0,false},
         {text,"\v*TracerPid*"},
         {sep,
          [{text,
            [16,105,115,32,114,101,116,117,114,110,101,100,32,102,114,111,
             109]}],
          0,false},
         {text,
          [18,42,100,98,103,58,103,101,116,95,116,114,97,99,101,114,47,48,42]},
         {sep,[{text,[2,41,46]}],0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{text,[15,68,111,110,39,116,32,116,114,97,99,101,32,116,104,101]}],
          0,false},
         {text,[6,42,117,115,101,114,42]},
         {sep,
          [{text,"4process if using the default trace handler function."}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,[{text,"(In your own trace handler function, call"}],0,false},
        {text,
         [18,42,101,114,108,97,110,103,58,100,105,115,112,108,97,121,47,49,
          42]},
        {sep,[{text,"\rinstead of an"}],0,false},
        {text,[4,42,105,111,42]},
        {sep,
         [{text,[15,102,117,110,99,116,105,111,110,32,111,114,44,32,105,102]}],
         0,false},
        {text,[6,42,117,115,101,114,42]},
        {sep,[{text,"%is not used as group leader, print to"}],0,false},
        {text,[6,42,117,115,101,114,42]},
        {sep,
         [{text,"-instead of the default group leader. Example:"}],
         0,false},
        {text,
         [26,42,105,111,58,102,111,114,109,97,116,40,117,115,101,114,44,83,
          116,114,44,65,114,103,115,41,42]},
        {sep,[{text,[1,46]}],0,false}],
       0,false}],
     0,false}}],
  0,false}}
