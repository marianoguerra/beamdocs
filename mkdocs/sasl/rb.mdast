{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,[4,35,32,114,98]},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,[4,35,32,114,98]},null},null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,84,104,101,32,82,101,112,111,114,116,32,66,114,111,119,115,101,
            114,32,84,111,111,108]}],
         0,false}],
       0,true},
      null},
     null}}},
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {sep,
      [{sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "kThe Report Browser (RB) tool is used to browse and format error reports written by the error logger handler"}],
                 0,false},
                {text,
                 [29,91,115,116,100,108,105,98,47,108,111,103,95,109,102,95,
                  104,93,40,46,47,108,111,103,95,109,102,95,104,41]},
                {sep,[{text,"\nin STDLIB."}],0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,true},
     null},
    null}}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [18,35,35,32,102,105,108,116,101,114,40,70,105,108,116,101,114,115,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,102,105,108,116,101,114,40,70,105,108,116,101,114,115,44,
        32,68,97,116,101,115,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0Filters reports and displays them on the screen."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [20,70,105,108,116,101,114,115,32,61,32,91,102,105,108,116,101,
               114,40,41,93]}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "Vfilter() = {Key, Value} | {Key, Value, no} | {Key, RegExp, re} | {Key, RegExp, re, no}"}],
            0,false}],
          0,false}},
        {sep,[{text,[1,42]},{sep,[{text,"\fKey = term()"}],0,false}],0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           "FRegExp = string() | {string(), Options} | re:mp() | {re:mp(), Options}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "<Dates = {DateFrom, DateTo} | {DateFrom, from} | {DateTo, to}"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,[{text,"'DateFrom = DateTo = calendar:datetime()"}],0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"5Displays the reports that match the provided filters."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [26,87,104,101,110,32,97,32,102,105,108,116,101,114,32,105,110,
                99,108,117,100,101,115,32,116,104,101]}],
             0,false},
            {text,[4,42,110,111,42]},
            {sep,
             [{text,"5atom, it excludes the reports that match that filter."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"!The reports are matched using the"}],0,false},
            {text,
             [31,91,115,116,100,108,105,98,47,112,114,111,112,108,105,115,116,
              115,93,40,46,47,112,114,111,112,108,105,115,116,115,41]},
            {sep,
             [{text,
               "Ymodule in STDLIB. The report must be a proplist to be matched against any of the filters."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [26,73,102,32,116,104,101,32,102,105,108,116,101,114,32,104,97,
                115,32,116,104,101,32,102,111,114,109]}],
             0,false},
            {text,
             [19,42,123,75,101,121,44,32,82,101,103,69,120,112,44,32,114,101,
              125,42]},
            {sep,
             [{text,
               "6, the report must contain an element with key equal to"}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,
             [{text,"/and the value must match the regular expression"}],
             0,false},
            {text,"\b*RegExp*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fIf parameter"}],0,false},
            {text,[7,42,68,97,116,101,115,42]},
            {sep,
             [{text,
               "Sis specified, the reports are filtered according to the date when they occurred. If"}],
             0,false},
            {text,[7,42,68,97,116,101,115,42]},
            {sep,[{text,"\fhas the form"}],0,false},
            {text,
             [18,42,123,68,97,116,101,70,114,111,109,44,32,102,114,111,109,
              125,42]},
            {sep,
             [{text,
               [29,44,32,114,101,112,111,114,116,115,32,116,104,97,116,32,111,
                99,99,117,114,114,101,100,32,97,102,116,101,114]}],
             0,false},
            {text,"\n*DateFrom*"},
            {sep,
             [{text,[14,97,114,101,32,100,105,115,112,108,97,121,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[7,42,68,97,116,101,115,42]},
            {sep,[{text,"\fhas the form"}],0,false},
            {text,[14,42,123,68,97,116,101,84,111,44,32,116,111,125,42]},
            {sep,
             [{text,
               [30,44,32,114,101,112,111,114,116,115,32,116,104,97,116,32,111,
                99,99,117,114,114,101,100,32,98,101,102,111,114,101]}],
             0,false},
            {text,"\b*DateTo*"},
            {sep,
             [{text,[14,97,114,101,32,100,105,115,112,108,97,121,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[6,73,102,32,116,119,111]}],0,false},
            {text,[7,42,68,97,116,101,115,42]},
            {sep,
             [{text,
               "Fare specified, reports that occurred between those dates are returned."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "6To filter only by dates, specify the empty list as the"}],
             0,false},
            {text,"\t*Filters*"},
            {sep,[{text,"\nparameter."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\eFor details about parameter"}],0,false},
            {text,"\b*RegExp*"},
            {sep,[{text,[5,44,32,115,101,101]}],0,false},
            {text,"\v*rb:grep/1*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\eFor details about data type"}],0,false},
            {text,[6,42,109,112,40,41,42]},
            {sep,[{text,[5,44,32,115,101,101]}],0,false},
            {text,")[stdlib/re#type-mp](../stdlib/re#type-mp)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\eFor details about data type"}],0,false},
            {text,"\f*datetime()*"},
            {sep,[{text,[5,44,32,115,101,101]}],0,false},
            {text,
             "A[stdlib/calendar#type-datetime](../stdlib/calendar#type-datetime)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,103,114,101,112,40,82,101,103,69,120,112,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,".Searches the reports for a regular expression."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        "FRegExp = string() | {string(), Options} | re:mp() | {re:mp(), Options}"}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+All reports matching the regular expression"}],
             0,false},
            {text,"\b*RegExp*"},
            {sep,
             [{text,[14,97,114,101,32,100,105,115,112,108,97,121,101,100,46]}],
             0,false},
            {text,"\b*RegExp*"},
            {sep,
             [{text,
               [28,99,97,110,32,98,101,32,97,110,121,32,111,102,32,116,104,
                101,32,102,111,108,108,111,119,105,110,103,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},{text,"*A string containing the regular expression"}],
         0,false},
        {sep,
         [{text,[1,42]},
          {text,"7A tuple with the string and the options for compilation"}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {text,
          [29,65,32,99,111,109,112,105,108,101,100,32,114,101,103,117,108,97,
           114,32,101,120,112,114,101,115,115,105,111,110]}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {text,
         "<A compiled regular expression and the options for running it"}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BFor a definition of valid regular expressions and options, see the"}],
             0,false},
            {text,
             [17,91,115,116,100,108,105,98,47,114,101,93,40,46,47,114,101,41]},
            {sep,
             [{text,"+module in STDLIB and in particular function"}],
             0,false},
            {text,"\n*re:run/3*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\eFor details about data type"}],0,false},
            {text,[6,42,109,112,40,41,42]},
            {sep,[{text,[5,44,32,115,101,101]}],0,false},
            {text,")[stdlib/re#type-mp](../stdlib/re#type-mp)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,[6,35,35,32,104,40,41]},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## help()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [26,68,105,115,112,108,97,121,115,32,104,101,108,112,32,105,110,
            102,111,114,109,97,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"!Displays online help information."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## list()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## list(Type)"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [18,76,105,115,116,115,32,97,108,108,32,114,101,112,111,114,116,
            115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,[{text,[1,42]},{sep,[{text,"\rType = type()"}],0,false}],0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [131,116,121,112,101,40,41,32,61,32,101,114,114,111,114,32,124,32,
          101,114,114,111,114,95,114,101,112,111,114,116,32,124,32,105,110,
          102,111,95,109,115,103,32,124,32,105,110,102,111,95,114,101,112,111,
          114,116,32,124,32,119,97,114,110,105,110,103,95,109,115,103,32,124,
          32,119,97,114,110,105,110,103,95,114,101,112,111,114,116,32,124,32,
          99,114,97,115,104,95,114,101,112,111,114,116,32,124,32,115,117,112,
          101,114,118,105,115,111,114,95,114,101,112,111,114,116,32,124,32,
          112,114,111,103,114,101,115,115]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\eLists all reports loaded in"}],0,false},
            {text,"\v*rb_server*"},
            {sep,
             [{text,
               "`. Each report is given a unique number that can be used as a reference to the report in function"}],
             0,false},
            {text,
             [17,91,115,104,111,119,47,49,93,40,35,115,104,111,119,47,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[5,73,102,32,110,111]}],0,false},
            {text,[6,42,84,121,112,101,42]},
            {sep,[{text,"%is specified, all reports are listed."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## log_list()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,108,111,103,95,108,105,115,116,40,84,121,112,101,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [18,76,111,103,115,32,114,101,112,111,114,116,32,108,105,115,116,
            115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,[{text,[1,42]},{sep,[{text,"\rType = type()"}],0,false}],0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [131,116,121,112,101,40,41,32,61,32,101,114,114,111,114,32,124,32,
          101,114,114,111,114,95,114,101,112,111,114,116,32,124,32,105,110,
          102,111,95,109,115,103,32,124,32,105,110,102,111,95,114,101,112,111,
          114,116,32,124,32,119,97,114,110,105,110,103,95,109,115,103,32,124,
          32,119,97,114,110,105,110,103,95,114,101,112,111,114,116,32,124,32,
          99,114,97,115,104,95,114,101,112,111,114,116,32,124,32,115,117,112,
          101,114,118,105,115,111,114,95,114,101,112,111,114,116,32,124,32,
          112,114,111,103,114,101,115,115]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [17,83,97,109,101,32,97,115,32,102,117,110,99,116,105,111,110,
                115]}],
             0,false},
            {text,
             [17,91,108,105,115,116,47,48,93,40,35,108,105,115,116,47,48,41]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,
             [17,91,108,105,115,116,47,49,93,40,35,108,105,115,116,47,49,41]},
            {sep,
             [{text,
               "?, but the result is printed to a log file, if set; otherwise to"}],
             0,false},
            {text,"\r*standard_io*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[5,73,102,32,110,111]}],0,false},
            {text,[6,42,84,121,112,101,42]},
            {sep,[{text,"%is specified, all reports are listed."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## rescan()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [18,35,35,32,114,101,115,99,97,110,40,79,112,116,105,111,110,115,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [29,82,101,115,99,97,110,115,32,116,104,101,32,114,101,112,111,114,
            116,32,100,105,114,101,99,116,111,114,121,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [17,79,112,116,105,111,110,115,32,61,32,91,111,112,116,40,41,93]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,82,101,115,99,97,110,115,32,116,104,101,32,114,101,112,111,
                114,116,32,100,105,114,101,99,116,111,114,121,46]}],
             0,false},
            {text,"\t*Options*"},
            {sep,[{text,"\eis the same as for function"}],0,false},
            {text,
             [19,91,115,116,97,114,116,47,49,93,40,35,115,116,97,114,116,47,
              49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## show()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,115,104,111,119,40,82,101,112,111,114,116,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [17,68,105,115,112,108,97,121,115,32,114,101,112,111,114,116,115,
            46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},{sep,[{text,"\eReport = integer() | type()"}],0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\vIf argument"}],0,false},
            {text,[6,42,116,121,112,101,42]},
            {sep,
             [{text,
               "Íis specified, all loaded reports of this type are displayed. If an integer argument is specified, the report with this reference number is displayed. If no argument is specified, all reports are displayed."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## start()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,115,116,97,114,116,40,79,112,116,105,111,110,115,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\nStarts the"}],0,false},
          {text,"\v*rb_server*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [17,79,112,116,105,111,110,115,32,61,32,91,111,112,116,40,41,
               93]}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "}opt() = {start_log, FileName} | {max, MaxNoOfReports} | {report_dir, DirString} | {type, ReportType} | {abort_on_error, Bool}"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,[{text,"$FileName = string() | atom() | pid()"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,[{text," MaxNoOfReports = integer() | all"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [20,68,105,114,83,116,114,105,110,103,32,61,32,115,116,114,105,110,
            103,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,[{text,"$ReportType = type() | [type()] | all"}],0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,66,111,111,108,32,61,32,98,111,111,108,101,97,110,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bFunction"}],0,false},
            {text,"\t*start/1*"},
            {sep,[{text,[6,115,116,97,114,116,115]}],0,false},
            {text,"\v*rb_server*"},
            {sep,
             [{text,",with the specified options, whereas function"}],
             0,false},
            {text,"\t*start/0*"},
            {sep,
             [{text,
               [28,115,116,97,114,116,115,32,119,105,116,104,32,100,101,102,
                97,117,108,116,32,111,112,116,105,111,110,115,46]}],
             0,false},
            {text,"\v*rb_server*"},
            {sep,
             [{text,"3must be started before reports can be browsed. When"}],
             0,false},
            {text,"\v*rb_server*"},
            {sep,
             [{text,
               "uis started, the files in the specified directory are scanned. The other functions assume that the server has started."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Options:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         [21,123,115,116,97,114,116,95,108,111,103,44,32,70,
                          105,108,101,78,97,109,101,125]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "+Starts logging to file, registered name, or"}],
                              0,false},
                             {text,"\tio_device"},
                             {sep,
                              [{text,
                                "B. All reports are printed to the specified destination. Default is"}],
                              0,false},
                             {text,"\vstandard_io"},
                             {sep,[{text,"\b. Option"}],0,false},
                             {text,"\e{start_log, standard_error}"},
                             {sep,
                              [{text,
                                ".is not allowed and will be replaced by default"}],
                              0,false},
                             {text,"\vstandard_io"},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{text,
                        [21,123,109,97,120,44,32,77,97,120,78,111,79,102,82,
                         101,112,111,114,116,115,125]}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [25,67,111,110,116,114,111,108,115,32,104,111,
                               119,32,109,97,110,121,32,114,101,112,111,114,
                               116,115]}],
                            0,false},
                           {text,"\trb_server"},
                           {sep,
                            [{text,
                              [134,105,115,32,116,111,32,114,101,97,100,32,97,
                               116,32,115,116,97,114,116,117,112,46,32,84,104,
                               105,115,32,111,112,116,105,111,110,32,105,115,
                               32,117,115,101,102,117,108,44,32,97,115,32,116,
                               104,101,32,100,105,114,101,99,116,111,114,121,
                               32,99,97,110,32,99,111,110,116,97,105,110,32,
                               97,32,108,97,114,103,101,32,97,109,111,117,110,
                               116,32,111,102,32,114,101,112,111,114,116,115,
                               46,32,73,102,32,116,104,105,115,32,111,112,116,
                               105,111,110,32,105,115,32,115,112,101,99,105,
                               102,105,101,100,44,32,116,104,101]}],
                            0,false},
                           {text,
                            [14,77,97,120,78,111,79,102,82,101,112,111,114,
                             116,115]},
                           {sep,
                            [{text,"#latest reports are read. Default is"}],
                            0,false},
                           {text,[3,97,108,108]},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{text,
                      [23,123,114,101,112,111,114,116,95,100,105,114,44,32,68,
                       105,114,83,116,114,105,110,103,125]}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [131,68,101,102,105,110,101,115,32,116,104,101,32,
                             100,105,114,101,99,116,111,114,121,32,119,104,
                             101,114,101,32,116,104,101,32,101,114,114,111,
                             114,32,108,111,103,32,102,105,108,101,115,32,97,
                             114,101,32,108,111,99,97,116,101,100,46,32,68,
                             101,102,97,117,108,116,32,105,115,32,116,104,101,
                             32,100,105,114,101,99,116,111,114,121,32,115,112,
                             101,99,105,102,105,101,100,32,98,121,32,97,112,
                             112,108,105,99,97,116,105,111,110,32,101,110,118,
                             105,114,111,110,109,101,110,116,32,118,97,114,
                             105,97,98,108,101]}],
                          0,false},
                         {text,
                          [19,101,114,114,111,114,95,108,111,103,103,101,114,
                           95,109,102,95,100,105,114]},
                         {sep,[{text,[5,44,32,115,101,101]}],0,false},
                         {text,[7,115,97,115,108,40,54,41]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{text,
                    [18,123,116,121,112,101,44,32,82,101,112,111,114,116,84,
                     121,112,101,125]}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [29,67,111,110,116,114,111,108,115,32,119,104,97,
                           116,32,107,105,110,100,32,111,102,32,114,101,112,
                           111,114,116,115]}],
                        0,false},
                       {text,"\trb_server"},
                       {sep,
                        [{text,
                          [22,105,115,32,116,111,32,114,101,97,100,32,97,116,
                           32,115,116,97,114,116,117,112,46]}],
                        0,false},
                       {text,"\nReportType"},
                       {sep,
                        [{text,
                          [20,105,115,32,97,32,115,117,112,112,111,114,116,
                           101,100,32,116,121,112,101,44]}],
                        0,false},
                       {text,[3,97,108,108]},
                       {sep,
                        [{text,"*, or a list of supported types. Default is"}],
                        0,false},
                       {text,[3,97,108,108]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [22,123,97,98,111,114,116,95,111,110,95,101,114,114,111,114,
                   44,32,66,111,111,108,125]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,"&Specifies if logging is to be ended if"}],
                        0,false},
                       {text,[2,114,98]},
                       {sep,
                        [{text,
                          "Zencounters an unprintable report. (You can get a report with an incorrect form if function"}],
                        0,false},
                       {text,"\ferror_logger"},
                       {sep,[{text,[1,44]}],0,false},
                       {text,"\terror_msg"},
                       {sep,[{text,[4,44,32,111,114]}],0,false},
                       {text,"\binfo_msg"},
                       {sep,
                        [{text,
                          ".has been called with an invalid format string)"}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{sep,[{text,[2,73,102]}],0,false},
                     {text,[4,66,111,111,108]},
                     {sep,[{text,[2,105,115]}],0,false},
                     {text,[4,116,114,117,101]},
                     {sep,[{text,[1,44]}],0,false},
                     {text,[2,114,98]},
                     {sep,
                      [{text,
                        "-stops logging (and prints an error message to"}],
                      0,false},
                     {text,[6,115,116,100,111,117,116]},
                     {sep,
                      [{text,
                        [129,41,32,105,102,32,105,116,32,101,110,99,111,117,
                         110,116,101,114,115,32,97,32,98,97,100,108,121,32,
                         102,111,114,109,97,116,116,101,100,32,114,101,112,
                         111,114,116,46,32,73,102,32,108,111,103,103,105,110,
                         103,32,116,111,32,102,105,108,101,32,105,115,32,101,
                         110,97,98,108,101,100,44,32,97,110,32,101,114,114,
                         111,114,32,109,101,115,115,97,103,101,32,105,115,32,
                         97,112,112,101,110,100,101,100,32,116,111,32,116,104,
                         101,32,108,111,103,32,102,105,108,101,32,97,115,32,
                         119,101,108,108,46]}],
                      0,false}],
                    0,false}],
                  0,false},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{sep,[{text,[2,73,102]}],0,false},
                     {text,[4,66,111,111,108]},
                     {sep,[{text,[2,105,115]}],0,false},
                     {text,[5,102,97,108,115,101]},
                     {sep,
                      [{text,
                        [20,40,116,104,101,32,100,101,102,97,117,108,116,32,
                         118,97,108,117,101,41,44]}],
                      0,false},
                     {text,[2,114,98]},
                     {sep,
                      [{text,
                        [26,112,114,105,110,116,115,32,97,110,32,101,114,114,
                         111,114,32,109,101,115,115,97,103,101,32,116,111]}],
                      0,false},
                     {text,[6,115,116,100,111,117,116]},
                     {sep,
                      [{text,
                        [141,102,111,114,32,101,118,101,114,121,32,98,97,100,
                         32,114,101,112,111,114,116,32,105,116,32,101,110,99,
                         111,117,110,116,101,114,115,44,32,98,117,116,32,116,
                         104,101,32,108,111,103,103,105,110,103,32,112,114,
                         111,99,101,115,115,32,105,115,32,110,101,118,101,114,
                         32,101,110,100,101,100,46,32,65,108,108,32,112,114,
                         105,110,116,97,98,108,101,32,114,101,112,111,114,116,
                         115,32,97,114,101,32,119,114,105,116,116,101,110,46,
                         32,73,102,32,108,111,103,103,105,110,103,32,116,111,
                         32,102,105,108,101,32,105,115,32,101,110,97,98,108,
                         101,100,44]}],
                      0,false},
                     {text,[2,114,98]},
                     {sep,[{text,[6,112,114,105,110,116,115]}],0,false},
                     {text,
                      [22,42,32,85,78,80,82,73,78,84,65,66,76,69,32,82,69,80,
                       79,82,84,32,42]},
                     {sep,
                      [{text,
                        "9in the log file at the location of an unprintable report."}],
                      0,false}],
                    0,false}],
                  0,false}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,115,116,97,114,116,95,108,111,103,40,70,105,108,101,78,97,
        109,101,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [23,82,101,100,105,114,101,99,116,115,32,97,108,108,32,111,117,
              116,112,117,116,32,116,111]}],
           0,false},
          {text,"\n*FileName*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,[{text,"$FileName = string() | atom() | pid()"}],0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "WRedirects all report output from the RB tool to the specified file, registered name, or"}],
             0,false},
            {text,"\v*io_device*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## stop()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\tStops the"}],0,false},
          {text,"\v*rb_server*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[5,83,116,111,112,115]}],0,false},
            {text,"\v*rb_server*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## stop_log()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [22,83,116,111,112,115,32,108,111,103,103,105,110,103,32,116,111,
            32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "?Closes the log file. The output from the RB tool is directed to"}],
             0,false},
            {text,"\r*standard_io*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
