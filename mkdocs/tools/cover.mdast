{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[7,35,32,99,111,118,101,114]},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[7,35,32,99,111,118,101,114]},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#A Coverage Analysis Tool for Erlang"}],0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\nThe module"}],0,false},
                 {text,[7,42,99,111,118,101,114,42]},
                 {sep,
                  [{text,
                    "bprovides a set of functions for coverage analysis of Erlang programs, counting how many times each"}],
                  0,false},
                 {text,
                  [19,42,42,101,120,101,99,117,116,97,98,108,101,32,108,105,
                   110,101,42,42]},
                 {sep,
                  [{text,"*of code is executed when a program is run."}],
                  0,false},
                 {above,{above,null,null},null},
                 {sep,
                  [{text,
                    "¢An executable line contains an Erlang expression such as a matching or a function call. A blank line or a line containing a comment, function head or pattern in a"}],
                  0,false},
                 {text,[6,42,99,97,115,101,42]},
                 {sep,[{text,[4,45,32,111,114]}],0,false},
                 {text,"\t*receive*"},
                 {sep,
                  [{text,
                    [28,115,116,97,116,101,109,101,110,116,32,105,115,32,110,
                     111,116,32,101,120,101,99,117,116,97,98,108,101,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [159,67,111,118,101,114,97,103,101,32,97,110,97,108,121,115,
                   105,115,32,99,97,110,32,98,101,32,117,115,101,100,32,116,
                   111,32,118,101,114,105,102,121,32,116,101,115,116,32,99,97,
                   115,101,115,44,32,109,97,107,105,110,103,32,115,117,114,
                   101,32,97,108,108,32,114,101,108,101,118,97,110,116,32,99,
                   111,100,101,32,105,115,32,99,111,118,101,114,101,100,44,32,
                   97,110,100,32,109,97,121,32,97,108,115,111,32,98,101,32,
                   104,101,108,112,102,117,108,32,119,104,101,110,32,108,111,
                   111,107,105,110,103,32,102,111,114,32,98,111,116,116,108,
                   101,110,101,99,107,115,32,105,110,32,116,104,101,32,99,111,
                   100,101,46]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "@Before any analysis can take place, the involved modules must be"}],
                  0,false},
                 {text,
                  [18,42,42,67,111,118,101,114,32,99,111,109,112,105,108,101,
                   100,42,42]},
                 {sep,
                  [{text,
                    "®. This means that some extra information is added to the module before it is compiled into a binary which then is loaded. The source file of the module is not affected and no"}],
                  0,false},
                 {text,[7,42,46,98,101,97,109,42]},
                 {sep,
                  [{text,
                    [16,102,105,108,101,32,105,115,32,99,114,101,97,116,101,
                     100,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "ßEach time a function in a Cover compiled module is called, information about the call is added to an internal database of Cover. The coverage analysis is performed by examining the contents of the Cover database. The output"}],
                  0,false},
                 {text,"\b*Answer*"},
                 {sep,[{text," is determined by two parameters,"}],0,false},
                 {text,[7,42,76,101,118,101,108,42]},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,"\n*Analysis*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {above,
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [16,42,76,101,118,101,108,32,61,32,109,111,100,117,
                            108,101,42]}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [25,42,65,110,115,119,101,114,32,61,32,123,77,111,
                            100,117,108,101,44,86,97,108,117,101,125,42]},
                          {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                          {text,"\b*Module*"},
                          {sep,
                           [{text,
                             [19,105,115,32,116,104,101,32,109,111,100,117,
                              108,101,32,110,97,109,101,46]}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,false},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [18,42,76,101,118,101,108,32,61,32,102,117,110,99,
                            116,105,111,110,42]}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [29,42,65,110,115,119,101,114,32,61,32,91,123,70,
                            117,110,99,116,105,111,110,44,86,97,108,117,101,
                            125,93,42]},
                          {sep,
                           [{text,
                             "W, one tuple for each function in the module. A function is specified by its module name"}],
                           0,false},
                          {text,[3,42,77,42]},
                          {sep,
                           [{text,
                             [15,44,32,102,117,110,99,116,105,111,110,32,110,
                              97,109,101]}],
                           0,false},
                          {text,[3,42,70,42]},
                          {sep,[{text,"\tand arity"}],0,false},
                          {text,[3,42,65,42]},
                          {sep,[{text,"\nas a tuple"}],0,false},
                          {text,"\t*{M,F,A}*"},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          [16,42,76,101,118,101,108,32,61,32,99,108,97,117,
                           115,101,42]}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,"\e*Answer = [{Clause,Value}]*"},
                         {sep,
                          [{text,
                            "S, one tuple for each clause in the module. A clause is specified by its module name"}],
                          0,false},
                         {text,[3,42,77,42]},
                         {sep,
                          [{text,
                            [15,44,32,102,117,110,99,116,105,111,110,32,110,
                             97,109,101]}],
                          0,false},
                         {text,[3,42,70,42]},
                         {sep,[{text,[7,44,32,97,114,105,116,121]}],0,false},
                         {text,[3,42,65,42]},
                         {sep,
                          [{text,"'and position in the function definition"}],
                          0,false},
                         {text,[3,42,67,42]},
                         {sep,[{text,"\nas a tuple"}],0,false},
                         {text,"\v*{M,F,A,C}*"},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [14,42,76,101,118,101,108,32,61,32,108,105,110,101,
                          42]}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [25,42,65,110,115,119,101,114,32,61,32,91,123,76,105,
                          110,101,44,86,97,108,117,101,125,93,42]},
                        {sep,
                         [{text,
                           "Z, one tuple for each executable line in the module. A line is specified by its module name"}],
                         0,false},
                        {text,[3,42,77,42]},
                        {sep,
                         [{text,"\"and line number in the source file"}],
                         0,false},
                        {text,[3,42,78,42]},
                        {sep,[{text,"\nas a tuple"}],0,false},
                        {text,[7,42,123,77,44,78,125,42]},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [21,42,65,110,97,108,121,115,105,115,32,61,32,99,111,
                         118,101,114,97,103,101,42]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [22,42,86,97,108,117,101,32,61,32,123,67,111,118,44,
                         78,111,116,67,111,118,125,42]},
                       {sep,[{text,[5,119,104,101,114,101]}],0,false},
                       {text,[5,42,67,111,118,42]},
                       {sep,
                        [{text,
                          "sis the number of executable lines in the module, function, clause or line that have been executed at least once and"}],
                        0,false},
                       {text,"\b*NotCov*"},
                       {sep,
                        [{text,
                          ">is the number of executable lines that have not been executed."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       [18,42,65,110,97,108,121,115,105,115,32,61,32,99,97,
                        108,108,115,42]}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       [15,42,86,97,108,117,101,32,61,32,67,97,108,108,115,
                        42]},
                      {sep,
                       [{text,
                         "qwhich is the number of times the module, function, or clause has been called. In the case of line level analysis,"}],
                       0,false},
                      {text,[7,42,67,97,108,108,115,42]},
                      {sep,
                       [{text,
                         "2is the number of times the line has been executed."}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false}],
            0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [16,42,42,68,105,115,116,114,105,98,117,116,105,111,110,42,
                   42]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "mCover can be used in a distributed Erlang system. One of the nodes in the system must then be selected as the"}],
                  0,false},
                 {text,"\r**main node**"},
                 {sep,
                  [{text,
                    "J, and all Cover commands must be executed from this node. The error reason"}],
                  0,false},
                 {text,
                  [15,42,110,111,116,95,109,97,105,110,95,110,111,100,101,42]},
                 {sep,
                  [{text,
                    "Jis returned if an interface function is called on one of the remote nodes."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[3,85,115,101]}],0,false},
                 {text,
                  [15,42,99,111,118,101,114,58,115,116,97,114,116,47,49,42]},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,[14,42,99,111,118,101,114,58,115,116,111,112,47,49,42]},
                 {sep,
                  [{text,
                    [156,116,111,32,97,100,100,32,111,114,32,114,101,109,111,
                     118,101,32,110,111,100,101,115,46,32,84,104,101,32,115,
                     97,109,101,32,67,111,118,101,114,32,99,111,109,112,105,
                     108,101,100,32,99,111,100,101,32,119,105,108,108,32,98,
                     101,32,108,111,97,100,101,100,32,111,110,32,101,97,99,
                     104,32,110,111,100,101,44,32,97,110,100,32,97,110,97,108,
                     121,115,105,115,32,119,105,108,108,32,99,111,108,108,101,
                     99,116,32,97,110,100,32,115,117,109,32,117,112,32,99,111,
                     118,101,114,97,103,101,32,100,97,116,97,32,114,101,115,
                     117,108,116,115,32,102,114,111,109,32,97,108,108,32,110,
                     111,100,101,115,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "7To only collect data from remote nodes without stopping"}],
                  0,false},
                 {text,[7,42,99,111,118,101,114,42]},
                 {sep,
                  [{text,
                    [19,111,110,32,116,104,111,115,101,32,110,111,100,101,115,
                     44,32,117,115,101]}],
                  0,false},
                 {text,
                  [15,42,99,111,118,101,114,58,102,108,117,115,104,47,49,42]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [271,73,102,32,116,104,101,32,99,111,110,110,101,99,116,105,
                   111,110,32,116,111,32,97,32,114,101,109,111,116,101,32,110,
                   111,100,101,32,103,111,101,115,32,100,111,119,110,44,32,
                   116,104,101,32,109,97,105,110,32,110,111,100,101,32,119,
                   105,108,108,32,109,97,114,107,32,105,116,32,97,115,32,108,
                   111,115,116,46,32,73,102,32,116,104,101,32,110,111,100,101,
                   32,99,111,109,101,115,32,98,97,99,107,32,105,116,32,119,
                   105,108,108,32,98,101,32,97,100,100,101,100,32,97,103,97,
                   105,110,46,32,73,102,32,116,104,101,32,114,101,109,111,116,
                   101,32,110,111,100,101,32,119,97,115,32,97,108,105,118,101,
                   32,100,117,114,105,110,103,32,116,104,101,32,100,105,115,
                   99,111,110,110,101,99,116,101,100,32,112,101,114,105,111,
                   100,101,44,32,99,111,118,101,114,32,100,97,116,97,32,102,
                   114,111,109,32,98,101,102,111,114,101,32,97,110,100,32,100,
                   117,114,105,110,103,32,116,104,105,115,32,112,101,114,105,
                   111,100,101,32,119,105,108,108,32,98,101,32,105,110,99,108,
                   117,100,101,100,32,105,110,32,116,104,101,32,97,110,97,108,
                   121,115,105,115,46]}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"'## start() -> {ok,Pid} | {error,Reason}"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{sep,[{sep,[{text,"\fStart Cover."}],0,false}],0,true},null},
      null}},
    {above,
     {sep,[{text,[1,42]},{sep,[{text,"\vPid = pid()"}],0,false}],0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [30,82,101,97,115,111,110,32,61,32,123,97,108,114,101,97,100,121,95,
           115,116,97,114,116,101,100,44,80,105,100,125]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [139,83,116,97,114,116,115,32,116,104,101,32,67,111,118,101,114,
               32,115,101,114,118,101,114,32,119,104,105,99,104,32,111,119,
               110,115,32,116,104,101,32,67,111,118,101,114,32,105,110,116,
               101,114,110,97,108,32,100,97,116,97,98,97,115,101,46,32,84,104,
               105,115,32,102,117,110,99,116,105,111,110,32,105,115,32,99,97,
               108,108,101,100,32,97,117,116,111,109,97,116,105,99,97,108,108,
               121,32,98,121,32,116,104,101,32,111,116,104,101,114,32,102,117,
               110,99,116,105,111,110,115,32,105,110,32,116,104,101,32,109,
               111,100,117,108,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"(## local_only() -> ok | {error,too_late}"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Only support running Cover on the local node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [293,79,110,108,121,32,115,117,112,112,111,114,116,32,114,117,
               110,110,105,110,103,32,67,111,118,101,114,32,111,110,32,116,
               104,101,32,108,111,99,97,108,32,110,111,100,101,46,32,84,104,
               105,115,32,102,117,110,99,116,105,111,110,32,109,117,115,116,
               32,98,101,32,99,97,108,108,101,100,32,98,101,102,111,114,101,
               32,97,110,121,32,109,111,100,117,108,101,115,32,104,97,118,101,
               32,98,101,101,110,32,99,111,109,112,105,108,101,100,32,111,114,
               32,97,110,121,32,110,111,100,101,115,32,97,100,100,101,100,46,
               32,87,104,101,110,32,114,117,110,110,105,110,103,32,105,110,32,
               116,104,105,115,32,109,111,100,101,44,32,109,111,100,117,108,
               101,115,32,119,105,108,108,32,98,101,32,67,111,118,101,114,32,
               99,111,109,112,105,108,101,100,32,105,110,32,97,32,109,111,114,
               101,32,101,102,102,105,99,105,101,110,116,32,119,97,121,44,32,
               98,117,116,32,116,104,101,32,114,101,115,117,108,116,105,110,
               103,32,99,111,100,101,32,119,105,108,108,32,111,110,108,121,32,
               119,111,114,107,32,111,110,32,116,104,101,32,115,97,109,101,32,
               110,111,100,101,32,116,104,101,121,32,119,101,114,101,32,99,
               111,109,112,105,108,101,100,32,111,110,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "Q## start(Nodes) -> {ok,StartedNodes} | {error,not_main_node} | {error,local_only}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [28,83,116,97,114,116,32,67,111,118,101,114,32,111,110,32,114,101,
             109,111,116,101,32,110,111,100,101,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [31,78,111,100,101,115,32,61,32,83,116,97,114,116,101,100,78,111,100,
          101,115,32,61,32,91,97,116,111,109,40,41,93]}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "nStarts a Cover server on the each of given nodes, and loads all cover compiled modules. This call will fail if"}],
              0,false},
             {text,
              [20,42,99,111,118,101,114,58,108,111,99,97,108,95,111,110,108,
               121,47,48,42]},
             {sep,
              [{text,
                [16,104,97,115,32,98,101,101,110,32,99,97,108,108,101,100,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,")## compile(ModFiles) -> Result | [Result]"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"2## compile(ModFiles, Options) -> Result | [Result]"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"0## compile_module(ModFiles) -> Result | [Result]"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"9## compile_module(ModFiles, Options) -> Result | [Result]"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Compile one or more modules for Cover analysis."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [30,77,111,100,70,105,108,101,115,32,61,32,77,111,100,70,105,
                 108,101,32,124,32,91,77,111,100,70,105,108,101,93]}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [23,77,111,100,70,105,108,101,32,61,32,77,111,100,117,108,101,
                 32,124,32,70,105,108,101]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [17,194,160,77,111,100,117,108,101,32,61,32,97,116,111,109,40,
                41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [17,194,160,70,105,108,101,32,61,32,115,116,114,105,110,103,40,
               41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [18,79,112,116,105,111,110,115,32,61,32,91,79,112,116,105,111,
              110,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "=Â Option = {i,Dir} | {d,Macro} | {d,Macro,Value} | export_all"}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [17,42,99,111,109,112,105,108,101,58,102,105,108,101,47,50,46,
              42]}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          ";Result = {ok,Module} | {error,File} | {error,not_main_node}"}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "LCompiles a module for Cover analysis. The module is given by its module name"}],
              0,false},
             {text,"\b*Module*"},
             {sep,
              [{text,
                [19,111,114,32,98,121,32,105,116,115,32,102,105,108,101,32,
                 110,97,109,101]}],
              0,false},
             {text,[6,42,70,105,108,101,42]},
             {sep,[{text,[5,46,32,84,104,101]}],0,false},
             {text,[6,42,46,101,114,108,42]},
             {sep,
              [{text,
                "fextension may be omitted. If the module is located in another directory, the path has to be specified."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\t*Options*"},
             {sep,
              [{text,"/is a list of compiler options which defaults to"}],
              0,false},
             {text,[4,42,91,93,42]},
             {sep,
              [{text,
                "I. Only options defining include file directories and macros are passed to"}],
              0,false},
             {text,
              [16,42,99,111,109,112,105,108,101,58,102,105,108,101,47,50,42]},
             {sep,
              [{text,
                [29,44,32,101,118,101,114,121,116,104,105,110,103,32,101,108,
                 115,101,32,105,115,32,105,103,110,111,114,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "BIf the module is successfully Cover compiled, the function returns"}],
              0,false},
             {text,"\r*{ok,Module}*"},
             {sep,[{text," . Otherwise the function returns"}],0,false},
             {text,[14,42,123,101,114,114,111,114,44,70,105,108,101,125,42]},
             {sep,
              [{text,"0. Errors and warnings are printed as they occur."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\fIf a list of"}],0,false},
             {text,"\n*ModFiles*"},
             {sep,
              [{text,
                [28,105,115,32,103,105,118,101,110,32,97,115,32,105,110,112,
                 117,116,44,32,97,32,108,105,115,116,32,111,102]}],
              0,false},
             {text,"\b*Result*"},
             {sep,
              [{text,
                ">will be returned. The order of the returned list is undefined."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [149,78,111,116,101,32,116,104,97,116,32,116,104,101,32,105,110,
               116,101,114,110,97,108,32,100,97,116,97,98,97,115,101,32,105,
               115,32,40,114,101,45,41,105,110,105,116,105,97,116,101,100,32,
               100,117,114,105,110,103,32,116,104,101,32,99,111,109,112,105,
               108,97,116,105,111,110,44,32,109,101,97,110,105,110,103,32,97,
               110,121,32,112,114,101,118,105,111,117,115,108,121,32,99,111,
               108,108,101,99,116,101,100,32,99,111,118,101,114,97,103,101,32,
               100,97,116,97,32,102,111,114,32,116,104,101,32,109,111,100,117,
               108,101,32,119,105,108,108,32,98,101,32,108,111,115,116,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"3## compile_directory() -> [Result] | {error,Reason}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"6## compile_directory(Dir) -> [Result] | {error,Reason}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "?## compile_directory(Dir, Options) -> [Result] | {error,Reason}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Compile all modules in a directory for Cover analysis."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[14,68,105,114,32,61,32,115,116,114,105,110,103,40,41]}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [18,79,112,116,105,111,110,115,32,61,32,91,79,112,116,105,111,
               110,93]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{sep,[{text,[3,83,101,101]}],0,false},
              {text,
               [20,42,99,111,109,112,105,108,101,95,109,111,100,117,108,101,
                47,49,44,50,42]}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            ";Result = {ok,Module} | {error,File} | {error,not_main_node}"}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [20,42,99,111,109,112,105,108,101,95,109,111,100,117,108,101,47,
              49,44,50,42]}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,82,101,97,115,111,110,32,61,32,101,97,99,99,101,115,32,124,32,
           101,110,111,101,110,116]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,67,111,109,112,105,108,101,115,32,97,108,108,32,109,111,
                 100,117,108,101,115,32,40]}],
              0,false},
             {text,[6,42,46,101,114,108,42]},
             {sep,
              [{text,
                [21,102,105,108,101,115,41,32,105,110,32,97,32,100,105,114,
                 101,99,116,111,114,121]}],
              0,false},
             {text,[5,42,68,105,114,42]},
             {sep,[{text,"\"for Cover analysis the same way as"}],0,false},
             {text,
              [20,42,99,111,109,112,105,108,101,95,109,111,100,117,108,101,47,
               49,44,50,42]},
             {sep,
              [{text,"*and returns a list with the return values."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,68,105,114,42]},
             {sep,
              [{text,"*defaults to the current working directory."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [20,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                 116,117,114,110,115]}],
              0,false},
             {text,
              [16,42,123,101,114,114,111,114,44,101,97,99,99,101,115,125,42]},
             {sep,[{text,"#if the directory is not readable or"}],0,false},
             {text,
              [16,42,123,101,114,114,111,114,44,101,110,111,101,110,116,125,
               42]},
             {sep,[{text," if the directory does not exist."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,".## compile_beam(ModFiles) -> Result | [Result]"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "GCompile one or more modules for Cover analysis, using existing beam(s)."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [30,77,111,100,70,105,108,101,115,32,61,32,77,111,100,70,105,
               108,101,32,124,32,91,77,111,100,70,105,108,101,93]}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,[{text,"\eModFile = Module | BeamFile"}],0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,194,160,77,111,100,117,108,101,32,61,32,97,116,111,109,40,
              41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [21,194,160,66,101,97,109,70,105,108,101,32,61,32,115,116,114,105,
             110,103,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"8Result = {ok,Module} | {error,BeamFile} | {error,Reason}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [154,194,160,82,101,97,115,111,110,32,61,32,110,111,110,95,101,120,
           105,115,116,105,110,103,32,124,32,123,110,111,95,97,98,115,116,114,
           97,99,116,95,99,111,100,101,44,66,101,97,109,70,105,108,101,125,32,
           124,32,123,101,110,99,114,121,112,116,101,100,95,97,98,115,116,114,
           97,99,116,95,99,111,100,101,44,66,101,97,109,70,105,108,101,125,32,
           124,32,123,97,108,114,101,97,100,121,95,99,111,118,101,114,95,99,
           111,109,112,105,108,101,100,44,110,111,95,98,101,97,109,95,102,111,
           117,110,100,44,77,111,100,117,108,101,125,32,124,32,110,111,116,95,
           109,97,105,110,95,110,111,100,101]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,68,111,101,115,32,116,104,101,32,115,97,109,101,32,97,
                 115]}],
              0,false},
             {text,"\r*compile/1,2*"},
             {sep,
              [{text,
                [22,44,32,98,117,116,32,117,115,101,115,32,97,110,32,101,120,
                 105,115,116,105,110,103]}],
              0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,
              [{text,
                "?file as base, i.e. the module is not compiled from source. Thus"}],
              0,false},
             {text,
              [16,42,99,111,109,112,105,108,101,95,98,101,97,109,47,49,42]},
             {sep,
              [{text,
                [14,105,115,32,102,97,115,116,101,114,32,116,104,97,110]}],
              0,false},
             {text,"\r*compile/1,2*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,78,111,116,101,32,116,104,97,116,32,116,104,101,32,101,
                 120,105,115,116,105,110,103]}],
              0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,
              [{text,
                [17,102,105,108,101,32,109,117,115,116,32,99,111,110,116,97,
                 105,110]}],
              0,false},
             {text,
              [17,42,42,97,98,115,116,114,97,99,116,32,99,111,100,101,42,42]},
             {sep,
              [{text,"*, i.e. it must have been compiled with the"}],
              0,false},
             {text,"\f*debug_info*"},
             {sep,[{text," option. If not, the error reason"}],0,false},
             {text,
              [29,42,123,110,111,95,97,98,115,116,114,97,99,116,95,99,111,100,
               101,44,66,101,97,109,70,105,108,101,125,42]},
             {sep,
              [{text,
                "kis returned. If the abstract code is encrypted, and no key is available for decrypting it, the error reason"}],
              0,false},
             {text,"$*{encrypted_abstract_code,BeamFile}*"},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "6If only the module name (i.e. not the full name of the"}],
              0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,[{text,"$file) is given to this function, the"}],0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,
              [{text,
                [24,102,105,108,101,32,105,115,32,102,111,117,110,100,32,98,
                 121,32,99,97,108,108,105,110,103]}],
              0,false},
             {text,
              [20,42,99,111,100,101,58,119,104,105,99,104,40,77,111,100,117,
               108,101,41,42]},
             {sep,[{text,[7,46,32,73,102,32,110,111]}],0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,
              [{text,
                [31,102,105,108,101,32,105,115,32,102,111,117,110,100,44,32,
                 116,104,101,32,101,114,114,111,114,32,114,101,97,115,111,
                 110]}],
              0,false},
             {text,[14,42,110,111,110,95,101,120,105,115,116,105,110,103,42]},
             {sep,
              [{text,
                "9is returned. If the module is already cover compiled with"}],
              0,false},
             {text,
              [16,42,99,111,109,112,105,108,101,95,98,101,97,109,47,49,42]},
             {sep,[{text,[5,44,32,116,104,101]}],0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,
              [{text,
                "zfile will be picked from the same location as the first time it was compiled. If the module is already cover compiled with"}],
              0,false},
             {text,"\r*compile/1,2*"},
             {sep,[{text,"%, there is no way to find the correct"}],0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,
              [{text,
                [25,102,105,108,101,44,32,115,111,32,116,104,101,32,101,114,
                 114,111,114,32,114,101,97,115,111,110]}],
              0,false},
             {text,"/*{already_cover_compiled,no_beam_found,Module}*"},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [18,42,123,101,114,114,111,114,44,66,101,97,109,70,105,108,101,
               125,42]},
             {sep,
              [{text,
                ">is returned if the compiled code cannot be loaded on the node."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\fIf a list of"}],0,false},
             {text,"\n*ModFiles*"},
             {sep,
              [{text,
                [28,105,115,32,103,105,118,101,110,32,97,115,32,105,110,112,
                 117,116,44,32,97,32,108,105,115,116,32,111,102]}],
              0,false},
             {text,"\b*Result*"},
             {sep,
              [{text,
                ">will be returned. The order of the returned list is undefined."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"8## compile_beam_directory() -> [Result] | {error,Reason}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,";## compile_beam_directory(Dir) -> [Result] | {error,Reason}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Compile all .beam files in a directory for Cover analysis."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[14,68,105,114,32,61,32,115,116,114,105,110,103,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},{sep,[{text,"\eResult = See compile_beam/1"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,82,101,97,115,111,110,32,61,32,101,97,99,99,101,115,32,124,32,
           101,110,111,101,110,116]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,67,111,109,112,105,108,101,115,32,97,108,108,32,109,111,
                 100,117,108,101,115,32,40]}],
              0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,
              [{text,
                [21,102,105,108,101,115,41,32,105,110,32,97,32,100,105,114,
                 101,99,116,111,114,121]}],
              0,false},
             {text,[5,42,68,105,114,42]},
             {sep,[{text,"\"for Cover analysis the same way as"}],0,false},
             {text,
              [16,42,99,111,109,112,105,108,101,95,98,101,97,109,47,49,42]},
             {sep,
              [{text,"*and returns a list with the return values."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,68,105,114,42]},
             {sep,
              [{text,"*defaults to the current working directory."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [20,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                 116,117,114,110,115]}],
              0,false},
             {text,
              [16,42,123,101,114,114,111,114,44,101,97,99,99,101,115,125,42]},
             {sep,[{text,"#if the directory is not readable or"}],0,false},
             {text,
              [16,42,123,101,114,114,111,114,44,101,110,111,101,110,116,125,
               42]},
             {sep,[{text," if the directory does not exist."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"8## analyse() -> {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "K## analyse(Modules) -> OneResult | {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "@## analyse(Analysis) -> {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"=## analyse(Level) -> {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "U## analyse(Modules, Analysis) -> OneResult | {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "R## analyse(Modules, Level) -> OneResult | {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "G## analyse(Analysis, Level) -> {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "\\## analyse(Modules, Analysis, Level) -> OneResult | {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Analyse one or more Cover compiled modules."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {sep,
                    [{text,[1,42]},
                     {sep,[{text,"\eModules = Module | [Module]"}],0,false}],
                    0,false},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,
                        [15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,
                         41]}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,[{text,"\eAnalysis = coverage | calls"}],0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,")Level = line | clause | function | module"}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "FOneResult = {ok,{Module,Value}} | {ok,[{Item,Value}]} | {error, Error}"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,[{text,"!Â Item = Line | Clause | Function"}],0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [16,194,160,194,160,76,105,110,101,32,61,32,123,77,44,78,
                    125]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [22,194,160,194,160,67,108,97,117,115,101,32,61,32,123,77,
                   44,70,44,65,44,67,125]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [22,194,160,194,160,70,117,110,99,116,105,111,110,32,61,32,
                  123,77,44,70,44,65,125]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [20,194,160,194,160,194,160,77,32,61,32,70,32,61,32,97,116,
                 111,109,40,41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,[{text,"\eÂ Â Â N = A = C = integer()"}],0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [30,194,160,86,97,108,117,101,32,61,32,123,67,111,118,44,78,111,
               116,67,111,118,125,32,124,32,67,97,108,108,115]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,[{text,"$Â Â Cov = NotCov = Calls = integer()"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"%Â Error = {not_cover_compiled,Module}"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"&Ok = [{Module,Value}] | [{Item,Value}]"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,70,97,105,108,32,61,32,91,69,114,114,111,114,93]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "HPerforms analysis of one or more Cover compiled modules, as specified by"}],
              0,false},
             {text,"\n*Analysis*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[7,42,76,101,118,101,108,42]},
             {sep,
              [{text,
                "@(see above), by examining the contents of the internal database."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\n*Analysis*"},
             {sep,[{text,"\vdefaults to"}],0,false},
             {text,"\n*coverage*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[7,42,76,101,118,101,108,42]},
             {sep,[{text,"\vdefaults to"}],0,false},
             {text,"\n*function*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,102]}],0,false},
             {text,"\t*Modules*"},
             {sep,
              [{text,"+is an atom (one module), the return will be"}],
              0,false},
             {text,"\v*OneResult*"},
             {sep,
              [{text,
                [25,44,32,101,108,115,101,32,116,104,101,32,114,101,116,117,
                 114,110,32,119,105,108,108,32,98,101]}],
              0,false},
             {text,
              [18,42,123,114,101,115,117,108,116,44,79,107,44,70,97,105,108,
               125,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,102]}],0,false},
             {text,"\t*Modules*"},
             {sep,
              [{text,
                [153,105,115,32,110,111,116,32,103,105,118,101,110,44,32,97,
                 108,108,32,109,111,100,117,108,101,115,32,116,104,97,116,32,
                 104,97,118,101,32,100,97,116,97,32,105,110,32,116,104,101,32,
                 99,111,118,101,114,32,100,97,116,97,32,116,97,98,108,101,44,
                 32,97,114,101,32,97,110,97,108,121,115,101,100,46,32,78,111,
                 116,101,32,116,104,97,116,32,116,104,105,115,32,105,110,99,
                 108,117,100,101,115,32,98,111,116,104,32,99,111,118,101,114,
                 32,99,111,109,112,105,108,101,100,32,109,111,100,117,108,101,
                 115,32,97,110,100,32,105,109,112,111,114,116,101,100,32,109,
                 111,100,117,108,101,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "NIf a given module is not Cover compiled, this is indicated by the error reason"}],
              0,false},
             {text,
              [29,42,123,110,111,116,95,99,111,118,101,114,95,99,111,109,112,
               105,108,101,100,44,77,111,100,117,108,101,125,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "@## analyse_to_file() -> {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "Q## analyse_to_file(Modules) ->  Answer | {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "G## analyse_to_file(Options) -> {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "X## analyse_to_file(Modules,Options) -> Answer | {result,Ok,Fail} | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "ADetailed coverage analysis of one or more Cover compiled modules."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,[{text,"\eModules = Module | [Module]"}],0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,[{text,"\eOutFile = OutDir = string()"}],0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [18,79,112,116,105,111,110,115,32,61,32,91,79,112,116,105,
                  111,110,93]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"3Option = html | {outfile,OutFile} | {outdir,OutDir}"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,[{text,"%Answer = {ok,OutFile} | {error,Error}"}],0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[14,79,107,32,61,32,91,79,117,116,70,105,108,101,93]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[14,70,97,105,108,32,61,32,91,69,114,114,111,114,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "XError = {not_cover_compiled,Module} | {file,File,Reason} | {no_source_code_found,Module}"}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,194,160,70,105,108,101,32,61,32,115,116,114,105,110,103,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,194,160,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [138,77,97,107,101,115,32,99,111,112,105,101,115,32,111,102,32,
               116,104,101,32,115,111,117,114,99,101,32,102,105,108,101,32,
               102,111,114,32,116,104,101,32,103,105,118,101,110,32,109,111,
               100,117,108,101,115,44,32,119,104,101,114,101,32,105,116,32,
               102,111,114,32,101,97,99,104,32,101,120,101,99,117,116,97,98,
               108,101,32,108,105,110,101,32,105,115,32,115,112,101,99,105,
               102,105,101,100,32,104,111,119,32,109,97,110,121,32,116,105,
               109,101,115,32,105,116,32,104,97,115,32,98,101,101,110,32,101,
               120,101,99,117,116,101,100,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [15,84,104,101,32,111,117,116,112,117,116,32,102,105,108,
                 101]}],
              0,false},
             {text,"\t*OutFile*"},
             {sep,[{text,"\vdefaults to"}],0,false},
             {text,
              [18,42,77,111,100,117,108,101,46,67,79,86,69,82,46,111,117,116,
               42]},
             {sep,[{text,[4,44,32,111,114]}],0,false},
             {text,
              [19,42,77,111,100,117,108,101,46,67,79,86,69,82,46,104,116,109,
               108,42]},
             {sep,[{text,"\rif the option"}],0,false},
             {text,[6,42,104,116,109,108,42]},
             {sep,[{text,"\twas used."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,102]}],0,false},
             {text,"\t*Modules*"},
             {sep,
              [{text,"+is an atom (one module), the return will be"}],
              0,false},
             {text,"\b*Answer*"},
             {sep,[{text,"!, else the return will be a list,"}],0,false},
             {text,
              [18,42,123,114,101,115,117,108,116,44,79,107,44,70,97,105,108,
               125,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,102]}],0,false},
             {text,"\t*Modules*"},
             {sep,
              [{text,
                [153,105,115,32,110,111,116,32,103,105,118,101,110,44,32,97,
                 108,108,32,109,111,100,117,108,101,115,32,116,104,97,116,32,
                 104,97,118,101,32,100,97,116,97,32,105,110,32,116,104,101,32,
                 99,111,118,101,114,32,100,97,116,97,32,116,97,98,108,101,44,
                 32,97,114,101,32,97,110,97,108,121,115,101,100,46,32,78,111,
                 116,101,32,116,104,97,116,32,116,104,105,115,32,105,110,99,
                 108,117,100,101,115,32,98,111,116,104,32,99,111,118,101,114,
                 32,99,111,109,112,105,108,101,100,32,109,111,100,117,108,101,
                 115,32,97,110,100,32,105,109,112,111,114,116,101,100,32,109,
                 111,100,117,108,101,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "HIf a module is not Cover compiled, this is indicated by the error reason"}],
              0,false},
             {text,
              [29,42,123,110,111,116,95,99,111,118,101,114,95,99,111,109,112,
               105,108,101,100,44,77,111,100,117,108,101,125,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "@If the source file and/or the output file cannot be opened using"}],
              0,false},
             {text,"\r*file:open/2*"},
             {sep,
              [{text,
                [22,44,32,116,104,101,32,102,117,110,99,116,105,111,110,32,
                 114,101,116,117,114,110,115]}],
              0,false},
             {text,
              [28,42,123,101,114,114,111,114,44,123,102,105,108,101,44,70,105,
               108,101,44,82,101,97,115,111,110,125,125,42]},
             {sep,[{text,[5,119,104,101,114,101]}],0,false},
             {text,[6,42,70,105,108,101,42]},
             {sep,
              [{text,
                [20,105,115,32,116,104,101,32,102,105,108,101,32,110,97,109,
                 101,32,97,110,100]}],
              0,false},
             {text,"\b*Reason*"},
             {sep,
              [{text,
                [20,105,115,32,116,104,101,32,101,114,114,111,114,32,114,101,
                 97,115,111,110,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'If a module was cover compiled from the"}],0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,
              [{text,
                [16,102,105,108,101,44,32,105,46,101,46,32,117,115,105,110,
                 103]}],
              0,false},
             {text,
              [16,42,99,111,109,112,105,108,101,95,98,101,97,109,47,49,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,
              [28,42,99,111,109,112,105,108,101,95,98,101,97,109,95,100,105,
               114,101,99,116,111,114,121,47,48,44,49,42]},
             {sep,
              [{text,
                "N, it is assumed that the source code can be found in the same directory as the"}],
              0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,[{text,"\bfile, in"}],0,false},
             {text,"\b*../src*"},
             {sep,
              [{text,
                "7relative to that directory, or using the source path in"}],
              0,false},
             {text,
              [29,42,77,111,100,117,108,101,58,109,111,100,117,108,101,95,105,
               110,102,111,40,99,111,109,112,105,108,101,41,42]},
             {sep,
              [{text,
                "U. When using the latter, two paths are examined: first the one constructed by joining"}],
              0,false},
             {text,"\b*../src*"},
             {sep,
              [{text,"2and the tail of the compiled path below a trailing"}],
              0,false},
             {text,[5,42,115,114,99,42]},
             {sep,
              [{text,
                "kcomponent, then the compiled path itself. If no source code is found, this is indicated by the error reason"}],
              0,false},
             {text,
              [31,42,123,110,111,95,115,111,117,114,99,101,95,99,111,100,101,
               95,102,111,117,110,100,44,77,111,100,117,108,101,125,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"### async_analyse_to_file(Module) ->"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"+## async_analyse_to_file(Module,Options) ->"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,",## async_analyse_to_file(Module, OutFile) ->"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"<## async_analyse_to_file(Module, OutFile, Options) ->  pid()"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Asynchronous call to analyse_to_file."}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [18,79,117,116,70,105,108,101,32,61,32,115,116,114,105,110,103,
                40,41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [18,79,112,116,105,111,110,115,32,61,32,91,79,112,116,105,111,
               110,93]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},{sep,[{text,"\rOption = html"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "hError = {not_cover_compiled,Module} | {file,File,Reason} | {no_source_code_found,Module} | not_main_node"}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,194,160,70,105,108,101,32,61,32,115,116,114,105,110,103,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,194,160,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+This function works exactly the same way as"}],
              0,false},
             {text,"%[analyse_to_file](#analyse_to_file-1)"},
             {sep,
              [{text,
                "xexcept that it is asynchronous instead of synchronous. The spawned process will link with the caller when created. If an"}],
              0,false},
             {text,[7,42,69,114,114,111,114,42]},
             {sep,
              [{text,
                "Zoccurs while doing the cover analysis the process will crash with the same error reason as"}],
              0,false},
             {text,"%[analyse_to_file](#analyse_to_file-1)"},
             {sep,[{text,"\rwould return."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"0## modules() -> [Module] | {error,not_main_node}"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Return all Cover compiled modules."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "BReturns a list with all modules that are currently Cover compiled."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"9## imported_modules() -> [Module] | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Return all modules for which there are imported data."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "BReturns a list with all modules for which there are imported data."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"/## imported() -> [File] | {error,not_main_node}"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [26,82,101,116,117,114,110,32,97,108,108,32,105,109,112,111,114,
             116,101,100,32,102,105,108,101,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,70,105,108,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"'Returns a list with all imported files."}],0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"2## which_nodes() -> [Node] | {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Return all nodes that are part of the coverage analysis."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,[{text,[1,42]},{sep,[{text,"\rNode = atom()"}],0,false}],0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [155,82,101,116,117,114,110,115,32,97,32,108,105,115,116,32,119,
               105,116,104,32,97,108,108,32,110,111,100,101,115,32,116,104,97,
               116,32,97,114,101,32,112,97,114,116,32,111,102,32,116,104,101,
               32,99,111,118,101,114,97,103,101,32,97,110,97,108,121,115,105,
               115,46,32,78,111,116,101,32,116,104,97,116,32,116,104,101,32,
               99,117,114,114,101,110,116,32,110,111,100,101,32,105,115,32,
               110,111,116,32,114,101,116,117,114,110,101,100,46,32,84,104,
               105,115,32,110,111,100,101,32,105,115,32,97,108,119,97,121,115,
               32,112,97,114,116,32,111,102,32,116,104,101,32,97,110,97,108,
               121,115,105,115,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "F## is_compiled(Module) -> {file,File} | false |  {error,not_main_node}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Check if a module is Cover compiled."}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,66,101,97,109,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,"\r*{file,File}*"},
             {sep,[{text,"\rif the module"}],0,false},
             {text,"\b*Module*"},
             {sep,
              [{text,
                [21,105,115,32,67,111,118,101,114,32,99,111,109,112,105,108,
                 101,100,44,32,111,114]}],
              0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,"\notherwise."}],0,false},
             {text,[6,42,70,105,108,101,42]},
             {sep,[{text,[6,105,115,32,116,104,101]}],0,false},
             {text,[6,42,46,101,114,108,42]},
             {sep,[{text,"\ffile used by"}],0,false},
             {text,
              [26,42,99,111,118,101,114,58,99,111,109,112,105,108,101,95,109,
               111,100,117,108,101,47,49,44,50,42]},
             {sep,[{text,[6,111,114,32,116,104,101]}],0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,[{text,"\ffile used by"}],0,false},
             {text,
              [16,42,99,111,109,112,105,108,101,95,98,101,97,109,47,49,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [19,35,35,32,114,101,115,101,116,40,77,111,100,117,108,101,41,32,45,
         62]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,")## reset() ->  ok | {error,not_main_node}"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Reset coverage data for Cover compiled modules."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"4Resets all coverage data for a Cover compiled module"}],
              0,false},
             {text,"\b*Module*"},
             {sep,
              [{text,
                [127,105,110,32,116,104,101,32,67,111,118,101,114,32,100,97,
                 116,97,98,97,115,101,32,111,110,32,97,108,108,32,110,111,100,
                 101,115,46,32,73,102,32,116,104,101,32,97,114,103,117,109,
                 101,110,116,32,105,115,32,111,109,105,116,116,101,100,44,32,
                 116,104,101,32,99,111,118,101,114,97,103,101,32,100,97,116,
                 97,32,119,105,108,108,32,98,101,32,114,101,115,101,116,32,
                 102,111,114,32,97,108,108,32,109,111,100,117,108,101,115,32,
                 107,110,111,119,110,32,98,121,32,67,111,118,101,114,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,102]}],0,false},
             {text,"\b*Module*"},
             {sep,
              [{text,"+is not Cover compiled, the function returns"}],
              0,false},
             {text,"%*{error,{not_cover_compiled,Module}}*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [21,35,35,32,101,120,112,111,114,116,40,69,120,112,111,114,116,70,105,
         108,101,41]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"3## export(ExportFile,Module) -> ok | {error,Reason}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Reset coverage data for Cover compiled modules."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [21,69,120,112,111,114,116,70,105,108,101,32,61,32,115,116,114,105,
            110,103,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "YReason = {not_cover_compiled,Module} | {cant_open_file,ExportFile,Reason} | not_main_node"}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"%Exports the current coverage data for"}],0,false},
             {text,"\b*Module*"},
             {sep,[{text,"\vto the file"}],0,false},
             {text,"\f*ExportFile*"},
             {sep,
              [{text,
                [31,46,32,73,116,32,105,115,32,114,101,99,111,109,109,101,110,
                 100,101,100,32,116,111,32,110,97,109,101,32,116,104,101]}],
              0,false},
             {text,"\f*ExportFile*"},
             {sep,
              [{text,
                [18,119,105,116,104,32,116,104,101,32,101,120,116,101,110,115,
                 105,111,110]}],
              0,false},
             {text,"\f*.coverdata*"},
             {sep,
              [{text,
                "K, since other filenames cannot be read by the web based interface to cover."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,102]}],0,false},
             {text,"\b*Module*"},
             {sep,
              [{text,
                "Ris not given, data for all Cover compiled or earlier imported modules is exported."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "PThis function is useful if coverage data from different systems is to be merged."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bSee also"}],0,false},
             {text,
              [16,42,99,111,118,101,114,58,105,109,112,111,114,116,47,49,42]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,",## import(ExportFile) -> ok | {error,Reason}"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Reset coverage data for Cover compiled modules."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [21,69,120,112,111,114,116,70,105,108,101,32,61,32,115,116,114,105,
           110,103,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          ";Reason = {cant_open_file,ExportFile,Reason} | not_main_node"}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Imports coverage data from the file"}],0,false},
             {text,"\f*ExportFile*"},
             {sep,[{text,"\fcreated with"}],0,false},
             {text,
              [18,42,99,111,118,101,114,58,101,120,112,111,114,116,47,49,44,
               50,42]},
             {sep,
              [{text,
                "C. Any analysis performed after this will include the imported data."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Note that when compiling a module"}],0,false},
             {text,")**all existing coverage data is removed**"},
             {sep,
              [{text,
                "f, including imported data. If a module is already compiled when data is imported, the imported data is"}],
              0,false},
             {text,"\t**added**"},
             {sep,
              [{text,
                [30,116,111,32,116,104,101,32,101,120,105,115,116,105,110,103,
                 32,99,111,118,101,114,97,103,101,32,100,97,116,97,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "{Coverage data from several export files can be imported into one system. The coverage data is then added up when analysing."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ØCoverage data for a module cannot be imported from the same file twice unless the module is first reset or compiled. The check is based on the filename, so you can easily fool the system by renaming your export file."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bSee also"}],0,false},
             {text,
              [18,42,99,111,118,101,114,58,101,120,112,111,114,116,47,49,44,
               50,42]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"'## stop() -> ok | {error,not_main_node}"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{sep,[{sep,[{text,"\vStop Cover."}],0,false}],0,true},null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              ";Stops the Cover server and unloads all Cover compiled code."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,",## stop(Nodes) -> ok | {error,not_main_node}"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,[{sep,[{text,"\eStop Cover on remote nodes."}],0,false}],0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,78,111,100,101,115,32,61,32,91,97,116,111,109,40,41,93]}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "¬Stops the Cover server and unloads all Cover compiled code on the given nodes. Data stored in the Cover database on the remote nodes is fetched and stored on the main node."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"-## flush(Nodes) -> ok | {error,not_main_node}"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Collect cover data from remote nodes."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,78,111,100,101,115,32,61,32,91,97,116,111,109,40,41,93]}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "SFetch data from the Cover database on the remote nodes and stored on the main node."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## SEE ALSO"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [19,99,111,100,101,40,51,41,44,32,99,111,109,112,105,108,101,40,51,
            41]}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
