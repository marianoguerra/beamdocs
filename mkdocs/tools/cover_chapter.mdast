{above,
 {above,
  {above,
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,[7,35,32,99,111,118,101,114]},null},null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[15,35,35,32,73,110,116,114,111,100,117,99,116,105,111,110]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\nThe module"}],0,false},
            {text,[7,42,99,111,118,101,114,42]},
            {sep,
             [{text,
               "bprovides a set of functions for coverage analysis of Erlang programs, counting how many times each"}],
             0,false},
            {text,
             [25,91,101,120,101,99,117,116,97,98,108,101,32,108,105,110,101,
              93,40,35,108,105,110,101,115,41]},
            {sep,[{text,"\fis executed."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [154,67,111,118,101,114,97,103,101,32,97,110,97,108,121,115,105,
              115,32,99,97,110,32,98,101,32,117,115,101,100,32,116,111,32,118,
              101,114,105,102,121,32,116,101,115,116,32,99,97,115,101,115,44,
              32,109,97,107,105,110,103,32,115,117,114,101,32,97,108,108,32,
              114,101,108,101,118,97,110,116,32,99,111,100,101,32,105,115,32,
              99,111,118,101,114,101,100,44,32,97,110,100,32,109,97,121,32,98,
              101,32,104,101,108,112,102,117,108,32,119,104,101,110,32,108,
              111,111,107,105,110,103,32,102,111,114,32,98,111,116,116,108,
              101,110,101,99,107,115,32,105,110,32,116,104,101,32,99,111,100,
              101,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [29,35,35,32,71,101,116,116,105,110,103,32,83,116,97,114,116,101,100,
         32,87,105,116,104,32,67,111,118,101,114]},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n## Example"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "EAssume that a test case for the following program should be verified:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [1174,10,45,109,111,100,117,108,101,40,99,104,97,110,110,101,
               108,41,46,10,45,98,101,104,97,118,105,111,117,114,40,103,101,
               110,95,115,101,114,118,101,114,41,46,10,10,45,101,120,112,111,
               114,116,40,91,115,116,97,114,116,95,108,105,110,107,47,48,44,
               115,116,111,112,47,48,93,41,46,10,45,101,120,112,111,114,116,
               40,91,97,108,108,111,99,47,48,44,102,114,101,101,47,49,93,41,
               46,32,37,32,99,108,105,101,110,116,32,105,110,116,101,114,102,
               97,99,101,10,45,101,120,112,111,114,116,40,91,105,110,105,116,
               47,49,44,104,97,110,100,108,101,95,99,97,108,108,47,51,44,116,
               101,114,109,105,110,97,116,101,47,50,93,41,46,32,37,32,99,97,
               108,108,98,97,99,107,32,102,117,110,99,116,105,111,110,115,10,
               10,115,116,97,114,116,95,108,105,110,107,40,41,32,45,62,10,32,
               32,32,32,103,101,110,95,115,101,114,118,101,114,58,115,116,97,
               114,116,95,108,105,110,107,40,123,108,111,99,97,108,44,99,104,
               97,110,110,101,108,125,44,99,104,97,110,110,101,108,44,91,93,
               44,91,93,41,46,10,10,115,116,111,112,40,41,32,45,62,10,32,32,
               32,32,103,101,110,95,115,101,114,118,101,114,58,99,97,108,108,
               40,99,104,97,110,110,101,108,44,115,116,111,112,41,46,10,10,37,
               37,37,45,67,108,105,101,110,116,32,105,110,116,101,114,102,97,
               99,101,32,102,117,110,99,116,105,111,110,115,45,45,45,45,45,45,
               45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
               45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,10,10,97,108,
               108,111,99,40,41,32,45,62,10,32,32,32,32,103,101,110,95,115,
               101,114,118,101,114,58,99,97,108,108,40,99,104,97,110,110,101,
               108,44,97,108,108,111,99,41,46,10,10,102,114,101,101,40,67,104,
               97,110,110,101,108,41,32,45,62,10,32,32,32,32,103,101,110,95,
               115,101,114,118,101,114,58,99,97,108,108,40,99,104,97,110,110,
               101,108,44,123,102,114,101,101,44,67,104,97,110,110,101,108,
               125,41,46,10,10,37,37,37,45,103,101,110,95,115,101,114,118,101,
               114,32,99,97,108,108,98,97,99,107,32,102,117,110,99,116,105,
               111,110,115,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
               45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
               45,45,10,10,105,110,105,116,40,95,65,114,103,41,32,45,62,10,32,
               32,32,32,123,111,107,44,99,104,97,110,110,101,108,115,40,41,
               125,46,10,10,104,97,110,100,108,101,95,99,97,108,108,40,115,
               116,111,112,44,67,108,105,101,110,116,44,67,104,97,110,110,101,
               108,115,41,32,45,62,10,32,32,32,32,123,115,116,111,112,44,110,
               111,114,109,97,108,44,111,107,44,67,104,97,110,110,101,108,115,
               125,59,10,10,104,97,110,100,108,101,95,99,97,108,108,40,97,108,
               108,111,99,44,67,108,105,101,110,116,44,67,104,97,110,110,101,
               108,115,41,32,45,62,10,32,32,32,32,123,67,104,44,67,104,97,110,
               110,101,108,115,50,125,32,61,32,97,108,108,111,99,40,67,104,97,
               110,110,101,108,115,41,44,10,32,32,32,32,123,114,101,112,108,
               121,44,123,111,107,44,67,104,125,44,67,104,97,110,110,101,108,
               115,50,125,59,10,10,104,97,110,100,108,101,95,99,97,108,108,40,
               123,102,114,101,101,44,67,104,97,110,110,101,108,125,44,67,108,
               105,101,110,116,44,67,104,97,110,110,101,108,115,41,32,45,62,
               10,32,32,32,32,67,104,97,110,110,101,108,115,50,32,61,32,102,
               114,101,101,40,67,104,97,110,110,101,108,44,67,104,97,110,110,
               101,108,115,41,44,10,32,32,32,32,123,114,101,112,108,121,44,
               111,107,44,67,104,97,110,110,101,108,115,50,125,46,10,10,116,
               101,114,109,105,110,97,116,101,40,95,82,101,97,115,111,110,44,
               67,104,97,110,110,101,108,115,41,32,45,62,10,32,32,32,32,111,
               107,46,10,10,37,37,37,45,73,110,116,101,114,110,97,108,32,102,
               117,110,99,116,105,111,110,115,45,45,45,45,45,45,45,45,45,45,
               45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
               45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,10,
               10,99,104,97,110,110,101,108,115,40,41,32,45,62,10,32,32,32,32,
               91,99,104,49,44,99,104,50,44,99,104,51,93,46,10,10,97,108,108,
               111,99,40,91,67,104,97,110,110,101,108,124,67,104,97,110,110,
               101,108,115,93,41,32,45,62,10,32,32,32,32,123,67,104,97,110,
               110,101,108,44,67,104,97,110,110,101,108,115,125,59,10,97,108,
               108,111,99,40,91,93,41,32,45,62,10,32,32,32,32,102,97,108,115,
               101,46,10,10,102,114,101,101,40,67,104,97,110,110,101,108,44,
               67,104,97,110,110,101,108,115,41,32,45,62,10,32,32,32,32,91,67,
               104,97,110,110,101,108,124,67,104,97,110,110,101,108,115,93,
               46]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"(The test case is implemented as follows:"}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "ยก\n-module(test).\n-export([s/0]).\n\ns() ->\n    {ok,Pid} = channel:start_link(),\n    {ok,Ch1} = channel:alloc(),\n    ok = channel:free(Ch1),\n    ok = channel:stop()."}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[14,35,35,32,80,114,101,112,97,114,97,116,105,111,110]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [128,70,105,114,115,116,32,111,102,32,97,108,108,44,32,67,111,
               118,101,114,32,109,117,115,116,32,98,101,32,115,116,97,114,116,
               101,100,46,32,84,104,105,115,32,115,112,97,119,110,115,32,97,
               32,112,114,111,99,101,115,115,32,119,104,105,99,104,32,111,119,
               110,115,32,116,104,101,32,67,111,118,101,114,32,100,97,116,97,
               98,97,115,101,32,119,104,101,114,101,32,97,108,108,32,99,111,
               118,101,114,97,103,101,32,100,97,116,97,32,119,105,108,108,32,
               98,101,32,115,116,111,114,101,100,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,49,62,32]},
             {text,[14,99,111,118,101,114,58,115,116,97,114,116,40,41,46]},
             {text,[5,10,123,111,107,44]},
             {text,"\t<0.30.0>}"}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"4To include other nodes in the coverage analysis, use"}],
              0,false},
             {text,"\t*start/1*"},
             {sep,
              [{text,
                "ยด. All cover compiled modules will then be loaded on all nodes, and data from all nodes will be summed up when analysing. For simplicity this example only involves the current node."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "@Before any analysis can take place, the involved modules must be"}],
              0,false},
             {text,
              [18,42,42,67,111,118,101,114,32,99,111,109,112,105,108,101,100,
               42,42]},
             {sep,
              [{text,
                "q. This means that some extra information is added to the module before it is compiled into a binary which then is"}],
              0,false},
             {text,
              [18,91,108,111,97,100,101,100,93,40,35,108,111,97,100,105,110,
               103,41]},
             {sep,
              [{text,
                "6. The source file of the module is not affected and no"}],
              0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,
              [{text,
                [16,102,105,108,101,32,105,115,32,99,114,101,97,116,101,100,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,50,62,32]},
             {text,
              [30,99,111,118,101,114,58,99,111,109,112,105,108,101,95,109,111,
               100,117,108,101,40,99,104,97,110,110,101,108,41,46]},
             {text,"\r\n{ok,channel}"}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"1Each time a function in the Cover compiled module"}],
              0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                "]is called, information about the call will be added to the Cover database. Run the test case:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,51,62,32]},
             {text,"\ttest:s()."},
             {text,[3,10,111,107]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "xCover analysis is performed by examining the contents of the Cover database. The output is determined by two parameters,"}],
              0,false},
             {text,[7,42,76,101,118,101,108,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\n*Analysis*"},
             {sep,[{text,[1,46]}],0,false},
             {text,"\n*Analysis*"},
             {sep,[{text,"\tis either"}],0,false},
             {text,"\n*coverage*"},
             {sep,[{text,[2,111,114]}],0,false},
             {text,[7,42,99,97,108,108,115,42]},
             {sep,
              [{text,"(and determines the type of the analysis."}],
              0,false},
             {text,[7,42,76,101,118,101,108,42]},
             {sep,[{text,"\tis either"}],0,false},
             {text,"\b*module*"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\n*function*"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\b*clause*"},
             {sep,[{text,[4,44,32,111,114]}],0,false},
             {text,[6,42,108,105,110,101,42]},
             {sep,
              [{text,")and determines the level of the analysis."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [20,35,35,32,67,111,118,101,114,97,103,101,32,65,110,97,108,121,115,
           105,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,65,110,97,108,121,115,105,115,32,111,102,32,116,121,112,
                 101]}],
              0,false},
             {text,"\n*coverage*"},
             {sep,
              [{text,
                [129,105,115,32,117,115,101,100,32,116,111,32,102,105,110,100,
                 32,111,117,116,32,104,111,119,32,109,117,99,104,32,111,102,
                 32,116,104,101,32,99,111,100,101,32,104,97,115,32,98,101,101,
                 110,32,101,120,101,99,117,116,101,100,32,97,110,100,32,104,
                 111,119,32,109,117,99,104,32,104,97,115,32,110,111,116,32,98,
                 101,101,110,32,101,120,101,99,117,116,101,100,46,32,67,111,
                 118,101,114,97,103,101,32,105,115,32,114,101,112,114,101,115,
                 101,110,116,101,100,32,98,121,32,97,32,116,117,112,108,101]}],
              0,false},
             {text,[14,42,123,67,111,118,44,78,111,116,67,111,118,125,42]},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[5,42,67,111,118,42]},
             {sep,
              [{text,
                "Kis the number of executable lines that have been executed at least once and"}],
              0,false},
             {text,"\b*NotCov*"},
             {sep,
              [{text,
                ">is the number of executable lines that have not been executed."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "]If the analysis is made on module level, the result is given for the entire module as a tuple"}],
              0,false},
             {text,
              [23,42,123,77,111,100,117,108,101,44,123,67,111,118,44,78,111,
               116,67,111,118,125,125,42]},
             {sep,[{text,[1,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,52,62,32]},
             {text,"'cover:analyse(channel,coverage,module)."},
             {text,
              [22,10,123,111,107,44,123,99,104,97,110,110,101,108,44,123,49,
               52,44,49,125,125,125]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,70,111,114]}],0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                "W, the result shows that 14 lines in the module are covered but one line is not covered."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "RIf the analysis is made on function level, the result is given as a list of tuples"}],
              0,false},
             {text,
              [25,42,123,70,117,110,99,116,105,111,110,44,123,67,111,118,44,
               78,111,116,67,111,118,125,125,42]},
             {sep,
              [{text,
                "k, one for each function in the module. A function is specified by its module name, function name and arity:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,53,62,32]},
             {text,")cover:analyse(channel,coverage,function)."},
             {text,
              [335,10,123,111,107,44,91,123,123,99,104,97,110,110,101,108,44,
               115,116,97,114,116,95,108,105,110,107,44,48,125,44,123,49,44,
               48,125,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,
               108,44,115,116,111,112,44,48,125,44,123,49,44,48,125,125,44,10,
               32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,97,108,108,
               111,99,44,48,125,44,123,49,44,48,125,125,44,10,32,32,32,32,32,
               123,123,99,104,97,110,110,101,108,44,102,114,101,101,44,49,125,
               44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,104,97,
               110,110,101,108,44,105,110,105,116,44,49,125,44,123,49,44,48,
               125,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,
               44,104,97,110,100,108,101,95,99,97,108,108,44,51,125,44,123,53,
               44,48,125,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,
               101,108,44,116,101,114,109,105,110,97,116,101,44,50,125,44,123,
               49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,104,97,110,
               110,101,108,44,99,104,97,110,110,101,108,115,44,48,125,44,123,
               49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,104,97,110,
               110,101,108,44,97,108,108,111,99,44,49,125,44,123,49,44,49,125,
               125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,
               102,114,101,101,44,50,125,44,123,49,44,48,125,125,93,125]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,70,111,114]}],0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                "=, the result shows that the uncovered line is in the function"}],
              0,false},
             {text,
              [17,42,99,104,97,110,110,101,108,58,97,108,108,111,99,47,49,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "PIf the analysis is made on clause level, the result is given as a list of tuples"}],
              0,false},
             {text,
              [23,42,123,67,108,97,117,115,101,44,123,67,111,118,44,78,111,
               116,67,111,118,125,125,42]},
             {sep,
              [{text,
                [153,44,32,111,110,101,32,102,111,114,32,101,97,99,104,32,102,
                 117,110,99,116,105,111,110,32,99,108,97,117,115,101,32,105,
                 110,32,116,104,101,32,109,111,100,117,108,101,46,32,65,32,99,
                 108,97,117,115,101,32,105,115,32,115,112,101,99,105,102,105,
                 101,100,32,98,121,32,105,116,115,32,109,111,100,117,108,101,
                 32,110,97,109,101,44,32,102,117,110,99,116,105,111,110,32,
                 110,97,109,101,44,32,97,114,105,116,121,32,97,110,100,32,112,
                 111,115,105,116,105,111,110,32,119,105,116,104,105,110,32,
                 116,104,101,32,102,117,110,99,116,105,111,110,32,100,101,102,
                 105,110,105,116,105,111,110,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,54,62,32]},
             {text,"'cover:analyse(channel,coverage,clause)."},
             {text,
              [469,10,123,111,107,44,91,123,123,99,104,97,110,110,101,108,44,
               115,116,97,114,116,95,108,105,110,107,44,48,44,49,125,44,123,
               49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,104,97,110,
               110,101,108,44,115,116,111,112,44,48,44,49,125,44,123,49,44,48,
               125,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,
               44,97,108,108,111,99,44,48,44,49,125,44,123,49,44,48,125,125,
               44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,102,
               114,101,101,44,49,44,49,125,44,123,49,44,48,125,125,44,10,32,
               32,32,32,32,123,123,99,104,97,110,110,101,108,44,105,110,105,
               116,44,49,44,49,125,44,123,49,44,48,125,125,44,10,32,32,32,32,
               32,123,123,99,104,97,110,110,101,108,44,104,97,110,100,108,101,
               95,99,97,108,108,44,51,44,49,125,44,123,49,44,48,125,125,44,10,
               32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,104,97,110,
               100,108,101,95,99,97,108,108,44,51,44,50,125,44,123,50,44,48,
               125,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,
               44,104,97,110,100,108,101,95,99,97,108,108,44,51,44,51,125,44,
               123,50,44,48,125,125,44,10,32,32,32,32,32,123,123,99,104,97,
               110,110,101,108,44,116,101,114,109,105,110,97,116,101,44,50,44,
               49,125,44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,
               104,97,110,110,101,108,44,99,104,97,110,110,101,108,115,44,48,
               44,49,125,44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,
               99,104,97,110,110,101,108,44,97,108,108,111,99,44,49,44,49,125,
               44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,104,97,
               110,110,101,108,44,97,108,108,111,99,44,49,44,50,125,44,123,48,
               44,49,125,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,
               101,108,44,102,114,101,101,44,50,44,49,125,44,123,49,44,48,125,
               125,93,125]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,70,111,114]}],0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                "E, the result shows that the uncovered line is in the second clause of"}],
              0,false},
             {text,
              [17,42,99,104,97,110,110,101,108,58,97,108,108,111,99,47,49,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "WFinally, if the analysis is made on line level, the result is given as a list of tuples"}],
              0,false},
             {text,
              [21,42,123,76,105,110,101,44,123,67,111,118,44,78,111,116,67,
               111,118,125,125,42]},
             {sep,
              [{text,
                "j, one for each executable line in the source code. A line is specified by its module name and line number."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,55,62,32]},
             {text,"%cover:analyse(channel,coverage,line)."},
             {text,
              [405,10,123,111,107,44,91,123,123,99,104,97,110,110,101,108,44,
               57,125,44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,
               104,97,110,110,101,108,44,49,50,125,44,123,49,44,48,125,125,44,
               10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,49,55,
               125,44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,
               104,97,110,110,101,108,44,50,48,125,44,123,49,44,48,125,125,44,
               10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,50,53,
               125,44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,
               104,97,110,110,101,108,44,50,56,125,44,123,49,44,48,125,125,44,
               10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,51,49,
               125,44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,
               104,97,110,110,101,108,44,51,50,125,44,123,49,44,48,125,125,44,
               10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,51,53,
               125,44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,
               104,97,110,110,101,108,44,51,54,125,44,123,49,44,48,125,125,44,
               10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,51,57,
               125,44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,
               104,97,110,110,101,108,44,52,52,125,44,123,49,44,48,125,125,44,
               10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,52,55,
               125,44,123,49,44,48,125,125,44,10,32,32,32,32,32,123,123,99,
               104,97,110,110,101,108,44,52,57,125,44,123,48,44,49,125,125,44,
               10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,53,50,
               125,44,123,49,44,48,125,125,93,125]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,70,111,114]}],0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                "=, the result shows that the uncovered line is line number 49."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [18,35,35,32,67,97,108,108,32,83,116,97,116,105,115,116,105,99,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,65,110,97,108,121,115,105,115,32,111,102,32,116,121,112,
                 101]}],
              0,false},
             {text,[7,42,99,97,108,108,115,42]},
             {sep,
              [{text,
                "]is used to find out how many times something has been called and is represented by an integer"}],
              0,false},
             {text,[7,42,67,97,108,108,115,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GIf the analysis is made on module level, the result is given as a tuple"}],
              0,false},
             {text,
              [16,42,123,77,111,100,117,108,101,44,67,97,108,108,115,125,42]},
             {sep,[{text,[6,46,32,72,101,114,101]}],0,false},
             {text,[7,42,67,97,108,108,115,42]},
             {sep,
              [{text,
                "8is the total number of calls to functions in the module:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,56,62,32]},
             {text,"$cover:analyse(channel,calls,module)."},
             {text,
              [18,10,123,111,107,44,123,99,104,97,110,110,101,108,44,49,50,
               125,125]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,70,111,114]}],0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                "Z, the result shows that a total of twelve calls have been made to functions in the module."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "RIf the analysis is made on function level, the result is given as a list of tuples"}],
              0,false},
             {text,
              [18,42,123,70,117,110,99,116,105,111,110,44,67,97,108,108,115,
               125,42]},
             {sep,[{text,[6,46,32,72,101,114,101]}],0,false},
             {text,[7,42,67,97,108,108,115,42]},
             {sep,
              [{text,"(is the number of calls to each function:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,57,62,32]},
             {text,"&cover:analyse(channel,calls,function)."},
             {text,
              [295,10,123,111,107,44,91,123,123,99,104,97,110,110,101,108,44,
               115,116,97,114,116,95,108,105,110,107,44,48,125,44,49,125,44,
               10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,115,116,
               111,112,44,48,125,44,49,125,44,10,32,32,32,32,32,123,123,99,
               104,97,110,110,101,108,44,97,108,108,111,99,44,48,125,44,49,
               125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,
               102,114,101,101,44,49,125,44,49,125,44,10,32,32,32,32,32,123,
               123,99,104,97,110,110,101,108,44,105,110,105,116,44,49,125,44,
               49,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,
               44,104,97,110,100,108,101,95,99,97,108,108,44,51,125,44,51,125,
               44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,116,
               101,114,109,105,110,97,116,101,44,50,125,44,49,125,44,10,32,32,
               32,32,32,123,123,99,104,97,110,110,101,108,44,99,104,97,110,
               110,101,108,115,44,48,125,44,49,125,44,10,32,32,32,32,32,123,
               123,99,104,97,110,110,101,108,44,97,108,108,111,99,44,49,125,
               44,49,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,
               108,44,102,114,101,101,44,50,125,44,49,125,93,125]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,70,111,114]}],0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                [23,44,32,116,104,101,32,114,101,115,117,108,116,32,115,104,
                 111,119,115,32,116,104,97,116]}],
              0,false},
             {text,[15,42,104,97,110,100,108,101,95,99,97,108,108,47,51,42]},
             {sep,
              [{text,
                "cis the most called function in the module (three calls). All other functions have been called once."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "PIf the analysis is made on clause level, the result is given as a list of tuples"}],
              0,false},
             {text,
              [16,42,123,67,108,97,117,115,101,44,67,97,108,108,115,125,42]},
             {sep,[{text,[6,46,32,72,101,114,101]}],0,false},
             {text,[7,42,67,97,108,108,115,42]},
             {sep,
              [{text,"/is the number of calls to each function clause:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[5,10,49,48,62,32]},
             {text,"$cover:analyse(channel,calls,clause)."},
             {text,
              [417,10,123,111,107,44,91,123,123,99,104,97,110,110,101,108,44,
               115,116,97,114,116,95,108,105,110,107,44,48,44,49,125,44,49,
               125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,
               115,116,111,112,44,48,44,49,125,44,49,125,44,10,32,32,32,32,32,
               123,123,99,104,97,110,110,101,108,44,97,108,108,111,99,44,48,
               44,49,125,44,49,125,44,10,32,32,32,32,32,123,123,99,104,97,110,
               110,101,108,44,102,114,101,101,44,49,44,49,125,44,49,125,44,10,
               32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,105,110,
               105,116,44,49,44,49,125,44,49,125,44,10,32,32,32,32,32,123,123,
               99,104,97,110,110,101,108,44,104,97,110,100,108,101,95,99,97,
               108,108,44,51,44,49,125,44,49,125,44,10,32,32,32,32,32,123,123,
               99,104,97,110,110,101,108,44,104,97,110,100,108,101,95,99,97,
               108,108,44,51,44,50,125,44,49,125,44,10,32,32,32,32,32,123,123,
               99,104,97,110,110,101,108,44,104,97,110,100,108,101,95,99,97,
               108,108,44,51,44,51,125,44,49,125,44,10,32,32,32,32,32,123,123,
               99,104,97,110,110,101,108,44,116,101,114,109,105,110,97,116,
               101,44,50,44,49,125,44,49,125,44,10,32,32,32,32,32,123,123,99,
               104,97,110,110,101,108,44,99,104,97,110,110,101,108,115,44,48,
               44,49,125,44,49,125,44,10,32,32,32,32,32,123,123,99,104,97,110,
               110,101,108,44,97,108,108,111,99,44,49,44,49,125,44,49,125,44,
               10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,97,108,
               108,111,99,44,49,44,50,125,44,48,125,44,10,32,32,32,32,32,123,
               123,99,104,97,110,110,101,108,44,102,114,101,101,44,50,44,49,
               125,44,49,125,93,125]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,70,111,114]}],0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                "V, the result shows that all clauses have been called once, except the second clause of"}],
              0,false},
             {text,
              [17,42,99,104,97,110,110,101,108,58,97,108,108,111,99,47,49,42]},
             {sep,[{text,"!which has not been called at all."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "WFinally, if the analysis is made on line level, the result is given as a list of tuples"}],
              0,false},
             {text,[14,42,123,76,105,110,101,44,67,97,108,108,115,125,42]},
             {sep,[{text,[6,46,32,72,101,114,101]}],0,false},
             {text,[7,42,67,97,108,108,115,42]},
             {sep,
              [{text,"3is the number of times each line has been executed:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[5,10,49,49,62,32]},
             {text,"\"cover:analyse(channel,calls,line)."},
             {text,
              [345,10,123,111,107,44,91,123,123,99,104,97,110,110,101,108,44,
               57,125,44,49,125,44,10,32,32,32,32,32,123,123,99,104,97,110,
               110,101,108,44,49,50,125,44,49,125,44,10,32,32,32,32,32,123,
               123,99,104,97,110,110,101,108,44,49,55,125,44,49,125,44,10,32,
               32,32,32,32,123,123,99,104,97,110,110,101,108,44,50,48,125,44,
               49,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,108,
               44,50,53,125,44,49,125,44,10,32,32,32,32,32,123,123,99,104,97,
               110,110,101,108,44,50,56,125,44,49,125,44,10,32,32,32,32,32,
               123,123,99,104,97,110,110,101,108,44,51,49,125,44,49,125,44,10,
               32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,51,50,125,
               44,49,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,
               108,44,51,53,125,44,49,125,44,10,32,32,32,32,32,123,123,99,104,
               97,110,110,101,108,44,51,54,125,44,49,125,44,10,32,32,32,32,32,
               123,123,99,104,97,110,110,101,108,44,51,57,125,44,49,125,44,10,
               32,32,32,32,32,123,123,99,104,97,110,110,101,108,44,52,52,125,
               44,49,125,44,10,32,32,32,32,32,123,123,99,104,97,110,110,101,
               108,44,52,55,125,44,49,125,44,10,32,32,32,32,32,123,123,99,104,
               97,110,110,101,108,44,52,57,125,44,48,125,44,10,32,32,32,32,32,
               123,123,99,104,97,110,110,101,108,44,53,50,125,44,49,125,93,
               125]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,70,111,114]}],0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                "t, the result shows that all lines have been executed once, except line number 49 which has not been executed at all."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [19,35,35,32,65,110,97,108,121,115,105,115,32,116,111,32,70,105,108,
           101]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,65,32,108,105,110,101,32,108,101,118,101,108,32,99,97,108,
                 108,115,32,97,110,97,108,121,115,105,115,32,111,102]}],
              0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                [30,99,97,110,32,98,101,32,119,114,105,116,116,101,110,32,116,
                 111,32,97,32,102,105,108,101,32,117,115,105,110,103]}],
              0,false},
             {text,
              [26,42,99,111,118,101,114,58,97,110,97,108,121,115,105,115,95,
               116,111,95,102,105,108,101,47,49,42]},
             {sep,[{text,[1,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[5,10,49,50,62,32]},
             {text,
              [31,99,111,118,101,114,58,97,110,97,108,121,115,101,95,116,111,
               95,102,105,108,101,40,99,104,97,110,110,101,108,41,46]},
             {text,
              [25,10,123,111,107,44,34,99,104,97,110,110,101,108,46,67,79,86,
               69,82,46,111,117,116,34,125]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,84,104,101,32,102,117,110,99,116,105,111,110,32,99,114,
                 101,97,116,101,115,32,97,32,99,111,112,121,32,111,102]}],
              0,false},
             {text,"\r*channel.erl*"},
             {sep,
              [{text,
                "twhere it for each executable line is specified how many times that line has been executed. The output file is called"}],
              0,false},
             {text,
              [19,42,99,104,97,110,110,101,108,46,67,79,86,69,82,46,111,117,
               116,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [1868,10,70,105,108,101,32,103,101,110,101,114,97,116,101,100,
               32,102,114,111,109,32,99,104,97,110,110,101,108,46,101,114,108,
               32,98,121,32,67,79,86,69,82,32,50,48,48,49,45,48,53,45,50,49,
               32,97,116,32,49,49,58,49,54,58,51,56,10,10,42,42,42,42,42,42,
               42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,
               42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,
               42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,
               42,42,42,42,42,42,42,10,10,32,32,32,32,32,32,32,32,124,32,32,
               45,109,111,100,117,108,101,40,99,104,97,110,110,101,108,41,46,
               10,32,32,32,32,32,32,32,32,124,32,32,45,98,101,104,97,118,105,
               111,117,114,40,103,101,110,95,115,101,114,118,101,114,41,46,10,
               32,32,32,32,32,32,32,32,124,32,32,10,32,32,32,32,32,32,32,32,
               124,32,32,45,101,120,112,111,114,116,40,91,115,116,97,114,116,
               95,108,105,110,107,47,48,44,115,116,111,112,47,48,93,41,46,10,
               32,32,32,32,32,32,32,32,124,32,32,45,101,120,112,111,114,116,
               40,91,97,108,108,111,99,47,48,44,102,114,101,101,47,49,93,41,
               46,32,37,32,99,108,105,101,110,116,32,105,110,116,101,114,102,
               97,99,101,10,32,32,32,32,32,32,32,32,124,32,32,45,101,120,112,
               111,114,116,40,91,105,110,105,116,47,49,44,104,97,110,100,108,
               101,95,99,97,108,108,47,51,44,116,101,114,109,105,110,97,116,
               101,47,50,93,41,46,32,37,32,99,97,108,108,98,97,99,107,32,102,
               117,110,99,116,105,111,110,115,10,32,32,32,32,32,32,32,32,124,
               32,32,10,32,32,32,32,32,32,32,32,124,32,32,115,116,97,114,116,
               95,108,105,110,107,40,41,32,45,62,10,32,32,32,32,32,49,46,46,
               124,32,32,32,32,32,32,103,101,110,95,115,101,114,118,101,114,
               58,115,116,97,114,116,95,108,105,110,107,40,123,108,111,99,97,
               108,44,99,104,97,110,110,101,108,125,44,99,104,97,110,110,101,
               108,44,91,93,44,91,93,41,46,10,32,32,32,32,32,32,32,32,124,32,
               32,10,32,32,32,32,32,32,32,32,124,32,32,115,116,111,112,40,41,
               32,45,62,10,32,32,32,32,32,49,46,46,124,32,32,32,32,32,32,103,
               101,110,95,115,101,114,118,101,114,58,99,97,108,108,40,99,104,
               97,110,110,101,108,44,115,116,111,112,41,46,10,32,32,32,32,32,
               32,32,32,124,32,32,10,32,32,32,32,32,32,32,32,124,32,32,37,37,
               37,45,67,108,105,101,110,116,32,105,110,116,101,114,102,97,99,
               101,32,102,117,110,99,116,105,111,110,115,45,45,45,45,45,45,45,
               45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
               45,45,45,45,45,45,45,45,10,32,32,32,32,32,32,32,32,124,32,32,
               10,32,32,32,32,32,32,32,32,124,32,32,97,108,108,111,99,40,41,
               32,45,62,10,32,32,32,32,32,49,46,46,124,32,32,32,32,32,32,103,
               101,110,95,115,101,114,118,101,114,58,99,97,108,108,40,99,104,
               97,110,110,101,108,44,97,108,108,111,99,41,46,10,32,32,32,32,
               32,32,32,32,124,32,32,10,32,32,32,32,32,32,32,32,124,32,32,102,
               114,101,101,40,67,104,97,110,110,101,108,41,32,45,62,10,32,32,
               32,32,32,49,46,46,124,32,32,32,32,32,32,103,101,110,95,115,101,
               114,118,101,114,58,99,97,108,108,40,99,104,97,110,110,101,108,
               44,123,102,114,101,101,44,67,104,97,110,110,101,108,125,41,46,
               10,32,32,32,32,32,32,32,32,124,32,32,10,32,32,32,32,32,32,32,
               32,124,32,32,37,37,37,45,103,101,110,95,115,101,114,118,101,
               114,32,99,97,108,108,98,97,99,107,32,102,117,110,99,116,105,
               111,110,115,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
               45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,10,32,32,32,32,
               32,32,32,32,124,32,32,10,32,32,32,32,32,32,32,32,124,32,32,105,
               110,105,116,40,95,65,114,103,41,32,45,62,10,32,32,32,32,32,49,
               46,46,124,32,32,32,32,32,32,123,111,107,44,99,104,97,110,110,
               101,108,115,40,41,125,46,10,32,32,32,32,32,32,32,32,124,32,32,
               10,32,32,32,32,32,32,32,32,124,32,32,104,97,110,100,108,101,95,
               99,97,108,108,40,115,116,111,112,44,67,108,105,101,110,116,44,
               67,104,97,110,110,101,108,115,41,32,45,62,10,32,32,32,32,32,49,
               46,46,124,32,32,32,32,32,32,123,115,116,111,112,44,110,111,114,
               109,97,108,44,111,107,44,67,104,97,110,110,101,108,115,125,59,
               10,32,32,32,32,32,32,32,32,124,32,32,10,32,32,32,32,32,32,32,
               32,124,32,32,104,97,110,100,108,101,95,99,97,108,108,40,97,108,
               108,111,99,44,67,108,105,101,110,116,44,67,104,97,110,110,101,
               108,115,41,32,45,62,10,32,32,32,32,32,49,46,46,124,32,32,32,32,
               32,32,123,67,104,44,67,104,97,110,110,101,108,115,50,125,32,61,
               32,97,108,108,111,99,40,67,104,97,110,110,101,108,115,41,44,10,
               32,32,32,32,32,49,46,46,124,32,32,32,32,32,32,123,114,101,112,
               108,121,44,123,111,107,44,67,104,125,44,67,104,97,110,110,101,
               108,115,50,125,59,10,32,32,32,32,32,32,32,32,124,32,32,10,32,
               32,32,32,32,32,32,32,124,32,32,104,97,110,100,108,101,95,99,97,
               108,108,40,123,102,114,101,101,44,67,104,97,110,110,101,108,
               125,44,67,108,105,101,110,116,44,67,104,97,110,110,101,108,115,
               41,32,45,62,10,32,32,32,32,32,49,46,46,124,32,32,32,32,32,32,
               67,104,97,110,110,101,108,115,50,32,61,32,102,114,101,101,40,
               67,104,97,110,110,101,108,44,67,104,97,110,110,101,108,115,41,
               44,10,32,32,32,32,32,49,46,46,124,32,32,32,32,32,32,123,114,
               101,112,108,121,44,111,107,44,67,104,97,110,110,101,108,115,50,
               125,46,10,32,32,32,32,32,32,32,32,124,32,32,10,32,32,32,32,32,
               32,32,32,124,32,32,116,101,114,109,105,110,97,116,101,40,95,82,
               101,97,115,111,110,44,67,104,97,110,110,101,108,115,41,32,45,
               62,10,32,32,32,32,32,49,46,46,124,32,32,32,32,32,32,111,107,46,
               10,32,32,32,32,32,32,32,32,124,32,32,10,32,32,32,32,32,32,32,
               32,124,32,32,37,37,37,45,73,110,116,101,114,110,97,108,32,102,
               117,110,99,116,105,111,110,115,45,45,45,45,45,45,45,45,45,45,
               45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
               45,45,45,45,45,45,45,45,45,45,45,45,45,10,32,32,32,32,32,32,32,
               32,124,32,32,10,32,32,32,32,32,32,32,32,124,32,32,99,104,97,
               110,110,101,108,115,40,41,32,45,62,10,32,32,32,32,32,49,46,46,
               124,32,32,32,32,32,32,91,99,104,49,44,99,104,50,44,99,104,51,
               93,46,10,32,32,32,32,32,32,32,32,124,32,32,10,32,32,32,32,32,
               32,32,32,124,32,32,97,108,108,111,99,40,91,67,104,97,110,110,
               101,108,124,67,104,97,110,110,101,108,115,93,41,32,45,62,10,32,
               32,32,32,32,49,46,46,124,32,32,32,32,32,32,123,67,104,97,110,
               110,101,108,44,67,104,97,110,110,101,108,115,125,59,10,32,32,
               32,32,32,32,32,32,124,32,32,97,108,108,111,99,40,91,93,41,32,
               45,62,10,32,32,32,32,32,48,46,46,124,32,32,32,32,32,32,102,97,
               108,115,101,46,10,32,32,32,32,32,32,32,32,124,32,32,10,32,32,
               32,32,32,32,32,32,124,32,32,102,114,101,101,40,67,104,97,110,
               110,101,108,44,67,104,97,110,110,101,108,115,41,32,45,62,10,32,
               32,32,32,32,49,46,46,124,32,32,32,32,32,32,91,67,104,97,110,
               110,101,108,124,67,104,97,110,110,101,108,115,93,46]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\r## Conclusion"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [142,66,121,32,108,111,111,107,105,110,103,32,97,116,32,116,
                 104,101,32,114,101,115,117,108,116,115,32,102,114,111,109,32,
                 116,104,101,32,97,110,97,108,121,115,101,115,44,32,105,116,
                 32,99,97,110,32,98,101,32,100,101,100,117,99,116,101,100,32,
                 116,104,97,116,32,116,104,101,32,116,101,115,116,32,99,97,
                 115,101,32,100,111,101,115,32,110,111,116,32,99,111,118,101,
                 114,32,116,104,101,32,99,97,115,101,32,119,104,101,110,32,97,
                 108,108,32,99,104,97,110,110,101,108,115,32,97,114,101,32,97,
                 108,108,111,99,97,116,101,100,32,97,110,100]}],
              0,false},
             {text,"\n*test.erl*"},
             {sep,
              [{text,
                [31,115,104,111,117,108,100,32,98,101,32,101,120,116,101,110,
                 100,101,100,32,97,99,99,111,114,100,105,110,103,108,121,46]}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,
                "6Incidentally, when the test case is corrected a bug in"}],
              0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                [28,115,104,111,117,108,100,32,105,110,100,101,101,100,32,98,
                 101,32,100,105,115,99,111,118,101,114,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "UWhen the Cover analysis is ready, Cover is stopped and all Cover compiled modules are"}],
              0,false},
             {text,
              [20,91,117,110,108,111,97,100,101,100,93,40,35,108,111,97,100,
               105,110,103,41]},
             {sep,
              [{text,[14,46,32,84,104,101,32,99,111,100,101,32,102,111,114]}],
              0,false},
             {text,"\t*channel*"},
             {sep,
              [{text,
                [29,105,115,32,110,111,119,32,108,111,97,100,101,100,32,97,
                 115,32,117,115,117,97,108,32,102,114,111,109,32,97]}],
              0,false},
             {text,[7,42,46,98,101,97,109,42]},
             {sep,
              [{text,
                [25,102,105,108,101,32,105,110,32,116,104,101,32,99,117,114,
                 114,101,110,116,32,112,97,116,104,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[5,10,49,51,62,32]},
             {text,
              [20,99,111,100,101,58,119,104,105,99,104,40,99,104,97,110,110,
               101,108,41,46]},
             {text,
              [20,10,99,111,118,101,114,95,99,111,109,112,105,108,101,100,10,
               49,52,62,32]},
             {text,"\rcover:stop()."},
             {text,"\b\nok\n15> "},
             {text,
              [20,99,111,100,101,58,119,104,105,99,104,40,99,104,97,110,110,
               101,108,41,46]},
             {text,
              [17,10,34,46,47,99,104,97,110,110,101,108,46,98,101,97,109,34]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,77,105,115,99,101,108,108,97,110,101,111,117,115]},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[14,35,35,32,80,101,114,102,111,114,109,97,110,99,101]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [308,69,120,101,99,117,116,105,111,110,32,111,102,32,99,111,100,
              101,32,105,110,32,67,111,118,101,114,32,99,111,109,112,105,108,
              101,100,32,109,111,100,117,108,101,115,32,105,115,32,115,108,
              111,119,101,114,32,97,110,100,32,109,111,114,101,32,109,101,109,
              111,114,121,32,99,111,110,115,117,109,105,110,103,32,116,104,97,
              110,32,102,111,114,32,114,101,103,117,108,97,114,108,121,32,99,
              111,109,112,105,108,101,100,32,109,111,100,117,108,101,115,46,
              32,65,115,32,116,104,101,32,67,111,118,101,114,32,100,97,116,97,
              98,97,115,101,32,99,111,110,116,97,105,110,115,32,105,110,102,
              111,114,109,97,116,105,111,110,32,97,98,111,117,116,32,101,97,
              99,104,32,101,120,101,99,117,116,97,98,108,101,32,108,105,110,
              101,32,105,110,32,101,97,99,104,32,67,111,118,101,114,32,99,111,
              109,112,105,108,101,100,32,109,111,100,117,108,101,44,32,112,
              101,114,102,111,114,109,97,110,99,101,32,100,101,99,114,101,97,
              115,101,115,32,112,114,111,112,111,114,116,105,111,110,97,108,
              108,121,32,116,111,32,116,104,101,32,115,105,122,101,32,97,110,
              100,32,110,117,109,98,101,114,32,111,102,32,116,104,101,32,67,
              111,118,101,114,32,99,111,109,112,105,108,101,100,32,109,111,
              100,117,108,101,115,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ZTo improve performance when analysing cover results it is possible to do multiple calls to"}],
             0,false},
            {text,
             [28,91,97,110,97,108,121,115,101,93,40,46,47,99,111,118,101,114,
              35,97,110,97,108,121,115,101,45,49,41]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,",[analyse_to_file](./cover#analyse_to_file-1)"},
            {sep,
             [{text,
               [29,97,116,32,111,110,99,101,46,32,89,111,117,32,99,97,110,32,
                97,108,115,111,32,117,115,101,32,116,104,101]}],
             0,false},
            {text,"8[async_analyse_to_file](./cover#async_analyse_to_file-1)"},
            {sep,
             [{text,
               [21,99,111,110,118,101,110,105,101,110,99,101,32,102,117,110,
                99,116,105,111,110,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,108,105,110,101,115,34,62,108,105,110,
       101,115,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [19,35,35,32,69,120,101,99,117,116,97,98,108,101,32,76,105,110,101,
          115]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [25,67,111,118,101,114,32,117,115,101,115,32,116,104,101,32,99,
                111,110,99,101,112,116,32,111,102]}],
             0,false},
            {text,
             [20,42,42,101,120,101,99,117,116,97,98,108,101,32,108,105,110,
              101,115,42,42]},
            {sep,
             [{text,
               "ยฎ, which is lines of code containing an executable expression such as a matching or a function call. A blank line or a line containing a comment, function head or pattern in a"}],
             0,false},
            {text,[6,42,99,97,115,101,42]},
            {sep,[{text,[4,45,32,111,114]}],0,false},
            {text,"\t*receive*"},
            {sep,
             [{text,
               [28,115,116,97,116,101,109,101,110,116,32,105,115,32,110,111,
                116,32,101,120,101,99,117,116,97,98,108,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "GIn the example below, lines number 2,4,6,8 and 11 are executable lines:"}],
           0,false}],
         0,true},
        null},
       null}},
     null,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [268,10,49,58,32,105,115,95,108,111,97,100,101,100,40,77,111,100,
              117,108,101,44,67,111,109,112,105,108,101,100,41,32,45,62,10,50,
              58,32,32,32,99,97,115,101,32,103,101,116,95,102,105,108,101,40,
              77,111,100,117,108,101,44,67,111,109,112,105,108,101,100,41,32,
              111,102,10,51,58,32,32,32,32,32,123,111,107,44,70,105,108,101,
              125,32,45,62,10,52,58,32,32,32,32,32,32,32,99,97,115,101,32,99,
              111,100,101,58,119,104,105,99,104,40,77,111,100,117,108,101,41,
              32,111,102,10,53,58,32,32,32,32,32,32,32,32,32,63,84,65,71,32,
              45,62,10,54,58,32,32,32,32,32,32,32,32,32,32,32,123,108,111,97,
              100,101,100,44,70,105,108,101,125,59,10,55,58,32,32,32,32,32,32,
              32,32,32,95,32,45,62,10,56,58,32,32,32,32,32,32,32,32,32,32,32,
              117,110,108,111,97,100,101,100,10,57,58,32,32,32,32,32,32,32,
              101,110,100,59,10,49,48,58,32,32,32,32,102,97,108,115,101,32,45,
              62,10,49,49,58,32,32,32,32,32,32,102,97,108,115,101,10,49,50,58,
              32,32,101,110,100,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,108,111,97,100,105,110,103,34,62,108,
       111,97,100,105,110,103,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [25,35,35,32,67,111,100,101,32,76,111,97,100,105,110,103,32,77,101,
          99,104,97,110,105,115,109]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "รWhen a module is Cover compiled, it is also loaded using the normal code loading mechanism of Erlang. This means that if a Cover compiled module is re-loaded during a Cover session, for example using"}],
             0,false},
            {text,"\v*c(Module)*"},
            {sep,[{text,"&, it will no longer be Cover compiled."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,85,115,101]}],0,false},
            {text,
             [21,42,99,111,118,101,114,58,105,115,95,99,111,109,112,105,108,
              101,100,47,49,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[14,42,99,111,100,101,58,119,104,105,99,104,47,49,42]},
            {sep,
             [{text,
               "?to see if a module is Cover compiled (and still loaded) or not."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "?When Cover is stopped, all Cover compiled modules are unloaded."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
