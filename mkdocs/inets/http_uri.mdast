{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n# http_uri"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n# http_uri"},null},null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [18,85,82,73,32,117,116,105,108,105,116,121,32,109,111,100,117,
              108,101]}],
           0,false}],
         0,true},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "JThis module provides utility functions for working with URIs, according to"}],
                   0,false},
                  {text,"/[RFC 3986](http://www.ietf.org/rfc/rfc3986.txt)"},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r## DATA TYPES"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "=Type definitions that are used more than once in this module:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [26,42,98,111,111,108,101,97,110,40,41,32,61,32,116,114,117,101,
              32,124,32,102,97,108,115,101,42]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\n*string()*"},
            {sep,
             [{text,
               [26,61,32,108,105,115,116,32,111,102,32,65,83,67,73,73,32,99,
                104,97,114,97,99,116,101,114,115]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[17,35,35,32,85,82,73,32,68,65,84,65,32,84,89,80,69,83]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Type definitions that are related to URI:"}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {text,[4,60,100,108,62]},
      {nest,4,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,"\euri() = string() | binary()"}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   "YSyntax according to the URI definition in RFC 3986, for example, \"http://www.erlang.org/\""}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,"!user_info() = string() | binary()"}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         null,
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [17,115,99,104,101,109,101,40,41,32,61,32,97,116,
                            111,109,40,41]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               [20,69,120,97,109,112,108,101,58,32,104,116,
                                116,112,44,32,104,116,116,112,115]}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         [28,104,111,115,116,40,41,32,61,32,115,116,114,105,
                          110,103,40,41,32,124,32,98,105,110,97,114,121,40,
                          41]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     null,
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,"\eport() = inet:port_number()"}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     [28,112,97,116,104,40,41,32,61,32,115,116,114,105,110,
                      103,40,41,32,124,32,98,105,110,97,114,121,40,41]}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,"(Represents a file path or directory path"}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,
                   [29,113,117,101,114,121,40,41,32,61,32,115,116,114,105,110,
                    103,40,41,32,124,32,98,105,110,97,114,121,40,41]}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,116,62]},
              {sep,[{text," fragment() = string() | binary()"}],0,false},
              {text,[5,60,47,100,116,62]}],
             0,true},
            null},
           null}}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
            0,true},
           null},
          null}}}}},
     {text,[5,60,47,100,108,62]}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"#For more information about URI, see"}],0,false},
           {text,"/[RFC 3986](http://www.ietf.org/rfc/rfc3986.txt)"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {text,"-<a name=\"scheme_defaults\">scheme_defaults</a>"}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,100,101,99,111,100,101,40,72,101,120,69,110,99,111,100,
        101,100,85,82,73,41,32,45,62,32,85,82,73]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"\"Decodes a hexadecimal encoded URI."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         "HHexEncodedURI = string() | binary() - A possibly hexadecimal encoded URI"}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\vURI = uri()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Decodes a possibly hexadecimal encoded URI."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,101,110,99,111,100,101,40,85,82,73,41,32,45,62,32,72,101,
        120,69,110,99,111,100,101,100,85,82,73]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"\"Encodes a hexadecimal encoded URI."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,[{text,[1,42]},{sep,[{text,"\vURI = uri()"}],0,false}],0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         "=HexEncodedURI = string() | binary() - Hexadecimal encoded URI"}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Encodes a hexadecimal encoded URI."}],0,false}],
         0,true},
        null},
       null}},
     {text,"\e<a name=\"decode\">decode</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"/## parse(URI) -> {ok, Result} | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"8## parse(URI, Options) -> {ok, Result} | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{sep,[{sep,[{text,"\rParses a URI."}],0,false}],0,true},null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},{sep,[{text,"\vURI = uri()"}],0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [18,79,112,116,105,111,110,115,32,61,32,91,79,112,116,105,
                    111,110,93]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [141,79,112,116,105,111,110,32,61,32,123,105,112,118,54,95,
                   104,111,115,116,95,119,105,116,104,95,98,114,97,99,107,101,
                   116,115,44,32,98,111,111,108,101,97,110,40,41,125,32,124,
                   32,123,115,99,104,101,109,101,95,100,101,102,97,117,108,
                   116,115,44,32,115,99,104,101,109,101,95,100,101,102,97,117,
                   108,116,115,40,41,125,32,124,32,123,102,114,97,103,109,101,
                   110,116,44,32,98,111,111,108,101,97,110,40,41,125,32,124,
                   32,123,115,99,104,101,109,101,95,118,97,108,105,100,97,116,
                   105,111,110,95,102,117,110,44,32,102,117,110,40,41,125]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 "lResult = {Scheme, UserInfo, Host, Port, Path, Query} | {Scheme, UserInfo, Host, Port, Path, Query, Fragment}"}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [17,83,99,104,101,109,101,32,61,32,115,99,104,101,109,101,40,
                 41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [22,85,115,101,114,73,110,102,111,32,61,32,117,115,101,114,95,
                105,110,102,111,40,41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},{sep,[{text,"\rHost = host()"}],0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [25,80,111,114,116,32,61,32,105,110,101,116,58,112,111,114,116,
              95,110,117,109,98,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,[{text,[1,42]},{sep,[{text,"\rPath = path()"}],0,false}],0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,81,117,101,114,121,32,61,32,113,117,101,114,121,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [21,70,114,97,103,109,101,110,116,32,61,32,102,114,97,103,109,101,
           110,116,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BParses a URI. If no scheme defaults are provided, the value of the"}],
             0,false},
            {text,"#[scheme_defaults](#scheme_defaults)"},
            {sep,
             [{text,
               [17,102,117,110,99,116,105,111,110,32,105,115,32,117,115,101,
                100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [156,87,104,101,110,32,112,97,114,115,105,110,103,32,97,32,85,82,
              73,32,119,105,116,104,32,97,110,32,117,110,107,110,111,119,110,
              32,115,99,104,101,109,101,32,40,116,104,97,116,32,105,115,44,32,
              97,32,115,99,104,101,109,101,32,110,111,116,32,102,111,117,110,
              100,32,105,110,32,116,104,101,32,115,99,104,101,109,101,32,100,
              101,102,97,117,108,116,115,41,44,32,97,32,112,111,114,116,32,
              110,117,109,98,101,114,32,109,117,115,116,32,98,101,32,112,114,
              111,118,105,100,101,100,44,32,111,116,104,101,114,119,105,115,
              101,32,116,104,101,32,112,97,114,115,105,110,103,32,102,97,105,
              108,115,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [25,73,102,32,116,104,101,32,102,114,97,103,109,101,110,116,32,
                111,112,116,105,111,110,32,105,115]}],
             0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,
               "V, the URI fragment is returned as part of the parsing result, otherwise it is ignored."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"2Scheme validation fun is to be defined as follows:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "X\nfun(SchemeStr :: string() | binary()) ->\n\tvalid |\t{error, Reason :: term()}.\n\t"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "pIt is called before scheme string gets converted into scheme atom and thus possible atom leak could be prevented"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "°The scheme portion of the URI gets converted into atom, meaning that atom leak may occur. Specifying a scheme validation fun is recommended unless the URI is already sanitized."}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {text,"\e<a name=\"encode\">encode</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"&## scheme_defaults() -> SchemeDefaults"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"-A list of the scheme and their default ports."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,";SchemeDefaults = [{scheme(), default_scheme_port_number()}]"}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,"1default_scheme_port_number() = inet:port_number()"}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "dProvides a list of the scheme and their default port numbers supported (by default) by this utility."}],
           0,false}],
         0,true},
        null},
       null}},
     {text,
      [25,60,97,32,110,97,109,101,61,34,112,97,114,115,101,34,62,112,97,114,
       115,101,60,47,97,62]}],
    0,false}],
  0,false}}
