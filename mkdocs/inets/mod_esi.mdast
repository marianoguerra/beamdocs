{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\t# mod_esi"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\t# mod_esi"},null},null}}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [23,69,114,108,97,110,103,32,83,101,114,118,101,114,32,73,110,
               116,101,114,102,97,99,101]}],
            0,false}],
          0,true},
         null},
        null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "xThis module defines the Erlang Server Interface (ESI) API. It is a more efficient way of writing Erlang scripts for your"}],
                    0,false},
                   {text,[7,42,73,110,101,116,115,42]},
                   {sep,
                    [{text,
                      "3web server than writing them as common CGI scripts."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {text,
             [29,60,97,32,110,97,109,101,61,34,100,101,108,105,118,101,114,34,
              62,100,101,108,105,118,101,114,60,47,97,62]}],
           0,false}],
         0,true},
        null},
       null}}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\r## DATA TYPES"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "?The following data types are used in the functions for mod_esi:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,[7,101,110,118,40,41,32,61]}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,"!{EnvKey()::atom(), Value::term()}"}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,"#Currently supported key value pairs"}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,
                   {text,[4,60,100,108,62]},
                   {nest,4,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,116,62]},
                                            {sep,
                                             [{text,
                                               "\e{server_software, string()}"}],
                                             0,false},
                                            {text,[5,60,47,100,116,62]}],
                                           0,true},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,100,62]},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{text,
                                                    [28,73,110,100,105,99,97,
                                                     116,101,115,32,116,104,
                                                     101,32,105,110,101,116,
                                                     115,32,118,101,114,115,
                                                     105,111,110,46]}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {text,[5,60,47,100,100,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,116,62]},
                                           {sep,
                                            [{text,
                                              [23,123,115,101,114,118,101,114,
                                               95,110,97,109,101,44,32,115,
                                               116,114,105,110,103,40,41,
                                               125]}],
                                            0,false},
                                           {text,[5,60,47,100,116,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,100,62]},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{sep,
                                                [{text,
                                                  [19,84,104,101,32,108,111,
                                                   99,97,108,32,104,111,115,
                                                   116,110,97,109,101,46]}],
                                                0,false}],
                                              0,true},
                                             null},
                                            null}},
                                          {text,[5,60,47,100,100,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,116,62]},
                                         {sep,
                                          [{text,
                                            [29,123,103,97,116,101,119,97,121,
                                             95,105,110,116,101,114,102,97,99,
                                             101,44,32,115,116,114,105,110,
                                             103,40,41,125]}],
                                          0,false},
                                         {text,[5,60,47,100,116,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,100,62]},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{text,
                                                "'Legacy string used in CGI, just ignore."}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}},
                                        {text,[5,60,47,100,100,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,
                                        [{text,
                                          "\e{server_protocol, string()}"}],
                                        0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,100,62]},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{text,
                                              "\"HTTP version, currently \"HTTP/1.1\""}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {text,[5,60,47,100,100,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,
                                      [{text,
                                        [24,123,115,101,114,118,101,114,95,
                                         112,111,114,116,44,32,105,110,116,
                                         101,103,101,114,40,41,125]}],
                                      0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{text,
                                            [20,83,101,114,118,101,114,115,32,
                                             112,111,114,116,32,110,117,109,
                                             98,101,114,46]}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,
                                    [{text,
                                      "<{request_method, \"GET | \"PUT\" | \"DELETE\" | \"POST\" | \"PATCH\"}"}],
                                    0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{text,
                                          [20,72,84,84,80,32,114,101,113,117,
                                           101,115,116,32,109,101,116,104,111,
                                           100,46]}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{text,
                                    "\"{remote_adress, inet:ip_address()}"}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{text,
                                        [23,84,104,101,32,99,108,105,101,110,
                                         116,115,32,105,112,32,97,100,100,114,
                                         101,115,115,46]}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{text,
                                  "3{peer_cert, undefined | no_peercert | DER:binary()}"}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        "´For TLS connections where client certificates are used this will be an ASN.1 DER-encoded X509-certificate as an Erlang binary. If client certificates are not used the value will be"}],
                                      0,false},
                                     {text,"\vno_peercert"},
                                     {sep,
                                      [{text,
                                        "^, and if TLS is not used (HTTP or connection is lost due to network failure) the value will be"}],
                                      0,false},
                                     {text,"\tundefined"},
                                     {sep,[{text,[1,46]}],0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                [23,123,115,99,114,105,112,116,95,110,97,109,
                                 101,44,32,115,116,114,105,110,103,40,41,
                                 125]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,[{text,"\vRequest URI"}],0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,
                              "({http_LowerCaseHTTPHeaderName, string()}"}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  ")example: {http_content_type, \"text/html\"}"}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}}}},
                  {text,[5,60,47,100,108,62]}}],
                0,false},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\v# Functions"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"3## deliver(SessionID, Data) -> ok | {error, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[5,83,101,110,100,115]}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,
             [{text,
               [15,98,97,99,107,32,116,111,32,99,108,105,101,110,116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,83,101,115,115,105,111,110,73,68,32,61,32,116,101,114,109,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"&Data = string() | io_list() | binary()"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,
        [29,60,97,32,110,97,109,101,61,34,100,101,108,105,118,101,114,34,62,
         100,101,108,105,118,101,114,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [16,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,
                  115]}],
               0,false},
              {text,"\b**only**"},
              {sep,
               [{text,
                 "rintended to be used from functions called by the Erl Scheme interface to deliver parts of the content to the user."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "8Sends data from an Erl Scheme script back to the client."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
            {sep,
             [{text,[4,32,32,32,32]},
              {sep,
               [{sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            "TIf any HTTP header fields are added by the script, they must be in the first call to"}],
                          0,false},
                         {text,"\v*deliver/2*"},
                         {sep,
                          [{text,
                            "³, and the data in the call must be a string. Calls after the headers are complete can contain binary data to reduce copying overhead. Do not assume anything about the data type of"}],
                          0,false},
                         {text,"\v*SessionID*"},
                         {sep,[{text,[1,46]}],0,false},
                         {text,"\v*SessionID*"},
                         {sep,
                          [{text,
                            "Smust be the value given as input to the ESI callback function that you implemented."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false}],
               0,true}],
             0,false}},
           {text,[0]}},
          null},
         null}}],
      0,false}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [25,35,35,32,69,83,73,32,67,97,108,108,98,97,99,107,32,70,117,110,99,
         116,105,111,110,115]},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "A## Module:Function(SessionID, Env, Input)-> {continue, State} | _"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "YCreates a dynamic web page and returns it chunk by chunk to the server process by calling"}],
           0,false},
          {text,
           [19,42,109,111,100,95,101,115,105,58,100,101,108,105,118,101,114,
            47,50,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,83,101,115,115,105,111,110,73,68,32,61,32,116,101,114,109,40,
             41]}],
          0,false}],
        0,false},
       {sep,[{text,[1,42]},{sep,[{text,"\vEnv = env()"}],0,false}],0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"!Input = string() | chunked_data()"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "|chunked_data() = {first, Data::binary()} | {continue, Data::binary(), State::term()} | {last, Data::binary(), State::term()}"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,83,116,97,116,101,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\b*Module*"},
            {sep,
             [{text,")must be found in the code path and export"}],
             0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,
               [26,119,105,116,104,32,97,110,32,97,114,105,116,121,32,111,102,
                32,116,104,114,101,101,46,32,65,110]}],
             0,false},
            {text,
             [16,42,101,114,108,83,99,114,105,112,116,65,108,105,97,115,42]},
            {sep,
             [{text,
               "Amust also be set up in the configuration file for the web server."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [19,42,109,111,100,95,101,115,105,58,100,101,108,105,118,101,114,
              47,50,42]},
            {sep,
             [{text,
               "8shall be used to generate the response to the client and"}],
             0,false},
            {text,"\v*SessionID*"},
            {sep,
             [{text,
               [349,105,115,32,97,110,32,105,100,101,110,116,105,102,105,101,
                114,32,116,104,97,116,32,115,104,97,108,108,32,98,121,32,117,
                115,101,100,32,119,104,101,110,32,99,97,108,108,105,110,103,
                32,116,104,105,115,32,102,117,110,99,116,105,111,110,44,32,
                100,111,32,110,111,116,32,97,115,115,117,109,101,32,97,110,
                121,116,104,105,110,103,32,97,98,111,117,116,32,116,104,101,
                32,100,97,116,97,116,121,112,101,46,32,84,104,105,115,32,102,
                117,110,99,116,105,111,110,32,109,97,121,32,98,101,32,99,97,
                108,108,101,100,32,115,101,118,101,114,97,108,32,116,105,109,
                101,115,32,116,111,32,99,104,117,110,107,32,116,104,101,32,
                114,101,115,112,111,110,115,101,32,100,97,116,97,46,32,78,111,
                116,105,99,101,32,116,104,97,116,32,116,104,101,32,102,105,
                114,115,116,32,99,104,117,110,107,32,111,102,32,100,97,116,97,
                32,115,101,110,116,32,116,111,32,116,104,101,32,99,108,105,
                101,110,116,32,109,117,115,116,32,97,116,32,108,101,97,115,
                116,32,99,111,110,116,97,105,110,32,97,108,108,32,72,84,84,80,
                32,104,101,97,100,101,114,32,102,105,101,108,100,115,32,116,
                104,97,116,32,116,104,101,32,114,101,115,112,111,110,115,101,
                32,119,105,108,108,32,103,101,110,101,114,97,116,101,46,32,73,
                102,32,116,104,101,32,102,105,114,115,116,32,99,104,117,110,
                107,32,100,111,101,115,32,110,111,116,32,99,111,110,116,97,
                105,110,32,116,104,101]}],
             0,false},
            {text,
             [22,42,42,101,110,100,32,111,102,32,72,84,84,80,32,104,101,97,
              100,101,114,42,42]},
            {sep,[{text,"\n, that is,"}],0,false},
            {text,"\r*\"\\r\\n\\r\\n\",*"},
            {sep,
             [{text,
               "@the server assumes that no HTTP header fields will be generated."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[5,42,69,110,118,42]},
            {sep,
             [{text,
               "6environment data of the request see description above."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[7,42,73,110,112,117,116,42]},
            {sep,
             [{text,
               "ãis query data of a GET request or the body of a PUT or POST request. The default behavior (legacy reasons) for delivering the body, is that the whole body is gathered and converted to a string. But if the httpd config parameter"}],
             0,false},
            {text,"6[max_client_body_chunk](./httpd#max_client_body_chunk)"},
            {sep,
             [{text,
               "eis set, the body will be delivered as binary chunks instead. The maximum size of the chunks is either"}],
             0,false},
            {text,"6[max_client_body_chunk](./httpd#max_client_body_chunk)"},
            {sep,
             [{text,
               "´or decide by the client if it uses HTTP chunked encoding to send the body. When using the chunking mechanism this callback must return {continue, State::term()} for all calls where"}],
             0,false},
            {text,[7,42,73,110,112,117,116,42]},
            {sep,[{text,[2,105,115]}],0,false},
            {text,
             [25,42,123,102,105,114,115,116,44,32,68,97,116,97,58,58,98,105,
              110,97,114,121,40,41,125,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"+*{continue, Data::binary(), State::term()}*"},
            {sep,[{text,[6,46,32,87,104,101,110]}],0,false},
            {text,[7,42,73,110,112,117,116,42]},
            {sep,[{text,[2,105,115]}],0,false},
            {text,"'*{last, Data::binary(), State::term()}*"},
            {sep,[{text,"!the return value will be ignored."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "²Note that if the body is small all data may be delivered in only one chunk and then the callback will be called with {last, Data::binary(), undefined} without getting called with"}],
                        0,false},
                       {text,
                        [25,42,123,102,105,114,115,116,44,32,68,97,116,97,58,
                         58,98,105,110,97,114,121,40,41,125,42]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\tThe input"}],0,false},
            {text,[7,42,83,116,97,116,101,42]},
            {sep,
             [{text,
               [20,105,115,32,116,104,101,32,108,97,115,116,32,114,101,116,
                117,114,110,101,100]}],
             0,false},
            {text,[7,42,83,116,97,116,101,42]},
            {sep,
             [{text,
               "b, in it the callback can include any data that it needs to keep track of when handling the chunks."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,")## Module:Function(Env, Input)-> Response"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "~Creates a dynamic web page and returns it as a list. This function is deprecated and is only kept for backwards compatibility."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,[{text,[1,42]},{sep,[{text,"\vEnv = env()"}],0,false}],0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [16,73,110,112,117,116,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,82,101,115,112,111,110,115,101,32,61,32,115,116,114,105,110,103,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "®This callback format consumes much memory, as the whole response must be generated before it is sent to the user. This callback format is deprecated. For new development, use"}],
             0,false},
            {text,
             [19,42,77,111,100,117,108,101,58,70,117,110,99,116,105,111,110,
              47,51,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
