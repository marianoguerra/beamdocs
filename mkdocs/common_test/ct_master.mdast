{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# ct_master"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# ct_master"},null},null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"3Distributed test execution control for Common Test."}],
         0,false}],
       0,true},
      null},
     null}}},
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {sep,
      [{sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,"&Distributed test execution control for"}],
                 0,false},
                {text,"\r*Common Test*"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,")This module exports functions for running"}],
                 0,false},
                {text,"\r*Common Test*"},
                {sep,
                 [{text,"$nodes on multiple hosts in parallel."}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,true},
     null},
    null}}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,97,98,111,114,116,40,41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [24,83,116,111,112,115,32,97,108,108,32,114,117,110,110,105,110,
            103,32,116,101,115,116,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,97,98,111,114,116,45,48,34,62,97,98,
       111,114,116,45,48,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [24,83,116,111,112,115,32,97,108,108,32,114,117,110,110,105,110,
              103,32,116,101,115,116,115,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [21,35,35,32,97,98,111,114,116,40,78,111,100,101,115,41,32,45,62,32,
        111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [31,83,116,111,112,115,32,116,101,115,116,115,32,111,110,32,115,
            112,101,99,105,102,105,101,100,32,110,111,100,101,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [25,78,111,100,101,115,32,61,32,97,116,111,109,40,41,32,124,32,91,97,
         116,111,109,40,41,93]}],
      0,false}],
    0,false},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,97,98,111,114,116,45,49,34,62,97,98,
       111,114,116,45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [31,83,116,111,112,115,32,116,101,115,116,115,32,111,110,32,115,
              112,101,99,105,102,105,101,100,32,110,111,100,101,115,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,98,97,115,105,99,95,104,116,109,108,40,66,111,111,108,41,
        32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "XIf set to true, the ct_master logs are written on a primitive HTML format, not using the"}],
           0,false},
          {text,"\r*Common Test*"},
          {sep,
           [{text,
             [16,67,83,83,32,115,116,121,108,101,32,115,104,101,101,116,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [19,66,111,111,108,32,61,32,116,114,117,101,32,124,32,102,97,108,115,
         101]}],
      0,false}],
    0,false},
   {sep,
    [{text,"'<a name=\"basic_html-1\">basic_html-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\tIf set to"}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[5,44,32,116,104,101]}],0,false},
            {text,
             [16,42,99,116,95,109,97,115,116,101,114,32,108,111,103,115,42]},
            {sep,
             [{text,"5are written on a primitive HTML format, not using the"}],
             0,false},
            {text,"\r*Common Test*"},
            {sep,
             [{text,
               [16,67,83,83,32,115,116,121,108,101,32,115,104,101,101,116,
                46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"(## get_event_mgr_ref() -> MasterEvMgrRef"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [23,71,101,116,115,32,97,32,114,101,102,101,114,101,110,99,101,
              32,116,111,32,116,104,101]}],
           0,false},
          {text,"\r*Common Test*"},
          {sep,
           [{text,
             [21,109,97,115,116,101,114,32,101,118,101,110,116,32,109,97,110,
              97,103,101,114,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [23,77,97,115,116,101,114,69,118,77,103,114,82,101,102,32,61,32,97,
         116,111,109,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{text,"5<a name=\"get_event_mgr_ref-0\">get_event_mgr_ref-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,71,101,116,115,32,97,32,114,101,102,101,114,101,110,99,101,
                32,116,111,32,116,104,101]}],
             0,false},
            {text,"\r*Common Test*"},
            {sep,
             [{text,
               "{master event manager. The reference can be used to, for example, add a user-specific event handler while tests are running."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "C\n gen_event:add_handler(ct_master:get_event_mgr_ref(), my_ev_h, [])"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"!## progress() -> [{Node, Status}]"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [22,82,101,116,117,114,110,115,32,116,101,115,116,32,112,114,111,
            103,114,101,115,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,[{text,[1,42]},{sep,[{text,"\rNode = atom()"}],0,false}],0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,":Status = finished_ok | ongoing | aborted | {error, Reason}"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"#<a name=\"progress-0\">progress-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [25,82,101,116,117,114,110,115,32,116,101,115,116,32,112,114,
                111,103,114,101,115,115,46,32,73,102]}],
             0,false},
            {text,"\b*Status*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,"\t*ongoing*"},
            {sep,
             [{text,
               "9, tests are running on the node and are not yet finished."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [23,35,35,32,114,117,110,40,84,101,115,116,83,112,101,99,115,41,32,45,
        62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,",Equivalent to run(TestSpecs, false, [], [])."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,[{text,")TestSpecs = string() | [SeparateOrMerged]"}],0,false}],
    0,false},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,114,117,110,45,49,34,62,114,117,110,
       45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,[15,91,114,117,110,45,52,93,40,35,114,117,110,45,52,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"-## run(TestSpecs, InclNodes, ExclNodes) -> ok"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           ":Equivalent to run(TestSpecs, false, InclNodes, ExclNodes)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,[{text,")TestSpecs = string() | [SeparateOrMerged]"}],0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"(SeparateOrMerged = string() | [string()]"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [20,73,110,99,108,78,111,100,101,115,32,61,32,91,97,116,111,109,40,
           41,93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [20,69,120,99,108,78,111,100,101,115,32,61,32,91,97,116,111,109,40,
          41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,114,117,110,45,51,34,62,114,117,110,
       45,51,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,[15,91,114,117,110,45,52,93,40,35,114,117,110,45,52,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"=## run(TestSpecs, AllowUserTerms, InclNodes, ExclNodes) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"9Tests are spawned on the nodes as specified in TestSpecs."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,[{text,")TestSpecs = string() | [SeparateOrMerged]"}],0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"(SeparateOrMerged = string() | [string()]"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [23,65,108,108,111,119,85,115,101,114,84,101,114,109,115,32,61,32,
            98,111,111,108,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [20,73,110,99,108,78,111,100,101,115,32,61,32,91,97,116,111,109,40,
           41,93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [20,69,120,99,108,78,111,100,101,115,32,61,32,91,97,116,111,109,40,
          41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,114,117,110,45,52,34,62,114,117,110,
       45,52,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".Tests are spawned on the nodes as specified in"}],
             0,false},
            {text,"\v*TestSpecs*"},
            {sep,
             [{text,
               [23,46,32,69,97,99,104,32,115,112,101,99,105,102,105,99,97,116,
                105,111,110,32,105,110]}],
             0,false},
            {text,"\n*TestSpec*"},
            {sep,
             [{text,
               "ìis handled separately. However, it is also possible to specify a list of specifications to be merged into one specification before the tests are executed. Any test without a particular node specification is also executed on the nodes in"}],
             0,false},
            {text,"\v*InclNodes*"},
            {sep,
             [{text,[14,46,32,78,111,100,101,115,32,105,110,32,116,104,101]}],
             0,false},
            {text,"\v*ExclNodes*"},
            {sep,[{text," list are excluded from the test."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"%## run_on_node(TestSpecs, Node) -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"2Equivalent to run_on_node(TestSpecs, false, Node)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,[{text,")TestSpecs = string() | [SeparateOrMerged]"}],0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,[{text,"(SeparateOrMerged = string() | [string()]"}],0,false}],
      0,false}},
    {sep,[{text,[1,42]},{sep,[{text,"\rNode = atom()"}],0,false}],0,false}},
   {sep,
    [{text,")<a name=\"run_on_node-2\">run_on_node-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [31,91,114,117,110,95,111,110,95,110,111,100,101,45,51,93,40,35,
              114,117,110,95,111,110,95,110,111,100,101,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"5## run_on_node(TestSpecs, AllowUserTerms, Node) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"1Tests are spawned on Node according to TestSpecs."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,[{text,")TestSpecs = string() | [SeparateOrMerged]"}],0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"(SeparateOrMerged = string() | [string()]"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [23,65,108,108,111,119,85,115,101,114,84,101,114,109,115,32,61,32,
           98,111,111,108,40,41]}],
        0,false}],
      0,false}},
    {sep,[{text,[1,42]},{sep,[{text,"\rNode = atom()"}],0,false}],0,false}},
   {sep,
    [{text,")<a name=\"run_on_node-3\">run_on_node-3</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [20,84,101,115,116,115,32,97,114,101,32,115,112,97,119,110,101,
                100,32,111,110]}],
             0,false},
            {text,[6,42,78,111,100,101,42]},
            {sep,[{text,"\faccording to"}],0,false},
            {text,"\v*TestSpecs*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [29,35,35,32,114,117,110,95,116,101,115,116,40,78,111,100,101,44,32,79,
        112,116,115,41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,".Tests are spawned on Node using ct:run_test/1."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {sep,
                [{text,[1,42]},{sep,[{text,"\rNode = atom()"}],0,false}],
                0,false},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [18,79,112,116,115,32,61,32,91,79,112,116,84,117,112,108,
                     101,115,93]}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [290,79,112,116,84,117,112,108,101,115,32,61,32,123,99,111,
                    110,102,105,103,44,32,67,102,103,70,105,108,101,115,125,
                    32,124,32,123,100,105,114,44,32,84,101,115,116,68,105,114,
                    115,125,32,124,32,123,115,117,105,116,101,44,32,83,117,
                    105,116,101,115,125,32,124,32,123,116,101,115,116,99,97,
                    115,101,44,32,67,97,115,101,115,125,32,124,32,123,115,112,
                    101,99,44,32,84,101,115,116,83,112,101,99,115,125,32,124,
                    32,123,97,108,108,111,119,95,117,115,101,114,95,116,101,
                    114,109,115,44,32,66,111,111,108,125,32,124,32,123,108,
                    111,103,100,105,114,44,32,76,111,103,68,105,114,125,32,
                    124,32,123,101,118,101,110,116,95,104,97,110,100,108,101,
                    114,44,32,69,118,101,110,116,72,97,110,100,108,101,114,
                    115,125,32,124,32,123,115,105,108,101,110,116,95,99,111,
                    110,110,101,99,116,105,111,110,115,44,32,67,111,110,110,
                    115,125,32,124,32,123,99,111,118,101,114,44,32,67,111,118,
                    101,114,83,112,101,99,70,105,108,101,125,32,124,32,123,99,
                    111,118,101,114,95,115,116,111,112,44,32,66,111,111,108,
                    125,32,124,32,123,117,115,101,114,99,111,110,102,105,103,
                    44,32,85,115,101,114,67,102,103,70,105,108,101,115,125]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,[{text," CfgFiles = string() | [string()]"}],0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,[{text," TestDirs = string() | [string()]"}],0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [26,83,117,105,116,101,115,32,61,32,97,116,111,109,40,41,32,
                 124,32,91,97,116,111,109,40,41,93]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [25,67,97,115,101,115,32,61,32,97,116,111,109,40,41,32,124,32,
                91,97,116,111,109,40,41,93]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,[{text,"!TestSpecs = string() | [string()]"}],0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,76,111,103,68,105,114,32,61,32,115,116,114,105,110,103,40,
              41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [25,69,118,101,110,116,72,97,110,100,108,101,114,115,32,61,32,69,
             72,32,124,32,91,69,72,93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"7EH = atom() | {atom(), InitArgs} | {[atom()], InitArgs}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,73,110,105,116,65,114,103,115,32,61,32,91,116,101,114,109,40,41,
           93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [22,67,111,110,110,115,32,61,32,97,108,108,32,124,32,91,97,116,111,
          109,40,41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"#<a name=\"run_test-2\">run_test-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [20,84,101,115,116,115,32,97,114,101,32,115,112,97,119,110,101,
                100,32,111,110]}],
             0,false},
            {text,[6,42,78,111,100,101,42]},
            {sep,[{text,[5,117,115,105,110,103]}],0,false},
            {text," [ct#run_test-1](./ct#run_test-1)"}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
