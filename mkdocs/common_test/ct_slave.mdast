{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n# ct_slave"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n# ct_slave"},null},null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "XCommon Test framework functions for starting and stopping nodes for Large-Scale Testing."}],
         0,false}],
       0,true},
      null},
     null}}},
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {sep,
      [{sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,"\r*Common Test*"},
                {sep,
                 [{text,
                   "Lframework functions for starting and stopping nodes for Large-Scale Testing."}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,")This module exports functions used by the"}],
                 0,false},
                {text,"\r*Common Test*"},
                {sep,
                 [{text,
                   "QMaster to start and stop \"slave\" nodes. It is the default callback module for the"}],
                 0,false},
                {text,
                 [20,42,123,105,110,105,116,44,32,110,111,100,101,95,115,116,
                  97,114,116,125,42]},
                {sep,
                 [{text,
                   [31,116,101,114,109,32,105,110,32,116,104,101,32,84,101,
                    115,116,32,83,112,101,99,105,102,105,99,97,116,105,111,
                    110,46]}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,true},
     null},
    null}}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [24,35,35,32,115,116,97,114,116,40,78,111,100,101,41,32,45,62,32,82,
        101,115,117,108,116]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"7Starts an Erlang node with name Node on the local host."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,[{text,[1,42]},{sep,[{text,"\rNode = atom()"}],0,false}],0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"3Result = {ok, NodeName} | {error, Reason, NodeName}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "lReason = already_started | started_not_connected | boot_timeout | init_timeout | startup_timeout | not_alive"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,78,111,100,101,78,97,109,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,115,116,97,114,116,45,49,34,62,115,
       116,97,114,116,45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [31,83,116,97,114,116,115,32,97,110,32,69,114,108,97,110,103,
                32,110,111,100,101,32,119,105,116,104,32,110,97,109,101]}],
             0,false},
            {text,[6,42,78,111,100,101,42]},
            {sep,
             [{text,
               [18,111,110,32,116,104,101,32,108,111,99,97,108,32,104,111,115,
                116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [19,91,115,116,97,114,116,45,51,93,40,35,115,116,97,114,116,45,
              51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"*## start(HostOrNode, NodeOrOpts) -> Result"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "lStarts an Erlang node with default options on a specified host, or on the local host with specified options."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [19,72,111,115,116,79,114,78,111,100,101,32,61,32,97,116,111,109,
             40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [28,78,111,100,101,79,114,79,112,116,115,32,61,32,97,116,111,109,
             40,41,32,124,32,108,105,115,116,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"3Result = {ok, NodeName} | {error, Reason, NodeName}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "lReason = already_started | started_not_connected | boot_timeout | init_timeout | startup_timeout | not_alive"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,78,111,100,101,78,97,109,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,115,116,97,114,116,45,50,34,62,115,
       116,97,114,116,45,50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [144,83,116,97,114,116,115,32,97,110,32,69,114,108,97,110,103,
                32,110,111,100,101,32,119,105,116,104,32,100,101,102,97,117,
                108,116,32,111,112,116,105,111,110,115,32,111,110,32,97,32,
                115,112,101,99,105,102,105,101,100,32,104,111,115,116,44,32,
                111,114,32,111,110,32,116,104,101,32,108,111,99,97,108,32,104,
                111,115,116,32,119,105,116,104,32,115,112,101,99,105,102,105,
                101,100,32,111,112,116,105,111,110,115,46,32,84,104,97,116,32,
                105,115,44,32,116,104,101,32,99,97,108,108,32,105,115,32,105,
                110,116,101,114,112,114,101,116,101,100,32,97,115]}],
             0,false},
            {text,
             [19,42,115,116,97,114,116,40,72,111,115,116,44,32,78,111,100,101,
              41,42]},
            {sep,
             [{text,"+when the second argument is atom-valued and"}],
             0,false},
            {text,
             [19,42,115,116,97,114,116,40,78,111,100,101,44,32,79,112,116,115,
              41,42]},
            {sep,
             [{text,
               [23,119,104,101,110,32,105,116,32,105,115,32,108,105,115,116,
                45,118,97,108,117,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [19,91,115,116,97,114,116,45,51,93,40,35,115,116,97,114,116,45,
              51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"$## start(Host, Node, Opts) -> Result"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "eStarts an Erlang node with name Node on host Host as specified by the combination of options in Opts."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {sep,
                         [{text,[1,42]},
                          {sep,[{text,"\rNode = atom()"}],0,false}],
                         0,false},
                        {sep,
                         [{text,[1,42]},
                          {sep,[{text,"\rHost = atom()"}],0,false}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{text,
                            [18,79,112,116,115,32,61,32,91,79,112,116,84,117,
                             112,108,101,115,93]}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,
                           [302,79,112,116,84,117,112,108,101,115,32,61,32,
                            123,117,115,101,114,110,97,109,101,44,32,85,115,
                            101,114,110,97,109,101,125,32,124,32,123,112,97,
                            115,115,119,111,114,100,44,32,80,97,115,115,119,
                            111,114,100,125,32,124,32,123,98,111,111,116,95,
                            116,105,109,101,111,117,116,44,32,66,111,111,116,
                            84,105,109,101,111,117,116,125,32,124,32,123,105,
                            110,105,116,95,116,105,109,101,111,117,116,44,32,
                            73,110,105,116,84,105,109,101,111,117,116,125,32,
                            124,32,123,115,116,97,114,116,117,112,95,116,105,
                            109,101,111,117,116,44,32,83,116,97,114,116,117,
                            112,84,105,109,101,111,117,116,125,32,124,32,123,
                            115,116,97,114,116,117,112,95,102,117,110,99,116,
                            105,111,110,115,44,32,83,116,97,114,116,117,112,
                            70,117,110,99,116,105,111,110,115,125,32,124,32,
                            123,109,111,110,105,116,111,114,95,109,97,115,116,
                            101,114,44,32,77,111,110,105,116,111,114,125,32,
                            124,32,123,107,105,108,108,95,105,102,95,102,97,
                            105,108,44,32,75,105,108,108,73,102,70,97,105,108,
                            125,32,124,32,123,101,114,108,95,102,108,97,103,
                            115,44,32,69,114,108,97,110,103,70,108,97,103,115,
                            125,32,124,32,123,101,110,118,44,32,91,123,69,110,
                            118,86,97,114,44,32,86,97,108,117,101,125,93,
                            125]}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          [19,85,115,101,114,110,97,109,101,32,61,32,115,116,
                           114,105,110,103,40,41]}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{text,
                         [19,80,97,115,115,119,111,114,100,32,61,32,115,116,
                          114,105,110,103,40,41]}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,
                        [23,66,111,111,116,84,105,109,101,111,117,116,32,61,
                         32,105,110,116,101,103,101,114,40,41]}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       [23,73,110,105,116,84,105,109,101,111,117,116,32,61,32,
                        105,110,116,101,103,101,114,40,41]}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      [26,83,116,97,114,116,117,112,84,105,109,101,111,117,
                       116,32,61,32,105,110,116,101,103,101,114,40,41]}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,"(StartupFunctions = [StartupFunctionSpec]"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    "3StartupFunctionSpec = {Module, Function, Arguments}"}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [17,70,117,110,99,116,105,111,110,32,61,32,97,116,111,109,
                   40,41]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [18,65,114,103,117,109,101,110,116,115,32,61,32,91,116,101,
                  114,109,93]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [16,77,111,110,105,116,111,114,32,61,32,98,111,111,108,40,
                 41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [19,75,105,108,108,73,102,70,97,105,108,32,61,32,98,111,111,
                108,40,41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [22,69,114,108,97,110,103,70,108,97,103,115,32,61,32,115,116,
               114,105,110,103,40,41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,69,110,118,86,97,114,32,61,32,115,116,114,105,110,103,40,
              41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [16,86,97,108,117,101,32,61,32,115,116,114,105,110,103,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"3Result = {ok, NodeName} | {error, Reason, NodeName}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "lReason = already_started | started_not_connected | boot_timeout | init_timeout | startup_timeout | not_alive"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,78,111,100,101,78,97,109,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,115,116,97,114,116,45,51,34,62,115,
       116,97,114,116,45,51,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [31,83,116,97,114,116,115,32,97,110,32,69,114,108,97,110,103,
                32,110,111,100,101,32,119,105,116,104,32,110,97,109,101]}],
             0,false},
            {text,[6,42,78,111,100,101,42]},
            {sep,[{text,[7,111,110,32,104,111,115,116]}],0,false},
            {text,[6,42,72,111,115,116,42]},
            {sep,
             [{text,"-as specified by the combination of options in"}],
             0,false},
            {text,[6,42,79,112,116,115,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,79,112,116,105,111,110,115]}],0,false},
            {text,"\n*Username*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\n*Password*"},
            {sep,[{text,"%are used to log on to the remote host"}],0,false},
            {text,[6,42,72,111,115,116,42]},
            {sep,[{text,[1,46]}],0,false},
            {text,"\n*Username*"},
            {sep,
             [{text,"/, if omitted, defaults to the current username."}],
             0,false},
            {text,"\n*Password*"},
            {sep,
             [{text,
               [20,105,115,32,101,109,112,116,121,32,98,121,32,100,101,102,97,
                117,108,116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"'A list of functions specified in option"}],0,false},
            {text,"\t*Startup*"},
            {sep,
             [{text,
               "jare executed after startup of the node. Notice that all used modules are to be present in the code path on"}],
             0,false},
            {text,[6,42,72,111,115,116,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"%The time-outs are applied as follows:"}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\vBootTimeout"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            "~The time to start the Erlang node, in seconds. Defaults to 3 seconds. If the node is not pingable within this time, the result"}],
                          0,false},
                         {text,
                          [31,123,101,114,114,111,114,44,32,98,111,111,116,95,
                           116,105,109,101,111,117,116,44,32,78,111,100,101,
                           78,97,109,101,125]},
                         {sep,[{text,"\fis returned."}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,"\vInitTimeout"}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "¹The time to wait for the node until it calls the internal callback function informing master about a successful startup. Defaults to 1 second. In case of a timed out message, the result"}],
                        0,false},
                       {text,
                        [31,123,101,114,114,111,114,44,32,105,110,105,116,95,
                         116,105,109,101,111,117,116,44,32,78,111,100,101,78,
                         97,109,101,125]},
                       {sep,[{text,"\fis returned."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [14,83,116,97,114,116,117,112,84,105,109,101,111,117,116]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,",The time to wait until the node stops to run"}],
                      0,false},
                     {text,
                      [16,83,116,97,114,116,117,112,70,117,110,99,116,105,111,
                       110,115]},
                     {sep,
                      [{text,
                        ";. Defaults to 1 second. If this time-out occurs, the result"}],
                      0,false},
                     {text,"\"{error, startup_timeout, NodeName}"},
                     {sep,[{text,"\fis returned."}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Options:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [14,109,111,110,105,116,111,114,95,109,97,115,116,101,
                        114]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "RSpecifies if the slave node is to be stopped if the master node stops. Defaults to"}],
                            0,false},
                           {text,[5,102,97,108,115,101]},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\fkill_if_fail"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            "nSpecifies if the slave node is to be killed if a time-out occurs during initialization or startup. Defaults to"}],
                          0,false},
                         {text,[4,116,114,117,101]},
                         {sep,
                          [{text,
                            "p. Notice that the node can also be still alive it the boot time-out occurred, but it is not killed in this case."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,"\ferlang_flags"}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "CSpecifies which flags are added to the parameters of the executable"}],
                        0,false},
                       {text,[3,101,114,108]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,[3,101,110,118]}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "KSpecifies a list of environment variables that will extend the environment."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [26,42,42,83,112,101,99,105,97,108,32,114,101,116,117,114,110,32,
              118,97,108,117,101,115,58,42,42]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"$*{error, already_started, NodeName}*"},
           {sep,
            [{text,
              "Kif the node with the specified name is already started on a specified host."}],
            0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"**{error, started_not_connected, NodeName}*"},
           {sep,
            [{text,
              "=if the node is started, but not connected to the master node."}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [30,42,123,101,114,114,111,114,44,32,110,111,116,95,97,108,105,118,
            101,44,32,78,111,100,101,78,97,109,101,125,42]},
          {sep,
           [{text,
             [20,105,102,32,116,104,101,32,110,111,100,101,32,111,110,32,119,
              104,105,99,104]}],
           0,false},
          {text,
           [19,91,115,116,97,114,116,45,51,93,40,35,115,116,97,114,116,45,51,
            41]},
          {sep,[{text,"$is called, is not alive. Notice that"}],0,false},
          {text,"\n*NodeName*"},
          {sep,
           [{text,"-is the name of the current node in this case."}],
           0,false}],
         0,false}],
       0,false}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [23,35,35,32,115,116,111,112,40,78,111,100,101,41,32,45,62,32,82,101,
        115,117,108,116]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "?Stops the running Erlang node with name Node on the local host."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,[{text,[1,42]},{sep,[{text,"\rNode = atom()"}],0,false}],0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,"3Result = {ok, NodeName} | {error, Reason, NodeName}"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,"3Reason = not_started | not_connected | stop_timeout"}],
       0,false}],
     0,false}},
   {sep,
    [{text,"\e<a name=\"stop-1\">stop-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"'Stops the running Erlang node with name"}],0,false},
            {text,[6,42,78,111,100,101,42]},
            {sep,
             [{text,
               [18,111,110,32,116,104,101,32,108,111,99,97,108,32,104,111,115,
                116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [29,35,35,32,115,116,111,112,40,72,111,115,116,44,32,78,111,100,101,41,
        32,45,62,32,82,101,115,117,108,116]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           ":Stops the running Erlang node with name Node on host Host."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,[{text,[1,42]},{sep,[{text,"\rHost = atom()"}],0,false}],0,false},
       {sep,[{text,[1,42]},{sep,[{text,"\rNode = atom()"}],0,false}],0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"3Result = {ok, NodeName} | {error, Reason, NodeName}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,"3Reason = not_started | not_connected | stop_timeout"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,78,111,100,101,78,97,109,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"\e<a name=\"stop-2\">stop-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"'Stops the running Erlang node with name"}],0,false},
            {text,[6,42,78,111,100,101,42]},
            {sep,[{text,[7,111,110,32,104,111,115,116]}],0,false},
            {text,[6,42,72,111,115,116,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
