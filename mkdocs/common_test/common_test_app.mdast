{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r# Common Test"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r# common_test"},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6A framework for automated testing of any target nodes."}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[3,84,104,101]}],0,false},
                 {text,"\r*Common Test*"},
                 {sep,
                  [{text,
                    "qframework is an environment for implementing and performing automatic and semi-automatic execution of test cases."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\tIn brief,"}],0,false},
                 {text,"\r*Common Test*"},
                 {sep,[{text,"\tsupports:"}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {above,
               {sep,
                [{text,[1,42]},
                 {text,
                  "7Automated execution of test suites (sets of test cases)"}],
                0,false},
               {sep,
                [{text,[1,42]},{text,"\"Logging of events during execution"}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {text,"'HTML presentation of test suite results"}],
               0,false}},
             {sep,
              [{text,[1,42]},{text,"$HTML presentation of test suite code"}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {text,"(Support functions for test suite authors"}],
             0,false}},
           {sep,
            [{text,[1,42]},{text,"$Step-by-step execution of test cases"}],
            0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "TThe following section describes the mandatory and optional test suite functions that"}],
                  0,false},
                 {text,"\r*Common Test*"},
                 {sep,
                  [{text,
                    ":calls during test execution. For more details, see section"}],
                  0,false},
                 {text,")[Writing Test Suites](write_test_chapter)"},
                 {sep,
                  [{text,
                    [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,
                     117,105,100,101,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [31,35,35,32,84,101,115,116,32,67,97,115,101,32,67,97,108,108,98,97,
         99,107,32,70,117,110,99,116,105,111,110,115]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "GThe following functions define the callback interface for a test suite."}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"(## Module:all() -> Tests | {skip,Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "FReturns the list of all test case groups and test cases in the module."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [146,84,101,115,116,115,32,61,32,91,84,101,115,116,67,97,
                   115,101,32,124,32,123,116,101,115,116,99,97,115,101,44,84,
                   101,115,116,67,97,115,101,44,84,67,82,101,112,101,97,116,
                   80,114,111,112,115,125,32,124,32,123,103,114,111,117,112,
                   44,71,114,111,117,112,78,97,109,101,125,32,124,32,123,103,
                   114,111,117,112,44,71,114,111,117,112,78,97,109,101,44,80,
                   114,111,112,101,114,116,105,101,115,125,32,124,32,123,103,
                   114,111,117,112,44,71,114,111,117,112,78,97,109,101,44,80,
                   114,111,112,101,114,116,105,101,115,44,83,117,98,71,114,
                   111,117,112,115,125,93]}],
                0,false}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [17,84,101,115,116,67,97,115,101,32,61,32,97,116,111,109,40,
                   41]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 "JTCRepeatProps = [{repeat,N} | {repeat_until_ok,N} | {repeat_until_fail,N}]"}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [18,71,114,111,117,112,78,97,109,101,32,61,32,97,116,111,109,
                 40,41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "LProperties = [parallel | sequence | Shuffle | {GroupRepeatType,N}] | default"}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "GSubGroups = [{GroupName,Properties} | {GroupName,Properties,SubGroups}]"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,[{text,"\"Shuffle = shuffle | {shuffle,Seed}"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"&Seed = {integer(),integer(),integer()}"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           "tGroupRepeatType = repeat | repeat_until_all_ok | repeat_until_all_fail | repeat_until_any_ok | repeat_until_any_fail"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [23,78,32,61,32,105,110,116,101,103,101,114,40,41,32,124,32,102,111,
           114,101,118,101,114]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\tMANDATORY"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "¨Returns the list of all test cases and test case groups in the test suite module to be executed. This list also specifies the order the cases and groups are executed by"}],
             0,false},
            {text,"\r*Common Test*"},
            {sep,
             [{text,
               "Q. A test case is represented by an atom, the name of the test case function, or a"}],
             0,false},
            {text,"\n*testcase*"},
            {sep,
             [{text,
               "\\tuple indicating that the test case shall be repeated. A test case group is represented by a"}],
             0,false},
            {text,[7,42,103,114,111,117,112,42]},
            {sep,[{text,"\ftuple, where"}],0,false},
            {text,"\v*GroupName*"},
            {sep,
             [{text,"/, an atom, is the name of the group (defined in"}],
             0,false},
            {text,"#[Module:groups-0](#Module:groups-0)"},
            {sep,
             [{text,
               "Í). Execution properties for groups can also be specified, both for a top-level group and for any of its subgroups. Group execution properties specified here override properties in the group definition (see"}],
             0,false},
            {text,"#[Module:groups-0](#Module:groups-0)"},
            {sep,
             [{text,[14,41,46,32,40,87,105,116,104,32,118,97,108,117,101]}],
             0,false},
            {text,"\t*default*"},
            {sep,
             [{text,",, the group definition properties are used)."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[15,42,123,115,107,105,112,44,82,101,97,115,111,110,125,42]},
            {sep,
             [{text,
               "9is returned, all test cases in the module are skipped and"}],
             0,false},
            {text,"\b*Reason*"},
            {sep,[{text,"#is printed on the HTML result page."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\"For details on groups, see section"}],0,false},
            {text,
             "9[Test Case Groups](./write_test_chapter#test_case_groups)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,77,111,100,117,108,101,58,103,114,111,117,112,115,40,41,
        32,45,62,32,71,114,111,117,112,68,101,102,115]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,".Returns a list of test case group definitions."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [19,71,114,111,117,112,68,101,102,115,32,61,32,91,71,114,
                   111,117,112,93]}],
                0,false}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,"1Group = {GroupName,Properties,GroupsAndTestCases}"}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [18,71,114,111,117,112,78,97,109,101,32,61,32,97,116,111,109,
                  40,41]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "BProperties = [parallel | sequence | Shuffle | {GroupRepeatType,N}]"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "_GroupsAndTestCases = [Group | {group,GroupName} | TestCase | {testcase,TestCase,TCRepeatProps}]"}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [17,84,101,115,116,67,97,115,101,32,61,32,97,116,111,109,40,
               41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             "JTCRepeatProps = [{repeat,N} | {repeat_until_ok,N} | {repeat_until_fail,N}]"}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"\"Shuffle = shuffle | {shuffle,Seed}"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"&Seed = {integer(),integer(),integer()}"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "tGroupRepeatType = repeat | repeat_until_all_ok | repeat_until_all_fail | repeat_until_any_ok | repeat_until_any_fail"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [23,78,32,61,32,105,110,116,101,103,101,114,40,41,32,124,32,102,111,
          114,101,118,101,114]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bOPTIONAL"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"2Defines test case groups. For details, see section"}],
             0,false},
            {text,
             "9[Test Case Groups](./write_test_chapter#test_case_groups)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## Module:suite() -> [Info]"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "@Test suite info function (providing default data for the suite)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{text,
                             "¢Info = {timetrap,Time} | {require,Required} | {require,Name,Required} | {userdata,UserData} | {silent_connections,Conns} | {stylesheet,CSSFile} | {ct_hooks, CTHs}"}],
                           0,false}],
                         0,false},
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{text,
                             [25,84,105,109,101,32,61,32,84,105,109,101,86,97,
                              108,32,124,32,84,105,109,101,70,117,110,99]}],
                           0,false}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{text,
                            "RTimeVal = MilliSec | {seconds,integer()} | {minutes,integer()} | {hours,integer()}"}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text," TimeFunc = {Mod,Func,Args} | Fun"}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          [20,77,105,108,108,105,83,101,99,32,61,32,105,110,
                           116,101,103,101,114,40,41]}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},{sep,[{text,"\fMod = atom()"}],0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},{sep,[{text,"\rFunc = atom()"}],0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},{sep,[{text,"\rArgs = list()"}],0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},{sep,[{text,"\vFun = fun()"}],0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "DRequired = Key | {Key,SubKeys} | {Key,SubKey} | {Key,SubKey,SubKeys}"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,[{text,"\eSubKeys = SubKey | [SubKey]"}],0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [15,83,117,98,75,101,121,32,61,32,97,116,111,109,40,41]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},{sep,[{text,"\rName = atom()"}],0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [17,85,115,101,114,68,97,116,97,32,61,32,116,101,114,109,40,
                 41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [16,67,111,110,110,115,32,61,32,91,97,116,111,109,40,41,93]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [18,67,83,83,70,105,108,101,32,61,32,115,116,114,105,110,103,40,
               41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [19,67,84,72,115,32,61,32,91,67,84,72,77,111,100,117,108,101,32,
              124]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"*Â Â Â Â Â Â Â Â {CTHModule, CTHInitArgs} |"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"6Â Â Â Â Â Â Â Â {CTHModule, CTHInitArgs, CTHPriority}]"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,84,72,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [20,67,84,72,73,110,105,116,65,114,103,115,32,61,32,116,101,114,109,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bOPTIONAL"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "¸The test suite information function. Returns a list of tagged tuples specifying various properties related to the execution of this test suite (common for all test cases in the suite)."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,97,103]}],0,false},
            {text,"\n*timetrap*"},
            {sep,
             [{text,
               "Jsets the maximum time that each test case is allowed to execute (including"}],
             0,false},
            {text,
             "9[Module:init_per_testcase-2](#Module:init_per_testcase-2)"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"7[Module:end_per_testcase-2](#Module:end_per_testcase-2)"},
            {sep,
             [{text,
               "D). If the timetrap time is exceeded, the test case fails with reason"}],
             0,false},
            {text,
             [18,42,116,105,109,101,116,114,97,112,95,116,105,109,101,111,117,
              116,42]},
            {sep,[{text,[3,46,32,65]}],0,false},
            {text,"\n*TimeFunc*"},
            {sep,
             [{text,
               "9function can be used to set a new timetrap by returning a"}],
             0,false},
            {text,"\t*TimeVal*"},
            {sep,
             [{text,
               "f. It can also be used to trigger a timetrap time-out by, at some point, returning a value other than a"}],
             0,false},
            {text,"\t*TimeVal*"},
            {sep,
             [{text,
               [26,46,32,70,111,114,32,100,101,116,97,105,108,115,44,32,115,
                101,101,32,115,101,99,116,105,111,110]}],
             0,false},
            {text,"4[Timetrap Time-Outs](./write_test_chapter#timetraps)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,97,103]}],0,false},
            {text,"\t*require*"},
            {sep,
             [{text,
               "îspecifies configuration variables required by test cases (or configuration functions) in the suite. If the required configuration variables are not found in any of the configuration files, all test cases are skipped. For details about the"}],
             0,false},
            {text,"\t*require*"},
            {sep,
             [{text,
               [26,102,117,110,99,116,105,111,110,97,108,105,116,121,44,32,
                115,101,101,32,102,117,110,116,105,111,110]}],
             0,false},
            {text,
             [30,91,99,116,35,114,101,113,117,105,114,101,45,49,93,40,46,47,
              99,116,35,114,101,113,117,105,114,101,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,87,105,116,104]}],0,false},
            {text,"\n*userdata*"},
            {sep,
             [{text,
               "W, the user can specify any test suite-related information, which can be read by calling"}],
             0,false},
            {text," [ct#userdata-2](./ct#userdata-2)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,97,103]}],0,false},
            {text,"\n*ct_hooks*"},
            {sep,[{text,"\rspecifies the"}],0,false},
            {text,"%[Common Test Hooks](ct_hooks_chapter)"},
            {sep,
             [{text,
               [26,116,111,32,98,101,32,114,117,110,32,119,105,116,104,32,116,
                104,105,115,32,115,117,105,116,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"/Other tuples than the ones defined are ignored."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BFor details about the test suite information function, see section"}],
             0,false},
            {text,
             "=[Test Suite Information Function](./write_test_chapter#suite)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "k## Module:init_per_suite(Config) -> NewConfig | {skip,Reason} |\n\t  {skip_and_save,Reason,SaveConfig}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,[{sep,[{text,"\eTest suite initializations."}],0,false}],0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"/Config = NewConfig = SaveConfig = [{Key,Value}]"}],
         0,false}],
       0,false},
      {sep,[{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+OPTIONAL; if this function is defined, then"}],
             0,false},
            {text,"1[Module:end_per_suite-1](#Module:end_per_suite-1)"},
            {sep,
             [{text,
               [21,109,117,115,116,32,97,108,115,111,32,98,101,32,100,101,102,
                105,110,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ËThis configuration function is called as the first function in the suite. It typically contains initializations that are common for all test cases in the suite, and that must only be done once. Parameter"}],
             0,false},
            {text,"\b*Config*"},
            {sep,
             [{text,
               "gis the configuration data that can be modified. Whatever is returned from this function is specified as"}],
             0,false},
            {text,"\b*Config*"},
            {sep,
             [{text,
               ";to all configuration functions and test cases in the suite."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[15,42,123,115,107,105,112,44,82,101,97,115,111,110,125,42]},
            {sep,
             [{text,
               "8is returned, all test cases in the suite are skipped and"}],
             0,false},
            {text,"\b*Reason*"},
            {sep,
             [{text,"-is printed in the overview log for the suite."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [18,70,111,114,32,105,110,102,111,114,109,97,116,105,111,110,
                32,111,110]}],
             0,false},
            {text,"\r*save_config*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[15,42,115,107,105,112,95,97,110,100,95,115,97,118,101,42]},
            {sep,[{text,"\r, see section"}],0,false},
            {text,
             "?[Saving Configuration Data](./dependencies_chapter#save_config)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "H## Module:end_per_suite(Config) -> term() | \n\t{save_config,SaveConfig}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [24,84,101,115,116,32,115,117,105,116,101,32,102,105,110,97,108,
            105,122,97,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,[{text,"#Config = SaveConfig = [{Key,Value}]"}],0,false}],
      0,false},
     {sep,[{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+OPTIONAL; if this function is defined, then"}],
             0,false},
            {text,"3[Module:init_per_suite-1](#Module:init_per_suite-1)"},
            {sep,
             [{text,
               [21,109,117,115,116,32,97,108,115,111,32,98,101,32,100,101,102,
                105,110,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "hThis function is called as the last test case in the suite. It is meant to be used for cleaning up after"}],
             0,false},
            {text,"3[Module:init_per_suite-1](#Module:init_per_suite-1)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [18,70,111,114,32,105,110,102,111,114,109,97,116,105,111,110,
                32,111,110]}],
             0,false},
            {text,"\r*save_config*"},
            {sep,[{text,"\r, see section"}],0,false},
            {text,
             "?[Saving Configuration Data](./dependencies_chapter#save_config)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"$## Module:group(GroupName) -> [Info]"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "{Test case group information function (providing default data for a test case group, that is, its test cases and subgroups)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{text,
                             "¢Info = {timetrap,Time} | {require,Required} | {require,Name,Required} | {userdata,UserData} | {silent_connections,Conns} | {stylesheet,CSSFile} | {ct_hooks, CTHs}"}],
                           0,false}],
                         0,false},
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{text,
                             [25,84,105,109,101,32,61,32,84,105,109,101,86,97,
                              108,32,124,32,84,105,109,101,70,117,110,99]}],
                           0,false}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{text,
                            "RTimeVal = MilliSec | {seconds,integer()} | {minutes,integer()} | {hours,integer()}"}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text," TimeFunc = {Mod,Func,Args} | Fun"}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          [20,77,105,108,108,105,83,101,99,32,61,32,105,110,
                           116,101,103,101,114,40,41]}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},{sep,[{text,"\fMod = atom()"}],0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},{sep,[{text,"\rFunc = atom()"}],0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},{sep,[{text,"\rArgs = list()"}],0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},{sep,[{text,"\vFun = fun()"}],0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "DRequired = Key | {Key,SubKeys} | {Key,Subkey} | {Key,Subkey,SubKeys}"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,[{text,"\eSubKeys = SubKey | [SubKey]"}],0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [15,83,117,98,75,101,121,32,61,32,97,116,111,109,40,41]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},{sep,[{text,"\rName = atom()"}],0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [17,85,115,101,114,68,97,116,97,32,61,32,116,101,114,109,40,
                 41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [16,67,111,110,110,115,32,61,32,91,97,116,111,109,40,41,93]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [18,67,83,83,70,105,108,101,32,61,32,115,116,114,105,110,103,40,
               41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [19,67,84,72,115,32,61,32,91,67,84,72,77,111,100,117,108,101,32,
              124]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"*Â Â Â Â Â Â Â Â {CTHModule, CTHInitArgs} |"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"6Â Â Â Â Â Â Â Â {CTHModule, CTHInitArgs, CTHPriority}]"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,84,72,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [20,67,84,72,73,110,105,116,65,114,103,115,32,61,32,116,101,114,109,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bOPTIONAL"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ãThe test case group information function. It is supposed to return a list of tagged tuples that specify various properties related to the execution of a test case group (that is, its test cases and subgroups). Properties set by"}],
             0,false},
            {text,"![Module:group-1](#Module:group-1)"},
            {sep,
             [{text,
               "Foverride properties with the same key that have been set previously by"}],
             0,false},
            {text,"![Module:suite-0](#Module:suite-0)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,97,103]}],0,false},
            {text,"\n*timetrap*"},
            {sep,
             [{text,
               "Jsets the maximum time that each test case is allowed to execute (including"}],
             0,false},
            {text,
             "9[Module:init_per_testcase-2](#Module:init_per_testcase-2)"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"7[Module:end_per_testcase-2](#Module:end_per_testcase-2)"},
            {sep,
             [{text,
               "D). If the timetrap time is exceeded, the test case fails with reason"}],
             0,false},
            {text,
             [18,42,116,105,109,101,116,114,97,112,95,116,105,109,101,111,117,
              116,42]},
            {sep,[{text,[3,46,32,65]}],0,false},
            {text,"\n*TimeFunc*"},
            {sep,
             [{text,
               "9function can be used to set a new timetrap by returning a"}],
             0,false},
            {text,"\t*TimeVal*"},
            {sep,
             [{text,
               "f. It can also be used to trigger a timetrap time-out by, at some point, returning a value other than a"}],
             0,false},
            {text,"\t*TimeVal*"},
            {sep,
             [{text,
               [26,46,32,70,111,114,32,100,101,116,97,105,108,115,44,32,115,
                101,101,32,115,101,99,116,105,111,110]}],
             0,false},
            {text,"4[Timetrap Time-Outs](./write_test_chapter#timetraps)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,97,103]}],0,false},
            {text,"\t*require*"},
            {sep,
             [{text,
               "üspecifies configuration variables required by test cases (or configuration functions) in the suite. If the required configuration variables are not found in any of the configuration files, all test cases in this group are skipped. For details about the"}],
             0,false},
            {text,"\t*require*"},
            {sep,[{text,"\efunctionality, see function"}],0,false},
            {text,
             [30,91,99,116,35,114,101,113,117,105,114,101,45,49,93,40,46,47,
              99,116,35,114,101,113,117,105,114,101,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,87,105,116,104]}],0,false},
            {text,"\n*userdata*"},
            {sep,
             [{text,
               "Z, the user can specify any test case group related information that can be read by calling"}],
             0,false},
            {text," [ct#userdata-2](./ct#userdata-2)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,97,103]}],0,false},
            {text,"\n*ct_hooks*"},
            {sep,[{text,"\rspecifies the"}],0,false},
            {text,"%[Common Test Hooks](ct_hooks_chapter)"},
            {sep,
             [{text,
               [26,116,111,32,98,101,32,114,117,110,32,119,105,116,104,32,116,
                104,105,115,32,115,117,105,116,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"/Other tuples than the ones defined are ignored."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "GFor details about the test case group information function, see section"}],
             0,false},
            {text,
             "=[Group Information Function](./write_test_chapter#group_info)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "O## Module:init_per_group(GroupName, Config) -> NewConfig |\n\t  {skip,Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text," Test case group initializations."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,71,114,111,117,112,78,97,109,101,32,61,32,97,116,111,109,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"\"Config = NewConfig = [{Key,Value}]"}],0,false}],
        0,false}},
      {sep,[{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+OPTIONAL; if this function is defined, then"}],
             0,false},
            {text,"1[Module:end_per_group-2](#Module:end_per_group-2)"},
            {sep,
             [{text,
               [21,109,117,115,116,32,97,108,115,111,32,98,101,32,100,101,102,
                105,110,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "×This configuration function is called before execution of a test case group. It typically contains initializations that are common for all test cases and subgroups in the group, and that must only be performed once."}],
             0,false},
            {text,"\v*GroupName*"},
            {sep,
             [{text,
               "Cis the name of the group, as specified in the group definition (see"}],
             0,false},
            {text,"#[Module:groups-0](#Module:groups-0)"},
            {sep,[{text,"\f). Parameter"}],0,false},
            {text,"\b*Config*"},
            {sep,
             [{text,
               "]is the configuration data that can be modified. The return value of this function is given as"}],
             0,false},
            {text,"\b*Config*"},
            {sep,
             [{text,"-to all test cases and subgroups in the group."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[15,42,123,115,107,105,112,44,82,101,97,115,111,110,125,42]},
            {sep,
             [{text,
               "8is returned, all test cases in the group are skipped and"}],
             0,false},
            {text,"\b*Reason*"},
            {sep,
             [{text,"-is printed in the overview log for the group."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"3For information about test case groups, see section"}],
             0,false},
            {text,
             "9[Test Case Groups](./write_test_chapter#test_case_groups)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "V## Module:end_per_group(GroupName, Config) -> term() |\n\t  {return_group_result,Status}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [29,84,101,115,116,32,99,97,115,101,32,103,114,111,117,112,32,102,
            105,110,97,108,105,122,97,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,71,114,111,117,112,78,97,109,101,32,61,32,97,116,111,109,40,
             41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [22,67,111,110,102,105,103,32,61,32,91,123,75,101,121,44,86,97,
             108,117,101,125,93]}],
          0,false}],
        0,false}},
      {sep,[{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [30,83,116,97,116,117,115,32,61,32,111,107,32,124,32,115,107,105,112,
          112,101,100,32,124,32,102,97,105,108,101,100]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+OPTIONAL; if this function is defined, then"}],
             0,false},
            {text,"3[Module:init_per_group-2](#Module:init_per_group-2)"},
            {sep,
             [{text,
               [21,109,117,115,116,32,97,108,115,111,32,98,101,32,100,101,102,
                105,110,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "zThis function is called after the execution of a test case group is finished. It is meant to be used for cleaning up after"}],
             0,false},
            {text,"3[Module:init_per_group-2](#Module:init_per_group-2)"},
            {sep,
             [{text,
               ";. A status value for a nested subgroup can be returned with"}],
             0,false},
            {text,
             [30,42,123,114,101,116,117,114,110,95,103,114,111,117,112,95,114,
              101,115,117,108,116,44,83,116,97,116,117,115,125,42]},
            {sep,[{text," . The status can be retrieved in"}],0,false},
            {text,"1[Module:end_per_group-2](#Module:end_per_group-2)"},
            {sep,
             [{text,
               "<for the group on the level above. The status is also used by"}],
             0,false},
            {text,"\r*Common Test*"},
            {sep,
             [{text,
               ">for deciding if execution of a group is to proceed if property"}],
             0,false},
            {text,"\n*sequence*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,
             [16,42,114,101,112,101,97,116,95,117,110,116,105,108,95,42,42]},
            {sep,[{text,[7,105,115,32,115,101,116,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"/For details about test case groups, see section"}],
             0,false},
            {text,
             "9[Test Case Groups](./write_test_chapter#test_case_groups)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "Z## Module:init_per_testcase(TestCase, Config) -> NewConfig | {fail,Reason} | {skip,Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [26,84,101,115,116,32,99,97,115,101,32,105,110,105,116,105,97,108,
            105,122,97,116,105,111,110,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,84,101,115,116,67,97,115,101,32,61,32,97,116,111,109,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"\"Config = NewConfig = [{Key,Value}]"}],0,false}],
        0,false}},
      {sep,[{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+OPTIONAL; if this function is defined, then"}],
             0,false},
            {text,"7[Module:end_per_testcase-2](#Module:end_per_testcase-2)"},
            {sep,
             [{text,
               [21,109,117,115,116,32,97,108,115,111,32,98,101,32,100,101,102,
                105,110,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "7This function is called before each test case. Argument"}],
             0,false},
            {text,"\n*TestCase*"},
            {sep,
             [{text,
               [26,105,115,32,116,104,101,32,116,101,115,116,32,99,97,115,101,
                32,110,97,109,101,44,32,97,110,100]}],
             0,false},
            {text,"\b*Config*"},
            {sep,
             [{text,
               "N(list of key-value tuples) is the configuration data that can be modified. The"}],
             0,false},
            {text,"\v*NewConfig*"},
            {sep,
             [{text,",list returned from this function is given as"}],
             0,false},
            {text,"\b*Config*"},
            {sep,
             [{text,
               [20,116,111,32,116,104,101,32,116,101,115,116,32,99,97,115,101,
                46,32,73,102]}],
             0,false},
            {text,[15,42,123,102,97,105,108,44,82,101,97,115,111,110,125,42]},
            {sep,
             [{text,
               "Fis returned, the test case is marked as failed without being executed."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[15,42,123,115,107,105,112,44,82,101,97,115,111,110,125,42]},
            {sep,
             [{text,")is returned, the test case is skipped and"}],
             0,false},
            {text,"\b*Reason*"},
            {sep,
             [{text,"-is printed in the overview log for the suite."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "a## Module:end_per_testcase(TestCase, Config) -> term() | {fail,Reason} | {save_config,SaveConfig}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,84,101,115,116,32,99,97,115,101,32,102,105,110,97,108,105,122,
            97,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,84,101,115,116,67,97,115,101,32,61,32,97,116,111,109,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"#Config = SaveConfig = [{Key,Value}]"}],0,false}],
        0,false}},
      {sep,[{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+OPTIONAL; if this function is defined, then"}],
             0,false},
            {text,
             "9[Module:init_per_testcase-2](#Module:init_per_testcase-2)"},
            {sep,
             [{text,
               [21,109,117,115,116,32,97,108,115,111,32,98,101,32,100,101,102,
                105,110,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "OThis function is called after each test case, and can be used to clean up after"}],
             0,false},
            {text,
             "9[Module:init_per_testcase-2](#Module:init_per_testcase-2)"},
            {sep,
             [{text,",and the test case. Any return value (besides"}],
             0,false},
            {text,[15,42,123,102,97,105,108,44,82,101,97,115,111,110,125,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [26,42,123,115,97,118,101,95,99,111,110,102,105,103,44,83,97,118,
              101,67,111,110,102,105,103,125,42]},
            {sep,
             [{text,
               [26,41,32,105,115,32,105,103,110,111,114,101,100,46,32,66,121,
                32,114,101,116,117,114,110,105,110,103]}],
             0,false},
            {text,[15,42,123,102,97,105,108,44,82,101,97,115,111,110,125,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,"\n*TestCase*"},
            {sep,
             [{text,
               "qis marked as faulty (even though it was successful in the sense that it returned a value instead of terminating)."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [18,70,111,114,32,105,110,102,111,114,109,97,116,105,111,110,
                32,111,110]}],
             0,false},
            {text,"\r*save_config*"},
            {sep,[{text,"\r, see section"}],0,false},
            {text,
             "?[Saving Configuration Data](./dependencies_chapter#save_config)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [30,35,35,32,77,111,100,117,108,101,58,84,101,115,116,99,97,115,101,40,
        41,32,45,62,32,91,73,110,102,111,93]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [31,84,101,115,116,32,99,97,115,101,32,105,110,102,111,114,109,97,
            116,105,111,110,32,102,117,110,99,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       "xInfo = {timetrap,Time} | {require,Required} | {require,Name,Required} | {userdata,UserData} | {silent_connections,Conns}"}],
                     0,false}],
                   0,false},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       [25,84,105,109,101,32,61,32,84,105,109,101,86,97,108,
                        32,124,32,84,105,109,101,70,117,110,99]}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      "RTimeVal = MilliSec | {seconds,integer()} | {minutes,integer()} | {hours,integer()}"}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,[{text," TimeFunc = {Mod,Func,Args} | Fun"}],0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [20,77,105,108,108,105,83,101,99,32,61,32,105,110,116,101,
                     103,101,114,40,41]}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},{sep,[{text,"\fMod = atom()"}],0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},{sep,[{text,"\rFunc = atom()"}],0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},{sep,[{text,"\rArgs = list()"}],0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},{sep,[{text,"\vFun = fun()"}],0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "DRequired = Key | {Key,SubKeys} | {Key,Subkey} | {Key,Subkey,SubKeys}"}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,[{text,"\eSubKeys = SubKey | [SubKey]"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,83,117,98,75,101,121,32,61,32,97,116,111,109,40,41]}],
          0,false}],
        0,false}},
      {sep,[{text,[1,42]},{sep,[{text,"\rName = atom()"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,85,115,101,114,68,97,116,97,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,67,111,110,110,115,32,61,32,91,97,116,111,109,40,41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bOPTIONAL"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "½The test case information function. It is supposed to return a list of tagged tuples that specify various properties related to the execution of this particular test case. Properties set by"}],
             0,false},
            {text,"'[Module:Testcase-0](#Module:Testcase-0)"},
            {sep,
             [{text,
               "7override properties set previously for the test case by"}],
             0,false},
            {text,"![Module:group-1](#Module:group-1)"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"![Module:suite-0](#Module:suite-0)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,97,103]}],0,false},
            {text,"\n*timetrap*"},
            {sep,
             [{text,
               [129,115,101,116,115,32,116,104,101,32,109,97,120,105,109,117,
                109,32,116,105,109,101,32,116,104,97,116,32,116,104,101,32,
                116,101,115,116,32,99,97,115,101,32,105,115,32,97,108,108,111,
                119,101,100,32,116,111,32,101,120,101,99,117,116,101,46,32,73,
                102,32,116,104,101,32,116,105,109,101,116,114,97,112,32,116,
                105,109,101,32,105,115,32,101,120,99,101,101,100,101,100,44,
                32,116,104,101,32,116,101,115,116,32,99,97,115,101,32,102,97,
                105,108,115,32,119,105,116,104,32,114,101,97,115,111,110]}],
             0,false},
            {text,
             [18,42,116,105,109,101,116,114,97,112,95,116,105,109,101,111,117,
              116,42]},
            {sep,[{text,[1,46]}],0,false},
            {text,
             "9[Module:init_per_testcase-2](#Module:init_per_testcase-2)"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"7[Module:end_per_testcase-2](#Module:end_per_testcase-2)"},
            {sep,[{text,"$are included in the timetrap time. A"}],0,false},
            {text,"\n*TimeFunc*"},
            {sep,
             [{text,
               "9function can be used to set a new timetrap by returning a"}],
             0,false},
            {text,"\t*TimeVal*"},
            {sep,
             [{text,
               "f. It can also be used to trigger a timetrap time-out by, at some point, returning a value other than a"}],
             0,false},
            {text,"\t*TimeVal*"},
            {sep,
             [{text,
               [26,46,32,70,111,114,32,100,101,116,97,105,108,115,44,32,115,
                101,101,32,115,101,99,116,105,111,110]}],
             0,false},
            {text,"4[Timetrap Time-Outs](./write_test_chapter#timetraps)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,97,103]}],0,false},
            {text,"\t*require*"},
            {sep,
             [{text,
               "Hspecifies configuration variables that are required by the test case (or"}],
             0,false},
            {text,
             [21,42,105,110,105,116,95,112,101,114,95,116,101,115,116,99,97,
              115,101,47,50,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,
             [20,42,101,110,100,95,112,101,114,95,116,101,115,116,99,97,115,
              101,47,50,42]},
            {sep,
             [{text,
               [139,41,46,32,73,102,32,116,104,101,32,114,101,113,117,105,114,
                101,100,32,99,111,110,102,105,103,117,114,97,116,105,111,110,
                32,118,97,114,105,97,98,108,101,115,32,97,114,101,32,110,111,
                116,32,102,111,117,110,100,32,105,110,32,97,110,121,32,111,
                102,32,116,104,101,32,99,111,110,102,105,103,117,114,97,116,
                105,111,110,32,102,105,108,101,115,44,32,116,104,101,32,116,
                101,115,116,32,99,97,115,101,32,105,115,32,115,107,105,112,
                112,101,100,46,32,70,111,114,32,100,101,116,97,105,108,115,32,
                97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,"\t*require*"},
            {sep,[{text,"\efunctionality, see function"}],0,false},
            {text,
             [30,91,99,116,35,114,101,113,117,105,114,101,45,49,93,40,46,47,
              99,116,35,114,101,113,117,105,114,101,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,"\n*timetrap*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\t*require*"},
            {sep,
             [{text,"+is not set, the default values specified by"}],
             0,false},
            {text,"![Module:suite-0](#Module:suite-0)"},
            {sep,[{text,[3,40,111,114]}],0,false},
            {text,"![Module:group-1](#Module:group-1)"},
            {sep,[{text,"\v) are used."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,87,105,116,104]}],0,false},
            {text,"\n*userdata*"},
            {sep,
             [{text,
               "T, the user can specify any test case-related information that can be read by calling"}],
             0,false},
            {text," [ct#userdata-3](./ct#userdata-3)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"/Other tuples than the ones defined are ignored."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "AFor details about the test case information function, see section"}],
             0,false},
            {text,
             "D[Test Case Information Function](./write_test_chapter#info_function)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [145,35,35,32,77,111,100,117,108,101,58,84,101,115,116,99,97,115,101,
        40,67,111,110,102,105,103,41,32,45,62,32,32,116,101,114,109,40,41,32,
        124,32,123,115,107,105,112,44,82,101,97,115,111,110,125,32,124,32,123,
        99,111,109,109,101,110,116,44,67,111,109,109,101,110,116,125,32,124,
        32,123,115,97,118,101,95,99,111,110,102,105,103,44,83,97,118,101,67,
        111,110,102,105,103,125,32,124,32,123,115,107,105,112,95,97,110,100,
        95,115,97,118,101,44,82,101,97,115,111,110,44,83,97,118,101,67,111,
        110,102,105,103,125,32,124,32,101,120,105,116,40,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{sep,[{sep,[{text,"\fA test case."}],0,false}],0,true},null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,[{text,"#Config = SaveConfig = [{Key,Value}]"}],0,false}],
        0,false},
       {sep,[{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [18,67,111,109,109,101,110,116,32,61,32,115,116,114,105,110,103,40,
          41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\tMANDATORY"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [154,84,104,101,32,105,109,112,108,101,109,101,110,116,97,116,
                105,111,110,32,111,102,32,97,32,116,101,115,116,32,99,97,115,
                101,46,32,67,97,108,108,32,116,104,101,32,102,117,110,99,116,
                105,111,110,115,32,116,111,32,116,101,115,116,32,97,110,100,
                32,99,104,101,99,107,32,116,104,101,32,114,101,115,117,108,
                116,46,32,73,102,32,115,111,109,101,116,104,105,110,103,32,
                102,97,105,108,115,44,32,101,110,115,117,114,101,32,116,104,
                101,32,102,117,110,99,116,105,111,110,32,99,97,117,115,101,
                115,32,97,32,114,117,110,116,105,109,101,32,101,114,114,111,
                114,32,111,114,32,99,97,108,108]}],
             0,false},
            {text,
             [24,91,99,116,35,102,97,105,108,45,49,93,40,46,47,99,116,35,102,
              97,105,108,45,49,41]},
            {sep,
             [{text,
               "7(which also causes the test case process to terminate)."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [17,69,108,101,109,101,110,116,115,32,102,114,111,109,32,116,
                104,101]}],
             0,false},
            {text,"\b*Config*"},
            {sep,[{text,"#list can, for example, be read with"}],0,false},
            {text,
             [23,42,112,114,111,112,108,105,115,116,115,58,103,101,116,95,118,
              97,108,117,101,47,50,42]},
            {sep,
             [{text,
               [23,105,110,32,83,84,68,76,73,66,32,40,111,114,32,116,104,101,
                32,109,97,99,114,111]}],
             0,false},
            {text,"\t*?config*"},
            {sep,[{text,"\ndefined in"}],0,false},
            {text,"\b*ct.hrl*"},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "8If you decide not to run the test case after all, return"}],
             0,false},
            {text,[15,42,123,115,107,105,112,44,82,101,97,115,111,110,125,42]},
            {sep,[{text,[1,46]}],0,false},
            {text,"\b*Reason*"},
            {sep,
             [{text,
               [24,105,115,32,116,104,101,110,32,112,114,105,110,116,101,100,
                32,105,110,32,102,105,101,108,100]}],
             0,false},
            {text,"\t*Comment*"},
            {sep,
             [{text,
               [24,111,110,32,116,104,101,32,72,84,77,76,32,114,101,115,117,
                108,116,32,112,97,103,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\"To print some information in field"}],0,false},
            {text,"\t*Comment*"},
            {sep,
             [{text,
               [31,111,110,32,116,104,101,32,72,84,77,76,32,114,101,115,117,
                108,116,32,112,97,103,101,44,32,114,101,116,117,114,110]}],
             0,false},
            {text,
             [19,42,123,99,111,109,109,101,110,116,44,67,111,109,109,101,110,
              116,125,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [142,73,102,32,116,104,101,32,102,117,110,99,116,105,111,110,32,
              114,101,116,117,114,110,115,32,97,110,121,116,104,105,110,103,
              32,101,108,115,101,44,32,116,104,101,32,116,101,115,116,32,99,
              97,115,101,32,105,115,32,99,111,110,115,105,100,101,114,101,100,
              32,115,117,99,99,101,115,115,102,117,108,46,32,84,104,101,32,
              114,101,116,117,114,110,32,118,97,108,117,101,32,97,108,119,97,
              121,115,32,103,101,116,115,32,112,114,105,110,116,101,100,32,
              105,110,32,116,104,101,32,116,101,115,116,32,99,97,115,101,32,
              108,111,103,32,102,105,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "7For details about test case implementation, see section"}],
             0,false},
            {text,"-[Test Cases](./write_test_chapter#test_cases)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [18,70,111,114,32,105,110,102,111,114,109,97,116,105,111,110,
                32,111,110]}],
             0,false},
            {text,"\r*save_config*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[15,42,115,107,105,112,95,97,110,100,95,115,97,118,101,42]},
            {sep,[{text,"\r, see section"}],0,false},
            {text,
             "?[Saving Configuration Data](./dependencies_chapter#save_config)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
