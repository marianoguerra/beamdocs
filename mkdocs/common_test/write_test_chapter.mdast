{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {text,
                       [21,35,32,87,114,105,116,105,110,103,32,84,101,115,116,
                        32,83,117,105,116,101,115]},
                      null},
                     null}},
                   {sep,
                    [{text,
                      [25,60,97,32,110,97,109,101,61,34,105,110,116,114,111,
                       34,62,105,110,116,114,111,60,47,97,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {text,"!## Support for Test Suite Authors"},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,[{text,[3,84,104,101]}],0,false},
                            {text,"\b[ct](ct)"},
                            {sep,
                             [{text,
                               "dmodule provides the main interface for writing test cases. This includes for example, the following:"}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,
                       {above,
                        {sep,
                         [{text,[1,42]},
                          {text,"\"Functions for printing and logging"}],
                         0,false},
                        {sep,
                         [{text,[1,42]},
                          {text,"(Functions for reading configuration data"}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {text,
                          "6Function for terminating a test case with error reason"}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {text,
                         "6Function for adding comments to the HTML overview page"}],
                       0,false}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               "-For details about these functions, see module"}],
                             0,false},
                            {text,"\b[ct](ct)"},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,[{text,[3,84,104,101]}],0,false},
                            {text,"\r*Common Test*"},
                            {sep,
                             [{text,
                               "-application also includes other modules named"}],
                             0,false},
                            {text,
                             [16,42,99,116,95,60,99,111,109,112,111,110,101,
                              110,116,62,42]},
                            {sep,
                             [{text,
                               "}, which provide various support, mainly simplified use of communication protocols such as RPC, SNMP, FTP, Telnet, and others."}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}}],
                    0,false}},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {text,
                        [14,35,35,32,84,101,115,116,32,83,117,105,116,101,
                         115]},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "|A test suite is an ordinary Erlang module that contains test cases. It is recommended that the module has a name on the form"}],
                            0,false},
                           {text,"\r**_SUITE.erl*"},
                           {sep,
                            [{text,
                              ";. Otherwise, the directory and auto compilation function in"}],
                            0,false},
                           {text,"\r*Common Test*"},
                           {sep,
                            [{text,
                              "+cannot locate it (at least not by default)."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [31,73,116,32,105,115,32,97,108,115,111,32,114,
                               101,99,111,109,109,101,110,100,101,100,32,116,
                               104,97,116,32,116,104,101]}],
                            0,false},
                           {text,"\b*ct.hrl*"},
                           {sep,
                            [{text,
                              "2header file is included in all test suite modules."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "+Each test suite module must export function"}],
                            0,false},
                           {text,
                            "6[common_test#Module:all-0](./common_test#Module:all-0)"},
                           {sep,
                            [{text,
                              "^, which returns the list of all test case groups and test cases to be executed in that module."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "SThe callback functions to be implemented by the test suite are all listed in module"}],
                            0,false},
                           {text,
                            [26,91,99,111,109,109,111,110,95,116,101,115,116,
                             93,40,99,111,109,109,111,110,95,116,101,115,116,
                             41]},
                           {sep,
                            [{text,
                              "D. They are also described in more detail later in this User's Guide."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false}},
                 {sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {text,
                       [25,35,35,32,73,110,105,116,32,97,110,100,32,69,110,
                        100,32,112,101,114,32,83,117,105,116,101]},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "GEach test suite module can contain the optional configuration functions"}],
                           0,false},
                          {text,
                           "L[common_test#Module:init_per_suite-1](./common_test#Module:init_per_suite-1)"},
                          {sep,[{text,[3,97,110,100]}],0,false},
                          {text,
                           "J[common_test#Module:end_per_suite-1](./common_test#Module:end_per_suite-1)"},
                          {sep,
                           [{text,
                             "?. If the init function is defined, so must the end function be."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,[{text,[2,73,102]}],0,false},
                          {text,
                           [16,42,105,110,105,116,95,112,101,114,95,115,117,
                            105,116,101,42]},
                          {sep,
                           [{text,
                             "µexists, it is called initially before the test cases are executed. It typically contains initializations common for all test cases in the suite, which are only to be performed once."}],
                           0,false},
                          {text,
                           [16,42,105,110,105,116,95,112,101,114,95,115,117,
                            105,116,101,42]},
                          {sep,
                           [{text,
                             "gis recommended for setting up and verifying state and environment on the System Under Test (SUT) or the"}],
                           0,false},
                          {text,"\r*Common Test*"},
                          {sep,
                           [{text,
                             [139,104,111,115,116,32,110,111,100,101,44,32,
                              111,114,32,98,111,116,104,44,32,115,111,32,116,
                              104,97,116,32,116,104,101,32,116,101,115,116,32,
                              99,97,115,101,115,32,105,110,32,116,104,101,32,
                              115,117,105,116,101,32,101,120,101,99,117,116,
                              101,115,32,99,111,114,114,101,99,116,108,121,46,
                              32,84,104,101,32,102,111,108,108,111,119,105,
                              110,103,32,97,114,101,32,101,120,97,109,112,108,
                              101,115,32,111,102,32,105,110,105,116,105,97,
                              108,32,99,111,110,102,105,103,117,114,97,116,
                              105,111,110,32,111,112,101,114,97,116,105,111,
                              110,115,58]}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,
                     {sep,
                      [{text,[1,42]},
                       {text,
                        [31,79,112,101,110,105,110,103,32,97,32,99,111,110,
                         110,101,99,116,105,111,110,32,116,111,32,116,104,101,
                         32,83,85,84]}],
                      0,false},
                     {sep,
                      [{text,[1,42]},
                       {text,
                        [23,73,110,105,116,105,97,108,105,122,105,110,103,32,
                         97,32,100,97,116,97,98,97,115,101]}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {text,
                       [30,82,117,110,110,105,110,103,32,97,110,32,105,110,
                        115,116,97,108,108,97,116,105,111,110,32,115,99,114,
                        105,112,116]}],
                     0,false}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [15,42,101,110,100,95,112,101,114,95,115,117,105,
                            116,101,42]},
                          {sep,
                           [{text,
                             [152,105,115,32,99,97,108,108,101,100,32,97,115,
                              32,116,104,101,32,102,105,110,97,108,32,115,116,
                              97,103,101,32,111,102,32,116,104,101,32,116,101,
                              115,116,32,115,117,105,116,101,32,101,120,101,
                              99,117,116,105,111,110,32,40,97,102,116,101,114,
                              32,116,104,101,32,108,97,115,116,32,116,101,115,
                              116,32,99,97,115,101,32,104,97,115,32,102,105,
                              110,105,115,104,101,100,41,46,32,84,104,101,32,
                              102,117,110,99,116,105,111,110,32,105,115,32,
                              109,101,97,110,116,32,116,111,32,98,101,32,117,
                              115,101,100,32,102,111,114,32,99,108,101,97,110,
                              105,110,103,32,117,112,32,97,102,116,101,114]}],
                           0,false},
                          {text,
                           [16,42,105,110,105,116,95,112,101,114,95,115,117,
                            105,116,101,42]},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [16,42,105,110,105,116,95,112,101,114,95,115,117,
                            105,116,101,42]},
                          {sep,[{text,[3,97,110,100]}],0,false},
                          {text,
                           [15,42,101,110,100,95,112,101,114,95,115,117,105,
                            116,101,42]},
                          {sep,
                           [{text,
                             "¾execute on dedicated Erlang processes, just like the test cases do. The result of these functions is however not included in the test run statistics of successful, failed, and skipped cases."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             [15,84,104,101,32,97,114,103,117,109,101,110,116,
                              32,116,111]}],
                           0,false},
                          {text,
                           [16,42,105,110,105,116,95,112,101,114,95,115,117,
                            105,116,101,42]},
                          {sep,[{text,[2,105,115]}],0,false},
                          {text,"\b*Config*"},
                          {sep,
                           [{text,
                             "m, that is, the same key-value list of runtime configuration data that each test case takes as input argument."}],
                           0,false},
                          {text,
                           [16,42,105,110,105,116,95,112,101,114,95,115,117,
                            105,116,101,42]},
                          {sep,
                           [{text,
                             "Zcan modify this parameter with information that the test cases need. The possibly modified"}],
                           0,false},
                          {text,"\b*Config*"},
                          {sep,
                           [{text,
                             ")list is the return value of the function."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,[{text,[2,73,102]}],0,false},
                          {text,
                           [16,42,105,110,105,116,95,112,101,114,95,115,117,
                            105,116,101,42]},
                          {sep,
                           [{text,
                             "Lfails, all test cases in the test suite are skipped automatically (so called"}],
                           0,false},
                          {text,
                           [16,42,42,97,117,116,111,32,115,107,105,112,112,
                            101,100,42,42]},
                          {sep,[{text,"\f), including"}],0,false},
                          {text,
                           [15,42,101,110,100,95,112,101,114,95,115,117,105,
                            116,101,42]},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             [14,78,111,116,105,99,101,32,116,104,97,116,32,
                              105,102]}],
                           0,false},
                          {text,
                           [16,42,105,110,105,116,95,112,101,114,95,115,117,
                            105,116,101,42]},
                          {sep,[{text,[3,97,110,100]}],0,false},
                          {text,
                           [15,42,101,110,100,95,112,101,114,95,115,117,105,
                            116,101,42]},
                          {sep,
                           [{text,
                             [26,100,111,32,110,111,116,32,101,120,105,115,
                              116,32,105,110,32,116,104,101,32,115,117,105,
                              116,101,44]}],
                           0,false},
                          {text,"\r*Common Test*"},
                          {sep,
                           [{text,
                             "¡calls dummy functions (with the same names) instead, so that output generated by hook functions can be saved to the log files for these dummies. For details, see"}],
                           0,false},
                          {text,
                           "4[Common Test Hooks](./ct_hooks_chapter#manipulating)"},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}},
                {sep,
                 [{text,"'<a name=\"per_testcase\">per_testcase</a>"},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {text,
                      [29,35,35,32,73,110,105,116,32,97,110,100,32,69,110,100,
                       32,112,101,114,32,84,101,115,116,32,67,97,115,101]},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            "GEach test suite module can contain the optional configuration functions"}],
                          0,false},
                         {text,
                          "R[common_test#Module:init_per_testcase-2](./common_test#Module:init_per_testcase-2)"},
                         {sep,[{text,[3,97,110,100]}],0,false},
                         {text,
                          "P[common_test#Module:end_per_testcase-2](./common_test#Module:end_per_testcase-2)"},
                         {sep,
                          [{text,
                            "?. If the init function is defined, so must the end function be."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,[{text,[2,73,102]}],0,false},
                         {text,
                          [19,42,105,110,105,116,95,112,101,114,95,116,101,
                           115,116,99,97,115,101,42]},
                         {sep,
                          [{text,
                            [141,101,120,105,115,116,115,44,32,105,116,32,105,
                             115,32,99,97,108,108,101,100,32,98,101,102,111,
                             114,101,32,101,97,99,104,32,116,101,115,116,32,
                             99,97,115,101,32,105,110,32,116,104,101,32,115,
                             117,105,116,101,46,32,73,116,32,116,121,112,105,
                             99,97,108,108,121,32,99,111,110,116,97,105,110,
                             115,32,105,110,105,116,105,97,108,105,122,97,116,
                             105,111,110,32,116,104,97,116,32,109,117,115,116,
                             32,98,101,32,100,111,110,101,32,102,111,114,32,
                             101,97,99,104,32,116,101,115,116,32,99,97,115,
                             101,32,40,97,110,97,108,111,103,32,116,111]}],
                          0,false},
                         {text,
                          [16,42,105,110,105,116,95,112,101,114,95,115,117,
                           105,116,101,42]},
                         {sep,
                          [{text,
                            [15,102,111,114,32,116,104,101,32,115,117,105,116,
                             101,41,46]}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          [20,42,101,110,100,95,112,101,114,95,116,101,115,
                           116,99,97,115,101,47,50,42]},
                         {sep,
                          [{text,
                            "Cis called after each test case has finished, enabling cleanup after"}],
                          0,false},
                         {text,
                          [19,42,105,110,105,116,95,112,101,114,95,116,101,
                           115,116,99,97,115,101,42]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          [299,84,104,101,32,102,105,114,115,116,32,97,114,
                           103,117,109,101,110,116,32,116,111,32,116,104,101,
                           115,101,32,102,117,110,99,116,105,111,110,115,32,
                           105,115,32,116,104,101,32,110,97,109,101,32,111,
                           102,32,116,104,101,32,116,101,115,116,32,99,97,115,
                           101,46,32,84,104,105,115,32,118,97,108,117,101,32,
                           99,97,110,32,98,101,32,117,115,101,100,32,119,105,
                           116,104,32,112,97,116,116,101,114,110,32,109,97,
                           116,99,104,105,110,103,32,105,110,32,102,117,110,
                           99,116,105,111,110,32,99,108,97,117,115,101,115,32,
                           111,114,32,99,111,110,100,105,116,105,111,110,97,
                           108,32,101,120,112,114,101,115,115,105,111,110,115,
                           32,116,111,32,99,104,111,111,115,101,32,100,105,
                           102,102,101,114,101,110,116,32,105,110,105,116,105,
                           97,108,105,122,97,116,105,111,110,32,97,110,100,32,
                           99,108,101,97,110,117,112,32,114,111,117,116,105,
                           110,101,115,32,102,111,114,32,100,105,102,102,101,
                           114,101,110,116,32,116,101,115,116,32,99,97,115,
                           101,115,44,32,111,114,32,112,101,114,102,111,114,
                           109,32,116,104,101,32,115,97,109,101,32,114,111,
                           117,116,105,110,101,32,102,111,114,32,109,97,110,
                           121,44,32,111,114,32,97,108,108,44,32,116,101,115,
                           116,32,99,97,115,101,115,46]}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [26,84,104,101,32,115,101,99,111,110,100,32,97,
                             114,103,117,109,101,110,116,32,105,115,32,116,
                             104,101]}],
                          0,false},
                         {text,"\b*Config*"},
                         {sep,
                          [{text,
                            "^key-value list of runtime configuration data, which has the same value as the list returned by"}],
                          0,false},
                         {text,
                          [16,42,105,110,105,116,95,112,101,114,95,115,117,
                           105,116,101,42]},
                         {sep,[{text,[1,46]}],0,false},
                         {text,
                          [21,42,105,110,105,116,95,112,101,114,95,116,101,
                           115,116,99,97,115,101,47,50,42]},
                         {sep,
                          [{text,
                            "Ccan modify this parameter or return it \"as is\". The return value of"}],
                          0,false},
                         {text,
                          [21,42,105,110,105,116,95,112,101,114,95,116,101,
                           115,116,99,97,115,101,47,50,42]},
                         {sep,
                          [{text,
                            [22,105,115,32,112,97,115,115,101,100,32,97,115,
                             32,112,97,114,97,109,101,116,101,114]}],
                          0,false},
                         {text,"\b*Config*"},
                         {sep,
                          [{text,
                            [24,116,111,32,116,104,101,32,116,101,115,116,32,
                             99,97,115,101,32,105,116,115,101,108,102,46]}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [19,84,104,101,32,114,101,116,117,114,110,32,118,
                             97,108,117,101,32,111,102]}],
                          0,false},
                         {text,
                          [20,42,101,110,100,95,112,101,114,95,116,101,115,
                           116,99,97,115,101,47,50,42]},
                         {sep,
                          [{text,
                            "4is ignored by the test server, with exception of the"}],
                          0,false},
                         {text,
                          "F[dependencies_chapter#save_config](./dependencies_chapter#save_config)"},
                         {sep,[{text,[3,97,110,100]}],0,false},
                         {text,[6,42,102,97,105,108,42]},
                         {sep,[{text,[6,116,117,112,108,101,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          [18,42,101,110,100,95,112,101,114,95,116,101,115,
                           116,99,97,115,101,42]},
                         {sep,
                          [{text,
                            [150,99,97,110,32,99,104,101,99,107,32,105,102,32,
                             116,104,101,32,116,101,115,116,32,99,97,115,101,
                             32,119,97,115,32,115,117,99,99,101,115,115,102,
                             117,108,46,32,40,119,104,105,99,104,32,105,110,
                             32,116,117,114,110,32,99,97,110,32,100,101,116,
                             101,114,109,105,110,101,32,104,111,119,32,99,108,
                             101,97,110,117,112,32,105,115,32,116,111,32,98,
                             101,32,112,101,114,102,111,114,109,101,100,41,46,
                             32,84,104,105,115,32,105,115,32,100,111,110,101,
                             32,98,121,32,114,101,97,100,105,110,103,32,116,
                             104,101,32,118,97,108,117,101,32,116,97,103,103,
                             101,100,32,119,105,116,104]}],
                          0,false},
                         {text,"\v*tc_status*"},
                         {sep,[{text,[4,102,114,111,109]}],0,false},
                         {text,"\b*Config*"},
                         {sep,
                          [{text,"$. The value is one of the following:"}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,
                    {sep,
                     [{text,[1,42]},{sep,[{text,[4,42,111,107,42]}],0,false}],
                     0,false},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,
                                [17,42,123,102,97,105,108,101,100,44,82,101,
                                 97,115,111,110,125,42]}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                               {text,"\b*Reason*"},
                               {sep,[{text,[2,105,115]}],0,false},
                               {text,
                                [18,42,116,105,109,101,116,114,97,112,95,116,
                                 105,109,101,111,117,116,42]},
                               {sep,
                                [{text,
                                  [18,44,32,105,110,102,111,114,109,97,116,
                                   105,111,110,32,102,114,111,109]}],
                                0,false},
                               {text,"\b*exit/1*"},
                               {sep,
                                [{text,
                                  [31,44,32,111,114,32,100,101,116,97,105,108,
                                   115,32,111,102,32,97,32,114,117,110,116,
                                   105,109,101,32,101,114,114,111,114]}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               [18,42,123,115,107,105,112,112,101,100,44,82,
                                101,97,115,111,110,125,42]}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                              {text,"\b*Reason*"},
                              {sep,
                               [{text,
                                 [23,105,115,32,97,32,117,115,101,114,45,115,
                                  112,101,99,105,102,105,99,32,116,101,114,
                                  109]}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}}],
                      0,false}],
                    0,false}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,[{text,"\bFunction"}],0,false},
                         {text,
                          [20,42,101,110,100,95,112,101,114,95,116,101,115,
                           116,99,97,115,101,47,50,42]},
                         {sep,
                          [{text,
                            "=is even called if a test case terminates because of a call to"}],
                          0,false},
                         {text,
                          "<[ct#abort_current_testcase-1](./ct#abort_current_testcase-1)"},
                         {sep,
                          [{text,"(, or after a timetrap time-out. However,"}],
                          0,false},
                         {text,
                          [18,42,101,110,100,95,112,101,114,95,116,101,115,
                           116,99,97,115,101,42]},
                         {sep,
                          [{text,
                            "Tthen executes on a different process than the test case function. In this situation,"}],
                          0,false},
                         {text,
                          [18,42,101,110,100,95,112,101,114,95,116,101,115,
                           116,99,97,115,101,42]},
                         {sep,
                          [{text,
                            "?cannot change the reason for test case termination by returning"}],
                          0,false},
                         {text,
                          [15,42,123,102,97,105,108,44,82,101,97,115,111,110,
                           125,42]},
                         {sep,
                          [{text,
                            [17,111,114,32,115,97,118,101,32,100,97,116,97,32,
                             119,105,116,104]}],
                          0,false},
                         {text,
                          [20,42,123,115,97,118,101,95,99,111,110,102,105,103,
                           44,68,97,116,97,125,42]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "4The test case is skipped in the following two cases:"}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,[{text,[2,73,102]}],0,false},
                       {text,
                        [19,42,105,110,105,116,95,112,101,114,95,116,101,115,
                         116,99,97,115,101,42]},
                       {sep,
                        [{text,
                          [15,99,114,97,115,104,101,115,32,40,99,97,108,108,
                           101,100]}],
                        0,false},
                       {text,
                        [16,42,42,97,117,116,111,32,115,107,105,112,112,101,
                         100,42,42]},
                       {sep,[{text,[2,41,46]}],0,false}],
                      0,false}],
                    0,false},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,[{text,[2,73,102]}],0,false},
                       {text,
                        [19,42,105,110,105,116,95,112,101,114,95,116,101,115,
                         116,99,97,115,101,42]},
                       {sep,
                        [{text,
                          [15,114,101,116,117,114,110,115,32,97,32,116,117,
                           112,108,101]}],
                        0,false},
                       {text,
                        [15,42,123,115,107,105,112,44,82,101,97,115,111,110,
                         125,42]},
                       {sep,[{text,[7,40,99,97,108,108,101,100]}],0,false},
                       {text,
                        [16,42,42,117,115,101,114,32,115,107,105,112,112,101,
                         100,42,42]},
                       {sep,[{text,[2,41,46]}],0,false}],
                      0,false}],
                    0,false}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            "TThe test case can also be marked as failed without executing it by returning a tuple"}],
                          0,false},
                         {text,
                          [15,42,123,102,97,105,108,44,82,101,97,115,111,110,
                           125,42]},
                         {sep,[{text,[4,102,114,111,109]}],0,false},
                         {text,
                          [19,42,105,110,105,116,95,112,101,114,95,116,101,
                           115,116,99,97,115,101,42]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {above,
                      {above,
                       {text,
                        [15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,
                         34]},
                       {sep,
                        [{text,[4,32,32,32,32]},
                         {sep,
                          [{sep,
                            [{above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{sep,[{text,[2,73,102]}],0,false},
                                    {text,
                                     [19,42,105,110,105,116,95,112,101,114,95,
                                      116,101,115,116,99,97,115,101,42]},
                                    {sep,
                                     [{text,
                                       [19,99,114,97,115,104,101,115,44,32,
                                        111,114,32,114,101,116,117,114,110,
                                        115]}],
                                     0,false},
                                    {text,
                                     [15,42,123,115,107,105,112,44,82,101,97,
                                      115,111,110,125,42]},
                                    {sep,[{text,[2,111,114]}],0,false},
                                    {text,
                                     [15,42,123,102,97,105,108,44,82,101,97,
                                      115,111,110,125,42]},
                                    {sep,[{text,"\n, function"}],0,false},
                                    {text,
                                     [18,42,101,110,100,95,112,101,114,95,116,
                                      101,115,116,99,97,115,101,42]},
                                    {sep,
                                     [{text,
                                       [14,105,115,32,110,111,116,32,99,97,
                                        108,108,101,100,46]}],
                                     0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}}],
                            0,false}],
                          0,true}],
                        0,false}},
                      {text,[0]}},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,"'If it is determined during execution of"}],
                          0,false},
                         {text,
                          [18,42,101,110,100,95,112,101,114,95,116,101,115,
                           116,99,97,115,101,42]},
                         {sep,
                          [{text,
                            "Ethat the status of a successful test case is to be changed to failed,"}],
                          0,false},
                         {text,
                          [18,42,101,110,100,95,112,101,114,95,116,101,115,
                           116,99,97,115,101,42]},
                         {sep,
                          [{text,
                            [20,99,97,110,32,114,101,116,117,114,110,32,116,
                             104,101,32,116,117,112,108,101]}],
                          0,false},
                         {text,
                          [15,42,123,102,97,105,108,44,82,101,97,115,111,110,
                           125,42]},
                         {sep,[{text,[6,40,119,104,101,114,101]}],0,false},
                         {text,"\b*Reason*"},
                         {sep,
                          [{text,"#describes why the test case fails)."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,[{text,[2,65,115]}],0,false},
                         {text,
                          [19,42,105,110,105,116,95,112,101,114,95,116,101,
                           115,116,99,97,115,101,42]},
                         {sep,[{text,[3,97,110,100]}],0,false},
                         {text,
                          [18,42,101,110,100,95,112,101,114,95,116,101,115,
                           116,99,97,115,101,42]},
                         {sep,
                          [{text,
                            [137,101,120,101,99,117,116,101,32,111,110,32,116,
                             104,101,32,115,97,109,101,32,69,114,108,97,110,
                             103,32,112,114,111,99,101,115,115,32,97,115,32,
                             116,104,101,32,116,101,115,116,32,99,97,115,101,
                             44,32,112,114,105,110,116,111,117,116,115,32,102,
                             114,111,109,32,116,104,101,115,101,32,99,111,110,
                             102,105,103,117,114,97,116,105,111,110,32,102,
                             117,110,99,116,105,111,110,115,32,97,114,101,32,
                             105,110,99,108,117,100,101,100,32,105,110,32,116,
                             104,101,32,116,101,115,116,32,99,97,115,101,32,
                             108,111,103,32,102,105,108,101,46]}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false}},
               {sep,
                [{text,"#<a name=\"test_cases\">test_cases</a>"},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,{above,{text,"\r## Test Cases"},null},null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "ÇThe smallest unit that the test server is concerned with is a test case. Each test case can test many things, for example, make several calls to the same interface function with different parameters."}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "hThe author can choose to put many or few tests into each test case. Some things to keep in mind follows:"}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,
                        [335,77,97,110,121,32,115,109,97,108,108,32,116,101,
                         115,116,32,99,97,115,101,115,32,116,101,110,100,32,
                         116,111,32,114,101,115,117,108,116,32,105,110,32,101,
                         120,116,114,97,44,32,97,110,100,32,112,111,115,115,
                         105,98,108,121,32,100,117,112,108,105,99,97,116,101,
                         100,32,99,111,100,101,44,32,97,115,32,119,101,108,
                         108,32,97,115,32,115,108,111,119,32,116,101,115,116,
                         32,101,120,101,99,117,116,105,111,110,32,98,101,99,
                         97,117,115,101,32,111,102,32,108,97,114,103,101,32,
                         111,118,101,114,104,101,97,100,32,102,111,114,32,105,
                         110,105,116,105,97,108,105,122,97,116,105,111,110,
                         115,32,97,110,100,32,99,108,101,97,110,117,112,115,
                         46,32,65,118,111,105,100,32,100,117,112,108,105,99,
                         97,116,101,100,32,99,111,100,101,44,32,102,111,114,
                         32,101,120,97,109,112,108,101,44,32,98,121,32,117,
                         115,105,110,103,32,99,111,109,109,111,110,32,104,101,
                         108,112,32,102,117,110,99,116,105,111,110,115,46,32,
                         79,116,104,101,114,119,105,115,101,44,32,116,104,101,
                         32,114,101,115,117,108,116,105,110,103,32,115,117,
                         105,116,101,32,98,101,99,111,109,101,115,32,100,105,
                         102,102,105,99,117,108,116,32,116,111,32,114,101,97,
                         100,32,97,110,100,32,117,110,100,101,114,115,116,97,
                         110,100,44,32,97,110,100,32,101,120,112,101,110,115,
                         105,118,101,32,116,111,32,109,97,105,110,116,97,105,
                         110,46]}],
                      0,false}],
                    0,false},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,
                        [141,76,97,114,103,101,114,32,116,101,115,116,32,99,
                         97,115,101,115,32,109,97,107,101,32,105,116,32,104,
                         97,114,100,101,114,32,116,111,32,116,101,108,108,32,
                         119,104,97,116,32,119,101,110,116,32,119,114,111,110,
                         103,32,105,102,32,105,116,32,102,97,105,108,115,46,
                         32,65,108,115,111,44,32,108,97,114,103,101,32,112,
                         111,114,116,105,111,110,115,32,111,102,32,116,101,
                         115,116,32,99,111,100,101,32,114,105,115,107,32,98,
                         101,105,110,103,32,115,107,105,112,112,101,100,32,
                         119,104,101,110,32,101,114,114,111,114,115,32,111,99,
                         99,117,114,46]}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       "¶Readability and maintainability suffer when test cases become too large and extensive. It is not certain that the resulting log files reflect very well the number of tests performed."}],
                     0,false}],
                   0,false}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "*The test case function takes one argument,"}],
                         0,false},
                        {text,"\b*Config*"},
                        {sep,
                         [{text,
                           "2, which contains configuration information such as"}],
                         0,false},
                        {text,"\n*data_dir*"},
                        {sep,[{text,[3,97,110,100]}],0,false},
                        {text,"\n*priv_dir*"},
                        {sep,
                         [{text,"'. (For details about these, see section"}],
                         0,false},
                        {text,
                         ".[Data and Private Directories](#data_priv_dir)"},
                        {sep,
                         [{text,
                           [14,46,32,84,104,101,32,118,97,108,117,101,32,111,
                            102]}],
                         0,false},
                        {text,"\b*Config*"},
                        {sep,
                         [{text,
                           "=at the time of the call, is the same as the return value from"}],
                         0,false},
                        {text,
                         [19,42,105,110,105,116,95,112,101,114,95,116,101,115,
                          116,99,97,115,101,42]},
                        {sep,
                         [{text,
                           [20,44,32,109,101,110,116,105,111,110,101,100,32,
                            101,97,114,108,105,101,114,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {above,
                     {above,
                      {text,
                       [15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,
                        34]},
                      {sep,
                       [{text,[4,32,32,32,32]},
                        {sep,
                         [{sep,
                           [{above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      [31,84,104,101,32,116,101,115,116,32,99,
                                       97,115,101,32,102,117,110,99,116,105,
                                       111,110,32,97,114,103,117,109,101,110,
                                       116]}],
                                    0,false},
                                   {text,"\b*Config*"},
                                   {sep,
                                    [{text,
                                      "dis not to be confused with the information that can be retrieved from the configuration files (using"}],
                                    0,false},
                                   {text,
                                    "$[ct#get_config-1](./ct#get_config-1)"},
                                   {sep,
                                    [{text,
                                      [25,41,46,32,84,104,101,32,116,101,115,
                                       116,32,99,97,115,101,32,97,114,103,117,
                                       109,101,110,116]}],
                                    0,false},
                                   {text,"\b*Config*"},
                                   {sep,
                                    [{text,
                                      "Îis to be used for runtime configuration of the test suite and the test cases, while configuration files are to contain data related to the SUT. These two types of configuration data are handled differently."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}}],
                           0,false}],
                         0,true}],
                       0,false}},
                     {text,[0]}},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,[{text,"\fAs parameter"}],0,false},
                        {text,"\b*Config*"},
                        {sep,
                         [{text,
                           "dis a list of key-value tuples, that is, a data type called a property list, it can be handled by the"}],
                         0,false},
                        {text,
                         [31,91,115,116,100,108,105,98,47,112,114,111,112,108,
                          105,115,116,115,93,40,46,47,112,114,111,112,108,105,
                          115,116,115,41]},
                        {sep,
                         [{text,
                           "Lmodule. A value can, for example, be searched for and returned with function"}],
                         0,false},
                        {text,
                         "?[stdlib/proplists#get_value-2](../stdlib/proplists#get_value-2)"},
                        {sep,
                         [{text,"%. Also, or alternatively, the general"}],
                         0,false},
                        {text,
                         [23,91,115,116,100,108,105,98,47,108,105,115,116,115,
                          93,40,46,47,108,105,115,116,115,41]},
                        {sep,
                         [{text,
                           "Lmodule contains useful functions. Normally, the only operations performed on"}],
                         0,false},
                        {text,"\b*Config*"},
                        {sep,
                         [{text,
                           ">is insert (adding a tuple to the head of the list) and lookup."}],
                         0,false},
                        {text,"\r*Common Test*"},
                        {sep,
                         [{text,
                           [29,112,114,111,118,105,100,101,115,32,97,32,115,
                            105,109,112,108,101,32,109,97,99,114,111,32,110,
                            97,109,101,100]}],
                         0,false},
                        {text,"\t*?config*"},
                        {sep,
                         [{text,"%, which returns a value of an item in"}],
                         0,false},
                        {text,"\b*Config*"},
                        {sep,[{text,"\egiven the key (exactly like"}],0,false},
                        {text,
                         [21,42,112,114,111,112,108,105,115,116,115,58,103,
                          101,116,95,118,97,108,117,101,42]},
                        {sep,[{text,"\v). Example:"}],0,false},
                        {text,"%*PrivDir = ?config(priv_dir, Config)*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "FIf the test case function crashes or exits purposely, it is considered"}],
                         0,false},
                        {text,"\n**failed**"},
                        {sep,
                         [{text,
                           "z. If it returns a value (no matter what value), it is considered successful. An exception to this rule is the return value"}],
                         0,false},
                        {text,
                         [15,42,123,115,107,105,112,44,82,101,97,115,111,110,
                          125,42]},
                        {sep,
                         [{text,
                           "W. If this tuple is returned, the test case is considered skipped and is logged as such."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"\"If the test case returns the tuple"}],
                         0,false},
                        {text,
                         [19,42,123,99,111,109,109,101,110,116,44,67,111,109,
                          109,101,110,116,125,42]},
                        {sep,
                         [{text,"', the case is considered successful and"}],
                         0,false},
                        {text,"\t*Comment*"},
                        {sep,
                         [{text,
                           "=is printed in the overview log file. This is equal to calling"}],
                         0,false},
                        {text,
                         [30,91,99,116,35,99,111,109,109,101,110,116,45,49,93,
                          40,46,47,99,116,35,99,111,109,109,101,110,116,45,49,
                          41]},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}},
              {sep,
               [{text,")<a name=\"info_function\">info_function</a>"},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,{text,"!## Test Case Information Function"},null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "üFor each test case function there can be an extra function with the same name but without arguments. This is the test case information function. It is expected to return a list of tagged tuples that specifies various properties regarding the test case."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,"(The following tags have special meaning:"}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,
                  {text,[4,60,100,108,62]},
                  {nest,4,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,"\btimetrap"}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{sep,
                                       [{text,
                                         "tSets the maximum time the test case is allowed to execute. If this time is exceeded, the test case fails with reason"}],
                                       0,false},
                                      {text,
                                       [16,116,105,109,101,116,114,97,112,95,
                                        116,105,109,101,111,117,116]},
                                      {sep,[{text,"\r. Notice that"}],0,false},
                                      {text,
                                       [17,105,110,105,116,95,112,101,114,95,
                                        116,101,115,116,99,97,115,101]},
                                      {sep,[{text,[3,97,110,100]}],0,false},
                                      {text,
                                       [16,101,110,100,95,112,101,114,95,116,
                                        101,115,116,99,97,115,101]},
                                      {sep,
                                       [{text,
                                         ";are included in the timetrap time. For details, see section"}],
                                       0,false},
                                      {text,
                                       [18,84,105,109,101,116,114,97,112,32,
                                        84,105,109,101,45,79,117,116,115]},
                                      {sep,[{text,[1,46]}],0,false}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,[{text,"\buserdata"}],0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{sep,
                                     [{text,
                                       "]Specifies any data related to the test case. This data can be retrieved at any time using the"}],
                                     0,false},
                                    {text,"\rct#userdata-3"},
                                    {sep,
                                     [{text,
                                       [17,117,116,105,108,105,116,121,32,102,
                                        117,110,99,116,105,111,110,46]}],
                                     0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               [18,115,105,108,101,110,116,95,99,111,110,110,
                                101,99,116,105,111,110,115]}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,
                                   [{text,
                                     [24,70,111,114,32,100,101,116,97,105,108,
                                      115,44,32,115,101,101,32,115,101,99,116,
                                      105,111,110]}],
                                   0,false},
                                  {text,
                                   [18,83,105,108,101,110,116,32,67,111,110,
                                    110,101,99,116,105,111,110,115]},
                                  {sep,[{text,[1,46]}],0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,[7,114,101,113,117,105,114,101]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {sep,
                          [{above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   "»Specifies configuration variables required by the test case. If the required configuration variables are not found in any of the test system configuration files, the test case is skipped."}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,
                                   [{text,
                                     "¬A required variable can also be given a default value to be used if the variable is not found in any configuration file. To specify a default value, add a tuple on the form"}],
                                   0,false},
                                  {text,
                                   "){default_config,ConfigVariableName,Value}"},
                                  {sep,
                                   [{text,
                                     "Kto the test case information list (the position in the list is irrelevant)."}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,[{text,"\tExamples:"}],0,false}],
                               0,true},
                              null},
                             null}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {above,
                               {above,
                                {text,[3,96,96,96]},
                                {sep,
                                 [{text,
                                   "Å\n testcase1() -> \n     [{require, ftp},\n      {default_config, ftp, [{ftp, \"my_ftp_host\"},\n                             {username, \"aladdin\"},\n                             {password, \"sesame\"}]}}]."}],
                                 0,true}},
                               {text,[3,96,96,96]}},
                              null},
                             null}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {above,
                               {above,
                                {text,[3,96,96,96]},
                                {sep,
                                 [{text,
                                   [275,10,32,116,101,115,116,99,97,115,101,
                                    50,40,41,32,45,62,32,10,32,32,32,32,32,91,
                                    123,114,101,113,117,105,114,101,44,32,117,
                                    110,105,120,95,116,101,108,110,101,116,44,
                                    32,117,110,105,120,125,44,10,32,32,32,32,
                                    32,32,123,114,101,113,117,105,114,101,44,
                                    32,123,117,110,105,120,44,32,91,116,101,
                                    108,110,101,116,44,32,117,115,101,114,110,
                                    97,109,101,44,32,112,97,115,115,119,111,
                                    114,100,93,125,125,44,10,32,32,32,32,32,
                                    32,123,100,101,102,97,117,108,116,95,99,
                                    111,110,102,105,103,44,32,117,110,105,120,
                                    44,32,91,123,116,101,108,110,101,116,44,
                                    32,34,109,121,95,116,101,108,110,101,116,
                                    95,104,111,115,116,34,125,44,10,32,32,32,
                                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                    32,32,32,32,32,32,32,32,32,32,32,32,32,
                                    123,117,115,101,114,110,97,109,101,44,32,
                                    34,97,108,97,100,100,105,110,34,125,44,10,
                                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                    32,32,123,112,97,115,115,119,111,114,100,
                                    44,32,34,115,101,115,97,109,101,34,125,93,
                                    125,125,93,46]}],
                                 0,true}},
                               {text,[3,96,96,96]}},
                              null},
                             null}}],
                          0,false},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}}}},
                 {text,[5,60,47,100,108,62]}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [26,70,111,114,32,109,111,114,101,32,105,110,102,
                           111,114,109,97,116,105,111,110,32,97,98,111,117,
                           116]}],
                        0,false},
                       {text,"\t*require*"},
                       {sep,[{text,"\r, see section"}],0,false},
                       {text,
                        "U[Requiring and Reading Configuration Data](./config_file_chapter#require_config_data)"},
                       {sep,
                        [{text,
                          "3in section External Configuration Data and function"}],
                        0,false},
                       {text,
                        [30,91,99,116,35,114,101,113,117,105,114,101,45,49,93,
                         40,46,47,99,116,35,114,101,113,117,105,114,101,45,49,
                         41]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {above,
                    {above,
                     {text,
                      [15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,
                       34]},
                     {sep,
                      [{text,[4,32,32,32,32]},
                       {sep,
                        [{sep,
                          [{above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   [139,83,112,101,99,105,102,121,105,110,103,
                                    32,97,32,100,101,102,97,117,108,116,32,
                                    118,97,108,117,101,32,102,111,114,32,97,
                                    32,114,101,113,117,105,114,101,100,32,118,
                                    97,114,105,97,98,108,101,32,99,97,110,32,
                                    114,101,115,117,108,116,32,105,110,32,97,
                                    32,116,101,115,116,32,99,97,115,101,32,97,
                                    108,119,97,121,115,32,103,101,116,116,105,
                                    110,103,32,101,120,101,99,117,116,101,100,
                                    46,32,84,104,105,115,32,109,105,103,104,
                                    116,32,110,111,116,32,98,101,32,97,32,100,
                                    101,115,105,114,101,100,32,98,101,104,97,
                                    118,105,111,114,46]}],
                                 0,false}],
                               0,true},
                              null},
                             null}}],
                          0,false}],
                        0,true}],
                      0,false}},
                    {text,[0]}},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,[{text,[2,73,102]}],0,false},
                       {text,"\n*timetrap*"},
                       {sep,[{text,[2,111,114]}],0,false},
                       {text,"\t*require*"},
                       {sep,
                        [{text,
                          "c, or both, is not set specifically for a particular test case, default values specified by function"}],
                        0,false},
                       {text,
                        ":[common_test#Module:suite-0](./common_test#Module:suite-0)"},
                       {sep,[{text,"\tare used."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "ETags other than the earlier mentioned are ignored by the test server."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "7An example of a test case information function follows:"}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {above,
                    {above,
                     {text,[3,96,96,96]},
                     {sep,
                      [{text,
                        [269,10,32,114,101,98,111,111,116,95,110,111,100,101,
                         40,41,32,45,62,10,32,32,32,32,32,91,10,32,32,32,32,
                         32,32,123,116,105,109,101,116,114,97,112,44,123,115,
                         101,99,111,110,100,115,44,54,48,125,125,44,10,32,32,
                         32,32,32,32,123,114,101,113,117,105,114,101,44,105,
                         110,116,101,114,102,97,99,101,115,125,44,10,32,32,32,
                         32,32,32,123,117,115,101,114,100,97,116,97,44,10,32,
                         32,32,32,32,32,32,32,32,32,91,123,100,101,115,99,114,
                         105,112,116,105,111,110,44,34,83,121,115,116,101,109,
                         32,85,112,103,114,97,100,101,58,32,82,112,117,65,100,
                         100,105,116,105,111,110,32,78,111,114,109,97,108,32,
                         82,101,98,111,111,116,78,111,100,101,34,125,44,10,32,
                         32,32,32,32,32,32,32,32,32,32,123,102,116,115,44,34,
                         104,116,116,112,58,47,47,115,111,109,101,115,101,114,
                         118,101,114,46,101,114,105,99,115,115,111,110,46,115,
                         101,47,116,101,115,116,95,100,111,99,52,55,49,49,46,
                         112,100,102,34,125,93,125,32,32,32,32,32,32,32,32,32,
                         32,32,32,32,32,32,32,32,32,10,32,32,32,32,32,93,46]}],
                      0,true}},
                    {text,[3,96,96,96]}},
                   null},
                  null}}],
               0,false}},
             {sep,
              [{text,
                [25,60,97,32,110,97,109,101,61,34,115,117,105,116,101,34,62,
                 115,117,105,116,101,60,47,97,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,{text,"\"## Test Suite Information Function"},null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,[{text,"\bFunction"}],0,false},
                      {text,
                       ":[common_test#Module:suite-0](./common_test#Module:suite-0)"},
                      {sep,
                       [{text,
                         "Acan, for example, be used in a test suite module to set a default"}],
                       0,false},
                      {text,"\n*timetrap*"},
                      {sep,[{text,"\fvalue and to"}],0,false},
                      {text,"\t*require*"},
                      {sep,
                       [{text,
                         [159,101,120,116,101,114,110,97,108,32,99,111,110,
                          102,105,103,117,114,97,116,105,111,110,32,100,97,
                          116,97,46,32,73,102,32,97,32,116,101,115,116,32,99,
                          97,115,101,44,32,111,114,32,97,32,103,114,111,117,
                          112,32,105,110,102,111,114,109,97,116,105,111,110,
                          32,102,117,110,99,116,105,111,110,32,97,108,115,111,
                          32,115,112,101,99,105,102,105,101,115,32,97,110,121,
                          32,111,102,32,116,104,101,32,105,110,102,111,114,
                          109,97,116,105,111,110,32,116,97,103,115,44,32,105,
                          116,32,111,118,101,114,114,105,100,101,115,32,116,
                          104,101,32,100,101,102,97,117,108,116,32,118,97,108,
                          117,101,115,32,115,101,116,32,98,121]}],
                       0,false},
                      {text,"\t*suite/0*"},
                      {sep,
                       [{text,
                         [18,46,32,70,111,114,32,100,101,116,97,105,108,115,
                          44,32,115,101,101]}],
                       0,false},
                      {text,
                       "0[Test Case Information Function](#info_function)"},
                      {sep,[{text,[3,97,110,100]}],0,false},
                      {text,"%[Test Case Groups](#test_case_groups)"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "LThe following options can also be specified with the suite information list:"}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,"\f*stylesheet*"},
                     {sep,[{text,[5,44,32,115,101,101]}],0,false},
                     {text,
                      "7[HTML Style Sheets](./run_test_chapter#html_stylesheet)"}],
                    0,false}],
                  0,false},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,"\n*userdata*"},
                     {sep,[{text,[5,44,32,115,101,101]}],0,false},
                     {text,
                      "0[Test Case Information Function](#info_function)"}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [20,42,115,105,108,101,110,116,95,99,111,110,110,101,99,
                      116,105,111,110,115,42]},
                    {sep,[{text,[5,44,32,115,101,101]}],0,false},
                    {text,
                     ";[Silent Connections](./run_test_chapter#silent_connections)"}],
                   0,false}],
                 0,false}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "5An example of the suite information function follows:"}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {above,
                   {above,
                    {text,[3,96,96,96]},
                    {sep,
                     [{text,
                       "æ\n suite() ->\n     [\n      {timetrap,{minutes,10}},\n      {require,global_names},\n      {userdata,[{info,\"This suite tests database transactions.\"}]},\n      {silent_connections,[telnet]},\n      {stylesheet,\"db_testing.css\"}\n     ]."}],
                     0,true}},
                   {text,[3,96,96,96]}},
                  null},
                 null}}],
              0,false}},
            {sep,
             [{text,"/<a name=\"test_case_groups\">test_case_groups</a>"},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {text,
                  [19,35,35,32,84,101,115,116,32,67,97,115,101,32,71,114,111,
                   117,112,115]},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [139,65,32,116,101,115,116,32,99,97,115,101,32,103,
                         114,111,117,112,32,105,115,32,97,32,115,101,116,32,
                         111,102,32,116,101,115,116,32,99,97,115,101,115,32,
                         115,104,97,114,105,110,103,32,99,111,110,102,105,103,
                         117,114,97,116,105,111,110,32,102,117,110,99,116,105,
                         111,110,115,32,97,110,100,32,101,120,101,99,117,116,
                         105,111,110,32,112,114,111,112,101,114,116,105,101,
                         115,46,32,84,101,115,116,32,99,97,115,101,32,103,114,
                         111,117,112,115,32,97,114,101,32,100,101,102,105,110,
                         101,100,32,98,121,32,102,117,110,99,116,105,111,
                         110]}],
                      0,false},
                     {text,
                      "<[common_test#Module:groups-0](./common_test#Module:groups-0)"},
                     {sep,
                      [{text,"\"according to the following syntax:"}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      [348,10,32,103,114,111,117,112,115,40,41,32,45,62,32,71,
                       114,111,117,112,68,101,102,115,10,10,32,84,121,112,101,
                       115,58,10,10,32,71,114,111,117,112,68,101,102,115,32,
                       61,32,91,71,114,111,117,112,68,101,102,93,10,32,71,114,
                       111,117,112,68,101,102,32,61,32,123,71,114,111,117,112,
                       78,97,109,101,44,80,114,111,112,101,114,116,105,101,
                       115,44,71,114,111,117,112,115,65,110,100,84,101,115,
                       116,67,97,115,101,115,125,10,32,71,114,111,117,112,78,
                       97,109,101,32,61,32,97,116,111,109,40,41,10,32,71,114,
                       111,117,112,115,65,110,100,84,101,115,116,67,97,115,
                       101,115,32,61,32,91,71,114,111,117,112,68,101,102,32,
                       124,32,123,103,114,111,117,112,44,71,114,111,117,112,
                       78,97,109,101,125,32,124,32,84,101,115,116,67,97,115,
                       101,32,124,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                       32,32,32,32,32,32,32,32,32,123,116,101,115,116,99,97,
                       115,101,44,84,101,115,116,67,97,115,101,44,84,67,82,
                       101,112,101,97,116,80,114,111,112,115,125,93,10,32,84,
                       101,115,116,67,97,115,101,32,61,32,97,116,111,109,40,
                       41,10,32,84,67,82,101,112,101,97,116,80,114,111,112,
                       115,32,61,32,91,123,114,101,112,101,97,116,44,78,125,
                       32,124,32,123,114,101,112,101,97,116,95,117,110,116,
                       105,108,95,111,107,44,78,125,32,124,32,123,114,101,112,
                       101,97,116,95,117,110,116,105,108,95,102,97,105,108,44,
                       78,125,93]}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,"\v*GroupName*"},
                     {sep,
                      [{text,
                        [138,105,115,32,116,104,101,32,110,97,109,101,32,111,
                         102,32,116,104,101,32,103,114,111,117,112,32,97,110,
                         100,32,109,117,115,116,32,98,101,32,117,110,105,113,
                         117,101,32,119,105,116,104,105,110,32,116,104,101,32,
                         116,101,115,116,32,115,117,105,116,101,32,109,111,
                         100,117,108,101,46,32,71,114,111,117,112,115,32,99,
                         97,110,32,98,101,32,110,101,115,116,101,100,44,32,98,
                         121,32,105,110,99,108,117,100,105,110,103,32,97,32,
                         103,114,111,117,112,32,100,101,102,105,110,105,116,
                         105,111,110,32,119,105,116,104,105,110,32,116,104,
                         101]}],
                      0,false},
                     {text,
                      [20,42,71,114,111,117,112,115,65,110,100,84,101,115,116,
                       67,97,115,101,115,42]},
                     {sep,
                      [{text,
                        [22,108,105,115,116,32,111,102,32,97,110,111,116,104,
                         101,114,32,103,114,111,117,112,46]}],
                      0,false},
                     {text,"\f*Properties*"},
                     {sep,
                      [{text,
                        "Vis the list of execution properties for the group. The possible values are as follows:"}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      [306,10,32,80,114,111,112,101,114,116,105,101,115,32,61,
                       32,91,112,97,114,97,108,108,101,108,32,124,32,115,101,
                       113,117,101,110,99,101,32,124,32,83,104,117,102,102,
                       108,101,32,124,32,123,71,114,111,117,112,82,101,112,
                       101,97,116,84,121,112,101,44,78,125,93,10,32,83,104,
                       117,102,102,108,101,32,61,32,115,104,117,102,102,108,
                       101,32,124,32,123,115,104,117,102,102,108,101,44,83,
                       101,101,100,125,10,32,83,101,101,100,32,61,32,123,105,
                       110,116,101,103,101,114,40,41,44,105,110,116,101,103,
                       101,114,40,41,44,105,110,116,101,103,101,114,40,41,125,
                       10,32,71,114,111,117,112,82,101,112,101,97,116,84,121,
                       112,101,32,61,32,114,101,112,101,97,116,32,124,32,114,
                       101,112,101,97,116,95,117,110,116,105,108,95,97,108,
                       108,95,111,107,32,124,32,114,101,112,101,97,116,95,117,
                       110,116,105,108,95,97,108,108,95,102,97,105,108,32,124,
                       10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                       32,32,114,101,112,101,97,116,95,117,110,116,105,108,95,
                       97,110,121,95,111,107,32,124,32,114,101,112,101,97,116,
                       95,117,110,116,105,108,95,97,110,121,95,102,97,105,108,
                       10,32,78,32,61,32,105,110,116,101,103,101,114,40,41,32,
                       124,32,102,111,114,101,118,101,114]}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      [17,42,42,69,120,112,108,97,110,97,116,105,111,110,115,
                       58,42,42]}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,
                {text,[4,60,100,108,62]},
                {nest,4,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,[{text,"\bparallel"}],0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,"\vCommon Test"},
                                    {sep,
                                     [{text,
                                       "1executes all test cases in the group in parallel."}],
                                     0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,[{text,"\bsequence"}],0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,
                                   [{text,
                                     "<The cases are executed in a sequence as described in section"}],
                                   0,false},
                                  {text,"\tSequences"},
                                  {sep,
                                   [{text,
                                     "6in section Dependencies Between Test Cases and Suites."}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,[7,115,104,117,102,102,108,101]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,
                                 "4The cases in the group are executed in random order."}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [22,114,101,112,101,97,116,44,32,114,101,112,101,
                            97,116,95,117,110,116,105,108,95,42]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,[6,79,114,100,101,114,115]}],
                               0,false},
                              {text,"\vCommon Test"},
                              {sep,
                               [{text,
                                 "wto repeat execution of all the cases in the group a given number of times, or until any, or all, cases fail or succeed."}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}}}},
               {text,[5,60,47,100,108,62]}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      "z\n groups() -> [{group1, [parallel], [test1a,test1b]},\n              {group2, [shuffle,sequence], [test2a,test2b,test2c]}]."}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [140,84,111,32,115,112,101,99,105,102,121,32,105,110,
                         32,119,104,105,99,104,32,111,114,100,101,114,32,103,
                         114,111,117,112,115,32,97,114,101,32,116,111,32,98,
                         101,32,101,120,101,99,117,116,101,100,32,40,97,108,
                         115,111,32,119,105,116,104,32,114,101,115,112,101,99,
                         116,32,116,111,32,116,101,115,116,32,99,97,115,101,
                         115,32,116,104,97,116,32,97,114,101,32,110,111,116,
                         32,112,97,114,116,32,111,102,32,97,110,121,32,103,
                         114,111,117,112,41,44,32,97,100,100,32,116,117,112,
                         108,101,115,32,111,110,32,116,104,101,32,102,111,114,
                         109]}],
                      0,false},
                     {text,
                      [19,42,123,103,114,111,117,112,44,71,114,111,117,112,78,
                       97,109,101,125,42]},
                     {sep,[{text,[6,116,111,32,116,104,101]}],0,false},
                     {text,[7,42,97,108,108,47,48,42]},
                     {sep,[{text,[5,108,105,115,116,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      "[\n all() -> [testcase1, {group,group1}, {testcase,testcase2,[{repeat,10}]}, {group,group2}]."}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,"*Execution properties with a group tuple in"}],
                      0,false},
                     {text,[7,42,97,108,108,47,48,42]},
                     {sep,[{text,[1,58]}],0,false},
                     {text,
                      [30,42,123,103,114,111,117,112,44,71,114,111,117,112,78,
                       97,109,101,44,80,114,111,112,101,114,116,105,101,115,
                       125,42]},
                     {sep,
                      [{text,
                        "]can also be specified. These properties override those specified in the group definition (see"}],
                      0,false},
                     {text,"\n*groups/0*"},
                     {sep,
                      [{text,
                        [151,101,97,114,108,105,101,114,41,46,32,84,104,105,
                         115,32,119,97,121,44,32,116,104,101,32,115,97,109,
                         101,32,115,101,116,32,111,102,32,116,101,115,116,115,
                         32,99,97,110,32,98,101,32,114,117,110,44,32,98,117,
                         116,32,119,105,116,104,32,100,105,102,102,101,114,
                         101,110,116,32,112,114,111,112,101,114,116,105,101,
                         115,44,32,119,105,116,104,111,117,116,32,104,97,118,
                         105,110,103,32,116,111,32,109,97,107,101,32,99,111,
                         112,105,101,115,32,111,102,32,116,104,101,32,103,114,
                         111,117,112,32,100,101,102,105,110,105,116,105,111,
                         110,32,105,110,32,113,117,101,115,116,105,111,110,
                         46]}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "kIf a group contains subgroups, the execution properties for these can also be specified in the group tuple:"}],
                      0,false},
                     {text,"(*{group,GroupName,Properties,SubGroups}*"},
                     {sep,[{text,[6,87,104,101,114,101,44]}],0,false},
                     {text,"\v*SubGroups*"},
                     {sep,
                      [{text,
                        [20,105,115,32,97,32,108,105,115,116,32,111,102,32,
                         116,117,112,108,101,115,44]}],
                      0,false},
                     {text,
                      [24,42,123,71,114,111,117,112,78,97,109,101,44,80,114,
                       111,112,101,114,116,105,101,115,125,42]},
                     {sep,[{text,[2,111,114]}],0,false},
                     {text,"\"*{GroupName,Properties,SubGroups}*"},
                     {sep,
                      [{text,
                        "4representing the subgroups. Any subgroups defined in"}],
                      0,false},
                     {text,"\t*group/0*"},
                     {sep,
                      [{text,"*for a group, that are not specified in the"}],
                      0,false},
                     {text,"\v*SubGroups*"},
                     {sep,
                      [{text,
                        "0list, executes with their predefined properties."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      "j\n groups() -> {tests1, [], [{tests2, [], [t2a,t2b]},\n                           {tests3, [], [t31,t3b]}]}."}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [16,84,111,32,101,120,101,99,117,116,101,32,103,114,
                         111,117,112]}],
                      0,false},
                     {text,"\b*tests1*"},
                     {sep,
                      [{text,"#twice with different properties for"}],
                      0,false},
                     {text,"\b*tests2*"},
                     {sep,[{text,"\neach time:"}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      [132,10,32,97,108,108,40,41,32,45,62,10,32,32,32,32,91,
                       123,103,114,111,117,112,44,32,116,101,115,116,115,49,
                       44,32,100,101,102,97,117,108,116,44,32,91,123,116,101,
                       115,116,115,50,44,32,91,112,97,114,97,108,108,101,108,
                       93,125,93,125,44,10,32,32,32,32,32,123,103,114,111,117,
                       112,44,32,116,101,115,116,115,49,44,32,100,101,102,97,
                       117,108,116,44,32,91,123,116,101,115,116,115,50,44,32,
                       91,115,104,117,102,102,108,101,44,123,114,101,112,101,
                       97,116,44,49,48,125,93,125,93,125,93,46]}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "2This is equivalent to the following specification:"}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      "è\n all() ->\n    [{group, tests1, default, [{tests2, [parallel]},\n                               {tests3, default}]},\n     {group, tests1, default, [{tests2, [shuffle,{repeat,10}]},\n                               {tests3, default}]}]."}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,[{text,[5,86,97,108,117,101]}],0,false},
                     {text,"\t*default*"},
                     {sep,
                      [{text,
                        "5states that the predefined properties are to be used."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "_The following example shows how to override properties in a scenario with deeply nested groups:"}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      "ú\n groups() ->\n    [{tests1, [], [{group, tests2}]},\n     {tests2, [], [{group, tests3}]},\n     {tests3, [{repeat,2}], [t3a,t3b,t3c]}].\n\n all() ->\n    [{group, tests1, default, \n      [{tests2, default,\n        [{tests3, [parallel,{repeat,100}]}]}]}]."}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "ºThe described syntax can also be used in test specifications to change group properties at the time of execution, without having to edit the test suite. For more information, see section"}],
                      0,false},
                     {text,
                      "=[Test Specifications](./run_test_chapter#test_specifications)"},
                     {sep,
                      [{text,
                        "/in section Running Tests and Analyzing Results."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "<As illustrated, properties can be combined. If, for example,"}],
                      0,false},
                     {text,"\t*shuffle*"},
                     {sep,[{text,[1,44]}],0,false},
                     {text,
                      [23,42,114,101,112,101,97,116,95,117,110,116,105,108,95,
                       97,110,121,95,102,97,105,108,42]},
                     {sep,[{text,[5,44,32,97,110,100]}],0,false},
                     {text,"\n*sequence*"},
                     {sep,
                      [{text,
                        "Àare all specified, the test cases in the group are executed repeatedly, and in random order, until a test case fails. Then execution is immediately stopped and the remaining cases are skipped."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        ">Before execution of a group begins, the configuration function"}],
                      0,false},
                     {text,
                      "L[common_test#Module:init_per_group-2](./common_test#Module:init_per_group-2)"},
                     {sep,
                      [{text,
                        "uis called. The list of tuples returned from this function is passed to the test cases in the usual manner by argument"}],
                      0,false},
                     {text,"\b*Config*"},
                     {sep,[{text,[1,46]}],0,false},
                     {text,
                      [18,42,105,110,105,116,95,112,101,114,95,103,114,111,
                       117,112,47,50,42]},
                     {sep,
                      [{text,
                        [130,105,115,32,109,101,97,110,116,32,116,111,32,98,
                         101,32,117,115,101,100,32,102,111,114,32,105,110,105,
                         116,105,97,108,105,122,97,116,105,111,110,115,32,99,
                         111,109,109,111,110,32,102,111,114,32,116,104,101,32,
                         116,101,115,116,32,99,97,115,101,115,32,105,110,32,
                         116,104,101,32,103,114,111,117,112,46,32,65,102,116,
                         101,114,32,101,120,101,99,117,116,105,111,110,32,111,
                         102,32,116,104,101,32,103,114,111,117,112,32,105,115,
                         32,102,105,110,105,115,104,101,100,44,32,102,117,110,
                         99,116,105,111,110]}],
                      0,false},
                     {text,
                      "J[common_test#Module:end_per_group-2](./common_test#Module:end_per_group-2)"},
                     {sep,
                      [{text,
                        "Bis called. This function is meant to be used for cleaning up after"}],
                      0,false},
                     {text,
                      [18,42,105,110,105,116,95,112,101,114,95,103,114,111,
                       117,112,47,50,42]},
                     {sep,
                      [{text,
                        "?. If the init function is defined, so must the end function be."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text," Whenever a group is executed, if"}],
                      0,false},
                     {text,
                      [16,42,105,110,105,116,95,112,101,114,95,103,114,111,
                       117,112,42]},
                     {sep,[{text,[3,97,110,100]}],0,false},
                     {text,
                      [15,42,101,110,100,95,112,101,114,95,103,114,111,117,
                       112,42]},
                     {sep,
                      [{text,
                        [26,100,111,32,110,111,116,32,101,120,105,115,116,32,
                         105,110,32,116,104,101,32,115,117,105,116,101,44]}],
                      0,false},
                     {text,"\r*Common Test*"},
                     {sep,
                      [{text,
                        "§calls dummy functions (with the same names) instead. Output generated by hook functions are saved to the log files for these dummies. For more information, see section"}],
                      0,false},
                     {text,
                      "5[Manipulating Tests](./ct_hooks_chapter#manipulating)"},
                     {sep,
                      [{text,
                        [29,105,110,32,115,101,99,116,105,111,110,32,67,111,
                         109,109,111,110,32,84,101,115,116,32,72,111,111,107,
                         115,46]}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,
                    [15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
                   {sep,
                    [{text,[4,32,32,32,32]},
                     {sep,
                      [{sep,
                        [{above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,
                                 [21,42,105,110,105,116,95,112,101,114,95,116,
                                  101,115,116,99,97,115,101,47,50,42]},
                                {sep,[{text,[3,97,110,100]}],0,false},
                                {text,
                                 [20,42,101,110,100,95,112,101,114,95,116,101,
                                  115,116,99,97,115,101,47,50,42]},
                                {sep,
                                 [{text,
                                   "aare always called for each individual test case, no matter if the case belongs to a group or not."}],
                                 0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}}],
                        0,false}],
                      0,true}],
                    0,false}},
                  {text,[0]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "LThe properties for a group are always printed in the top of the HTML log for"}],
                      0,false},
                     {text,
                      [18,42,105,110,105,116,95,112,101,114,95,103,114,111,
                       117,112,47,50,42]},
                     {sep,
                      [{text,
                        "O. The total execution time for a group is included at the bottom of the log for"}],
                      0,false},
                     {text,
                      [17,42,101,110,100,95,112,101,114,95,103,114,111,117,
                       112,47,50,42]},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "PTest case groups can be nested so sets of groups can be configured with the same"}],
                      0,false},
                     {text,
                      [18,42,105,110,105,116,95,112,101,114,95,103,114,111,
                       117,112,47,50,42]},
                     {sep,[{text,[3,97,110,100]}],0,false},
                     {text,
                      [17,42,101,110,100,95,112,101,114,95,103,114,111,117,
                       112,47,50,42]},
                     {sep,
                      [{text,
                        [139,102,117,110,99,116,105,111,110,115,46,32,78,101,
                         115,116,101,100,32,103,114,111,117,112,115,32,99,97,
                         110,32,98,101,32,100,101,102,105,110,101,100,32,98,
                         121,32,105,110,99,108,117,100,105,110,103,32,97,32,
                         103,114,111,117,112,32,100,101,102,105,110,105,116,
                         105,111,110,44,32,111,114,32,97,32,103,114,111,117,
                         112,32,110,97,109,101,32,114,101,102,101,114,101,110,
                         99,101,44,32,105,110,32,116,104,101,32,116,101,115,
                         116,32,99,97,115,101,32,108,105,115,116,32,111,102,
                         32,97,110,111,116,104,101,114,32,103,114,111,117,112,
                         46]}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      [358,10,32,103,114,111,117,112,115,40,41,32,45,62,32,91,
                       123,103,114,111,117,112,49,44,32,91,115,104,117,102,
                       102,108,101,93,44,32,91,116,101,115,116,49,97,44,10,32,
                       32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                       32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,
                       103,114,111,117,112,50,44,32,91,93,44,32,91,116,101,
                       115,116,50,97,44,116,101,115,116,50,98,93,125,44,10,32,
                       32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                       32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,
                       101,115,116,49,98,93,125,44,10,32,32,32,32,32,32,32,32,
                       32,32,32,32,32,32,123,103,114,111,117,112,51,44,32,91,
                       93,44,32,91,123,103,114,111,117,112,44,103,114,111,117,
                       112,52,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                       32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,
                       103,114,111,117,112,44,103,114,111,117,112,53,125,93,
                       125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                       123,103,114,111,117,112,52,44,32,91,112,97,114,97,108,
                       108,101,108,93,44,32,91,116,101,115,116,52,97,44,116,
                       101,115,116,52,98,93,125,44,10,32,32,32,32,32,32,32,32,
                       32,32,32,32,32,32,123,103,114,111,117,112,53,44,32,91,
                       115,101,113,117,101,110,99,101,93,44,32,91,116,101,115,
                       116,53,97,44,116,101,115,116,53,98,44,116,101,115,116,
                       53,99,93,125,93,46]}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,[{text,"\eIn the previous example, if"}],0,false},
                     {text,[7,42,97,108,108,47,48,42]},
                     {sep,
                      [{text,"*returns group name references in the order"}],
                      0,false},
                     {text,"!*[{group,group1},{group,group3}]*"},
                     {sep,
                      [{text,
                        "\\, the order of the configuration functions and test cases becomes the following (notice that"}],
                      0,false},
                     {text,
                      [21,42,105,110,105,116,95,112,101,114,95,116,101,115,
                       116,99,97,115,101,47,50,42]},
                     {sep,[{text,[3,97,110,100]}],0,false},
                     {text,
                      [21,42,101,110,100,95,112,101,114,95,116,101,115,116,99,
                       97,115,101,47,50,58,42]},
                     {sep,
                      [{text,
                        "Mare also always called, but not included in this example for simplification):"}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      [613,10,32,105,110,105,116,95,112,101,114,95,103,114,
                       111,117,112,40,103,114,111,117,112,49,44,32,67,111,110,
                       102,105,103,41,32,45,62,32,67,111,110,102,105,103,49,
                       32,32,40,42,41,10,32,32,32,32,32,32,116,101,115,116,49,
                       97,40,67,111,110,102,105,103,49,41,10,32,32,32,32,32,
                       32,105,110,105,116,95,112,101,114,95,103,114,111,117,
                       112,40,103,114,111,117,112,50,44,32,67,111,110,102,105,
                       103,49,41,32,45,62,32,67,111,110,102,105,103,50,10,32,
                       32,32,32,32,32,32,32,32,32,32,116,101,115,116,50,97,40,
                       67,111,110,102,105,103,50,41,44,32,116,101,115,116,50,
                       98,40,67,111,110,102,105,103,50,41,10,32,32,32,32,32,
                       32,101,110,100,95,112,101,114,95,103,114,111,117,112,
                       40,103,114,111,117,112,50,44,32,67,111,110,102,105,103,
                       50,41,10,32,32,32,32,32,32,116,101,115,116,49,98,40,67,
                       111,110,102,105,103,49,41,10,32,101,110,100,95,112,101,
                       114,95,103,114,111,117,112,40,103,114,111,117,112,49,
                       44,32,67,111,110,102,105,103,49,41,32,10,32,105,110,
                       105,116,95,112,101,114,95,103,114,111,117,112,40,103,
                       114,111,117,112,51,44,32,67,111,110,102,105,103,41,32,
                       45,62,32,67,111,110,102,105,103,51,10,32,32,32,32,32,
                       32,105,110,105,116,95,112,101,114,95,103,114,111,117,
                       112,40,103,114,111,117,112,52,44,32,67,111,110,102,105,
                       103,51,41,32,45,62,32,67,111,110,102,105,103,52,10,32,
                       32,32,32,32,32,32,32,32,32,32,116,101,115,116,52,97,40,
                       67,111,110,102,105,103,52,41,44,32,116,101,115,116,52,
                       98,40,67,111,110,102,105,103,52,41,32,32,40,42,42,41,
                       10,32,32,32,32,32,32,101,110,100,95,112,101,114,95,103,
                       114,111,117,112,40,103,114,111,117,112,52,44,32,67,111,
                       110,102,105,103,52,41,10,32,32,32,32,32,32,105,110,105,
                       116,95,112,101,114,95,103,114,111,117,112,40,103,114,
                       111,117,112,53,44,32,67,111,110,102,105,103,51,41,32,
                       45,62,32,67,111,110,102,105,103,53,10,32,32,32,32,32,
                       32,32,32,32,32,32,116,101,115,116,53,97,40,67,111,110,
                       102,105,103,53,41,44,32,116,101,115,116,53,98,40,67,
                       111,110,102,105,103,53,41,44,32,116,101,115,116,53,99,
                       40,67,111,110,102,105,103,53,41,10,32,32,32,32,32,32,
                       101,110,100,95,112,101,114,95,103,114,111,117,112,40,
                       103,114,111,117,112,53,44,32,67,111,110,102,105,103,53,
                       41,10,32,101,110,100,95,112,101,114,95,103,114,111,117,
                       112,40,103,114,111,117,112,51,44,32,67,111,110,102,105,
                       103,51,41]}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,[{text,"\e(\\*) The order of test case"}],0,false},
                     {text,"\b*test1a*"},
                     {sep,[{text,[1,44]}],0,false},
                     {text,"\b*test1b*"},
                     {sep,[{text,[5,44,32,97,110,100]}],0,false},
                     {text,"\b*group2*"},
                     {sep,
                      [{text,
                        [16,105,115,32,117,110,100,101,102,105,110,101,100,44,
                         32,97,115]}],
                      0,false},
                     {text,"\b*group1*"},
                     {sep,
                      [{text,
                        [23,104,97,115,32,97,32,115,104,117,102,102,108,101,
                         32,112,114,111,112,101,114,116,121,46]}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      ">(\\*\\*) These cases are not executed in order, but in parallel."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [128,80,114,111,112,101,114,116,105,101,115,32,97,114,
                         101,32,110,111,116,32,105,110,104,101,114,105,116,
                         101,100,32,102,114,111,109,32,116,111,112,45,108,101,
                         118,101,108,32,103,114,111,117,112,115,32,116,111,32,
                         110,101,115,116,101,100,32,115,117,98,103,114,111,
                         117,112,115,46,32,70,111,114,32,105,110,115,116,97,
                         110,99,101,44,32,105,110,32,116,104,101,32,112,114,
                         101,118,105,111,117,115,32,101,120,97,109,112,108,
                         101,44,32,116,104,101,32,116,101,115,116,32,99,97,
                         115,101,115,32,105,110]}],
                      0,false},
                     {text,"\b*group2*"},
                     {sep,
                      [{text,
                        ":are not executed in random order (which is the property of"}],
                      0,false},
                     {text,"\b*group1*"},
                     {sep,[{text,[2,41,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}}],
             0,false}},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,{text,"&## Parallel Property and Nested Groups"},null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "«If a group has a parallel property, its test cases are spawned simultaneously and get executed in parallel. However, a test case is not allowed to execute in parallel with"}],
                     0,false},
                    {text,
                     [17,42,101,110,100,95,112,101,114,95,103,114,111,117,112,
                      47,50,42]},
                    {sep,
                     [{text,
                       [288,44,32,119,104,105,99,104,32,109,101,97,110,115,32,
                        116,104,97,116,32,116,104,101,32,116,105,109,101,32,
                        116,111,32,101,120,101,99,117,116,101,32,97,32,112,97,
                        114,97,108,108,101,108,32,103,114,111,117,112,32,105,
                        115,32,101,113,117,97,108,32,116,111,32,116,104,101,
                        32,101,120,101,99,117,116,105,111,110,32,116,105,109,
                        101,32,111,102,32,116,104,101,32,115,108,111,119,101,
                        115,116,32,116,101,115,116,32,99,97,115,101,32,105,
                        110,32,116,104,101,32,103,114,111,117,112,46,32,65,32,
                        110,101,103,97,116,105,118,101,32,115,105,100,101,32,
                        101,102,102,101,99,116,32,111,102,32,114,117,110,110,
                        105,110,103,32,116,101,115,116,32,99,97,115,101,115,
                        32,105,110,32,112,97,114,97,108,108,101,108,32,105,
                        115,32,116,104,97,116,32,116,104,101,32,72,84,77,76,
                        32,115,117,109,109,97,114,121,32,112,97,103,101,115,
                        32,97,114,101,32,110,111,116,32,117,112,100,97,116,
                        101,100,32,119,105,116,104,32,108,105,110,107,115,32,
                        116,111,32,116,104,101,32,105,110,100,105,118,105,100,
                        117,97,108,32,116,101,115,116,32,99,97,115,101,32,108,
                        111,103,115,32,117,110,116,105,108,32,102,117,110,99,
                        116,105,111,110]}],
                     0,false},
                    {text,
                     [17,42,101,110,100,95,112,101,114,95,103,114,111,117,112,
                      47,50,42]},
                    {sep,[{text,"\efor the group has finished."}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "ÓA group nested under a parallel group starts executing in parallel with previous (parallel) test cases (no matter what properties the nested group has). However, as test cases are never executed in parallel with"}],
                     0,false},
                    {text,
                     [18,42,105,110,105,116,95,112,101,114,95,103,114,111,117,
                      112,47,50,42]},
                    {sep,[{text,[2,111,114]}],0,false},
                    {text,
                     [17,42,101,110,100,95,112,101,114,95,103,114,111,117,112,
                      47,50,42]},
                    {sep,
                     [{text,
                       [131,111,102,32,116,104,101,32,115,97,109,101,32,103,
                        114,111,117,112,44,32,105,116,32,105,115,32,111,110,
                        108,121,32,97,102,116,101,114,32,97,32,110,101,115,
                        116,101,100,32,103,114,111,117,112,32,104,97,115,32,
                        102,105,110,105,115,104,101,100,32,116,104,97,116,32,
                        114,101,109,97,105,110,105,110,103,32,112,97,114,97,
                        108,108,101,108,32,99,97,115,101,115,32,105,110,32,
                        116,104,101,32,112,114,101,118,105,111,117,115,32,103,
                        114,111,117,112,32,98,101,99,111,109,101,32,115,112,
                        97,119,110,101,100,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {text,
                [30,35,35,32,80,97,114,97,108,108,101,108,32,84,101,115,116,
                 32,67,97,115,101,115,32,97,110,100,32,73,47,79]},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "vA parallel test case has a private I/O server as its group leader. (For a description of the group leader concept, see"}],
                    0,false},
                   {text,
                    [15,91,69,82,84,83,93,40,46,47,105,110,100,101,120,41]},
                   {sep,
                    [{text,
                      [258,41,46,32,84,104,101,32,99,101,110,116,114,97,108,
                       32,73,47,79,32,115,101,114,118,101,114,32,112,114,111,
                       99,101,115,115,44,32,119,104,105,99,104,32,104,97,110,
                       100,108,101,115,32,116,104,101,32,111,117,116,112,117,
                       116,32,102,114,111,109,32,114,101,103,117,108,97,114,
                       32,116,101,115,116,32,99,97,115,101,115,32,97,110,100,
                       32,99,111,110,102,105,103,117,114,97,116,105,111,110,
                       32,102,117,110,99,116,105,111,110,115,44,32,100,111,
                       101,115,32,110,111,116,32,114,101,115,112,111,110,100,
                       32,116,111,32,73,47,79,32,109,101,115,115,97,103,101,
                       115,32,100,117,114,105,110,103,32,101,120,101,99,117,
                       116,105,111,110,32,111,102,32,112,97,114,97,108,108,
                       101,108,32,103,114,111,117,112,115,46,32,84,104,105,
                       115,32,105,115,32,105,109,112,111,114,116,97,110,116,
                       32,116,111,32,117,110,100,101,114,115,116,97,110,100,
                       32,116,111,32,97,118,111,105,100,32,99,101,114,116,97,
                       105,110,32,116,114,97,112,115,44,32,108,105,107,101,32,
                       116,104,101,32,102,111,108,108,111,119,105,110,103,
                       58]}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,[{text,"\rIf a process,"}],0,false},
                   {text,[3,42,80,42]},
                   {sep,
                    [{text,"., is spawned during execution of, for example,"}],
                    0,false},
                   {text,
                    [18,42,105,110,105,116,95,112,101,114,95,115,117,105,116,
                     101,47,49,42]},
                   {sep,
                    [{text,"%, it inherits the group leader of the"}],
                    0,false},
                   {text,
                    [16,42,105,110,105,116,95,112,101,114,95,115,117,105,116,
                     101,42]},
                   {sep,
                    [{text,
                      "dprocess. This group leader is the central I/O server process mentioned earlier. If, at a later time,"}],
                    0,false},
                   {text,"'**during parallel test case execution**"},
                   {sep,
                    [{text,
                      [29,44,32,115,111,109,101,32,101,118,101,110,116,32,116,
                       114,105,103,103,101,114,115,32,112,114,111,99,101,115,
                       115]}],
                    0,false},
                   {text,[3,42,80,42]},
                   {sep,[{text,[7,116,111,32,99,97,108,108]}],0,false},
                   {text,
                    [15,42,105,111,58,102,111,114,109,97,116,47,49,47,50,42]},
                   {sep,
                    [{text,
                      "W, that call never returns (as the group leader is in a non-responsive state) and causes"}],
                    0,false},
                   {text,[3,42,80,42]},
                   {sep,[{text,"\bto hang."}],0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {text,
               [18,35,35,32,82,101,112,101,97,116,101,100,32,71,114,111,117,
                112,115]},
              null},
             null}},
           {text,"-<a name=\"repeated_groups\">repeated_groups</a>"},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "sA test case group can be repeated a certain number of times (specified by an integer) or indefinitely (specified by"}],
                   0,false},
                  {text,"\t*forever*"},
                  {sep,
                   [{text,
                     "v). The repetition can also be stopped too early if any or all cases fail or succeed, that is, if any of the properties"}],
                   0,false},
                  {text,
                   [23,42,114,101,112,101,97,116,95,117,110,116,105,108,95,97,
                    110,121,95,102,97,105,108,42]},
                  {sep,[{text,[1,44]}],0,false},
                  {text,
                   [21,42,114,101,112,101,97,116,95,117,110,116,105,108,95,97,
                    110,121,95,111,107,42]},
                  {sep,[{text,[1,44]}],0,false},
                  {text,
                   [23,42,114,101,112,101,97,116,95,117,110,116,105,108,95,97,
                    108,108,95,102,97,105,108,42]},
                  {sep,[{text,[4,44,32,111,114]}],0,false},
                  {text,
                   [21,42,114,101,112,101,97,116,95,117,110,116,105,108,95,97,
                    108,108,95,111,107,42]},
                  {sep,
                   [{text,
                     [21,105,115,32,117,115,101,100,46,32,73,102,32,116,104,
                      101,32,98,97,115,105,99]}],
                   0,false},
                  {text,"\b*repeat*"},
                  {sep,
                   [{text,
                     "Nproperty is used, status of test cases is irrelevant for the repeat operation."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,"*The status of a subgroup can be returned ("}],
                   0,false},
                  {text,[4,42,111,107,42]},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,"\b*failed*"},
                  {sep,
                   [{text,
                     "W), to affect the execution of the group on the level above. This is accomplished by, in"}],
                   0,false},
                  {text,
                   [17,42,101,110,100,95,112,101,114,95,103,114,111,117,112,
                    47,50,42]},
                  {sep,
                   [{text,
                     [25,44,32,108,111,111,107,105,110,103,32,117,112,32,116,
                      104,101,32,118,97,108,117,101,32,111,102]}],
                   0,false},
                  {text,
                   [21,42,116,99,95,103,114,111,117,112,95,112,114,111,112,
                    101,114,116,105,101,115,42]},
                  {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
                  {text,"\b*Config*"},
                  {sep,
                   [{text,
                     "Flist and checking the result of the test cases in the group. If status"}],
                   0,false},
                  {text,"\b*failed*"},
                  {sep,
                   [{text,"-is to be returned from the group as a result,"}],
                   0,false},
                  {text,
                   [17,42,101,110,100,95,112,101,114,95,103,114,111,117,112,
                    47,50,42]},
                  {sep,
                   [{text,
                     [22,105,115,32,116,111,32,114,101,116,117,114,110,32,116,
                      104,101,32,118,97,108,117,101]}],
                   0,false},
                  {text,
                   [30,42,123,114,101,116,117,114,110,95,103,114,111,117,112,
                    95,114,101,115,117,108,116,44,102,97,105,108,101,100,125,
                    42]},
                  {sep,
                   [{text,
                     "3. The status of a subgroup is taken into account by"}],
                   0,false},
                  {text,"\r*Common Test*"},
                  {sep,
                   [{text,
                     "Rwhen evaluating if execution of a group is to be repeated or not (unless the basic"}],
                   0,false},
                  {text,"\b*repeat*"},
                  {sep,
                   [{text,
                     [18,112,114,111,112,101,114,116,121,32,105,115,32,117,
                      115,101,100,41,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,"\fThe value of"}],0,false},
                  {text,
                   [21,42,116,99,95,103,114,111,117,112,95,112,114,111,112,
                    101,114,116,105,101,115,42]},
                  {sep,
                   [{text,"-is a list of status tuples, each with the key"}],
                   0,false},
                  {text,[4,42,111,107,42]},
                  {sep,[{text,[1,44]}],0,false},
                  {text,"\t*skipped*"},
                  {sep,[{text,[5,44,32,97,110,100]}],0,false},
                  {text,"\b*failed*"},
                  {sep,
                   [{text,
                     [129,46,32,84,104,101,32,118,97,108,117,101,32,111,102,
                      32,97,32,115,116,97,116,117,115,32,116,117,112,108,101,
                      32,105,115,32,97,32,108,105,115,116,32,119,105,116,104,
                      32,110,97,109,101,115,32,111,102,32,116,101,115,116,32,
                      99,97,115,101,115,32,116,104,97,116,32,104,97,118,101,
                      32,98,101,101,110,32,101,120,101,99,117,116,101,100,32,
                      119,105,116,104,32,116,104,101,32,99,111,114,114,101,
                      115,112,111,110,100,105,110,103,32,115,116,97,116,117,
                      115,32,97,115,32,114,101,115,117,108,116,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "EThe following is an example of how to return the status from a group:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [360,10,32,101,110,100,95,112,101,114,95,103,114,111,117,
                    112,40,95,71,114,111,117,112,44,32,67,111,110,102,105,103,
                    41,32,45,62,10,32,32,32,32,32,83,116,97,116,117,115,32,61,
                    32,63,99,111,110,102,105,103,40,116,99,95,103,114,111,117,
                    112,95,114,101,115,117,108,116,44,32,67,111,110,102,105,
                    103,41,44,10,32,32,32,32,32,99,97,115,101,32,112,114,111,
                    112,108,105,115,116,115,58,103,101,116,95,118,97,108,117,
                    101,40,102,97,105,108,101,100,44,32,83,116,97,116,117,115,
                    41,32,111,102,10,32,32,32,32,32,32,32,32,32,91,93,32,45,
                    62,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,37,32,
                    110,111,32,102,97,105,108,101,100,32,99,97,115,101,115,32,
                    10,32,32,32,32,32,32,32,32,32,32,32,32,32,123,114,101,116,
                    117,114,110,95,103,114,111,117,112,95,114,101,115,117,108,
                    116,44,111,107,125,59,10,32,32,32,32,32,32,32,32,32,95,70,
                    97,105,108,101,100,32,45,62,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,37,32,111,110,101,32,111,114,32,109,111,114,101,32,102,
                    97,105,108,101,100,10,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,123,114,101,116,117,114,110,95,103,114,111,117,112,95,
                    114,101,115,117,108,116,44,102,97,105,108,101,100,125,10,
                    32,32,32,32,32,101,110,100,46]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [23,73,116,32,105,115,32,97,108,115,111,32,112,111,115,
                      115,105,98,108,101,44,32,105,110]}],
                   0,false},
                  {text,
                   [17,42,101,110,100,95,112,101,114,95,103,114,111,117,112,
                    47,50,42]},
                  {sep,
                   [{text,
                     "Ç, to check the status of a subgroup (maybe to determine what status the current group is to return). This is as simple as illustrated in the previous example, only the group name is stored in a tuple"}],
                   0,false},
                  {text,
                   [26,42,123,103,114,111,117,112,95,114,101,115,117,108,116,
                    44,71,114,111,117,112,78,97,109,101,125,42]},
                  {sep,
                   [{text,
                     "0, which can be searched for in the status lists."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [382,10,32,101,110,100,95,112,101,114,95,103,114,111,117,
                    112,40,103,114,111,117,112,49,44,32,67,111,110,102,105,
                    103,41,32,45,62,10,32,32,32,32,32,83,116,97,116,117,115,
                    32,61,32,63,99,111,110,102,105,103,40,116,99,95,103,114,
                    111,117,112,95,114,101,115,117,108,116,44,32,67,111,110,
                    102,105,103,41,44,10,32,32,32,32,32,70,97,105,108,101,100,
                    32,61,32,112,114,111,112,108,105,115,116,115,58,103,101,
                    116,95,118,97,108,117,101,40,102,97,105,108,101,100,44,32,
                    83,116,97,116,117,115,41,44,10,32,32,32,32,32,99,97,115,
                    101,32,108,105,115,116,115,58,109,101,109,98,101,114,40,
                    123,103,114,111,117,112,95,114,101,115,117,108,116,44,103,
                    114,111,117,112,50,125,44,32,70,97,105,108,101,100,41,32,
                    111,102,10,32,32,32,32,32,32,32,32,32,32,32,116,114,117,
                    101,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,123,114,101,116,117,114,110,95,103,114,111,117,112,95,
                    114,101,115,117,108,116,44,102,97,105,108,101,100,125,59,
                    10,32,32,32,32,32,32,32,32,32,32,32,102,97,108,115,101,32,
                    45,62,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,10,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,123,114,101,116,
                    117,114,110,95,103,114,111,117,112,95,114,101,115,117,108,
                    116,44,111,107,125,10,32,32,32,32,32,101,110,100,59,32,10,
                    32,46,46,46]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,
                 [15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
                {sep,
                 [{text,[4,32,32,32,32]},
                  {sep,
                   [{sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "?When a test case group is repeated, the configuration functions"}],
                              0,false},
                             {text,
                              [18,42,105,110,105,116,95,112,101,114,95,103,
                               114,111,117,112,47,50,42]},
                             {sep,[{text,[3,97,110,100]}],0,false},
                             {text,
                              [17,42,101,110,100,95,112,101,114,95,103,114,
                               111,117,112,47,50,42]},
                             {sep,
                              [{text,
                                ",are also always called with each repetition."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false}],
                   0,true}],
                 0,false}},
               {text,[0]}},
              null},
             null}}],
          0,false}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,{above,{text,"\e## Shuffled Test Case Order"},null},null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "°The order in which test cases in a group are executed is under normal circumstances the same as the order specified in the test case list in the group definition. With property"}],
                  0,false},
                 {text,"\t*shuffle*"},
                 {sep,[{text,"\rset, however,"}],0,false},
                 {text,"\r*Common Test*"},
                 {sep,
                  [{text,"0instead executes the test cases in random order."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "RYou can provide a seed value (a tuple of three integers) with the shuffle property"}],
                  0,false},
                 {text,
                  [16,42,123,115,104,117,102,102,108,101,44,83,101,101,100,
                   125,42]},
                 {sep,
                  [{text,
                    "t. This way, the same shuffling order can be created every time the group is executed. If no seed value is specified,"}],
                  0,false},
                 {text,"\r*Common Test*"},
                 {sep,
                  [{text,
                    "Ncreates a \"random\" seed for the shuffling operation (using the return value of"}],
                  0,false},
                 {text,
                  [20,42,101,114,108,97,110,103,58,116,105,109,101,115,116,97,
                   109,112,47,48,42]},
                 {sep,
                  [{text,"*). The seed value is always printed to the"}],
                  0,false},
                 {text,
                  [18,42,105,110,105,116,95,112,101,114,95,103,114,111,117,
                   112,47,50,42]},
                 {sep,
                  [{text,
                    "^log file so that it can be used to recreate the same execution order in a subsequent test run."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
               {sep,
                [{text,[4,32,32,32,32]},
                 {sep,
                  [{sep,
                    [{above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             "OIf a shuffled test case group is repeated, the seed is not reset between turns."}],
                           0,false}],
                         0,true},
                        null},
                       null}}],
                    0,false}],
                  0,true}],
                0,false}},
              {text,[0]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,",If a subgroup is specified in a group with a"}],
                  0,false},
                 {text,"\t*shuffle*"},
                 {sep,
                  [{text,
                    "Øproperty, the execution order of this subgroup in relation to the test cases (and other subgroups) in the group, is random. The order of the test cases in the subgroup is however not random (unless the subgroup has a"}],
                  0,false},
                 {text,"\t*shuffle*"},
                 {sep,[{text,"\nproperty)."}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}},
       {sep,
        [{text,"#<a name=\"group_info\">group_info</a>"},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [29,35,35,32,71,114,111,117,112,32,73,110,102,111,114,109,97,116,
              105,111,110,32,70,117,110,99,116,105,111,110]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,")The test case group information function,"}],
                 0,false},
                {text,
                 [18,42,103,114,111,117,112,40,71,114,111,117,112,78,97,109,
                  101,41,42]},
                {sep,
                 [{text,
                   "Ó, serves the same purpose as the suite- and test case information functions previously described. However, the scope for the group information function, is all test cases and subgroups in the group in question ("}],
                 0,false},
                {text,"\v*GroupName*"},
                {sep,[{text,[2,41,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 "N\n group(connection_tests) ->\n    [{require,login_data},\n     {timetrap,1000}]."}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "ìThe group information properties override those set with the suite information function, and can in turn be overridden by test case information properties. For a list of valid information properties and more general information, see the"}],
                 0,false},
                {text,"0[Test Case Information Function](#info_function)"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,"8## Information Functions for Init- and End-Configuration"},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "4Information functions can also be used for functions"}],
                0,false},
               {text,
                [16,42,105,110,105,116,95,112,101,114,95,115,117,105,116,101,
                 42]},
               {sep,[{text,[1,44]}],0,false},
               {text,
                [15,42,101,110,100,95,112,101,114,95,115,117,105,116,101,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,
                [16,42,105,110,105,116,95,112,101,114,95,103,114,111,117,112,
                 42]},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,
                [15,42,101,110,100,95,112,101,114,95,103,114,111,117,112,42]},
               {sep,
                [{text,"(, and they work the same way as with the"}],
                0,false},
               {text,"0[Test Case Information Function](#info_function)"},
               {sep,
                [{text,
                  "â. This is useful, for example, for setting timetraps and requiring external configuration data relevant only for the configuration function in question (without affecting properties set for groups and test cases in the suite)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,84,104,101,32,105,110,102,111,114,109,97,116,105,111,
                   110,32,102,117,110,99,116,105,111,110]}],
                0,false},
               {text,
                [22,42,105,110,105,116,47,101,110,100,95,112,101,114,95,115,
                 117,105,116,101,40,41,42]},
               {sep,[{text,"\ris called for"}],0,false},
               {text,
                [28,42,105,110,105,116,47,101,110,100,95,112,101,114,95,115,
                 117,105,116,101,40,67,111,110,102,105,103,41,42]},
               {sep,
                [{text,
                  [26,44,32,97,110,100,32,105,110,102,111,114,109,97,116,105,
                   111,110,32,102,117,110,99,116,105,111,110]}],
                0,false},
               {text,
                [31,42,105,110,105,116,47,101,110,100,95,112,101,114,95,103,
                 114,111,117,112,40,71,114,111,117,112,78,97,109,101,41,42]},
               {sep,[{text,"\ris called for"}],0,false},
               {text,"&*init/end_per_group(GroupName,Config)*"},
               {sep,
                [{text,
                  "4. However, information functions cannot be used with"}],
                0,false},
               {text,")*init/end_per_testcase(TestCase, Config)*"},
               {sep,
                [{text,
                  "´, as these configuration functions execute on the test case process and use the same properties as the test case (that is, the properties set by the test case information function,"}],
                0,false},
               {text,"\f*TestCase()*"},
               {sep,
                [{text,
                  "S). For a list of valid information properties and more general information, see the"}],
                0,false},
               {text,"0[Test Case Information Function](#info_function)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}},
     {sep,
      [{text,")<a name=\"data_priv_dir\">data_priv_dir</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [31,35,35,32,68,97,116,97,32,97,110,100,32,80,114,105,118,97,116,
            101,32,68,105,114,101,99,116,111,114,105,101,115]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [22,73,110,32,116,104,101,32,100,97,116,97,32,100,105,114,
                  101,99,116,111,114,121,44]}],
               0,false},
              {text,"\n*data_dir*"},
              {sep,
               [{text,
                 "G, the test module has its own files needed for the testing. The name of"}],
               0,false},
              {text,"\n*data_dir*"},
              {sep,
               [{text,"-is the the name of the test suite followed by"}],
               0,false},
              {text,"\t*\"_data\"*"},
              {sep,
               [{text,[14,46,32,70,111,114,32,101,120,97,109,112,108,101,44]}],
               0,false},
              {text,
               [28,42,34,115,111,109,101,95,112,97,116,104,47,102,111,111,95,
                83,85,73,84,69,46,98,101,97,109,34,42]},
              {sep,
               [{text,
                 [22,104,97,115,32,116,104,101,32,100,97,116,97,32,100,105,
                  114,101,99,116,111,114,121]}],
               0,false},
              {text,
               [29,42,34,115,111,109,101,95,112,97,116,104,47,102,111,111,95,
                83,85,73,84,69,95,100,97,116,97,47,34,42]},
              {sep,
               [{text,
                 [320,46,32,85,115,101,32,116,104,105,115,32,100,105,114,101,
                  99,116,111,114,121,32,102,111,114,32,112,111,114,116,97,98,
                  105,108,105,116,121,44,32,116,104,97,116,32,105,115,44,32,
                  116,111,32,97,118,111,105,100,32,104,97,114,100,99,111,100,
                  105,110,103,32,100,105,114,101,99,116,111,114,121,32,110,97,
                  109,101,115,32,105,110,32,121,111,117,114,32,115,117,105,
                  116,101,46,32,65,115,32,116,104,101,32,100,97,116,97,32,100,
                  105,114,101,99,116,111,114,121,32,105,115,32,115,116,111,
                  114,101,100,32,105,110,32,116,104,101,32,115,97,109,101,32,
                  100,105,114,101,99,116,111,114,121,32,97,115,32,121,111,117,
                  114,32,116,101,115,116,32,115,117,105,116,101,44,32,121,111,
                  117,32,99,97,110,32,114,101,108,121,32,111,110,32,105,116,
                  115,32,101,120,105,115,116,101,110,99,101,32,97,116,32,114,
                  117,110,116,105,109,101,44,32,101,118,101,110,32,105,102,32,
                  116,104,101,32,112,97,116,104,32,116,111,32,121,111,117,114,
                  32,116,101,115,116,32,115,117,105,116,101,32,100,105,114,
                  101,99,116,111,114,121,32,104,97,115,32,99,104,97,110,103,
                  101,100,32,98,101,116,119,101,101,110,32,116,101,115,116,32,
                  115,117,105,116,101,32,105,109,112,108,101,109,101,110,116,
                  97,116,105,111,110,32,97,110,100,32,101,120,101,99,117,116,
                  105,111,110,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\n*priv_dir*"},
              {sep,
               [{text,
                 "Ìis the private directory for the test cases. This directory can be used whenever a test case (or configuration function) needs to write something to file. The name of the private directory is generated by"}],
               0,false},
              {text,"\r*Common Test*"},
              {sep,[{text,"#, which also creates the directory."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\vBy default,"}],0,false},
              {text,"\r*Common Test*"},
              {sep,
               [{text,
                 "öcreates one central private directory per test run, shared by all test cases. This is not always suitable. Especially if the same test cases are executed multiple times during a test run (that is, if they belong to a test case group with property"}],
               0,false},
              {text,"\b*repeat*"},
              {sep,
               [{text,
                 "e) and there is a risk that files in the private directory get overwritten. Under these circumstances,"}],
               0,false},
              {text,"\r*Common Test*"},
              {sep,
               [{text,
                 [138,99,97,110,32,98,101,32,99,111,110,102,105,103,117,114,
                  101,100,32,116,111,32,99,114,101,97,116,101,32,111,110,101,
                  32,100,101,100,105,99,97,116,101,100,32,112,114,105,118,97,
                  116,101,32,100,105,114,101,99,116,111,114,121,32,112,101,
                  114,32,116,101,115,116,32,99,97,115,101,32,97,110,100,32,
                  101,120,101,99,117,116,105,111,110,32,105,110,115,116,101,
                  97,100,46,32,84,104,105,115,32,105,115,32,97,99,99,111,109,
                  112,108,105,115,104,101,100,32,119,105,116,104,32,116,104,
                  101,32,102,108,97,103,47,111,112,116,105,111,110]}],
               0,false},
              {text,
               [17,42,99,114,101,97,116,101,95,112,114,105,118,95,100,105,114,
                42]},
              {sep,
               [{text,
                 [20,40,116,111,32,98,101,32,117,115,101,100,32,119,105,116,
                  104,32,116,104,101]}],
               0,false},
              {text,
               [16,91,99,116,95,114,117,110,93,40,99,116,95,114,117,110,41]},
              {sep,[{text,"\fprogram, the"}],0,false},
              {text," [ct#run_test-1](./ct#run_test-1)"},
              {sep,
               [{text,
                 "efunction, or as test specification term). There are three possible values for this option as follows:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {text,[14,42,97,117,116,111,95,112,101,114,95,114,117,110,42]}],
          0,false},
         {sep,[{text,[1,42]},{text,"\r*auto_per_tc*"}],0,false}},
        {sep,
         [{text,[1,42]},
          {text,[15,42,109,97,110,117,97,108,95,112,101,114,95,116,99,42]}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"%The first value indicates the default"}],0,false},
              {text,"\n*priv_dir*"},
              {sep,
               [{text,
                 "Ybehavior, that is, one private directory created per test run. The two latter values tell"}],
               0,false},
              {text,"\r*Common Test*"},
              {sep,
               [{text,
                 "bto generate a unique test directory name per test case and execution. If the auto version is used,"}],
               0,false},
              {text,[7,42,42,97,108,108,42,42]},
              {sep,
               [{text,
                 "Õprivate directories are created automatically. This can become very inefficient for test runs with many test cases or repetitions, or both. Therefore, if the manual version is used instead, the test case must tell"}],
               0,false},
              {text,"\r*Common Test*"},
              {sep,[{text,"\tto create"}],0,false},
              {text,"\n*priv_dir*"},
              {sep,
               [{text,
                 "6when it needs it. It does this by calling the function"}],
               0,false},
              {text,"*[ct#make_priv_dir-0](./ct#make_priv_dir-0)"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
            {sep,
             [{text,[4,32,32,32,32]},
              {sep,
               [{sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [150,68,111,32,110,111,116,32,100,101,112,101,110,
                             100,32,111,110,32,116,104,101,32,99,117,114,114,
                             101,110,116,32,119,111,114,107,105,110,103,32,
                             100,105,114,101,99,116,111,114,121,32,102,111,
                             114,32,114,101,97,100,105,110,103,32,97,110,100,
                             32,119,114,105,116,105,110,103,32,100,97,116,97,
                             32,102,105,108,101,115,44,32,97,115,32,116,104,
                             105,115,32,105,115,32,110,111,116,32,112,111,114,
                             116,97,98,108,101,46,32,65,108,108,32,115,99,114,
                             97,116,99,104,32,102,105,108,101,115,32,97,114,
                             101,32,116,111,32,98,101,32,119,114,105,116,116,
                             101,110,32,105,110,32,116,104,101]}],
                          0,false},
                         {text,"\n*priv_dir*"},
                         {sep,
                          [{text,"'and all data files are to be located in"}],
                          0,false},
                         {text,"\n*data_dir*"},
                         {sep,[{text,"\v. Also, the"}],0,false},
                         {text,"\r*Common Test*"},
                         {sep,
                          [{text,
                            "dserver sets the current working directory to the test case log directory at the start of every case."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false}],
               0,true}],
             0,false}},
           {text,[0]}},
          null},
         null}}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [24,35,35,32,69,120,101,99,117,116,105,111,110,32,69,110,118,105,
           114,111,110,109,101,110,116]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "¶Each test case is executed by a dedicated Erlang process. The process is spawned when the test case starts, and terminated when the test case is finished. The configuration functions"}],
              0,false},
             {text,
              [19,42,105,110,105,116,95,112,101,114,95,116,101,115,116,99,97,
               115,101,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [18,42,101,110,100,95,112,101,114,95,116,101,115,116,99,97,115,
               101,42]},
             {sep,
              [{text,"-execute on the same process as the test case."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eThe configuration functions"}],0,false},
             {text,
              [16,42,105,110,105,116,95,112,101,114,95,115,117,105,116,101,
               42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [15,42,101,110,100,95,112,101,114,95,115,117,105,116,101,42]},
             {sep,
              [{text,
                "8execute, like test cases, on dedicated Erlang processes."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}},
   {sep,
    [{text,"!<a name=\"timetraps\">timetraps</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [21,35,35,32,84,105,109,101,116,114,97,112,32,84,105,109,101,45,79,
          117,116,115]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ">The default time limit for a test case is 30 minutes, unless a"}],
             0,false},
            {text,"\n*timetrap*"},
            {sep,
             [{text,
               "tis specified either by the suite-, group-, or test case information function. The timetrap time-out value defined by"}],
             0,false},
            {text,"\t*suite/0*"},
            {sep,
             [{text,
               "^is the value that is used for each test case in the suite (and for the configuration functions"}],
             0,false},
            {text,
             [18,42,105,110,105,116,95,112,101,114,95,115,117,105,116,101,47,
              49,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [17,42,101,110,100,95,112,101,114,95,115,117,105,116,101,47,49,
              42]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [18,42,105,110,105,116,95,112,101,114,95,103,114,111,117,112,47,
              50,42]},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,
             [17,42,101,110,100,95,112,101,114,95,103,114,111,117,112,47,50,
              42]},
            {sep,
             [{text,
               [30,41,46,32,65,32,116,105,109,101,116,114,97,112,32,118,97,
                108,117,101,32,100,101,102,105,110,101,100,32,98,121]}],
             0,false},
            {text,
             [18,42,103,114,111,117,112,40,71,114,111,117,112,78,97,109,101,
              41,42]},
            {sep,
             [{text,
               [24,111,118,101,114,114,105,100,101,115,32,111,110,101,32,100,
                101,102,105,110,101,100,32,98,121]}],
             0,false},
            {text,"\t*suite()*"},
            {sep,[{text,"'and is used for each test case in group"}],0,false},
            {text,"\v*GroupName*"},
            {sep,
             [{text,
               "=, and any of its subgroups. If a timetrap value is defined by"}],
             0,false},
            {text,"\t*group/1*"},
            {sep,
             [{text,
               "Ãfor a subgroup, it overrides that of its higher level groups. Timetrap values set by individual test cases (by the test case information function) override both group- and suite- level timetraps."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [135,65,32,116,105,109,101,116,114,97,112,32,99,97,110,32,97,
                108,115,111,32,98,101,32,115,101,116,32,111,114,32,114,101,
                115,101,116,32,100,121,110,97,109,105,99,97,108,108,121,32,
                100,117,114,105,110,103,32,116,104,101,32,101,120,101,99,117,
                116,105,111,110,32,111,102,32,97,32,116,101,115,116,32,99,97,
                115,101,44,32,111,114,32,99,111,110,102,105,103,117,114,97,
                116,105,111,110,32,102,117,110,99,116,105,111,110,46,32,84,
                104,105,115,32,105,115,32,100,111,110,101,32,98,121,32,99,97,
                108,108,105,110,103]}],
             0,false},
            {text," [ct#timetrap-1](./ct#timetrap-1)"},
            {sep,
             [{text,
               [133,46,32,84,104,105,115,32,102,117,110,99,116,105,111,110,32,
                99,97,110,99,101,108,115,32,116,104,101,32,99,117,114,114,101,
                110,116,32,116,105,109,101,116,114,97,112,32,97,110,100,32,
                115,116,97,114,116,115,32,97,32,110,101,119,32,111,110,101,32,
                40,116,104,97,116,32,115,116,97,121,115,32,97,99,116,105,118,
                101,32,117,110,116,105,108,32,116,105,109,101,45,111,117,116,
                44,32,111,114,32,101,110,100,32,111,102,32,116,104,101,32,99,
                117,114,114,101,110,116,32,102,117,110,99,116,105,111,110,41,
                46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "XTimetrap values can be extended with a multiplier value specified at startup with option"}],
             0,false},
            {text,
             [20,42,109,117,108,116,105,112,108,121,95,116,105,109,101,116,
              114,97,112,115,42]},
            {sep,
             [{text,
               [129,46,32,73,116,32,105,115,32,97,108,115,111,32,112,111,115,
                115,105,98,108,101,32,116,111,32,108,101,116,32,116,104,101,
                32,116,101,115,116,32,115,101,114,118,101,114,32,100,101,99,
                105,100,101,32,116,111,32,115,99,97,108,101,32,117,112,32,116,
                105,109,101,116,114,97,112,32,116,105,109,101,45,111,117,116,
                32,118,97,108,117,101,115,32,97,117,116,111,109,97,116,105,99,
                97,108,108,121,46,32,84,104,97,116,32,105,115,44,32,105,102,
                32,116,111,111,108,115,32,115,117,99,104,32,97,115]}],
             0,false},
            {text,[7,42,99,111,118,101,114,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[7,42,116,114,97,99,101,42]},
            {sep,
             [{text,
               "eare running during the test. This feature is disabled by default and can be enabled with start option"}],
             0,false},
            {text,
             [17,42,115,99,97,108,101,95,116,105,109,101,116,114,97,112,115,
              42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "MIf a test case needs to suspend itself for a time that also gets multipled by"}],
             0,false},
            {text,
             [20,42,109,117,108,116,105,112,108,121,95,116,105,109,101,116,
              114,97,112,115,42]},
            {sep,
             [{text,
               [31,40,97,110,100,32,112,111,115,115,105,98,108,121,32,97,108,
                115,111,32,115,99,97,108,101,100,32,117,112,32,105,102]}],
             0,false},
            {text,
             [17,42,115,99,97,108,101,95,116,105,109,101,116,114,97,112,115,
              42]},
            {sep,
             [{text,
               [25,105,115,32,101,110,97,98,108,101,100,41,44,32,116,104,101,
                32,102,117,110,99,116,105,111,110]}],
             0,false},
            {text,
             [26,91,99,116,35,115,108,101,101,112,45,49,93,40,46,47,99,116,35,
              115,108,101,101,112,45,49,41]},
            {sep,[{text,"%can be used (instead of, for example,"}],0,false},
            {text,[15,42,116,105,109,101,114,58,115,108,101,101,112,47,49,42]},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fA function ("}],0,false},
            {text,[7,42,102,117,110,47,48,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,
             [17,42,123,77,111,100,44,70,117,110,99,44,65,114,103,115,125,42]},
            {sep,
             [{text,
               [133,40,77,70,65,41,32,116,117,112,108,101,41,32,99,97,110,32,
                98,101,32,115,112,101,99,105,102,105,101,100,32,97,115,32,116,
                105,109,101,116,114,97,112,32,118,97,108,117,101,32,105,110,
                32,116,104,101,32,115,117,105,116,101,45,44,32,103,114,111,
                117,112,45,32,97,110,100,32,116,101,115,116,32,99,97,115,101,
                32,105,110,102,111,114,109,97,116,105,111,110,32,102,117,110,
                99,116,105,111,110,44,32,97,110,100,32,97,115,32,97,114,103,
                117,109,101,110,116,32,116,111,32,102,117,110,99,116,105,111,
                110]}],
             0,false},
            {text," [ct#timetrap-1](./ct#timetrap-1)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "<*{timetrap,{my_test_utils,timetrap,[?MODULE,system_start]}}*"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "=*ct:timetrap(fun() -> my_timetrap(TestCaseName, Config) end)*"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "AThe user timetrap function can be used for two things as follows:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {text,
         "JTo act as a timetrap. The time-out is triggered when the function returns."}],
       0,false},
      {sep,
       [{text,[1,42]},
        {text,"8To return a timetrap time value (other than a function)."}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "iBefore execution of the timetrap function (which is performed on a parallel, dedicated timetrap process),"}],
             0,false},
            {text,"\r*Common Test*"},
            {sep,
             [{text,
               [140,99,97,110,99,101,108,115,32,97,110,121,32,112,114,101,118,
                105,111,117,115,108,121,32,115,101,116,32,116,105,109,101,114,
                32,102,111,114,32,116,104,101,32,116,101,115,116,32,99,97,115,
                101,32,111,114,32,99,111,110,102,105,103,117,114,97,116,105,
                111,110,32,102,117,110,99,116,105,111,110,46,32,87,104,101,
                110,32,116,104,101,32,116,105,109,101,116,114,97,112,32,102,
                117,110,99,116,105,111,110,32,114,101,116,117,114,110,115,44,
                32,116,104,101,32,116,105,109,101,45,111,117,116,32,105,115,
                32,116,114,105,103,103,101,114,101,100,44]}],
             0,false},
            {text,"\n**unless**"},
            {sep,
             [{text,
               "Cthe return value is a valid timetrap time, such as an integer, or a"}],
             0,false},
            {text,
             [24,42,123,83,101,99,77,105,110,79,114,72,111,117,114,84,97,103,
              44,84,105,109,101,125,42]},
            {sep,
             [{text,
               [30,116,117,112,108,101,32,40,102,111,114,32,100,101,116,97,
                105,108,115,44,32,115,101,101,32,109,111,100,117,108,101]}],
             0,false},
            {text,
             [26,91,99,111,109,109,111,110,95,116,101,115,116,93,40,99,111,
              109,109,111,110,95,116,101,115,116,41]},
            {sep,
             [{text,
               "j). If a time value is returned, a new timetrap is started to generate a time-out after the specified time."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "tThe user timetrap function can return a time value after a delay. The effective timetrap time is then the delay time"}],
             0,false},
            {text,"\b**plus**"},
            {sep,
             [{text,
               [18,116,104,101,32,114,101,116,117,114,110,101,100,32,116,105,
                109,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{text,
     [29,60,97,32,110,97,109,101,61,34,108,111,103,103,105,110,103,34,62,108,
      111,103,103,105,110,103,60,47,97,62]},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,",## Logging - Categories and Verbosity Levels"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"\r*Common Test*"},
           {sep,
            [{text,
              "Aprovides the following three main functions for printing strings:"}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {text,"8*ct:log(Category, Importance, Format, FormatArgs, Opts)*"}],
       0,false},
      {sep,
       [{text,[1,42]},
        {text,"4*ct:print(Category, Importance, Format, FormatArgs)*"}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {text,"2*ct:pal(Category, Importance, Format, FormatArgs)*"}],
      0,false}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,[3,84,104,101]}],0,false},
           {text,
            [22,91,99,116,35,108,111,103,45,49,93,40,46,47,99,116,35,108,111,
             103,45,49,41]},
           {sep,
            [{text,
              "7function prints a string to the test case log file. The"}],
            0,false},
           {text,
            [26,91,99,116,35,112,114,105,110,116,45,49,93,40,46,47,99,116,35,
             112,114,105,110,116,45,49,41]},
           {sep,[{text,")function prints the string to screen. The"}],0,false},
           {text,
            [22,91,99,116,35,112,97,108,45,49,93,40,46,47,99,116,35,112,97,
             108,45,49,41]},
           {sep,
            [{text,
              "^function prints the same string both to file and screen. The functions are described in module"}],
            0,false},
           {text,"\b[ct](ct)"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"\fThe optional"}],0,false},
           {text,"\n*Category*"},
           {sep,
            [{text,
              "fargument can be used to categorize the log printout. Categories can be used for two things as follows:"}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {text,
        "HTo compare the importance of the printout to a specific verbosity level."}],
      0,false},
     {sep,
      [{text,[1,42]},
       {text,
        "KTo format the printout according to a user-specific HTML Style Sheet (CSS)."}],
      0,false}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"\bArgument"}],0,false},
           {text,"\f*Importance*"},
           {sep,
            [{text,
              [147,115,112,101,99,105,102,105,101,115,32,97,32,108,101,118,
               101,108,32,111,102,32,105,109,112,111,114,116,97,110,99,101,32,
               116,104,97,116,44,32,99,111,109,112,97,114,101,100,32,116,111,
               32,97,32,118,101,114,98,111,115,105,116,121,32,108,101,118,101,
               108,32,40,103,101,110,101,114,97,108,32,97,110,100,47,111,114,
               32,115,101,116,32,112,101,114,32,99,97,116,101,103,111,114,121,
               41,44,32,100,101,116,101,114,109,105,110,101,115,32,105,102,32,
               116,104,101,32,112,114,105,110,116,111,117,116,32,105,115,32,
               116,111,32,98,101,32,118,105,115,105,98,108,101,46]}],
            0,false},
           {text,"\f*Importance*"},
           {sep,
            [{text,
              "Dis any integer in the range 0..99. Predefined constants exist in the"}],
            0,false},
           {text,"\b*ct.hrl*"},
           {sep,
            [{text,"*header file. The default importance level,"}],
            0,false},
           {text,[17,42,63,83,84,68,95,73,77,80,79,82,84,65,78,67,69,42]},
           {sep,
            [{text,
              [17,40,117,115,101,100,32,105,102,32,97,114,103,117,109,101,110,
               116]}],
            0,false},
           {text,"\f*Importance*"},
           {sep,
            [{text,
              "qis not provided), is 50. This is also the importance used for standard I/O, for example, from printouts made with"}],
            0,false},
           {text,"\r*io:format/2*"},
           {sep,[{text,[1,44]}],0,false},
           {text,[16,42,105,111,58,112,117,116,95,99,104,97,114,115,47,49,42]},
           {sep,[{text,"\f, and so on."}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"\f*Importance*"},
           {sep,
            [{text,"+is compared to a verbosity level set by the"}],
            0,false},
           {text,"\v*verbosity*"},
           {sep,
            [{text,
              "Nstart flag/option. The level can be set per category or generally, or both. If"}],
            0,false},
           {text,"\v*verbosity*"},
           {sep,[{text,"(is not set by the user, a level of 100 ("}],0,false},
           {text,[16,42,63,77,65,88,95,86,69,82,66,79,83,73,84,89,42]},
           {sep,
            [{text,"2= all printouts visible) is used as default value."}],
            0,false},
           {text,"\r*Common Test*"},
           {sep,
            [{text,
              [28,112,101,114,102,111,114,109,115,32,116,104,101,32,102,111,
               108,108,111,119,105,110,103,32,116,101,115,116,58]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,[{text,"#\nImportance >= (100-VerbosityLevel)"}],0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"\fThe constant"}],0,false},
           {text,[16,42,63,83,84,68,95,86,69,82,66,79,83,73,84,89,42]},
           {sep,
            [{text,
              [17,104,97,115,32,118,97,108,117,101,32,53,48,32,40,115,101,
               101]}],
            0,false},
           {text,"\b*ct.hrl*"},
           {sep,
            [{text,
              "Ê). At this level, all standard I/O gets printed. If a lower verbosity level is set, standard I/O printouts are ignored. Verbosity level 0 effectively turns all logging off (except from printouts made by"}],
            0,false},
           {text,"\r*Common Test*"},
           {sep,[{text,"\bitself)."}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [151,84,104,101,32,103,101,110,101,114,97,108,32,118,101,114,98,
               111,115,105,116,121,32,108,101,118,101,108,32,105,115,32,110,
               111,116,32,97,115,115,111,99,105,97,116,101,100,32,119,105,116,
               104,32,97,110,121,32,112,97,114,116,105,99,117,108,97,114,32,
               99,97,116,101,103,111,114,121,46,32,84,104,105,115,32,108,101,
               118,101,108,32,115,101,116,115,32,116,104,101,32,116,104,114,
               101,115,104,111,108,100,32,102,111,114,32,116,104,101,32,115,
               116,97,110,100,97,114,100,32,73,47,79,32,112,114,105,110,116,
               111,117,116,115,44,32,117,110,99,97,116,101,103,111,114,105,
               122,101,100]}],
            0,false},
           {text,
            [18,42,99,116,58,108,111,103,47,112,114,105,110,116,47,112,97,108,
             42]},
           {sep,
            [{text,
              "Gprintouts, and printouts for categories with undefined verbosity level."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Some printouts during test case execution:"}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [482,10,32,105,111,58,102,111,114,109,97,116,40,34,49,46,32,83,
             116,97,110,100,97,114,100,32,73,79,44,32,105,109,112,111,114,116,
             97,110,99,101,32,61,32,126,119,126,110,34,44,32,91,63,83,84,68,
             95,73,77,80,79,82,84,65,78,67,69,93,41,44,10,32,99,116,58,108,
             111,103,40,34,50,46,32,85,110,99,97,116,101,103,111,114,105,122,
             101,100,44,32,105,109,112,111,114,116,97,110,99,101,32,61,32,126,
             119,34,44,32,91,63,83,84,68,95,73,77,80,79,82,84,65,78,67,69,93,
             41,44,10,32,99,116,58,108,111,103,40,105,110,102,111,44,32,34,51,
             46,32,67,97,116,101,103,111,114,105,122,101,100,32,105,110,102,
             111,44,32,105,109,112,111,114,116,97,110,99,101,32,61,32,126,119,
             34,44,32,91,63,83,84,68,95,73,77,80,79,82,84,65,78,67,69,93,41,
             44,10,32,99,116,58,108,111,103,40,105,110,102,111,44,32,63,76,79,
             87,95,73,77,80,79,82,84,65,78,67,69,44,32,34,52,46,32,67,97,116,
             101,103,111,114,105,122,101,100,32,105,110,102,111,44,32,105,109,
             112,111,114,116,97,110,99,101,32,61,32,126,119,34,44,32,91,63,76,
             79,87,95,73,77,80,79,82,84,65,78,67,69,93,41,44,10,32,99,116,58,
             108,111,103,40,101,114,114,111,114,44,32,63,72,73,95,73,77,80,79,
             82,84,65,78,67,69,44,32,34,53,46,32,67,97,116,101,103,111,114,
             105,122,101,100,32,101,114,114,111,114,44,32,105,109,112,111,114,
             116,97,110,99,101,32,61,32,126,119,34,44,32,91,63,72,73,95,73,77,
             80,79,82,84,65,78,67,69,93,41,44,10,32,99,116,58,108,111,103,40,
             101,114,114,111,114,44,32,63,77,65,88,95,73,77,80,79,82,84,65,78,
             67,69,44,32,34,54,46,32,67,97,116,101,103,111,114,105,122,101,
             100,32,101,114,114,111,114,44,32,105,109,112,111,114,116,97,110,
             99,101,32,61,32,126,119,34,44,32,91,63,77,65,88,95,73,77,80,79,
             82,84,65,78,67,69,93,41,44]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              ";If starting the test with a general verbosity level of 50 ("}],
            0,false},
           {text,[16,42,63,83,84,68,95,86,69,82,66,79,83,73,84,89,42]},
           {sep,[{text,[2,41,58]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [24,10,32,36,32,99,116,95,114,117,110,32,45,118,101,114,98,111,
             115,105,116,121,32,53,48]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,116,104,101,32,102,111,108,108,111,119,105,110,103,32,105,115,
             32,112,114,105,110,116,101,100,58]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "¸\n 1. Standard IO, importance = 50\n 2. Uncategorized, importance = 50\n 3. Categorized info, importance = 50\n 5. Categorized error, importance = 75\n 6. Categorized error, importance = 99"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [26,73,102,32,115,116,97,114,116,105,110,103,32,116,104,101,32,
             116,101,115,116,32,119,105,116,104,58]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,[{text,"#\n $ ct_run -verbosity 1 and info 75"}],0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,116,104,101,32,102,111,108,108,111,119,105,110,103,32,105,115,
             32,112,114,105,110,116,101,100,58]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "s\n 3. Categorized info, importance = 50\n 4. Categorized info, importance = 25\n 6. Categorized error, importance = 99"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "oNote that the category argument is not required in order to only specify the importance of a printout. Example:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,"3\nct:pal(?LOW_IMPORTANCE, \"Info report: ~p\", [Info])"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Or perhaps in combination with constants:"}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [150,10,45,100,101,102,105,110,101,40,73,78,70,79,44,32,63,76,79,
             87,95,73,77,80,79,82,84,65,78,67,69,41,46,10,45,100,101,102,105,
             110,101,40,69,82,82,79,82,44,32,63,72,73,95,73,77,80,79,82,84,65,
             78,67,69,41,46,10,10,99,116,58,108,111,103,40,63,73,78,70,79,44,
             32,34,73,110,102,111,32,114,101,112,111,114,116,58,32,126,112,34,
             44,32,91,73,110,102,111,93,41,10,99,116,58,112,97,108,40,63,69,
             82,82,79,82,44,32,34,69,114,114,111,114,32,114,101,112,111,114,
             116,58,32,126,112,34,44,32,91,69,114,114,111,114,93,41]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"\rThe functions"}],0,false},
           {text,"*[ct#set_verbosity-2](./ct#set_verbosity-2)"},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,"*[ct#get_verbosity-1](./ct#get_verbosity-1)"},
           {sep,
            [{text,
              "Fmay be used to modify and read verbosity levels during test execution."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"\rThe arguments"}],0,false},
           {text,"\b*Format*"},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,"\f*FormatArgs*"},
           {sep,[{text,[2,105,110]}],0,false},
           {text,
            [18,42,99,116,58,108,111,103,47,112,114,105,110,116,47,112,97,108,
             42]},
           {sep,
            [{text,"+are always passed on to the STDLIB function"}],
            0,false},
           {text,"\r*io:format/3*"},
           {sep,
            [{text,
              [21,40,70,111,114,32,100,101,116,97,105,108,115,44,32,115,101,
               101,32,116,104,101]}],
            0,false},
           {text,
            [17,91,115,116,100,108,105,98,47,105,111,93,40,46,47,105,111,41]},
           {sep,[{text,"\rmanual page)."}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"\n*ct:pal/4*"},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,"\n*ct:log/5*"},
           {sep,
            [{text,
              "öadd headers to strings being printed to the log file. The strings are also wrapped in div tags with a CSS class attribute, so that stylesheet formatting can be applied. To disable this feature for a printout (i.e. to get a result similar to using"}],
            0,false},
           {text,"\r*io:format/2*"},
           {sep,[{text,[7,41,44,32,99,97,108,108]}],0,false},
           {text,"\n*ct:log/5*"},
           {sep,[{text,"\bwith the"}],0,false},
           {text,"\b*no_css*"},
           {sep,[{text,[7,111,112,116,105,111,110,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "AHow categories can be mapped to CSS tags is documented in section"}],
            0,false},
           {text,"7[HTML Style Sheets](./run_test_chapter#html_stylesheet)"},
           {sep,
            [{text,"/in section Running Tests and Analyzing Results."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "cCommon Test will escape special HTML characters (<, > and &) in printouts to the log file made with"}],
            0,false},
           {text,"\n*ct:pal/4*"},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,"\r*io:format/2*"},
           {sep,
            [{text,
              ">. In order to print strings with HTML tags to the log, use the"}],
            0,false},
           {text,[14,42,99,116,58,108,111,103,47,51,44,52,44,53,42]},
           {sep,
            [{text,
              "Dfunction. The character escaping feature is per default disabled for"}],
            0,false},
           {text,[14,42,99,116,58,108,111,103,47,51,44,52,44,53,42]},
           {sep,[{text,"\ebut can be enabled with the"}],0,false},
           {text,"\v*esc_chars*"},
           {sep,[{text,"\roption in the"}],0,false},
           {text,[6,42,79,112,116,115,42]},
           {sep,[{text,"\tlist, see"}],0,false},
           {text,
            [22,91,99,116,35,108,111,103,45,53,93,40,46,47,99,116,35,108,111,
             103,45,53,41]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "oIf the character escaping feature needs to be disabled (typically for backwards compatibility reasons), use the"}],
            0,false},
           {text,"\b*ct_run*"},
           {sep,[{text,"\nstart flag"}],0,false},
           {text,[15,42,45,110,111,95,101,115,99,95,99,104,97,114,115,42]},
           {sep,[{text,"\b, or the"}],0,false},
           {text,[15,42,99,116,58,114,117,110,95,116,101,115,116,47,49,42]},
           {sep,[{text,"\fstart option"}],0,false},
           {text,
            [18,42,123,101,115,99,95,99,104,97,114,115,44,66,111,111,108,125,
             42]},
           {sep,
            [{text,
              "=(this start option is also supported in test specifications)."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"1For more information about log files, see section"}],
            0,false},
           {text,")[Log Files](./run_test_chapter#log_files)"},
           {sep,
            [{text,"/in section Running Tests and Analyzing Results."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [23,35,35,32,73,108,108,101,103,97,108,32,68,101,112,101,110,100,101,
        110,99,105,101,115]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "@Even though it is highly efficient to write test suites with the"}],
           0,false},
          {text,"\r*Common Test*"},
          {sep,
           [{text,
             "´framework, mistakes can be made, mainly because of illegal dependencies. Some of the more frequent mistakes from our own experience with running the Erlang/OTP test suites follows:"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "2Depending on current directory, and writing there:"}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "ðThis is a common error in test suites. It is assumed that the current directory is the same as the author used as current directory when the test case was developed. Many test cases even try to write scratch files to this directory. Instead"}],
                    0,false},
                   {text,"\n*data_dir*"},
                   {sep,[{text,[3,97,110,100]}],0,false},
                   {text,"\n*priv_dir*"},
                   {sep,
                    [{text,
                      "<are to be used to locate data and for writing scratch files."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    [29,68,101,112,101,110,100,105,110,103,32,111,110,32,101,
                     120,101,99,117,116,105,111,110,32,111,114,100,101,114,
                     58]}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "õDuring development of test suites, make no assumptions on the execution order of the test cases or suites. For example, a test case must not assume that a server it depends on is already started by a previous test case. Reasons for this follows:"}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {text,
                 [127,84,104,101,32,117,115,101,114,47,111,112,101,114,97,116,
                  111,114,32,99,97,110,32,115,112,101,99,105,102,121,32,116,
                  104,101,32,111,114,100,101,114,32,97,116,32,119,105,108,108,
                  44,32,97,110,100,32,109,97,121,98,101,32,97,32,100,105,102,
                  102,101,114,101,110,116,32,101,120,101,99,117,116,105,111,
                  110,32,111,114,100,101,114,32,105,115,32,115,111,109,101,
                  116,105,109,101,115,32,109,111,114,101,32,114,101,108,101,
                  118,97,110,116,32,111,114,32,101,102,102,105,99,105,101,110,
                  116,46]}],
               0,false},
              {sep,
               [{text,[1,42]},
                {text,
                 "ÁIf the user specifies a whole directory of test suites for the test, the execution order of the suites depends on how the files are listed by the operating system, which varies between systems."}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {text,
                "yIf a user wants to run only a subset of a test suite, there is no way one test case could successfully depend on another."}],
              0,false}}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   [18,68,101,112,101,110,100,105,110,103,32,111,110,32,85,
                    110,105,120,58]}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [29,82,117,110,110,105,110,103,32,85,110,105,120,32,99,
                      111,109,109,97,110,100,115,32,116,104,114,111,117,103,
                      104]}],
                   0,false},
                  {text,"\b*os:cmd*"},
                  {sep,
                   [{text,"-are likely not to work on non-Unix platforms."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [18,78,101,115,116,101,100,32,116,101,115,116,32,99,97,115,
                   101,115,58]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [280,83,116,97,114,116,105,110,103,32,97,32,116,101,115,116,
                   32,99,97,115,101,32,102,114,111,109,32,97,110,111,116,104,
                   101,114,32,110,111,116,32,111,110,108,121,32,116,101,115,
                   116,115,32,116,104,101,32,115,97,109,101,32,116,104,105,
                   110,103,32,116,119,105,99,101,44,32,98,117,116,32,97,108,
                   115,111,32,109,97,107,101,115,32,105,116,32,104,97,114,100,
                   101,114,32,116,111,32,102,111,108,108,111,119,32,119,104,
                   97,116,32,105,115,32,98,101,105,110,103,32,116,101,115,116,
                   101,100,46,32,65,108,115,111,44,32,105,102,32,116,104,101,
                   32,99,97,108,108,101,100,32,116,101,115,116,32,99,97,115,
                   101,32,102,97,105,108,115,32,102,111,114,32,115,111,109,
                   101,32,114,101,97,115,111,110,44,32,115,111,32,100,111,32,
                   116,104,101,32,99,97,108,108,101,114,46,32,84,104,105,115,
                   32,119,97,121,44,32,111,110,101,32,101,114,114,111,114,32,
                   103,105,118,101,115,32,99,97,117,115,101,32,116,111,32,115,
                   101,118,101,114,97,108,32,101,114,114,111,114,32,114,101,
                   112,111,114,116,115,44,32,119,104,105,99,104,32,105,115,32,
                   116,111,32,98,101,32,97,118,111,105,100,101,100,46]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "ËFunctionality common for many test case functions can be implemented in common help functions. If these functions are useful for test cases across suites, put the help functions into common help modules."}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,".Failure to crash or exit when things go wrong:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 [316,77,97,107,105,110,103,32,114,101,113,117,101,115,116,
                  115,32,119,105,116,104,111,117,116,32,99,104,101,99,107,105,
                  110,103,32,116,104,97,116,32,116,104,101,32,114,101,116,117,
                  114,110,32,118,97,108,117,101,32,105,110,100,105,99,97,116,
                  101,115,32,115,117,99,99,101,115,115,32,99,97,110,32,98,101,
                  32,79,75,32,105,102,32,116,104,101,32,116,101,115,116,32,99,
                  97,115,101,32,102,97,105,108,115,32,108,97,116,101,114,44,
                  32,98,117,116,32,105,116,32,105,115,32,110,101,118,101,114,
                  32,97,99,99,101,112,116,97,98,108,101,32,106,117,115,116,32,
                  116,111,32,112,114,105,110,116,32,97,110,32,101,114,114,111,
                  114,32,109,101,115,115,97,103,101,32,40,105,110,116,111,32,
                  116,104,101,32,108,111,103,32,102,105,108,101,41,32,97,110,
                  100,32,114,101,116,117,114,110,32,115,117,99,99,101,115,115,
                  102,117,108,108,121,46,32,83,117,99,104,32,116,101,115,116,
                  32,99,97,115,101,115,32,100,111,32,104,97,114,109,44,32,97,
                  115,32,116,104,101,121,32,99,114,101,97,116,101,32,97,32,
                  102,97,108,115,101,32,115,101,110,115,101,32,111,102,32,115,
                  101,99,117,114,105,116,121,32,119,104,101,110,32,111,118,
                  101,114,118,105,101,119,105,110,103,32,116,104,101,32,116,
                  101,115,116,32,114,101,115,117,108,116,115,46]}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"%Messing up for subsequent test cases:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "¥Test cases are to restore as much of the execution environment as possible, so that subsequent test cases do not crash because of their execution order. The function"}],
                0,false},
               {text,
                "P[common_test#Module:end_per_testcase-2](./common_test#Module:end_per_testcase-2)"},
               {sep,
                [{text,
                  [21,105,115,32,115,117,105,116,97,98,108,101,32,102,111,114,
                   32,116,104,105,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}}],
  0,false}}
