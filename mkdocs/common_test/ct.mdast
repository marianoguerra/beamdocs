{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[4,35,32,99,116]},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[4,35,32,99,116]},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Main user interface for the Common Test framework."}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\eMain user interface for the"}],0,false},
                 {text,"\r*Common Test*"},
                 {sep,[{text,"\nframework."}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "[This module implements the command-line interface for running tests and basic functions for"}],
                  0,false},
                 {text,"\r*Common Test*"},
                 {sep,
                  [{text,"/case issues, such as configuration and logging."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [29,42,42,84,101,115,116,32,83,117,105,116,101,32,83,117,
                   112,112,111,114,116,32,77,97,99,114,111,115,42,42]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[3,84,104,101]}],0,false},
                 {text,"\b*config*"},
                 {sep,
                  [{text,
                    [19,109,97,99,114,111,32,105,115,32,100,101,102,105,110,
                     101,100,32,105,110]}],
                  0,false},
                 {text,"\b*ct.hrl*"},
                 {sep,
                  [{text,
                    ";. This macro is to be used to retrieve information from the"}],
                  0,false},
                 {text,"\b*Config*"},
                 {sep,
                  [{text,
                    [146,118,97,114,105,97,98,108,101,32,115,101,110,116,32,
                     116,111,32,97,108,108,32,116,101,115,116,32,99,97,115,
                     101,115,46,32,73,116,32,105,115,32,117,115,101,100,32,
                     119,105,116,104,32,116,119,111,32,97,114,103,117,109,101,
                     110,116,115,59,32,116,104,101,32,102,105,114,115,116,32,
                     105,115,32,116,104,101,32,110,97,109,101,32,111,102,32,
                     116,104,101,32,99,111,110,102,105,103,117,114,97,116,105,
                     111,110,32,118,97,114,105,97,98,108,101,32,116,111,32,
                     114,101,116,114,105,101,118,101,44,32,116,104,101,32,115,
                     101,99,111,110,100,32,105,115,32,116,104,101]}],
                  0,false},
                 {text,"\b*Config*"},
                 {sep,
                  [{text,"#variable supplied to the test case."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,")Possible configuration variables include:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,"\n*data_dir*"},
                {sep,
                 [{text,
                   [21,45,32,68,97,116,97,32,102,105,108,101,32,100,105,114,
                    101,99,116,111,114,121]}],
                 0,false}],
               0,false}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,"\n*priv_dir*"},
                {sep,
                 [{text,
                   [24,45,32,83,99,114,97,116,99,104,32,102,105,108,101,32,
                    100,105,114,101,99,116,111,114,121]}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [17,87,104,97,116,101,118,101,114,32,97,100,100,101,100,32,
                   98,121]}],
                0,false},
               {text,
                "L[common_test#Module:init_per_suite-1](./common_test#Module:init_per_suite-1)"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                "R[common_test#Module:init_per_testcase-2](./common_test#Module:init_per_testcase-2)"},
               {sep,
                [{text,
                  [18,105,110,32,116,104,101,32,116,101,115,116,32,115,117,
                   105,116,101,46]}],
                0,false}],
              0,false}],
            0,false}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## Data Types"},null},null}},
    {text,
     [25,60,97,32,110,97,109,101,61,34,116,121,112,101,115,34,62,116,121,112,
      101,115,60,47,97,62]},
    {above,
     {above,
      {text,[4,60,100,108,62]},
      {nest,4,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{sep,
                              [{text,"\vtype-handle"},
                               {text,
                                [16,104,97,110,100,108,101,40,41,32,61,32,112,
                                 105,100,40,41]}],
                              0,false}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   "&The identity (handle) of a connection."}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{sep,
                             [{text,
                               [15,116,121,112,101,45,99,111,110,102,105,103,
                                95,107,101,121]},
                              {text,
                               [21,99,111,110,102,105,103,95,107,101,121,40,
                                41,32,61,32,97,116,111,109,40,41]}],
                             0,false}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,
                                 "8A configuration key which exists in a configuration file"}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{sep,
                           [{text,
                             [16,116,121,112,101,45,116,97,114,103,101,116,95,
                              110,97,109,101]},
                            {text,
                             [22,116,97,114,103,101,116,95,110,97,109,101,40,
                              41,32,61,32,97,116,111,109,40,41]}],
                           0,false}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 "aA name and association to configuration data introduced through a require statement, or a call to"}],
                               0,false},
                              {text,"\trequire-2"},
                              {sep,
                               [{text,
                                 [14,44,32,102,111,114,32,101,120,97,109,112,
                                  108,101,44]}],
                               0,false},
                              {text,"&ct:require(mynodename,{node,[telnet]})"},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{sep,
                         [{text,
                           [16,116,121,112,101,45,107,101,121,95,111,114,95,
                            110,97,109,101]},
                          {text,
                           ",key_or_name() = config_key() | target_name()"}],
                         0,false}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {text,[0]},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{sep,
                       [{text,
                         [21,116,121,112,101,45,99,111,110,110,95,108,111,103,
                          95,111,112,116,105,111,110,115]},
                        {text,"(conn_log_options() = [conn_log_option()]"}],
                       0,false}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text," Options that can be given to the"}],
                           0,false},
                          {text,"\fcth_conn_log"},
                          {sep,
                           [{text,
                             "Fhook, which is used for logging of NETCONF and Telnet connections. See"}],
                           0,false},
                          {text,"\vct_netconfc"},
                          {sep,[{text,[2,111,114]}],0,false},
                          {text,"\tct_telnet"},
                          {sep,
                           [{text,
                             "5for description and examples of how to use this hook."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{text,
                       [20,116,121,112,101,45,99,111,110,110,95,108,111,103,
                        95,111,112,116,105,111,110]},
                      {text,
                       "Hconn_log_option() = {log_type,conn_log_type()} | {hosts,[key_or_name()]}"}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,[0]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{sep,
                   [{text,
                     [18,116,121,112,101,45,99,111,110,110,95,108,111,103,95,
                      116,121,112,101]},
                    {text,".conn_log_type() = raw | pretty | html | silent"}],
                   0,false}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,[0]},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,116,62]},
              {sep,
               [{sep,
                 [{text,
                   [17,116,121,112,101,45,99,111,110,110,95,108,111,103,95,
                    109,111,100]},
                  {text,"(conn_log_mod() = ct_netconfc | ct_telnet"}],
                 0,false}],
               0,false},
              {text,[5,60,47,100,116,62]}],
             0,true},
            null},
           null}}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{text,[4,60,100,100,62]},{text,[0]},{text,[5,60,47,100,100,62]}],
            0,true},
           null},
          null}}}}},
     {text,[5,60,47,100,108,62]}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,">## abort_current_testcase(Reason) -> ok | {error, ErrorReason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")Aborts the currently executing test case."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,"2ErrorReason = no_testcase_running | parallel_group"}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      "?<a name=\"abort_current_testcase-1\">abort_current_testcase-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ñAborts the currently executing test case. The user must know with certainty which test case is currently executing. The function is therefore only safe to call from a function that has been called (or synchronously invoked) by the test case."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\b*Reason*"},
            {sep,
             [{text,
               "I, the reason for aborting the test case, is printed in the test case log."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"7## add_config(Callback, Config) -> ok | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "[Loads configuration variables using the specified callback module and configuration string."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[17,67,97,108,108,98,97,99,107,32,61,32,97,116,111,109,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,67,111,110,102,105,103,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"'<a name=\"add_config-2\">add_config-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "æLoads configuration variables using the specified callback module and configuration string. The callback module is to be either loaded or present in the code part. Loaded configuration variables can later be removed using function"}],
             0,false},
            {text,"#[remove_config-2](#remove_config-2)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,")## break(Comment) -> ok | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "vCancels any active timetrap and pause the execution of the current test case until the user calls function continue/0."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,111,109,109,101,110,116,32,61,32,115,116,114,105,110,103,40,
           41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "WReason = {multiple_cases_running, TestCases} | 'enable break with release_shell option'"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [20,84,101,115,116,67,97,115,101,115,32,61,32,91,97,116,111,109,40,
          41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,98,114,101,97,107,45,49,34,62,98,114,
       101,97,107,45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "kCancels any active timetrap and pauses the execution of the current test case until the user calls function"}],
             0,false},
            {text,"\f*continue/0*"},
            {sep,
             [{text,
               "½. The user can then interact with the Erlang node running the tests, for example, for debugging purposes or for manually executing a part of the test case. If a parallel group is executing,"}],
             0,false},
            {text,
             [19,91,98,114,101,97,107,45,50,93,40,35,98,114,101,97,107,45,50,
              41]},
            {sep,
             [{text,
               [24,105,115,32,116,111,32,98,101,32,99,97,108,108,101,100,32,
                105,110,115,116,101,97,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "iA cancelled timetrap is not automatically reactivated after the break, but must be started exlicitly with"}],
             0,false},
            {text,
             [25,91,116,105,109,101,116,114,97,112,45,49,93,40,35,116,105,109,
              101,116,114,97,112,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "6In order for the break/continue functionality to work,"}],
             0,false},
            {text,"\r*Common Test*"},
            {sep,
             [{text,"*must release the shell process controlling"}],
             0,false},
            {text,[7,42,115,116,100,105,110,42]},
            {sep,[{text,"&. This is done by setting start option"}],0,false},
            {text,
             [15,42,114,101,108,101,97,115,101,95,115,104,101,108,108,42]},
            {sep,[{text,[2,116,111]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,
               [26,46,32,70,111,114,32,100,101,116,97,105,108,115,44,32,115,
                101,101,32,115,101,99,116,105,111,110]}],
             0,false},
            {text,
             "k[Running Tests from the Erlang Shell or from an Erlang Program](./run_test_chapter#erlang_shell_or_program)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"3## break(TestCase, Comment) -> ok | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "{Works the same way as break/1, only argument TestCase makes it possible to pause a test case executing in a parallel group."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,84,101,115,116,67,97,115,101,32,61,32,97,116,111,109,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,111,109,109,101,110,116,32,61,32,115,116,114,105,110,103,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         "KReason = 'test case not running' | 'enable break with release_shell option'"}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,98,114,101,97,107,45,50,34,62,98,114,
       101,97,107,45,50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [21,87,111,114,107,115,32,116,104,101,32,115,97,109,101,32,119,
                97,121,32,97,115]}],
             0,false},
            {text,
             [19,91,98,114,101,97,107,45,49,93,40,35,98,114,101,97,107,45,49,
              41]},
            {sep,
             [{text,
               [15,44,32,111,110,108,121,32,97,114,103,117,109,101,110,116]}],
             0,false},
            {text,"\n*TestCase*"},
            {sep,
             [{text,
               "Nmakes it possible to pause a test case executing in a parallel group. Function"}],
             0,false},
            {text,
             [25,91,99,111,110,116,105,110,117,101,45,49,93,40,35,99,111,110,
              116,105,110,117,101,45,49,41]},
            {sep,[{text,"$is to be used to resume execution of"}],0,false},
            {text,"\n*TestCase*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [16,70,111,114,32,100,101,116,97,105,108,115,44,32,115,101,
                101]}],
             0,false},
            {text,
             [19,91,98,114,101,97,107,47,49,93,40,35,98,114,101,97,107,47,49,
              41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"!## capture_get() -> ListOfStrings"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"%Equivalent to capture_get([default])."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [26,76,105,115,116,79,102,83,116,114,105,110,103,115,32,61,32,91,115,
         116,114,105,110,103,40,41,93]}],
      0,false}],
    0,false},
   {sep,
    [{text,")<a name=\"capture_get-0\">capture_get-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,"+[ct:capture_get([default])](#capture_get-1)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"/## capture_get(ExclCategories) -> ListOfStrings"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "pReturns and purges the list of text strings buffered during the latest session of capturing printouts to stdout."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [25,69,120,99,108,67,97,116,101,103,111,114,105,101,115,32,61,32,91,
          97,116,111,109,40,41,93]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [26,76,105,115,116,79,102,83,116,114,105,110,103,115,32,61,32,91,115,
          116,114,105,110,103,40,41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{text,")<a name=\"capture_get-1\">capture_get-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "hReturns and purges the list of text strings buffered during the latest session of capturing printouts to"}],
             0,false},
            {text,"\b*stdout*"},
            {sep,
             [{text,"*. Log categories that are to be ignored in"}],
             0,false},
            {text,[15,42,76,105,115,116,79,102,83,116,114,105,110,103,115,42]},
            {sep,
             [{text,
               [21,99,97,110,32,98,101,32,115,112,101,99,105,102,105,101,100,
                32,119,105,116,104]}],
             0,false},
            {text,
             [16,42,69,120,99,108,67,97,116,101,103,111,114,105,101,115,42]},
            {sep,[{text,[4,46,32,73,102]}],0,false},
            {text,
             [21,42,69,120,99,108,67,97,116,101,103,111,114,105,101,115,32,61,
              32,91,93,42]},
            {sep,[{text,"\e, no filtering takes place."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,"#[capture_start-0](#capture_start-0)"},
            {sep,[{text,[1,44]}],0,false},
            {text,"![capture_stop-0](#capture_stop-0)"},
            {sep,[{text,[1,44]}],0,false},
            {text,[15,91,108,111,103,45,51,93,40,35,108,111,103,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [24,35,35,32,99,97,112,116,117,114,101,95,115,116,97,114,116,40,41,32,
        45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "VStarts capturing all text strings printed to stdout during execution of the test case."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"-<a name=\"capture_start-0\">capture_start-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,",Starts capturing all text strings printed to"}],
             0,false},
            {text,"\b*stdout*"},
            {sep,[{text,"\"during execution of the test case."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [31,91,99,97,112,116,117,114,101,95,103,101,116,45,49,93,40,35,
              99,97,112,116,117,114,101,95,103,101,116,45,49,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,"![capture_stop-0](#capture_stop-0)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [23,35,35,32,99,97,112,116,117,114,101,95,115,116,111,112,40,41,32,45,
        62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "FStops capturing text strings (a session started with capture_start/0)."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"+<a name=\"capture_stop-0\">capture_stop-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"4Stops capturing text strings (a session started with"}],
             0,false},
            {text,
             [17,42,99,97,112,116,117,114,101,95,115,116,97,114,116,47,48,42]},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [31,91,99,97,112,116,117,114,101,95,103,101,116,45,49,93,40,35,
              99,97,112,116,117,114,101,95,103,101,116,45,49,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,"#[capture_start-0](#capture_start-0)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,99,111,109,109,101,110,116,40,67,111,109,109,101,110,116,
        41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "]Prints the specified Comment in the comment field in the table on the test suite result page."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,[16,67,111,109,109,101,110,116,32,61,32,116,101,114,109,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{text,"!<a name=\"comment-1\">comment-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [20,80,114,105,110,116,115,32,116,104,101,32,115,112,101,99,
                105,102,105,101,100]}],
             0,false},
            {text,"\t*Comment*"},
            {sep,
             [{text,
               "@in the comment field in the table on the test suite result page."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "UIf called several times, only the last comment is printed. The test case return value"}],
             0,false},
            {text,
             [19,42,123,99,111,109,109,101,110,116,44,67,111,109,109,101,110,
              116,125,42]},
            {sep,
             [{text,"+overwrites the string set by this function."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [30,35,35,32,99,111,109,109,101,110,116,40,70,111,114,109,97,116,44,32,
        65,114,103,115,41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "\\Prints the formatted string in the comment field in the table on the test suite result page."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,70,111,114,109,97,116,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\rArgs = list()"}],0,false}],0,false}},
   {sep,
    [{text,"!<a name=\"comment-2\">comment-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "\\Prints the formatted string in the comment field in the table on the test suite result page."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\tArguments"}],0,false},
            {text,"\b*Format*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[6,42,65,114,103,115,42]},
            {sep,
             [{text,
               [21,97,114,101,32,117,115,101,100,32,105,110,32,97,32,99,97,
                108,108,32,116,111]}],
             0,false},
            {text,
             [17,42,105,111,95,108,105,98,58,102,111,114,109,97,116,47,50,42]},
            {sep,
             [{text,"-to create the comment string. The behavior of"}],
             0,false},
            {text,"\v*comment/2*"},
            {sep,[{text,"!is otherwise the same as function"}],0,false},
            {text,
             [23,91,99,111,109,109,101,110,116,45,49,93,40,35,99,111,109,109,
              101,110,116,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [19,35,35,32,99,111,110,116,105,110,117,101,40,41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "rThis function must be called to continue after a test case (not executing in a parallel group) has called break/1."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"#<a name=\"continue-0\">continue-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "rThis function must be called to continue after a test case (not executing in a parallel group) has called function"}],
             0,false},
            {text,
             [19,91,98,114,101,97,107,45,49,93,40,35,98,114,101,97,107,45,49,
              41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## continue(TestCase) -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "NThis function must be called to continue after a test case has called break/2."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,[17,84,101,115,116,67,97,115,101,32,61,32,97,116,111,109,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{text,"#<a name=\"continue-1\">continue-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "EThis function must be called to continue after a test case has called"}],
             0,false},
            {text,
             [19,91,98,114,101,97,107,45,50,93,40,35,98,114,101,97,107,45,50,
              41]},
            {sep,
             [{text,
               [26,46,32,73,102,32,116,104,101,32,112,97,117,115,101,100,32,
                116,101,115,116,32,99,97,115,101,44]}],
             0,false},
            {text,"\n*TestCase*"},
            {sep,
             [{text,
               ":, executes in a parallel group, this function, rather than"}],
             0,false},
            {text,"\f*continue/0*"},
            {sep,
             [{text,",, must be used to let the test case proceed."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "O## decrypt_config_file(EncryptFileName, TargetFileName) -> ok | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "LDecrypts EncryptFileName, previously generated with encrypt_config_file/2,3."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [26,69,110,99,114,121,112,116,70,105,108,101,78,97,109,101,32,61,32,
           115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [25,84,97,114,103,101,116,70,105,108,101,78,97,109,101,32,61,32,115,
           116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"9<a name=\"decrypt_config_file-2\">decrypt_config_file-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bDecrypts"}],0,false},
            {text,
             [17,42,69,110,99,114,121,112,116,70,105,108,101,78,97,109,101,
              42]},
            {sep,[{text,"\e, previously generated with"}],0,false},
            {text,"/[encrypt_config_file-2](#encrypt_config_file-2)"},
            {sep,
             [{text,
               "~. The original file contents is saved in the target file. The encryption key, a string, must be available in a text file named"}],
             0,false},
            {text,
             [18,42,46,99,116,95,99,111,110,102,105,103,46,99,114,121,112,116,
              42]},
            {sep,
             [{text,
               "h, either in the current directory, or the home directory of the user (it is searched for in that order)."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "Z## decrypt_config_file(EncryptFileName, TargetFileName, KeyOrFile) -> ok | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "LDecrypts EncryptFileName, previously generated with encrypt_config_file/2,3."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [26,69,110,99,114,121,112,116,70,105,108,101,78,97,109,101,32,61,
            32,115,116,114,105,110,103,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [25,84,97,114,103,101,116,70,105,108,101,78,97,109,101,32,61,32,
            115,116,114,105,110,103,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,".KeyOrFile = {key, string()} | {file, string()}"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"9<a name=\"decrypt_config_file-3\">decrypt_config_file-3</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bDecrypts"}],0,false},
            {text,
             [17,42,69,110,99,114,121,112,116,70,105,108,101,78,97,109,101,
              42]},
            {sep,[{text,"\e, previously generated with"}],0,false},
            {text,"/[encrypt_config_file-2](#encrypt_config_file-2)"},
            {sep,
             [{text,
               "w. The original file contents is saved in the target file. The key must have the same value as that used for encryption."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "L## encrypt_config_file(SrcFileName, EncryptFileName) -> ok | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "^Encrypts the source configuration file with DES3 and saves the result in file EncryptFileName."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [22,83,114,99,70,105,108,101,78,97,109,101,32,61,32,115,116,114,105,
           110,103,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [26,69,110,99,114,121,112,116,70,105,108,101,78,97,109,101,32,61,32,
           115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"9<a name=\"encrypt_config_file-2\">encrypt_config_file-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "MEncrypts the source configuration file with DES3 and saves the result in file"}],
             0,false},
            {text,
             [17,42,69,110,99,114,121,112,116,70,105,108,101,78,97,109,101,
              42]},
            {sep,
             [{text,
               ";. The key, a string, must be available in a text file named"}],
             0,false},
            {text,
             [18,42,46,99,116,95,99,111,110,102,105,103,46,99,114,121,112,116,
              42]},
            {sep,
             [{text,
               "h, either in the current directory, or the home directory of the user (it is searched for in that order)."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "YFor information about using encrypted configuration files when running tests, see section"}],
             0,false},
            {text,
             "M[Encrypted Configuration Files](./config_file_chapter#encrypted_config_files)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ":For details on DES3 encryption/decryption, see application"}],
             0,false},
            {text,
             [23,91,99,114,121,112,116,111,47,105,110,100,101,120,93,40,46,47,
              105,110,100,101,120,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "W## encrypt_config_file(SrcFileName, EncryptFileName, KeyOrFile) -> ok | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "iEncrypts the source configuration file with DES3 and saves the result in the target file EncryptFileName."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [22,83,114,99,70,105,108,101,78,97,109,101,32,61,32,115,116,114,
            105,110,103,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [26,69,110,99,114,121,112,116,70,105,108,101,78,97,109,101,32,61,
            32,115,116,114,105,110,103,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,".KeyOrFile = {key, string()} | {file, string()}"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"9<a name=\"encrypt_config_file-3\">encrypt_config_file-3</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "XEncrypts the source configuration file with DES3 and saves the result in the target file"}],
             0,false},
            {text,
             [17,42,69,110,99,114,121,112,116,70,105,108,101,78,97,109,101,
              42]},
            {sep,
             [{text,"2. The encryption key to use is either the value in"}],
             0,false},
            {text,"\v*{key,Key}*"},
            {sep,
             [{text,",or the value stored in the file specified by"}],
             0,false},
            {text,"\r*{file,File}*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "YFor information about using encrypted configuration files when running tests, see section"}],
             0,false},
            {text,
             "M[Encrypted Configuration Files](./config_file_chapter#encrypted_config_files)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ":For details on DES3 encryption/decryption, see application"}],
             0,false},
            {text,
             [23,91,99,114,121,112,116,111,47,105,110,100,101,120,93,40,46,47,
              105,110,100,101,120,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [21,35,35,32,102,97,105,108,40,82,101,97,115,111,110,41,32,45,62,32,
        111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"7Terminates a test case with the specified error Reason."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{text,"\e<a name=\"fail-1\">fail-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"/Terminates a test case with the specified error"}],
             0,false},
            {text,"\b*Reason*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## fail(Format, Args) -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [134,84,101,114,109,105,110,97,116,101,115,32,97,32,116,101,115,
            116,32,99,97,115,101,32,119,105,116,104,32,97,110,32,101,114,114,
            111,114,32,109,101,115,115,97,103,101,32,115,112,101,99,105,102,
            105,101,100,32,98,121,32,97,32,102,111,114,109,97,116,32,115,116,
            114,105,110,103,32,97,110,100,32,97,32,108,105,115,116,32,111,102,
            32,118,97,108,117,101,115,32,40,117,115,101,100,32,97,115,32,97,
            114,103,117,109,101,110,116,115,32,116,111,32,105,111,95,108,105,
            98,58,102,111,114,109,97,116,47,50,41,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,70,111,114,109,97,116,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\rArgs = list()"}],0,false}],0,false}},
   {sep,
    [{text,"\e<a name=\"fail-2\">fail-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "tTerminates a test case with an error message specified by a format string and a list of values (used as arguments to"}],
             0,false},
            {text,
             [17,42,105,111,95,108,105,98,58,102,111,114,109,97,116,47,50,42]},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text," ## get_config(Required) -> Value"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"2Equivalent to get_config(Required, undefined, [])."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"'<a name=\"get_config-1\">get_config-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,51,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,")## get_config(Required, Default) -> Value"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0Equivalent to get_config(Required, Default, [])."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"'<a name=\"get_config-2\">get_config-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,51,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"8## get_config(Required, Default, Opts) -> ValueOrElement"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text," Reads configuration data values."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "HRequired = KeyOrName | {KeyOrName, SubKey} | {KeyOrName, SubKey, SubKey}"}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [18,75,101,121,79,114,78,97,109,101,32,61,32,97,116,111,109,40,
               41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[15,83,117,98,75,101,121,32,61,32,97,116,111,109,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [16,68,101,102,97,117,108,116,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,79,112,116,115,32,61,32,91,79,112,116,93,32,124,32,91,93]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,79,112,116,32,61,32,101,108,101,109,101,110,116,32,124,32,97,
           108,108]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,[{text,"!ValueOrElement = term() | Default"}],0,false}],
     0,false}},
   {sep,
    [{text,"'<a name=\"get_config-3\">get_config-3</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," Reads configuration data values."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [144,82,101,116,117,114,110,115,32,116,104,101,32,109,97,116,
                99,104,105,110,103,32,118,97,108,117,101,115,32,111,114,32,99,
                111,110,102,105,103,117,114,97,116,105,111,110,32,101,108,101,
                109,101,110,116,115,44,32,103,105,118,101,110,32,97,32,99,111,
                110,102,105,103,117,114,97,116,105,111,110,32,118,97,114,105,
                97,98,108,101,32,107,101,121,32,111,114,32,105,116,115,32,97,
                115,115,111,99,105,97,116,101,100,32,110,97,109,101,32,40,105,
                102,32,111,110,101,32,104,97,115,32,98,101,101,110,32,115,112,
                101,99,105,102,105,101,100,32,119,105,116,104]}],
             0,false},
            {text,
             [23,91,114,101,113,117,105,114,101,45,50,93,40,35,114,101,113,
              117,105,114,101,45,50,41]},
            {sep,[{text,[4,111,114,32,97]}],0,false},
            {text,"\t*require*"},
            {sep,[{text,"\vstatement)."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"'Given the following configuration file:"}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "e\n {unix,[{telnet,IpAddr},\n        {user,[{username,Username},\n               {password,Password}]}]}."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,[{sep,[{text,[5,84,104,101,110,58]}],0,false}],0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [302,10,32,99,116,58,103,101,116,95,99,111,110,102,105,103,40,
              117,110,105,120,44,68,101,102,97,117,108,116,41,32,45,62,32,91,
              123,116,101,108,110,101,116,44,73,112,65,100,100,114,125,44,32,
              10,32,32,123,117,115,101,114,44,32,91,123,117,115,101,114,110,
              97,109,101,44,85,115,101,114,110,97,109,101,125,44,32,123,112,
              97,115,115,119,111,114,100,44,80,97,115,115,119,111,114,100,125,
              93,125,93,10,32,99,116,58,103,101,116,95,99,111,110,102,105,103,
              40,123,117,110,105,120,44,116,101,108,110,101,116,125,44,68,101,
              102,97,117,108,116,41,32,45,62,32,73,112,65,100,100,114,10,32,
              99,116,58,103,101,116,95,99,111,110,102,105,103,40,123,117,110,
              105,120,44,117,115,101,114,44,117,115,101,114,110,97,109,101,
              125,44,68,101,102,97,117,108,116,41,32,45,62,32,85,115,101,114,
              110,97,109,101,10,32,99,116,58,103,101,116,95,99,111,110,102,
              105,103,40,123,117,110,105,120,44,102,116,112,125,44,68,101,102,
              97,117,108,116,41,32,45,62,32,68,101,102,97,117,108,116,10,32,
              99,116,58,103,101,116,95,99,111,110,102,105,103,40,117,110,107,
              110,111,119,110,107,101,121,44,68,101,102,97,117,108,116,41,32,
              45,62,32,68,101,102,97,117,108,116]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "CIf a configuration variable key has been associated with a name (by"}],
             0,false},
            {text,
             [23,91,114,101,113,117,105,114,101,45,50,93,40,35,114,101,113,
              117,105,114,101,45,50,41]},
            {sep,[{text,[4,111,114,32,97]}],0,false},
            {text,"\t*require*"},
            {sep,
             [{text,
               "Fstatement), the name can be used instead of the key to read the value:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "t\n ct:require(myuser,{unix,user}) -> ok.\n ct:get_config(myuser,Default) -> [{username,Username}, {password,Password}]"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "DIf a configuration variable is defined in multiple files, use option"}],
             0,false},
            {text,[5,42,97,108,108,42]},
            {sep,
             [{text,
               "¬to access all possible values. The values are returned in a list. The order of the elements corresponds to the order that the configuration files were specified at startup."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "gIf configuration elements (key-value tuples) are to be returned as result instead of values, use option"}],
             0,false},
            {text,"\t*element*"},
            {sep,
             [{text,",. The returned elements are then on the form"}],
             0,false},
            {text,
             [18,42,123,82,101,113,117,105,114,101,100,44,86,97,108,117,101,
              125,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,49,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,49,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,50,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [23,91,114,101,113,117,105,114,101,45,49,93,40,35,114,101,113,
              117,105,114,101,45,49,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [23,91,114,101,113,117,105,114,101,45,50,93,40,35,114,101,113,
              117,105,114,101,45,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\"## get_event_mgr_ref() -> EvMgrRef"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [23,71,101,116,115,32,97,32,114,101,102,101,114,101,110,99,101,
              32,116,111,32,116,104,101]}],
           0,false},
          {text,"\r*Common Test*"},
          {sep,
           [{text,[14,101,118,101,110,116,32,109,97,110,97,103,101,114,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,[17,69,118,77,103,114,82,101,102,32,61,32,97,116,111,109,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{text,"5<a name=\"get_event_mgr_ref-0\">get_event_mgr_ref-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,71,101,116,115,32,97,32,114,101,102,101,114,101,110,99,101,
                32,116,111,32,116,104,101]}],
             0,false},
            {text,"\r*Common Test*"},
            {sep,
             [{text,
               "tevent manager. The reference can be used to, for example, add a user-specific event handler while tests are running."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "<\n gen_event:add_handler(ct:get_event_mgr_ref(), my_ev_h, [])"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [29,35,35,32,103,101,116,95,112,114,111,103,110,97,109,101,40,41,32,45,
        62,32,115,116,114,105,110,103,40,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"7Returns the command used to start this Erlang instance."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"+<a name=\"get_progname-0\">get_progname-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "jReturns the command used to start this Erlang instance. If this information could not be found, the string"}],
             0,false},
            {text,
             [16,42,34,110,111,95,112,114,111,103,95,110,97,109,101,34,42]},
            {sep,[{text,"\fis returned."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "B## get_status() -> TestStatus | {error, Reason} | no_tests_running"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [31,82,101,116,117,114,110,115,32,115,116,97,116,117,115,32,111,
            102,32,111,110,103,111,105,110,103,32,116,101,115,116,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [25,84,101,115,116,83,116,97,116,117,115,32,61,32,91,83,
                    116,97,116,117,115,69,108,101,109,93]}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   "xStatusElem = {current, TestCaseInfo} | {successful, Successful} | {failed, Failed} | {skipped, Skipped} | {total, Total}"}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  "6TestCaseInfo = {Suite, TestCase} | [{Suite, TestCase}]"}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,[14,83,117,105,116,101,32,61,32,97,116,111,109,40,41]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [17,84,101,115,116,67,97,115,101,32,61,32,97,116,111,109,40,
                 41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [22,83,117,99,99,101,115,115,102,117,108,32,61,32,105,110,116,
                101,103,101,114,40,41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [18,70,97,105,108,101,100,32,61,32,105,110,116,101,103,101,114,
               40,41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,[{text,"$Skipped = {UserSkipped, AutoSkipped}"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [23,85,115,101,114,83,107,105,112,112,101,100,32,61,32,105,110,
             116,101,103,101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [23,65,117,116,111,83,107,105,112,112,101,100,32,61,32,105,110,116,
            101,103,101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,84,111,116,97,108,32,61,32,105,110,116,101,103,101,114,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"'<a name=\"get_status-0\">get_status-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ûReturns status of ongoing test. The returned list contains information about which test case is executing (a list of cases when a parallel test case group is executing), as well as counters for successful, failed, skipped, and total test cases so far."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "@## get_target_name(Handle) -> {ok, TargetName} | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "HReturns the name of the target that the specified connection belongs to."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,72,97,110,100,108,101,32,61,32,104,97,110,100,108,101,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [26,84,97,114,103,101,116,78,97,109,101,32,61,32,116,97,114,103,101,
          116,95,110,97,109,101,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"1<a name=\"get_target_name-1\">get_target_name-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "HReturns the name of the target that the specified connection belongs to."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"4## get_testspec_terms() -> TestSpecTerms | undefined"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "PGets a list of all test specification terms used to configure and run this test."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [30,84,101,115,116,83,112,101,99,84,101,114,109,115,32,61,32,91,123,
          84,97,103,44,32,86,97,108,117,101,125,93]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,86,97,108,117,101,32,61,32,91,116,101,114,109,40,41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"7<a name=\"get_testspec_terms-0\">get_testspec_terms-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "PGets a list of all test specification terms used to configure and run this test."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"8## get_testspec_terms(Tags) -> TestSpecTerms | undefined"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "XReads one or more terms from the test specification used to configure and run this test."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,84,97,103,115,32,61,32,91,84,97,103,93,32,124,32,84,97,103]}],
          0,false}],
        0,false},
       {sep,[{text,[1,42]},{sep,[{text,"\fTag = atom()"}],0,false}],0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"-TestSpecTerms = [{Tag, Value}] | {Tag, Value}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,[{text,"#Value = [{Node, term()}] | [term()]"}],0,false}],
      0,false}},
    {sep,[{text,[1,42]},{sep,[{text,"\rNode = atom()"}],0,false}],0,false}},
   {sep,
    [{text,"7<a name=\"get_testspec_terms-1\">get_testspec_terms-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "XReads one or more terms from the test specification used to configure and run this test."}],
             0,false},
            {text,[5,42,84,97,103,42]},
            {sep,
             [{text,"1is any valid test specification tag, for example,"}],
             0,false},
            {text,[7,42,108,97,98,101,108,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,"\b*config*"},
            {sep,[{text,[4,44,32,111,114]}],0,false},
            {text,"\b*logdir*"},
            {sep,
             [{text,
               ":. User-specific terms are also available to read if option"}],
             0,false},
            {text,
             [18,42,97,108,108,111,119,95,117,115,101,114,95,116,101,114,109,
              115,42]},
            {sep,[{text,[7,105,115,32,115,101,116,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "RAll value tuples returned, except user terms, have the node name as first element."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,84,111,32,114,101,97,100,32,116,101,115,116,32,116,101,114,
                109,115,44,32,117,115,101]}],
             0,false},
            {text,"\r*Tag = tests*"},
            {sep,[{text,"\f(rather than"}],0,false},
            {text,"\b*suites*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\b*groups*"},
            {sep,[{text,[4,44,32,111,114]}],0,false},
            {text,[7,42,99,97,115,101,115,42]},
            {sep,[{text,[2,41,46]}],0,false},
            {text,[7,42,86,97,108,117,101,42]},
            {sep,
             [{text,
               [19,105,115,32,116,104,101,110,32,116,104,101,32,108,105,115,
                116,32,111,102]}],
             0,false},
            {text,[7,42,42,97,108,108,42,42]},
            {sep,
             [{text,
               [17,116,101,115,116,115,32,111,110,32,116,104,101,32,102,111,
                114,109]}],
             0,false},
            {text,"3*[{Node,Dir,[{TestSpec,GroupsAndCases1},...]},...]*"},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,",*GroupsAndCases = [{Group,[Case]}] | [Case]*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"4## get_timetrap_info() -> {Time, {Scaling,ScaleVal}}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "CReads information about the timetrap set for the current test case."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},{sep,[{text,"\eTime = integer() | infinity"}],0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [22,83,99,97,108,105,110,103,32,61,32,116,114,117,101,32,124,32,102,
           97,108,115,101]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [20,83,99,97,108,101,86,97,108,32,61,32,105,110,116,101,103,101,114,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"5<a name=\"get_timetrap_info-0\">get_timetrap_info-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "CReads information about the timetrap set for the current test case."}],
             0,false},
            {text,"\t*Scaling*"},
            {sep,[{text,"\findicates if"}],0,false},
            {text,"\r*Common Test*"},
            {sep,
             [{text,
               "swill attempt to compensate timetraps automatically for runtime delays introduced by, for example, tools like cover."}],
             0,false},
            {text,"\n*ScaleVal*"},
            {sep,
             [{text,
               "Yis the value of the current scaling multipler (always 1 if scaling is disabled). Note the"}],
             0,false},
            {text,[6,42,84,105,109,101,42]},
            {sep,
             [{text,
               [25,105,115,32,110,111,116,32,116,104,101,32,115,99,97,108,101,
                100,32,114,101,115,117,108,116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"/## get_verbosity(Category) -> Level | undefined"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0Read the verbosity level for a logging category."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},{sep,[{text,"\eCategory = default | atom()"}],0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,76,101,118,101,108,32,61,32,105,110,116,101,103,101,114,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"-<a name=\"get_verbosity-1\">get_verbosity-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "UThis function returns the verbosity level for the specified logging category. See the"}],
             0,false},
            {text,",[User's Guide](./write_test_chapter#logging)"},
            {sep,
             [{text,
               [26,102,111,114,32,100,101,116,97,105,108,115,46,32,85,115,101,
                32,116,104,101,32,118,97,108,117,101]}],
             0,false},
            {text,"\t*default*"},
            {sep,[{text,"$to read the general verbosity level."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"(## install(Opts) -> ok | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0Installs configuration files and event handlers."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {sep,
           [{text,[1,42]},{sep,[{text,"\fOpts = [Opt]"}],0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "MOpt = {config, ConfigFiles} | {event_handler, Modules} | {decrypt, KeyOrFile}"}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [26,67,111,110,102,105,103,70,105,108,101,115,32,61,32,91,67,
               111,110,102,105,103,70,105,108,101,93]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [21,67,111,110,102,105,103,70,105,108,101,32,61,32,115,116,114,
              105,110,103,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,77,111,100,117,108,101,115,32,61,32,91,97,116,111,109,40,41,
             93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"(KeyOrFile = {key, Key} | {file, KeyFile}"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,75,101,121,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [18,75,101,121,70,105,108,101,32,61,32,115,116,114,105,110,103,40,
          41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"!<a name=\"install-1\">install-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"0Installs configuration files and event handlers."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"-Run this function once before the first test."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             ";\n install([{config,[\"config_node.ctc\",\"config_user.ctc\"]}])"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"-This function is automatically run by program"}],
             0,false},
            {text,"\b*ct_run*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## listenv(Telnet) -> [Env]"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "pPerforms command listenv on the specified Telnet connection and returns the result as a list of key-value pairs."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,84,101,108,110,101,116,32,61,32,116,101,114,109,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,69,110,118,32,61,32,123,75,101,121,44,32,86,97,108,117,101,
            125]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,75,101,121,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,86,97,108,117,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"!<a name=\"listenv-1\">listenv-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [16,80,101,114,102,111,114,109,115,32,99,111,109,109,97,110,
                100]}],
             0,false},
            {text,"\t*listenv*"},
            {sep,
             [{text,
               "Won the specified Telnet connection and returns the result as a list of key-value pairs."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,108,111,103,40,70,111,114,109,97,116,41,32,45,62,32,111,
        107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"/Equivalent to log(default, 50, Format, [], [])."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,108,111,103,45,49,34,62,108,111,103,
       45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,[15,91,108,111,103,45,53,93,40,35,108,111,103,45,53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,108,111,103,40,88,49,44,32,88,50,41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "@Equivalent to log(Category, Importance, Format, FormatArgs, [])."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,[{text,"#X1 = Category | Importance | Format"}],0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,88,50,32,61,32,70,111,114,109,97,116,32,124,32,70,111,114,109,97,
          116,65,114,103,115]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,108,111,103,45,50,34,62,108,111,103,
       45,50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,[15,91,108,111,103,45,53,93,40,35,108,111,103,45,53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [24,35,35,32,108,111,103,40,88,49,44,32,88,50,44,32,88,51,41,32,45,62,
        32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "BEquivalent to log(Category, Importance, Format, FormatArgs, Opts)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [26,88,49,32,61,32,67,97,116,101,103,111,114,121,32,124,32,73,109,
           112,111,114,116,97,110,99,101]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,88,50,32,61,32,73,109,112,111,114,116,97,110,99,101,32,124,32,
           70,111,114,109,97,116]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [31,88,51,32,61,32,70,111,114,109,97,116,32,124,32,70,111,114,109,97,
          116,65,114,103,115,32,124,32,79,112,116,115]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,108,111,103,45,51,34,62,108,111,103,
       45,51,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,[15,91,108,111,103,45,53,93,40,35,108,111,103,45,53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,108,111,103,40,88,49,44,32,88,50,44,32,88,51,44,32,88,52,
        41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "BEquivalent to log(Category, Importance, Format, FormatArgs, Opts)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [26,88,49,32,61,32,67,97,116,101,103,111,114,121,32,124,32,73,109,
            112,111,114,116,97,110,99,101]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [24,88,50,32,61,32,73,109,112,111,114,116,97,110,99,101,32,124,32,
            70,111,114,109,97,116]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,88,51,32,61,32,70,111,114,109,97,116,32,124,32,70,111,114,109,
           97,116,65,114,103,115]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [22,88,52,32,61,32,70,111,114,109,97,116,65,114,103,115,32,124,32,79,
          112,116,115]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,108,111,103,45,52,34,62,108,111,103,
       45,52,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,[15,91,108,111,103,45,53,93,40,35,108,111,103,45,53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"<## log(Category, Importance, Format, FormatArgs, Opts) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"(Prints from a test case to the log file."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,67,97,116,101,103,111,114,121,32,61,32,97,116,111,109,40,
              41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [22,73,109,112,111,114,116,97,110,99,101,32,61,32,105,110,116,
              101,103,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,70,111,114,109,97,116,32,61,32,115,116,114,105,110,103,40,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [19,70,111,114,109,97,116,65,114,103,115,32,61,32,108,105,115,116,
            40,41]}],
         0,false}],
       0,false}},
     {sep,[{text,[1,42]},{sep,[{text,"\fOpts = [Opt]"}],0,false}],0,false}},
    {sep,
     [{text,[1,42]},
      {sep,[{text,"-Opt = {heading,string()} | no_css | esc_chars"}],0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,108,111,103,45,53,34,62,108,111,103,
       45,53,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"(Prints from a test case to the log file."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "aThis function is meant for printing a string directly from a test case to the test case log file."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,68,101,102,97,117,108,116]}],0,false},
            {text,"\n*Category*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,"\t*default*"},
            {sep,[{text,"\t, default"}],0,false},
            {text,"\f*Importance*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,[17,42,63,83,84,68,95,73,77,80,79,82,84,65,78,67,69,42]},
            {sep,
             [{text,
               [23,44,32,97,110,100,32,100,101,102,97,117,108,116,32,118,97,
                108,117,101,32,102,111,114]}],
             0,false},
            {text,"\f*FormatArgs*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,[4,42,91,93,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,[14,70,111,114,32,100,101,116,97,105,108,115,32,111,110]}],
             0,false},
            {text,"\n*Category*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\f*Importance*"},
            {sep,[{text,[7,97,110,100,32,116,104,101]}],0,false},
            {text,"\b*no_css*"},
            {sep,
             [{text,
               [19,111,112,116,105,111,110,44,32,115,101,101,32,115,101,99,
                116,105,111,110]}],
             0,false},
            {text,
             "I[Logging - Categories and Verbosity Levels](./write_test_chapter#logging)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "sCommon Test will not escape special HTML characters (<, > and &) in the text printed with this function, unless the"}],
             0,false},
            {text,"\v*esc_chars*"},
            {sep,
             [{text,
               [15,111,112,116,105,111,110,32,105,115,32,117,115,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"*## make_priv_dir() -> ok | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "¹If the test has been started with option create_priv_dir set to manual_per_tc, in order for the test case to use the private directory, it must first create it by calling this function."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{text,"-<a name=\"make_priv_dir-0\">make_priv_dir-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\"If the test is started with option"}],0,false},
            {text,
             [17,42,99,114,101,97,116,101,95,112,114,105,118,95,100,105,114,
              42]},
            {sep,[{text,[6,115,101,116,32,116,111]}],0,false},
            {text,[15,42,109,97,110,117,97,108,95,112,101,114,95,116,99,42]},
            {sep,
             [{text,
               "l, in order for the test case to use the private directory, it must first create it by calling this function."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## notify(Name, Data) -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "@Sends an asynchronous notification of type Name with Data to the"}],
           0,false},
          {text,"\r*Common Test*"},
          {sep,
           [{text,[14,101,118,101,110,116,32,109,97,110,97,103,101,114,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,[{text,[1,42]},{sep,[{text,"\rName = atom()"}],0,false}],0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\rData = term()"}],0,false}],0,false}},
   {sep,
    [{text,
      [31,60,97,32,110,97,109,101,61,34,110,111,116,105,102,121,45,50,34,62,
       110,111,116,105,102,121,45,50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"*Sends an asynchronous notification of type"}],
             0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text,[4,119,105,116,104]}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,
             [{text,
               "Zto the Common Test event manager. This can later be caught by any installed event manager."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [31,91,115,116,100,108,105,98,47,103,101,110,95,101,118,101,110,
              116,93,40,46,47,103,101,110,95,101,118,101,110,116,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,112,97,108,40,70,111,114,109,97,116,41,32,45,62,32,111,
        107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"/Equivalent to pal(default, 50, Format, [], [])."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,112,97,108,45,49,34,62,112,97,108,45,
       49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,[15,91,112,97,108,45,53,93,40,35,112,97,108,45,53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,112,97,108,40,88,49,44,32,88,50,41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "@Equivalent to pal(Category, Importance, Format, FormatArgs, [])."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,[{text,"#X1 = Category | Importance | Format"}],0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,88,50,32,61,32,70,111,114,109,97,116,32,124,32,70,111,114,109,97,
          116,65,114,103,115]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,112,97,108,45,50,34,62,112,97,108,45,
       50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,[15,91,112,97,108,45,53,93,40,35,112,97,108,45,53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [24,35,35,32,112,97,108,40,88,49,44,32,88,50,44,32,88,51,41,32,45,62,
        32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "BEquivalent to pal(Category, Importance, Format, FormatArgs, Opts)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [26,88,49,32,61,32,67,97,116,101,103,111,114,121,32,124,32,73,109,
           112,111,114,116,97,110,99,101]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,88,50,32,61,32,73,109,112,111,114,116,97,110,99,101,32,124,32,
           70,111,114,109,97,116]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [31,88,51,32,61,32,70,111,114,109,97,116,32,124,32,70,111,114,109,97,
          116,65,114,103,115,32,124,32,79,112,116,115]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,112,97,108,45,51,34,62,112,97,108,45,
       51,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,[15,91,112,97,108,45,53,93,40,35,112,97,108,45,53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,112,97,108,40,88,49,44,32,88,50,44,32,88,51,44,32,88,52,
        41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "BEquivalent to pal(Category, Importance, Format, FormatArgs, Opts)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [26,88,49,32,61,32,67,97,116,101,103,111,114,121,32,124,32,73,109,
            112,111,114,116,97,110,99,101]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [24,88,50,32,61,32,73,109,112,111,114,116,97,110,99,101,32,124,32,
            70,111,114,109,97,116]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,88,51,32,61,32,70,111,114,109,97,116,32,124,32,70,111,114,109,
           97,116,65,114,103,115]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [22,88,52,32,61,32,70,111,114,109,97,116,65,114,103,115,32,124,32,79,
          112,116,115]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,112,97,108,45,52,34,62,112,97,108,45,
       52,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,[15,91,112,97,108,45,53,93,40,35,112,97,108,45,53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"<## pal(Category, Importance, Format, FormatArgs, Opts) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"!Prints and logs from a test case."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,67,97,116,101,103,111,114,121,32,61,32,97,116,111,109,40,
              41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [22,73,109,112,111,114,116,97,110,99,101,32,61,32,105,110,116,
              101,103,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,70,111,114,109,97,116,32,61,32,115,116,114,105,110,103,40,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [19,70,111,114,109,97,116,65,114,103,115,32,61,32,108,105,115,116,
            40,41]}],
         0,false}],
       0,false}},
     {sep,[{text,[1,42]},{sep,[{text,"\fOpts = [Opt]"}],0,false}],0,false}},
    {sep,
     [{text,[1,42]},
      {sep,[{text,"!Opt = {heading,string()} | no_css"}],0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,112,97,108,45,53,34,62,112,97,108,45,
       53,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"!Prints and logs from a test case."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "qThis function is meant for printing a string from a test case, both to the test case log file and to the console."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,68,101,102,97,117,108,116]}],0,false},
            {text,"\n*Category*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,"\t*default*"},
            {sep,[{text,"\t, default"}],0,false},
            {text,"\f*Importance*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,[17,42,63,83,84,68,95,73,77,80,79,82,84,65,78,67,69,42]},
            {sep,
             [{text,
               [23,44,32,97,110,100,32,100,101,102,97,117,108,116,32,118,97,
                108,117,101,32,102,111,114]}],
             0,false},
            {text,"\f*FormatArgs*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,[4,42,91,93,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,[14,70,111,114,32,100,101,116,97,105,108,115,32,111,110]}],
             0,false},
            {text,"\n*Category*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\f*Importance*"},
            {sep,[{text,"\r, see section"}],0,false},
            {text,
             "I[Logging - Categories and Verbosity Levels](./write_test_chapter#logging)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [128,78,111,116,101,32,116,104,97,116,32,115,112,101,99,105,97,
              108,32,99,104,97,114,97,99,116,101,114,115,32,105,110,32,116,
              104,101,32,116,101,120,116,32,40,60,44,32,62,32,97,110,100,32,
              38,41,32,119,105,108,108,32,98,101,32,101,115,99,97,112,101,100,
              32,98,121,32,67,111,109,109,111,110,32,84,101,115,116,32,98,101,
              102,111,114,101,32,116,104,101,32,116,101,120,116,32,105,115,32,
              112,114,105,110,116,101,100,32,116,111,32,116,104,101,32,108,
              111,103,32,102,105,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"(## parse_table(Data) -> {Heading, Table}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "CParses the printout from an SQL table and returns a list of tuples."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,68,97,116,97,32,61,32,91,115,116,114,105,110,103,40,41,93]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,72,101,97,100,105,110,103,32,61,32,116,117,112,108,101,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[17,84,97,98,108,101,32,61,32,91,116,117,112,108,101,40,41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{text,")<a name=\"parse_table-1\">parse_table-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "CParses the printout from an SQL table and returns a list of tuples."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"2The printout to parse is typically the result of a"}],
             0,false},
            {text,"\b*select*"},
            {sep,
             [{text,
               [28,99,111,109,109,97,110,100,32,105,110,32,83,81,76,46,32,84,
                104,101,32,114,101,116,117,114,110,101,100]}],
             0,false},
            {text,[7,42,84,97,98,108,101,42]},
            {sep,
             [{text,
               "<is a list of tuples, where each tuple is a row in the table."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\t*Heading*"},
            {sep,
             [{text,
               "Lis a tuple of strings representing the headings of each column in the table."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,112,114,105,110,116,40,70,111,114,109,97,116,41,32,45,62,
        32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"1Equivalent to print(default, 50, Format, [], [])."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,112,114,105,110,116,45,49,34,62,112,
       114,105,110,116,45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [19,91,112,114,105,110,116,45,53,93,40,35,112,114,105,110,116,45,
              53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,112,114,105,110,116,40,88,49,44,32,88,50,41,32,45,62,32,
        111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "BEquivalent to print(Category, Importance, Format, FormatArgs, [])."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,[{text,"#X1 = Category | Importance | Format"}],0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,88,50,32,61,32,70,111,114,109,97,116,32,124,32,70,111,114,109,97,
          116,65,114,103,115]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,112,114,105,110,116,45,50,34,62,112,
       114,105,110,116,45,50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [19,91,112,114,105,110,116,45,53,93,40,35,112,114,105,110,116,45,
              53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,112,114,105,110,116,40,88,49,44,32,88,50,44,32,88,51,41,
        32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "DEquivalent to print(Category, Importance, Format, FormatArgs, Opts)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [26,88,49,32,61,32,67,97,116,101,103,111,114,121,32,124,32,73,109,
           112,111,114,116,97,110,99,101]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,88,50,32,61,32,73,109,112,111,114,116,97,110,99,101,32,124,32,
           70,111,114,109,97,116]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [31,88,51,32,61,32,70,111,114,109,97,116,32,124,32,70,111,114,109,97,
          116,65,114,103,115,32,124,32,79,112,116,115]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,112,114,105,110,116,45,51,34,62,112,
       114,105,110,116,45,51,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [19,91,112,114,105,110,116,45,53,93,40,35,112,114,105,110,116,45,
              53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [30,35,35,32,112,114,105,110,116,40,88,49,44,32,88,50,44,32,88,51,44,
        32,88,52,41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "DEquivalent to print(Category, Importance, Format, FormatArgs, Opts)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [26,88,49,32,61,32,67,97,116,101,103,111,114,121,32,124,32,73,109,
            112,111,114,116,97,110,99,101]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [24,88,50,32,61,32,73,109,112,111,114,116,97,110,99,101,32,124,32,
            70,111,114,109,97,116]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,88,51,32,61,32,70,111,114,109,97,116,32,124,32,70,111,114,109,
           97,116,65,114,103,115]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [22,88,52,32,61,32,70,111,114,109,97,116,65,114,103,115,32,124,32,79,
          112,116,115]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,112,114,105,110,116,45,52,34,62,112,
       114,105,110,116,45,52,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [19,91,112,114,105,110,116,45,53,93,40,35,112,114,105,110,116,45,
              53,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,">## print(Category, Importance, Format, FormatArgs, Opts) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Prints from a test case to the console."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,67,97,116,101,103,111,114,121,32,61,32,97,116,111,109,40,
              41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [22,73,109,112,111,114,116,97,110,99,101,32,61,32,105,110,116,
              101,103,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,70,111,114,109,97,116,32,61,32,115,116,114,105,110,103,40,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [19,70,111,114,109,97,116,65,114,103,115,32,61,32,108,105,115,116,
            40,41]}],
         0,false}],
       0,false}},
     {sep,[{text,[1,42]},{sep,[{text,"\fOpts = [Opt]"}],0,false}],0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,79,112,116,32,61,32,123,104,101,97,100,105,110,103,44,115,116,
          114,105,110,103,40,41,125]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,112,114,105,110,116,45,53,34,62,112,
       114,105,110,116,45,53,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"'Prints from a test case to the console."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "MThis function is meant for printing a string from a test case to the console."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,68,101,102,97,117,108,116]}],0,false},
            {text,"\n*Category*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,"\t*default*"},
            {sep,[{text,"\t, default"}],0,false},
            {text,"\f*Importance*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,[17,42,63,83,84,68,95,73,77,80,79,82,84,65,78,67,69,42]},
            {sep,
             [{text,
               [23,44,32,97,110,100,32,100,101,102,97,117,108,116,32,118,97,
                108,117,101,32,102,111,114]}],
             0,false},
            {text,"\f*FormatArgs*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,[4,42,91,93,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,[14,70,111,114,32,100,101,116,97,105,108,115,32,111,110]}],
             0,false},
            {text,"\n*Category*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\f*Importance*"},
            {sep,[{text,"\r, see section"}],0,false},
            {text,
             "I[Logging - Categories and Verbosity Levels](./write_test_chapter#logging)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,">## reload_config(Required) -> ValueOrElement | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "BReloads configuration file containing specified configuration key."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           "HRequired = KeyOrName | {KeyOrName, SubKey} | {KeyOrName, SubKey, SubKey}"}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,75,101,121,79,114,78,97,109,101,32,61,32,97,116,111,109,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,83,117,98,75,101,121,32,61,32,97,116,111,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [23,86,97,108,117,101,79,114,69,108,101,109,101,110,116,32,61,32,116,
          101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"-<a name=\"reload_config-1\">reload_config-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "BReloads configuration file containing specified configuration key."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [157,84,104,105,115,32,102,117,110,99,116,105,111,110,32,117,112,
              100,97,116,101,115,32,116,104,101,32,99,111,110,102,105,103,117,
              114,97,116,105,111,110,32,100,97,116,97,32,102,114,111,109,32,
              119,104,105,99,104,32,116,104,101,32,115,112,101,99,105,102,105,
              101,100,32,99,111,110,102,105,103,117,114,97,116,105,111,110,32,
              118,97,114,105,97,98,108,101,32,119,97,115,32,114,101,97,100,44,
              32,97,110,100,32,114,101,116,117,114,110,115,32,116,104,101,32,
              40,112,111,115,115,105,98,108,121,41,32,110,101,119,32,118,97,
              108,117,101,32,111,102,32,116,104,105,115,32,118,97,114,105,97,
              98,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "§If some variables were present in the configuration, but are not loaded using this function, they are removed from the configuration table together with their aliases."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,":## remaining_test_procs() -> {TestProcs,SharedGL,OtherGLs}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "|>This function will return the identity of test- and group leader processes that are still running at the time of this call."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [24,84,101,115,116,80,114,111,99,115,32,61,32,91,123,112,105,100,
            40,41,44,71,76,125,93]}],
         0,false}],
       0,false},
      {sep,[{text,[1,42]},{sep,[{text,"\nGL = pid()"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[16,83,104,97,114,101,100,71,76,32,61,32,112,105,100,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [18,79,116,104,101,114,71,76,115,32,61,32,91,112,105,100,40,41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{text,";<a name=\"remaining_test_procs-0\">remaining_test_procs-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "{This function will return the identity of test- and group leader processes that are still running at the time of this call."}],
             0,false},
            {text,"\v*TestProcs*"},
            {sep,
             [{text,
               "Oare processes in the system that have a Common Test IO process as group leader."}],
             0,false},
            {text,"\n*SharedGL*"},
            {sep,
             [{text,
               [143,105,115,32,116,104,101,32,99,101,110,116,114,97,108,32,67,
                111,109,109,111,110,32,84,101,115,116,32,73,79,32,112,114,111,
                99,101,115,115,44,32,114,101,115,112,111,110,115,105,98,108,
                101,32,102,111,114,32,112,114,105,110,116,105,110,103,32,116,
                111,32,108,111,103,32,102,105,108,101,115,32,102,111,114,32,
                99,111,110,102,105,103,117,114,97,116,105,111,110,32,102,117,
                110,99,116,105,111,110,115,32,97,110,100,32,115,101,113,117,
                101,110,116,105,97,108,108,121,32,101,120,101,99,117,116,105,
                110,103,32,116,101,115,116,32,99,97,115,101,115,46]}],
             0,false},
            {text,"\n*OtherGLs*"},
            {sep,
             [{text,
               "aare Common Test IO processes that print to log files for test cases in parallel test case groups."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ÖThe process information returned by this function may be used to locate and terminate remaining processes after tests have finished executing. The function would typically by called from Common Test Hook functions."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "\\Note that processes that execute configuration functions or test cases are never included in"}],
             0,false},
            {text,"\v*TestProcs*"},
            {sep,
             [{text,
               "¥. It is therefore safe to use post configuration hook functions (such as post_end_per_suite, post_end_per_group, post_end_per_testcase) to terminate all processes in"}],
             0,false},
            {text,"\v*TestProcs*"},
            {sep,
             [{text,
               "?that have the current group leader process as its group leader."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"(Note also that the shared group leader ("}],0,false},
            {text,"\n*SharedGL*"},
            {sep,
             [{text,
               "s) must never be terminated by the user, only by Common Test. Group leader processes for parallel test case groups ("}],
             0,false},
            {text,"\n*OtherGLs*"},
            {sep,
             [{text,
               "A) may however be terminated in post_end_per_group hook functions."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"(## remove_config(Callback, Config) -> ok"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [135,82,101,109,111,118,101,115,32,99,111,110,102,105,103,117,114,
            97,116,105,111,110,32,118,97,114,105,97,98,108,101,115,32,40,116,
            111,103,101,116,104,101,114,32,119,105,116,104,32,116,104,101,105,
            114,32,97,108,105,97,115,101,115,41,32,116,104,97,116,32,119,101,
            114,101,32,108,111,97,100,101,100,32,119,105,116,104,32,115,112,
            101,99,105,102,105,101,100,32,99,97,108,108,98,97,99,107,32,109,
            111,100,117,108,101,32,97,110,100,32,99,111,110,102,105,103,117,
            114,97,116,105,111,110,32,115,116,114,105,110,103,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[17,67,97,108,108,98,97,99,107,32,61,32,97,116,111,109,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,67,111,110,102,105,103,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"-<a name=\"remove_config-2\">remove_config-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [134,82,101,109,111,118,101,115,32,99,111,110,102,105,103,117,
              114,97,116,105,111,110,32,118,97,114,105,97,98,108,101,115,32,
              40,116,111,103,101,116,104,101,114,32,119,105,104,32,116,104,
              101,105,114,32,97,108,105,97,115,101,115,41,32,116,104,97,116,
              32,119,101,114,101,32,108,111,97,100,101,100,32,119,105,116,104,
              32,115,112,101,99,105,102,105,101,100,32,99,97,108,108,98,97,99,
              107,32,109,111,100,117,108,101,32,97,110,100,32,99,111,110,102,
              105,103,117,114,97,116,105,111,110,32,115,116,114,105,110,103,
              46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,",## require(Required) -> ok | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"2Checks if the required configuration is available."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"8Required = Key | {Key, SubKeys} | {Key, SubKey, SubKeys}"}],
         0,false}],
       0,false},
      {sep,[{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},{sep,[{text,"\eSubKeys = SubKey | [SubKey]"}],0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,83,117,98,75,101,121,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"!<a name=\"require-1\">require-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "^Checks if the required configuration is available. Arbitrarily deep tuples can be specified as"}],
             0,false},
            {text,"\n*Required*"},
            {sep,
             [{text,"5. Only the last element of the tuple can be a list of"}],
             0,false},
            {text,"\b*SubKey*"},
            {sep,[{text,[2,115,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[14,42,42,69,120,97,109,112,108,101,32,49,46,42,42]},
            {sep,
             [{text,
               [20,82,101,113,117,105,114,101,32,116,104,101,32,118,97,114,
                105,97,98,108,101]}],
             0,false},
            {text,[7,42,109,121,118,97,114,42]},
            {sep,[{text,[1,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [25,10,32,111,107,32,61,32,99,116,58,114,101,113,117,105,114,101,
              40,109,121,118,97,114,41,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             ":In this case the configuration file must at least contain:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [16,10,32,123,109,121,118,97,114,44,86,97,108,117,101,125,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[14,42,42,69,120,97,109,112,108,101,32,50,46,42,42]},
            {sep,[{text,"\vRequire key"}],0,false},
            {text,[7,42,109,121,118,97,114,42]},
            {sep,[{text,"\fwith subkeys"}],0,false},
            {text,[6,42,115,117,98,49,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[6,42,115,117,98,50,42]},
            {sep,[{text,[1,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"'\n ok = ct:require({myvar,[sub1,sub2]})."}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             ":In this case the configuration file must at least contain:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"&\n {myvar,[{sub1,Value},{sub2,Value}]}."}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[14,42,42,69,120,97,109,112,108,101,32,51,46,42,42]},
            {sep,[{text,"\vRequire key"}],0,false},
            {text,[7,42,109,121,118,97,114,42]},
            {sep,[{text,"\vwith subkey"}],0,false},
            {text,[6,42,115,117,98,49,42]},
            {sep,[{text,[4,119,105,116,104]}],0,false},
            {text,"\t*subsub1*"},
            {sep,[{text,[1,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"%\n ok = ct:require({myvar,sub1,sub2})."}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             ":In this case the configuration file must at least contain:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"\"\n {myvar,[{sub1,[{sub2,Value}]}]}."}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,49,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,49,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,50,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,51,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,51,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [23,91,114,101,113,117,105,114,101,45,50,93,40,35,114,101,113,
              117,105,114,101,45,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"2## require(Name, Required) -> ok | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "FChecks if the required configuration is available and gives it a name."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,[{text,[1,42]},{sep,[{text,"\rName = atom()"}],0,false}],0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"6Required = Key | {Key, SubKey} | {Key, SubKey, SubKey}"}],
         0,false}],
       0,false}},
     {sep,[{text,[1,42]},{sep,[{text,"\fSubKey = Key"}],0,false}],0,false}},
    {sep,[{text,[1,42]},{sep,[{text,"\fKey = atom()"}],0,false}],0,false}},
   {sep,
    [{text,"!<a name=\"require-2\">require-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "XChecks if the required configuration is available and gives it a name. The semantics for"}],
             0,false},
            {text,"\n*Required*"},
            {sep,
             [{text,
               [17,105,115,32,116,104,101,32,115,97,109,101,32,97,115,32,105,
                110]}],
             0,false},
            {text,
             [23,91,114,101,113,117,105,114,101,45,49,93,40,35,114,101,113,
              117,105,114,101,45,49,41]},
            {sep,
             [{text,
               [21,101,120,99,101,112,116,32,116,104,97,116,32,97,32,108,105,
                115,116,32,111,102]}],
             0,false},
            {text,"\b*SubKey*"},
            {sep,
             [{text,
               [22,115,32,99,97,110,110,111,116,32,98,101,32,115,112,101,99,
                105,102,105,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "CIf the requested data is available, the subentry is associated with"}],
             0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,
             [{text,"1so that the value of the element can be read with"}],
             0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,49,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,49,41]},
            {sep,[{text,"\bprovided"}],0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,
             [{text,
               [28,105,115,32,117,115,101,100,32,105,110,115,116,101,97,100,
                32,111,102,32,116,104,101,32,119,104,111,108,101]}],
             0,false},
            {text,"\n*Required*"},
            {sep,[{text,[5,116,101,114,109,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "NRequire one node with a Telnet connection and an FTP connection. Name the node"}],
             0,false},
            {text,[3,42,97,42]},
            {sep,[{text,[1,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"$\n ok = ct:require(a,{machine,node})."}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "mAll references to this node can then use the node name. For example, a file over FTP is fetched like follows:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"*\n ok = ct:ftp_get(a,RemoteFile,LocalFile)."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "?For this to work, the configuration file must at least contain:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"4\n {machine,[{node,[{telnet,IpAddr},{ftp,IpAddr}]}]}."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "2The behavior of this function changed radically in"}],
                        0,false},
                       {text,"\r*Common Test*"},
                       {sep,
                        [{text,
                          "H1.6.2. To keep some backwards compatability, it is still possible to do:"}],
                        0,false},
                       {above,{above,null,null},null},
                       {text,"$*ct:require(a,{node,[telnet,ftp]}).*"},
                       {above,{above,null,null},null},
                       {sep,
                        [{text,
                          [24,84,104,105,115,32,97,115,115,111,99,105,97,116,
                           101,115,32,116,104,101,32,110,97,109,101]}],
                        0,false},
                       {text,[3,42,97,42]},
                       {sep,
                        [{text,
                          [18,119,105,116,104,32,116,104,101,32,116,111,112,
                           45,108,101,118,101,108]}],
                        0,false},
                       {text,[6,42,110,111,100,101,42]},
                       {sep,
                        [{text,
                          "Fentry. For this to work, the configuration file must at least contain:"}],
                        0,false},
                       {above,{above,null,null},null},
                       {text,"(*{node,[{telnet,IpAddr},{ftp,IpAddr}]}.*"}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,49,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,49,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,50,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [29,91,103,101,116,95,99,111,110,102,105,103,45,51,93,40,35,103,
              101,116,95,99,111,110,102,105,103,45,51,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [23,91,114,101,113,117,105,114,101,45,49,93,40,35,114,101,113,
              117,105,114,101,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,114,117,110,40,84,101,115,116,68,105,114,115,41,32,45,62,
        32,82,101,115,117,108,116]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "?Runs all test cases in all suites in the specified directories."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [30,84,101,115,116,68,105,114,115,32,61,32,84,101,115,116,68,105,114,
         32,124,32,91,84,101,115,116,68,105,114,93]}],
      0,false}],
    0,false},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,114,117,110,45,49,34,62,114,117,110,
       45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "?Runs all test cases in all suites in the specified directories."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,114,117,110,45,51,93,40,35,114,117,110,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text," ## run(TestDir, Suite) -> Result"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"+Runs all test cases in the specified suite."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,114,117,110,45,50,34,62,114,117,110,
       45,50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Runs all test cases in the specified suite."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,114,117,110,45,51,93,40,35,114,117,110,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"'## run(TestDir, Suite, Cases) -> Result"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [30,82,117,110,115,32,116,104,101,32,115,112,101,99,105,102,105,
            101,100,32,116,101,115,116,32,99,97,115,101,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,84,101,115,116,68,105,114,32,61,32,115,116,114,105,110,103,40,
            41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[14,83,117,105,116,101,32,61,32,97,116,111,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [25,67,97,115,101,115,32,61,32,97,116,111,109,40,41,32,124,32,91,97,
           116,111,109,40,41,93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,[{text,"'Result = [TestResult] | {error, Reason}"}],0,false}],
     0,false}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,114,117,110,45,51,34,62,114,117,110,
       45,51,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,82,117,110,115,32,116,104,101,32,115,112,101,99,105,102,105,
              101,100,32,116,101,115,116,32,99,97,115,101,115,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rRequires that"}],0,false},
            {text,
             [23,91,105,110,115,116,97,108,108,45,49,93,40,35,105,110,115,116,
              97,108,108,45,49,41]},
            {sep,
             [{text,
               [19,104,97,115,32,98,101,101,110,32,114,117,110,32,102,105,114,
                115,116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSuites ("}],0,false},
            {text,"\r**_SUITE.erl*"},
            {sep,
             [{text,
               [25,41,32,102,105,108,101,115,32,109,117,115,116,32,98,101,32,
                115,116,111,114,101,100,32,105,110]}],
             0,false},
            {text,"\t*TestDir*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[14,42,84,101,115,116,68,105,114,47,116,101,115,116,42]},
            {sep,
             [{text,"/. All suites are compiled when the test is run."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## run_test(Opts) -> Result"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           ">Runs tests as specified by the combination of options in Opts."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {above,
                                             {above,
                                              {above,
                                               {above,
                                                {above,
                                                 {above,
                                                  {sep,
                                                   [{text,[1,42]},
                                                    {sep,
                                                     [{text,
                                                       [18,79,112,116,115,32,
                                                        61,32,91,79,112,116,
                                                        84,117,112,108,101,
                                                        115,93]}],
                                                     0,false}],
                                                   0,false},
                                                  {sep,
                                                   [{text,[1,42]},
                                                    {sep,
                                                     [{text,
                                                       [872,79,112,116,84,117,
                                                        112,108,101,115,32,61,
                                                        32,123,100,105,114,44,
                                                        32,84,101,115,116,68,
                                                        105,114,115,125,32,
                                                        124,32,123,115,117,
                                                        105,116,101,44,32,83,
                                                        117,105,116,101,115,
                                                        125,32,124,32,123,103,
                                                        114,111,117,112,44,32,
                                                        71,114,111,117,112,
                                                        115,125,32,124,32,123,
                                                        116,101,115,116,99,97,
                                                        115,101,44,32,67,97,
                                                        115,101,115,125,32,
                                                        124,32,123,115,112,
                                                        101,99,44,32,84,101,
                                                        115,116,83,112,101,99,
                                                        115,125,32,124,32,123,
                                                        106,111,105,110,95,
                                                        115,112,101,99,115,44,
                                                        32,66,111,111,108,125,
                                                        32,124,32,123,108,97,
                                                        98,101,108,44,32,76,
                                                        97,98,101,108,125,32,
                                                        124,32,123,99,111,110,
                                                        102,105,103,44,32,67,
                                                        102,103,70,105,108,
                                                        101,115,125,32,124,32,
                                                        123,117,115,101,114,
                                                        99,111,110,102,105,
                                                        103,44,32,85,115,101,
                                                        114,67,111,110,102,
                                                        105,103,125,32,124,32,
                                                        123,97,108,108,111,
                                                        119,95,117,115,101,
                                                        114,95,116,101,114,
                                                        109,115,44,32,66,111,
                                                        111,108,125,32,124,32,
                                                        123,108,111,103,100,
                                                        105,114,44,32,76,111,
                                                        103,68,105,114,125,32,
                                                        124,32,123,115,105,
                                                        108,101,110,116,95,99,
                                                        111,110,110,101,99,
                                                        116,105,111,110,115,
                                                        44,32,67,111,110,110,
                                                        115,125,32,124,32,123,
                                                        115,116,121,108,101,
                                                        115,104,101,101,116,
                                                        44,32,67,83,83,70,105,
                                                        108,101,125,32,124,32,
                                                        123,99,111,118,101,
                                                        114,44,32,67,111,118,
                                                        101,114,83,112,101,99,
                                                        70,105,108,101,125,32,
                                                        124,32,123,99,111,118,
                                                        101,114,95,115,116,
                                                        111,112,44,32,66,111,
                                                        111,108,125,32,124,32,
                                                        123,115,116,101,112,
                                                        44,32,83,116,101,112,
                                                        79,112,116,115,125,32,
                                                        124,32,123,101,118,
                                                        101,110,116,95,104,97,
                                                        110,100,108,101,114,
                                                        44,32,69,118,101,110,
                                                        116,72,97,110,100,108,
                                                        101,114,115,125,32,
                                                        124,32,123,105,110,99,
                                                        108,117,100,101,44,32,
                                                        73,110,99,108,68,105,
                                                        114,115,125,32,124,32,
                                                        123,97,117,116,111,95,
                                                        99,111,109,112,105,
                                                        108,101,44,32,66,111,
                                                        111,108,125,32,124,32,
                                                        123,97,98,111,114,116,
                                                        95,105,102,95,109,105,
                                                        115,115,105,110,103,
                                                        95,115,117,105,116,
                                                        101,115,44,32,66,111,
                                                        111,108,125,32,124,32,
                                                        123,99,114,101,97,116,
                                                        101,95,112,114,105,
                                                        118,95,100,105,114,44,
                                                        32,67,114,101,97,116,
                                                        101,80,114,105,118,68,
                                                        105,114,125,32,124,32,
                                                        123,109,117,108,116,
                                                        105,112,108,121,95,
                                                        116,105,109,101,116,
                                                        114,97,112,115,44,32,
                                                        77,125,32,124,32,123,
                                                        115,99,97,108,101,95,
                                                        116,105,109,101,116,
                                                        114,97,112,115,44,32,
                                                        66,111,111,108,125,32,
                                                        124,32,123,114,101,
                                                        112,101,97,116,44,32,
                                                        78,125,32,124,32,123,
                                                        100,117,114,97,116,
                                                        105,111,110,44,32,68,
                                                        117,114,84,105,109,
                                                        101,125,32,124,32,123,
                                                        117,110,116,105,108,
                                                        44,32,83,116,111,112,
                                                        84,105,109,101,125,32,
                                                        124,32,123,102,111,
                                                        114,99,101,95,115,116,
                                                        111,112,44,32,70,111,
                                                        114,99,101,83,116,111,
                                                        112,125,32,124,32,123,
                                                        100,101,99,114,121,
                                                        112,116,44,32,68,101,
                                                        99,114,121,112,116,75,
                                                        101,121,79,114,70,105,
                                                        108,101,125,32,124,32,
                                                        123,114,101,102,114,
                                                        101,115,104,95,108,
                                                        111,103,115,44,32,76,
                                                        111,103,68,105,114,
                                                        125,32,124,32,123,108,
                                                        111,103,111,112,116,
                                                        115,44,32,76,111,103,
                                                        79,112,116,115,125,32,
                                                        124,32,123,118,101,
                                                        114,98,111,115,105,
                                                        116,121,44,32,86,76,
                                                        101,118,101,108,115,
                                                        125,32,124,32,123,98,
                                                        97,115,105,99,95,104,
                                                        116,109,108,44,32,66,
                                                        111,111,108,125,32,
                                                        124,32,123,101,115,99,
                                                        95,99,104,97,114,115,
                                                        44,32,66,111,111,108,
                                                        125,32,124,32,123,107,
                                                        101,101,112,95,108,
                                                        111,103,115,44,75,101,
                                                        101,112,83,112,101,99,
                                                        125,32,124,32,123,99,
                                                        116,95,104,111,111,
                                                        107,115,44,32,67,84,
                                                        72,115,125,32,124,32,
                                                        123,101,110,97,98,108,
                                                        101,95,98,117,105,108,
                                                        116,105,110,95,104,
                                                        111,111,107,115,44,32,
                                                        66,111,111,108,125,32,
                                                        124,32,123,114,101,
                                                        108,101,97,115,101,95,
                                                        115,104,101,108,108,
                                                        44,32,66,111,111,108,
                                                        125]}],
                                                     0,false}],
                                                   0,false}},
                                                 {sep,
                                                  [{text,[1,42]},
                                                   {sep,
                                                    [{text,
                                                      " TestDirs = [string()] | string()"}],
                                                    0,false}],
                                                  0,false}},
                                                {sep,
                                                 [{text,[1,42]},
                                                  {sep,
                                                   [{text,
                                                     "2Suites = [string()] | [atom()] | string() | atom()"}],
                                                   0,false}],
                                                 0,false}},
                                               {sep,
                                                [{text,[1,42]},
                                                 {sep,
                                                  [{text,
                                                    [25,67,97,115,101,115,32,
                                                     61,32,91,97,116,111,109,
                                                     40,41,93,32,124,32,97,
                                                     116,111,109,40,41]}],
                                                  0,false}],
                                                0,false}},
                                              {sep,
                                               [{text,[1,42]},
                                                {sep,
                                                 [{text,
                                                   ",Groups = GroupNameOrPath | [GroupNameOrPath]"}],
                                                 0,false}],
                                               0,false}},
                                             {sep,
                                              [{text,[1,42]},
                                               {sep,
                                                [{text,
                                                  ")GroupNameOrPath = [atom()] | atom() | all"}],
                                                0,false}],
                                              0,false}},
                                            {sep,
                                             [{text,[1,42]},
                                              {sep,
                                               [{text,
                                                 "!TestSpecs = [string()] | string()"}],
                                               0,false}],
                                             0,false}},
                                           {sep,
                                            [{text,[1,42]},
                                             {sep,
                                              [{text,
                                                [25,76,97,98,101,108,32,61,32,
                                                 115,116,114,105,110,103,40,
                                                 41,32,124,32,97,116,111,109,
                                                 40,41]}],
                                              0,false}],
                                            0,false}},
                                          {sep,
                                           [{text,[1,42]},
                                            {sep,
                                             [{text,
                                               " CfgFiles = [string()] | string()"}],
                                             0,false}],
                                           0,false}},
                                         {sep,
                                          [{text,[1,42]},
                                           {sep,
                                            [{text,
                                              "DUserConfig = [{CallbackMod, CfgStrings}] | {CallbackMod, CfgStrings}"}],
                                            0,false}],
                                          0,false}},
                                        {sep,
                                         [{text,[1,42]},
                                          {sep,
                                           [{text,
                                             [20,67,97,108,108,98,97,99,107,
                                              77,111,100,32,61,32,97,116,111,
                                              109,40,41]}],
                                           0,false}],
                                         0,false}},
                                       {sep,
                                        [{text,[1,42]},
                                         {sep,
                                          [{text,
                                            "\"CfgStrings = [string()] | string()"}],
                                          0,false}],
                                        0,false}},
                                      {sep,
                                       [{text,[1,42]},
                                        {sep,
                                         [{text,
                                           [17,76,111,103,68,105,114,32,61,32,
                                            115,116,114,105,110,103,40,41]}],
                                         0,false}],
                                       0,false}},
                                     {sep,
                                      [{text,[1,42]},
                                       {sep,
                                        [{text,
                                          [22,67,111,110,110,115,32,61,32,97,
                                           108,108,32,124,32,91,97,116,111,
                                           109,40,41,93]}],
                                        0,false}],
                                      0,false}},
                                    {sep,
                                     [{text,[1,42]},
                                      {sep,
                                       [{text,
                                         [18,67,83,83,70,105,108,101,32,61,32,
                                          115,116,114,105,110,103,40,41]}],
                                       0,false}],
                                     0,false}},
                                   {sep,
                                    [{text,[1,42]},
                                     {sep,
                                      [{text,
                                        [24,67,111,118,101,114,83,112,101,99,
                                         70,105,108,101,32,61,32,115,116,114,
                                         105,110,103,40,41]}],
                                      0,false}],
                                    0,false}},
                                  {sep,
                                   [{text,[1,42]},
                                    {sep,
                                     [{text,
                                       [25,83,116,101,112,79,112,116,115,32,
                                        61,32,91,83,116,101,112,79,112,116,93,
                                        32,124,32,91,93]}],
                                     0,false}],
                                   0,false}},
                                 {sep,
                                  [{text,[1,42]},
                                   {sep,
                                    [{text,
                                      " StepOpt = config | keep_inactive"}],
                                    0,false}],
                                  0,false}},
                                {sep,
                                 [{text,[1,42]},
                                  {sep,
                                   [{text,
                                     [25,69,118,101,110,116,72,97,110,100,108,
                                      101,114,115,32,61,32,69,72,32,124,32,91,
                                      69,72,93]}],
                                   0,false}],
                                 0,false}},
                               {sep,
                                [{text,[1,42]},
                                 {sep,
                                  [{text,
                                    "7EH = atom() | {atom(), InitArgs} | {[atom()], InitArgs}"}],
                                  0,false}],
                                0,false}},
                              {sep,
                               [{text,[1,42]},
                                {sep,
                                 [{text,
                                   [19,73,110,105,116,65,114,103,115,32,61,32,
                                    91,116,101,114,109,40,41,93]}],
                                 0,false}],
                               0,false}},
                             {sep,
                              [{text,[1,42]},
                               {sep,
                                [{text," InclDirs = [string()] | string()"}],
                                0,false}],
                              0,false}},
                            {sep,
                             [{text,[1,42]},
                              {sep,
                               [{text,
                                 ":CreatePrivDir = auto_per_run | auto_per_tc | manual_per_tc"}],
                               0,false}],
                             0,false}},
                           {sep,
                            [{text,[1,42]},
                             {sep,[{text,"\rM = integer()"}],0,false}],
                            0,false}},
                          {sep,
                           [{text,[1,42]},
                            {sep,[{text,"\rN = integer()"}],0,false}],
                           0,false}},
                         {sep,
                          [{text,[1,42]},
                           {sep,
                            [{text,
                              [24,68,117,114,84,105,109,101,32,61,32,115,116,
                               114,105,110,103,40,72,72,77,77,83,83,41]}],
                            0,false}],
                          0,false}},
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{text,
                             "2StopTime = string(YYMoMoDDHHMMSS) | string(HHMMSS)"}],
                           0,false}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{text,
                            [28,70,111,114,99,101,83,116,111,112,32,61,32,115,
                             107,105,112,95,114,101,115,116,32,124,32,66,111,
                             111,108]}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,
                           ":DecryptKeyOrFile = {key, DecryptKey} | {file, DecryptFile}"}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          [21,68,101,99,114,121,112,116,75,101,121,32,61,32,
                           115,116,114,105,110,103,40,41]}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{text,
                         [22,68,101,99,114,121,112,116,70,105,108,101,32,61,
                          32,115,116,114,105,110,103,40,41]}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,
                        [18,76,111,103,79,112,116,115,32,61,32,91,76,111,103,
                         79,112,116,93]}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       [23,76,111,103,79,112,116,32,61,32,110,111,95,110,108,
                        32,124,32,110,111,95,115,114,99]}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,"'VLevels = VLevel | [{Category, VLevel}]"}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [18,86,76,101,118,101,108,32,61,32,105,110,116,101,103,
                      101,114,40,41]}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [17,67,97,116,101,103,111,114,121,32,61,32,97,116,111,109,
                     40,41]}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [30,75,101,101,112,83,112,101,99,32,61,32,97,108,108,32,
                    124,32,112,111,115,95,105,110,116,101,103,101,114,40,41]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,"-CTHs = [CTHModule | {CTHModule, CTHInitArgs}]"}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [18,67,84,72,77,111,100,117,108,101,32,61,32,97,116,111,109,
                  40,41]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [20,67,84,72,73,110,105,116,65,114,103,115,32,61,32,116,101,
                 114,109,40,41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "SResult = {Ok, Failed, {UserSkipped, AutoSkipped}} | TestRunnerPid | {error, Reason}"}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[14,79,107,32,61,32,105,110,116,101,103,101,114,40,41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [18,70,97,105,108,101,100,32,61,32,105,110,116,101,103,101,114,
              40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [23,85,115,101,114,83,107,105,112,112,101,100,32,61,32,105,110,
             116,101,103,101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [23,65,117,116,111,83,107,105,112,112,101,100,32,61,32,105,110,116,
            101,103,101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [21,84,101,115,116,82,117,110,110,101,114,80,105,100,32,61,32,112,
           105,100,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"#<a name=\"run_test-1\">run_test-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "8Runs tests as specified by the combination of options in"}],
             0,false},
            {text,[6,42,79,112,116,115,42]},
            {sep,
             [{text,"5. The options are the same as those used with program"}],
             0,false},
            {text,"\b*ct_run*"},
            {sep,[{text,[5,44,32,115,101,101]}],0,false},
            {text,".[Run Tests from Command Line](./ct_run#ct_run)"},
            {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
            {text,"\b*ct_run*"},
            {sep,[{text,"\fmanual page."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[6,72,101,114,101,32,97]}],0,false},
            {text,"\t*TestDir*"},
            {sep,[{text,"&can be used to point out the path to a"}],0,false},
            {text,[7,42,83,117,105,116,101,42]},
            {sep,[{text,"\b. Option"}],0,false},
            {text,"\n*testcase*"},
            {sep,
             [{text,
               [21,99,111,114,114,101,115,112,111,110,100,115,32,116,111,32,
                111,112,116,105,111,110]}],
             0,false},
            {text,[7,42,45,99,97,115,101,42]},
            {sep,[{text,"\nin program"}],0,false},
            {text,"\b*ct_run*"},
            {sep,[{text,"\". Configuration files specified in"}],0,false},
            {text,[6,42,79,112,116,115,42]},
            {sep,[{text,"'are installed automatically at startup."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[15,42,84,101,115,116,82,117,110,110,101,114,80,105,100,42]},
            {sep,
             [{text,
               [14,105,115,32,114,101,116,117,114,110,101,100,32,105,102]}],
             0,false},
            {text,
             [23,42,114,101,108,101,97,115,101,95,115,104,101,108,108,32,61,
              61,32,116,114,117,101,42]},
            {sep,
             [{text,
               [18,46,32,70,111,114,32,100,101,116,97,105,108,115,44,32,115,
                101,101]}],
             0,false},
            {text,
             [19,91,98,114,101,97,107,45,49,93,40,35,98,114,101,97,107,45,49,
              41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\b*Reason*"},
            {sep,
             [{text,"(indicates the type of error encountered."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"### run_testspec(TestSpec) -> Result"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"\"Runs a test specified by TestSpec."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [19,84,101,115,116,83,112,101,99,32,61,32,91,116,101,114,109,40,
               41,93]}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "CResult = {Ok, Failed, {UserSkipped, AutoSkipped}} | {error, Reason}"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[14,79,107,32,61,32,105,110,116,101,103,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,70,97,105,108,101,100,32,61,32,105,110,116,101,103,101,114,40,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [23,85,115,101,114,83,107,105,112,112,101,100,32,61,32,105,110,116,
            101,103,101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [23,65,117,116,111,83,107,105,112,112,101,100,32,61,32,105,110,116,
           101,103,101,114,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"+<a name=\"run_testspec-1\">run_testspec-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [24,82,117,110,115,32,97,32,116,101,115,116,32,115,112,101,99,
                105,102,105,101,100,32,98,121]}],
             0,false},
            {text,"\n*TestSpec*"},
            {sep,
             [{text,
               "9. The same terms are used as in test specification files."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\b*Reason*"},
            {sep,
             [{text,"(indicates the type of error encountered."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"'## set_verbosity(Category, Level) -> ok"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"/Set the verbosity level for a logging category."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},{sep,[{text,"\eCategory = default | atom()"}],0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,76,101,118,101,108,32,61,32,105,110,116,101,103,101,114,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"-<a name=\"set_verbosity-2\">set_verbosity-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "XUse this function to set, or modify, the verbosity level for a logging category. See the"}],
             0,false},
            {text,",[User's Guide](./write_test_chapter#logging)"},
            {sep,
             [{text,
               [26,102,111,114,32,100,101,116,97,105,108,115,46,32,85,115,101,
                32,116,104,101,32,118,97,108,117,101]}],
             0,false},
            {text,"\t*default*"},
            {sep,[{text,"#to set the general verbosity level."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,115,108,101,101,112,40,84,105,109,101,41,32,45,62,32,111,
        107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "UThis function, similar to timer:sleep/1, suspends the test case for a specified time."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "PTime = {hours, Hours} | {minutes, Mins} | {seconds, Secs} | Millisecs | infinity"}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,72,111,117,114,115,32,61,32,105,110,116,101,103,101,114,40,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [16,77,105,110,115,32,61,32,105,110,116,101,103,101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[16,83,101,99,115,32,61,32,105,110,116,101,103,101,114,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [31,77,105,108,108,105,115,101,99,115,32,61,32,105,110,116,101,103,
          101,114,40,41,32,124,32,102,108,111,97,116,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,115,108,101,101,112,45,49,34,62,115,
       108,101,101,112,45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [25,84,104,105,115,32,102,117,110,99,116,105,111,110,44,32,115,
                105,109,105,108,97,114,32,116,111]}],
             0,false},
            {text,[15,42,116,105,109,101,114,58,115,108,101,101,112,47,49,42]},
            {sep,
             [{text,
               "^in STDLIB, suspends the test case for a specified time. However, this function also multiplies"}],
             0,false},
            {text,[6,42,84,105,109,101,42]},
            {sep,[{text,"\bwith the"}],0,false},
            {text,
             [20,42,109,117,108,116,105,112,108,121,95,116,105,109,101,116,
              114,97,112,115,42]},
            {sep,
             [{text,
               "Wvalue (if set) and under certain circumstances also scales up the time automatically if"}],
             0,false},
            {text,
             [17,42,115,99,97,108,101,95,116,105,109,101,116,114,97,112,115,
              42]},
            {sep,[{text,"\tis set to"}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,"\v(default is"}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,115,116,97,114,116,95,105,110,116,101,114,97,99,116,105,
        118,101,40,41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[6,83,116,97,114,116,115]}],0,false},
          {text,"\r*Common Test*"},
          {sep,
           [{text,
             [20,105,110,32,105,110,116,101,114,97,99,116,105,118,101,32,109,
              111,100,101,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"5<a name=\"start_interactive-0\">start_interactive-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[6,83,116,97,114,116,115]}],0,false},
            {text,"\r*Common Test*"},
            {sep,
             [{text,
               [20,105,110,32,105,110,116,101,114,97,99,116,105,118,101,32,
                109,111,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "¦From this mode, all test case support functions can be executed directly from the Erlang shell. The interactive mode can also be started from the OS command line with"}],
             0,false},
            {text,"!*ct_run -shell [-config File...]*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "¨If any functions (for example, Telnet or FTP) using \"required configuration data\" are to be called from the Erlang shell, configuration data must first be required with"}],
             0,false},
            {text,
             [23,91,114,101,113,117,105,114,101,45,50,93,40,35,114,101,113,
              117,105,114,101,45,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [155,10,32,62,32,99,116,58,114,101,113,117,105,114,101,40,117,
              110,105,120,95,116,101,108,110,101,116,44,32,117,110,105,120,41,
              46,10,32,111,107,10,32,62,32,99,116,95,116,101,108,110,101,116,
              58,111,112,101,110,40,117,110,105,120,95,116,101,108,110,101,
              116,41,46,10,32,123,111,107,44,60,48,46,49,48,53,46,48,62,125,
              10,32,62,32,99,116,95,116,101,108,110,101,116,58,99,109,100,40,
              117,110,105,120,95,116,101,108,110,101,116,44,32,34,108,115,32,
              46,34,41,46,10,32,123,111,107,44,91,34,108,115,34,44,34,102,105,
              108,101,49,32,32,46,46,46,34,44,46,46,46,93,125]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"'## step(TestDir, Suite, Case) -> Result"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,",Steps through a test case with the debugger."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,[{text,[1,42]},{sep,[{text,"\rCase = atom()"}],0,false}],0,false},
   {sep,
    [{text,"\e<a name=\"step-3\">step-3</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Steps through a test case with the debugger."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,114,117,110,45,51,93,40,35,114,117,110,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"-## step(TestDir, Suite, Case, Opts) -> Result"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,",Steps through a test case with the debugger."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,[{text,[1,42]},{sep,[{text,"\rCase = atom()"}],0,false}],0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[17,79,112,116,115,32,61,32,91,79,112,116,93,32,124,32,91,93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [28,79,112,116,32,61,32,99,111,110,102,105,103,32,124,32,107,101,101,
          112,95,105,110,97,99,116,105,118,101]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"\e<a name=\"step-4\">step-4</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "6Steps through a test case with the debugger. If option"}],
             0,false},
            {text,"\b*config*"},
            {sep,
             [{text,
               "Mhas been specifed, breakpoints are also set on the configuration functions in"}],
             0,false},
            {text,[7,42,83,117,105,116,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,114,117,110,45,51,93,40,35,114,117,110,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## stop_interactive() -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,[{sep,[{text,"\eExits the interactive mode."}],0,false}],0,true},
      null},
     null}},
   {sep,
    [{text,"3<a name=\"stop_interactive-0\">stop_interactive-0</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,[{sep,[{text,"\eExits the interactive mode."}],0,false}],0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,"+[start_interactive-0](#start_interactive-0)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text," ## sync_notify(Name, Data) -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             ">Sends a synchronous notification of type Name with Data to the"}],
           0,false},
          {text,"\r*Common Test*"},
          {sep,
           [{text,[14,101,118,101,110,116,32,109,97,110,97,103,101,114,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,[{text,[1,42]},{sep,[{text,"\rName = atom()"}],0,false}],0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\rData = term()"}],0,false}],0,false}},
   {sep,
    [{text,")<a name=\"sync_notify-2\">sync_notify-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"(Sends a synchronous notification of type"}],0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text,[4,119,105,116,104]}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,[{text,[6,116,111,32,116,104,101]}],0,false},
            {text,"\r*Common Test*"},
            {sep,
             [{text,
               "Gevent manager. This can later be caught by any installed event manager."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [31,91,115,116,100,108,105,98,47,103,101,110,95,101,118,101,110,
              116,93,40,46,47,103,101,110,95,101,118,101,110,116,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,";## testcases(TestDir, Suite) -> Testcases | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,".Returns all test cases in the specified suite."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,84,101,115,116,68,105,114,32,61,32,115,116,114,105,110,103,40,
            41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[14,83,117,105,116,101,32,61,32,97,116,111,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,84,101,115,116,99,97,115,101,115,32,61,32,108,105,115,116,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"%<a name=\"testcases-2\">testcases-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,".Returns all test cases in the specified suite."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [23,35,35,32,116,105,109,101,116,114,97,112,40,84,105,109,101,41,32,45,
        62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,".Sets a new timetrap for the running test case."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "WTime = {hours, Hours} | {minutes, Mins} | {seconds, Secs} | Millisecs | infinity | Func"}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [17,72,111,117,114,115,32,61,32,105,110,116,101,103,101,114,
                 40,41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [16,77,105,110,115,32,61,32,105,110,116,101,103,101,114,40,
                41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [16,83,101,99,115,32,61,32,105,110,116,101,103,101,114,40,41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [21,77,105,108,108,105,115,101,99,115,32,61,32,105,110,116,101,
              103,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [29,70,117,110,99,32,61,32,123,77,44,32,70,44,32,65,125,32,124,32,
             102,117,110,99,116,105,111,110,40,41]}],
          0,false}],
        0,false}},
      {sep,[{text,[1,42]},{sep,[{text,"\nM = atom()"}],0,false}],0,false}},
     {sep,[{text,[1,42]},{sep,[{text,"\nF = atom()"}],0,false}],0,false}},
    {sep,[{text,[1,42]},{sep,[{text,"\nA = list()"}],0,false}],0,false}},
   {sep,
    [{text,"#<a name=\"timetrap-1\">timetrap-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,".Sets a new timetrap for the running test case."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [18,73,102,32,116,104,101,32,97,114,103,117,109,101,110,116,32,
                105,115]}],
             0,false},
            {text,[6,42,70,117,110,99,42]},
            {sep,
             [{text,
               "7, the timetrap is triggered when this function returns."}],
             0,false},
            {text,[6,42,70,117,110,99,42]},
            {sep,
             [{text,
               [21,99,97,110,32,97,108,115,111,32,114,101,116,117,114,110,32,
                97,32,110,101,119]}],
             0,false},
            {text,[6,42,84,105,109,101,42]},
            {sep,
             [{text,
               "<value, which in that case is the value for the new timetrap."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,">## userdata(TestDir, Suite) -> SuiteUserData | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "_Returns any data specified with tag userdata in the list of tuples returned from Suite:suite/0."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,84,101,115,116,68,105,114,32,61,32,115,116,114,105,110,103,40,
            41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[14,83,117,105,116,101,32,61,32,97,116,111,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,83,117,105,116,101,85,115,101,114,68,97,116,97,32,61,32,91,116,
           101,114,109,40,41,93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"#<a name=\"userdata-2\">userdata-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"#Returns any data specified with tag"}],0,false},
            {text,"\n*userdata*"},
            {sep,[{text,"#in the list of tuples returned from"}],0,false},
            {text,
             ":[common_test#Module:suite-0](./common_test#Module:suite-0)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "N## userdata(TestDir, Suite, Case::GroupOrCase) -> TCUserData | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "xReturns any data specified with tag userdata in the list of tuples returned from Suite:group(GroupName) or Suite:Case()."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [18,84,101,115,116,68,105,114,32,61,32,115,116,114,105,110,103,
              40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[14,83,117,105,116,101,32,61,32,97,116,111,109,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,[{text,")GroupOrCase = {group, GroupName} | atom()"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,71,114,111,117,112,78,97,109,101,32,61,32,97,116,111,109,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [21,84,67,85,115,101,114,68,97,116,97,32,61,32,91,116,101,114,109,
           40,41,93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{text,"#<a name=\"userdata-3\">userdata-3</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"#Returns any data specified with tag"}],0,false},
            {text,"\n*userdata*"},
            {sep,[{text,"#in the list of tuples returned from"}],0,false},
            {text,
             [24,42,83,117,105,116,101,58,103,114,111,117,112,40,71,114,111,
              117,112,78,97,109,101,41,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[14,42,83,117,105,116,101,58,67,97,115,101,40,41,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
