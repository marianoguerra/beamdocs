{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,[6,35,32,109,101,114,108]},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,[6,35,32,109,101,114,108]},null},null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [26,77,101,116,97,112,114,111,103,114,97,109,109,105,110,103,32,
              105,110,32,69,114,108,97,110,103,46]}],
           0,false}],
         0,true},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "HMetaprogramming in Erlang. Merl is a more user friendly interface to the"}],
                   0,false},
                  {text,"\f*erl_syntax*"},
                  {sep,
                   [{text,
                     "»module, making it easy both to build new ASTs from scratch and to match and decompose existing ASTs. For details that are outside the scope of Merl itself, please see the documentation of"}],
                   0,false},
                  {text,
                   [24,91,101,114,108,95,115,121,110,116,97,120,93,40,101,114,
                    108,95,115,121,110,116,97,120,41]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,"%<a name=\"Quick_start\">Quick_start</a>"},
                  {text,
                   [15,42,42,81,117,105,99,107,32,115,116,97,114,116,42,42]}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "TTo enable the full power of Merl, your module needs to include the Merl header file:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "3     -include_lib(\"syntax_tools/include/merl.hrl\")."}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [21,84,104,101,110,44,32,121,111,117,32,99,97,110,32,117,
                      115,101,32,116,104,101]}],
                   0,false},
                  {text,"\n*?Q(Text)*"},
                  {sep,
                   [{text,
                     "Jmacros in your code to create ASTs or match on existing ASTs. For example:"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "e     Tuple = ?Q(\"{foo, 42}\"),\n     ?Q(\"{foo, _@Number}\") = Tuple,\n     Call = ?Q(\"foo:bar(_@Number)\")"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,[7,67,97,108,108,105,110,103]}],0,false},
                  {text,
                   [18,42,109,101,114,108,58,112,114,105,110,116,40,67,97,108,
                    108,41,42]},
                  {sep,
                   [{text,"#will then print the following code:"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [16,32,32,32,32,32,102,111,111,58,98,97,114,40,52,50,41]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,[3,84,104,101]}],0,false},
                  {text,[4,42,63,81,42]},
                  {sep,
                   [{text,
                     "Pmacros turn the quoted code fragments into ASTs, and lifts metavariables such as"}],
                   0,false},
                  {text,"\t*_@Tuple*"},
                  {sep,[{text,[3,97,110,100]}],0,false},
                  {text,"\n*_@Number*"},
                  {sep,
                   [{text,
                     "Sto the level of your Erlang code, so you can use the corresponding Erlang variables"}],
                   0,false},
                  {text,[7,42,84,117,112,108,101,42]},
                  {sep,[{text,[3,97,110,100]}],0,false},
                  {text,"\b*Number*"},
                  {sep,
                   [{text,
                     "`directly. This is the most straightforward way to use Merl, and in many cases it's all you need."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,"&You can even write case switches using"}],
                   0,false},
                  {text,[4,42,63,81,42]},
                  {sep,[{text," macros as patterns. For example:"}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "°     case AST of\n         ?Q(\"{foo, _@Foo}\") -> handle(Foo);\n         ?Q(\"{bar, _@Bar}\") when erl_syntax:is_integer(Bar) -> handle(Bar);\n         _ -> handle_default()\n     end"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [30,84,104,101,115,101,32,99,97,115,101,32,115,119,105,
                      116,99,104,101,115,32,111,110,108,121,32,97,108,108,111,
                      119]}],
                   0,false},
                  {text,"\t*?Q(...)*"},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,[3,42,95,42]},
                  {sep,
                   [{text,
                     "bas clause patterns, and the guards may contain any expressions, not just Erlang guard expressions."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,"\fIf the macro"}],0,false},
                  {text,
                   [19,42,77,69,82,76,95,78,79,95,84,82,65,78,83,70,79,82,77,
                    42]},
                  {sep,
                   [{text,
                     [21,105,115,32,100,101,102,105,110,101,100,32,98,101,102,
                      111,114,101,32,116,104,101]}],
                   0,false},
                  {text,"\n*merl.hrl*"},
                  {sep,
                   [{text,
                     "sheader file is included, the parse transform used by Merl will be disabled, and in that case, the match expressions"}],
                   0,false},
                  {text,[15,42,63,81,40,46,46,46,41,32,61,32,46,46,46,42]},
                  {sep,
                   [{text,
                     [21,44,32,99,97,115,101,32,115,119,105,116,99,104,101,
                      115,32,117,115,105,110,103]}],
                   0,false},
                  {text,"\t*?Q(...)*"},
                  {sep,
                   [{text,"*patterns, and automatic metavariables like"}],
                   0,false},
                  {text,"\t*_@Tuple*"},
                  {sep,
                   [{text,
                     [127,99,97,110,110,111,116,32,98,101,32,117,115,101,100,
                      32,105,110,32,121,111,117,114,32,99,111,100,101,44,32,
                      98,117,116,32,116,104,101,32,77,101,114,108,32,109,97,
                      99,114,111,115,32,97,110,100,32,102,117,110,99,116,105,
                      111,110,115,32,115,116,105,108,108,32,119,111,114,107,
                      46,32,84,111,32,100,111,32,109,101,116,97,118,97,114,
                      105,97,98,108,101,32,115,117,98,115,116,105,116,117,116,
                      105,111,110,44,32,121,111,117,32,110,101,101,100,32,116,
                      111,32,117,115,101,32,116,104,101]}],
                   0,false},
                  {text,[15,42,63,81,40,84,101,120,116,44,32,77,97,112,41,42]},
                  {sep,[{text,"\fmacro, e.g.:"}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "?     Tuple = ?Q(\"{foo, _@bar, _@baz}\", [{bar, Bar}, {baz,Baz}])"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [19,84,104,101,32,116,101,120,116,32,103,105,118,101,110,
                      32,116,111,32,97]}],
                   0,false},
                  {text,"\n*?Q(Text)*"},
                  {sep,
                   [{text,
                     [147,109,97,99,114,111,32,99,97,110,32,98,101,32,101,105,
                      116,104,101,114,32,97,32,115,105,110,103,108,101,32,115,
                      116,114,105,110,103,44,32,111,114,32,97,32,108,105,115,
                      116,32,111,102,32,115,116,114,105,110,103,115,46,32,84,
                      104,101,32,108,97,116,116,101,114,32,105,115,32,117,115,
                      101,102,117,108,32,119,104,101,110,32,121,111,117,32,
                      110,101,101,100,32,116,111,32,115,112,108,105,116,32,97,
                      32,108,111,110,103,32,101,120,112,114,101,115,115,105,
                      111,110,32,111,118,101,114,32,109,117,108,116,105,112,
                      108,101,32,108,105,110,101,115,44,32,101,46,103,46,58]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [129,32,32,32,32,32,63,81,40,91,34,99,97,115,101,32,95,64,
                    69,120,112,114,32,111,102,34,44,10,32,32,32,32,32,32,32,
                    32,32,34,32,32,123,102,111,111,44,32,88,125,32,45,62,32,
                    102,40,88,41,59,34,44,10,32,32,32,32,32,32,32,32,32,34,32,
                    32,123,98,97,114,44,32,88,125,32,45,62,32,103,40,88,41,34,
                    44,10,32,32,32,32,32,32,32,32,32,34,32,32,95,32,45,62,32,
                    104,40,88,41,34,10,32,32,32,32,32,32,32,32,32,34,101,110,
                    100,34,93,41]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   [345,73,102,32,116,104,101,114,101,32,105,115,32,97,32,115,
                    121,110,116,97,120,32,101,114,114,111,114,32,115,111,109,
                    101,119,104,101,114,101,32,105,110,32,116,104,101,32,116,
                    101,120,116,32,40,108,105,107,101,32,116,104,101,32,109,
                    105,115,115,105,110,103,32,115,101,109,105,99,111,108,111,
                    110,32,105,110,32,116,104,101,32,115,101,99,111,110,100,
                    32,99,108,97,117,115,101,32,97,98,111,118,101,41,32,116,
                    104,105,115,32,97,108,108,111,119,115,32,77,101,114,108,
                    32,116,111,32,103,101,110,101,114,97,116,101,32,97,110,32,
                    101,114,114,111,114,32,109,101,115,115,97,103,101,32,112,
                    111,105,110,116,105,110,103,32,116,111,32,116,104,101,32,
                    101,120,97,99,116,32,108,105,110,101,32,105,110,32,121,
                    111,117,114,32,115,111,117,114,99,101,32,99,111,100,101,
                    46,32,40,74,117,115,116,32,114,101,109,101,109,98,101,114,
                    32,116,111,32,99,111,109,109,97,45,115,101,112,97,114,97,
                    116,101,32,116,104,101,32,115,116,114,105,110,103,115,32,
                    105,110,32,116,104,101,32,108,105,115,116,44,32,111,116,
                    104,101,114,119,105,115,101,32,69,114,108,97,110,103,32,
                    119,105,108,108,32,99,111,110,99,97,116,101,110,97,116,
                    101,32,116,104,101,32,115,116,114,105,110,103,32,102,114,
                    97,103,109,101,110,116,115,32,97,115,32,105,102,32,116,
                    104,101,121,32,119,101,114,101,32,97,32,115,105,110,103,
                    108,101,32,115,116,114,105,110,103,46,41]}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "5<a name=\"Metavariable_syntax\">Metavariable_syntax</a>"},
                  {text,
                   [23,42,42,77,101,116,97,118,97,114,105,97,98,108,101,32,
                    115,121,110,116,97,120,42,42]}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "CThere are several ways to write a metavariable in your quoted code:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{text,
                     [19,65,116,111,109,115,32,115,116,97,114,116,105,110,103,
                      32,119,105,116,104]}],
                   0,false},
                  {text,[3,42,64,42]},
                  {sep,[{text,"\r, for example"}],0,false},
                  {text,"\b*'@foo'*"},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,"\b*'@Foo'*"}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{text,
                     [23,86,97,114,105,97,98,108,101,115,32,115,116,97,114,
                      116,105,110,103,32,119,105,116,104]}],
                   0,false},
                  {text,[4,42,95,64,42]},
                  {sep,[{text,"\r, for example"}],0,false},
                  {text,[7,42,95,64,98,97,114,42]},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,[7,42,95,64,66,97,114,42]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,
                    [21,83,116,114,105,110,103,115,32,115,116,97,114,116,105,
                     110,103,32,119,105,116,104]}],
                  0,false},
                 {text,[5,42,34,39,64,42]},
                 {sep,[{text,"\r, for example"}],0,false},
                 {text,"\n*\"'@File\"*"}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,"'Integers starting with 909, for example"}],
                 0,false},
                {text,[6,42,57,48,57,49,42]},
                {sep,[{text,[2,111,114]}],0,false},
                {text,"\b*909123*"}],
               0,false}],
             0,false}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,"!Following the prefix, one or more"}],0,false},
                  {text,[3,42,95,42]},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,[3,42,48,42]},
                  {sep,
                   [{text,
                     "bcharacters may be used to indicate \"lifting\" of the variable one or more levels, and after that, a"}],
                   0,false},
                  {text,[3,42,64,42]},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,[3,42,57,42]},
                  {sep,
                   [{text,
                     [134,99,104,97,114,97,99,116,101,114,32,105,110,100,105,
                      99,97,116,101,115,32,97,32,103,108,111,98,32,109,101,
                      116,97,118,97,114,105,97,98,108,101,32,40,109,97,116,99,
                      104,105,110,103,32,122,101,114,111,32,111,114,32,109,
                      111,114,101,32,101,108,101,109,101,110,116,115,32,105,
                      110,32,97,32,115,101,113,117,101,110,99,101,41,32,114,
                      97,116,104,101,114,32,116,104,97,110,32,97,32,110,111,
                      114,109,97,108,32,109,101,116,97,118,97,114,105,97,98,
                      108,101,46,32,70,111,114,32,101,120,97,109,112,108,101,
                      58]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,"\t*'@_foo'*"},
                 {sep,
                  [{text,
                    [24,105,115,32,108,105,102,116,101,100,32,111,110,101,32,
                     108,101,118,101,108,44,32,97,110,100]}],
                  0,false},
                 {text,"\t*_@__foo*"},
                 {sep,
                  [{text,
                    [20,105,115,32,108,105,102,116,101,100,32,116,119,111,32,
                     108,101,118,101,108,115]}],
                  0,false}],
                0,false}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,"\b*_@@bar*"},
                 {sep,
                  [{text,
                    [23,105,115,32,97,32,103,108,111,98,32,118,97,114,105,97,
                     98,108,101,44,32,97,110,100]}],
                  0,false},
                 {text,"\t*_@_@bar*"},
                 {sep,
                  [{text,
                    [25,105,115,32,97,32,108,105,102,116,101,100,32,103,108,
                     111,98,32,118,97,114,105,97,98,108,101]}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,[7,42,57,48,57,48,49,42]},
                {sep,
                 [{text,
                   [21,105,115,32,97,32,108,105,102,116,101,100,32,118,97,114,
                    105,97,98,108,101,44]}],
                 0,false},
                {text,[7,42,57,48,57,57,49,42]},
                {sep,
                 [{text,
                   [23,105,115,32,97,32,103,108,111,98,32,118,97,114,105,97,
                    98,108,101,44,32,97,110,100]}],
                 0,false},
                {text,"\t*9090091*"},
                {sep,
                 [{text,"$is a glob variable lifted two levels"}],
                 0,false}],
               0,false}],
             0,false}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "a(Note that the last character in the name is never considered to be a lift or glob marker, hence,"}],
                   0,false},
                  {text,[6,42,95,64,95,95,42]},
                  {sep,[{text,[3,97,110,100]}],0,false},
                  {text,[7,42,57,48,57,48,48,42]},
                  {sep,
                   [{text,
                     "¿are only lifted one level, not two. Also note that globs only matter for matching; when doing substitutions, a non-glob variable can be used to inject a sequence of elements, and vice versa.)"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "=If the name after the prefix and any lift and glob markers is"}],
                   0,false},
                  {text,[3,42,95,42]},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,[3,42,48,42]},
                  {sep,
                   [{text,
                     "T, the variable is treated as an anonymous catch-all pattern in matches. For example,"}],
                   0,false},
                  {text,[5,42,95,64,95,42]},
                  {sep,[{text,[1,44]}],0,false},
                  {text,[6,42,95,64,64,95,42]},
                  {sep,[{text,[1,44]}],0,false},
                  {text,[6,42,95,64,95,95,42]},
                  {sep,[{text,"\t, or even"}],0,false},
                  {text,"\b*_@__@_*"},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "hFinally, if the name without any prefixes or lift/glob markers begins with an uppercase character, as in"}],
                   0,false},
                  {text,[7,42,95,64,70,111,111,42]},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,"\t*_@_@Foo*"},
                  {sep,
                   [{text,
                     "r, it will become a variable on the Erlang level, and can be used to easily deconstruct and construct syntax trees:"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "Z     case Input of\n         ?Q(\"{foo, _@Number}\") -> ?Q(\"foo:bar(_@Number)\");\n         ..."}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "QWe refer to these as \"automatic metavariables\". If in addition the name ends with"}],
                   0,false},
                  {text,[3,42,64,42]},
                  {sep,[{text,[7,44,32,97,115,32,105,110]}],0,false},
                  {text,"\b*_@Foo@*"},
                  {sep,
                   [{text,
                     "®, the value of the variable as an Erlang term will be automatically converted to the corresponding abstract syntax tree when used to construct a larger tree. For example, in:"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "4     Bar = {bar, 42},\n     Foo = ?Q(\"{foo, _@Bar@}\")"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     ";(where Bar is just some term, not a syntax tree) the result"}],
                   0,false},
                  {text,[5,42,70,111,111,42]},
                  {sep,
                   [{text,"\"will be a syntax tree representing"}],
                   0,false},
                  {text,
                   [18,42,123,102,111,111,44,32,123,98,97,114,44,32,52,50,125,
                    125,42]},
                  {sep,
                   [{text,
                     "M. This avoids the need for temporary variables in order to inject data, as in"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "H     TmpBar = erl_syntax:abstract(Bar),\n     Foo = ?Q(\"{foo, _@TmpBar}\")"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "ÀIf the context requires an integer rather than a variable, an atom, or a string, you cannot use the uppercase convention to mark an automatic metavariable. Instead, if the integer (without the"}],
                   0,false},
                  {text,[5,42,57,48,57,42]},
                  {sep,
                   [{text,"(-prefix and lift/glob markers) ends in a"}],
                   0,false},
                  {text,[3,42,57,42]},
                  {sep,
                   [{text,
                     "@, the integer will become an Erlang-level variable prefixed with"}],
                   0,false},
                  {text,[3,42,81,42]},
                  {sep,
                   [{text,
                     [21,44,32,97,110,100,32,105,102,32,105,116,32,101,110,
                      100,115,32,119,105,116,104]}],
                   0,false},
                  {text,[4,42,57,57,42]},
                  {sep,
                   [{text,
                     "yit will also be automatically abstracted. For example, the following will increment the arity of the exported function f:"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [156,32,32,32,32,32,99,97,115,101,32,70,111,114,109,32,111,
                    102,10,32,32,32,32,32,32,32,32,32,63,81,40,34,45,101,120,
                    112,111,114,116,40,91,102,47,57,48,57,49,57,93,41,46,34,
                    41,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,81,
                    50,32,61,32,101,114,108,95,115,121,110,116,97,120,58,99,
                    111,110,99,114,101,116,101,40,81,49,41,32,43,32,49,44,10,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,63,81,40,34,45,101,
                    120,112,111,114,116,40,91,102,47,57,48,57,50,57,57,93,41,
                    46,34,41,59,10,32,32,32,32,32,32,32,32,32,46,46,46]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "k<a name=\"When_to_use_the_various_forms_of_metavariables\">When_to_use_the_various_forms_of_metavariables</a>"},
                  {text,
                   "2**When to use the various forms of metavariables**"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "®Merl can only parse a fragment of text if it follows the basic syntactical rules of Erlang. In most places, a normal Erlang variable can be used as metavariable, for example:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [26,32,32,32,32,32,63,81,40,34,102,40,95,64,65,114,103,41,
                    34,41,32,61,32,69,120,112,114]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "kbut if you want to match on something like the name of a function, you have to use an atom as metavariable:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,"'     ?Q(\"'@Name'() -> _@@_.\" = Function"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,"!(note the anonymous glob variable"}],0,false},
                  {text,[6,42,95,64,64,95,42]},
                  {sep,
                   [{text,
                     [29,116,111,32,105,103,110,111,114,101,32,116,104,101,32,
                      102,117,110,99,116,105,111,110,32,98,111,100,121,41,
                      46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "TIn some contexts, only a string or an integer is allowed. For example, the directive"}],
                   0,false},
                  {text,
                   [19,42,45,102,105,108,101,40,78,97,109,101,44,32,76,105,
                    110,101,41,42]},
                  {sep,[{text,"\rrequires that"}],0,false},
                  {text,[6,42,78,97,109,101,42]},
                  {sep,
                   [{text,
                     [23,105,115,32,97,32,115,116,114,105,110,103,32,108,105,
                      116,101,114,97,108,32,97,110,100]}],
                   0,false},
                  {text,[6,42,76,105,110,101,42]},
                  {sep,
                   [{text,
                     [19,97,110,32,105,110,116,101,103,101,114,32,108,105,116,
                      101,114,97,108,58]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "E     ?Q(\"-file(\\\"'@File\\\", 9090).\") = ?Q(\"-file(\\\"foo.erl\\\", 42).\"))."}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,"$This will extract the string literal"}],
                   0,false},
                  {text,"\v*\"foo.erl\"*"},
                  {sep,
                   [{text,
                     [17,105,110,116,111,32,116,104,101,32,118,97,114,105,97,
                      98,108,101]}],
                   0,false},
                  {text,[5,42,70,111,111,42]},
                  {sep,
                   [{text,"(. Note the use of the anonymous variable"}],
                   0,false},
                  {text,[6,42,57,48,57,48,42]},
                  {sep,
                   [{text,
                     "ñto ignore the line number. To match and also bind a metavariable that must be an integer literal, we can use the convention of ending the integer with a 9, turning it into a Q-prefixed variable on the Erlang level (see the previous section)."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   [25,60,97,32,110,97,109,101,61,34,71,108,111,98,115,34,62,
                    71,108,111,98,115,60,47,97,62]},
                  {text,"\t**Globs**"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   [154,87,104,101,110,101,118,101,114,32,121,111,117,32,119,
                    97,110,116,32,116,111,32,109,97,116,99,104,32,111,117,116,
                    32,97,32,110,117,109,98,101,114,32,111,102,32,101,108,101,
                    109,101,110,116,115,32,105,110,32,97,32,115,101,113,117,
                    101,110,99,101,32,40,122,101,114,111,32,111,114,32,109,
                    111,114,101,41,32,114,97,116,104,101,114,32,116,104,97,
                    110,32,97,32,102,105,120,101,100,32,115,101,116,32,111,
                    102,32,101,108,101,109,101,110,116,115,44,32,121,111,117,
                    32,110,101,101,100,32,116,111,32,117,115,101,32,97,32,103,
                    108,111,98,46,32,70,111,114,32,101,120,97,109,112,108,101,
                    58]}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,"(     ?Q(\"{_@@Elements}\") = ?Q({a, b, c})"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "Pwill bind Elements to the list of individual syntax trees representing the atoms"}],
                   0,false},
                  {text,[3,42,97,42]},
                  {sep,[{text,[1,44]}],0,false},
                  {text,[3,42,98,42]},
                  {sep,[{text,[5,44,32,97,110,100]}],0,false},
                  {text,[3,42,99,42]},
                  {sep,
                   [{text,
                     "\\. This can also be used with static prefix and suffix elements in the sequence. For example:"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "1     ?Q(\"{a, b, _@@Elements}\") = ?Q({a, b, c, d})"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,"%will bind Elements to the list of the"}],
                   0,false},
                  {text,[3,42,99,42]},
                  {sep,[{text,[3,97,110,100]}],0,false},
                  {text,[3,42,100,42]},
                  {sep,[{text,"\rsubtrees, and"}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "1     ?Q(\"{_@@Elements, c, d}\") = ?Q({a, b, c, d})"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,"%will bind Elements to the list of the"}],
                   0,false},
                  {text,[3,42,97,42]},
                  {sep,[{text,[3,97,110,100]}],0,false},
                  {text,[3,42,98,42]},
                  {sep,
                   [{text,
                     "Gsubtrees. You can even use plain metavariables in the prefix or suffix:"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,"-     ?Q(\"{_@First, _@@Rest}\") = ?Q({a, b, c})"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,{sep,[{sep,[{text,[2,111,114]}],0,false}],0,true},null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,")     ?Q(\"{_@@_, _@Last}\") = ?Q({a, b, c})"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "d(ignoring all but the last element). You cannot however have two globs as part of the same sequence."}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "7<a name=\"Lifted_metavariables\">Lifted_metavariables</a>"},
                  {text,
                   [24,42,42,76,105,102,116,101,100,32,109,101,116,97,118,97,
                    114,105,97,98,108,101,115,42,42]}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   [146,73,110,32,115,111,109,101,32,99,97,115,101,115,44,32,
                    116,104,101,32,69,114,108,97,110,103,32,115,121,110,116,
                    97,120,32,114,117,108,101,115,32,109,97,107,101,32,105,
                    116,32,105,109,112,111,115,115,105,98,108,101,32,116,111,
                    32,112,108,97,99,101,32,97,32,109,101,116,97,118,97,114,
                    105,97,98,108,101,32,100,105,114,101,99,116,108,121,32,
                    119,104,101,114,101,32,121,111,117,32,119,111,117,108,100,
                    32,108,105,107,101,32,105,116,46,32,70,111,114,32,101,120,
                    97,109,112,108,101,44,32,121,111,117,32,99,97,110,110,111,
                    116,32,119,114,105,116,101,58]}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [30,32,32,32,32,32,63,81,40,34,45,101,120,112,111,114,116,
                    40,91,95,64,64,78,97,109,101,93,41,46,34,41]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "¡to match out all name/arity pairs in the export list, or to insert a list of exports in a declaration, because the Erlang parser only allows elements on the form"}],
                   0,false},
                  {text,[5,42,65,47,73,42]},
                  {sep,[{text,[6,40,119,104,101,114,101]}],0,false},
                  {text,[3,42,65,42]},
                  {sep,
                   [{text,
                     [14,105,115,32,97,110,32,97,116,111,109,32,97,110,100]}],
                   0,false},
                  {text,[3,42,73,42]},
                  {sep,
                   [{text,
                     "uan integer) in the export list. A variable like the above is not allowed, but neither is a single atom or integer, so"}],
                   0,false},
                  {text,"\n*'@@Name'*"},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,"\b*909919*"},
                  {sep,
                   [{text,
                     [21,119,111,117,108,100,110,39,116,32,119,111,114,107,32,
                      101,105,116,104,101,114,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "©What you have to do in such cases is to write your metavariable in a syntactically valid position, and use lifting markers to denote where it should really apply, as in:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,"\"     ?Q(\"-export(['@_@Name'/0]).\")"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [147,84,104,105,115,32,99,97,117,115,101,115,32,116,104,
                      101,32,118,97,114,105,97,98,108,101,32,116,111,32,98,
                      101,32,108,105,102,116,101,100,32,40,97,102,116,101,114,
                      32,112,97,114,115,105,110,103,41,32,116,111,32,116,104,
                      101,32,110,101,120,116,32,104,105,103,104,101,114,32,
                      108,101,118,101,108,32,105,110,32,116,104,101,32,115,
                      121,110,116,97,120,32,116,114,101,101,44,32,114,101,112,
                      108,97,99,105,110,103,32,116,104,97,116,32,101,110,116,
                      105,114,101,32,115,117,98,116,114,101,101,46,32,73,110,
                      32,116,104,105,115,32,99,97,115,101,44,32,116,104,101]}],
                   0,false},
                  {text,"\r*'@_@Name'/0*"},
                  {sep,
                   [{text,
                     [21,119,105,108,108,32,98,101,32,114,101,112,108,97,99,
                      101,100,32,119,105,116,104]}],
                   0,false},
                  {text,"\n*'@@Name'*"},
                  {sep,[{text,"\t, and the"}],0,false},
                  {text,[4,42,47,48,42]},
                  {sep,
                   [{text,
                     ";part was just used as dummy notation and will be discarded."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "zYou may even need to apply lifting more than once. To match the entire export list as a single syntax tree, you can write:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,"\"     ?Q(\"-export(['@__Name'/0]).\")"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "Susing two underscores, but with no glob marker this time. This will make the entire"}],
                   0,false},
                  {text,[15,42,91,39,64,95,95,78,97,109,101,39,47,48,93,42]},
                  {sep,
                   [{text,
                     [21,112,97,114,116,32,98,101,32,114,101,112,108,97,99,
                      101,100,32,119,105,116,104]}],
                   0,false},
                  {text,"\t*'@Name'*"},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "ÌSometimes, the tree structure of a code fragment isn't very obvious, and parts of the structure may be invisible when printed as source code. For instance, a simple function definition like the following:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [17,32,32,32,32,32,122,101,114,111,40,41,32,45,62,32,48,
                    46]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [30,99,111,110,115,105,115,116,115,32,111,102,32,116,104,
                      101,32,110,97,109,101,32,40,116,104,101,32,97,116,111,
                      109]}],
                   0,false},
                  {text,[6,42,122,101,114,111,42]},
                  {sep,
                   [{text,
                     "5), and a list of clauses containing the single clause"}],
                   0,false},
                  {text,"\t*() -> 0*"},
                  {sep,
                   [{text,
                     [151,46,32,84,104,101,32,99,108,97,117,115,101,32,99,111,
                      110,115,105,115,116,115,32,111,102,32,97,110,32,97,114,
                      103,117,109,101,110,116,32,108,105,115,116,32,40,101,
                      109,112,116,121,41,44,32,97,32,103,117,97,114,100,32,40,
                      101,109,112,116,121,41,44,32,97,110,100,32,97,32,98,111,
                      100,121,32,40,119,104,105,99,104,32,105,115,32,97,108,
                      119,97,121,115,32,97,32,108,105,115,116,32,111,102,32,
                      101,120,112,114,101,115,115,105,111,110,115,41,32,99,
                      111,110,116,97,105,110,105,110,103,32,116,104,101,32,
                      115,105,110,103,108,101,32,101,120,112,114,101,115,115,
                      105,111,110]}],
                   0,false},
                  {text,[3,42,48,42]},
                  {sep,
                   [{text,
                     "r. This means that to match out the name and the list of clauses of any function, you'll need to use a pattern like"}],
                   0,false},
                  {text,
                   [30,42,63,81,40,34,39,64,78,97,109,101,39,40,41,32,45,62,
                    32,95,64,95,64,66,111,100,121,46,34,41,42]},
                  {sep,
                   [{text,
                     "=, using a dummy clause whose body is a glob lifted one level."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "ETo visualize the structure of a syntax tree, you can use the function"}],
                   0,false},
                  {text,
                   [14,42,109,101,114,108,58,115,104,111,119,40,84,41,42]},
                  {sep,
                   [{text,"/, which prints a summary. For example, entering"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "<     merl:show(merl:quote(\"inc(X, Y) when Y > 0 -> X + Y.\"))"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "7in the Erlang shell will print the following (where the"}],
                   0,false},
                  {text,[3,42,43,42]},
                  {sep,
                   [{text,
                     "5signs separate groups of subtrees on the same level):"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [498,32,32,32,32,32,102,117,110,99,116,105,111,110,58,32,
                    105,110,99,40,88,44,32,89,41,32,119,104,101,110,32,46,46,
                    46,32,45,62,32,88,32,43,32,89,46,10,32,32,32,32,32,32,32,
                    97,116,111,109,58,32,105,110,99,10,32,32,32,32,32,32,32,
                    43,10,32,32,32,32,32,32,32,99,108,97,117,115,101,58,32,40,
                    88,44,32,89,41,32,119,104,101,110,32,46,46,46,32,45,62,32,
                    88,32,43,32,89,10,32,32,32,32,32,32,32,32,32,118,97,114,
                    105,97,98,108,101,58,32,88,10,32,32,32,32,32,32,32,32,32,
                    118,97,114,105,97,98,108,101,58,32,89,10,32,32,32,32,32,
                    32,32,32,32,43,10,32,32,32,32,32,32,32,32,32,100,105,115,
                    106,117,110,99,116,105,111,110,58,32,89,32,62,32,48,10,32,
                    32,32,32,32,32,32,32,32,32,32,99,111,110,106,117,110,99,
                    116,105,111,110,58,32,89,32,62,32,48,10,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,105,110,102,105,120,95,101,120,112,
                    114,58,32,89,32,62,32,48,10,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,118,97,114,105,97,98,108,101,58,32,89,10,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,43,10,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,111,112,101,114,97,
                    116,111,114,58,32,62,10,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,43,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,105,110,116,101,103,101,114,58,32,48,10,32,32,32,32,
                    32,32,32,32,32,43,10,32,32,32,32,32,32,32,32,32,105,110,
                    102,105,120,95,101,120,112,114,58,32,88,32,43,32,89,10,32,
                    32,32,32,32,32,32,32,32,32,32,118,97,114,105,97,98,108,
                    101,58,32,88,10,32,32,32,32,32,32,32,32,32,32,32,43,10,32,
                    32,32,32,32,32,32,32,32,32,32,111,112,101,114,97,116,111,
                    114,58,32,43,10,32,32,32,32,32,32,32,32,32,32,32,43,10,32,
                    32,32,32,32,32,32,32,32,32,32,118,97,114,105,97,98,108,
                    101,58,32,89]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "XThis shows another important non-obvious case: a clause guard, even if it's as simple as"}],
                   0,false},
                  {text,[7,42,89,32,62,32,48,42]},
                  {sep,
                   [{text,
                     "r, always consists of a single disjunction of one or more conjunctions of tests, much like a tuple of tuples. Thus:"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [19,42,34,119,104,101,110,32,95,64,71,117,97,114,100,32,
                      45,62,34,42]},
                    {sep,
                     [{text,"-will only match a guard with exactly one test"}],
                     0,false}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [20,42,34,119,104,101,110,32,95,64,64,71,117,97,114,100,
                      32,45,62,34,42]},
                    {sep,
                     [{text,
                       "Vwill match a guard with one or more comma-separated tests (but no semicolons), binding"}],
                     0,false},
                    {text,[7,42,71,117,97,114,100,42]},
                    {sep,
                     [{text,
                       [20,116,111,32,116,104,101,32,108,105,115,116,32,111,
                        102,32,116,101,115,116,115]}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [20,42,34,119,104,101,110,32,95,64,95,71,117,97,114,100,
                     32,45,62,34,42]},
                   {sep,
                    [{text,
                      "4will match just like the previous pattern, but binds"}],
                    0,false},
                   {text,[7,42,71,117,97,114,100,42]},
                   {sep,
                    [{text,
                      [26,116,111,32,116,104,101,32,99,111,110,106,117,110,99,
                       116,105,111,110,32,115,117,98,116,114,101,101]}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [21,42,34,119,104,101,110,32,95,64,95,64,71,117,97,114,100,
                    32,45,62,34,42]},
                  {sep,
                   [{text,"/will match an arbitrary nonempty guard, binding"}],
                   0,false},
                  {text,[7,42,71,117,97,114,100,42]},
                  {sep,
                   [{text,"#to the list of conjunction subtrees"}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [21,42,34,119,104,101,110,32,95,64,95,95,71,117,97,114,100,
                   32,45,62,34,42]},
                 {sep,
                  [{text,"/will match like the previous pattern, but binds"}],
                  0,false},
                 {text,[7,42,71,117,97,114,100,42]},
                 {sep,[{text," to the whole disjunction subtree"}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,"\fand finally,"}],0,false},
                {text,
                 [22,42,34,119,104,101,110,32,95,64,95,95,64,71,117,97,114,
                  100,32,45,62,34,42]},
                {sep,
                 [{text,
                   [30,119,105,108,108,32,109,97,116,99,104,32,97,110,121,32,
                    99,108,97,117,115,101,44,32,98,105,110,100,105,110,103]}],
                 0,false},
                {text,[7,42,71,117,97,114,100,42]},
                {sep,[{text,[2,116,111]}],0,false},
                {text,[4,42,91,93,42]},
                {sep,
                 [{text,
                   [28,105,102,32,116,104,101,32,103,117,97,114,100,32,105,
                    115,32,101,109,112,116,121,32,97,110,100,32,116,111]}],
                 0,false},
                {text,
                 [15,42,91,68,105,115,106,117,110,99,116,105,111,110,93,42]},
                {sep,[{text,"\totherwise"}],0,false}],
               0,false}],
             0,false}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "9Thus, the following pattern matches all possible clauses:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,")     \"(_@Args) when _@__@Guard -> _@Body\""}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r## DATA TYPES"},null},null}},
     {text,
      [25,60,97,32,110,97,109,101,61,34,116,121,112,101,115,34,62,116,121,112,
       101,115,60,47,97,62]},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,116,62]},
                                            {sep,
                                             [{sep,
                                               [{text,
                                                 [19,116,121,112,101,45,100,
                                                  101,102,97,117,108,116,95,
                                                  97,99,116,105,111,110]},
                                                {sep,
                                                 [{text,
                                                   [23,100,101,102,97,117,108,
                                                    116,95,97,99,116,105,111,
                                                    110,40,41,32,61,32,40,41,
                                                    32,45]}],
                                                 0,false},
                                                {sep,
                                                 [{text,
                                                   [7,62,32,97,110,121,40,
                                                    41]}],
                                                 0,false}],
                                               0,false}],
                                             0,false},
                                            {text,[5,60,47,100,116,62]}],
                                           0,true},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,100,62]},
                                            null,
                                            {text,[5,60,47,100,100,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,116,62]},
                                           {sep,
                                            [{sep,
                                              [{text,"\btype-env"},
                                               {sep,
                                                [{text,
                                                  [15,101,110,118,40,41,32,61,
                                                   32,91,123,75,101,121,58,
                                                   58]}],
                                                0,false},
                                               {text,[4,105,100,40,41]},
                                               {sep,[{text,[1,44]}],0,false},
                                               {text,
                                                [21,112,97,116,116,101,114,
                                                 110,95,111,114,95,112,97,116,
                                                 116,101,114,110,115,40,41]},
                                               {sep,
                                                [{text,[2,125,93]}],
                                                0,false}],
                                              0,false}],
                                            0,false},
                                           {text,[5,60,47,100,116,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,100,62]},
                                          null,
                                          {text,[5,60,47,100,100,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,116,62]},
                                         {sep,
                                          [{sep,
                                            [{text,
                                              [15,116,121,112,101,45,103,117,
                                               97,114,100,95,116,101,115,116]},
                                             {sep,
                                              [{text,
                                                [16,103,117,97,114,100,95,116,
                                                 101,115,116,40,41,32,61,32,
                                                 40]}],
                                              0,false},
                                             {text,[5,101,110,118,40,41]},
                                             {sep,
                                              [{text,[3,41,32,45]}],
                                              0,false},
                                             {sep,
                                              [{text,"\v> boolean()"}],
                                              0,false}],
                                            0,false}],
                                          0,false},
                                         {text,[5,60,47,100,116,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,100,62]},
                                        null,
                                        {text,[5,60,47,100,100,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,
                                        [{sep,
                                          [{text,
                                            [19,116,121,112,101,45,103,117,97,
                                             114,100,101,100,95,97,99,116,105,
                                             111,110]},
                                           {sep,
                                            [{text,
                                              [18,103,117,97,114,100,101,100,
                                               95,97,99,116,105,111,110,40,41,
                                               32,61]}],
                                            0,false},
                                           {text,
                                            [15,115,119,105,116,99,104,95,97,
                                             99,116,105,111,110,40,41]},
                                           {sep,
                                            [{text,[3,124,32,123]}],
                                            0,false},
                                           {text,"\fguard_test()"},
                                           {sep,[{text,[1,44]}],0,false},
                                           {text,
                                            [15,115,119,105,116,99,104,95,97,
                                             99,116,105,111,110,40,41]},
                                           {sep,[{text,[1,125]}],0,false}],
                                          0,false}],
                                        0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,100,62]},
                                      null,
                                      {text,[5,60,47,100,100,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,
                                      [{sep,
                                        [{text,
                                          [20,116,121,112,101,45,103,117,97,
                                           114,100,101,100,95,97,99,116,105,
                                           111,110,115]},
                                         {sep,
                                          [{text,
                                            [19,103,117,97,114,100,101,100,95,
                                             97,99,116,105,111,110,115,40,41,
                                             32,61]}],
                                          0,false},
                                         {text,
                                          [16,103,117,97,114,100,101,100,95,
                                           97,99,116,105,111,110,40,41]},
                                         {sep,[{text,[3,124,32,91]}],0,false},
                                         {text,
                                          [16,103,117,97,114,100,101,100,95,
                                           97,99,116,105,111,110,40,41]},
                                         {sep,[{text,[1,93]}],0,false}],
                                        0,false}],
                                      0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    null,
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,
                                    [{sep,
                                      [{text,[7,116,121,112,101,45,105,100]},
                                       {sep,
                                        [{text,
                                          [25,105,100,40,41,32,61,32,97,116,
                                           111,109,40,41,32,124,32,105,110,
                                           116,101,103,101,114,40,41]}],
                                        0,false}],
                                      0,false}],
                                    0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  null,
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{sep,
                                    [{text,"\rtype-location"},
                                     {sep,[{text,"\flocation() ="}],0,false},
                                     {text,
                                      [19,101,114,108,95,97,110,110,111,58,
                                       108,111,99,97,116,105,111,110,40,41]}],
                                    0,false}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                null,
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{sep,
                                  [{text,"\ftype-pattern"},
                                   {sep,[{text,"\vpattern() ="}],0,false},
                                   {text,[6,116,114,101,101,40,41]},
                                   {sep,[{text,[1,124]}],0,false},
                                   {text,"\ntemplate()"}],
                                  0,false}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              null,
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{sep,
                                [{text,
                                  [24,116,121,112,101,45,112,97,116,116,101,
                                   114,110,95,111,114,95,112,97,116,116,101,
                                   114,110,115]},
                                 {sep,
                                  [{text,
                                    [23,112,97,116,116,101,114,110,95,111,114,
                                     95,112,97,116,116,101,114,110,115,40,41,
                                     32,61]}],
                                  0,false},
                                 {text,"\tpattern()"},
                                 {sep,[{text,[3,124,32,91]}],0,false},
                                 {text,"\tpattern()"},
                                 {sep,[{text,[1,93]}],0,false}],
                                0,false}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            null,
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{sep,
                              [{text,
                                [18,116,121,112,101,45,115,119,105,116,99,104,
                                 95,97,99,116,105,111,110]},
                               {sep,
                                [{text,
                                  [19,115,119,105,116,99,104,95,97,99,116,105,
                                   111,110,40,41,32,61,32,40]}],
                                0,false},
                               {text,[5,101,110,118,40,41]},
                               {sep,[{text,[3,41,32,45]}],0,false},
                               {sep,
                                [{text,[7,62,32,97,110,121,40,41]}],
                                0,false}],
                              0,false}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          null,
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{sep,
                            [{text,
                              [18,116,121,112,101,45,115,119,105,116,99,104,
                               95,99,108,97,117,115,101]},
                             {sep,
                              [{text,
                                [19,115,119,105,116,99,104,95,99,108,97,117,
                                 115,101,40,41,32,61,32,123]}],
                              0,false},
                             {text,
                              [21,112,97,116,116,101,114,110,95,111,114,95,
                               112,97,116,116,101,114,110,115,40,41]},
                             {sep,[{text,[1,44]}],0,false},
                             {text,
                              [17,103,117,97,114,100,101,100,95,97,99,116,105,
                               111,110,115,40,41]},
                             {sep,[{text,[5,125,32,124,32,123]}],0,false},
                             {text,
                              [21,112,97,116,116,101,114,110,95,111,114,95,
                               112,97,116,116,101,114,110,115,40,41]},
                             {sep,[{text,[1,44]}],0,false},
                             {text,"\fguard_test()"},
                             {sep,[{text,[1,44]}],0,false},
                             {text,
                              [15,115,119,105,116,99,104,95,97,99,116,105,111,
                               110,40,41]},
                             {sep,[{text,[3,125,32,124]}],0,false},
                             {text,
                              [16,100,101,102,97,117,108,116,95,97,99,116,105,
                               111,110,40,41]}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        null,
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{sep,
                          [{text,"\rtype-template"},
                           {sep,[{text,"\ftemplate() ="}],0,false},
                           {text,[6,116,114,101,101,40,41]},
                           {sep,[{text,[3,124,32,123]}],0,false},
                           {text,[4,105,100,40,41]},
                           {sep,[{text,[7,125,32,124,32,123,42,44]}],0,false},
                           {text,[4,105,100,40,41]},
                           {sep,
                            [{text,"!} | {template, atom(), term(), [["}],
                            0,false},
                           {text,"\ntemplate()"},
                           {sep,[{text,[3,93,93,125]}],0,false}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      null,
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{sep,
                        [{text,
                          [26,116,121,112,101,45,116,101,109,112,108,97,116,
                           101,95,111,114,95,116,101,109,112,108,97,116,101,
                           115]},
                         {sep,
                          [{text,
                            [25,116,101,109,112,108,97,116,101,95,111,114,95,
                             116,101,109,112,108,97,116,101,115,40,41,32,61]}],
                          0,false},
                         {text,"\ntemplate()"},
                         {sep,[{text,[3,124,32,91]}],0,false},
                         {text,"\ntemplate()"},
                         {sep,[{text,[1,93]}],0,false}],
                        0,false}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{sep,
                      [{text,"\ttype-text"},
                       {sep,
                        [{text,
                          "6text() = string() | binary() | [string()] | [binary()]"}],
                        0,false}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{text,"\ttype-tree"},
                     {sep,[{text,"\btree() ="}],0,false},
                     {text,
                      [23,101,114,108,95,115,121,110,116,97,120,58,115,121,
                       110,116,97,120,84,114,101,101,40,41]}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{sep,
                  [{text,
                    [18,116,121,112,101,45,116,114,101,101,95,111,114,95,116,
                     114,101,101,115]},
                   {sep,
                    [{text,
                      [17,116,114,101,101,95,111,114,95,116,114,101,101,115,
                       40,41,32,61]}],
                    0,false},
                   {text,[6,116,114,101,101,40,41]},
                   {sep,[{text,[3,124,32,91]}],0,false},
                   {text,[6,116,114,101,101,40,41]},
                   {sep,[{text,[1,93]}],0,false}],
                  0,false}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\ralpha(Trees::"}],0,false},
           {sep,
            [{text,
              [21,112,97,116,116,101,114,110,95,111,114,95,112,97,116,116,101,
               114,110,115,40,41]}],
            0,false},
           {sep,[{text,"\t, Env::[{"}],0,false},
           {sep,[{text,[4,105,100,40,41]}],0,false},
           {sep,[{text,[1,44]}],0,false},
           {sep,[{text,[4,105,100,40,41]}],0,false},
           {sep,[{text,[5,125,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [23,116,101,109,112,108,97,116,101,95,111,114,95,116,101,109,
               112,108,97,116,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Alpha converts a pattern (renames variables)."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,97,108,112,104,97,45,50,34,62,97,108,
        112,104,97,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "pAlpha converts a pattern (renames variables). Similar to tsubst/1, but only renames variables (including globs)."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,116,115,117,98,115,116,47,50,93,40,35,116,115,117,98,115,
               116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\e## compile(Code) -> term()\n"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text," Equivalent to compile(Code, [])."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"compile-1\">compile-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [31,91,99,111,109,112,105,108,101,40,67,111,100,101,44,32,91,93,
               41,93,40,35,99,111,109,112,105,108,101,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"$## compile(Code, Options) -> term()\n"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "^Compile a syntax tree or list of syntax trees representing a module into a binary BEAM object."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"compile-2\">compile-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "^Compile a syntax tree or list of syntax trees representing a module into a binary BEAM object."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,99,111,109,112,105,108,101,47,49,93,40,35,99,111,109,112,
               105,108,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[compile_and_load/2](#compile_and_load-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"$## compile_and_load(Code) -> term()\n"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Equivalent to compile_and_load(Code, [])."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"compile_and_load-1\">compile_and_load-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"1[compile_and_load(Code, [])](#compile_and_load-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"-## compile_and_load(Code, Options) -> term()\n"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "nCompile a syntax tree or list of syntax trees representing a module and load the resulting module into memory."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"compile_and_load-2\">compile_and_load-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "nCompile a syntax tree or list of syntax trees representing a module and load the resulting module into memory."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,99,111,109,112,105,108,101,47,50,93,40,35,99,111,109,112,
               105,108,101,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[compile_and_load/1](#compile_and_load-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,109,97,116,99,104,40,80,97,116,116,101,114,110,115,58,58]}],
            0,false},
           {sep,
            [{text,
              [21,112,97,116,116,101,114,110,95,111,114,95,112,97,116,116,101,
               114,110,115,40,41]}],
            0,false},
           {sep,[{text,"\t, Trees::"}],0,false},
           {sep,
            [{text,
              [15,116,114,101,101,95,111,114,95,116,114,101,101,115,40,41]}],
            0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[6,62,32,123,111,107,44]}],0,false},
           {sep,[{text,[5,101,110,118,40,41]}],0,false},
           {sep,[{text,"\t} | error"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "¯Match a pattern against a syntax tree (or patterns against syntax trees) returning an environment mapping variable names to subtrees; the environment is always sorted on keys."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,109,97,116,99,104,45,50,34,62,109,97,
        116,99,104,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [274,77,97,116,99,104,32,97,32,112,97,116,116,101,114,110,32,97,
               103,97,105,110,115,116,32,97,32,115,121,110,116,97,120,32,116,
               114,101,101,32,40,111,114,32,112,97,116,116,101,114,110,115,32,
               97,103,97,105,110,115,116,32,115,121,110,116,97,120,32,116,114,
               101,101,115,41,32,114,101,116,117,114,110,105,110,103,32,97,
               110,32,101,110,118,105,114,111,110,109,101,110,116,32,109,97,
               112,112,105,110,103,32,118,97,114,105,97,98,108,101,32,110,97,
               109,101,115,32,116,111,32,115,117,98,116,114,101,101,115,59,32,
               116,104,101,32,101,110,118,105,114,111,110,109,101,110,116,32,
               105,115,32,97,108,119,97,121,115,32,115,111,114,116,101,100,32,
               111,110,32,107,101,121,115,46,32,78,111,116,101,32,116,104,97,
               116,32,109,117,108,116,105,112,108,101,32,111,99,99,117,114,
               114,101,110,99,101,115,32,111,102,32,109,101,116,97,118,97,114,
               105,97,98,108,101,115,32,105,110,32,116,104,101,32,112,97,116,
               116,101,114,110,32,105,115,32,110,111,116,32,97,108,108,111,
               119,101,100,44,32,98,117,116,32,105,115,32,110,111,116,32,99,
               104,101,99,107,101,100,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,115,119,105,116,99,104,47,50,93,40,35,115,119,105,116,99,
               104,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,116,101,109,112,108,97,116,101,47,49,93,40,35,116,101,
               109,112,108,97,116,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,109,101,116,97,95,116,101,109,112,108,97,116,101,40,84,101,
               109,112,108,97,116,101,115,58,58]}],
            0,false},
           {sep,
            [{text,
              [23,116,101,109,112,108,97,116,101,95,111,114,95,116,101,109,
               112,108,97,116,101,115,40,41]}],
            0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [15,116,114,101,101,95,111,114,95,116,114,101,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "=Turn a template into a syntax tree representing the template."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"meta_template-1\">meta_template-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "çTurn a template into a syntax tree representing the template. Meta-variables in the template are turned into normal Erlang variables if their names (after the metavariable prefix characters) begin with an uppercase character. E.g.,"}],
              0,false},
             {text,[7,42,95,64,70,111,111,42]},
             {sep,[{text,"$in the template becomes the variable"}],0,false},
             {text,[5,42,70,111,111,42]},
             {sep,
              [{text,
                "8in the meta-template. Furthermore, variables ending with"}],
              0,false},
             {text,[3,42,64,42]},
             {sep,
              [{text,
                ";are automatically wrapped in a call to merl:term/1, so e.g."}],
              0,false},
             {text,"0*_@Foo@ in the template becomes `merl:term(Foo)*"},
             {sep,
              [{text,
                [21,105,110,32,116,104,101,32,109,101,116,97,45,116,101,109,
                 112,108,97,116,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [23,35,35,32,112,114,105,110,116,40,84,115,41,32,45,62,32,116,101,114,
         109,40,41,10]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ">Pretty-print a syntax tree or template to the standard output."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,112,114,105,110,116,45,49,34,62,112,
        114,105,110,116,45,49,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "xPretty-print a syntax tree or template to the standard output. This is a utility function for development and debugging."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\rqquote(Text::"}],0,false},
           {sep,[{text,[6,116,101,120,116,40,41]}],0,false},
           {sep,[{text,[7,44,32,69,110,118,58,58]}],0,false},
           {sep,[{text,[5,101,110,118,40,41]}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [15,116,114,101,101,95,111,114,95,116,114,101,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Parse text and substitute meta-variables."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [31,60,97,32,110,97,109,101,61,34,113,113,117,111,116,101,45,50,34,62,
        113,113,117,111,116,101,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,")Parse text and substitute meta-variables."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,113,113,117,111,116,101,40,83,116,97,114,116,80,111,115,58,
               58]}],
            0,false},
           {sep,[{text,"\nlocation()"}],0,false},
           {sep,[{text,"\b, Text::"}],0,false},
           {sep,[{text,[6,116,101,120,116,40,41]}],0,false},
           {sep,[{text,[7,44,32,69,110,118,58,58]}],0,false},
           {sep,[{text,[5,101,110,118,40,41]}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [15,116,114,101,101,95,111,114,95,116,114,101,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Parse text and substitute meta-variables."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [31,60,97,32,110,97,109,101,61,34,113,113,117,111,116,101,45,51,34,62,
        113,113,117,111,116,101,45,51,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "gParse text and substitute meta-variables. Takes an initial scanner starting position as first argument."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tThe macro"}],0,false},
             {text,[15,42,63,81,40,84,101,120,116,44,32,69,110,118,41,42]},
             {sep,[{text,"\nexpands to"}],0,false},
             {text,
              [31,42,109,101,114,108,58,113,113,117,111,116,101,40,63,76,73,
               78,69,44,32,84,101,120,116,44,32,69,110,118,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,113,117,111,116,101,47,50,93,40,35,113,117,111,116,101,
               45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\fquote(Text::"}],0,false},
           {sep,[{text,[6,116,101,120,116,40,41]}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [15,116,114,101,101,95,111,114,95,116,114,101,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{sep,[{sep,[{text,"\vParse text."}],0,false}],0,true},null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,113,117,111,116,101,45,49,34,62,113,
        117,111,116,101,45,49,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\vParse text."}],0,false}],0,true},null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,113,117,111,116,101,40,83,116,97,114,116,80,111,115,58,58]}],
            0,false},
           {sep,[{text,"\nlocation()"}],0,false},
           {sep,[{text,"\b, Text::"}],0,false},
           {sep,[{text,[6,116,101,120,116,40,41]}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [15,116,114,101,101,95,111,114,95,116,114,101,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{sep,[{sep,[{text,"\vParse text."}],0,false}],0,true},null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,113,117,111,116,101,45,50,34,62,113,
        117,111,116,101,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "IParse text. Takes an initial scanner starting position as first argument."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tThe macro"}],0,false},
             {text,"\n*?Q(Text)*"},
             {sep,[{text,"\nexpands to"}],0,false},
             {text,
              [30,42,109,101,114,108,58,113,117,111,116,101,40,63,76,73,78,69,
               44,32,84,101,120,116,44,32,69,110,118,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,113,117,111,116,101,47,49,93,40,35,113,117,111,116,101,
               45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [22,35,35,32,115,104,111,119,40,84,115,41,32,45,62,32,116,101,114,109,
         40,41,10]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "HPrint the structure of a syntax tree or template to the standard output."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"show-1\">show-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [130,80,114,105,110,116,32,116,104,101,32,115,116,114,117,99,
               116,117,114,101,32,111,102,32,97,32,115,121,110,116,97,120,32,
               116,114,101,101,32,111,114,32,116,101,109,112,108,97,116,101,
               32,116,111,32,116,104,101,32,115,116,97,110,100,97,114,100,32,
               111,117,116,112,117,116,46,32,84,104,105,115,32,105,115,32,97,
               32,117,116,105,108,105,116,121,32,102,117,110,99,116,105,111,
               110,32,102,111,114,32,100,101,118,101,108,111,112,109,101,110,
               116,32,97,110,100,32,100,101,98,117,103,103,105,110,103,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\rsubst(Trees::"}],0,false},
           {sep,
            [{text,
              [21,112,97,116,116,101,114,110,95,111,114,95,112,97,116,116,101,
               114,110,115,40,41]}],
            0,false},
           {sep,[{text,[7,44,32,69,110,118,58,58]}],0,false},
           {sep,[{text,[5,101,110,118,40,41]}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [15,116,114,101,101,95,111,114,95,116,114,101,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "mSubstitute metavariables in a pattern or list of patterns, yielding a syntax tree or list of trees as result."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,115,117,98,115,116,45,50,34,62,115,
        117,98,115,116,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [268,83,117,98,115,116,105,116,117,116,101,32,109,101,116,97,
                 118,97,114,105,97,98,108,101,115,32,105,110,32,97,32,112,97,
                 116,116,101,114,110,32,111,114,32,108,105,115,116,32,111,102,
                 32,112,97,116,116,101,114,110,115,44,32,121,105,101,108,100,
                 105,110,103,32,97,32,115,121,110,116,97,120,32,116,114,101,
                 101,32,111,114,32,108,105,115,116,32,111,102,32,116,114,101,
                 101,115,32,97,115,32,114,101,115,117,108,116,46,32,66,111,
                 116,104,32,102,111,114,32,110,111,114,109,97,108,32,109,101,
                 116,97,118,97,114,105,97,98,108,101,115,32,97,110,100,32,103,
                 108,111,98,32,109,101,116,97,118,97,114,105,97,98,108,101,
                 115,44,32,116,104,101,32,115,117,98,115,116,105,116,117,116,
                 101,100,32,118,97,108,117,101,32,109,97,121,32,98,101,32,97,
                 32,115,105,110,103,108,101,32,101,108,101,109,101,110,116,32,
                 111,114,32,97,32,108,105,115,116,32,111,102,32,101,108,101,
                 109,101,110,116,115,46,32,70,111,114,32,101,120,97,109,112,
                 108,101,44,32,105,102,32,97,32,108,105,115,116,32,114,101,
                 112,114,101,115,101,110,116,105,110,103]}],
              0,false},
             {text,"\t*1, 2, 3*"},
             {sep,
              [{text,
                [18,105,115,32,115,117,98,115,116,105,116,117,116,101,100,32,
                 102,111,114]}],
              0,false},
             {text,[5,42,118,97,114,42]},
             {sep,[{text,"\fin either of"}],0,false},
             {text,
              [19,42,91,102,111,111,44,32,95,64,118,97,114,44,32,98,97,114,93,
               42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,
              [19,42,91,102,111,111,44,32,95,64,118,97,114,44,32,98,97,114,93,
               42]},
             {sep,
              [{text,
                [23,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115]}],
              0,false},
             {text,
              [21,42,91,102,111,111,44,32,49,44,32,50,44,32,51,44,32,98,97,
               114,93,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,115,119,105,116,99,104,40,84,114,101,101,115,58,58]}],
            0,false},
           {sep,
            [{text,
              [15,116,114,101,101,95,111,114,95,116,114,101,101,115,40,41]}],
            0,false},
           {sep,[{text,[7,44,32,67,115,58,58,91]}],0,false},
           {sep,
            [{text,
              [15,115,119,105,116,99,104,95,99,108,97,117,115,101,40,41]}],
            0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[7,62,32,97,110,121,40,41]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "DMatch against one or more clauses with patterns and optional guards."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [31,60,97,32,110,97,109,101,61,34,115,119,105,116,99,104,45,50,34,62,
        115,119,105,116,99,104,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "DMatch against one or more clauses with patterns and optional guards."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "=Note that clauses following a default action will be ignored."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,109,97,116,99,104,47,50,93,40,35,109,97,116,99,104,45,50,
               41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,116,101,109,112,108,97,116,101,40,84,114,101,101,115,58,
               58]}],
            0,false},
           {sep,
            [{text,
              [21,112,97,116,116,101,114,110,95,111,114,95,112,97,116,116,101,
               114,110,115,40,41]}],
            0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [23,116,101,109,112,108,97,116,101,95,111,114,95,116,101,109,
               112,108,97,116,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "ATurn a syntax tree or list of trees into a template or templates."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"template-1\">template-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "¢Turn a syntax tree or list of trees into a template or templates. Templates can be instantiated or matched against, and reverted back to normal syntax trees using"}],
              0,false},
             {text,
              [17,91,116,114,101,101,47,49,93,40,35,116,114,101,101,45,49,41]},
             {sep,
              [{text,
                "A. If the input is already a template, it is not modified further."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,109,97,116,99,104,47,50,93,40,35,109,97,116,99,104,45,50,
               41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [19,91,115,117,98,115,116,47,50,93,40,35,115,117,98,115,116,45,
               50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,114,101,101,47,49,93,40,35,116,114,101,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,116,101,109,112,108,97,116,101,95,118,97,114,115,40,84,101,
               109,112,108,97,116,101,58,58]}],
            0,false},
           {sep,
            [{text,
              [23,116,101,109,112,108,97,116,101,95,111,114,95,116,101,109,
               112,108,97,116,101,115,40,41]}],
            0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,[4,105,100,40,41]}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "<Return an ordered list of the metavariables in the template."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"template_vars-1\">template_vars-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "<Return an ordered list of the metavariables in the template."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,116,101,114,109,40,84,101,114,109,58,58,116,101,114,109,40,
               41,41,32,45,62]}],
            0,false},
           {sep,[{text,[6,116,114,101,101,40,41]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Create a syntax tree for a constant term."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"term-1\">term-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,")Create a syntax tree for a constant term."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,116,114,101,101,40,84,101,109,112,108,97,116,101,115,58,
               58]}],
            0,false},
           {sep,
            [{text,
              [23,116,101,109,112,108,97,116,101,95,111,114,95,116,101,109,
               112,108,97,116,101,115,40,41]}],
            0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [15,116,114,101,101,95,111,114,95,116,114,101,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Revert a template to a normal syntax tree."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"tree-1\">tree-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "VRevert a template to a normal syntax tree. Any remaining metavariables are turned into"}],
              0,false},
             {text,[3,42,64,42]},
             {sep,
              [{text,
                [18,45,112,114,101,102,105,120,101,100,32,97,116,111,109,115,
                 32,111,114]}],
              0,false},
             {text,[5,42,57,48,57,42]},
             {sep,
              [{text,
                [19,45,112,114,101,102,105,120,101,100,32,105,110,116,101,103,
                 101,114,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,116,101,109,112,108,97,116,101,47,49,93,40,35,116,101,
               109,112,108,97,116,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,116,115,117,98,115,116,40,84,114,101,101,115,58,58]}],
            0,false},
           {sep,
            [{text,
              [21,112,97,116,116,101,114,110,95,111,114,95,112,97,116,116,101,
               114,110,115,40,41]}],
            0,false},
           {sep,[{text,[7,44,32,69,110,118,58,58]}],0,false},
           {sep,[{text,[5,101,110,118,40,41]}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [23,116,101,109,112,108,97,116,101,95,111,114,95,116,101,109,
               112,108,97,116,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "MLike subst/2, but does not convert the result from a template back to a tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [31,60,97,32,110,97,109,101,61,34,116,115,117,98,115,116,45,50,34,62,
        116,115,117,98,115,116,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [135,76,105,107,101,32,115,117,98,115,116,47,50,44,32,98,117,
               116,32,100,111,101,115,32,110,111,116,32,99,111,110,118,101,
               114,116,32,116,104,101,32,114,101,115,117,108,116,32,102,114,
               111,109,32,97,32,116,101,109,112,108,97,116,101,32,98,97,99,
               107,32,116,111,32,97,32,116,114,101,101,46,32,85,115,101,102,
               117,108,32,105,102,32,121,111,117,32,119,97,110,116,32,116,111,
               32,100,111,32,109,117,108,116,105,112,108,101,32,115,101,112,
               97,114,97,116,101,32,115,117,98,115,116,105,116,117,116,105,
               111,110,115,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,115,117,98,115,116,47,50,93,40,35,115,117,98,115,116,45,
               50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,114,101,101,47,49,93,40,35,116,114,101,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,118,97,114,40,78,97,109,101,58,58,97,116,111,109,40,41,41,
               32,45,62]}],
            0,false},
           {sep,[{text,[6,116,114,101,101,40,41]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [18,67,114,101,97,116,101,32,97,32,118,97,114,105,97,98,108,101,
             46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [25,60,97,32,110,97,109,101,61,34,118,97,114,45,49,34,62,118,97,114,45,
        49,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [18,67,114,101,97,116,101,32,97,32,118,97,114,105,97,98,108,101,
               46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t# Authors"},null},null}},
   {sep,
    [{sep,
      [{sep,
        [{text,
          [16,82,105,99,104,97,114,100,32,67,97,114,108,115,115,111,110]}],
        0,false}],
      0,false},
     {sep,
      [{sep,
        [{text,
          [26,99,97,114,108,115,115,111,110,46,114,105,99,104,97,114,100,64,
           103,109,97,105,108,46,99,111,109]}],
        0,false}],
      0,false}],
    0,false}],
  0,false}}
