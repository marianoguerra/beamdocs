{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f# epp_dodger"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f# epp_dodger"},null},null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,".epp_dodger - bypasses the Erlang preprocessor."}],
           0,false}],
         0,true},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,"\f*epp_dodger*"},
                  {sep,
                   [{text,"#- bypasses the Erlang preprocessor."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "Ã“This module tokenises and parses most Erlang source code without expanding preprocessor directives and macro applications, as long as these are syntactically \"well-behaved\". Because the normal parse trees of the"}],
                   0,false},
                  {text,"\v*erl_parse*"},
                  {sep,
                   [{text,
                     "\\module cannot represent these things (normally, they are expanded by the Erlang preprocessor"}],
                   0,false},
                  {text,
                   [15,91,101,112,112,40,51,41,93,40,46,47,101,112,112,41]},
                  {sep,
                   [{text,
                     "Kbefore the parser sees them), an extended syntax tree is created, using the"}],
                   0,false},
                  {text,
                   [24,91,101,114,108,95,115,121,110,116,97,120,93,40,101,114,
                    108,95,115,121,110,116,97,120,41]},
                  {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r## DATA TYPES"},null},null}},
     {text,
      [25,60,97,32,110,97,109,101,61,34,116,121,112,101,115,34,62,116,121,112,
       101,115,60,47,97,62]},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,116,62]},
              {sep,
               [{sep,
                 [{text,
                   [14,116,121,112,101,45,101,114,114,111,114,105,110,102,
                    111]},
                  {sep,
                   [{text,
                     "Herrorinfo() = {ErrorLine::integer(), Module::atom(), Descriptor::term()}"}],
                   0,false}],
                 0,false}],
               0,false},
              {text,[5,60,47,100,116,62]}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [null,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          ";This is a so-called Erlang I/O ErrorInfo structure; see the"}],
                        0,false},
                       {text,[5,105,111,40,51,41]},
                       {sep,
                        [{text,
                          [19,109,111,100,117,108,101,32,102,111,114,32,100,
                           101,116,97,105,108,115,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,"-parse(Dev::IODevice) -> {ok, Forms} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,[1,125]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Equivalent to parse(IODevice, 1)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,112,97,114,115,101,45,49,34,62,112,
        97,114,115,101,45,49,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [30,91,112,97,114,115,101,40,73,79,68,101,118,105,99,101,44,32,
               49,41,93,40,35,112,97,114,115,101,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              ";parse(Dev::IODevice, L::StartLine) -> {ok, Forms} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,[1,125]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Equivalent to parse(IODevice, StartLine, [])."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[16,73,79,68,101,118,105,99,101,32,61,32,112,105,100,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [21,83,116,97,114,116,76,105,110,101,32,61,32,105,110,116,101,103,
            101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\tForms = ["}],0,false},
           {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"},
           {sep,[{text,[1,93]}],0,false}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,112,97,114,115,101,45,50,34,62,112,
        97,114,115,101,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"*[parse(IODevice, StartLine, [])](#parse-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,112,97,114,115,101,47,49,93,40,35,112,97,114,115,101,45,
               49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              "Eparse(Dev::IODevice, L0::StartLine, Options) -> {ok, Forms} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,[1,125]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Reads and parses program text from an I/O stream."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[16,73,79,68,101,118,105,99,101,32,61,32,112,105,100,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [21,83,116,97,114,116,76,105,110,101,32,61,32,105,110,116,101,103,
             101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,79,112,116,105,111,110,115,32,61,32,91,116,101,114,109,40,41,
            93]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\tForms = ["}],0,false},
           {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"},
           {sep,[{text,[1,93]}],0,false}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,112,97,114,115,101,45,51,34,62,112,
        97,114,115,101,45,51,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "JReads and parses program text from an I/O stream. Characters are read from"}],
              0,false},
             {text,"\n*IODevice*"},
             {sep,
              [{text,
                "Duntil end-of-file; apart from this, the behaviour is the same as for"}],
              0,false},
             {text,
              [29,91,112,97,114,115,101,95,102,105,108,101,47,50,93,40,35,112,
               97,114,115,101,95,102,105,108,101,45,50,41]},
             {sep,[{text,[1,46]}],0,false},
             {text,"\v*StartLine*"},
             {sep,
              [{text,
                "?is the initial line number, which should be a positive integer."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,112,97,114,115,101,47,50,93,40,35,112,97,114,115,101,45,
               50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,112,97,114,115,101,95,102,105,108,101,47,50,93,40,35,112,
               97,114,115,101,95,102,105,108,101,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,112,97,114,115,101,95,102,111,114,109,47,50,93,40,35,112,
               97,114,115,101,95,102,111,114,109,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,113,117,105,99,107,95,112,97,114,115,101,47,51,93,40,35,
               113,117,105,99,107,95,112,97,114,115,101,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,")parse_file(File) -> {ok, Forms} | {error,"}],0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,[1,125]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Equivalent to parse_file(File, [])."}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[6,70,105,108,101,32,61]}],0,false},
           {text,"'[file:filename()](./file#type-filename)"}],
          0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\tForms = ["}],0,false},
           {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"},
           {sep,[{text,[1,93]}],0,false}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,"'<a name=\"parse_file-1\">parse_file-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"%[parse_file(File, [])](#parse_file-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,"2parse_file(File, Options) -> {ok, Forms} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,[1,125]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [24,82,101,97,100,115,32,97,110,100,32,112,97,114,115,101,115,32,
             97,32,102,105,108,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,[{text,[6,70,105,108,101,32,61]}],0,false},
            {text,"'[file:filename()](./file#type-filename)"}],
           0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,79,112,116,105,111,110,115,32,61,32,91,116,101,114,109,40,41,
            93]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\tForms = ["}],0,false},
           {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"},
           {sep,[{text,[1,93]}],0,false}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,"'<a name=\"parse_file-2\">parse_file-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'Reads and parses a file. If successful,"}],0,false},
             {text,"\r*{ok, Forms}*"},
             {sep,
              [{text,
                [18,105,115,32,114,101,116,117,114,110,101,100,44,32,119,104,
                 101,114,101]}],
              0,false},
             {text,[7,42,70,111,114,109,115,42]},
             {sep,
              [{text,
                "Tis a list of abstract syntax trees representing the \"program forms\" of the file (cf."}],
              0,false},
             {text,
              [22,42,101,114,108,95,115,121,110,116,97,120,58,105,115,95,102,
               111,114,109,47,49,42]},
             {sep,[{text,"\r). Otherwise,"}],0,false},
             {text,
              [22,42,123,101,114,114,111,114,44,32,101,114,114,111,114,105,
               110,102,111,40,41,125,42]},
             {sep,
              [{text,
                "Â¸is returned, typically if the file could not be opened. Note that parse errors show up as error markers in the returned list of forms; they do not cause this function to fail or return"}],
              0,false},
             {text,
              [22,42,123,101,114,114,111,114,44,32,101,114,114,111,114,105,
               110,102,111,40,41,125,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\bOptions:"}],0,false}],0,true},null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{text,
                    [20,123,110,111,95,102,97,105,108,44,32,98,111,111,108,
                     101,97,110,40,41,125]}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,[{text,[2,73,102]}],0,false},
                        {text,[4,116,114,117,101]},
                        {sep,[{text,"\f, this makes"}],0,false},
                        {text,"\nepp_dodger"},
                        {sep,
                         [{text,
                           "Ereplace any program forms that could not be parsed with nodes of type"}],
                         0,false},
                        {text,[4,116,101,120,116]},
                        {sep,[{text,[4,40,115,101,101]}],0,false},
                        {text,
                         [17,101,114,108,95,115,121,110,116,97,120,58,116,101,
                          120,116,47,49]},
                        {sep,
                         [{text,
                           "l), representing the raw token sequence of the form, instead of reporting a parse error. The default value is"}],
                         0,false},
                        {text,[5,102,97,108,115,101]},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,
                   [19,123,99,108,101,118,101,114,44,32,98,111,111,108,101,97,
                    110,40,41,125]}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,[{text,"\tIf set to"}],0,false},
                      {text,[4,116,114,117,101]},
                      {sep,[{text,"\f, this makes"}],0,false},
                      {text,"\nepp_dodger"},
                      {sep,
                       [{text,
                         "ytry to repair the source code as it seems fit, in certain cases where parsing would otherwise fail. Currently, it inserts"}],
                       0,false},
                      {text,[2,43,43]},
                      {sep,
                       [{text,
                         "r-operators between string literals and macros where it looks like concatenation was intended. The default value is"}],
                       0,false},
                      {text,[5,102,97,108,115,101]},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{sep,[null],0,true},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,112,97,114,115,101,47,50,93,40,35,112,97,114,115,101,45,
               50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[quick_parse_file/1](#quick_parse_file-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,".[erl_syntax:is_form/1](./erl_syntax#is_form-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              "Xparse_form(Dev::IODevice, L0::StartLine) -> {ok, Form, LineNo} | {eof, LineNo} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,"\t, LineNo}"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Equivalent to parse_form(IODevice, StartLine, [])."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[16,73,79,68,101,118,105,99,101,32,61,32,112,105,100,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [21,83,116,97,114,116,76,105,110,101,32,61,32,105,110,116,101,103,
             101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,[{text,[6,70,111,114,109,32,61]}],0,false},
            {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,76,105,110,101,78,111,32,61,32,105,110,116,101,103,101,114,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,"'<a name=\"parse_form-2\">parse_form-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"4[parse_form(IODevice, StartLine, [])](#parse_form-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[quick_parse_form/2](#quick_parse_form-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              "aparse_form(Dev::IODevice, L0::StartLine, Options) -> {ok, Form, LineNo} | {eof, LineNo} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,"\t, LineNo}"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Reads and parses a single program form from an I/O stream."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [16,73,79,68,101,118,105,99,101,32,61,32,112,105,100,40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [21,83,116,97,114,116,76,105,110,101,32,61,32,105,110,116,101,
              103,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,79,112,116,105,111,110,115,32,61,32,91,116,101,114,109,40,41,
             93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,[{text,[6,70,111,114,109,32,61]}],0,false},
            {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,76,105,110,101,78,111,32,61,32,105,110,116,101,103,101,114,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,"'<a name=\"parse_form-3\">parse_form-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "SReads and parses a single program form from an I/O stream. Characters are read from"}],
              0,false},
             {text,"\n*IODevice*"},
             {sep,
              [{text,
                [156,117,110,116,105,108,32,97,110,32,101,110,100,45,111,102,
                 45,102,111,114,109,32,109,97,114,107,101,114,32,105,115,32,
                 102,111,117,110,100,32,40,97,32,112,101,114,105,111,100,32,
                 99,104,97,114,97,99,116,101,114,32,102,111,108,108,111,119,
                 101,100,32,98,121,32,119,104,105,116,101,115,112,97,99,101,
                 41,44,32,111,114,32,117,110,116,105,108,32,101,110,100,45,
                 111,102,45,102,105,108,101,59,32,97,112,97,114,116,32,102,
                 114,111,109,32,116,104,105,115,44,32,116,104,101,32,98,101,
                 104,97,118,105,111,117,114,32,105,115,32,115,105,109,105,108,
                 97,114,32,116,111,32,116,104,97,116,32,111,102]}],
              0,false},
             {text,"\t*parse/3*"},
             {sep,
              [{text,
                "M, except that the return values also contain the final line number given that"}],
              0,false},
             {text,"\v*StartLine*"},
             {sep,[{text,"$is the initial line number, and that"}],0,false},
             {text,[15,42,123,101,111,102,44,32,76,105,110,101,78,111,125,42]},
             {sep,
              [{text,
                [16,109,97,121,32,98,101,32,114,101,116,117,114,110,101,100,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,112,97,114,115,101,47,51,93,40,35,112,97,114,115,101,45,
               51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,112,97,114,115,101,95,102,111,114,109,47,50,93,40,35,112,
               97,114,115,101,95,102,111,114,109,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[quick_parse_form/3](#quick_parse_form-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,"3quick_parse(Dev::IODevice) -> {ok, Forms} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,[1,125]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"'Equivalent to quick_parse(IODevice, 1)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"quick_parse-1\">quick_parse-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"*[quick_parse(IODevice, 1)](#quick_parse-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              "Aquick_parse(Dev::IODevice, L::StartLine) -> {ok, Forms} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,[1,125]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Equivalent to quick_parse(IODevice, StartLine, [])."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[16,73,79,68,101,118,105,99,101,32,61,32,112,105,100,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [21,83,116,97,114,116,76,105,110,101,32,61,32,105,110,116,101,103,
            101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\tForms = ["}],0,false},
           {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"},
           {sep,[{text,[1,93]}],0,false}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,")<a name=\"quick_parse-2\">quick_parse-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"6[quick_parse(IODevice, StartLine, [])](#quick_parse-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,113,117,105,99,107,95,112,97,114,115,101,47,49,93,40,35,
               113,117,105,99,107,95,112,97,114,115,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              "Kquick_parse(Dev::IODevice, L0::StartLine, Options) -> {ok, Forms} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,[1,125]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "KSimilar to parse/3, but does a more quick-and-dirty processing of the code."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[16,73,79,68,101,118,105,99,101,32,61,32,112,105,100,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [21,83,116,97,114,116,76,105,110,101,32,61,32,105,110,116,101,103,
             101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,79,112,116,105,111,110,115,32,61,32,91,116,101,114,109,40,41,
            93]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\tForms = ["}],0,false},
           {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"},
           {sep,[{text,[1,93]}],0,false}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,")<a name=\"quick_parse-3\">quick_parse-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nSimilar to"}],0,false},
             {text,
              [19,91,112,97,114,115,101,47,51,93,40,35,112,97,114,115,101,45,
               51,41]},
             {sep,
              [{text,
                "=, but does a more quick-and-dirty processing of the code. See"}],
              0,false},
             {text,")[quick_parse_file/2](#quick_parse_file-2)"},
             {sep,[{text,"\ffor details."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,112,97,114,115,101,47,51,93,40,35,112,97,114,115,101,45,
               51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,113,117,105,99,107,95,112,97,114,115,101,47,50,93,40,35,
               113,117,105,99,107,95,112,97,114,115,101,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[quick_parse_file/2](#quick_parse_file-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[quick_parse_form/2](#quick_parse_form-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,"/quick_parse_file(File) -> {ok, Forms} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,[1,125]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Equivalent to quick_parse_file(File, [])."}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[6,70,105,108,101,32,61]}],0,false},
           {text,"'[file:filename()](./file#type-filename)"}],
          0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\tForms = ["}],0,false},
           {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"},
           {sep,[{text,[1,93]}],0,false}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,"3<a name=\"quick_parse_file-1\">quick_parse_file-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"1[quick_parse_file(File, [])](#quick_parse_file-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              "8quick_parse_file(File, Options) -> {ok, Forms} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,[1,125]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "PSimilar to parse_file/2, but does a more quick-and-dirty processing of the code."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,[{text,[6,70,105,108,101,32,61]}],0,false},
            {text,"'[file:filename()](./file#type-filename)"}],
           0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,79,112,116,105,111,110,115,32,61,32,91,116,101,114,109,40,41,
            93]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\tForms = ["}],0,false},
           {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"},
           {sep,[{text,[1,93]}],0,false}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,"3<a name=\"quick_parse_file-2\">quick_parse_file-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nSimilar to"}],0,false},
             {text,
              [29,91,112,97,114,115,101,95,102,105,108,101,47,50,93,40,35,112,
               97,114,115,101,95,102,105,108,101,45,50,41]},
             {sep,
              [{text,
                [373,44,32,98,117,116,32,100,111,101,115,32,97,32,109,111,114,
                 101,32,113,117,105,99,107,45,97,110,100,45,100,105,114,116,
                 121,32,112,114,111,99,101,115,115,105,110,103,32,111,102,32,
                 116,104,101,32,99,111,100,101,46,32,77,97,99,114,111,32,100,
                 101,102,105,110,105,116,105,111,110,115,32,97,110,100,32,111,
                 116,104,101,114,32,112,114,101,112,114,111,99,101,115,115,
                 111,114,32,100,105,114,101,99,116,105,118,101,115,32,97,114,
                 101,32,100,105,115,99,97,114,100,101,100,44,32,97,110,100,32,
                 97,108,108,32,109,97,99,114,111,32,99,97,108,108,115,32,97,
                 114,101,32,114,101,112,108,97,99,101,100,32,119,105,116,104,
                 32,97,116,111,109,115,46,32,84,104,105,115,32,105,115,32,117,
                 115,101,102,117,108,32,119,104,101,110,32,111,110,108,121,32,
                 116,104,101,32,109,97,105,110,32,115,116,114,117,99,116,117,
                 114,101,32,111,102,32,116,104,101,32,99,111,100,101,32,105,
                 115,32,111,102,32,105,110,116,101,114,101,115,116,44,32,97,
                 110,100,32,110,111,116,32,116,104,101,32,100,101,116,97,105,
                 108,115,46,32,70,117,114,116,104,101,114,109,111,114,101,44,
                 32,116,104,101,32,113,117,105,99,107,45,112,97,114,115,101,
                 32,109,101,116,104,111,100,32,99,97,110,32,117,115,117,97,
                 108,108,121,32,104,97,110,100,108,101,32,109,111,114,101,32,
                 115,116,114,97,110,103,101,32,99,97,115,101,115,32,116,104,
                 97,110,32,116,104,101,32,110,111,114,109,97,108,44,32,109,
                 111,114,101,32,101,120,97,99,116,32,112,97,114,115,105,110,
                 103,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\fOptions: see"}],0,false},
             {text,
              [29,91,112,97,114,115,101,95,102,105,108,101,47,50,93,40,35,112,
               97,114,115,101,95,102,105,108,101,45,50,41]},
             {sep,
              [{text,
                [23,46,32,78,111,116,101,32,104,111,119,101,118,101,114,32,
                 116,104,97,116,32,102,111,114]}],
              0,false},
             {text,
              [20,42,113,117,105,99,107,95,112,97,114,115,101,95,102,105,108,
               101,47,50,42]},
             {sep,[{text,"\f, the option"}],0,false},
             {text,"\t*no_fail*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,"\vby default."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,112,97,114,115,101,95,102,105,108,101,47,50,93,40,35,112,
               97,114,115,101,95,102,105,108,101,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,113,117,105,99,107,95,112,97,114,115,101,47,50,93,40,35,
               113,117,105,99,107,95,112,97,114,115,101,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              "^quick_parse_form(Dev::IODevice, L0::StartLine) -> {ok, Form, LineNo} | {eof, LineNo} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,"\t, LineNo}"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Equivalent to quick_parse_form(IODevice, StartLine, [])."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[16,73,79,68,101,118,105,99,101,32,61,32,112,105,100,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [21,83,116,97,114,116,76,105,110,101,32,61,32,105,110,116,101,103,
             101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,[{text,[6,70,111,114,109,32,61]}],0,false},
            {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"},
            {sep,[{text,[6,124,32,110,111,110,101]}],0,false}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,76,105,110,101,78,111,32,61,32,105,110,116,101,103,101,114,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,"3<a name=\"quick_parse_form-2\">quick_parse_form-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              "@[quick_parse_form(IODevice, StartLine, [])](#quick_parse_form-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,112,97,114,115,101,95,102,111,114,109,47,50,93,40,35,112,
               97,114,115,101,95,102,111,114,109,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              "gquick_parse_form(Dev::IODevice, L0::StartLine, Options) -> {ok, Form, LineNo} | {eof, LineNo} | {error,"}],
            0,false},
           {sep,[{text,"\verrorinfo()"}],0,false},
           {sep,[{text,"\t, LineNo}"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "PSimilar to parse_form/3, but does a more quick-and-dirty processing of the code."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [16,73,79,68,101,118,105,99,101,32,61,32,112,105,100,40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [21,83,116,97,114,116,76,105,110,101,32,61,32,105,110,116,101,
              103,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,79,112,116,105,111,110,115,32,61,32,91,116,101,114,109,40,41,
             93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,[{text,[6,70,111,114,109,32,61]}],0,false},
            {text,"7[erl_syntax:syntaxTree()](./erl_syntax#type-syntaxTree)"}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,76,105,110,101,78,111,32,61,32,105,110,116,101,103,101,114,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,"3<a name=\"quick_parse_form-3\">quick_parse_form-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nSimilar to"}],0,false},
             {text,
              [29,91,112,97,114,115,101,95,102,111,114,109,47,51,93,40,35,112,
               97,114,115,101,95,102,111,114,109,45,51,41]},
             {sep,
              [{text,
                "=, but does a more quick-and-dirty processing of the code. See"}],
              0,false},
             {text,")[quick_parse_file/2](#quick_parse_file-2)"},
             {sep,[{text,"\ffor details."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,112,97,114,115,101,47,51,93,40,35,112,97,114,115,101,45,
               51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,112,97,114,115,101,95,102,111,114,109,47,51,93,40,35,112,
               97,114,115,101,95,102,111,114,109,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[quick_parse_form/2](#quick_parse_form-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"1## tokens_to_string(Tokens::[term()]) -> string()"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "=Generates a string corresponding to the given token sequence."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"tokens_to_string-1\">tokens_to_string-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [128,71,101,110,101,114,97,116,101,115,32,97,32,115,116,114,105,
               110,103,32,99,111,114,114,101,115,112,111,110,100,105,110,103,
               32,116,111,32,116,104,101,32,103,105,118,101,110,32,116,111,
               107,101,110,32,115,101,113,117,101,110,99,101,46,32,84,104,101,
               32,115,116,114,105,110,103,32,99,97,110,32,98,101,32,114,101,
               45,116,111,107,101,110,105,122,101,100,32,116,111,32,121,105,
               101,108,100,32,116,104,101,32,115,97,109,101,32,116,111,107,
               101,110,32,108,105,115,116,32,97,103,97,105,110,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t# Authors"},null},null}},
   {sep,
    [{sep,
      [{sep,
        [{text,
          [16,82,105,99,104,97,114,100,32,67,97,114,108,115,115,111,110]}],
        0,false}],
      0,false},
     {sep,
      [{sep,
        [{text,
          [26,99,97,114,108,115,115,111,110,46,114,105,99,104,97,114,100,64,
           103,109,97,105,108,46,99,111,109]}],
        0,false}],
      0,false}],
    0,false}],
  0,false}}
