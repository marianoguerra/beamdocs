{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[16,35,32,101,114,108,95,115,121,110,116,97,120,95,108,105,98]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[16,35,32,101,114,108,95,115,121,110,116,97,120,95,108,105,98]},
         null},
        null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"1Support library for abstract Erlang syntax trees."}],
           0,false}],
         0,true},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,"1Support library for abstract Erlang syntax trees."}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "dThis module contains utility functions for working with the abstract data type defined in the module"}],
                   0,false},
                  {text,
                   [24,91,101,114,108,95,115,121,110,116,97,120,93,40,101,114,
                    108,95,115,121,110,116,97,120,41]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r## DATA TYPES"},null},null}},
     {text,
      [25,60,97,32,110,97,109,101,61,34,116,121,112,101,115,34,62,116,121,112,
       101,115,60,47,97,62]},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{sep,
                         [{text,
                           [14,116,121,112,101,45,105,110,102,111,95,112,97,
                            105,114]},
                          {sep,
                           [{text,
                             [15,105,110,102,111,95,112,97,105,114,40,41,32,
                              61,32,123]}],
                           0,false},
                          {text,[5,107,101,121,40,41]},
                          {sep,[{text,"\t, term()}"}],0,false}],
                         0,false}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      null,
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{sep,
                        [{text,"\btype-key"},
                         {sep,
                          [{text,
                            "Ykey() = attributes | errors | exports | functions | imports | module | records | warnings"}],
                          0,false}],
                        0,false}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{sep,
                      [{text,"\vtype-ordset"},
                       {sep,[{text,"\vordset(T) ="}],0,false},
                       {text,
                        [17,111,114,100,115,101,116,115,58,111,114,100,115,
                         101,116,40,84,41]}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{text,"\btype-set"},
                     {sep,[{text,"\bset(T) ="}],0,false},
                     {text,"\vsets:set(T)"}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{sep,
                  [{text,
                    [15,116,121,112,101,45,115,121,110,116,97,120,84,114,101,
                     101]},
                   {sep,
                    [{text,
                      [14,115,121,110,116,97,120,84,114,101,101,40,41,32,61]}],
                    0,false},
                   {text,
                    [23,101,114,108,95,115,121,110,116,97,120,58,115,121,110,
                     116,97,120,84,114,101,101,40,41]}],
                  0,false}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [null,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text," An abstract syntax tree. See the"}],
                        0,false},
                       {text,"\nerl_syntax"},
                       {sep,
                        [{text,
                          [19,109,111,100,117,108,101,32,102,111,114,32,100,
                           101,116,97,105,108,115,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,97,110,97,108,121,122,101,95,97,112,112,108,105,99,97,116,
               105,111,110,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [22,62,32,70,117,110,99,116,105,111,110,78,97,109,101,32,124,32,
               65,114,105,116,121]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Returns the name of a called function."}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           ";FunctionName = {atom(), Arity} | {ModuleName, FunctionName}"}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,65,114,105,116,121,32,61,32,105,110,116,101,103,101,114,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,77,111,100,117,108,101,78,97,109,101,32,61,32,97,116,111,109,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,"9<a name=\"analyze_application-1\">analyze_application-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "iReturns the name of a called function. The result is a representation of the name of the applied function"}],
              0,false},
             {text,[5,42,70,47,65,42]},
             {sep,[{text,[4,44,32,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"#represents a function application \""}],0,false},
             {text,"-*<em>F</em>(<em>X_1</em>, ..., <em>X_A</em>)*"},
             {sep,
              [{text,"1\". If the function is not explicitly named (i.e.,"}],
              0,false},
             {text,[3,42,70,42]},
             {sep,
              [{text,",is given by some expression), only the arity"}],
              0,false},
             {text,[3,42,65,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                "8does not represent a well-formed application expression."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"3[analyze_function_name/1](#analyze_function_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,97,110,97,108,121,122,101,95,97,116,116,114,105,98,117,116,
               101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"!> preprocessor | {atom(), atom()}"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,[{sep,[{text,"\eAnalyzes an attribute node."}],0,false}],0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"analyze_attribute-1\">analyze_attribute-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,65,110,97,108,121,122,101,115,32,97,110,32,97,116,116,114,
                 105,98,117,116,101,32,110,111,100,101,46,32,73,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,"-represents a preprocessor directive, the atom"}],
              0,false},
             {text,[14,42,112,114,101,112,114,111,99,101,115,115,111,114,42]},
             {sep,
              [{text,
                [26,105,115,32,114,101,116,117,114,110,101,100,46,32,79,116,
                 104,101,114,119,105,115,101,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [31,114,101,112,114,101,115,101,110,116,115,32,97,32,109,111,
                 100,117,108,101,32,97,116,116,114,105,98,117,116,101,32,34]}],
              0,false},
             {text,
              [19,42,45,60,101,109,62,78,97,109,101,60,47,101,109,62,46,46,46,
               42]},
             {sep,[{text,"\n\", a tuple"}],0,false},
             {text,[14,42,123,78,97,109,101,44,32,73,110,102,111,125,42]},
             {sep,
              [{text,
                [18,105,115,32,114,101,116,117,114,110,101,100,44,32,119,104,
                 101,114,101]}],
              0,false},
             {text,[6,42,73,110,102,111,42]},
             {sep,[{text,"\ndepends on"}],0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,[{text,"\r, as follows:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,
                            [14,123,109,111,100,117,108,101,44,32,73,110,102,
                             111,125]}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                                {text,
                                 "%Info = analyze_module_attribute(Node)"},
                                {sep,[{text,[1,46]}],0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [14,123,101,120,112,111,114,116,44,32,73,110,102,
                            111,125]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                              {text,"%Info = analyze_export_attribute(Node)"},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         [14,123,105,109,112,111,114,116,44,32,73,110,102,111,
                          125]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                            {text,"%Info = analyze_import_attribute(Node)"},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,"\f{file, Info}"}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                          {text,"#Info = analyze_file_attribute(Node)"},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     [14,123,114,101,99,111,114,100,44,32,73,110,102,111,
                      125]}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                        {text,"%Info = analyze_record_attribute(Node)"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,"\f{Name, Info}"}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                      {text,"+{Name, Info} = analyze_wild_attribute(Node)"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,"2does not represent a well-formed module attribute."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              "9[analyze_export_attribute/1](#analyze_export_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"5[analyze_file_attribute/1](#analyze_file_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "9[analyze_import_attribute/1](#analyze_import_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "9[analyze_module_attribute/1](#analyze_module_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "9[analyze_record_attribute/1](#analyze_record_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"5[analyze_wild_attribute/1](#analyze_wild_attribute-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [31,97,110,97,108,121,122,101,95,101,120,112,111,114,116,95,97,
               116,116,114,105,98,117,116,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [16,62,32,91,70,117,110,99,116,105,111,110,78,97,109,101,93]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "CReturns the list of function names declared by an export attribute."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "HFunctionName = atom() | {atom(), integer()} | {ModuleName, FunctionName}"}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,77,111,100,117,108,101,78,97,109,101,32,61,32,97,116,111,109,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,
       "C<a name=\"analyze_export_attribute-1\">analyze_export_attribute-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "¬Returns the list of function names declared by an export attribute. We do not guarantee that each name occurs at most once in the list. The order of listing is not defined."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,"2does not represent a well-formed export attribute."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[analyze_attribute/1](#analyze_attribute-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [29,97,110,97,108,121,122,101,95,102,105,108,101,95,97,116,116,
               114,105,98,117,116,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [23,62,32,123,115,116,114,105,110,103,40,41,44,32,105,110,116,
               101,103,101,114,40,41,125]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Returns the file name and line number of a file attribute."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"analyze_file_attribute-1\">analyze_file_attribute-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"*Returns the file name and line number of a"}],
              0,false},
             {text,[6,42,102,105,108,101,42]},
             {sep,[{text,"!attribute. The result is the pair"}],0,false},
             {text,[14,42,123,70,105,108,101,44,32,76,105,110,101,125,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [20,42,45,102,105,108,101,40,70,105,108,101,44,32,76,105,110,
               101,41,46,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text," does not represent a well-formed"}],0,false},
             {text,[6,42,102,105,108,101,42]},
             {sep,[{text,"\nattribute."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[analyze_attribute/1](#analyze_attribute-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,97,110,97,108,121,122,101,95,102,111,114,109,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\e> {atom(), term()} | atom()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Analyzes a \"source code form\" node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"analyze_form-1\">analyze_form-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"&Analyzes a \"source code form\" node. If"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [21,105,115,32,97,32,34,102,111,114,109,34,32,116,121,112,101,
                 32,40,99,102,46]}],
              0,false},
             {text,
              [22,42,101,114,108,95,115,121,110,116,97,120,58,105,115,95,102,
               111,114,109,47,49,42]},
             {sep,[{text," ), the returned value is a tuple"}],0,false},
             {text,[14,42,123,84,121,112,101,44,32,73,110,102,111,125,42]},
             {sep,[{text,[5,119,104,101,114,101]}],0,false},
             {text,[6,42,84,121,112,101,42]},
             {sep,
              [{text,
                [20,105,115,32,116,104,101,32,110,111,100,101,32,116,121,112,
                 101,32,97,110,100]}],
              0,false},
             {text,[6,42,73,110,102,111,42]},
             {sep,[{text,"\ndepends on"}],0,false},
             {text,[6,42,84,121,112,101,42]},
             {sep,[{text,"\r, as follows:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{text,
                        [17,123,97,116,116,114,105,98,117,116,101,44,32,73,
                         110,102,111,125]}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                            {text,
                             [30,73,110,102,111,32,61,32,97,110,97,108,121,
                              122,101,95,97,116,116,114,105,98,117,116,101,40,
                              78,111,100,101,41]},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [20,123,101,114,114,111,114,95,109,97,114,107,101,114,
                        44,32,73,110,102,111,125]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                          {text,")Info = erl_syntax:error_marker_info(Node)"},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     [16,123,102,117,110,99,116,105,111,110,44,32,73,110,102,
                      111,125]}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                        {text,
                         [29,73,110,102,111,32,61,32,97,110,97,108,121,122,
                          101,95,102,117,110,99,116,105,111,110,40,78,111,100,
                          101,41]},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,
                   [22,123,119,97,114,110,105,110,103,95,109,97,114,107,101,
                    114,44,32,73,110,102,111,125]}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                      {text,"+Info = erl_syntax:warning_marker_info(Node)"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "9For other types of forms, only the node type is returned."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [19,105,115,32,110,111,116,32,119,101,108,108,45,102,111,114,
                 109,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[analyze_attribute/1](#analyze_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[analyze_function/1](#analyze_function-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "B[erl_syntax:error_marker_info/1](./erl_syntax#error_marker_info-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,".[erl_syntax:is_form/1](./erl_syntax#is_form-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "F[erl_syntax:warning_marker_info/1](./erl_syntax#warning_marker_info-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"*## analyze_forms(Forms) -> [{Key, term()}]"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"'Analyzes a sequence of \"program forms\"."}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[7,70,111,114,109,115,32,61]}],0,false},
           {text," [syntaxTree()](#type-syntaxTree)"},
           {sep,[{text,[3,124,32,91]}],0,false},
           {text," [syntaxTree()](#type-syntaxTree)"},
           {sep,[{text,[1,93]}],0,false}],
          0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "WKey = attributes | errors | exports | functions | imports | module | records | warnings"}],
        0,false}],
      0,false}},
    {sep,
     [{text,"-<a name=\"analyze_forms-1\">analyze_forms-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"1Analyzes a sequence of \"program forms\". The given"}],
              0,false},
             {text,[7,42,70,111,114,109,115,42]},
             {sep,[{text,"#may be a single syntax tree of type"}],0,false},
             {text,"\v*form_list*"},
             {sep,
              [{text,
                "Q, or a list of \"program form\" syntax trees. The returned value is a list of pairs"}],
              0,false},
             {text,"\r*{Key, Info}*"},
             {sep,
              [{text,
                [21,44,32,119,104,101,114,101,32,101,97,99,104,32,118,97,108,
                 117,101,32,111,102]}],
              0,false},
             {text,[5,42,75,101,121,42]},
             {sep,
              [{text,
                "|occurs at most once in the list; the absence of a particular key indicates that there is no well-defined value for that key."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "jEach entry in the resulting list contains the following corresponding information about the program forms:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                [24,123,97,116,116,114,105,98,117,116,101,115,
                                 44,32,65,116,116,114,105,98,117,116,101,115,
                                 125]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {sep,
                              [{sep,
                                [{text,[1,42]},
                                 {sep,
                                  [{text,
                                    [31,65,116,116,114,105,98,117,116,101,115,
                                     32,61,32,91,123,97,116,111,109,40,41,44,
                                     32,116,101,114,109,40,41,125,93]}],
                                  0,false}],
                                0,false},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{text,"\nAttributes"},
                                      {sep,
                                       [{text,
                                         "pis a list of pairs representing the names and corresponding values of all so-called \"wild\" attributes (as e.g. \""}],
                                       0,false},
                                      {text,"\r-compile(...)"},
                                      {sep,
                                       [{text,
                                         [15,34,41,32,111,99,99,117,114,114,
                                          105,110,103,32,105,110]}],
                                       0,false},
                                      {text,[5,70,111,114,109,115]},
                                      {sep,[{text,[4,40,99,102,46]}],0,false},
                                      {text,
                                       [24,97,110,97,108,121,122,101,95,119,
                                        105,108,100,95,97,116,116,114,105,98,
                                        117,116,101,47,49]},
                                      {sep,
                                       [{text,
                                         "k). We do not guarantee that each name occurs at most once in the list. The order of listing is not defined."}],
                                       0,false}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}}],
                              0,false},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               [16,123,101,114,114,111,114,115,44,32,69,114,
                                114,111,114,115,125]}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {sep,
                            [{sep,
                              [{text,[1,42]},
                               {sep,
                                [{text,
                                  [17,69,114,114,111,114,115,32,61,32,91,116,
                                   101,114,109,40,41,93]}],
                                0,false}],
                              0,false},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,[6,69,114,114,111,114,115]},
                                    {sep,
                                     [{text,
                                       "'is the list of error descriptors of all"}],
                                     0,false},
                                    {text,"\ferror_marker"},
                                    {sep,
                                     [{text,
                                       [19,110,111,100,101,115,32,116,104,97,
                                        116,32,111,99,99,117,114,32,105,110]}],
                                     0,false},
                                    {text,[5,70,111,114,109,115]},
                                    {sep,
                                     [{text,
                                       "&. The order of listing is not defined."}],
                                     0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}}],
                            0,false},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,
                             [18,123,101,120,112,111,114,116,115,44,32,69,120,
                              112,111,114,116,115,125]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {sep,
                          [{above,
                            {above,
                             {sep,
                              [{text,[1,42]},
                               {sep,
                                [{text,
                                  [24,69,120,112,111,114,116,115,32,61,32,91,
                                   70,117,110,99,116,105,111,110,78,97,109,
                                   101,93]}],
                                0,false}],
                              0,false},
                             {sep,
                              [{text,[1,42]},
                               {sep,
                                [{text,
                                  "HFunctionName = atom() | {atom(), integer()} | {ModuleName, FunctionName}"}],
                                0,false}],
                              0,false}},
                            {sep,
                             [{text,[1,42]},
                              {sep,
                               [{text,
                                 [19,77,111,100,117,108,101,78,97,109,101,32,
                                  61,32,97,116,111,109,40,41]}],
                               0,false}],
                             0,false}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,[7,69,120,112,111,114,116,115]},
                                  {sep,
                                   [{text,
                                     "his a list of representations of those function names that are listed by export declaration attributes in"}],
                                   0,false},
                                  {text,[5,70,111,114,109,115]},
                                  {sep,[{text,[4,40,99,102,46]}],0,false},
                                  {text,
                                   [26,97,110,97,108,121,122,101,95,101,120,
                                    112,111,114,116,95,97,116,116,114,105,98,
                                    117,116,101,47,49]},
                                  {sep,
                                   [{text,
                                     "k). We do not guarantee that each name occurs at most once in the list. The order of listing is not defined."}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}}],
                          0,false},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [22,123,102,117,110,99,116,105,111,110,115,44,32,
                            70,117,110,99,116,105,111,110,115,125]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {sep,
                        [{sep,
                          [{text,[1,42]},
                           {sep,
                            [{text,"!Functions = [{atom(), integer()}]"}],
                            0,false}],
                          0,false},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,"\tFunctions"},
                                {sep,
                                 [{text,
                                   ";is a list of the names of the functions that are defined in"}],
                                 0,false},
                                {text,[5,70,111,114,109,115]},
                                {sep,[{text,[4,40,99,102,46]}],0,false},
                                {text,
                                 [18,97,110,97,108,121,122,101,95,102,117,110,
                                  99,116,105,111,110,47,49]},
                                {sep,
                                 [{text,
                                   "k). We do not guarantee that each name occurs at most once in the list. The order of listing is not defined."}],
                                 0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}}],
                        0,false},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         [18,123,105,109,112,111,114,116,115,44,32,73,109,112,
                          111,114,116,115,125]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {sep,
                      [{above,
                        {above,
                         {above,
                          {above,
                           {sep,
                            [{text,[1,42]},
                             {sep,
                              [{text,"\eImports = [{Module, Names}]"}],
                              0,false}],
                            0,false},
                           {sep,
                            [{text,[1,42]},
                             {sep,
                              [{text,
                                [15,77,111,100,117,108,101,32,61,32,97,116,
                                 111,109,40,41]}],
                              0,false}],
                            0,false}},
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{text,
                               [22,78,97,109,101,115,32,61,32,91,70,117,110,
                                99,116,105,111,110,78,97,109,101,93]}],
                             0,false}],
                           0,false}},
                         {sep,
                          [{text,[1,42]},
                           {sep,
                            [{text,
                              "HFunctionName = atom() | {atom(), integer()} | {ModuleName, FunctionName}"}],
                            0,false}],
                          0,false}},
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{text,
                             [19,77,111,100,117,108,101,78,97,109,101,32,61,
                              32,97,116,111,109,40,41]}],
                           0,false}],
                         0,false}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,[7,73,109,112,111,114,116,115]},
                              {sep,
                               [{text,
                                 [135,105,115,32,97,32,108,105,115,116,32,111,
                                  102,32,112,97,105,114,115,32,114,101,112,
                                  114,101,115,101,110,116,105,110,103,32,116,
                                  104,111,115,101,32,109,111,100,117,108,101,
                                  32,110,97,109,101,115,32,97,110,100,32,99,
                                  111,114,114,101,115,112,111,110,100,105,110,
                                  103,32,102,117,110,99,116,105,111,110,32,
                                  110,97,109,101,115,32,116,104,97,116,32,97,
                                  114,101,32,108,105,115,116,101,100,32,98,
                                  121,32,105,109,112,111,114,116,32,100,101,
                                  99,108,97,114,97,116,105,111,110,32,97,116,
                                  116,114,105,98,117,116,101,115,32,105,110]}],
                               0,false},
                              {text,[5,70,111,114,109,115]},
                              {sep,[{text,[4,40,99,102,46]}],0,false},
                              {text,
                               [26,97,110,97,108,121,122,101,95,105,109,112,
                                111,114,116,95,97,116,116,114,105,98,117,116,
                                101,47,49]},
                              {sep,[{text,"\r), where each"}],0,false},
                              {text,[6,77,111,100,117,108,101]},
                              {sep,
                               [{text,
                                 [22,111,99,99,117,114,115,32,97,116,32,109,
                                  111,115,116,32,111,110,99,101,32,105,110]}],
                               0,false},
                              {text,[7,73,109,112,111,114,116,115]},
                              {sep,
                               [{text,
                                 "}. We do not guarantee that each name occurs at most once in the lists of function names. The order of listing is not defined."}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}}],
                      0,false},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [20,123,109,111,100,117,108,101,44,32,77,111,100,117,
                        108,101,78,97,109,101,125]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          [19,77,111,100,117,108,101,78,97,109,101,32,61,32,
                           97,116,111,109,40,41]}],
                        0,false}],
                      0,false},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,"\nModuleName"},
                            {sep,
                             [{text,
                               "-is the name declared by a module attribute in"}],
                             0,false},
                            {text,[5,70,111,114,109,115]},
                            {sep,
                             [{text,"!. If no module name is defined in"}],
                             0,false},
                            {text,[5,70,111,114,109,115]},
                            {sep,
                             [{text,
                               "*, the result will contain no entry for the"}],
                             0,false},
                            {text,[6,109,111,100,117,108,101]},
                            {sep,
                             [{text,
                               "Zkey. If multiple module name declarations should occur, all but the first will be ignored."}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     [18,123,114,101,99,111,114,100,115,44,32,82,101,99,111,
                      114,100,115,125]}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{above,
                    {above,
                     {above,
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,
                           [28,82,101,99,111,114,100,115,32,61,32,91,123,97,
                            116,111,109,40,41,44,32,70,105,101,108,100,115,
                            125,93]}],
                         0,false}],
                       0,false},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,"$Fields = [{atom(), {Default, Type}}]"}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          [29,68,101,102,97,117,108,116,32,61,32,110,111,110,
                           101,32,124,32,115,121,110,116,97,120,84,114,101,
                           101,40,41]}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{text,
                         [26,84,121,112,101,32,61,32,110,111,110,101,32,124,
                          32,115,121,110,116,97,120,84,114,101,101,40,41]}],
                       0,false}],
                     0,false}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,[7,82,101,99,111,114,100,115]},
                          {sep,
                           [{text,
                             [128,105,115,32,97,32,108,105,115,116,32,111,102,
                              32,112,97,105,114,115,32,114,101,112,114,101,
                              115,101,110,116,105,110,103,32,116,104,101,32,
                              110,97,109,101,115,32,97,110,100,32,99,111,114,
                              114,101,115,112,111,110,100,105,110,103,32,102,
                              105,101,108,100,32,100,101,99,108,97,114,97,116,
                              105,111,110,115,32,111,102,32,97,108,108,32,114,
                              101,99,111,114,100,32,100,101,99,108,97,114,97,
                              116,105,111,110,32,97,116,116,114,105,98,117,
                              116,101,115,32,111,99,99,117,114,114,105,110,
                              103,32,105,110]}],
                           0,false},
                          {text,[5,70,111,114,109,115]},
                          {sep,
                           [{text,
                             "J. For fields declared without a default value, the corresponding value for"}],
                           0,false},
                          {text,[7,68,101,102,97,117,108,116]},
                          {sep,[{text,"\vis the atom"}],0,false},
                          {text,[4,110,111,110,101]},
                          {sep,
                           [{text,
                             "L. Similarly, for fields declared without a type, the corresponding value for"}],
                           0,false},
                          {text,[4,84,121,112,101]},
                          {sep,[{text,"\vis the atom"}],0,false},
                          {text,[4,110,111,110,101]},
                          {sep,[{text,[4,40,99,102,46]}],0,false},
                          {text,
                           [26,97,110,97,108,121,122,101,95,114,101,99,111,
                            114,100,95,97,116,116,114,105,98,117,116,101,47,
                            49]},
                          {sep,
                           [{text,
                             "r). We do not guarantee that each record name occurs at most once in the list. The order of listing is not defined."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,
                   [20,123,119,97,114,110,105,110,103,115,44,32,87,97,114,110,
                    105,110,103,115,125]}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {sep,
                [{sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      [19,87,97,114,110,105,110,103,115,32,61,32,91,116,101,
                       114,109,40,41,93]}],
                    0,false}],
                  0,false},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,"\bWarnings"},
                        {sep,
                         [{text,"'is the list of error descriptors of all"}],
                         0,false},
                        {text,
                         [14,119,97,114,110,105,110,103,95,109,97,114,107,101,
                          114]},
                        {sep,
                         [{text,
                           [19,110,111,100,101,115,32,116,104,97,116,32,111,
                            99,99,117,114,32,105,110]}],
                         0,false},
                        {text,[5,70,111,114,109,115]},
                        {sep,
                         [{text,"&. The order of listing is not defined."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,
              [{text,"1if an ill-formed Erlang construct is encountered."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              "9[analyze_export_attribute/1](#analyze_export_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[analyze_function/1](#analyze_function-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "9[analyze_import_attribute/1](#analyze_import_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "9[analyze_record_attribute/1](#analyze_record_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"5[analyze_wild_attribute/1](#analyze_wild_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "B[erl_syntax:error_marker_info/1](./erl_syntax#error_marker_info-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "F[erl_syntax:warning_marker_info/1](./erl_syntax#warning_marker_info-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,97,110,97,108,121,122,101,95,102,117,110,99,116,105,111,110,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [21,62,32,123,97,116,111,109,40,41,44,32,105,110,116,101,103,
               101,114,40,41,125]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Returns the name and arity of a function definition."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"analyze_function-1\">analyze_function-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "IReturns the name and arity of a function definition. The result is a pair"}],
              0,false},
             {text,"\v*{Name, A}*"},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\"represents a function definition \""}],0,false},
             {text,".*Name(<em>P_1</em>, ..., <em>P_A</em>) -> ...*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                "5does not represent a well-formed function definition."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [28,97,110,97,108,121,122,101,95,102,117,110,99,116,105,111,110,
               95,110,97,109,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,[14,62,32,70,117,110,99,116,105,111,110,78,97,109,101]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Returns the function name represented by a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "HFunctionName = atom() | {atom(), integer()} | {ModuleName, FunctionName}"}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,77,111,100,117,108,101,78,97,109,101,32,61,32,97,116,111,109,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,
       "=<a name=\"analyze_function_name-1\">analyze_function_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ":Returns the function name represented by a syntax tree. If"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"%represents a function name, such as \""}],0,false},
             {text,[7,42,102,111,111,47,49,42]},
             {sep,[{text,[6,34,32,111,114,32,34]}],0,false},
             {text,[15,42,98,108,111,103,103,115,58,102,114,101,100,47,50,42]},
             {sep,
              [{text,
                [155,34,44,32,97,32,117,110,105,102,111,114,109,32,114,101,
                 112,114,101,115,101,110,116,97,116,105,111,110,32,111,102,32,
                 116,104,97,116,32,110,97,109,101,32,105,115,32,114,101,116,
                 117,114,110,101,100,46,32,68,105,102,102,101,114,101,110,116,
                 32,110,101,115,116,105,110,103,115,32,111,102,32,97,114,105,
                 116,121,32,97,110,100,32,109,111,100,117,108,101,32,110,97,
                 109,101,32,113,117,97,108,105,102,105,101,114,115,32,105,110,
                 32,116,104,101,32,115,121,110,116,97,120,32,116,114,101,101,
                 32,100,111,101,115,32,110,111,116,32,97,102,102,101,99,116,
                 32,116,104,101,32,114,101,115,117,108,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,"/does not represent a well-formed function name."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\eanalyze_implicit_fun(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,[14,62,32,70,117,110,99,116,105,111,110,78,97,109,101]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "@Returns the name of an implicit fun expression \"fun <em>F</em>\"."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "HFunctionName = atom() | {atom(), integer()} | {ModuleName, FunctionName}"}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,77,111,100,117,108,101,78,97,109,101,32,61,32,97,116,111,109,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,";<a name=\"analyze_implicit_fun-1\">analyze_implicit_fun-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0Returns the name of an implicit fun expression \""}],
              0,false},
             {text,
              [16,42,102,117,110,32,60,101,109,62,70,60,47,101,109,62,42]},
             {sep,
              [{text,
                "6\". The result is a representation of the function name"}],
              0,false},
             {text,[3,42,70,42]},
             {sep,[{text,[6,46,32,40,67,102,46]}],0,false},
             {text,
              [25,42,97,110,97,108,121,122,101,95,102,117,110,99,116,105,111,
               110,95,110,97,109,101,47,49,42]},
             {sep,[{text,[2,46,41]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,".does not represent a well-formed implicit fun."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"3[analyze_function_name/1](#analyze_function_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [31,97,110,97,108,121,122,101,95,105,109,112,111,114,116,95,97,
               116,116,114,105,98,117,116,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"#> {atom(), [FunctionName]} | atom()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "`Returns the module name and (if present) list of function names declared by an import attribute."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "HFunctionName = atom() | {atom(), integer()} | {ModuleName, FunctionName}"}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,77,111,100,117,108,101,78,97,109,101,32,61,32,97,116,111,109,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,
       "C<a name=\"analyze_import_attribute-1\">analyze_import_attribute-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "~Returns the module name and (if present) list of function names declared by an import attribute. The returned value is an atom"}],
              0,false},
             {text,"\b*Module*"},
             {sep,[{text,"\tor a pair"}],0,false},
             {text,
              [17,42,123,77,111,100,117,108,101,44,32,78,97,109,101,115,125,
               42]},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[7,42,78,97,109,101,115,42]},
             {sep,
              [{text,
                "Iis a list of function names declared as imported from the module named by"}],
              0,false},
             {text,"\b*Module*"},
             {sep,
              [{text,
                ";. We do not guarantee that each name occurs at most once in"}],
              0,false},
             {text,[7,42,78,97,109,101,115,42]},
             {sep,[{text,"&. The order of listing is not defined."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,"2does not represent a well-formed import attribute."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[analyze_attribute/1](#analyze_attribute-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [31,97,110,97,108,121,122,101,95,109,111,100,117,108,101,95,97,
               116,116,114,105,98,117,116,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,"4> Name::atom() | {Name::atom(), Variables::[atom()]}"}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "OReturns the module name and possible parameters declared by a module attribute."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "C<a name=\"analyze_module_attribute-1\">analyze_module_attribute-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [134,82,101,116,117,114,110,115,32,116,104,101,32,109,111,100,
                 117,108,101,32,110,97,109,101,32,97,110,100,32,112,111,115,
                 115,105,98,108,101,32,112,97,114,97,109,101,116,101,114,115,
                 32,100,101,99,108,97,114,101,100,32,98,121,32,97,32,109,111,
                 100,117,108,101,32,97,116,116,114,105,98,117,116,101,46,32,
                 73,102,32,116,104,101,32,97,116,116,114,105,98,117,116,101,
                 32,105,115,32,97,32,112,108,97,105,110,32,109,111,100,117,
                 108,101,32,100,101,99,108,97,114,97,116,105,111,110,32,115,
                 117,99,104,32,97,115]}],
              0,false},
             {text,[15,42,45,109,111,100,117,108,101,40,110,97,109,101,41,42]},
             {sep,
              [{text,
                "µ, the result is the module name. If the attribute is a parameterized module declaration, the result is a tuple containing the module name and a list of the parameter variable names."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,"2does not represent a well-formed module attribute."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[analyze_attribute/1](#analyze_attribute-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [31,97,110,97,108,121,122,101,95,114,101,99,111,114,100,95,97,
               116,116,114,105,98,117,116,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [18,62,32,123,97,116,111,109,40,41,44,32,70,105,101,108,100,115,
               125]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "JReturns the name and the list of fields of a record declaration attribute."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,[{text,"$Fields = [{atom(), {Default, Type}}]"}],0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,
             [{text,
               [16,68,101,102,97,117,108,116,32,61,32,110,111,110,101,32,
                124]}],
             0,false},
            {text," [syntaxTree()](#type-syntaxTree)"}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\rType = none |"}],0,false},
           {text," [syntaxTree()](#type-syntaxTree)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,
       "C<a name=\"analyze_record_attribute-1\">analyze_record_attribute-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "_Returns the name and the list of fields of a record declaration attribute. The result is a pair"}],
              0,false},
             {text,
              [16,42,123,78,97,109,101,44,32,70,105,101,108,100,115,125,42]},
             {sep,[{text,[4,44,32,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [23,42,45,114,101,99,111,114,100,40,78,97,109,101,44,32,123,46,
               46,46,125,41,46,42]},
             {sep,[{text,"\b\", where"}],0,false},
             {text,"\b*Fields*"},
             {sep,
              [{text,
                [18,105,115,32,97,32,108,105,115,116,32,111,102,32,112,97,105,
                 114,115]}],
              0,false},
             {text,
              [26,42,123,76,97,98,101,108,44,32,123,68,101,102,97,117,108,116,
               44,32,84,121,112,101,125,125,42]},
             {sep,
              [{text,
                [16,102,111,114,32,101,97,99,104,32,102,105,101,108,100,32,
                 34]}],
              0,false},
             {text,[7,42,76,97,98,101,108,42]},
             {sep,[{text,[4,34,44,32,34]}],0,false},
             {text,
              [26,42,76,97,98,101,108,32,61,32,60,101,109,62,68,101,102,97,
               117,108,116,60,47,101,109,62,42]},
             {sep,[{text,[4,34,44,32,34]}],0,false},
             {text,
              [24,42,76,97,98,101,108,32,58,58,32,60,101,109,62,84,121,112,
               101,60,47,101,109,62,42]},
             {sep,[{text,[7,34,44,32,111,114,32,34]}],0,false},
             {text,"+*Label = <em>Default</em> :: <em>Type</em>*"},
             {sep,
              [{text,
                "q\" in the declaration, listed in left-to-right order. If the field has no default-value declaration, the value for"}],
              0,false},
             {text,"\t*Default*"},
             {sep,
              [{text,
                [16,119,105,108,108,32,98,101,32,116,104,101,32,97,116,111,
                 109]}],
              0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                "5. If the field has no type declaration, the value for"}],
              0,false},
             {text,[6,42,84,121,112,101,42]},
             {sep,
              [{text,
                [16,119,105,108,108,32,98,101,32,116,104,101,32,97,116,111,
                 109]}],
              0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                "F. We do not guarantee that each label occurs at most once in the list."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                ">does not represent a well-formed record declaration attribute."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[analyze_attribute/1](#analyze_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[analyze_record_field/1](#analyze_record_field-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,97,110,97,108,121,122,101,95,114,101,99,111,114,100,95,101,
               120,112,114,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [25,62,32,123,97,116,111,109,40,41,44,32,73,110,102,111,125,32,
               124,32,97,116,111,109,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "DReturns the record name and field name/names of a record expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          ">Info = {atom(), [{atom(), Value}]} | {atom(), atom()} | atom()"}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[7,86,97,108,117,101,32,61]}],0,false},
           {text," [syntaxTree()](#type-syntaxTree)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,"9<a name=\"analyze_record_expr-1\">analyze_record_expr-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GReturns the record name and field name/names of a record expression. If"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\bhas type"}],0,false},
             {text,"\r*record_expr*"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [19,42,114,101,99,111,114,100,95,105,110,100,101,120,95,101,120,
               112,114,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,[15,42,114,101,99,111,114,100,95,97,99,99,101,115,115,42]},
             {sep,[{text,"\b, a pair"}],0,false},
             {text,[14,42,123,84,121,112,101,44,32,73,110,102,111,125,42]},
             {sep,
              [{text,
                [30,105,115,32,114,101,116,117,114,110,101,100,44,32,111,116,
                 104,101,114,119,105,115,101,32,97,110,32,97,116,111,109]}],
              0,false},
             {text,[6,42,84,121,112,101,42]},
             {sep,[{text,"\fis returned."}],0,false},
             {text,[6,42,84,121,112,101,42]},
             {sep,
              [{text,
                [19,105,115,32,116,104,101,32,110,111,100,101,32,116,121,112,
                 101,32,111,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,[6,42,73,110,102,111,42]},
             {sep,[{text,"\ndepends on"}],0,false},
             {text,[6,42,84,121,112,101,42]},
             {sep,[{text,"\r, as follows:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{sep,
                      [{text,"\vrecord_expr"},{sep,[{text,[1,58]}],0,false}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,"\e{atom(), [{atom(), Value}]}"}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{text,"\rrecord_access"},{sep,[{text,[1,58]}],0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [16,123,97,116,111,109,40,41,44,32,97,116,111,109,40,
                          41,125]}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{sep,
                   [{text,
                     [17,114,101,99,111,114,100,95,105,110,100,101,120,95,101,
                      120,112,114]},
                    {sep,[{text,[1,58]}],0,false}],
                   0,false}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       [16,123,97,116,111,109,40,41,44,32,97,116,111,109,40,
                        41,125]}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{sep,[null],0,true},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[5,70,111,114,32,97]}],0,false},
             {text,"\r*record_expr*"},
             {sep,[{text,[5,110,111,100,101,44]}],0,false},
             {text,[6,42,73,110,102,111,42]},
             {sep,
              [{text,
                [141,114,101,112,114,101,115,101,110,116,115,32,116,104,101,
                 32,114,101,99,111,114,100,32,110,97,109,101,32,97,110,100,32,
                 116,104,101,32,108,105,115,116,32,111,102,32,100,101,115,99,
                 114,105,112,116,111,114,115,32,102,111,114,32,116,104,101,32,
                 105,110,118,111,108,118,101,100,32,102,105,101,108,100,115,
                 44,32,108,105,115,116,101,100,32,105,110,32,116,104,101,32,
                 111,114,100,101,114,32,116,104,101,121,32,97,112,112,101,97,
                 114,46,32,65,32,102,105,101,108,100,32,100,101,115,99,114,
                 105,112,116,111,114,32,105,115,32,97,32,112,97,105,114]}],
              0,false},
             {text,
              [16,42,123,76,97,98,101,108,44,32,86,97,108,117,101,125,42]},
             {sep,[{text,[4,44,32,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [24,42,76,97,98,101,108,32,61,32,60,101,109,62,86,97,108,117,
               101,60,47,101,109,62,42]},
             {sep,[{text,"\b\". For a"}],0,false},
             {text,[15,42,114,101,99,111,114,100,95,97,99,99,101,115,115,42]},
             {sep,[{text,[5,110,111,100,101,44]}],0,false},
             {text,[6,42,73,110,102,111,42]},
             {sep,
              [{text,"4represents the record name and the field name. For a"}],
              0,false},
             {text,
              [19,42,114,101,99,111,114,100,95,105,110,100,101,120,95,101,120,
               112,114,42]},
             {sep,[{text,[5,110,111,100,101,44]}],0,false},
             {text,[6,42,73,110,102,111,42]},
             {sep,
              [{text,"3represents the record name and the name field name."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                "7represents a record expression that is not well-formed."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              "9[analyze_record_attribute/1](#analyze_record_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[analyze_record_field/1](#analyze_record_field-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\eanalyze_record_field(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\e> {atom(), {Default, Type}}"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "JReturns the label, value-expression, and type of a record field specifier."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,
            [{text,
              [16,68,101,102,97,117,108,116,32,61,32,110,111,110,101,32,124]}],
            0,false},
           {text," [syntaxTree()](#type-syntaxTree)"}],
          0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\rType = none |"}],0,false},
           {text," [syntaxTree()](#type-syntaxTree)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,";<a name=\"analyze_record_field-1\">analyze_record_field-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "_Returns the label, value-expression, and type of a record field specifier. The result is a pair"}],
              0,false},
             {text,
              [26,42,123,76,97,98,101,108,44,32,123,68,101,102,97,117,108,116,
               44,32,84,121,112,101,125,125,42]},
             {sep,[{text,[4,44,32,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[7,42,76,97,98,101,108,42]},
             {sep,[{text,[4,34,44,32,34]}],0,false},
             {text,
              [26,42,76,97,98,101,108,32,61,32,60,101,109,62,68,101,102,97,
               117,108,116,60,47,101,109,62,42]},
             {sep,[{text,[4,34,44,32,34]}],0,false},
             {text,
              [24,42,76,97,98,101,108,32,58,58,32,60,101,109,62,84,121,112,
               101,60,47,101,109,62,42]},
             {sep,[{text,[7,34,44,32,111,114,32,34]}],0,false},
             {text,"+*Label = <em>Default</em> :: <em>Type</em>*"},
             {sep,
              [{text,
                "6\". If the field has no value-expression, the value for"}],
              0,false},
             {text,"\t*Default*"},
             {sep,
              [{text,
                [16,119,105,108,108,32,98,101,32,116,104,101,32,97,116,111,
                 109]}],
              0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,"). If the field has no type, the value for"}],
              0,false},
             {text,[6,42,84,121,112,101,42]},
             {sep,
              [{text,
                [16,119,105,108,108,32,98,101,32,116,104,101,32,97,116,111,
                 109]}],
              0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                "8does not represent a well-formed record field specifier."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              "9[analyze_record_attribute/1](#analyze_record_attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[analyze_record_expr/1](#analyze_record_expr-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [31,97,110,97,108,121,122,101,95,116,121,112,101,95,97,112,112,
               108,105,99,97,116,105,111,110,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> TypeName"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text," Returns the name of a used type."}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "BTypeName = {atom(), integer()} | {ModuleName, {atom(), integer()}}"}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,77,111,100,117,108,101,78,97,109,101,32,61,32,97,116,111,109,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,
       "C<a name=\"analyze_type_application-1\">analyze_type_application-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "qReturns the name of a used type. The result is a representation of the name of the used pre-defined or local type"}],
              0,false},
             {text,[5,42,78,47,65,42]},
             {sep,[{text,[4,44,32,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,",represents a local (user) type application \""}],
              0,false},
             {text,"-*<em>N</em>(<em>T_1</em>, ..., <em>T_A</em>)*"},
             {sep,
              [{text,
                ":\", or a representation of the name of the used remote type"}],
              0,false},
             {text,[7,42,77,58,78,47,65,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,"+represents a remote user type application \""}],
              0,false},
             {text,
              "8*<em>M</em>:<em>N</em>(<em>T_1</em>, ..., <em>T_A</em>)*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                "Ddoes not represent a well-formed (user) type application expression."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[analyze_type_name/1](#analyze_type_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,97,110,97,108,121,122,101,95,116,121,112,101,95,110,97,109,
               101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> TypeName"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the type name represented by a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "KTypeName = atom() | {atom(), integer()} | {ModuleName, {atom(), integer()}}"}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,77,111,100,117,108,101,78,97,109,101,32,61,32,97,116,111,109,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,"5<a name=\"analyze_type_name-1\">analyze_type_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "6Returns the type name represented by a syntax tree. If"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"!represents a type name, such as \""}],0,false},
             {text,[7,42,102,111,111,47,49,42]},
             {sep,[{text,[6,34,32,111,114,32,34]}],0,false},
             {text,[15,42,98,108,111,103,103,115,58,102,114,101,100,47,50,42]},
             {sep,
              [{text,
                "5\", a uniform representation of that name is returned."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,"+does not represent a well-formed type name."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [29,97,110,97,108,121,122,101,95,119,105,108,100,95,97,116,116,
               114,105,98,117,116,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [18,62,32,123,97,116,111,109,40,41,44,32,116,101,114,109,40,41,
               125]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Returns the name and value of a \"wild\" attribute."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"analyze_wild_attribute-1\">analyze_wild_attribute-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "HReturns the name and value of a \"wild\" attribute. The result is the pair"}],
              0,false},
             {text,[15,42,123,78,97,109,101,44,32,86,97,108,117,101,125,42]},
             {sep,[{text,[4,44,32,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[14,42,45,78,97,109,101,40,86,97,108,117,101,41,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"%Note that no checking is done whether"}],0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,[{text,"$is a reserved attribute name such as"}],0,false},
             {text,"\b*module*"},
             {sep,[{text,[2,111,114]}],0,false},
             {text,"\b*export*"},
             {sep,
              [{text,"-: it is assumed that the attribute is \"wild\"."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,101,118,97,108,117,97,116,105,111,110,32,
                 116,104,114,111,119,115]}],
              0,false},
             {text,[14,42,115,121,110,116,97,120,95,101,114,114,111,114,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,"0does not represent a well-formed wild attribute."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[analyze_attribute/1](#analyze_attribute-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,97,110,110,111,116,97,116,101,95,98,105,110,100,105,110,103,
               115,40,84,114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Adds or updates annotations on nodes in a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"annotate_bindings-1\">annotate_bindings-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "DAdds or updates annotations on nodes in a syntax tree. Equivalent to"}],
              0,false},
             {text,"#*annotate_bindings(Tree, Bindings)*"},
             {sep,
              [{text,
                [31,119,104,101,114,101,32,116,104,101,32,116,111,112,45,108,
                 101,118,101,108,32,101,110,118,105,114,111,110,109,101,110,
                 116]}],
              0,false},
             {text,"\n*Bindings*"},
             {sep,
              [{text,
                [28,105,115,32,116,97,107,101,110,32,102,114,111,109,32,116,
                 104,101,32,97,110,110,111,116,97,116,105,111,110]}],
              0,false},
             {text,
              [17,42,123,101,110,118,44,32,66,105,110,100,105,110,103,115,125,
               42]},
             {sep,
              [{text,
                [19,111,110,32,116,104,101,32,114,111,111,116,32,110,111,100,
                 101,32,111,102]}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                "<. An exception is thrown if no such annotation should exist."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[annotate_bindings/2](#annotate_bindings-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,97,110,110,111,116,97,116,101,95,98,105,110,100,105,110,103,
               115,40,84,114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\f, Bindings::"}],0,false},
           {sep,
            [{text,[14,111,114,100,115,101,116,40,97,116,111,109,40,41,41]}],
            0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Adds or updates annotations on nodes in a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"annotate_bindings-2\">annotate_bindings-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "6Adds or updates annotations on nodes in a syntax tree."}],
              0,false},
             {text,"\n*Bindings*"},
             {sep,
              [{text,
                "vspecifies the set of bound variables in the environment of the top level node. The following annotations are affected:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\r*{env, Vars}*"},
            {sep,
             [{text,"4, representing the input environment of the subtree."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[15,42,123,98,111,117,110,100,44,32,86,97,114,115,125,42]},
            {sep,
             [{text,
               ";, representing the variables that are bound in the subtree."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[14,42,123,102,114,101,101,44,32,86,97,114,115,125,42]},
           {sep,
            [{text,"1, representing the free variables in the subtree."}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\n*Bindings*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[6,42,86,97,114,115,42]},
             {sep,[{text,"!are ordered-set lists (cf. module"}],0,false},
             {text,"\t*ordsets*"},
             {sep,
              [{text,"') of atoms representing variable names."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,111,114,100,115,101,116,115,40,51,41,93,40,46,47,111,114,
               100,115,101,116,115,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[annotate_bindings/1](#annotate_bindings-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"'fold(F::Function, Start::term(), Tree::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> term()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Folds a function over all nodes of a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,"\fFunction = ("}],0,false},
          {text," [syntaxTree()](#type-syntaxTree)"},
          {sep,[{text,"\v, term()) -"}],0,false},
          {sep,[{text,"\b> term()"}],0,false}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,"\e<a name=\"fold-3\">fold-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "LFolds a function over all nodes of a syntax tree. The result is the value of"}],
              0,false},
             {text,
              ":*Function(X1, Function(X2, ... Function(Xn, Start) ... ))*"},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,
              [19,42,91,88,49,44,32,88,50,44,32,46,46,46,44,32,88,110,93,42]},
             {sep,
              [{text,
                [16,97,114,101,32,116,104,101,32,110,111,100,101,115,32,111,
                 102]}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                [26,105,110,32,97,32,112,111,115,116,45,111,114,100,101,114,
                 32,116,114,97,118,101,114,115,97,108,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"#[fold_subtrees/3](#fold_subtrees-3)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[foldl_listlist/3](#foldl_listlist-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,"0fold_subtrees(F::Function, Start::term(), Tree::"}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> term()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ">Folds a function over the immediate subtrees of a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,"\fFunction = ("}],0,false},
          {text," [syntaxTree()](#type-syntaxTree)"},
          {sep,[{text,"\v, term()) -"}],0,false},
          {sep,[{text,"\b> term()"}],0,false}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,"-<a name=\"fold_subtrees-3\">fold_subtrees-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "QFolds a function over the immediate subtrees of a syntax tree. This is similar to"}],
              0,false},
             {text,"\b*fold/3*"},
             {sep,[{text,"', but only on the immediate subtrees of"}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                ">, in left-to-right order; it does not include the root node of"}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,102,111,108,100,47,51,93,40,35,102,111,108,100,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "G## foldl_listlist(F::Function, Start::term(), Ls::[[term()]]) -> term()"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Like lists:foldl/3, but over a list of lists."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,[{text,"%Function = (term(), term()) -> term()"}],0,false}],
     0,false},
    {sep,
     [{text,"/<a name=\"foldl_listlist-3\">foldl_listlist-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[4,76,105,107,101]}],0,false},
             {text,
              [15,42,108,105,115,116,115,58,102,111,108,100,108,47,51,42]},
             {sep,[{text,"\e, but over a list of lists."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"([lists:foldl/3](../stdlib/lists#foldl/3)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,102,111,108,100,47,51,93,40,35,102,111,108,100,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "A## function_name_expansions(Names::[Name]) -> [{ShortName, Name}]"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "HCreates a mapping from corresponding short names to full function names."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,[{text,"!Name = ShortName | {atom(), Name}"}],0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,[{text,"(ShortName = atom() | {atom(), integer()}"}],0,false}],
      0,false}},
    {sep,
     [{text,
       "C<a name=\"function_name_expansions-1\">function_name_expansions-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [138,67,114,101,97,116,101,115,32,97,32,109,97,112,112,105,
                 110,103,32,102,114,111,109,32,99,111,114,114,101,115,112,111,
                 110,100,105,110,103,32,115,104,111,114,116,32,110,97,109,101,
                 115,32,116,111,32,102,117,108,108,32,102,117,110,99,116,105,
                 111,110,32,110,97,109,101,115,46,32,78,97,109,101,115,32,97,
                 114,101,32,114,101,112,114,101,115,101,110,116,101,100,32,98,
                 121,32,110,101,115,116,101,100,32,116,117,112,108,101,115,32,
                 111,102,32,97,116,111,109,115,32,97,110,100,32,105,110,116,
                 101,103,101,114,115,32,40,99,102,46]}],
              0,false},
             {text,
              [25,42,97,110,97,108,121,122,101,95,102,117,110,99,116,105,111,
               110,95,110,97,109,101,47,49,42]},
             {sep,
              [{text,")). The result is a list containing a pair"}],
              0,false},
             {text,
              [19,42,123,83,104,111,114,116,78,97,109,101,44,32,78,97,109,101,
               125,42]},
             {sep,
              [{text,
                [16,102,111,114,32,101,97,99,104,32,101,108,101,109,101,110,
                 116]}],
              0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,
              [{text,"*in the given list, where the corresponding"}],
              0,false},
             {text,"\v*ShortName*"},
             {sep,[{text,"\"is the rightmost-innermost part of"}],0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,
              [{text,
                "h. The list thus represents a finite mapping from unqualified names to the corresponding qualified names."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "8Note: the resulting list can contain more than one tuple"}],
              0,false},
             {text,
              [19,42,123,83,104,111,114,116,78,97,109,101,44,32,78,97,109,101,
               125,42]},
             {sep,[{text,"\ffor the same"}],0,false},
             {text,"\v*ShortName*"},
             {sep,[{text,"$, possibly with different values for"}],0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,
              [{text,
                [30,44,32,100,101,112,101,110,100,105,110,103,32,111,110,32,
                 116,104,101,32,103,105,118,101,110,32,108,105,115,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"3[analyze_function_name/1](#analyze_function_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,105,115,95,102,97,105,108,95,101,120,112,114,40,84,114,101,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "NReturns true if Tree represents an expression which never terminates normally."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"is_fail_expr-1\">is_fail_expr-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                [138,114,101,112,114,101,115,101,110,116,115,32,97,110,32,101,
                 120,112,114,101,115,115,105,111,110,32,119,104,105,99,104,32,
                 110,101,118,101,114,32,116,101,114,109,105,110,97,116,101,
                 115,32,110,111,114,109,97,108,108,121,46,32,78,111,116,101,
                 32,116,104,97,116,32,116,104,101,32,114,101,118,101,114,115,
                 101,32,100,111,101,115,32,110,111,116,32,97,112,112,108,121,
                 46,32,67,117,114,114,101,110,116,108,121,44,32,116,104,101,
                 32,100,101,116,101,99,116,101,100,32,99,97,115,101,115,32,97,
                 114,101,32,99,97,108,108,115,32,116,111]}],
              0,false},
             {text,"\b*exit/1*"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\t*throw/1*"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [16,42,101,114,108,97,110,103,58,101,114,114,111,114,47,49,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [16,42,101,114,108,97,110,103,58,101,114,114,111,114,47,50,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"([erlang:error/1](../erts/erlang#error/1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"([erlang:error/2](../erts/erlang#error/2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"&[erlang:exit/1](../erts/erlang#exit/1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"([erlang:throw/1](../erts/erlang#throw/1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,108,105,109,105,116,40,84,114,101,101,44,32,68,101,112,116,
               104,41,32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "SEquivalent to limit(Tree, Depth, Text) using the text \"...\" as default replacement."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,108,105,109,105,116,45,50,34,62,108,
        105,109,105,116,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [26,42,108,105,109,105,116,40,84,114,101,101,44,32,68,101,112,
               116,104,44,32,84,101,120,116,41,42]},
             {sep,
              [{text,
                [14,117,115,105,110,103,32,116,104,101,32,116,101,120,116]}],
              0,false},
             {text,[7,42,34,46,46,46,34,42]},
             {sep,
              [{text,
                [23,97,115,32,100,101,102,97,117,108,116,32,114,101,112,108,
                 97,99,101,109,101,110,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,108,105,109,105,116,47,51,93,40,35,108,105,109,105,116,
               45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"([erl_syntax:text/1](./erl_syntax#text-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\flimit(Tree::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [26,44,32,68,101,112,116,104,58,58,105,110,116,101,103,101,114,
               40,41,44,32,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Limits a syntax tree to a specified depth."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,108,105,109,105,116,45,51,34,62,108,
        105,109,105,116,45,51,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "LLimits a syntax tree to a specified depth. Replaces all non-leaf subtrees in"}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,"\fat the given"}],0,false},
             {text,[7,42,68,101,112,116,104,42]},
             {sep,[{text,[2,98,121]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[4,46,32,73,102]}],0,false},
             {text,[7,42,68,101,112,116,104,42]},
             {sep,[{text,"!is negative, the result is always"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\t, even if"}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                [16,104,97,115,32,110,111,32,115,117,98,116,114,101,101,115,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ":When a group of subtrees (as e.g., the argument list of an"}],
              0,false},
             {text,"\r*application*"},
             {sep,
              [{text,
                "xnode) is at the specified depth, and there are two or more subtrees in the group, these will be collectively replaced by"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                "Åeven if they are leaf nodes. Groups of subtrees that are above the specified depth will be limited in size, as if each subsequent tree in the group were one level deeper than the previous. E.g., if"}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                [31,114,101,112,114,101,115,101,110,116,115,32,97,32,108,105,
                 115,116,32,111,102,32,105,110,116,101,103,101,114,115,32,
                 34]}],
              0,false},
             {text,"!*[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]*"},
             {sep,
              [{text,
                [16,34,44,32,116,104,101,32,114,101,115,117,108,116,32,111,
                 102]}],
              0,false},
             {text,
              [16,42,108,105,109,105,116,40,84,114,101,101,44,32,53,41,42]},
             {sep,
              [{text,
                [14,119,105,108,108,32,114,101,112,114,101,115,101,110,116]}],
              0,false},
             {text,
              [19,42,91,49,44,32,50,44,32,51,44,32,52,44,32,46,46,46,93,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "dThe resulting syntax tree is typically only useful for pretty-printing or similar visual formatting."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,108,105,109,105,116,47,50,93,40,35,108,105,109,105,116,
               45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,109,97,112,40,70,58,58,70,117,110,99,116,105,111,110,44,32,
               84,114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Applies a function to each node of a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,"\fFunction = ("}],0,false},
          {text," [syntaxTree()](#type-syntaxTree)"},
          {sep,[{text,[3,41,32,45]}],0,false},
          {sep,[{text,[1,62]}],0,false},
          {text," [syntaxTree()](#type-syntaxTree)"}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,
       [25,60,97,32,110,97,109,101,61,34,109,97,112,45,50,34,62,109,97,112,45,
        50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [159,65,112,112,108,105,101,115,32,97,32,102,117,110,99,116,105,
               111,110,32,116,111,32,101,97,99,104,32,110,111,100,101,32,111,
               102,32,97,32,115,121,110,116,97,120,32,116,114,101,101,46,32,
               84,104,101,32,114,101,115,117,108,116,32,111,102,32,101,97,99,
               104,32,97,112,112,108,105,99,97,116,105,111,110,32,114,101,112,
               108,97,99,101,115,32,116,104,101,32,99,111,114,114,101,115,112,
               111,110,100,105,110,103,32,111,114,105,103,105,110,97,108,32,
               110,111,100,101,46,32,84,104,101,32,111,114,100,101,114,32,111,
               102,32,116,114,97,118,101,114,115,97,108,32,105,115,32,98,111,
               116,116,111,109,45,117,112,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![map_subtrees/2](#map_subtrees-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text," map_subtrees(F::Function, Tree::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ">Applies a function to each immediate subtree of a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [26,70,117,110,99,116,105,111,110,32,61,32,40,84,114,101,101,41,32,
          45,62,32,84,114,101,101,49]}],
       0,false}],
     0,false},
    {sep,
     [{text,"+<a name=\"map_subtrees-2\">map_subtrees-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [135,65,112,112,108,105,101,115,32,97,32,102,117,110,99,116,105,
               111,110,32,116,111,32,101,97,99,104,32,105,109,109,101,100,105,
               97,116,101,32,115,117,98,116,114,101,101,32,111,102,32,97,32,
               115,121,110,116,97,120,32,116,114,101,101,46,32,84,104,101,32,
               114,101,115,117,108,116,32,111,102,32,101,97,99,104,32,97,112,
               112,108,105,99,97,116,105,111,110,32,114,101,112,108,97,99,101,
               115,32,116,104,101,32,99,111,114,114,101,115,112,111,110,100,
               105,110,103,32,111,114,105,103,105,110,97,108,32,110,111,100,
               101,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,[15,91,109,97,112,47,50,93,40,35,109,97,112,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,"*mapfold(F::Function, Start::term(), Tree::"}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,123]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, term()}"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,",Combines map and fold in a single operation."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,"\fFunction = ("}],0,false},
          {text," [syntaxTree()](#type-syntaxTree)"},
          {sep,[{text,"\v, term()) -"}],0,false},
          {sep,[{text,[3,62,32,123]}],0,false},
          {text," [syntaxTree()](#type-syntaxTree)"},
          {sep,[{text,"\t, term()}"}],0,false}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,"!<a name=\"mapfold-3\">mapfold-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?Combines map and fold in a single operation. This is similar to"}],
              0,false},
             {text,[7,42,109,97,112,47,50,42]},
             {sep,
              [{text,
                "A, but also propagates an extra value from each application of the"}],
              0,false},
             {text,"\n*Function*"},
             {sep,
              [{text,
                "@to the next, while doing a post-order traversal of the tree like"}],
              0,false},
             {text,"\b*fold/3*"},
             {sep,[{text,"\v. The value"}],0,false},
             {text,[7,42,83,116,97,114,116,42]},
             {sep,
              [{text,
                "his passed to the first function application, and the final result is the result of the last application."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,102,111,108,100,47,51,93,40,35,102,111,108,100,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,[15,91,109,97,112,47,50,93,40,35,109,97,112,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,"3mapfold_subtrees(F::Function, Start::term(), Tree::"}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,123]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, term()}"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "FDoes a mapfold operation over the immediate subtrees of a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,"\fFunction = ("}],0,false},
          {text," [syntaxTree()](#type-syntaxTree)"},
          {sep,[{text,"\v, term()) -"}],0,false},
          {sep,[{text,[3,62,32,123]}],0,false},
          {text," [syntaxTree()](#type-syntaxTree)"},
          {sep,[{text,"\t, term()}"}],0,false}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,"3<a name=\"mapfold_subtrees-3\">mapfold_subtrees-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "YDoes a mapfold operation over the immediate subtrees of a syntax tree. This is similar to"}],
              0,false},
             {text,"\v*mapfold/3*"},
             {sep,[{text,"', but only on the immediate subtrees of"}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                ">, in left-to-right order; it does not include the root node of"}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,109,97,112,102,111,108,100,47,51,93,40,35,109,97,112,102,
               111,108,100,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "S## mapfoldl_listlist(F::Function, S::State, Ls::[[term()]]) -> {[[term()]], term()}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Like lists:mapfoldl/3, but over a list of lists."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,"/Function = (term(), term()) -> {term(), term()}"}],
       0,false}],
     0,false},
    {sep,
     [{text,"5<a name=\"mapfoldl_listlist-3\">mapfoldl_listlist-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[4,76,105,107,101]}],0,false},
             {text,
              [18,42,108,105,115,116,115,58,109,97,112,102,111,108,100,108,47,
               51,42]},
             {sep,
              [{text,
                "n, but over a list of lists. The list of lists in the result has the same structure as the given list of lists."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,110,101,119,95,118,97,114,105,97,98,108,101,95,110,97,109,
               101,40,85,115,101,100,58,58]}],
            0,false},
           {sep,[{text,"\vset(atom())"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> atom()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Returns an atom which is not already in the set Used."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"new_variable_name-1\">new_variable_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"/Returns an atom which is not already in the set"}],
              0,false},
             {text,[6,42,85,115,101,100,42]},
             {sep,
              [{text,
                [23,46,32,84,104,105,115,32,105,115,32,101,113,117,105,118,97,
                 108,101,110,116,32,116,111]}],
              0,false},
             {text,"#*new_variable_name(Function, Used)*"},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,"\n*Function*"},
             {sep,
              [{text,
                [20,109,97,112,115,32,97,32,103,105,118,101,110,32,105,110,
                 116,101,103,101,114]}],
              0,false},
             {text,[3,42,78,42]},
             {sep,[{text,"$to the atom whose name consists of \""}],0,false},
             {text,[3,42,86,42]},
             {sep,
              [{text,
                [29,34,32,102,111,108,108,111,119,101,100,32,98,121,32,116,
                 104,101,32,110,117,109,101,114,97,108,32,102,111,114]}],
              0,false},
             {text,[3,42,78,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[new_variable_name/2](#new_variable_name-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"%new_variable_name(F::Function, Used::"}],0,false},
           {sep,[{text,"\vset(atom())"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> atom()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "?Returns a user-named atom which is not already in the set Used."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,[{text," Function = (integer()) -> atom()"}],0,false}],
     0,false},
    {sep,
     [{text,"5<a name=\"new_variable_name-2\">new_variable_name-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "9Returns a user-named atom which is not already in the set"}],
              0,false},
             {text,[6,42,85,115,101,100,42]},
             {sep,
              [{text,"-. The atom is generated by applying the given"}],
              0,false},
             {text,"\n*Function*"},
             {sep,
              [{text,
                "Ãto a generated integer. Integers are generated using an algorithm which tries to keep the names randomly distributed within a reasonably small range relative to the number of elements in the set."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,117,
                 115,101,115,32,116,104,101,32,109,111,100,117,108,101]}],
              0,false},
             {text,[6,42,114,97,110,100,42]},
             {sep,
              [{text,
                "Dto generate new keys. The seed it uses may be initialized by calling"}],
              0,false},
             {text,"\r*rand:seed/1*"},
             {sep,[{text,[2,111,114]}],0,false},
             {text,"\r*rand:seed/2*"},
             {sep,[{text,"%before this function is first called."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,114,97,110,100,111,109,40,51,41,93,40,46,47,114,97,110,
               100,111,109,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,115,101,116,115,40,51,41,93,40,46,47,115,101,116,115,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[new_variable_name/1](#new_variable_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"'new_variable_names(N::integer(), Used::"}],0,false},
           {sep,[{text,"\vset(atom())"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> [atom()]"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ">Like new_variable_name/1, but generates a list of N new names."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"new_variable_names-2\">new_variable_names-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[4,76,105,107,101]}],0,false},
             {text,
              [21,42,110,101,119,95,118,97,114,105,97,98,108,101,95,110,97,
               109,101,47,49,42]},
             {sep,
              [{text,
                [25,44,32,98,117,116,32,103,101,110,101,114,97,116,101,115,32,
                 97,32,108,105,115,116,32,111,102]}],
              0,false},
             {text,[3,42,78,42]},
             {sep,[{text,"\nnew names."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[new_variable_name/1](#new_variable_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,"4new_variable_names(N::integer(), F::Function, Used::"}],
            0,false},
           {sep,[{text,"\vset(atom())"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> [atom()]"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ">Like new_variable_name/2, but generates a list of N new names."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,[{text," Function = (integer()) -> atom()"}],0,false}],
     0,false},
    {sep,
     [{text,"7<a name=\"new_variable_names-3\">new_variable_names-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[4,76,105,107,101]}],0,false},
             {text,
              [21,42,110,101,119,95,118,97,114,105,97,98,108,101,95,110,97,
               109,101,47,50,42]},
             {sep,
              [{text,
                [25,44,32,98,117,116,32,103,101,110,101,114,97,116,101,115,32,
                 97,32,108,105,115,116,32,111,102]}],
              0,false},
             {text,[3,42,78,42]},
             {sep,[{text,"\nnew names."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[new_variable_name/2](#new_variable_name-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,115,116,114,105,112,95,99,111,109,109,101,110,116,115,40,84,
               114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Removes all comments from all nodes of a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"strip_comments-1\">strip_comments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [258,82,101,109,111,118,101,115,32,97,108,108,32,99,111,109,109,
               101,110,116,115,32,102,114,111,109,32,97,108,108,32,110,111,
               100,101,115,32,111,102,32,97,32,115,121,110,116,97,120,32,116,
               114,101,101,46,32,65,108,108,32,111,116,104,101,114,32,97,116,
               116,114,105,98,117,116,101,115,32,40,115,117,99,104,32,97,115,
               32,112,111,115,105,116,105,111,110,32,105,110,102,111,114,109,
               97,116,105,111,110,41,32,114,101,109,97,105,110,32,117,110,99,
               104,97,110,103,101,100,46,32,83,116,97,110,100,97,108,111,110,
               101,32,99,111,109,109,101,110,116,115,32,105,110,32,102,111,
               114,109,32,108,105,115,116,115,32,97,114,101,32,114,101,109,
               111,118,101,100,59,32,97,110,121,32,111,116,104,101,114,32,115,
               116,97,110,100,97,108,111,110,101,32,99,111,109,109,101,110,
               116,115,32,97,114,101,32,99,104,97,110,103,101,100,32,105,110,
               116,111,32,110,117,108,108,45,99,111,109,109,101,110,116,115,
               32,40,110,111,32,116,101,120,116,44,32,110,111,32,105,110,100,
               101,110,116,97,116,105,111,110,41,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,116,111,95,99,111,109,109,101,110,116,40,84,114,101,101,41,
               32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Equivalent to to_comment(Tree, \"% \")."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"to_comment-1\">to_comment-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"'[to_comment(Tree, \"% \")](#to_comment-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,116,111,95,99,111,109,109,101,110,116,40,84,114,101,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [21,44,32,80,114,101,102,105,120,58,58,115,116,114,105,110,103,
               40,41,41,32,45]}],
            0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "NEquivalent to to_comment(Tree, Prefix, F) for a default formatting function F."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"to_comment-2\">to_comment-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [29,42,116,111,95,99,111,109,109,101,110,116,40,84,114,101,101,
               44,32,80,114,101,102,105,120,44,32,70,41,42]},
             {sep,[{text,"!for a default formatting function"}],0,false},
             {text,[3,42,70,42]},
             {sep,[{text,"\r. The default"}],0,false},
             {text,[3,42,70,42]},
             {sep,[{text,"\fsimply calls"}],0,false},
             {text,
              [23,42,101,114,108,95,112,114,101,116,116,121,112,114,58,102,
               111,114,109,97,116,47,49,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,116,111,95,99,111,109,109,101,110,116,47,51,93,40,35,116,
               111,95,99,111,109,109,101,110,116,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"0[erl_prettypr:format/1](./erl_prettypr#format-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,116,111,95,99,111,109,109,101,110,116,40,84,114,101,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"!, Prefix::string(), F::Printer) -"}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Transforms a syntax tree into an abstract comment."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,"\vPrinter = ("}],0,false},
          {text," [syntaxTree()](#type-syntaxTree)"},
          {sep,[{text,[3,41,32,45]}],0,false},
          {sep,[{text,"\n> string()"}],0,false}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,"'<a name=\"to_comment-3\">to_comment-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "`Transforms a syntax tree into an abstract comment. The lines of the comment contain the text for"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [26,44,32,97,115,32,112,114,111,100,117,99,101,100,32,98,121,
                 32,116,104,101,32,103,105,118,101,110]}],
              0,false},
             {text,"\t*Printer*"},
             {sep,
              [{text,
                "<function. Each line of the comment is prefixed by the string"}],
              0,false},
             {text,"\b*Prefix*"},
             {sep,[{text,"$(this does not include the initial \""}],0,false},
             {text,[3,42,37,42]},
             {sep,[{text,"!\" character of the comment line)."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [26,70,111,114,32,101,120,97,109,112,108,101,44,32,116,104,
                 101,32,114,101,115,117,108,116,32,111,102]}],
              0,false},
             {text,"**to_comment(erl_syntax:abstract([a,b,c]))*"},
             {sep,[{text,"\nrepresents"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [21,10,32,32,32,32,32,32,32,32,32,32,37,37,32,91,97,44,98,44,99,
               93]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[4,40,99,102,46]}],0,false},
             {text,[14,42,116,111,95,99,111,109,109,101,110,116,47,49,42]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [151,78,111,116,101,58,32,116,104,101,32,116,101,120,116,32,114,
               101,116,117,114,110,101,100,32,98,121,32,116,104,101,32,102,
               111,114,109,97,116,116,105,110,103,32,102,117,110,99,116,105,
               111,110,32,119,105,108,108,32,98,101,32,115,112,108,105,116,32,
               97,117,116,111,109,97,116,105,99,97,108,108,121,32,105,110,116,
               111,32,115,101,112,97,114,97,116,101,32,99,111,109,109,101,110,
               116,32,108,105,110,101,115,32,97,116,32,101,97,99,104,32,108,
               105,110,101,32,98,114,101,97,107,46,32,78,111,32,101,120,116,
               114,97,32,119,111,114,107,32,105,115,32,110,101,101,100,101,
               100,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,116,111,95,99,111,109,109,101,110,116,47,49,93,40,35,116,
               111,95,99,111,109,109,101,110,116,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,116,111,95,99,111,109,109,101,110,116,47,50,93,40,35,116,
               111,95,99,111,109,109,101,110,116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,118,97,114,105,97,98,108,101,115,40,84,114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\vset(atom())"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "vReturns the names of variables occurring in a syntax tree, The result is a set of variable names represented by atoms."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"variables-1\">variables-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [148,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
               101,115,32,111,102,32,118,97,114,105,97,98,108,101,115,32,111,
               99,99,117,114,114,105,110,103,32,105,110,32,97,32,115,121,110,
               116,97,120,32,116,114,101,101,44,32,84,104,101,32,114,101,115,
               117,108,116,32,105,115,32,97,32,115,101,116,32,111,102,32,118,
               97,114,105,97,98,108,101,32,110,97,109,101,115,32,114,101,112,
               114,101,115,101,110,116,101,100,32,98,121,32,97,116,111,109,
               115,46,32,77,97,99,114,111,32,110,97,109,101,115,32,97,114,101,
               32,110,111,116,32,105,110,99,108,117,100,101,100,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,115,101,116,115,40,51,41,93,40,46,47,115,101,116,115,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t# Authors"},null},null}},
   {sep,
    [{sep,
      [{sep,
        [{text,
          [16,82,105,99,104,97,114,100,32,67,97,114,108,115,115,111,110]}],
        0,false}],
      0,false},
     {sep,
      [{sep,
        [{text,
          [26,99,97,114,108,115,115,111,110,46,114,105,99,104,97,114,100,64,
           103,109,97,105,108,46,99,111,109]}],
        0,false}],
      0,false}],
    0,false}],
  0,false}}
