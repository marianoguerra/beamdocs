{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f# erl_syntax"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f# erl_syntax"},null},null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [29,65,98,115,116,114,97,99,116,32,69,114,108,97,110,103,32,115,
              121,110,116,97,120,32,116,114,101,101,115,46]}],
           0,false}],
         0,true},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   [29,65,98,115,116,114,97,99,116,32,69,114,108,97,110,103,
                    32,115,121,110,116,97,120,32,116,114,101,101,115,46]}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "Ã’This module defines an abstract data type for representing Erlang source code as syntax trees, in a way that is backwards compatible with the data structures created by the Erlang standard library parser module"}],
                   0,false},
                  {text,"\v*erl_parse*"},
                  {sep,
                   [{text,
                     "W(often referred to as \"parse trees\", which is a bit of a misnomer). This means that all"}],
                   0,false},
                  {text,"\v*erl_parse*"},
                  {sep,
                   [{text,
                     [151,116,114,101,101,115,32,97,114,101,32,118,97,108,105,
                      100,32,97,98,115,116,114,97,99,116,32,115,121,110,116,
                      97,120,32,116,114,101,101,115,44,32,98,117,116,32,116,
                      104,101,32,114,101,118,101,114,115,101,32,105,115,32,
                      110,111,116,32,116,114,117,101,58,32,97,98,115,116,114,
                      97,99,116,32,115,121,110,116,97,120,32,116,114,101,101,
                      115,32,99,97,110,32,105,110,32,103,101,110,101,114,97,
                      108,32,110,111,116,32,98,101,32,117,115,101,100,32,97,
                      115,32,105,110,112,117,116,32,116,111,32,102,117,110,99,
                      116,105,111,110,115,32,101,120,112,101,99,116,105,110,
                      103,32,97,110]}],
                   0,false},
                  {text,"\v*erl_parse*"},
                  {sep,
                   [{text,
                     "ctree. However, as long as an abstract syntax tree represents a correct Erlang program, the function"}],
                   0,false},
                  {text,
                   [21,91,114,101,118,101,114,116,47,49,93,40,35,114,101,118,
                    101,114,116,45,49,41]},
                  {sep,
                   [{text,
                     "3should be able to transform it to the corresponding"}],
                   0,false},
                  {text,"\v*erl_parse*"},
                  {sep,
                   [{text,
                     [15,114,101,112,114,101,115,101,110,116,97,116,105,111,
                      110,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "PA recommended starting point for the first-time user is the documentation of the"}],
                   0,false},
                  {text," [syntaxTree()](#type-syntaxTree)"},
                  {sep,[{text,"\edata type, and the function"}],0,false},
                  {text,
                   [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,
                    49,41]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,"\e<a name=\"NOTES:\">NOTES:</a>"},
                  {text,"\n**NOTES:**"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     ";This module deals with the composition and decomposition of"}],
                   0,false},
                  {text,"\r**syntactic**"},
                  {sep,
                   [{text,
                     [362,101,110,116,105,116,105,101,115,32,40,97,115,32,111,
                      112,112,111,115,101,100,32,116,111,32,115,101,109,97,
                      110,116,105,99,32,111,110,101,115,41,59,32,105,116,115,
                      32,112,117,114,112,111,115,101,32,105,115,32,116,111,32,
                      104,105,100,101,32,97,108,108,32,100,105,114,101,99,116,
                      32,114,101,102,101,114,101,110,99,101,115,32,116,111,32,
                      116,104,101,32,100,97,116,97,32,115,116,114,117,99,116,
                      117,114,101,115,32,117,115,101,100,32,116,111,32,114,
                      101,112,114,101,115,101,110,116,32,116,104,101,115,101,
                      32,101,110,116,105,116,105,101,115,46,32,87,105,116,104,
                      32,102,101,119,32,101,120,99,101,112,116,105,111,110,
                      115,44,32,116,104,101,32,102,117,110,99,116,105,111,110,
                      115,32,105,110,32,116,104,105,115,32,109,111,100,117,
                      108,101,32,112,101,114,102,111,114,109,32,110,111,32,
                      115,101,109,97,110,116,105,99,32,105,110,116,101,114,
                      112,114,101,116,97,116,105,111,110,32,111,102,32,116,
                      104,101,105,114,32,105,110,112,117,116,115,44,32,97,110,
                      100,32,105,110,32,103,101,110,101,114,97,108,44,32,116,
                      104,101,32,117,115,101,114,32,105,115,32,97,115,115,117,
                      109,101,100,32,116,111,32,112,97,115,115,32,116,121,112,
                      101,45,99,111,114,114,101,99,116,32,97,114,103,117,109,
                      101,110,116,115,32,45,32,105,102,32,116,104,105,115,32,
                      105,115,32,110,111,116,32,100,111,110,101,44,32,116,104,
                      101,32,101,102,102,101,99,116,115,32,97,114,101,32,110,
                      111,116,32,100,101,102,105,110,101,100,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [25,87,105,116,104,32,116,104,101,32,101,120,99,101,112,
                      116,105,111,110,32,111,102,32,116,104,101]}],
                   0,false},
                  {text,
                   [30,91,101,114,108,95,112,97,114,115,101,40,41,93,40,35,
                    116,121,112,101,45,101,114,108,95,112,97,114,115,101,41]},
                  {sep,
                   [{text,
                     [263,100,97,116,97,32,115,116,114,117,99,116,117,114,101,
                      115,44,32,116,104,101,32,105,110,116,101,114,110,97,108,
                      32,114,101,112,114,101,115,101,110,116,97,116,105,111,
                      110,115,32,111,102,32,97,98,115,116,114,97,99,116,32,
                      115,121,110,116,97,120,32,116,114,101,101,115,32,97,114,
                      101,32,115,117,98,106,101,99,116,32,116,111,32,99,104,
                      97,110,103,101,32,119,105,116,104,111,117,116,32,110,
                      111,116,105,99,101,44,32,97,110,100,32,115,104,111,117,
                      108,100,32,110,111,116,32,98,101,32,100,111,99,117,109,
                      101,110,116,101,100,32,111,117,116,115,105,100,101,32,
                      116,104,105,115,32,109,111,100,117,108,101,46,32,70,117,
                      114,116,104,101,114,109,111,114,101,44,32,119,101,32,
                      100,111,32,110,111,116,32,103,105,118,101,32,97,110,121,
                      32,103,117,97,114,97,110,116,101,101,115,32,111,110,32,
                      104,111,119,32,97,110,32,97,98,115,116,114,97,99,116,32,
                      115,121,110,116,97,120,32,116,114,101,101,32,109,97,121,
                      32,111,114,32,109,97,121,32,110,111,116,32,98,101,32,
                      114,101,112,114,101,115,101,110,116,101,100,44]}],
                   0,false},
                  {text,"!**with the following exceptions**"},
                  {sep,
                   [{text,
                     "9: no syntax tree is represented by a single atom, such as"}],
                   0,false},
                  {text,[6,42,110,111,110,101,42]},
                  {sep,
                   [{text,
                     [23,44,32,98,121,32,97,32,108,105,115,116,32,99,111,110,
                      115,116,114,117,99,116,111,114]}],
                   0,false},
                  {text,"\t*[X | Y]*"},
                  {sep,
                   [{text,
                     [22,44,32,111,114,32,98,121,32,116,104,101,32,101,109,
                      112,116,121,32,108,105,115,116]}],
                   0,false},
                  {text,[4,42,91,93,42]},
                  {sep,
                   [{text,
                     "L. This can be relied on when writing functions that operate on syntax trees."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r## DATA TYPES"},null},null}},
     {text,
      [25,60,97,32,110,97,109,101,61,34,116,121,112,101,115,34,62,116,121,112,
       101,115,60,47,97,62]},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{sep,
                             [{text,"\rtype-encoding"},
                              {sep,
                               [{text,
                                 "$encoding() = utf8 | unicode | latin1"}],
                               0,false}],
                             0,false}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          null,
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{sep,
                            [{text,
                              [14,116,121,112,101,45,101,114,108,95,112,97,
                               114,115,101]},
                             {sep,[{text,"\rerl_parse() ="}],0,false},
                             {text,"\eerl_parse:abstract_clause()"},
                             {sep,[{text,[1,124]}],0,false},
                             {text,
                              [25,101,114,108,95,112,97,114,115,101,58,97,98,
                               115,116,114,97,99,116,95,101,120,112,114,40,
                               41]},
                             {sep,[{text,[1,124]}],0,false},
                             {text,
                              [25,101,114,108,95,112,97,114,115,101,58,97,98,
                               115,116,114,97,99,116,95,102,111,114,109,40,
                               41]},
                             {sep,[{text,[1,124]}],0,false},
                             {text,
                              [25,101,114,108,95,112,97,114,115,101,58,97,98,
                               115,116,114,97,99,116,95,116,121,112,101,40,
                               41]},
                             {sep,[{text,[1,124]}],0,false},
                             {text,
                              [21,101,114,108,95,112,97,114,115,101,58,102,
                               111,114,109,95,105,110,102,111,40,41]},
                             {sep,
                              [{text,
                                "/| {bin_element, term(), term(), term(), term()}"}],
                              0,false}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        null,
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{sep,
                          [{text,"\ntype-forms"},
                           {sep,[{text,"\tforms() ="}],0,false},
                           {text,"\fsyntaxTree()"},
                           {sep,[{text,[3,124,32,91]}],0,false},
                           {text,"\fsyntaxTree()"},
                           {sep,[{text,[1,93]}],0,false}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      null,
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{sep,
                        [{text,"\ntype-guard"},
                         {sep,
                          [{text,
                            [16,103,117,97,114,100,40,41,32,61,32,110,111,110,
                             101,32,124]}],
                          0,false},
                         {text,"\fsyntaxTree()"},
                         {sep,[{text,[3,124,32,91]}],0,false},
                         {text,"\fsyntaxTree()"},
                         {sep,[{text,[6,93,32,124,32,91,91]}],0,false},
                         {text,"\fsyntaxTree()"},
                         {sep,[{text,[2,93,93]}],0,false}],
                        0,false}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{sep,
                      [{text,"\ftype-padding"},
                       {sep,
                        [{text,
                          [28,112,97,100,100,105,110,103,40,41,32,61,32,110,
                           111,110,101,32,124,32,105,110,116,101,103,101,114,
                           40,41]}],
                        0,false}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{text,
                      [15,116,121,112,101,45,115,121,110,116,97,120,84,114,
                       101,101]},
                     {sep,[{text,"\fsyntaxTree()"}],0,false}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {sep,
                 [null,
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [28,65,110,32,97,98,115,116,114,97,99,116,32,115,
                             121,110,116,97,120,32,116,114,101,101,46,32,84,
                             104,101]}],
                          0,false},
                         {text,"\verl_parse()"},
                         {sep,
                          [{text,
                            "5\"parse tree\" representation is a proper subset of the"}],
                          0,false},
                         {text,"\fsyntaxTree()"},
                         {sep,
                          [{text,
                            [15,114,101,112,114,101,115,101,110,116,97,116,
                             105,111,110,46]}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,"%Every abstract syntax tree node has a"}],
                          0,false},
                         {text,[4,116,121,112,101]},
                         {sep,
                          [{text,
                            [23,44,32,103,105,118,101,110,32,98,121,32,116,
                             104,101,32,102,117,110,99,116,105,111,110]}],
                          0,false},
                         {text,[6,116,121,112,101,47,49]},
                         {sep,
                          [{text,
                            [31,46,32,69,97,99,104,32,110,111,100,101,32,97,
                             108,115,111,32,104,97,115,32,97,115,115,111,99,
                             105,97,116,101,100]}],
                          0,false},
                         {text,"\nattributes"},
                         {sep,[{text,[5,59,32,115,101,101]}],0,false},
                         {text,"\vget_attrs/1"},
                         {sep,
                          [{text,
                            [26,102,111,114,32,100,101,116,97,105,108,115,46,
                             32,84,104,101,32,102,117,110,99,116,105,111,110,
                             115]}],
                          0,false},
                         {text,"\vmake_tree/2"},
                         {sep,[{text,[3,97,110,100]}],0,false},
                         {text,"\nsubtrees/1"},
                         {sep,
                          [{text,
                            "Xare generic constructor/decomposition functions for abstract syntax trees. The functions"}],
                          0,false},
                         {text,"\nabstract/1"},
                         {sep,[{text,[3,97,110,100]}],0,false},
                         {text,"\nconcrete/1"},
                         {sep,
                          [{text,
                            [129,99,111,110,118,101,114,116,32,98,101,116,119,
                             101,101,110,32,99,111,110,115,116,97,110,116,32,
                             69,114,108,97,110,103,32,116,101,114,109,115,32,
                             97,110,100,32,116,104,101,105,114,32,115,121,110,
                             116,97,99,116,105,99,32,114,101,112,114,101,115,
                             101,110,116,97,116,105,111,110,115,46,32,84,104,
                             101,32,115,101,116,32,111,102,32,115,121,110,116,
                             97,120,32,116,114,101,101,32,110,111,100,101,115,
                             32,105,115,32,101,120,116,101,110,115,105,98,108,
                             101,32,116,104,114,111,117,103,104,32,116,104,
                             101]}],
                          0,false},
                         {text,[6,116,114,101,101,47,50]},
                         {sep,[{text,"\tfunction."}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,"'A syntax tree can be transformed to the"}],
                          0,false},
                         {text,"\verl_parse()"},
                         {sep,
                          [{text,
                            [23,114,101,112,114,101,115,101,110,116,97,116,
                             105,111,110,32,119,105,116,104,32,116,104,101]}],
                          0,false},
                         {text,"\brevert/1"},
                         {sep,[{text,"\tfunction."}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{sep,
                  [{text,
                    [25,116,121,112,101,45,115,121,110,116,97,120,84,114,101,
                     101,65,116,116,114,105,98,117,116,101,115]},
                   {sep,
                    [{text,
                      [22,115,121,110,116,97,120,84,114,101,101,65,116,116,
                       114,105,98,117,116,101,115,40,41]}],
                    0,false}],
                  0,false}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [null,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "SThis is an abstract representation of syntax tree node attributes; see the function"}],
                        0,false},
                       {text,"\vget_attrs/1"},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,97,98,115,116,114,97,99,116,40,84,58,58,116,101,114,109,40,
               41,41,32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the syntax tree corresponding to an Erlang term."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"abstract-1\">abstract-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "8Returns the syntax tree corresponding to an Erlang term."}],
              0,false},
             {text,[6,42,84,101,114,109,42]},
             {sep,
              [{text,
                [305,109,117,115,116,32,98,101,32,97,32,108,105,116,101,114,
                 97,108,32,116,101,114,109,44,32,105,46,101,46,44,32,111,110,
                 101,32,116,104,97,116,32,99,97,110,32,98,101,32,114,101,112,
                 114,101,115,101,110,116,101,100,32,97,115,32,97,32,115,111,
                 117,114,99,101,32,99,111,100,101,32,108,105,116,101,114,97,
                 108,46,32,84,104,117,115,44,32,105,116,32,109,97,121,32,110,
                 111,116,32,99,111,110,116,97,105,110,32,97,32,112,114,111,99,
                 101,115,115,32,105,100,101,110,116,105,102,105,101,114,44,32,
                 112,111,114,116,44,32,114,101,102,101,114,101,110,99,101,32,
                 111,114,32,102,117,110,99,116,105,111,110,32,118,97,108,117,
                 101,32,97,115,32,97,32,115,117,98,116,101,114,109,46,32,84,
                 104,101,32,102,117,110,99,116,105,111,110,32,114,101,99,111,
                 103,110,105,115,101,115,32,112,114,105,110,116,97,98,108,101,
                 32,115,116,114,105,110,103,115,44,32,105,110,32,111,114,100,
                 101,114,32,116,111,32,103,101,116,32,97,32,99,111,109,112,97,
                 99,116,32,97,110,100,32,114,101,97,100,97,98,108,101,32,114,
                 101,112,114,101,115,101,110,116,97,116,105,111,110,46,32,69,
                 118,97,108,117,97,116,105,111,110,32,102,97,105,108,115,32,
                 119,105,116,104,32,114,101,97,115,111,110]}],
              0,false},
             {text,"\b*badarg*"},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,84,101,114,109,42]},
             {sep,
              [{text,
                [22,105,115,32,110,111,116,32,97,32,108,105,116,101,114,97,
                 108,32,116,101,114,109,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,99,111,110,99,114,101,116,101,47,49,93,40,35,99,111,110,
               99,114,101,116,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,105,115,95,108,105,116,101,114,97,108,47,49,93,40,35,105,
               115,95,108,105,116,101,114,97,108,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,97,100,100,95,97,110,110,40,65,58,58,116,101,114,109,40,41,
               44,32,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "DAppends the term Annotation to the list of user annotations of Node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"add_ann-2\">add_ann-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,65,112,112,101,110,100,115,32,116,104,101,32,116,101,114,
                 109]}],
              0,false},
             {text,"\f*Annotation*"},
             {sep,[{text,"\"to the list of user annotations of"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: this is equivalent to"}],0,false},
             {text,"-*set_ann(Node, [Annotation | get_ann(Node)])*"},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,103,101,116,95,97,110,110,47,49,93,40,35,103,101,116,95,
               97,110,110,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,115,101,116,95,97,110,110,47,50,93,40,35,115,101,116,95,
               97,110,110,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,97,100,100,95,112,111,115,116,99,111,109,109,101,110,116,
               115,40,67,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t], Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Appends Comments to the post-comments of Node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"add_postcomments-2\">add_postcomments-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,65,112,112,101,110,100,115]}],0,false},
             {text,"\n*Comments*"},
             {sep,
              [{text,
                [23,116,111,32,116,104,101,32,112,111,115,116,45,99,111,109,
                 109,101,110,116,115,32,111,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: This is equivalent to"}],0,false},
             {text,
              "<*set_postcomments(Node, get_postcomments(Node) ++ Comments)*"},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[add_precomments/2](#add_precomments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[get_postcomments/1](#get_postcomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[join_comments/2](#join_comments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[set_postcomments/2](#set_postcomments-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,97,100,100,95,112,114,101,99,111,109,109,101,110,116,115,40,
               67,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t], Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Appends Comments to the pre-comments of Node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"add_precomments-2\">add_precomments-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,65,112,112,101,110,100,115]}],0,false},
             {text,"\n*Comments*"},
             {sep,
              [{text,
                [22,116,111,32,116,104,101,32,112,114,101,45,99,111,109,109,
                 101,110,116,115,32,111,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: This is equivalent to"}],0,false},
             {text,
              ":*set_precomments(Node, get_precomments(Node) ++ Comments)*"},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[add_postcomments/2](#add_postcomments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[get_precomments/1](#get_precomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[join_comments/2](#join_comments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[set_precomments/2](#set_precomments-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,97,110,110,111,116,97,116,101,100,95,116,121,112,101,40,78,
               97,109,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Type::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Creates an abstract annotated type expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"annotated_type-2\">annotated_type-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "FCreates an abstract annotated type expression. The result represents \""}],
              0,false},
             {text,[14,42,78,97,109,101,32,58,58,32,84,121,112,101,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"/[annotated_type_body/1](#annotated_type_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[annotated_type_name/1](#annotated_type_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,97,110,110,111,116,97,116,101,100,95,116,121,112,101,95,98,
               111,100,121,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Returns the type subtrees of an annotated_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"annotated_type_body-1\">annotated_type_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [31,82,101,116,117,114,110,115,32,116,104,101,32,116,121,112,
                 101,32,115,117,98,116,114,101,101,115,32,111,102,32,97,110]}],
              0,false},
             {text,
              [16,42,97,110,110,111,116,97,116,101,100,95,116,121,112,101,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[annotated_type/2](#annotated_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,97,110,110,111,116,97,116,101,100,95,116,121,112,101,95,110,
               97,109,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the name subtree of an annotated_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"annotated_type_name-1\">annotated_type_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97,110]}],
              0,false},
             {text,
              [16,42,97,110,110,111,116,97,116,101,100,95,116,121,112,101,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[annotated_type/2](#annotated_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,97,112,112,108,105,99,97,116,105,111,110,40,79,112,101,114,
               97,116,111,114,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[14,44,32,65,114,103,117,109,101,110,116,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Creates an abstract function application expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"application-2\">application-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7Creates an abstract function application expression. If"}],
              0,false},
             {text,"\v*Arguments*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,65,49,44,32,46,46,46,44,32,65,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [23,42,79,112,101,114,97,116,111,114,40,65,49,44,32,46,46,46,44,
               32,65,110,41,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,97,112,112,108,105,99,97,116,105,111,110,47,51,93,40,35,
               97,112,112,108,105,99,97,116,105,111,110,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"3[application_arguments/1](#application_arguments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[application_operator/1](#application_operator-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,97,112,112,108,105,99,97,116,105,111,110,40,77,111,100,117,
               108,101,58,58,110,111,110,101,32,124]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Name::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[14,44,32,65,114,103,117,109,101,110,116,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Creates an abstract function application expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"application-3\">application-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7Creates an abstract function application expression. If"}],
              0,false},
             {text,"\b*Module*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [31,44,32,116,104,105,115,32,105,115,32,99,97,108,108,32,105,
                 115,32,101,113,117,105,118,97,108,101,110,116,32,116,111]}],
              0,false},
             {text,"\"*application(Function, Arguments)*"},
             {sep,
              [{text,
                [31,44,32,111,116,104,101,114,119,105,115,101,32,105,116,32,
                 105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,
                 111]}],
              0,false},
             {text,
              "<*application(module_qualifier(Module, Function), Arguments)*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,40,84,104,105,115,32,105,115,32,97,32,117,116,105,108,105,
               116,121,32,102,117,110,99,116,105,111,110,46,41]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,97,112,112,108,105,99,97,116,105,111,110,47,50,93,40,35,
               97,112,112,108,105,99,97,116,105,111,110,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[module_qualifier/2](#module_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [28,97,112,112,108,105,99,97,116,105,111,110,95,97,114,103,117,
               109,101,110,116,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "=Returns the list of argument subtrees of an application node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"application_arguments-1\">application_arguments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+Returns the list of argument subtrees of an"}],
              0,false},
             {text,"\r*application*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,97,112,112,108,105,99,97,116,105,111,110,47,50,93,40,35,
               97,112,112,108,105,99,97,116,105,111,110,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\eapplication_operator(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Returns the operator subtree of an application node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"application_operator-1\">application_operator-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"Returns the operator subtree of an"}],0,false},
             {text,"\r*application*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bNote: if"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,"\n*M:F(...)*"},
             {sep,
              [{text,"0\", then the result is the subtree representing \""}],
              0,false},
             {text,[5,42,77,58,70,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,97,112,112,108,105,99,97,116,105,111,110,47,50,93,40,35,
               97,112,112,108,105,99,97,116,105,111,110,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[module_qualifier/2](#module_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,97,114,105,116,121,95,113,117,97,108,105,102,105,101,114,40,
               66,111,100,121,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Arity::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Creates an abstract arity qualifier."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"arity_qualifier-2\">arity_qualifier-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "<Creates an abstract arity qualifier. The result represents \""}],
              0,false},
             {text,"\f*Body/Arity*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              "9[arity_qualifier_argument/1](#arity_qualifier_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[arity_qualifier_body/1](#arity_qualifier_body-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [31,97,114,105,116,121,95,113,117,97,108,105,102,105,101,114,95,
               97,114,103,117,109,101,110,116,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "DReturns the argument (the arity) subtree of an arity_qualifier node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "C<a name=\"arity_qualifier_argument-1\">arity_qualifier_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,".Returns the argument (the arity) subtree of an"}],
              0,false},
             {text,
              [17,42,97,114,105,116,121,95,113,117,97,108,105,102,105,101,114,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[arity_qualifier/2](#arity_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\earity_qualifier_body(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Returns the body subtree of an arity_qualifier node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"arity_qualifier_body-1\">arity_qualifier_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,98,111,100,
                 121,32,115,117,98,116,114,101,101,32,111,102,32,97,110]}],
              0,false},
             {text,
              [17,42,97,114,105,116,121,95,113,117,97,108,105,102,105,101,114,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[arity_qualifier/2](#arity_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text," atom(Name::atom() | string()) ->"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Creates an abstract atom literal."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"atom-1\">atom-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "eCreates an abstract atom literal. The print name of the atom is the character sequence represented by"}],
              0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![atom_literal/1](#atom_literal-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![atom_literal/2](#atom_literal-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[atom_name/1](#atom_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,97,116,111,109,95,118,97,108,117,101,47,49,93,40,35,97,
               116,111,109,95,118,97,108,117,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,97,116,111,109,47,50,93,40,35,105,115,95,97,
               116,111,109,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,97,116,111,109,95,108,105,116,101,114,97,108,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> string()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Returns the literal string represented by an atom node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"atom_literal-1\">atom_literal-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",Returns the literal string represented by an"}],
              0,false},
             {text,[6,42,97,116,111,109,42]},
             {sep,
              [{text,
                "lnode. This includes surrounding single-quote characters if necessary. Characters beyond 255 will be escaped."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [28,78,111,116,101,32,116,104,97,116,32,101,46,103,46,32,116,
                 104,101,32,114,101,115,117,108,116,32,111,102]}],
              0,false},
             {text,[14,42,97,116,111,109,40,34,120,92,110,121,34,41,42]},
             {sep,
              [{text,
                "Irepresents any and all of `x\\ny'', `x\\12y'', `x\\012y'' and `x\\^Jy\\''; see"}],
              0,false},
             {text,
              [21,91,115,116,114,105,110,103,47,49,93,40,35,115,116,114,105,
               110,103,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,97,116,111,109,47,49,93,40,35,97,116,111,109,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,115,116,114,105,110,103,47,49,93,40,35,115,116,114,105,
               110,103,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"$## atom_literal(Node, X2) -> term()\n"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Returns the literal string represented by an atom node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"atom_literal-2\">atom_literal-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",Returns the literal string represented by an"}],
              0,false},
             {text,[6,42,97,116,111,109,42]},
             {sep,
              [{text,
                [136,110,111,100,101,46,32,84,104,105,115,32,105,110,99,108,
                 117,100,101,115,32,115,117,114,114,111,117,110,100,105,110,
                 103,32,115,105,110,103,108,101,45,113,117,111,116,101,32,99,
                 104,97,114,97,99,116,101,114,115,32,105,102,32,110,101,99,
                 101,115,115,97,114,121,46,32,68,101,112,101,110,100,105,110,
                 103,32,111,110,32,116,104,101,32,101,110,99,111,100,105,110,
                 103,32,97,32,99,104,97,114,97,99,116,101,114,32,98,101,121,
                 111,110,100,32,50,53,53,32,119,105,108,108,32,98,101,32,101,
                 115,99,97,112,101,100,32,40]}],
              0,false},
             {text,"\b*latin1*"},
             {sep,
              [{text,
                [19,41,32,111,114,32,99,111,112,105,101,100,32,97,115,32,105,
                 115,32,40]}],
              0,false},
             {text,[6,42,117,116,102,56,42]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,97,116,111,109,47,49,93,40,35,97,116,111,109,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![atom_literal/1](#atom_literal-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,115,116,114,105,110,103,47,49,93,40,35,115,116,114,105,
               110,103,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,97,116,111,109,95,110,97,109,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> string()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Returns the printname of an atom node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"atom_name-1\">atom_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eReturns the printname of an"}],0,false},
             {text,[6,42,97,116,111,109,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,97,116,111,109,47,49,93,40,35,97,116,111,109,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,97,116,111,109,95,118,97,108,117,101,40,78,111,100,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> atom()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Returns the value represented by an atom node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"atom_value-1\">atom_value-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Returns the value represented by an"}],0,false},
             {text,[6,42,97,116,111,109,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,97,116,111,109,47,49,93,40,35,97,116,111,109,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,97,116,116,114,105,98,117,116,101,40,78,97,109,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Equivalent to attribute(Name, none)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"attribute-1\">attribute-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"%[attribute(Name, none)](#attribute-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,97,116,116,114,105,98,117,116,101,40,78,97,109,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [16,44,32,65,114,103,115,58,58,110,111,110,101,32,124,32,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Creates an abstract program attribute."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"attribute-2\">attribute-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")Creates an abstract program attribute. If"}],
              0,false},
             {text,"\v*Arguments*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,65,49,44,32,46,46,46,44,32,65,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [21,42,45,78,97,109,101,40,65,49,44,32,46,46,46,44,32,65,110,41,
               46,42]},
             {sep,
              [{text,
                [16,34,46,32,79,116,104,101,114,119,105,115,101,44,32,105,
                 102]}],
              0,false},
             {text,"\v*Arguments*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,"\b*-Name.*"},
             {sep,
              [{text,
                "S\". The latter form makes it possible to represent preprocessor directives such as \""}],
              0,false},
             {text,"\t*-endif.*"},
             {sep,[{text,"$\". Attributes are source code forms."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"3Note: The preprocessor macro definition directive \""}],
              0,false},
             {text,
              [22,42,45,100,101,102,105,110,101,40,78,97,109,101,44,32,66,111,
               100,121,41,46,42]},
             {sep,
              [{text,
                "<\" has relatively few requirements on the syntactical form of"}],
              0,false},
             {text,[6,42,66,111,100,121,42]},
             {sep,[{text,"%(viewed as a sequence of tokens). The"}],0,false},
             {text,[6,42,116,101,120,116,42]},
             {sep,[{text,"\enode type can be used for a"}],0,false},
             {text,[6,42,66,111,100,121,42]},
             {sep,[{text,"&that is not a normal Erlang construct."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[attribute/1](#attribute-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[attribute_arguments/1](#attribute_arguments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[attribute_name/1](#attribute_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,102,111,114,109,47,49,93,40,35,105,115,95,102,
               111,114,109,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,101,120,116,47,49,93,40,35,116,101,120,116,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,97,116,116,114,105,98,117,116,101,95,97,114,103,117,109,101,
               110,116,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> none | ["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "CReturns the list of argument subtrees of an attribute node, if any."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"attribute_arguments-1\">attribute_arguments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+Returns the list of argument subtrees of an"}],
              0,false},
             {text,"\v*attribute*"},
             {sep,
              [{text,
                [16,110,111,100,101,44,32,105,102,32,97,110,121,46,32,73,
                 102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,"\b*-Name.*"},
             {sep,
              [{text,
                [16,34,44,32,116,104,101,32,114,101,115,117,108,116,32,105,
                 115]}],
              0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [15,46,32,79,116,104,101,114,119,105,115,101,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [21,42,45,78,97,109,101,40,69,49,44,32,46,46,46,44,32,69,110,41,
               46,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,49,93,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[attribute/1](#attribute-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,97,116,116,114,105,98,117,116,101,95,110,97,109,101,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Returns the name subtree of an attribute node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"attribute_name-1\">attribute_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97,110]}],
              0,false},
             {text,"\v*attribute*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[attribute/1](#attribute-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,98,105,110,97,114,121,40,76,105,115,116,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Creates an abstract binary-object template."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [31,60,97,32,110,97,109,101,61,34,98,105,110,97,114,121,45,49,34,62,98,
        105,110,97,114,121,45,49,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,".Creates an abstract binary-object template. If"}],
              0,false},
             {text,"\b*Fields*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,70,49,44,32,46,46,46,44,32,70,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,[17,42,60,60,70,49,44,32,46,46,46,44,32,70,110,62,62,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![binary_field/2](#binary_field-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[binary_fields/1](#binary_fields-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,98,105,110,97,114,121,95,99,111,109,112,40,84,101,109,112,
               108,97,116,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Body::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Creates an abstract binary comprehension."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"binary_comp-2\">binary_comp-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",Creates an abstract binary comprehension. If"}],
              0,false},
             {text,[6,42,66,111,100,121,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [29,42,60,60,84,101,109,112,108,97,116,101,32,124,124,32,69,49,
               44,32,46,46,46,44,32,69,110,62,62,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[binary_comp_body/1](#binary_comp_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[binary_comp_template/1](#binary_comp_template-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[generator/2](#generator-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,98,105,110,97,114,121,95,99,111,109,112,95,98,111,100,121,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the list of body subtrees of a binary_comp node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"binary_comp_body-1\">binary_comp_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Returns the list of body subtrees of a"}],0,false},
             {text,"\r*binary_comp*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,98,105,110,97,114,121,95,99,111,109,112,47,50,93,40,35,
               98,105,110,97,114,121,95,99,111,109,112,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\ebinary_comp_template(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the template subtree of a binary_comp node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"binary_comp_template-1\">binary_comp_template-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Returns the template subtree of a"}],0,false},
             {text,"\r*binary_comp*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,98,105,110,97,114,121,95,99,111,109,112,47,50,93,40,35,
               98,105,110,97,114,121,95,99,111,109,112,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,98,105,110,97,114,121,95,102,105,101,108,100,40,66,111,100,
               121,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Equivalent to binary_field(Body, [])."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"binary_field-1\">binary_field-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,")[binary_field(Body, [])](#binary_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,98,105,110,97,114,121,95,102,105,101,108,100,40,66,111,100,
               121,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\n, Types::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Creates an abstract binary template field."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"binary_field-2\">binary_field-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"-Creates an abstract binary template field. If"}],
              0,false},
             {text,[7,42,84,121,112,101,115,42]},
             {sep,
              [{text,"1is the empty list, the result simply represents \""}],
              0,false},
             {text,[6,42,66,111,100,121,42]},
             {sep,
              [{text,
                [16,34,44,32,111,116,104,101,114,119,105,115,101,44,32,105,
                 102]}],
              0,false},
             {text,[7,42,84,121,112,101,115,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,84,49,44,32,46,46,46,44,32,84,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,[16,42,66,111,100,121,47,84,49,45,46,46,46,45,84,110,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,98,105,110,97,114,121,47,49,93,40,35,98,105,110,97,114,
               121,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![binary_field/1](#binary_field-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![binary_field/3](#binary_field-3)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[binary_field_body/1](#binary_field_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[binary_field_size/1](#binary_field_size-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"-[binary_field_types/1](#binary_field_types-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,98,105,110,97,114,121,95,102,105,101,108,100,40,66,111,100,
               121,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[14,44,32,83,105,122,101,58,58,110,111,110,101,32,124]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\n, Types::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Creates an abstract binary template field."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"binary_field-3\">binary_field-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"-Creates an abstract binary template field. If"}],
              0,false},
             {text,[6,42,83,105,122,101,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [25,44,32,116,104,105,115,32,105,115,32,101,113,117,105,118,
                 97,108,101,110,116,32,116,111,32,34]}],
              0,false},
             {text,"\e*binary_field(Body, Types)*"},
             {sep,[{text,"\"\", otherwise it is equivalent to \""}],0,false},
             {text,"1*binary_field(size_qualifier(Body, Size), Types)*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,40,84,104,105,115,32,105,115,32,97,32,117,116,105,108,105,
               116,121,32,102,117,110,99,116,105,111,110,46,41]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,98,105,110,97,114,121,47,49,93,40,35,98,105,110,97,114,
               121,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![binary_field/2](#binary_field-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[size_qualifier/2](#size_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,98,105,110,97,114,121,95,102,105,101,108,100,95,98,111,100,
               121,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Returns the body subtree of a binary_field."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"binary_field_body-1\">binary_field_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,98,111,100,
                 121,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,[14,42,98,105,110,97,114,121,95,102,105,101,108,100,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![binary_field/2](#binary_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,98,105,110,97,114,121,95,102,105,101,108,100,95,115,105,122,
               101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> none |"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "BReturns the size specifier subtree of a binary_field node, if any."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"binary_field_size-1\">binary_field_size-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'Returns the size specifier subtree of a"}],0,false},
             {text,[14,42,98,105,110,97,114,121,95,102,105,101,108,100,42]},
             {sep,
              [{text,
                [16,110,111,100,101,44,32,105,102,32,97,110,121,46,32,73,
                 102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,"\v*Body:Size*"},
             {sep,[{text,[6,34,32,111,114,32,34]}],0,false},
             {text,
              [23,42,66,111,100,121,58,83,105,122,101,47,84,49,44,32,46,46,46,
               44,32,84,110,42]},
             {sep,
              [{text,
                [16,34,44,32,116,104,101,32,114,101,115,117,108,116,32,105,
                 115]}],
              0,false},
             {text,[6,42,83,105,122,101,42]},
             {sep,[{text,"\v, otherwise"}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,40,84,104,105,115,32,105,115,32,97,32,117,116,105,108,105,
               116,121,32,102,117,110,99,116,105,111,110,46,41]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![binary_field/2](#binary_field-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![binary_field/3](#binary_field-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,98,105,110,97,114,121,95,102,105,101,108,100,95,116,121,112,
               101,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "CReturns the list of type-specifier subtrees of a binary_field node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"binary_field_types-1\">binary_field_types-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0Returns the list of type-specifier subtrees of a"}],
              0,false},
             {text,[14,42,98,105,110,97,114,121,95,102,105,101,108,100,42]},
             {sep,[{text,"\bnode. If"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[17,42,46,46,46,47,84,49,44,32,46,46,46,44,32,84,110,42]},
             {sep,
              [{text,
                [16,34,44,32,116,104,101,32,114,101,115,117,108,116,32,105,
                 115]}],
              0,false},
             {text,[15,42,91,84,49,44,32,46,46,46,44,32,84,110,93,42]},
             {sep,
              [{text,"), otherwise the result is the empty list."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![binary_field/2](#binary_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,98,105,110,97,114,121,95,102,105,101,108,100,115,40,78,111,
               100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Returns the list of field subtrees of a binary node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"binary_fields-1\">binary_fields-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'Returns the list of field subtrees of a"}],0,false},
             {text,"\b*binary*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,98,105,110,97,114,121,47,49,93,40,35,98,105,110,97,114,
               121,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![binary_field/2](#binary_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,98,105,110,97,114,121,95,103,101,110,101,114,97,116,111,114,
               40,80,97,116,116,101,114,110,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Body::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Creates an abstract binary_generator."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"binary_generator-2\">binary_generator-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "=Creates an abstract binary_generator. The result represents \""}],
              0,false},
             {text,
              [17,42,80,97,116,116,101,114,110,32,60,45,32,66,111,100,121,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,98,105,110,97,114,121,95,99,111,109,112,47,50,93,40,35,
               98,105,110,97,114,121,95,99,111,109,112,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"3[binary_generator_body/1](#binary_generator_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "9[binary_generator_pattern/1](#binary_generator_pattern-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[list_comp/2](#list_comp-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [28,98,105,110,97,114,121,95,103,101,110,101,114,97,116,111,114,
               95,98,111,100,121,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Returns the body subtree of a generator node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"binary_generator_body-1\">binary_generator_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,98,111,100,
                 121,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\v*generator*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[binary_generator/2](#binary_generator-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [31,98,105,110,97,114,121,95,103,101,110,101,114,97,116,111,114,
               95,112,97,116,116,101,114,110,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Returns the pattern subtree of a generator node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "C<a name=\"binary_generator_pattern-1\">binary_generator_pattern-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," Returns the pattern subtree of a"}],0,false},
             {text,"\v*generator*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[binary_generator/2](#binary_generator-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,98,105,116,115,116,114,105,110,103,95,116,121,112,101,40,77,
               58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[5,44,32,78,58,58]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Creates an abstract bitstring type."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"bitstring_type-2\">bitstring_type-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ";Creates an abstract bitstring type. The result represents \""}],
              0,false},
             {text,[16,42,60,60,95,58,77,44,32,95,58,95,42,78,62,62,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[bitstring_type_m/1](#bitstring_type_m-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[bitstring_type_n/1](#bitstring_type_n-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,98,105,116,115,116,114,105,110,103,95,116,121,112,101,95,
               109,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ">Returns the number of start bits, M, of a bitstring_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"bitstring_type_m-1\">bitstring_type_m-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Returns the number of start bits,"}],0,false},
             {text,[3,42,77,42]},
             {sep,[{text,[6,44,32,111,102,32,97]}],0,false},
             {text,
              [16,42,98,105,116,115,116,114,105,110,103,95,116,121,112,101,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[bitstring_type/2](#bitstring_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,98,105,116,115,116,114,105,110,103,95,116,121,112,101,95,
               110,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Returns the segment size, N, of a bitstring_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"bitstring_type_n-1\">bitstring_type_n-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [25,82,101,116,117,114,110,115,32,116,104,101,32,115,101,103,
                 109,101,110,116,32,115,105,122,101,44]}],
              0,false},
             {text,[3,42,78,42]},
             {sep,[{text,[6,44,32,111,102,32,97]}],0,false},
             {text,
              [16,42,98,105,116,115,116,114,105,110,103,95,116,121,112,101,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[bitstring_type/2](#bitstring_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,98,108,111,99,107,95,101,120,112,114,40,66,111,100,121,58,
               58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Creates an abstract block expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"block_expr-1\">block_expr-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Creates an abstract block expression. If"}],
              0,false},
             {text,[6,42,66,111,100,121,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,66,49,44,32,46,46,46,44,32,66,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [23,42,98,101,103,105,110,32,66,49,44,32,46,46,46,44,32,66,110,
               32,101,110,100,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[block_expr_body/1](#block_expr_body-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,98,108,111,99,107,95,101,120,112,114,95,98,111,100,121,40,
               78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Returns the list of body subtrees of a block_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"block_expr_body-1\">block_expr_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Returns the list of body subtrees of a"}],0,false},
             {text,"\f*block_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,98,108,111,99,107,95,101,120,112,114,47,49,93,40,35,98,
               108,111,99,107,95,101,120,112,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,99,97,115,101,95,101,120,112,114,40,65,114,103,117,109,101,
               110,116,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\f, Clauses::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Creates an abstract case-expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"case_expr-2\">case_expr-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'Creates an abstract case-expression. If"}],0,false},
             {text,"\t*Clauses*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,67,49,44,32,46,46,46,44,32,67,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,"\"*case Argument of C1; ...; Cn end*"},
             {sep,
              [{text,
                [24,34,46,32,77,111,114,101,32,101,120,97,99,116,108,121,44,
                 32,105,102,32,101,97,99,104]}],
              0,false},
             {text,[4,42,67,105,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[15,42,40,80,105,41,32,71,105,32,45,62,32,66,105,42]},
             {sep,
              [{text,
                [31,34,44,32,116,104,101,110,32,116,104,101,32,114,101,115,
                 117,108,116,32,114,101,112,114,101,115,101,110,116,115,32,
                 34]}],
              0,false},
             {text,"4*case Argument of P1 G1 -> B1; ...; Pn Gn -> Bn end*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"-[case_expr_argument/1](#case_expr_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[case_expr_clauses/1](#case_expr_clauses-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[cond_expr/1](#cond_expr-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,102,95,101,120,112,114,47,49,93,40,35,105,102,95,101,
               120,112,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,99,97,115,101,95,101,120,112,114,95,97,114,103,117,109,101,
               110,116,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Returns the argument subtree of a case_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"case_expr_argument-1\">case_expr_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Returns the argument subtree of a"}],0,false},
             {text,"\v*case_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[case_expr/2](#case_expr-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,99,97,115,101,95,101,120,112,114,95,99,108,97,117,115,101,
               115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the list of clause subtrees of a case_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"case_expr_clauses-1\">case_expr_clauses-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Returns the list of clause subtrees of a"}],
              0,false},
             {text,"\v*case_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[case_expr/2](#case_expr-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,99,97,116,99,104,95,101,120,112,114,40,69,120,112,114,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Creates an abstract catch-expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"catch_expr-1\">catch_expr-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "=Creates an abstract catch-expression. The result represents \""}],
              0,false},
             {text,"\f*catch Expr*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[catch_expr_body/1](#catch_expr_body-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,99,97,116,99,104,95,101,120,112,114,95,98,111,100,121,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Returns the body subtree of a catch_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"catch_expr_body-1\">catch_expr_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,98,111,100,
                 121,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\f*catch_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,99,97,116,99,104,95,101,120,112,114,47,49,93,40,35,99,97,
               116,99,104,95,101,120,112,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,99,104,97,114,40,67,104,97,114,58,58,99,104,97,114,40,41,41,
               32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Creates an abstract character literal."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"char-1\">char-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ">Creates an abstract character literal. The result represents \""}],
              0,false},
             {text,[7,42,36,78,97,109,101,42]},
             {sep,[{text,"\b\", where"}],0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,
              [{text,
                [14,99,111,114,114,101,115,112,111,110,100,115,32,116,111]}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "nNote: the literal corresponding to a particular character value is not uniquely defined. E.g., the character \""}],
              0,false},
             {text,[3,42,97,42]},
             {sep,
              [{text,
                [26,34,32,99,97,110,32,98,101,32,119,114,105,116,116,101,110,
                 32,98,111,116,104,32,97,115,32,34]}],
              0,false},
             {text,[4,42,36,97,42]},
             {sep,[{text,[7,34,32,97,110,100,32,34]}],0,false},
             {text,[7,42,36,92,49,52,49,42]},
             {sep,
              [{text,"*\", and a Tab character can be written as \""}],
              0,false},
             {text,[6,42,36,92,49,49,42]},
             {sep,[{text,[4,34,44,32,34]}],0,false},
             {text,[7,42,36,92,48,49,49,42]},
             {sep,[{text,[6,34,32,111,114,32,34]}],0,false},
             {text,[5,42,36,92,116,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![char_literal/1](#char_literal-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![char_literal/2](#char_literal-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,99,104,97,114,95,118,97,108,117,101,47,49,93,40,35,99,
               104,97,114,95,118,97,108,117,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,99,104,97,114,47,50,93,40,35,105,115,95,99,
               104,97,114,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,99,104,97,114,95,108,105,116,101,114,97,108,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [19,62,32,110,111,110,101,109,112,116,121,95,115,116,114,105,
               110,103,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Returns the literal string represented by a char node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"char_literal-1\">char_literal-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+Returns the literal string represented by a"}],
              0,false},
             {text,[6,42,99,104,97,114,42]},
             {sep,[{text,"!node. This includes the leading \""}],0,false},
             {text,[3,42,36,42]},
             {sep,
              [{text,"3\" character. Characters beyond 255 will be escaped."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,99,104,97,114,47,49,93,40,35,99,104,97,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,99,104,97,114,95,108,105,116,101,114,97,108,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[6,44,32,88,50,58,58]}],0,false},
           {sep,[{text,"\nencoding()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [19,62,32,110,111,110,101,109,112,116,121,95,115,116,114,105,
               110,103,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Returns the literal string represented by a char node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"char_literal-2\">char_literal-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+Returns the literal string represented by a"}],
              0,false},
             {text,[6,42,99,104,97,114,42]},
             {sep,[{text,"!node. This includes the leading \""}],0,false},
             {text,[3,42,36,42]},
             {sep,
              [{text,
                "O\" character. Depending on the encoding a character beyond 255 will be escaped ("}],
              0,false},
             {text,"\b*latin1*"},
             {sep,
              [{text,
                [19,41,32,111,114,32,99,111,112,105,101,100,32,97,115,32,105,
                 115,32,40]}],
              0,false},
             {text,[6,42,117,116,102,56,42]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,99,104,97,114,47,49,93,40,35,99,104,97,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,99,104,97,114,95,118,97,108,117,101,40,78,111,100,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> char()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Returns the value represented by a char node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"char_value-1\">char_value-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"Returns the value represented by a"}],0,false},
             {text,[6,42,99,104,97,114,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,99,104,97,114,47,49,93,40,35,99,104,97,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,99,108,97,115,115,95,113,117,97,108,105,102,105,101,114,40,
               67,108,97,115,115,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Body::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Creates an abstract class qualifier."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"class_qualifier-2\">class_qualifier-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "<Creates an abstract class qualifier. The result represents \""}],
              0,false},
             {text,"\f*Class:Body*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              "9[class_qualifier_argument/1](#class_qualifier_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[class_qualifier_body/1](#class_qualifier_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "=[class_qualifier_stacktrace/1](#class_qualifier_stacktrace-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,116,114,121,95,101,120,112,114,47,52,93,40,35,116,114,
               121,95,101,120,112,114,45,52,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,99,108,97,115,115,95,113,117,97,108,105,102,105,101,114,40,
               67,108,97,115,115,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Body::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[14,44,32,83,116,97,99,107,116,114,97,99,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Creates an abstract class qualifier."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"class_qualifier-3\">class_qualifier-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "<Creates an abstract class qualifier. The result represents \""}],
              0,false},
             {text,
              [23,42,67,108,97,115,115,58,66,111,100,121,58,83,116,97,99,107,
               116,114,97,99,101,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              "9[class_qualifier_argument/1](#class_qualifier_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[class_qualifier_body/1](#class_qualifier_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,116,114,121,95,101,120,112,114,47,52,93,40,35,116,114,
               121,95,101,120,112,114,45,52,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [31,99,108,97,115,115,95,113,117,97,108,105,102,105,101,114,95,
               97,114,103,117,109,101,110,116,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "CReturns the argument (the class) subtree of a class_qualifier node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "C<a name=\"class_qualifier_argument-1\">class_qualifier_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"-Returns the argument (the class) subtree of a"}],
              0,false},
             {text,
              [17,42,99,108,97,115,115,95,113,117,97,108,105,102,105,101,114,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[class_qualifier/2](#class_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\eclass_qualifier_body(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the body subtree of a class_qualifier node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"class_qualifier_body-1\">class_qualifier_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,98,111,100,
                 121,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [17,42,99,108,97,115,115,95,113,117,97,108,105,102,105,101,114,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[class_qualifier/2](#class_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"!class_qualifier_stacktrace(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Returns the stacktrace subtree of a class_qualifier node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "G<a name=\"class_qualifier_stacktrace-1\">class_qualifier_stacktrace-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Returns the stacktrace subtree of a"}],0,false},
             {text,
              [17,42,99,108,97,115,115,95,113,117,97,108,105,102,105,101,114,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[class_qualifier/2](#class_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,99,108,97,117,115,101,40,71,117,97,114,100,58,58]}],
            0,false},
           {sep,[{text,[7,103,117,97,114,100,40,41]}],0,false},
           {sep,[{text,"\t, Body::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Equivalent to clause([], Guard, Body)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [31,60,97,32,110,97,109,101,61,34,99,108,97,117,115,101,45,50,34,62,99,
        108,97,117,115,101,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"$[clause([], Guard, Body)](#clause-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,99,108,97,117,115,101,40,80,97,116,116,101,114,110,115,58,
               58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\n], Guard::"}],0,false},
           {sep,[{text,[7,103,117,97,114,100,40,41]}],0,false},
           {sep,[{text,"\t, Body::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,[{sep,[{text,"\eCreates an abstract clause."}],0,false}],0,true},
       null},
      null}},
    {sep,
     [{text,
       [31,60,97,32,110,97,109,101,61,34,99,108,97,117,115,101,45,51,34,62,99,
        108,97,117,115,101,45,51,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,
                 97,99,116,32,99,108,97,117,115,101,46,32,73,102]}],
              0,false},
             {text,"\n*Patterns*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,80,49,44,32,46,46,46,44,32,80,110,93,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[6,42,66,111,100,121,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,66,49,44,32,46,46,46,44,32,66,109,93,42]},
             {sep,[{text,"\t, then if"}],0,false},
             {text,[7,42,71,117,97,114,100,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [30,42,40,80,49,44,32,46,46,46,44,32,80,110,41,32,45,62,32,66,
               49,44,32,46,46,46,44,32,66,109,42]},
             {sep,
              [{text,
                [20,34,44,32,111,116,104,101,114,119,105,115,101,44,32,117,
                 110,108,101,115,115]}],
              0,false},
             {text,[7,42,71,117,97,114,100,42]},
             {sep,[{text,"\"is a list, the result represents \""}],0,false},
             {text,")*(P1, ..., Pn) when Guard -> B1, ..., Bm*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,70,111,114,32,115,105,109,112,108,105,99,105,116,121,44,
                 32,116,104,101]}],
              0,false},
             {text,[7,42,71,117,97,114,100,42]},
             {sep,
              [{text,"*argument may also be any of the following:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,"\rAn empty list"}],0,false},
            {text,[4,42,91,93,42]},
            {sep,
             [{text,
               [31,46,32,84,104,105,115,32,105,115,32,101,113,117,105,118,97,
                108,101,110,116,32,116,111,32,112,97,115,115,105,110,103]}],
             0,false},
            {text,[6,42,110,111,110,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               [15,65,32,110,111,110,101,109,112,116,121,32,108,105,115,116]}],
             0,false},
            {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,106,93,42]},
            {sep,
             [{text,".of syntax trees. This is equivalent to passing"}],
             0,false},
            {text,
             [28,42,99,111,110,106,117,110,99,116,105,111,110,40,91,69,49,44,
              32,46,46,46,44,32,69,106,93,41,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,"(A nonempty list of lists of syntax trees"}],0,false},
           {text,"/*[[E1_1, ..., E1_k1], ..., [Ej_1, ..., Ej_kj]]*"},
           {sep,[{text," , which is equivalent to passing"}],0,false},
           {text,
            "V*disjunction([conjunction([E1_1, ..., E1_k1]), ..., conjunction([Ej_1, ..., Ej_kj])])*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{sep,[null],0,true},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,99,108,97,117,115,101,47,50,93,40,35,99,108,97,117,115,
               101,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,99,108,97,117,115,101,95,98,111,100,121,47,49,93,40,35,
               99,108,97,117,115,101,95,98,111,100,121,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![clause_guard/1](#clause_guard-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[clause_patterns/1](#clause_patterns-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,99,108,97,117,115,101,95,98,111,100,121,40,78,111,100,101,
               58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Return the list of body subtrees of a clause node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"clause_body-1\">clause_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"%Return the list of body subtrees of a"}],0,false},
             {text,"\b*clause*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,99,108,97,117,115,101,95,103,117,97,114,100,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> none |"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the guard subtree of a clause node, if any."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"clause_guard-1\">clause_guard-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,103,117,97,
                 114,100,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\b*clause*"},
             {sep,
              [{text,
                [16,110,111,100,101,44,32,105,102,32,97,110,121,46,32,73,
                 102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,")*(P1, ..., Pn) when Guard -> B1, ..., Bm*"},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[7,42,71,117,97,114,100,42]},
             {sep,[{text,"%is returned. Otherwise, the result is"}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,99,108,97,117,115,101,95,112,97,116,116,101,114,110,115,40,
               78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Returns the list of pattern subtrees of a clause node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"clause_patterns-1\">clause_patterns-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")Returns the list of pattern subtrees of a"}],
              0,false},
             {text,"\b*clause*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [31,99,111,109,109,101,110,116,40,83,116,114,105,110,103,115,58,
               58,91,115,116,114,105,110,103,40,41,93,41,32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Equivalent to comment(none, Strings)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"comment-1\">comment-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"$[comment(none, Strings)](#comment-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\rcomment(Pad::"}],0,false},
           {sep,[{text,"\tpadding()"}],0,false},
           {sep,
            [{text,
              [24,44,32,83,116,114,105,110,103,115,58,58,91,115,116,114,105,
               110,103,40,41,93,41,32,45]}],
            0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "<Creates an abstract comment with the given padding and text."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"comment-2\">comment-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?Creates an abstract comment with the given padding and text. If"}],
              0,false},
             {text,"\t*Strings*"},
             {sep,
              [{text,
                [26,105,115,32,97,32,40,112,111,115,115,105,98,108,121,32,101,
                 109,112,116,121,41,32,108,105,115,116]}],
              0,false},
             {text,
              [23,42,91,34,84,120,116,49,34,44,32,46,46,46,44,32,34,84,120,
               116,78,34,93,42]},
             {sep,
              [{text,",, the result represents the source code text"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [31,10,32,32,32,32,32,37,84,120,116,49,10,32,32,32,32,32,46,46,
               46,10,32,32,32,32,32,37,84,120,116,78]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\t*Padding*"},
             {sep,
              [{text,
                [147,115,116,97,116,101,115,32,116,104,101,32,110,117,109,98,
                 101,114,32,111,102,32,101,109,112,116,121,32,99,104,97,114,
                 97,99,116,101,114,32,112,111,115,105,116,105,111,110,115,32,
                 116,111,32,116,104,101,32,108,101,102,116,32,111,102,32,116,
                 104,101,32,99,111,109,109,101,110,116,32,115,101,112,97,114,
                 97,116,105,110,103,32,105,116,32,104,111,114,105,122,111,110,
                 116,97,108,108,121,32,102,114,111,109,32,115,111,117,114,99,
                 101,32,99,111,100,101,32,111,110,32,116,104,101,32,115,97,
                 109,101,32,108,105,110,101,32,40,105,102,32,97,110,121,41,46,
                 32,73,102]}],
              0,false},
             {text,"\t*Padding*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,[{text,"', a default positive number is used. If"}],0,false},
             {text,"\t*Padding*"},
             {sep,
              [{text,
                "|is an integer less than 1, there should be no separating space. Comments are in themselves regarded as source program forms."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,99,111,109,109,101,110,116,47,49,93,40,35,99,111,109,109,
               101,110,116,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,102,111,114,109,47,49,93,40,35,105,115,95,102,
               111,114,109,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,99,111,109,109,101,110,116,95,112,97,100,100,105,110,103,40,
               78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\tpadding()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Returns the amount of padding before the comment, or none."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"comment_padding-1\">comment_padding-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"4Returns the amount of padding before the comment, or"}],
              0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                "6. The latter means that a default padding may be used."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,99,111,109,109,101,110,116,95,116,101,120,116,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\f> [string()]"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Returns the lines of text of the abstract comment."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"comment_text-1\">comment_text-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"2Returns the lines of text of the abstract comment."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,99,111,109,112,97,99,116,95,108,105,115,116,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ";Yields the most compact form for an abstract list skeleton."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"compact_list-1\">compact_list-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ZYields the most compact form for an abstract list skeleton. The result either represents \""}],
              0,false},
             {text,
              [22,42,91,69,49,44,32,46,46,46,44,32,69,110,32,124,32,84,97,105,
               108,93,42]},
             {sep,[{text,"\b\", where"}],0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,
              [{text,"-is not a list skeleton, or otherwise simply \""}],
              0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,
              [{text,
                [29,34,46,32,65,110,110,111,116,97,116,105,111,110,115,32,111,
                 110,32,115,117,98,116,114,101,101,115,32,111,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                "athat represent list skeletons may be lost, but comments will be propagated to the result. Returns"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\titself if"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"#does not represent a list skeleton."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[normalize_list/1](#normalize_list-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [15,99,111,110,99,114,101,116,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> term()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Returns the Erlang term represented by a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"concrete-1\">concrete-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "RReturns the Erlang term represented by a syntax tree. Evaluation fails with reason"}],
              0,false},
             {text,"\b*badarg*"},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\"does not represent a literal term."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [147,78,111,116,101,58,32,67,117,114,114,101,110,116,108,121,
                 44,32,116,104,101,32,115,101,116,32,111,102,32,115,121,110,
                 116,97,120,32,116,114,101,101,115,32,119,104,105,99,104,32,
                 104,97,118,101,32,97,32,99,111,110,99,114,101,116,101,32,114,
                 101,112,114,101,115,101,110,116,97,116,105,111,110,32,105,
                 115,32,108,97,114,103,101,114,32,116,104,97,110,32,116,104,
                 101,32,115,101,116,32,111,102,32,116,114,101,101,115,32,119,
                 104,105,99,104,32,99,97,110,32,98,101,32,98,117,105,108,116,
                 32,117,115,105,110,103,32,116,104,101,32,102,117,110,99,116,
                 105,111,110]}],
              0,false},
             {text,
              [25,91,97,98,115,116,114,97,99,116,47,49,93,40,35,97,98,115,116,
               114,97,99,116,45,49,41]},
             {sep,
              [{text,
                "@. An abstract character will be concretised as an integer, while"}],
              0,false},
             {text,
              [25,91,97,98,115,116,114,97,99,116,47,49,93,40,35,97,98,115,116,
               114,97,99,116,45,49,41]},
             {sep,
              [{text,
                "Gdoes not at present yield an abstract character for any input. (Use the"}],
              0,false},
             {text,
              [17,91,99,104,97,114,47,49,93,40,35,99,104,97,114,45,49,41]},
             {sep,
              [{text,
                "5function to explicitly create an abstract character.)"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[5,78,111,116,101,58]}],0,false},
             {text,
              [17,42,97,114,105,116,121,95,113,117,97,108,105,102,105,101,114,
               42]},
             {sep,
              [{text,
                [331,110,111,100,101,115,32,97,114,101,32,114,101,99,111,103,
                 110,105,122,101,100,46,32,84,104,105,115,32,105,115,32,116,
                 111,32,102,111,108,108,111,119,32,84,104,101,32,69,114,108,
                 97,110,103,32,80,97,114,115,101,114,32,119,104,101,110,32,
                 105,116,32,99,111,109,101,115,32,116,111,32,119,105,108,100,
                 32,97,116,116,114,105,98,117,116,101,115,58,32,98,111,116,
                 104,32,123,70,44,32,65,125,32,97,110,100,32,70,47,65,32,97,
                 114,101,32,114,101,99,111,103,110,105,122,101,100,44,32,119,
                 104,105,99,104,32,109,97,107,101,115,32,105,116,32,112,111,
                 115,115,105,98,108,101,32,116,111,32,116,117,114,110,32,119,
                 105,108,100,32,97,116,116,114,105,98,117,116,101,115,32,105,
                 110,116,111,32,114,101,99,111,103,110,105,122,101,100,32,97,
                 116,116,114,105,98,117,116,101,115,32,119,105,116,104,111,
                 117,116,32,97,116,32,116,104,101,32,115,97,109,101,32,116,
                 105,109,101,32,109,97,107,105,110,103,32,105,116,32,105,109,
                 112,111,115,115,105,98,108,101,32,116,111,32,99,111,109,112,
                 105,108,101,32,102,105,108,101,115,32,117,115,105,110,103,32,
                 116,104,101,32,110,101,119,32,115,121,110,116,97,120,32,119,
                 105,116,104,32,116,104,101,32,111,108,100,32,118,101,114,115,
                 105,111,110,32,111,102,32,116,104,101,32,69,114,108,97,110,
                 103,32,67,111,109,112,105,108,101,114,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,97,98,115,116,114,97,99,116,47,49,93,40,35,97,98,115,116,
               114,97,99,116,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,99,104,97,114,47,49,93,40,35,99,104,97,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,105,115,95,108,105,116,101,114,97,108,47,49,93,40,35,105,
               115,95,108,105,116,101,114,97,108,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,99,111,110,100,95,101,120,112,114,40,67,108,97,117,115,101,
               115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Creates an abstract cond-expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"cond_expr-1\">cond_expr-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'Creates an abstract cond-expression. If"}],0,false},
             {text,"\t*Clauses*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,67,49,44,32,46,46,46,44,32,67,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [22,42,99,111,110,100,32,67,49,59,32,46,46,46,59,32,67,110,32,
               101,110,100,42]},
             {sep,
              [{text,
                [24,34,46,32,77,111,114,101,32,101,120,97,99,116,108,121,44,
                 32,105,102,32,101,97,99,104]}],
              0,false},
             {text,[4,42,67,105,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,"\r*() Ei -> Bi*"},
             {sep,
              [{text,
                [31,34,44,32,116,104,101,110,32,116,104,101,32,114,101,115,
                 117,108,116,32,114,101,112,114,101,115,101,110,116,115,32,
                 34]}],
              0,false},
             {text,"\"*cond E1 -> B1; ...; En -> Bn end*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[case_expr/2](#case_expr-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[cond_expr_clauses/1](#cond_expr_clauses-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,99,111,110,100,95,101,120,112,114,95,99,108,97,117,115,101,
               115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the list of clause subtrees of a cond_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"cond_expr_clauses-1\">cond_expr_clauses-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Returns the list of clause subtrees of a"}],
              0,false},
             {text,"\v*cond_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[cond_expr/1](#cond_expr-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,99,111,110,106,117,110,99,116,105,111,110,40,84,101,115,116,
               115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text," Creates an abstract conjunction."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"conjunction-1\">conjunction-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Creates an abstract conjunction. If"}],0,false},
             {text,[6,42,76,105,115,116,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,"\r*E1, ..., En*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[conjunction_body/1](#conjunction_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,100,105,115,106,117,110,99,116,105,111,110,47,49,93,40,
               35,100,105,115,106,117,110,99,116,105,111,110,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,99,111,110,106,117,110,99,116,105,111,110,95,98,111,100,121,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the list of body subtrees of a conjunction node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"conjunction_body-1\">conjunction_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Returns the list of body subtrees of a"}],0,false},
             {text,"\r*conjunction*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,99,111,110,106,117,110,99,116,105,111,110,47,49,93,40,35,
               99,111,110,106,117,110,99,116,105,111,110,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\vcons(Head::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Tail::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"*\"Optimising\" list skeleton cons operation."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"cons-2\">cons-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "c\"Optimising\" list skeleton cons operation. Creates an abstract list skeleton whose first element is"}],
              0,false},
             {text,[6,42,72,101,97,100,42]},
             {sep,
              [{text,
                [29,97,110,100,32,119,104,111,115,101,32,116,97,105,108,32,99,
                 111,114,114,101,115,112,111,110,100,115,32,116,111]}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,
              [{text,
                [20,46,32,84,104,105,115,32,105,115,32,115,105,109,105,108,97,
                 114,32,116,111]}],
              0,false},
             {text,
              [20,42,108,105,115,116,40,91,72,101,97,100,93,44,32,84,97,105,
               108,41,42]},
             {sep,[{text,"\r, except that"}],0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,[{text,"\nmay not be"}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                ">, and that the result does not necessarily represent exactly \""}],
              0,false},
             {text,[15,42,91,72,101,97,100,32,124,32,84,97,105,108,93,42]},
             {sep,
              [{text,
                [24,34,44,32,98,117,116,32,109,97,121,32,100,101,112,101,110,
                 100,32,111,110,32,116,104,101]}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,
              [{text,
                [17,115,117,98,116,114,101,101,46,32,69,46,103,46,44,32,105,
                 102]}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,[{text,"\nrepresents"}],0,false},
             {text,"\b*[X, Y]*"},
             {sep,
              [{text,
                [28,44,32,116,104,101,32,114,101,115,117,108,116,32,109,97,
                 121,32,114,101,112,114,101,115,101,110,116,32,34]}],
              0,false},
             {text,[14,42,91,72,101,97,100,44,32,88,44,32,89,93,42]},
             {sep,
              [{text,
                [16,34,44,32,114,97,116,104,101,114,32,116,104,97,110,32,34]}],
              0,false},
             {text,[17,42,91,72,101,97,100,32,124,32,91,88,44,32,89,93,93,42]},
             {sep,
              [{text,
                [17,34,46,32,65,110,110,111,116,97,116,105,111,110,115,32,111,
                 110]}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,
              [{text,
                [21,105,116,115,101,108,102,32,109,97,121,32,98,101,32,108,
                 111,115,116,32,105,102]}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,
              [{text,"+represents a list skeleton, but comments on"}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,
              [{text,
                [29,97,114,101,32,112,114,111,112,97,103,97,116,101,100,32,
                 116,111,32,116,104,101,32,114,101,115,117,108,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[list_head/1](#list_head-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[list_tail/1](#list_tail-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"(constrained_function_type(FunctionType::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [23,44,32,70,117,110,99,116,105,111,110,67,111,110,115,116,114,
               97,105,110,116,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Creates an abstract constrained function type."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "E<a name=\"constrained_function_type-2\">constrained_function_type-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"1Creates an abstract constrained function type. If"}],
              0,false},
             {text,
              [20,42,70,117,110,99,116,105,111,110,67,111,110,115,116,114,97,
               105,110,116,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,67,49,44,32,46,46,46,44,32,67,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [29,42,70,117,110,99,116,105,111,110,84,121,112,101,32,119,104,
               101,110,32,67,49,44,32,46,46,46,67,110,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              "M[constrained_function_type_argument/1](#constrained_function_type_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "E[constrained_function_type_body/1](#constrained_function_type_body-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,")constrained_function_type_argument(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "LReturns the function constraint subtree of a constrained_function_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "W<a name=\"constrained_function_type_argument-1\">constrained_function_type_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",Returns the function constraint subtree of a"}],
              0,false},
             {text,"\e*constrained_function_type*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              ";[constrained_function_type/2](#constrained_function_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"%constrained_function_type_body(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "FReturns the function type subtree of a constrained_function_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "O<a name=\"constrained_function_type_body-1\">constrained_function_type_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Returns the function type subtree of a"}],0,false},
             {text,"\e*constrained_function_type*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              ";[constrained_function_type/2](#constrained_function_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,99,111,110,115,116,114,97,105,110,116,40,78,97,109,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\n, Types::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Creates an abstract (subtype) constraint."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"constraint-2\">constraint-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ACreates an abstract (subtype) constraint. The result represents \""}],
              0,false},
             {text,[14,42,78,97,109,101,32,58,58,32,84,121,112,101,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"/[constraint_argument/1](#constraint_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[constraint_body/1](#constraint_body-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,99,111,110,115,116,114,97,105,110,116,95,97,114,103,117,109,
               101,110,116,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Returns the name subtree of a constraint node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"constraint_argument-1\">constraint_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\f*constraint*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,99,111,110,115,116,114,97,105,110,116,47,50,93,40,35,99,
               111,110,115,116,114,97,105,110,116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,99,111,110,115,116,114,97,105,110,116,95,98,111,100,121,40,
               78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Returns the type subtree of a constraint node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"constraint_body-1\">constraint_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,116,121,112,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\f*constraint*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,99,111,110,115,116,114,97,105,110,116,47,50,93,40,35,99,
               111,110,115,116,114,97,105,110,116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,99,111,112,121,95,97,110,110,40,83,111,117,114,99,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\n, Target::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Copies the list of user annotations from Source to Target."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"copy_ann-2\">copy_ann-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Copies the list of user annotations from"}],
              0,false},
             {text,"\b*Source*"},
             {sep,[{text,[2,116,111]}],0,false},
             {text,"\b*Target*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: this is equivalent to"}],0,false},
             {text,"\"*set_ann(Target, get_ann(Source))*"},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,103,101,116,95,97,110,110,47,49,93,40,35,103,101,116,95,
               97,110,110,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,115,101,116,95,97,110,110,47,50,93,40,35,115,101,116,95,
               97,110,110,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,99,111,112,121,95,97,116,116,114,115,40,83,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[5,44,32,84,58,58]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,",Copies the attributes from Source to Target."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"copy_attrs-2\">copy_attrs-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [26,67,111,112,105,101,115,32,116,104,101,32,97,116,116,114,
                 105,98,117,116,101,115,32,102,114,111,109]}],
              0,false},
             {text,"\b*Source*"},
             {sep,[{text,[2,116,111]}],0,false},
             {text,"\b*Target*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: this is equivalent to"}],0,false},
             {text,"&*set_attrs(Target, get_attrs(Source))*"},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[get_attrs/1](#get_attrs-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[set_attrs/2](#set_attrs-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,99,111,112,121,95,99,111,109,109,101,110,116,115,40,83,111,
               117,114,99,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\n, Target::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Copies the pre- and postcomments from Source to Target."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"copy_comments-2\">copy_comments-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"%Copies the pre- and postcomments from"}],0,false},
             {text,"\b*Source*"},
             {sep,[{text,[2,116,111]}],0,false},
             {text,"\b*Target*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: This is equivalent to"}],0,false},
             {text,
              "^*set_postcomments(set_precomments(Target, get_precomments(Source)), get_postcomments(Source))*"},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[get_postcomments/1](#get_postcomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[get_precomments/1](#get_precomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[set_postcomments/2](#set_postcomments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[set_precomments/2](#set_precomments-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,99,111,112,121,95,112,111,115,40,83,111,117,114,99,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\n, Target::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Copies the position information from Source to Target."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"copy_pos-2\">copy_pos-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"$Copies the position information from"}],0,false},
             {text,"\b*Source*"},
             {sep,[{text,[2,116,111]}],0,false},
             {text,"\b*Target*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,105,115,32,105,115,32,101,113,117,105,118,97,108,
                 101,110,116,32,116,111]}],
              0,false},
             {text,"\"*set_pos(Target, get_pos(Source))*"},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,103,101,116,95,112,111,115,47,49,93,40,35,103,101,116,95,
               112,111,115,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,115,101,116,95,112,111,115,47,50,93,40,35,115,101,116,95,
               112,111,115,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\vdata(Tree::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> term()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [26,70,111,114,32,115,112,101,99,105,97,108,32,112,117,114,112,
             111,115,101,115,32,111,110,108,121,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"data-1\">data-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,42,42,70,111,114,32,115,112,101,99,105,97,108,32,112,117,
               114,112,111,115,101,115,32,111,110,108,121,42,42]},
             {sep,
              [{text,
                "Q. Returns the associated data of a syntax tree node. Evaluation fails with reason"}],
              0,false},
             {text,"\b*badarg*"},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[15,42,105,115,95,116,114,101,101,40,78,111,100,101,41,42]},
             {sep,
              [{text,
                [14,100,111,101,115,32,110,111,116,32,121,105,101,108,100]}],
              0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,116,114,101,101,47,50,93,40,35,116,114,101,101,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,100,105,115,106,117,110,99,116,105,111,110,40,84,101,115,
               116,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text," Creates an abstract disjunction."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"disjunction-1\">disjunction-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Creates an abstract disjunction. If"}],0,false},
             {text,[6,42,76,105,115,116,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,"\r*E1; ...; En*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,99,111,110,106,117,110,99,116,105,111,110,47,49,93,40,35,
               99,111,110,106,117,110,99,116,105,111,110,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[disjunction_body/1](#disjunction_body-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,100,105,115,106,117,110,99,116,105,111,110,95,98,111,100,
               121,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the list of body subtrees of a disjunction node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"disjunction_body-1\">disjunction_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Returns the list of body subtrees of a"}],0,false},
             {text,"\r*disjunction*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,100,105,115,106,117,110,99,116,105,111,110,47,49,93,40,
               35,100,105,115,106,117,110,99,116,105,111,110,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[15,101,111,102,95,109,97,114,107,101,114,40,41,32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"'Creates an abstract end-of-file marker."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"eof_marker-0\">eof_marker-0</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [268,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,
               97,99,116,32,101,110,100,45,111,102,45,102,105,108,101,32,109,
               97,114,107,101,114,46,32,84,104,105,115,32,114,101,112,114,101,
               115,101,110,116,115,32,116,104,101,32,101,110,100,32,111,102,
               32,105,110,112,117,116,32,119,104,101,110,32,114,101,97,100,
               105,110,103,32,97,32,115,101,113,117,101,110,99,101,32,111,102,
               32,115,111,117,114,99,101,32,99,111,100,101,32,102,111,114,109,
               115,46,32,65,110,32,101,110,100,45,111,102,45,102,105,108,101,
               32,109,97,114,107,101,114,32,105,115,32,105,116,115,101,108,
               102,32,114,101,103,97,114,100,101,100,32,97,115,32,97,32,115,
               111,117,114,99,101,32,99,111,100,101,32,102,111,114,109,32,40,
               110,97,109,101,108,121,44,32,116,104,101,32,108,97,115,116,32,
               105,110,32,97,110,121,32,115,101,113,117,101,110,99,101,32,105,
               110,32,119,104,105,99,104,32,105,116,32,111,99,99,117,114,115,
               41,46,32,73,116,32,104,97,115,32,110,111,32,100,101,102,105,
               110,101,100,32,108,101,120,105,99,97,108,32,102,111,114,109,
               46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "XNote: this is retained only for backwards compatibility with existing parsers and tools."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![error_marker/1](#error_marker-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,102,111,114,109,47,49,93,40,35,105,115,95,102,
               111,114,109,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[warning_marker/1](#warning_marker-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [30,101,114,114,111,114,95,109,97,114,107,101,114,40,69,114,114,
               111,114,58,58,116,101,114,109,40,41,41,32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Creates an abstract error marker."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"error_marker-1\">error_marker-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "Â Creates an abstract error marker. The result represents an occurrence of an error in the source code, with an associated Erlang I/O ErrorInfo structure given by"}],
              0,false},
             {text,[7,42,69,114,114,111,114,42]},
             {sep,[{text,"\v(see module"}],0,false},
             {text,"\r[io(3)](./io)"},
             {sep,
              [{text,
                "`for details). Error markers are regarded as source code forms, but have no defined lexical form."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "YNote: this is supported only for backwards compatibility with existing parsers and tools."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,101,111,102,95,109,97,114,107,101,114,47,48,93,40,35,101,
               111,102,95,109,97,114,107,101,114,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[error_marker_info/1](#error_marker_info-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,102,111,114,109,47,49,93,40,35,105,115,95,102,
               111,114,109,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[warning_marker/1](#warning_marker-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,101,114,114,111,114,95,109,97,114,107,101,114,95,105,110,
               102,111,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> term()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the ErrorInfo structure of an error_marker node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"error_marker_info-1\">error_marker_info-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"%Returns the ErrorInfo structure of an"}],0,false},
             {text,[14,42,101,114,114,111,114,95,109,97,114,107,101,114,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![error_marker/1](#error_marker-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,102,108,97,116,116,101,110,95,102,111,114,109,95,108,105,
               115,116,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Flattens sublists of a form_list node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"flatten_form_list-1\">flatten_form_list-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,70,108,97,116,116,101,110,115,32,115,117,98,108,105,115,
                 116,115,32,111,102,32,97]}],
              0,false},
             {text,"\v*form_list*"},
             {sep,[{text,"\rnode. Returns"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [25,119,105,116,104,32,97,108,108,32,115,117,98,116,114,101,
                 101,115,32,111,102,32,116,121,112,101]}],
              0,false},
             {text,"\v*form_list*"},
             {sep,
              [{text,
                "Frecursively expanded, yielding a single \"flat\" abstract form sequence."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[form_list/1](#form_list-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,102,108,111,97,116,40,86,97,108,117,101,58,58,102,108,111,
               97,116,40,41,41,32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Creates an abstract floating-point literal."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,102,108,111,97,116,45,49,34,62,102,
        108,111,97,116,45,49,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "oCreates an abstract floating-point literal. The lexical representation is the decimal floating-point numeral of"}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"#[float_literal/1](#float_literal-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,102,108,111,97,116,95,118,97,108,117,101,47,49,93,40,35,
               102,108,111,97,116,95,118,97,108,117,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,102,108,111,97,116,95,108,105,116,101,114,97,108,40,78,111,
               100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> string()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Returns the numeral string represented by a float node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"float_literal-1\">float_literal-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+Returns the numeral string represented by a"}],
              0,false},
             {text,[7,42,102,108,111,97,116,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,102,108,111,97,116,47,49,93,40,35,102,108,111,97,116,45,
               49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,102,108,111,97,116,95,118,97,108,117,101,40,78,111,100,101,
               58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\t> float()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Returns the value represented by a float node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"float_value-1\">float_value-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"Returns the value represented by a"}],0,false},
             {text,[7,42,102,108,111,97,116,42]},
             {sep,
              [{text,
                "Rnode. Note that floating-point values should usually not be compared for equality."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,102,108,111,97,116,47,49,93,40,35,102,108,111,97,116,45,
               49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,102,111,114,109,95,108,105,115,116,40,70,111,114,109,115,58,
               58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Creates an abstract sequence of \"source code forms\"."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"form_list-1\">form_list-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7Creates an abstract sequence of \"source code forms\". If"}],
              0,false},
             {text,[7,42,70,111,114,109,115,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,70,49,44,32,46,46,46,44,32,70,110,93,42]},
             {sep,[{text,"\f, where each"}],0,false},
             {text,[4,42,70,105,42]},
             {sep,
              [{text,[14,105,115,32,97,32,102,111,114,109,32,40,115,101,101]}],
              0,false},
             {text,
              [23,91,105,115,95,102,111,114,109,47,49,93,40,35,105,115,95,102,
               111,114,109,45,49,41]},
             {sep,
              [{text,
                [23,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [25,10,32,32,32,32,32,70,49,10,32,32,32,32,32,46,46,46,10,32,32,
               32,32,32,70,110]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\twhere the"}],0,false},
             {text,[4,42,70,105,42]},
             {sep,
              [{text,
                "8are separated by one or more line breaks. A node of type"}],
              0,false},
             {text,"\v*form_list*"},
             {sep,
              [{text,"-is itself regarded as a source code form; see"}],
              0,false},
             {text,"+[flatten_form_list/1](#flatten_form_list-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [135,78,111,116,101,58,32,116,104,105,115,32,105,115,32,115,105,
               109,112,108,121,32,97,32,119,97,121,32,111,102,32,103,114,111,
               117,112,105,110,103,32,115,111,117,114,99,101,32,99,111,100,
               101,32,102,111,114,109,115,32,97,115,32,97,32,115,105,110,103,
               108,101,32,115,121,110,116,97,120,32,116,114,101,101,44,32,117,
               115,117,97,108,108,121,32,105,110,32,111,114,100,101,114,32,
               116,111,32,102,111,114,109,32,97,110,32,69,114,108,97,110,103,
               32,109,111,100,117,108,101,32,100,101,102,105,110,105,116,105,
               111,110,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[flatten_form_list/1](#flatten_form_list-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"-[form_list_elements/1](#form_list_elements-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,102,111,114,109,47,49,93,40,35,105,115,95,102,
               111,114,109,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,102,111,114,109,95,108,105,115,116,95,101,108,101,109,101,
               110,116,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Returns the list of subnodes of a form_list node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"form_list_elements-1\">form_list_elements-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Returns the list of subnodes of a"}],0,false},
             {text,"\v*form_list*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[form_list/1](#form_list-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,102,117,110,95,101,120,112,114,40,67,108,97,117,115,101,115,
               58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Creates an abstract fun-expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"fun_expr-1\">fun_expr-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Creates an abstract fun-expression. If"}],0,false},
             {text,"\t*Clauses*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,67,49,44,32,46,46,46,44,32,67,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [21,42,102,117,110,32,67,49,59,32,46,46,46,59,32,67,110,32,101,
               110,100,42]},
             {sep,
              [{text,
                [24,34,46,32,77,111,114,101,32,101,120,97,99,116,108,121,44,
                 32,105,102,32,101,97,99,104]}],
              0,false},
             {text,[4,42,67,105,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [26,42,40,80,105,49,44,32,46,46,46,44,32,80,105,109,41,32,71,
               105,32,45,62,32,66,105,42]},
             {sep,
              [{text,
                [31,34,44,32,116,104,101,110,32,116,104,101,32,114,101,115,
                 117,108,116,32,114,101,112,114,101,115,101,110,116,115,32,
                 34]}],
              0,false},
             {text,
              "A*fun (P11, ..., P1m) G1 -> B1; ...; (Pn1, ..., Pnm) Gn -> Bn end*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[fun_expr_arity/1](#fun_expr_arity-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[fun_expr_clauses/1](#fun_expr_clauses-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,102,117,110,95,101,120,112,114,95,97,114,105,116,121,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\t> arity()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Returns the arity of a fun_expr node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"fun_expr_arity-1\">fun_expr_arity-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,82,101,116,117,114,110,115,32,116,104,101,32,97,114,105,
                 116,121,32,111,102,32,97]}],
              0,false},
             {text,"\n*fun_expr*"},
             {sep,
              [{text,
                [127,110,111,100,101,46,32,84,104,101,32,114,101,115,117,108,
                 116,32,105,115,32,116,104,101,32,110,117,109,98,101,114,32,
                 111,102,32,112,97,114,97,109,101,116,101,114,32,112,97,116,
                 116,101,114,110,115,32,105,110,32,116,104,101,32,102,105,114,
                 115,116,32,99,108,97,117,115,101,32,111,102,32,116,104,101,
                 32,102,117,110,45,101,120,112,114,101,115,115,105,111,110,59,
                 32,115,117,98,115,101,113,117,101,110,116,32,99,108,97,117,
                 115,101,115,32,97,114,101,32,105,103,110,111,114,101,100,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [25,65,110,32,101,120,99,101,112,116,105,111,110,32,105,115,
                 32,116,104,114,111,119,110,32,105,102]}],
              0,false},
             {text,
              [24,42,102,117,110,95,101,120,112,114,95,99,108,97,117,115,101,
               115,40,78,111,100,101,41,42]},
             {sep,
              [{text,
                "Preturns an empty list, or if the first element of that list is not a syntax tree"}],
              0,false},
             {text,[3,42,67,42]},
             {sep,[{text,[7,111,102,32,116,121,112,101]}],0,false},
             {text,"\b*clause*"},
             {sep,[{text,"\tsuch that"}],0,false},
             {text,
              [20,42,99,108,97,117,115,101,95,112,97,116,116,101,114,110,115,
               40,67,41,42]},
             {sep,
              [{text,
                [19,105,115,32,97,32,110,111,110,101,109,112,116,121,32,108,
                 105,115,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[clause_patterns/1](#clause_patterns-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,102,117,110,95,101,120,112,114,47,49,93,40,35,102,117,
               110,95,101,120,112,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[fun_expr_clauses/1](#fun_expr_clauses-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,102,117,110,95,101,120,112,114,95,99,108,97,117,115,101,115,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Returns the list of clause subtrees of a fun_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"fun_expr_clauses-1\">fun_expr_clauses-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Returns the list of clause subtrees of a"}],
              0,false},
             {text,"\n*fun_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,102,117,110,95,101,120,112,114,47,49,93,40,35,102,117,
               110,95,101,120,112,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\rfun_type() ->"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Creates an abstract fun of any type."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"fun_type-0\">fun_type-0</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "<Creates an abstract fun of any type. The result represents \""}],
              0,false},
             {text,[7,42,102,117,110,40,41,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [15,102,117,110,99,116,105,111,110,40,78,97,109,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\f, Clauses::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"(Creates an abstract function definition."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"function-2\">function-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+Creates an abstract function definition. If"}],
              0,false},
             {text,"\t*Clauses*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,67,49,44,32,46,46,46,44,32,67,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [24,42,78,97,109,101,32,67,49,59,32,46,46,46,59,32,78,97,109,
               101,32,67,110,46,42]},
             {sep,
              [{text,
                [24,34,46,32,77,111,114,101,32,101,120,97,99,116,108,121,44,
                 32,105,102,32,101,97,99,104]}],
              0,false},
             {text,[4,42,67,105,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [26,42,40,80,105,49,44,32,46,46,46,44,32,80,105,109,41,32,71,
               105,32,45,62,32,66,105,42]},
             {sep,
              [{text,
                [31,34,44,32,116,104,101,110,32,116,104,101,32,114,101,115,
                 117,108,116,32,114,101,112,114,101,115,101,110,116,115,32,
                 34]}],
              0,false},
             {text,
              "B*Name(P11, ..., P1m) G1 -> B1; ...; Name(Pn1, ..., Pnm) Gn -> Bn.*"},
             {sep,
              [{text,".\". Function definitions are source code forms."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[function_arity/1](#function_arity-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[function_clauses/1](#function_clauses-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[function_name/1](#function_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,102,111,114,109,47,49,93,40,35,105,115,95,102,
               111,114,109,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,102,117,110,99,116,105,111,110,95,97,114,105,116,121,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\t> arity()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Returns the arity of a function node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"function_arity-1\">function_arity-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,82,101,116,117,114,110,115,32,116,104,101,32,97,114,105,
                 116,121,32,111,102,32,97]}],
              0,false},
             {text,"\n*function*"},
             {sep,
              [{text,
                "ynode. The result is the number of parameter patterns in the first clause of the function; subsequent clauses are ignored."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [25,65,110,32,101,120,99,101,112,116,105,111,110,32,105,115,
                 32,116,104,114,111,119,110,32,105,102]}],
              0,false},
             {text,
              [24,42,102,117,110,99,116,105,111,110,95,99,108,97,117,115,101,
               115,40,78,111,100,101,41,42]},
             {sep,
              [{text,
                "Preturns an empty list, or if the first element of that list is not a syntax tree"}],
              0,false},
             {text,[3,42,67,42]},
             {sep,[{text,[7,111,102,32,116,121,112,101]}],0,false},
             {text,"\b*clause*"},
             {sep,[{text,"\tsuch that"}],0,false},
             {text,
              [20,42,99,108,97,117,115,101,95,112,97,116,116,101,114,110,115,
               40,67,41,42]},
             {sep,
              [{text,
                [19,105,115,32,97,32,110,111,110,101,109,112,116,121,32,108,
                 105,115,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[clause_patterns/1](#clause_patterns-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,102,117,110,99,116,105,111,110,47,50,93,40,35,102,117,
               110,99,116,105,111,110,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[function_clauses/1](#function_clauses-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,102,117,110,99,116,105,111,110,95,99,108,97,117,115,101,115,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Returns the list of clause subtrees of a function node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"function_clauses-1\">function_clauses-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Returns the list of clause subtrees of a"}],
              0,false},
             {text,"\n*function*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,102,117,110,99,116,105,111,110,47,50,93,40,35,102,117,
               110,99,116,105,111,110,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,102,117,110,99,116,105,111,110,95,110,97,109,101,40,78,111,
               100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,",Returns the name subtree of a function node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"function_name-1\">function_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\n*function*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,102,117,110,99,116,105,111,110,47,50,93,40,35,102,117,
               110,99,116,105,111,110,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"!## function_type(Type) -> term()\n"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Equivalent to function_type(any_arity, Type)."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"function_type-1\">function_type-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"2[function_type(any_arity, Type)](#function_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"$function_type(Arguments::any_arity |"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\n, Return::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Creates an abstract function type."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"function_type-2\">function_type-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"%Creates an abstract function type. If"}],0,false},
             {text,"\v*Arguments*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,84,49,44,32,46,46,46,44,32,84,110,93,42]},
             {sep,
              [{text,
                "L, then if it occurs within a function specification, the result represents \""}],
              0,false},
             {text,
              [23,42,40,84,49,44,32,46,46,46,84,110,41,32,45,62,32,82,101,116,
               117,114,110,42]},
             {sep,
              [{text,
                [28,34,59,32,111,116,104,101,114,119,105,115,101,32,105,116,
                 32,114,101,112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [28,42,102,117,110,40,40,84,49,44,32,46,46,46,84,110,41,32,45,
               62,32,82,101,116,117,114,110,41,42]},
             {sep,[{text,[5,34,46,32,73,102]}],0,false},
             {text,"\v*Arguments*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,"\v*any_arity*"},
             {sep,
              [{text,
                [17,44,32,105,116,32,114,101,112,114,101,115,101,110,116,115,
                 32,34]}],
              0,false},
             {text,
              [22,42,102,117,110,40,40,46,46,46,41,32,45,62,32,82,101,116,117,
               114,110,41,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rNote that the"}],0,false},
             {text,"\v*erl_parse*"},
             {sep,[{text,"!representation is identical for \""}],0,false},
             {text,[14,42,70,117,110,99,116,105,111,110,84,121,112,101,42]},
             {sep,[{text,[7,34,32,97,110,100,32,34]}],0,false},
             {text,
              [19,42,102,117,110,40,70,117,110,99,116,105,111,110,84,121,112,
               101,41,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"7[function_type_arguments/1](#function_type_arguments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[function_type_return/1](#function_type_return-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [30,102,117,110,99,116,105,111,110,95,116,121,112,101,95,97,114,
               103,117,109,101,110,116,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,[15,62,32,97,110,121,95,97,114,105,116,121,32,124,32,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "<Returns the argument types subtrees of a function_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "A<a name=\"function_type_arguments-1\">function_type_arguments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Returns the argument types subtrees of a"}],
              0,false},
             {text,
              [15,42,102,117,110,99,116,105,111,110,95,116,121,112,101,42]},
             {sep,[{text,"\bnode. If"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [22,42,102,117,110,40,40,46,46,46,41,32,45,62,32,82,101,116,117,
               114,110,41,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,"\v*any_arity*"},
             {sep,
              [{text,
                [26,105,115,32,114,101,116,117,114,110,101,100,59,32,111,116,
                 104,101,114,119,105,115,101,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [23,42,40,84,49,44,32,46,46,46,84,110,41,32,45,62,32,82,101,116,
               117,114,110,42]},
             {sep,[{text,[6,34,32,111,114,32,34]}],0,false},
             {text,
              [28,42,102,117,110,40,40,84,49,44,32,46,46,46,84,110,41,32,45,
               62,32,82,101,116,117,114,110,41,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[15,42,91,84,49,44,32,46,46,46,44,32,84,110,93,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"#[function_type/1](#function_type-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[function_type/2](#function_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\efunction_type_return(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Returns the return type subtrees of a function_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"function_type_return-1\">function_type_return-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"%Returns the return type subtrees of a"}],0,false},
             {text,
              [15,42,102,117,110,99,116,105,111,110,95,116,121,112,101,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"#[function_type/1](#function_type-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[function_type/2](#function_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,103,101,110,101,114,97,116,111,114,40,80,97,116,116,101,114,
               110,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Body::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [30,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,97,
             99,116,32,103,101,110,101,114,97,116,111,114,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"generator-2\">generator-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "6Creates an abstract generator. The result represents \""}],
              0,false},
             {text,
              [17,42,80,97,116,116,101,114,110,32,60,45,32,66,111,100,121,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,98,105,110,97,114,121,95,99,111,109,112,47,50,93,40,35,
               98,105,110,97,114,121,95,99,111,109,112,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[generator_body/1](#generator_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[generator_pattern/1](#generator_pattern-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[list_comp/2](#list_comp-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,103,101,110,101,114,97,116,111,114,95,98,111,100,121,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Returns the body subtree of a generator node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"generator_body-1\">generator_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,98,111,100,
                 121,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\v*generator*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[generator/2](#generator-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,103,101,110,101,114,97,116,111,114,95,112,97,116,116,101,
               114,110,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Returns the pattern subtree of a generator node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"generator_pattern-1\">generator_pattern-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," Returns the pattern subtree of a"}],0,false},
             {text,"\v*generator*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[generator/2](#generator-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,103,101,116,95,97,110,110,40,84,114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> [term()]"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "HReturns the list of user annotations associated with a syntax tree node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"get_ann-1\">get_ann-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [156,82,101,116,117,114,110,115,32,116,104,101,32,108,105,115,
               116,32,111,102,32,117,115,101,114,32,97,110,110,111,116,97,116,
               105,111,110,115,32,97,115,115,111,99,105,97,116,101,100,32,119,
               105,116,104,32,97,32,115,121,110,116,97,120,32,116,114,101,101,
               32,110,111,100,101,46,32,70,111,114,32,97,32,110,101,119,108,
               121,32,99,114,101,97,116,101,100,32,110,111,100,101,44,32,116,
               104,105,115,32,105,115,32,116,104,101,32,101,109,112,116,121,
               32,108,105,115,116,46,32,84,104,101,32,97,110,110,111,116,97,
               116,105,111,110,115,32,109,97,121,32,98,101,32,97,110,121,32,
               116,101,114,109,115,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[get_attrs/1](#get_attrs-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,115,101,116,95,97,110,110,47,50,93,40,35,115,101,116,95,
               97,110,110,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,103,101,116,95,97,116,116,114,115,40,84,114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,
            [{text,
              [22,115,121,110,116,97,120,84,114,101,101,65,116,116,114,105,98,
               117,116,101,115,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "NReturns a representation of the attributes associated with a syntax tree node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"get_attrs-1\">get_attrs-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [339,82,101,116,117,114,110,115,32,97,32,114,101,112,114,101,
                 115,101,110,116,97,116,105,111,110,32,111,102,32,116,104,101,
                 32,97,116,116,114,105,98,117,116,101,115,32,97,115,115,111,
                 99,105,97,116,101,100,32,119,105,116,104,32,97,32,115,121,
                 110,116,97,120,32,116,114,101,101,32,110,111,100,101,46,32,
                 84,104,101,32,97,116,116,114,105,98,117,116,101,115,32,97,
                 114,101,32,97,108,108,32,116,104,101,32,101,120,116,114,97,
                 32,105,110,102,111,114,109,97,116,105,111,110,32,116,104,97,
                 116,32,99,97,110,32,98,101,32,97,116,116,97,99,104,101,100,
                 32,116,111,32,97,32,110,111,100,101,46,32,67,117,114,114,101,
                 110,116,108,121,44,32,116,104,105,115,32,105,110,99,108,117,
                 100,101,115,32,112,111,115,105,116,105,111,110,32,105,110,
                 102,111,114,109,97,116,105,111,110,44,32,115,111,117,114,99,
                 101,32,99,111,100,101,32,99,111,109,109,101,110,116,115,44,
                 32,97,110,100,32,117,115,101,114,32,97,110,110,111,116,97,
                 116,105,111,110,115,46,32,84,104,101,32,114,101,115,117,108,
                 116,32,111,102,32,116,104,105,115,32,102,117,110,99,116,105,
                 111,110,32,99,97,110,110,111,116,32,98,101,32,105,110,115,
                 112,101,99,116,101,100,32,100,105,114,101,99,116,108,121,59,
                 32,111,110,108,121,32,97,116,116,97,99,104,101,100,32,116,
                 111,32,97,110,111,116,104,101,114,32,110,111,100,101,32,40,
                 115,101,101]}],
              0,false},
             {text,"\e[set_attrs/2](#set_attrs-2)"},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(For accessing individual attributes, see"}],
              0,false},
             {text,
              [23,91,103,101,116,95,112,111,115,47,49,93,40,35,103,101,116,95,
               112,111,115,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,103,101,116,95,97,110,110,47,49,93,40,35,103,101,116,95,
               97,110,110,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[get_precomments/1](#get_precomments-1)"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,")[get_postcomments/1](#get_postcomments-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,103,101,116,95,97,110,110,47,49,93,40,35,103,101,116,95,
               97,110,110,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,103,101,116,95,112,111,115,47,49,93,40,35,103,101,116,95,
               112,111,115,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[get_postcomments/1](#get_postcomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[get_precomments/1](#get_precomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[set_attrs/2](#set_attrs-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,103,101,116,95,112,111,115,40,84,114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> term()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Returns the position information associated with Node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"get_pos-1\">get_pos-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0Returns the position information associated with"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                "Ã‰. This is usually a nonnegative integer (indicating the source code line number), but may be any term. By default, all new tree nodes have their associated position information set to the integer zero."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[get_attrs/1](#get_attrs-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,115,101,116,95,112,111,115,47,50,93,40,35,115,101,116,95,
               112,111,115,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,103,101,116,95,112,111,115,116,99,111,109,109,101,110,116,
               115,40,84,114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Returns the associated post-comments of a node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"get_postcomments-1\">get_postcomments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "Ã´Returns the associated post-comments of a node. This is a possibly empty list of abstract comments, in top-down textual order. When the code is formatted, post-comments are typically displayed to the right of and/or below the node. For example:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,",     {foo, X, Y}     % Post-comment of tuple"}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "Â¢If possible, the comment should be moved past any following separator characters on the same line, rather than placing the separators on the following line. E.g.:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "`     foo([X | Xs], Y) ->\n         foo(Xs, bar(X));     % Post-comment of 'bar(X)' node\n      ..."}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0(where the comment is moved past the rightmost \""}],
              0,false},
             {text,[3,42,41,42]},
             {sep,[{text,"\v\" and the \""}],0,false},
             {text,[3,42,59,42]},
             {sep,[{text,[3,34,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[get_attrs/1](#get_attrs-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[get_precomments/1](#get_precomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[set_postcomments/2](#set_postcomments-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,103,101,116,95,112,114,101,99,111,109,109,101,110,116,115,
               40,84,114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Returns the associated pre-comments of a node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"get_precomments-1\">get_precomments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "Ã¤Returns the associated pre-comments of a node. This is a possibly empty list of abstract comments, in top-down textual order. When the code is formatted, pre-comments are typically displayed directly above the node. For example:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "7     % Pre-comment of function\n     foo(X) -> {bar, X}."}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "jIf possible, the comment should be moved before any preceding separator characters on the same line. E.g.:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "c     foo([X | Xs]) ->\n         % Pre-comment of 'bar(X)' node\n         [bar(X) | foo(Xs)];\n     ..."}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"((where the comment is moved before the \""}],
              0,false},
             {text,[3,42,91,42]},
             {sep,[{text,[3,34,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[get_attrs/1](#get_attrs-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[get_postcomments/1](#get_postcomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[set_precomments/2](#set_precomments-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,104,97,115,95,99,111,109,109,101,110,116,115,40,84,114,101,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "HYields false if the node has no associated comments, and true otherwise."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"has_comments-1\">has_comments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[6,89,105,101,108,100,115]}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,
              [{text,"+if the node has no associated comments, and"}],
              0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,"\notherwise."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: This is equivalent to"}],0,false},
             {text,
              "B*(get_precomments(Node) == []) and (get_postcomments(Node) == [])*"},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[get_postcomments/1](#get_postcomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[get_precomments/1](#get_precomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[remove_comments/1](#remove_comments-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,105,102,95,101,120,112,114,40,67,108,97,117,115,101,115,58,
               58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Creates an abstract if-expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"if_expr-1\">if_expr-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"%Creates an abstract if-expression. If"}],0,false},
             {text,"\t*Clauses*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,67,49,44,32,46,46,46,44,32,67,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [20,42,105,102,32,67,49,59,32,46,46,46,59,32,67,110,32,101,110,
               100,42]},
             {sep,
              [{text,
                [24,34,46,32,77,111,114,101,32,101,120,97,99,116,108,121,44,
                 32,105,102,32,101,97,99,104]}],
              0,false},
             {text,[4,42,67,105,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,"\r*() Gi -> Bi*"},
             {sep,
              [{text,
                [31,34,44,32,116,104,101,110,32,116,104,101,32,114,101,115,
                 117,108,116,32,114,101,112,114,101,115,101,110,116,115,32,
                 34]}],
              0,false},
             {text," *if G1 -> B1; ...; Gn -> Bn end*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[case_expr/2](#case_expr-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[if_expr_clauses/1](#if_expr_clauses-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,105,102,95,101,120,112,114,95,99,108,97,117,115,101,115,40,
               78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Returns the list of clause subtrees of an if_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"if_expr_clauses-1\">if_expr_clauses-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")Returns the list of clause subtrees of an"}],
              0,false},
             {text,"\t*if_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,105,102,95,101,120,112,114,47,49,93,40,35,105,102,95,101,
               120,112,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,105,109,112,108,105,99,105,116,95,102,117,110,40,78,97,109,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Creates an abstract \"implicit fun\" expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"implicit_fun-1\">implicit_fun-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "FCreates an abstract \"implicit fun\" expression. The result represents \""}],
              0,false},
             {text,"\n*fun Name*"},
             {sep,[{text,[2,34,46]}],0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,
              [{text,
                [23,115,104,111,117,108,100,32,114,101,112,114,101,115,101,
                 110,116,32,101,105,116,104,101,114]}],
              0,false},
             {text,[5,42,70,47,65,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,[7,42,77,58,70,47,65,42]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[arity_qualifier/2](#arity_qualifier-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![implicit_fun/2](#implicit_fun-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![implicit_fun/3](#implicit_fun-3)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[implicit_fun_name/1](#implicit_fun_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[module_qualifier/2](#module_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,105,109,112,108,105,99,105,116,95,102,117,110,40,78,97,109,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [15,44,32,65,114,105,116,121,58,58,110,111,110,101,32,124]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Creates an abstract \"implicit fun\" expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"implicit_fun-2\">implicit_fun-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"1Creates an abstract \"implicit fun\" expression. If"}],
              0,false},
             {text,[7,42,65,114,105,116,121,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [23,44,32,116,104,105,115,32,105,115,32,101,113,117,105,118,
                 97,108,101,110,116,32,116,111]}],
              0,false},
             {text,
              [20,42,105,109,112,108,105,99,105,116,95,102,117,110,40,78,97,
               109,101,41,42]},
             {sep,
              [{text,
                [31,44,32,111,116,104,101,114,119,105,115,101,32,105,116,32,
                 105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,
                 111]}],
              0,false},
             {text,",*implicit_fun(arity_qualifier(Name, Arity))*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,40,84,104,105,115,32,105,115,32,97,32,117,116,105,108,105,
               116,121,32,102,117,110,99,116,105,111,110,46,41]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![implicit_fun/1](#implicit_fun-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![implicit_fun/3](#implicit_fun-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\eimplicit_fun(Module::none |"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Name::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Arity::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "?Creates an abstract module-qualified \"implicit fun\" expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"implicit_fun-3\">implicit_fun-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "BCreates an abstract module-qualified \"implicit fun\" expression. If"}],
              0,false},
             {text,"\b*Module*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [23,44,32,116,104,105,115,32,105,115,32,101,113,117,105,118,
                 97,108,101,110,116,32,116,111]}],
              0,false},
             {text,"\e*implicit_fun(Name, Arity)*"},
             {sep,
              [{text,
                [31,44,32,111,116,104,101,114,119,105,115,101,32,105,116,32,
                 105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,
                 111]}],
              0,false},
             {text,
              "E*implicit_fun(module_qualifier(Module, arity_qualifier(Name, Arity))*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,40,84,104,105,115,32,105,115,32,97,32,117,116,105,108,105,
               116,121,32,102,117,110,99,116,105,111,110,46,41]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![implicit_fun/1](#implicit_fun-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![implicit_fun/2](#implicit_fun-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,105,109,112,108,105,99,105,116,95,102,117,110,95,110,97,109,
               101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Returns the name subtree of an implicit_fun node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"implicit_fun_name-1\">implicit_fun_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97,110]}],
              0,false},
             {text,[14,42,105,109,112,108,105,99,105,116,95,102,117,110,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bNote: if"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,"\t*fun N/A*"},
             {sep,[{text,[6,34,32,111,114,32,34]}],0,false},
             {text,"\v*fun M:N/A*"},
             {sep,
              [{text,"0\", then the result is the subtree representing \""}],
              0,false},
             {text,[5,42,78,47,65,42]},
             {sep,[{text,[6,34,32,111,114,32,34]}],0,false},
             {text,[7,42,77,58,78,47,65,42]},
             {sep,
              [{text,
                [16,34,44,32,114,101,115,112,101,99,116,105,118,101,108,121,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[arity_qualifier/2](#arity_qualifier-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![implicit_fun/1](#implicit_fun-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[module_qualifier/2](#module_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,105,110,102,105,120,95,101,120,112,114,40,76,101,102,116,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\f, Operator::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Right::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Creates an abstract infix operator expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"infix_expr-3\">infix_expr-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "FCreates an abstract infix operator expression. The result represents \""}],
              0,false},
             {text,
              [21,42,76,101,102,116,32,79,112,101,114,97,116,111,114,32,82,
               105,103,104,116,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[infix_expr_left/1](#infix_expr_left-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[infix_expr_operator/1](#infix_expr_operator-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[infix_expr_right/1](#infix_expr_right-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,112,114,101,102,105,120,95,101,120,112,114,47,50,93,40,
               35,112,114,101,102,105,120,95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,105,110,102,105,120,95,101,120,112,114,95,108,101,102,116,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the left argument subtree of an infix_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"infix_expr_left-1\">infix_expr_left-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'Returns the left argument subtree of an"}],0,false},
             {text,"\f*infix_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,105,110,102,105,120,95,101,120,112,114,47,51,93,40,35,
               105,110,102,105,120,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,105,110,102,105,120,95,101,120,112,114,95,111,112,101,114,
               97,116,111,114,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the operator subtree of an infix_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"infix_expr_operator-1\">infix_expr_operator-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"Returns the operator subtree of an"}],0,false},
             {text,"\f*infix_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,105,110,102,105,120,95,101,120,112,114,47,51,93,40,35,
               105,110,102,105,120,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,105,110,102,105,120,95,101,120,112,114,95,114,105,103,104,
               116,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Returns the right argument subtree of an infix_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"infix_expr_right-1\">infix_expr_right-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Returns the right argument subtree of an"}],
              0,false},
             {text,"\f*infix_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,105,110,102,105,120,95,101,120,112,114,47,51,93,40,35,
               105,110,102,105,120,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [28,105,110,116,101,103,101,114,40,86,97,108,117,101,58,58,105,
               110,116,101,103,101,114,40,41,41,32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Creates an abstract integer literal."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"integer-1\">integer-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "cCreates an abstract integer literal. The lexical representation is the canonical decimal numeral of"}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[integer_literal/1](#integer_literal-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[integer_value/1](#integer_value-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,105,115,95,105,110,116,101,103,101,114,47,50,93,40,35,
               105,115,95,105,110,116,101,103,101,114,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,105,110,116,101,103,101,114,95,108,105,116,101,114,97,108,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> string()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Returns the numeral string represented by an integer node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"integer_literal-1\">integer_literal-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",Returns the numeral string represented by an"}],
              0,false},
             {text,"\t*integer*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,105,110,116,101,103,101,114,47,49,93,40,35,105,110,116,
               101,103,101,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,105,110,116,101,103,101,114,95,114,97,110,103,101,95,116,
               121,112,101,40,76,111,119,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, High::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,97,
             99,116,32,114,97,110,103,101,32,116,121,112,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"integer_range_type-2\">integer_range_type-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7Creates an abstract range type. The result represents \""}],
              0,false},
             {text,"\r*Low .. High*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"7[integer_range_type_high/1](#integer_range_type_high-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"5[integer_range_type_low/1](#integer_range_type_low-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [30,105,110,116,101,103,101,114,95,114,97,110,103,101,95,116,
               121,112,101,95,104,105,103,104,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Returns the high limit of an integer_range_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "A<a name=\"integer_range_type_high-1\">integer_range_type_high-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [28,82,101,116,117,114,110,115,32,116,104,101,32,104,105,103,
                 104,32,108,105,109,105,116,32,111,102,32,97,110]}],
              0,false},
             {text,
              [20,42,105,110,116,101,103,101,114,95,114,97,110,103,101,95,116,
               121,112,101,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"-[integer_range_type/2](#integer_range_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [29,105,110,116,101,103,101,114,95,114,97,110,103,101,95,116,
               121,112,101,95,108,111,119,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Returns the low limit of an integer_range_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"integer_range_type_low-1\">integer_range_type_low-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eReturns the low limit of an"}],0,false},
             {text,
              [20,42,105,110,116,101,103,101,114,95,114,97,110,103,101,95,116,
               121,112,101,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"-[integer_range_type/2](#integer_range_type-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,105,110,116,101,103,101,114,95,118,97,108,117,101,40,78,111,
               100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\v> integer()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Returns the value represented by an integer node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"integer_value-1\">integer_value-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Returns the value represented by an"}],0,false},
             {text,"\t*integer*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,105,110,116,101,103,101,114,47,49,93,40,35,105,110,116,
               101,103,101,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,105,115,95,97,116,111,109,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [18,44,32,86,97,108,117,101,58,58,97,116,111,109,40,41,41,32,
               45]}],
            0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "IReturns true if Node has type atom and represents Value, otherwise false."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"is_atom-2\">is_atom-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\bhas type"}],0,false},
             {text,[6,42,97,116,111,109,42]},
             {sep,
              [{text,
                [14,97,110,100,32,114,101,112,114,101,115,101,110,116,115]}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,"\v, otherwise"}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,97,116,111,109,47,49,93,40,35,97,116,111,109,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,105,115,95,99,104,97,114,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [18,44,32,86,97,108,117,101,58,58,99,104,97,114,40,41,41,32,
               45]}],
            0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "IReturns true if Node has type char and represents Value, otherwise false."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"is_char-2\">is_char-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\bhas type"}],0,false},
             {text,[6,42,99,104,97,114,42]},
             {sep,
              [{text,
                [14,97,110,100,32,114,101,112,114,101,115,101,110,116,115]}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,"\v, otherwise"}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,99,104,97,114,47,49,93,40,35,99,104,97,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,105,115,95,102,111,114,109,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "cReturns true if Node is a syntax tree representing a so-called \"source code form\", otherwise false."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"is_form-1\">is_form-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                "Gis a syntax tree representing a so-called \"source code form\", otherwise"}],
              0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,
              [{text,
                "y. Forms are the Erlang source code units which, placed in sequence, constitute an Erlang program. Current form types are:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\v*attribute*"},
             {text,"\t*comment*"},
             {text,[14,42,101,114,114,111,114,95,109,97,114,107,101,114,42]},
             {text,"\f*eof_marker*"},
             {above,{above,null,null},null},
             {text,"\v*form_list*"},
             {text,"\n*function*"},
             {text,
              [16,42,119,97,114,110,105,110,103,95,109,97,114,107,101,114,42]},
             {text,[6,42,116,101,120,116,42]},
             {above,{above,null,null},null}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[attribute/2](#attribute-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,101,111,102,95,109,97,114,107,101,114,47,48,93,40,35,101,
               111,102,95,109,97,114,107,101,114,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![error_marker/1](#error_marker-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[form_list/1](#form_list-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,102,117,110,99,116,105,111,110,47,50,93,40,35,102,117,
               110,99,116,105,111,110,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[warning_marker/1](#warning_marker-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,105,115,95,105,110,116,101,103,101,114,40,78,111,100,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [21,44,32,86,97,108,117,101,58,58,105,110,116,101,103,101,114,
               40,41,41,32,45]}],
            0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "LReturns true if Node has type integer and represents Value, otherwise false."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"is_integer-2\">is_integer-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\bhas type"}],0,false},
             {text,"\t*integer*"},
             {sep,
              [{text,
                [14,97,110,100,32,114,101,112,114,101,115,101,110,116,115]}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,"\v, otherwise"}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,105,110,116,101,103,101,114,47,49,93,40,35,105,110,116,
               101,103,101,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,105,115,95,108,101,97,102,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Returns true if Node is a leaf node, otherwise false."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"is_leaf-1\">is_leaf-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [25,105,115,32,97,32,108,101,97,102,32,110,111,100,101,44,32,
                 111,116,104,101,114,119,105,115,101]}],
              0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,
              [{text,"/. The currently recognised leaf node types are:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,97,116,111,109,42]},
             {text,[6,42,99,104,97,114,42]},
             {text,"\t*comment*"},
             {text,"\f*eof_marker*"},
             {text,[14,42,101,114,114,111,114,95,109,97,114,107,101,114,42]},
             {above,{above,null,null},null},
             {text,[7,42,102,108,111,97,116,42]},
             {text,"\n*fun_type*"},
             {text,"\t*integer*"},
             {text,[5,42,110,105,108,42]},
             {text,"\n*operator*"},
             {text,"\b*string*"},
             {above,{above,null,null},null},
             {text,[6,42,116,101,120,116,42]},
             {text,"\f*underscore*"},
             {text,"\n*variable*"},
             {text,
              [16,42,119,97,114,110,105,110,103,95,109,97,114,107,101,114,42]},
             {above,{above,null,null},null}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [14,65,32,110,111,100,101,32,111,102,32,116,121,112,101]}],
              0,false},
             {text,"\n*map_expr*"},
             {sep,
              [{text,
                "Nis a leaf node if and only if it has no argument and no fields. A node of type"}],
              0,false},
             {text,"\n*map_type*"},
             {sep,
              [{text,"0is a leaf node if and only if it has no fields ("}],
              0,false},
             {text,"\n*any_size*"},
             {sep,
              [{text,
                [17,41,46,32,65,32,110,111,100,101,32,111,102,32,116,121,112,
                 101]}],
              0,false},
             {text,[7,42,116,117,112,108,101,42]},
             {sep,
              [{text,
                "?is a leaf node if and only if its arity is zero. A node of type"}],
              0,false},
             {text,"\f*tuple_type*"},
             {sep,
              [{text,"2is a leaf node if and only if it has no elements ("}],
              0,false},
             {text,"\n*any_size*"},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "Ã‘Note: not all literals are leaf nodes, and vice versa. E.g., tuples with nonzero arity and nonempty lists may be literals, but are not leaf nodes. Variables, on the other hand, are leaf nodes but not literals."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,105,115,95,108,105,116,101,114,97,108,47,49,93,40,35,105,
               115,95,108,105,116,101,114,97,108,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,105,115,95,108,105,115,116,95,115,107,101,108,101,116,111,
               110,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ";Returns true if Node has type list or nil, otherwise false."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"is_list_skeleton-1\">is_list_skeleton-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\bhas type"}],0,false},
             {text,[6,42,108,105,115,116,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,[5,42,110,105,108,42]},
             {sep,[{text,"\v, otherwise"}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,[15,91,110,105,108,47,48,93,40,35,110,105,108,45,48,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,105,115,95,108,105,116,101,114,97,108,40,84,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "@Returns true if Node represents a literal term, otherwise false."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"is_literal-1\">is_literal-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"$represents a literal term, otherwise"}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,
              [{text,
                [23,46,32,84,104,105,115,32,102,117,110,99,116,105,111,110,32,
                 114,101,116,117,114,110,115]}],
              0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,"\eif and only if the value of"}],0,false},
             {text,
              [16,42,99,111,110,99,114,101,116,101,40,78,111,100,101,41,42]},
             {sep,[{text,"\vis defined."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,97,98,115,116,114,97,99,116,47,49,93,40,35,97,98,115,116,
               114,97,99,116,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,99,111,110,99,114,101,116,101,47,49,93,40,35,99,111,110,
               99,114,101,116,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,105,115,95,112,114,111,112,101,114,95,108,105,115,116,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "CReturns true if Node represents a proper list, and false otherwise."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"is_proper_list-1\">is_proper_list-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [29,114,101,112,114,101,115,101,110,116,115,32,97,32,112,114,
                 111,112,101,114,32,108,105,115,116,44,32,97,110,100]}],
              0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,
              [{text,
                "@otherwise. A proper list is a list skeleton either on the form \""}],
              0,false},
             {text,[4,42,91,93,42]},
             {sep,[{text,[6,34,32,111,114,32,34]}],0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,[{text,[7,34,44,32,111,114,32,34]}],0,false},
             {text,[14,42,91,46,46,46,32,124,32,84,97,105,108,93,42]},
             {sep,
              [{text,
                [19,34,32,119,104,101,114,101,32,114,101,99,117,114,115,105,
                 118,101,108,121]}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,
              [{text,
                [30,97,108,115,111,32,114,101,112,114,101,115,101,110,116,115,
                 32,97,32,112,114,111,112,101,114,32,108,105,115,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\vNote: Since"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [129,105,115,32,97,32,115,121,110,116,97,120,32,116,114,101,
                 101,44,32,116,104,101,32,97,99,116,117,97,108,32,114,117,110,
                 45,116,105,109,101,32,118,97,108,117,101,115,32,99,111,114,
                 114,101,115,112,111,110,100,105,110,103,32,116,111,32,105,
                 116,115,32,115,117,98,116,114,101,101,115,32,109,97,121,32,
                 111,102,116,101,110,32,98,101,32,112,97,114,116,105,97,108,
                 108,121,32,111,114,32,99,111,109,112,108,101,116,101,108,121,
                 32,117,110,107,110,111,119,110,46,32,84,104,117,115,44,32,
                 105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [17,114,101,112,114,101,115,101,110,116,115,32,101,46,103,46,
                 32,34]}],
              0,false},
             {text,"\f*[... | Ns]*"},
             {sep,[{text,"\b\" (where"}],0,false},
             {text,[4,42,78,115,42]},
             {sep,
              [{text,"-is a variable), then the function will return"}],
              0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,"!, because it is not known whether"}],0,false},
             {text,[4,42,78,115,42]},
             {sep,[{text,"'will be bound to a list at run-time. If"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [25,105,110,115,116,101,97,100,32,114,101,112,114,101,115,101,
                 110,116,115,32,101,46,103,46,32,34]}],
              0,false},
             {text,"\v*[1, 2, 3]*"},
             {sep,[{text,[6,34,32,111,114,32,34]}],0,false},
             {text,"\n*[A | []]*"},
             {sep,[{text," \", then the function will return"}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,105,115,95,115,116,114,105,110,103,40,78,111,100,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [20,44,32,86,97,108,117,101,58,58,115,116,114,105,110,103,40,41,
               41,32,45]}],
            0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "KReturns true if Node has type string and represents Value, otherwise false."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"is_string-2\">is_string-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\bhas type"}],0,false},
             {text,"\b*string*"},
             {sep,
              [{text,
                [14,97,110,100,32,114,101,112,114,101,115,101,110,116,115]}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,"\v, otherwise"}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,115,116,114,105,110,103,47,49,93,40,35,115,116,114,105,
               110,103,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,105,115,95,116,114,101,101,40,84,114,101,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\v> boolean()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [26,70,111,114,32,115,112,101,99,105,97,108,32,112,117,114,112,
             111,115,101,115,32,111,110,108,121,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"is_tree-1\">is_tree-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,42,42,70,111,114,32,115,112,101,99,105,97,108,32,112,117,
               114,112,111,115,101,115,32,111,110,108,121,42,42]},
             {sep,[{text,"\t. Returns"}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                [30,105,115,32,97,110,32,97,98,115,116,114,97,99,116,32,115,
                 121,110,116,97,120,32,116,114,101,101,32,97,110,100]}],
              0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,"\notherwise."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\b**Note**"},
             {sep,
              [{text,
                [22,58,32,116,104,105,115,32,102,117,110,99,116,105,111,110,
                 32,121,105,101,108,100,115]}],
              0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,
              [{text,
                [19,102,111,114,32,97,108,108,32,34,111,108,100,45,115,116,
                 121,108,101,34]}],
              0,false},
             {text,"\v*erl_parse*"},
             {sep,
              [{text,
                [26,45,99,111,109,112,97,116,105,98,108,101,32,34,112,97,114,
                 115,101,32,116,114,101,101,115,34,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,116,114,101,101,47,50,93,40,35,116,114,101,101,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,106,111,105,110,95,99,111,109,109,101,110,116,115,40,83,111,
               117,114,99,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\n, Target::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "AAppends the comments of Source to the current comments of Target."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"join_comments-2\">join_comments-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [23,65,112,112,101,110,100,115,32,116,104,101,32,99,111,109,
                 109,101,110,116,115,32,111,102]}],
              0,false},
             {text,"\b*Source*"},
             {sep,
              [{text,
                [26,116,111,32,116,104,101,32,99,117,114,114,101,110,116,32,
                 99,111,109,109,101,110,116,115,32,111,102]}],
              0,false},
             {text,"\b*Target*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: This is equivalent to"}],0,false},
             {text,
              "^*add_postcomments(get_postcomments(Source), add_precomments(get_precomments(Source), Target))*"},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[add_postcomments/2](#add_postcomments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[add_precomments/2](#add_precomments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[get_postcomments/1](#get_postcomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[get_precomments/1](#get_precomments-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\flist(List::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,69,113,117,105,118,97,108,101,110,116,32,116,111,32,108,105,
             115,116,40,76,105,115,116,44,32,110,111,110,101,41,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"list-1\">list-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"\e[list(List, none)](#list-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,108,105,115,116,40,69,108,101,109,101,110,116,115,58,58,
               91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[15,93,44,32,84,97,105,108,58,58,110,111,110,101,32,124]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Constructs an abstract list skeleton."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"list-2\">list-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "9Constructs an abstract list skeleton. The result has type"}],
              0,false},
             {text,[6,42,108,105,115,116,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,[5,42,110,105,108,42]},
             {sep,[{text,[4,46,32,73,102]}],0,false},
             {text,[6,42,76,105,115,116,42]},
             {sep,
              [{text,
                [18,105,115,32,97,32,110,111,110,101,109,112,116,121,32,108,
                 105,115,116]}],
              0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,
              [{text,
                [21,44,32,116,104,101,32,114,101,115,117,108,116,32,104,97,
                 115,32,116,121,112,101]}],
              0,false},
             {text,[6,42,108,105,115,116,42]},
             {sep,
              [{text,
                [23,97,110,100,32,114,101,112,114,101,115,101,110,116,115,32,
                 101,105,116,104,101,114,32,34]}],
              0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,[{text,[5,34,44,32,105,102]}],0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [16,44,32,111,114,32,111,116,104,101,114,119,105,115,101,32,
                 34]}],
              0,false},
             {text,
              [22,42,91,69,49,44,32,46,46,46,44,32,69,110,32,124,32,84,97,105,
               108,93,42]},
             {sep,[{text,[5,34,46,32,73,102]}],0,false},
             {text,[6,42,76,105,115,116,42]},
             {sep,
              [{text,
                [18,105,115,32,116,104,101,32,101,109,112,116,121,32,108,105,
                 115,116,44]}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {text,"\b**must**"},
             {sep,[{text,[2,98,101]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,[{text,"&, and in that case the result has type"}],0,false},
             {text,[5,42,110,105,108,42]},
             {sep,
              [{text,
                [16,97,110,100,32,114,101,112,114,101,115,101,110,116,115,32,
                 34]}],
              0,false},
             {text,[4,42,91,93,42]},
             {sep,[{text,[6,34,32,40,115,101,101]}],0,false},
             {text,[15,91,110,105,108,47,48,93,40,35,110,105,108,45,48,41]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [362,84,104,101,32,100,105,102,102,101,114,101,110,99,101,32,98,
               101,116,119,101,101,110,32,108,105,115,116,115,32,97,115,32,
               115,101,109,97,110,116,105,99,32,111,98,106,101,99,116,115,32,
               40,98,117,105,108,116,32,117,112,32,111,102,32,105,110,100,105,
               118,105,100,117,97,108,32,34,99,111,110,115,34,32,97,110,100,
               32,34,110,105,108,34,32,116,101,114,109,115,41,32,97,110,100,
               32,116,104,101,32,118,97,114,105,111,117,115,32,115,121,110,
               116,97,99,116,105,99,32,102,111,114,109,115,32,102,111,114,32,
               100,101,110,111,116,105,110,103,32,108,105,115,116,115,32,109,
               97,121,32,98,101,32,98,101,119,105,108,100,101,114,105,110,103,
               32,97,116,32,102,105,114,115,116,46,32,84,104,105,115,32,109,
               111,100,117,108,101,32,112,114,111,118,105,100,101,115,32,102,
               117,110,99,116,105,111,110,115,32,98,111,116,104,32,102,111,
               114,32,101,120,97,99,116,32,99,111,110,116,114,111,108,32,111,
               102,32,116,104,101,32,115,121,110,116,97,99,116,105,99,32,114,
               101,112,114,101,115,101,110,116,97,116,105,111,110,32,97,115,
               32,119,101,108,108,32,97,115,32,102,111,114,32,116,104,101,32,
               115,105,109,112,108,101,32,99,111,109,112,111,115,105,116,105,
               111,110,32,97,110,100,32,100,101,99,111,110,115,116,114,117,99,
               116,105,111,110,32,105,110,32,116,101,114,109,115,32,111,102,
               32,99,111,110,115,32,97,110,100,32,104,101,97,100,47,116,97,
               105,108,32,111,112,101,114,97,116,105,111,110,115,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bNote: in"}],0,false},
             {text,
              [22,42,108,105,115,116,40,69,108,101,109,101,110,116,115,44,32,
               110,111,110,101,41,42]},
             {sep,
              [{text,
                "N, the \"nil\" list terminator is implicit and has no associated information (see"}],
              0,false},
             {text,"\e[get_attrs/1](#get_attrs-1)"},
             {sep,[{text,"$), while in the seemingly equivalent"}],0,false},
             {text,
              [22,42,108,105,115,116,40,69,108,101,109,101,110,116,115,44,32,
               84,97,105,108,41,42]},
             {sep,[{text,[4,119,104,101,110]}],0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,[{text,"\bhas type"}],0,false},
             {text,[5,42,110,105,108,42]},
             {sep,
              [{text,
                [29,44,32,116,104,101,32,108,105,115,116,32,116,101,114,109,
                 105,110,97,116,111,114,32,115,117,98,116,114,101,101]}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,
              [{text,
                "pmay have attached attributes such as position, comments, and annotations, which will be preserved in the result."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![compact_list/1](#compact_list-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,99,111,110,115,47,50,93,40,35,99,111,110,115,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[get_attrs/1](#get_attrs-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[is_list_skeleton/1](#is_list_skeleton-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[is_proper_list/1](#is_proper_list-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,108,105,115,116,47,49,93,40,35,108,105,115,116,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[list_elements/1](#list_elements-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[list_head/1](#list_head-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,108,105,115,116,95,108,101,110,103,116,104,47,49,93,40,
               35,108,105,115,116,95,108,101,110,103,116,104,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,108,105,115,116,95,112,114,101,102,105,120,47,49,93,40,
               35,108,105,115,116,95,112,114,101,102,105,120,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,108,105,115,116,95,115,117,102,102,105,120,47,49,93,40,
               35,108,105,115,116,95,115,117,102,102,105,120,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[list_tail/1](#list_tail-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,[15,91,110,105,108,47,48,93,40,35,110,105,108,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[normalize_list/1](#normalize_list-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,108,105,115,116,95,99,111,109,112,40,84,101,109,112,108,97,
               116,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Body::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"'Creates an abstract list comprehension."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"list_comp-2\">list_comp-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"*Creates an abstract list comprehension. If"}],
              0,false},
             {text,[6,42,66,111,100,121,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,"\e*[Template || E1, ..., En]*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[generator/2](#generator-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[list_comp_body/1](#list_comp_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"-[list_comp_template/1](#list_comp_template-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,108,105,115,116,95,99,111,109,112,95,98,111,100,121,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Returns the list of body subtrees of a list_comp node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"list_comp_body-1\">list_comp_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Returns the list of body subtrees of a"}],0,false},
             {text,"\v*list_comp*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[list_comp/2](#list_comp-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,108,105,115,116,95,99,111,109,112,95,116,101,109,112,108,97,
               116,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Returns the template subtree of a list_comp node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"list_comp_template-1\">list_comp_template-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Returns the template subtree of a"}],0,false},
             {text,"\v*list_comp*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[list_comp/2](#list_comp-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,108,105,115,116,95,101,108,101,109,101,110,116,115,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the list of element subtrees of a list skeleton."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"list_elements-1\">list_elements-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "8Returns the list of element subtrees of a list skeleton."}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"&must represent a proper list. E.g., if"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [25,42,91,88,49,44,32,88,50,32,124,32,91,88,51,44,32,88,52,32,
               124,32,91,93,93,42]},
             {sep,[{text,[7,34,44,32,116,104,101,110]}],0,false},
             {text,
              [21,42,108,105,115,116,95,101,108,101,109,101,110,116,115,40,78,
               111,100,101,41,42]},
             {sep,
              [{text,
                [15,121,105,101,108,100,115,32,116,104,101,32,108,105,115,
                 116]}],
              0,false},
             {text,[18,42,91,88,49,44,32,88,50,44,32,88,51,44,32,88,52,93,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[is_proper_list/1](#is_proper_list-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,108,105,115,116,95,104,101,97,100,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Returns the head element subtree of a list node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"list_head-1\">list_head-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"%Returns the head element subtree of a"}],0,false},
             {text,[6,42,108,105,115,116,42]},
             {sep,[{text,"\bnode. If"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,"\f*[Head ...]*"},
             {sep,
              [{text,
                [30,34,44,32,116,104,101,32,114,101,115,117,108,116,32,119,
                 105,108,108,32,114,101,112,114,101,115,101,110,116,32,34]}],
              0,false},
             {text,[6,42,72,101,97,100,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,99,111,110,115,47,50,93,40,35,99,111,110,115,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[list_tail/1](#list_tail-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,108,105,115,116,95,108,101,110,103,116,104,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [19,62,32,110,111,110,95,110,101,103,95,105,110,116,101,103,101,
               114,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Returns the number of element subtrees of a list skeleton."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"list_length-1\">list_length-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ":Returns the number of element subtrees of a list skeleton."}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"&must represent a proper list. E.g., if"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text," *[X1 | [X2, X3 | [X4, X5, X6]]]*"},
             {sep,[{text,[7,34,44,32,116,104,101,110]}],0,false},
             {text,
              [19,42,108,105,115,116,95,108,101,110,103,116,104,40,78,111,100,
               101,41,42]},
             {sep,
              [{text,
                [22,114,101,116,117,114,110,115,32,116,104,101,32,105,110,116,
                 101,103,101,114,32,54,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: this is equivalent to"}],0,false},
             {text,
              [29,42,108,101,110,103,116,104,40,108,105,115,116,95,101,108,
               101,109,101,110,116,115,40,78,111,100,101,41,41,42]},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[is_proper_list/1](#is_proper_list-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[list_elements/1](#list_elements-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,108,105,115,116,95,112,114,101,102,105,120,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the prefix element subtrees of a list node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"list_prefix-1\">list_prefix-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Returns the prefix element subtrees of a"}],
              0,false},
             {text,[6,42,108,105,115,116,42]},
             {sep,[{text,"\bnode. If"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,[{text,[6,34,32,111,114,32,34]}],0,false},
             {text,
              [22,42,91,69,49,44,32,46,46,46,44,32,69,110,32,124,32,84,97,105,
               108,93,42]},
             {sep,
              [{text,
                [24,34,44,32,116,104,101,32,114,101,116,117,114,110,101,100,
                 32,118,97,108,117,101,32,105,115]}],
              0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,108,105,115,116,95,115,117,102,102,105,120,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> none |"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Returns the suffix subtree of a list node, if one exists."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"list_suffix-1\">list_suffix-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [31,82,101,116,117,114,110,115,32,116,104,101,32,115,117,102,
                 102,105,120,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,[6,42,108,105,115,116,42]},
             {sep,
              [{text,
                [23,110,111,100,101,44,32,105,102,32,111,110,101,32,101,120,
                 105,115,116,115,46,32,73,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [22,42,91,69,49,44,32,46,46,46,44,32,69,110,32,124,32,84,97,105,
               108,93,42]},
             {sep,
              [{text,
                [24,34,44,32,116,104,101,32,114,101,116,117,114,110,101,100,
                 32,118,97,108,117,101,32,105,115]}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,
              [{text,
                [21,44,32,111,116,104,101,114,119,105,115,101,44,32,105,46,
                 101,46,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",Note that even if this function returns some"}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,[{text,"\vthat is not"}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,[{text,"\r, the type of"}],0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,[{text,[6,99,97,110,32,98,101]}],0,false},
             {text,[5,42,110,105,108,42]},
             {sep,
              [{text,
                "Z, if the tail has been given explicitly, and the list skeleton has not been compacted (see"}],
              0,false},
             {text,"![compact_list/1](#compact_list-1)"},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![compact_list/1](#compact_list-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,[15,91,110,105,108,47,48,93,40,35,110,105,108,45,48,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,108,105,115,116,95,116,97,105,108,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text," Returns the tail of a list node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"list_tail-1\">list_tail-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,82,101,116,117,114,110,115,32,116,104,101,32,116,97,105,
                 108,32,111,102,32,97]}],
              0,false},
             {text,[6,42,108,105,115,116,42]},
             {sep,[{text,"\bnode. If"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\"represents a single-element list \""}],0,false},
             {text,[5,42,91,69,93,42]},
             {sep,[{text,"\e\", then the result has type"}],0,false},
             {text,[5,42,110,105,108,42]},
             {sep,
              [{text,
                [16,44,32,114,101,112,114,101,115,101,110,116,105,110,103,32,
                 34]}],
              0,false},
             {text,[4,42,91,93,42]},
             {sep,[{text,[5,34,46,32,73,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[14,42,91,69,49,44,32,69,50,32,46,46,46,93,42]},
             {sep,
              [{text,
                [30,34,44,32,116,104,101,32,114,101,115,117,108,116,32,119,
                 105,108,108,32,114,101,112,114,101,115,101,110,116,32,34]}],
              0,false},
             {text,"\n*[E2 ...]*"},
             {sep,[{text,"\t\", and if"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[15,42,91,72,101,97,100,32,124,32,84,97,105,108,93,42]},
             {sep,
              [{text,
                [30,34,44,32,116,104,101,32,114,101,115,117,108,116,32,119,
                 105,108,108,32,114,101,112,114,101,115,101,110,116,32,34]}],
              0,false},
             {text,[6,42,84,97,105,108,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,99,111,110,115,47,50,93,40,35,99,111,110,115,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[list_head/1](#list_head-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\fmacro(Name::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text," Equivalent to macro(Name, none)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,109,97,99,114,111,45,49,34,62,109,97,
        99,114,111,45,49,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [29,91,109,97,99,114,111,40,78,97,109,101,44,32,110,111,110,101,
               41,93,40,35,109,97,99,114,111,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\fmacro(Name::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [21,44,32,65,114,103,117,109,101,110,116,115,58,58,110,111,110,
               101,32,124,32,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Creates an abstract macro application."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,109,97,99,114,111,45,50,34,62,109,97,
        99,114,111,45,50,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")Creates an abstract macro application. If"}],
              0,false},
             {text,"\v*Arguments*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,[7,42,63,78,97,109,101,42]},
             {sep,
              [{text,
                [16,34,44,32,111,116,104,101,114,119,105,115,101,44,32,105,
                 102]}],
              0,false},
             {text,"\v*Arguments*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,65,49,44,32,46,46,46,44,32,65,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [20,42,63,78,97,109,101,40,65,49,44,32,46,46,46,44,32,65,110,41,
               42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tNotes: if"}],0,false},
             {text,"\v*Arguments*"},
             {sep,
              [{text,"3is the empty list, the result will thus represent \""}],
              0,false},
             {text,"\t*?Name()*"},
             {sep,
              [{text,",\", including a pair of matching parentheses."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ÃˆThe only syntactical limitation imposed by the preprocessor on the arguments to a macro application (viewed as sequences of tokens) is that they must be balanced with respect to parentheses, brackets,"}],
              0,false},
             {text,[15,42,98,101,103,105,110,32,46,46,46,32,101,110,100,42]},
             {sep,[{text,[1,44]}],0,false},
             {text,[14,42,99,97,115,101,32,46,46,46,32,101,110,100,42]},
             {sep,[{text,"\n, etc. The"}],0,false},
             {text,[6,42,116,101,120,116,42]},
             {sep,
              [{text,
                "Unode type can be used to represent arguments which are not regular Erlang constructs."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,109,97,99,114,111,47,49,93,40,35,109,97,99,114,111,45,49,
               41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[macro_arguments/1](#macro_arguments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,109,97,99,114,111,95,110,97,109,101,47,49,93,40,35,109,
               97,99,114,111,95,110,97,109,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,101,120,116,47,49,93,40,35,116,101,120,116,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,109,97,99,114,111,95,97,114,103,117,109,101,110,116,115,40,
               78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> none | ["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ">Returns the list of argument subtrees of a macro node, if any."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"macro_arguments-1\">macro_arguments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"*Returns the list of argument subtrees of a"}],
              0,false},
             {text,[7,42,109,97,99,114,111,42]},
             {sep,
              [{text,
                [16,110,111,100,101,44,32,105,102,32,97,110,121,46,32,73,
                 102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[7,42,63,78,97,109,101,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [26,105,115,32,114,101,116,117,114,110,101,100,46,32,79,116,
                 104,101,114,119,105,115,101,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [20,42,63,78,97,109,101,40,65,49,44,32,46,46,46,44,32,65,110,41,
               42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[15,42,91,65,49,44,32,46,46,46,44,32,65,110,93,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,109,97,99,114,111,47,50,93,40,35,109,97,99,114,111,45,50,
               41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,109,97,99,114,111,95,110,97,109,101,40,78,111,100,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Returns the name subtree of a macro node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"macro_name-1\">macro_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,[7,42,109,97,99,114,111,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,109,97,99,114,111,47,50,93,40,35,109,97,99,114,111,45,50,
               41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [28,109,97,107,101,95,116,114,101,101,40,88,49,58,58,97,116,111,
               109,40,41,44,32,88,50,58,58,91,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[5,93,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Creates a syntax tree with the given type and subtrees."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"make_tree-2\">make_tree-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7Creates a syntax tree with the given type and subtrees."}],
              0,false},
             {text,[6,42,84,121,112,101,42]},
             {sep,
              [{text,
                [29,109,117,115,116,32,98,101,32,97,32,110,111,100,101,32,116,
                 121,112,101,32,110,97,109,101,32,40,115,101,101]}],
              0,false},
             {text,
              [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,49,41]},
             {sep,
              [{text,",) that does not denote a leaf node type (see"}],
              0,false},
             {text,
              [23,91,105,115,95,108,101,97,102,47,49,93,40,35,105,115,95,108,
               101,97,102,45,49,41]},
             {sep,[{text,[2,41,46]}],0,false},
             {text,"\b*Groups*"},
             {sep,[{text,"\tmust be a"}],0,false},
             {text,"\f**nonempty**"},
             {sep,
              [{text,
                "Â½list of groups of syntax trees, representing the subtrees of a node of the given type, in left-to-right order as they would occur in the printed program text, grouped by category as done by"}],
              0,false},
             {text,
              [25,91,115,117,98,116,114,101,101,115,47,49,93,40,35,115,117,98,
               116,114,101,101,115,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rThe result of"}],0,false},
             {text,
              "9*copy_attrs(Node, make_tree(type(Node), subtrees(Node)))*"},
             {sep,[{text,[4,40,115,101,101]}],0,false},
             {text,
              [31,91,117,112,100,97,116,101,95,116,114,101,101,47,50,93,40,35,
               117,112,100,97,116,101,95,116,114,101,101,45,50,41]},
             {sep,
              [{text,
                "6) represents the same source code text as the original"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [15,44,32,97,115,115,117,109,105,110,103,32,116,104,97,116]}],
              0,false},
             {text,
              [16,42,115,117,98,116,114,101,101,115,40,78,111,100,101,41,42]},
             {sep,
              [{text,
                "]yields a nonempty list. However, it does not necessarily have the same data representation as"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,99,111,112,121,95,97,116,116,114,115,47,50,93,40,35,99,
               111,112,121,95,97,116,116,114,115,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,108,101,97,102,47,49,93,40,35,105,115,95,108,
               101,97,102,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,115,117,98,116,114,101,101,115,47,49,93,40,35,115,117,98,
               116,114,101,101,115,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,117,112,100,97,116,101,95,116,114,101,101,47,50,93,40,35,
               117,112,100,97,116,101,95,116,114,101,101,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,109,97,112,95,101,120,112,114,40,70,105,101,108,100,115,58,
               58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Equivalent to map_expr(none, Fields)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"map_expr-1\">map_expr-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"%[map_expr(none, Fields)](#map_expr-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,109,97,112,95,101,120,112,114,40,65,114,103,117,109,101,110,
               116,58,58,110,111,110,101,32,124]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\v, Fields::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Creates an abstract map expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"map_expr-2\">map_expr-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Creates an abstract map expression. If"}],0,false},
             {text,"\b*Fields*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,70,49,44,32,46,46,46,44,32,70,110,93,42]},
             {sep,[{text,"\t, then if"}],0,false},
             {text,"\n*Argument*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,[16,42,35,123,70,49,44,32,46,46,46,44,32,70,110,125,42]},
             {sep,
              [{text,
                [28,34,44,32,111,116,104,101,114,119,105,115,101,32,105,116,
                 32,114,101,112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [24,42,65,114,103,117,109,101,110,116,35,123,70,49,44,32,46,46,
               46,44,32,70,110,125,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,109,97,112,95,101,120,112,114,47,49,93,40,35,109,97,112,
               95,101,120,112,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[map_expr_argument/1](#map_expr_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[map_expr_fields/1](#map_expr_fields-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[map_field_assoc/2](#map_field_assoc-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[map_field_exact/2](#map_field_exact-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,109,97,112,95,101,120,112,114,95,97,114,103,117,109,101,110,
               116,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> none |"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the argument subtree of a map_expr node, if any."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"map_expr_argument-1\">map_expr_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Returns the argument subtree of a"}],0,false},
             {text,"\n*map_expr*"},
             {sep,
              [{text,
                [16,110,111,100,101,44,32,105,102,32,97,110,121,46,32,73,
                 102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,"\b*#{...}*"},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [26,105,115,32,114,101,116,117,114,110,101,100,46,32,79,116,
                 104,101,114,119,105,115,101,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [16,42,65,114,103,117,109,101,110,116,35,123,46,46,46,125,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,"\n*Argument*"},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,109,97,112,95,101,120,112,114,47,50,93,40,35,109,97,112,
               95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,109,97,112,95,101,120,112,114,95,102,105,101,108,100,115,40,
               78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Returns the list of field subtrees of a map_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"map_expr_fields-1\">map_expr_fields-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'Returns the list of field subtrees of a"}],0,false},
             {text,"\n*map_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,109,97,112,95,101,120,112,114,47,50,93,40,35,109,97,112,
               95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,109,97,112,95,102,105,101,108,100,95,97,115,115,111,99,40,
               78,97,109,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Value::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Creates an abstract map assoc field."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"map_field_assoc-2\">map_field_assoc-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "<Creates an abstract map assoc field. The result represents \""}],
              0,false},
             {text,[15,42,78,97,109,101,32,61,62,32,86,97,108,117,101,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,109,97,112,95,101,120,112,114,47,50,93,40,35,109,97,112,
               95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[map_field_assoc_name/1](#map_field_assoc_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"3[map_field_assoc_value/1](#map_field_assoc_value-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\emap_field_assoc_name(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the name subtree of a map_field_assoc node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"map_field_assoc_name-1\">map_field_assoc_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [17,42,109,97,112,95,102,105,101,108,100,95,97,115,115,111,99,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[map_field_assoc/2](#map_field_assoc-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [28,109,97,112,95,102,105,101,108,100,95,97,115,115,111,99,95,
               118,97,108,117,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Returns the value subtree of a map_field_assoc node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"map_field_assoc_value-1\">map_field_assoc_value-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,118,97,108,
                 117,101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [17,42,109,97,112,95,102,105,101,108,100,95,97,115,115,111,99,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[map_field_assoc/2](#map_field_assoc-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,109,97,112,95,102,105,101,108,100,95,101,120,97,99,116,40,
               78,97,109,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Value::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Creates an abstract map exact field."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"map_field_exact-2\">map_field_exact-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "<Creates an abstract map exact field. The result represents \""}],
              0,false},
             {text,[15,42,78,97,109,101,32,58,61,32,86,97,108,117,101,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,109,97,112,95,101,120,112,114,47,50,93,40,35,109,97,112,
               95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[map_field_exact_name/1](#map_field_exact_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"3[map_field_exact_value/1](#map_field_exact_value-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\emap_field_exact_name(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the name subtree of a map_field_exact node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"map_field_exact_name-1\">map_field_exact_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [17,42,109,97,112,95,102,105,101,108,100,95,101,120,97,99,116,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[map_field_exact/2](#map_field_exact-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [28,109,97,112,95,102,105,101,108,100,95,101,120,97,99,116,95,
               118,97,108,117,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Returns the value subtree of a map_field_exact node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"map_field_exact_value-1\">map_field_exact_value-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,118,97,108,
                 117,101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [17,42,109,97,112,95,102,105,101,108,100,95,101,120,97,99,116,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[map_field_exact/2](#map_field_exact-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [24,35,35,32,109,97,112,95,116,121,112,101,40,41,32,45,62,32,116,101,
         114,109,40,41,10]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Equivalent to map_type(any_size)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"map_type-0\">map_type-0</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"![map_type(any_size)](#map_type-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [29,109,97,112,95,116,121,112,101,40,70,105,101,108,100,115,58,
               58,97,110,121,95,115,105,122,101,32,124,32,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [29,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,97,
             99,116,32,116,121,112,101,32,109,97,112,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"map_type-1\">map_type-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," Creates an abstract type map. If"}],0,false},
             {text,"\b*Fields*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,70,49,44,32,46,46,46,44,32,70,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,[16,42,35,123,70,49,44,32,46,46,46,44,32,70,110,125,42]},
             {sep,
              [{text,
                [16,34,59,32,111,116,104,101,114,119,105,115,101,44,32,105,
                 102]}],
              0,false},
             {text,"\b*Fields*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,"\n*any_size*"},
             {sep,
              [{text,
                [17,44,32,105,116,32,114,101,112,114,101,115,101,110,116,115,
                 32,34]}],
              0,false},
             {text,[7,42,109,97,112,40,41,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[map_type_fields/1](#map_type_fields-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,109,97,112,95,116,121,112,101,95,97,115,115,111,99,40,78,97,
               109,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Value::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Creates an abstract map type assoc field."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"map_type_assoc-2\">map_type_assoc-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ACreates an abstract map type assoc field. The result represents \""}],
              0,false},
             {text,[15,42,78,97,109,101,32,61,62,32,86,97,108,117,101,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,109,97,112,95,116,121,112,101,47,49,93,40,35,109,97,112,
               95,116,121,112,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[map_type_assoc_name/1](#map_type_assoc_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[map_type_assoc_value/1](#map_type_assoc_value-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,109,97,112,95,116,121,112,101,95,97,115,115,111,99,95,110,
               97,109,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Returns the name subtree of a map_type_assoc node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"map_type_assoc_name-1\">map_type_assoc_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [16,42,109,97,112,95,116,121,112,101,95,97,115,115,111,99,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[map_type_assoc/2](#map_type_assoc-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\emap_type_assoc_value(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the value subtree of a map_type_assoc node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"map_type_assoc_value-1\">map_type_assoc_value-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,118,97,108,
                 117,101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [16,42,109,97,112,95,116,121,112,101,95,97,115,115,111,99,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[map_type_assoc/2](#map_type_assoc-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,109,97,112,95,116,121,112,101,95,101,120,97,99,116,40,78,97,
               109,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Value::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Creates an abstract map type exact field."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"map_type_exact-2\">map_type_exact-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ACreates an abstract map type exact field. The result represents \""}],
              0,false},
             {text,[15,42,78,97,109,101,32,58,61,32,86,97,108,117,101,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,109,97,112,95,116,121,112,101,47,49,93,40,35,109,97,112,
               95,116,121,112,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[map_type_exact_name/1](#map_type_exact_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[map_type_exact_value/1](#map_type_exact_value-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,109,97,112,95,116,121,112,101,95,101,120,97,99,116,95,110,
               97,109,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Returns the name subtree of a map_type_exact node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"map_type_exact_name-1\">map_type_exact_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [16,42,109,97,112,95,116,121,112,101,95,101,120,97,99,116,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[map_type_exact/2](#map_type_exact-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\emap_type_exact_value(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the value subtree of a map_type_exact node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"map_type_exact_value-1\">map_type_exact_value-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,118,97,108,
                 117,101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [16,42,109,97,112,95,116,121,112,101,95,101,120,97,99,116,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[map_type_exact/2](#map_type_exact-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,109,97,112,95,116,121,112,101,95,102,105,101,108,100,115,40,
               78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,[14,62,32,97,110,121,95,115,105,122,101,32,124,32,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Returns the list of field subtrees of a map_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"map_type_fields-1\">map_type_fields-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'Returns the list of field subtrees of a"}],0,false},
             {text,"\n*map_type*"},
             {sep,[{text,"\bnode. If"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[7,42,109,97,112,40,41,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,"\n*any_size*"},
             {sep,
              [{text,
                [26,105,115,32,114,101,116,117,114,110,101,100,59,32,111,116,
                 104,101,114,119,105,115,101,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[16,42,35,123,70,49,44,32,46,46,46,44,32,70,110,125,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[15,42,91,70,49,44,32,46,46,46,44,32,70,110,93,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,109,97,112,95,116,121,112,101,47,48,93,40,35,109,97,112,
               95,116,121,112,101,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,109,97,112,95,116,121,112,101,47,49,93,40,35,109,97,112,
               95,116,121,112,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,109,97,116,99,104,95,101,120,112,114,40,80,97,116,116,101,
               114,110,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Body::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Creates an abstract match-expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"match_expr-2\">match_expr-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "=Creates an abstract match-expression. The result represents \""}],
              0,false},
             {text,
              [16,42,80,97,116,116,101,114,110,32,61,32,66,111,100,121,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[match_expr_body/1](#match_expr_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"-[match_expr_pattern/1](#match_expr_pattern-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,109,97,116,99,104,95,101,120,112,114,95,98,111,100,121,40,
               78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Returns the body subtree of a match_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"match_expr_body-1\">match_expr_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,98,111,100,
                 121,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\f*match_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,109,97,116,99,104,95,101,120,112,114,47,50,93,40,35,109,
               97,116,99,104,95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,109,97,116,99,104,95,101,120,112,114,95,112,97,116,116,101,
               114,110,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Returns the pattern subtree of a match_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"match_expr_pattern-1\">match_expr_pattern-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," Returns the pattern subtree of a"}],0,false},
             {text,"\f*match_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,109,97,116,99,104,95,101,120,112,114,47,50,93,40,35,109,
               97,116,99,104,95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\bmeta(T::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Creates a meta-representation of a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"meta-1\">meta-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "\\Creates a meta-representation of a syntax tree. The result represents an Erlang expression \""}],
              0,false},
             {text,"\n*MetaTree*"},
             {sep,
              [{text,
                "]\" which, if evaluated, will yield a new syntax tree representing the same source code text as"}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                "Y(although the actual data representation may be different). The expression represented by"}],
              0,false},
             {text,"\n*MetaTree*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,
              [30,42,42,105,109,112,108,101,109,101,110,116,97,116,105,111,
               110,32,105,110,100,101,112,101,110,100,101,110,116,42,42]},
             {sep,
              [{text,
                "qwith regard to the data structures used by the abstract syntax tree implementation. Comments attached to nodes of"}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,"1will be preserved, but other attributes are lost."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\vAny node in"}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                [18,119,104,111,115,101,32,110,111,100,101,32,116,121,112,101,
                 32,105,115]}],
              0,false},
             {text,"\n*variable*"},
             {sep,[{text,[4,40,115,101,101]}],0,false},
             {text,
              [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,49,41]},
             {sep,[{text,"%), and whose list of annotations (see"}],0,false},
             {text,
              [23,91,103,101,116,95,97,110,110,47,49,93,40,35,103,101,116,95,
               97,110,110,45,49,41]},
             {sep,
              [{text,
                [19,41,32,99,111,110,116,97,105,110,115,32,116,104,101,32,97,
                 116,111,109]}],
              0,false},
             {text,"\n*meta_var*"},
             {sep,
              [{text,
                "T, will remain unchanged in the resulting tree, except that exactly one occurrence of"}],
              0,false},
             {text,"\n*meta_var*"},
             {sep,[{text,"$is removed from its annotation list."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [28,84,104,101,32,109,97,105,110,32,117,115,101,32,111,102,32,
                 116,104,101,32,102,117,110,99,116,105,111,110]}],
              0,false},
             {text,"\b*meta/1*"},
             {sep,[{text," is to transform a data structure"}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                "?, which represents a piece of program code, into a form that is"}],
              0,false},
             {text,"+**representation independent when printed**"},
             {sep,
              [{text,
                [15,46,32,69,46,103,46,44,32,115,117,112,112,111,115,101]}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                ":represents a variable named \"V\". Then (assuming a function"}],
              0,false},
             {text,"\t*print/1*"},
             {sep,[{text,"&for printing syntax trees), evaluating"}],0,false},
             {text,
              [23,42,112,114,105,110,116,40,97,98,115,116,114,97,99,116,40,84,
               114,101,101,41,41,42]},
             {sep,
              [{text,
                [14,45,32,115,105,109,112,108,121,32,117,115,105,110,103]}],
              0,false},
             {text,
              [25,91,97,98,115,116,114,97,99,116,47,49,93,40,35,97,98,115,116,
               114,97,99,116,45,49,41]},
             {sep,
              [{text,
                "{to map the actual data structure onto a syntax tree representation - would output a string that might look something like \""}],
              0,false},
             {text,"!*{tree, variable, ..., \"V\", ...}*"},
             {sep,
              [{text,
                [266,34,44,32,119,104,105,99,104,32,105,115,32,111,98,118,105,
                 111,117,115,108,121,32,100,101,112,101,110,100,101,110,116,
                 32,111,110,32,116,104,101,32,105,109,112,108,101,109,101,110,
                 116,97,116,105,111,110,32,111,102,32,116,104,101,32,97,98,
                 115,116,114,97,99,116,32,115,121,110,116,97,120,32,116,114,
                 101,101,115,46,32,84,104,105,115,32,99,111,117,108,100,32,
                 101,46,103,46,32,98,101,32,117,115,101,102,117,108,32,102,
                 111,114,32,99,97,99,104,105,110,103,32,97,32,115,121,110,116,
                 97,120,32,116,114,101,101,32,105,110,32,97,32,102,105,108,
                 101,46,32,72,111,119,101,118,101,114,44,32,105,110,32,115,
                 111,109,101,32,115,105,116,117,97,116,105,111,110,115,32,108,
                 105,107,101,32,105,110,32,97,32,112,114,111,103,114,97,109,
                 32,103,101,110,101,114,97,116,111,114,32,103,101,110,101,114,
                 97,116,111,114,32,40,119,105,116,104,32,116,119,111,32,34,
                 103,101,110,101,114,97,116,111,114,34,41,44,32,105,116,32,
                 109,97,121,32,98,101,32,117,110,97,99,99,101,112,116,97,98,
                 108,101,46,32,85,115,105,110,103]}],
              0,false},
             {text,
              [19,42,112,114,105,110,116,40,109,101,116,97,40,84,114,101,101,
               41,41,42]},
             {sep,
              [{text,
                [22,105,110,115,116,101,97,100,32,119,111,117,108,100,32,111,
                 117,116,112,117,116,32,97]}],
              0,false},
             {text,
              [30,42,42,114,101,112,114,101,115,101,110,116,97,116,105,111,
               110,32,105,110,100,101,112,101,110,100,101,110,116,42,42]},
             {sep,
              [{text,
                "Fsyntax tree generating expression; in the above case, something like \""}],
              0,false},
             {text,
              [26,42,101,114,108,95,115,121,110,116,97,120,58,118,97,114,105,
               97,98,108,101,40,34,86,34,41,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,97,98,115,116,114,97,99,116,47,49,93,40,35,97,98,115,116,
               114,97,99,116,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,103,101,116,95,97,110,110,47,49,93,40,35,103,101,116,95,
               97,110,110,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,109,111,100,117,108,101,95,113,117,97,108,105,102,105,101,
               114,40,77,111,100,117,108,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Body::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Creates an abstract module qualifier."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"module_qualifier-2\">module_qualifier-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "=Creates an abstract module qualifier. The result represents \""}],
              0,false},
             {text,"\r*Module:Body*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              ";[module_qualifier_argument/1](#module_qualifier_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"3[module_qualifier_body/1](#module_qualifier_body-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text," module_qualifier_argument(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "EReturns the argument (the module) subtree of a module_qualifier node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "E<a name=\"module_qualifier_argument-1\">module_qualifier_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,".Returns the argument (the module) subtree of a"}],
              0,false},
             {text,
              [18,42,109,111,100,117,108,101,95,113,117,97,108,105,102,105,
               101,114,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[module_qualifier/2](#module_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [28,109,111,100,117,108,101,95,113,117,97,108,105,102,105,101,
               114,95,98,111,100,121,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Returns the body subtree of a module_qualifier node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"module_qualifier_body-1\">module_qualifier_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,98,111,100,
                 121,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [18,42,109,111,100,117,108,101,95,113,117,97,108,105,102,105,
               101,114,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[module_qualifier/2](#module_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,110,97,109,101,100,95,102,117,110,95,101,120,112,114,40,78,
               97,109,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\f, Clauses::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Creates an abstract named fun-expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"named_fun_expr-2\">named_fun_expr-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",Creates an abstract named fun-expression. If"}],
              0,false},
             {text,"\t*Clauses*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,67,49,44,32,46,46,46,44,32,67,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [31,42,102,117,110,32,78,97,109,101,32,67,49,59,32,46,46,46,59,
               32,78,97,109,101,32,67,110,32,101,110,100,42]},
             {sep,
              [{text,
                [24,34,46,32,77,111,114,101,32,101,120,97,99,116,108,121,44,
                 32,105,102,32,101,97,99,104]}],
              0,false},
             {text,[4,42,67,105,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [26,42,40,80,105,49,44,32,46,46,46,44,32,80,105,109,41,32,71,
               105,32,45,62,32,66,105,42]},
             {sep,
              [{text,
                [31,34,44,32,116,104,101,110,32,116,104,101,32,114,101,115,
                 117,108,116,32,114,101,112,114,101,115,101,110,116,115,32,
                 34]}],
              0,false},
             {text,
              "I*fun Name(P11, ..., P1m) G1 -> B1; ...; Name(Pn1, ..., Pnm) Gn -> Bn end*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"1[named_fun_expr_arity/1](#named_fun_expr_arity-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"5[named_fun_expr_clauses/1](#named_fun_expr_clauses-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[named_fun_expr_name/1](#named_fun_expr_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\enamed_fun_expr_arity(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\t> arity()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Returns the arity of a named_fun_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"named_fun_expr_arity-1\">named_fun_expr_arity-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,82,101,116,117,114,110,115,32,116,104,101,32,97,114,105,
                 116,121,32,111,102,32,97]}],
              0,false},
             {text,
              [16,42,110,97,109,101,100,95,102,117,110,95,101,120,112,114,42]},
             {sep,
              [{text,
                [133,110,111,100,101,46,32,84,104,101,32,114,101,115,117,108,
                 116,32,105,115,32,116,104,101,32,110,117,109,98,101,114,32,
                 111,102,32,112,97,114,97,109,101,116,101,114,32,112,97,116,
                 116,101,114,110,115,32,105,110,32,116,104,101,32,102,105,114,
                 115,116,32,99,108,97,117,115,101,32,111,102,32,116,104,101,
                 32,110,97,109,101,100,32,102,117,110,45,101,120,112,114,101,
                 115,115,105,111,110,59,32,115,117,98,115,101,113,117,101,110,
                 116,32,99,108,97,117,115,101,115,32,97,114,101,32,105,103,
                 110,111,114,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [25,65,110,32,101,120,99,101,112,116,105,111,110,32,105,115,
                 32,116,104,114,111,119,110,32,105,102]}],
              0,false},
             {text,
              [30,42,110,97,109,101,100,95,102,117,110,95,101,120,112,114,95,
               99,108,97,117,115,101,115,40,78,111,100,101,41,42]},
             {sep,
              [{text,
                "Preturns an empty list, or if the first element of that list is not a syntax tree"}],
              0,false},
             {text,[3,42,67,42]},
             {sep,[{text,[7,111,102,32,116,121,112,101]}],0,false},
             {text,"\b*clause*"},
             {sep,[{text,"\tsuch that"}],0,false},
             {text,
              [20,42,99,108,97,117,115,101,95,112,97,116,116,101,114,110,115,
               40,67,41,42]},
             {sep,
              [{text,
                [19,105,115,32,97,32,110,111,110,101,109,112,116,121,32,108,
                 105,115,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[clause_patterns/1](#clause_patterns-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[named_fun_expr/2](#named_fun_expr-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"5[named_fun_expr_clauses/1](#named_fun_expr_clauses-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [29,110,97,109,101,100,95,102,117,110,95,101,120,112,114,95,99,
               108,97,117,115,101,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "=Returns the list of clause subtrees of a named_fun_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"named_fun_expr_clauses-1\">named_fun_expr_clauses-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Returns the list of clause subtrees of a"}],
              0,false},
             {text,
              [16,42,110,97,109,101,100,95,102,117,110,95,101,120,112,114,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[named_fun_expr/2](#named_fun_expr-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,110,97,109,101,100,95,102,117,110,95,101,120,112,114,95,110,
               97,109,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Returns the name subtree of a named_fun_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"named_fun_expr_name-1\">named_fun_expr_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [16,42,110,97,109,101,100,95,102,117,110,95,101,120,112,114,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[named_fun_expr/2](#named_fun_expr-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\bnil() ->"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,97,
             99,116,32,101,109,112,116,121,32,108,105,115,116,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [25,60,97,32,110,97,109,101,61,34,110,105,108,45,48,34,62,110,105,108,
        45,48,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7Creates an abstract empty list. The result represents \""}],
              0,false},
             {text,[4,42,91,93,42]},
             {sep,
              [{text,"0\". The empty list is traditionally called \"nil\"."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[is_list_skeleton/1](#is_list_skeleton-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,110,111,114,109,97,108,105,122,101,95,108,105,115,116,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "<Expands an abstract list skeleton to its most explicit form."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"normalize_list-1\">normalize_list-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?Expands an abstract list skeleton to its most explicit form. If"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [22,42,91,69,49,44,32,46,46,46,44,32,69,110,32,124,32,84,97,105,
               108,93,42]},
             {sep,
              [{text,
                [26,34,44,32,116,104,101,32,114,101,115,117,108,116,32,114,
                 101,112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [30,42,91,69,49,32,124,32,46,46,46,32,91,69,110,32,124,32,84,97,
               105,108,49,93,32,46,46,46,32,93,42]},
             {sep,[{text,"\b\", where"}],0,false},
             {text,[7,42,84,97,105,108,49,42]},
             {sep,
              [{text,
                [16,105,115,32,116,104,101,32,114,101,115,117,108,116,32,111,
                 102]}],
              0,false},
             {text,
              [22,42,110,111,114,109,97,108,105,122,101,95,108,105,115,116,40,
               84,97,105,108,41,42]},
             {sep,[{text,[4,46,32,73,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[15,42,91,69,49,44,32,46,46,46,44,32,69,110,93,42]},
             {sep,[{text,"!\", the result simply represents \""}],0,false},
             {text,"\e*[E1 | ... [En | []] ... ]*"},
             {sep,[{text,[5,34,46,32,73,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"#does not represent a list skeleton,"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [19,105,116,115,101,108,102,32,105,115,32,114,101,116,117,114,
                 110,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![compact_list/1](#compact_list-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"$operator(Name::atom() | string()) ->"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [29,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,97,
             99,116,32,111,112,101,114,97,116,111,114,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"operator-1\">operator-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "_Creates an abstract operator. The name of the operator is the character sequence represented by"}],
              0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,
              [{text,
                "|. This is analogous to the print name of an atom, but an operator is never written within single-quotes; e.g., the result of"}],
              0,false},
             {text,"\v*operator(*"},
             {sep,
              [{text,
                [18,43,43,39,41,39,32,114,101,112,114,101,115,101,110,116,115,
                 32,34]}],
              0,false},
             {text,[4,42,43,43,42]},
             {sep,
              [{text,
                [22,34,32,114,97,116,104,101,114,32,116,104,97,110,32,34,96,
                 43,43,39,39,34,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,97,116,111,109,47,49,93,40,35,97,116,111,109,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[operator_literal/1](#operator_literal-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[operator_name/1](#operator_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,111,112,101,114,97,116,111,114,95,108,105,116,101,114,97,
               108,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> string()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ";Returns the literal string represented by an operator node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"operator_literal-1\">operator_literal-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",Returns the literal string represented by an"}],
              0,false},
             {text,"\n*operator*"},
             {sep,
              [{text,"3node. This is simply the operator name as a string."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,111,112,101,114,97,116,111,114,47,49,93,40,35,111,112,
               101,114,97,116,111,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,111,112,101,114,97,116,111,114,95,110,97,109,101,40,78,111,
               100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> atom()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Returns the name of an operator node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"operator_name-1\">operator_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,111,102,32,97,110]}],
              0,false},
             {text,"\n*operator*"},
             {sep,
              [{text,"0node. Note that the name is returned as an atom."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,111,112,101,114,97,116,111,114,47,49,93,40,35,111,112,
               101,114,97,116,111,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,112,97,114,101,110,116,104,101,115,101,115,40,69,120,112,
               114,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Creates an abstract parenthesised expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"parentheses-1\">parentheses-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ECreates an abstract parenthesised expression. The result represents \""}],
              0,false},
             {text,"\b*(Body)*"},
             {sep,[{text," \", independently of the context."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[parentheses_body/1](#parentheses_body-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,112,97,114,101,110,116,104,101,115,101,115,95,98,111,100,
               121,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Returns the body subtree of a parentheses node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"parentheses_body-1\">parentheses_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,98,111,100,
                 121,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\r*parentheses*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,112,97,114,101,110,116,104,101,115,101,115,47,49,93,40,
               35,112,97,114,101,110,116,104,101,115,101,115,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,112,114,101,102,105,120,95,101,120,112,114,40,79,112,101,
               114,97,116,111,114,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\f, Argument::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Creates an abstract prefix operator expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"prefix_expr-2\">prefix_expr-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GCreates an abstract prefix operator expression. The result represents \""}],
              0,false},
             {text,
              [19,42,79,112,101,114,97,116,111,114,32,65,114,103,117,109,101,
               110,116,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,105,110,102,105,120,95,101,120,112,114,47,51,93,40,35,
               105,110,102,105,120,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[prefix_expr_argument/1](#prefix_expr_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[prefix_expr_operator/1](#prefix_expr_operator-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\eprefix_expr_argument(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the argument subtree of a prefix_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"prefix_expr_argument-1\">prefix_expr_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Returns the argument subtree of a"}],0,false},
             {text,"\r*prefix_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,112,114,101,102,105,120,95,101,120,112,114,47,50,93,40,
               35,112,114,101,102,105,120,95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\eprefix_expr_operator(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Returns the operator subtree of a prefix_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"prefix_expr_operator-1\">prefix_expr_operator-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Returns the operator subtree of a"}],0,false},
             {text,"\r*prefix_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,112,114,101,102,105,120,95,101,120,112,114,47,50,93,40,
               35,112,114,101,102,105,120,95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,114,101,99,101,105,118,101,95,101,120,112,114,40,67,108,97,
               117,115,101,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Equivalent to receive_expr(Clauses, none, [])."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"receive_expr-1\">receive_expr-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"2[receive_expr(Clauses, none, [])](#receive_expr-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,114,101,99,101,105,118,101,95,101,120,112,114,40,67,108,97,
               117,115,101,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [18,93,44,32,84,105,109,101,111,117,116,58,58,110,111,110,101,
               32,124]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\v, Action::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"'Creates an abstract receive-expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"receive_expr-3\">receive_expr-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"*Creates an abstract receive-expression. If"}],
              0,false},
             {text,"\t*Timeout*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [25,42,114,101,99,101,105,118,101,32,67,49,59,32,46,46,46,59,32,
               67,110,32,101,110,100,42]},
             {sep,[{text,[6,34,32,40,116,104,101]}],0,false},
             {text,"\b*Action*"},
             {sep,[{text,"#argument is ignored). Otherwise, if"}],0,false},
             {text,"\t*Clauses*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,67,49,44,32,46,46,46,44,32,67,110,93,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\b*Action*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,65,49,44,32,46,46,46,44,32,65,109,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,"6*receive C1; ...; Cn after Timeout -> A1, ..., Am end*"},
             {sep,
              [{text,
                [24,34,46,32,77,111,114,101,32,101,120,97,99,116,108,121,44,
                 32,105,102,32,101,97,99,104]}],
              0,false},
             {text,[4,42,67,105,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[15,42,40,80,105,41,32,71,105,32,45,62,32,66,105,42]},
             {sep,
              [{text,
                [31,34,44,32,116,104,101,110,32,116,104,101,32,114,101,115,
                 117,108,116,32,114,101,112,114,101,115,101,110,116,115,32,
                 34]}],
              0,false},
             {text,"/*receive P1 G1 -> B1; ...; Pn Gn -> Bn ... end*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "hNote that in Erlang, a receive-expression must have at least one clause if no timeout part is specified."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[case_expr/2](#case_expr-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![receive_expr/1](#receive_expr-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[receive_expr_action/1](#receive_expr_action-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[receive_expr_clauses/1](#receive_expr_clauses-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[receive_expr_timeout/1](#receive_expr_timeout-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,114,101,99,101,105,118,101,95,101,120,112,114,95,97,99,116,
               105,111,110,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "@Returns the list of action body subtrees of a receive_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"receive_expr_action-1\">receive_expr_action-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"-Returns the list of action body subtrees of a"}],
              0,false},
             {text,[14,42,114,101,99,101,105,118,101,95,101,120,112,114,42]},
             {sep,[{text,"\bnode. If"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [25,42,114,101,99,101,105,118,101,32,67,49,59,32,46,46,46,59,32,
               67,110,32,101,110,100,42]},
             {sep,
              [{text,
                [26,34,44,32,116,104,105,115,32,105,115,32,116,104,101,32,101,
                 109,112,116,121,32,108,105,115,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![receive_expr/3](#receive_expr-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\ereceive_expr_clauses(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ";Returns the list of clause subtrees of a receive_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"receive_expr_clauses-1\">receive_expr_clauses-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Returns the list of clause subtrees of a"}],
              0,false},
             {text,[14,42,114,101,99,101,105,118,101,95,101,120,112,114,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![receive_expr/3](#receive_expr-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\ereceive_expr_timeout(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> none |"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ";Returns the timeout subtree of a receive_expr node, if any."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"receive_expr_timeout-1\">receive_expr_timeout-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," Returns the timeout subtree of a"}],0,false},
             {text,[14,42,114,101,99,101,105,118,101,95,101,120,112,114,42]},
             {sep,
              [{text,
                [16,110,111,100,101,44,32,105,102,32,97,110,121,46,32,73,
                 102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [25,42,114,101,99,101,105,118,101,32,67,49,59,32,46,46,46,59,32,
               67,110,32,101,110,100,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [26,105,115,32,114,101,116,117,114,110,101,100,46,32,79,116,
                 104,101,114,119,105,115,101,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,".*receive C1; ...; Cn after Timeout -> ... end*"},
             {sep,[{text,[2,34,44]}],0,false},
             {text,"\t*Timeout*"},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![receive_expr/3](#receive_expr-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,114,101,99,111,114,100,95,97,99,99,101,115,115,40,65,114,
               103,117,109,101,110,116,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Type::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Field::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Creates an abstract record field access expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"record_access-3\">record_access-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "KCreates an abstract record field access expression. The result represents \""}],
              0,false},
             {text,
              [21,42,65,114,103,117,109,101,110,116,35,84,121,112,101,46,70,
               105,101,108,100,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"5[record_access_argument/1](#record_access_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[record_access_field/1](#record_access_field-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"-[record_access_type/1](#record_access_type-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,114,101,99,111,114,100,95,101,120,112,114,47,51,93,40,35,
               114,101,99,111,114,100,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [29,114,101,99,111,114,100,95,97,99,99,101,115,115,95,97,114,
               103,117,109,101,110,116,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Returns the argument subtree of a record_access node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"record_access_argument-1\">record_access_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Returns the argument subtree of a"}],0,false},
             {text,[15,42,114,101,99,111,114,100,95,97,99,99,101,115,115,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"#[record_access/3](#record_access-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,114,101,99,111,114,100,95,97,99,99,101,115,115,95,102,105,
               101,108,100,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Returns the field subtree of a record_access node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"record_access_field-1\">record_access_field-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,102,105,101,
                 108,100,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,[15,42,114,101,99,111,114,100,95,97,99,99,101,115,115,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"#[record_access/3](#record_access-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,114,101,99,111,114,100,95,97,99,99,101,115,115,95,116,121,
               112,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Returns the type subtree of a record_access node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"record_access_type-1\">record_access_type-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,116,121,112,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,[15,42,114,101,99,111,114,100,95,97,99,99,101,115,115,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"#[record_access/3](#record_access-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,114,101,99,111,114,100,95,101,120,112,114,40,84,121,112,101,
               58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\v, Fields::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Equivalent to record_expr(none, Type, Fields)."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"record_expr-2\">record_expr-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"1[record_expr(none, Type, Fields)](#record_expr-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [28,114,101,99,111,114,100,95,101,120,112,114,40,65,114,103,117,
               109,101,110,116,58,58,110,111,110,101,32,124]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Type::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\v, Fields::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Creates an abstract record expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"record_expr-3\">record_expr-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")Creates an abstract record expression. If"}],
              0,false},
             {text,"\b*Fields*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,70,49,44,32,46,46,46,44,32,70,110,93,42]},
             {sep,[{text,"\t, then if"}],0,false},
             {text,"\n*Argument*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [20,42,35,84,121,112,101,123,70,49,44,32,46,46,46,44,32,70,110,
               125,42]},
             {sep,
              [{text,
                [28,34,44,32,111,116,104,101,114,119,105,115,101,32,105,116,
                 32,114,101,112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [28,42,65,114,103,117,109,101,110,116,35,84,121,112,101,123,70,
               49,44,32,46,46,46,44,32,70,110,125,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"#[record_access/3](#record_access-3)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,114,101,99,111,114,100,95,101,120,112,114,47,50,93,40,35,
               114,101,99,111,114,100,95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"1[record_expr_argument/1](#record_expr_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"-[record_expr_fields/1](#record_expr_fields-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[record_expr_type/1](#record_expr_type-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![record_field/2](#record_field-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[record_index_expr/2](#record_index_expr-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\erecord_expr_argument(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> none |"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ";Returns the argument subtree of a record_expr node, if any."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"record_expr_argument-1\">record_expr_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Returns the argument subtree of a"}],0,false},
             {text,"\r*record_expr*"},
             {sep,
              [{text,
                [16,110,111,100,101,44,32,105,102,32,97,110,121,46,32,73,
                 102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,"\f*#Type{...}*"},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [26,105,115,32,114,101,116,117,114,110,101,100,46,32,79,116,
                 104,101,114,119,105,115,101,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [20,42,65,114,103,117,109,101,110,116,35,84,121,112,101,123,46,
               46,46,125,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,"\n*Argument*"},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,114,101,99,111,114,100,95,101,120,112,114,47,51,93,40,35,
               114,101,99,111,114,100,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,114,101,99,111,114,100,95,101,120,112,114,95,102,105,101,
               108,100,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Returns the list of field subtrees of a record_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"record_expr_fields-1\">record_expr_fields-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'Returns the list of field subtrees of a"}],0,false},
             {text,"\r*record_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,114,101,99,111,114,100,95,101,120,112,114,47,51,93,40,35,
               114,101,99,111,114,100,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,114,101,99,111,114,100,95,101,120,112,114,95,116,121,112,
               101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Returns the type subtree of a record_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"record_expr_type-1\">record_expr_type-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,116,121,112,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\r*record_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,114,101,99,111,114,100,95,101,120,112,114,47,51,93,40,35,
               114,101,99,111,114,100,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,114,101,99,111,114,100,95,102,105,101,108,100,40,78,97,109,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"'Equivalent to record_field(Name, none)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"record_field-1\">record_field-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"+[record_field(Name, none)](#record_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,114,101,99,111,114,100,95,102,105,101,108,100,40,78,97,109,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[15,44,32,86,97,108,117,101,58,58,110,111,110,101,32,124]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Creates an abstract record field specification."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"record_field-2\">record_field-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"2Creates an abstract record field specification. If"}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,[{text," , the result represents simply \""}],0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,
              [{text,
                [28,34,44,32,111,116,104,101,114,119,105,115,101,32,105,116,
                 32,114,101,112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,[14,42,78,97,109,101,32,61,32,86,97,108,117,101,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,114,101,99,111,114,100,95,101,120,112,114,47,51,93,40,35,
               114,101,99,111,114,100,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[record_field_name/1](#record_field_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"-[record_field_value/1](#record_field_value-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,114,101,99,111,114,100,95,102,105,101,108,100,95,110,97,109,
               101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Returns the name subtree of a record_field node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"record_field_name-1\">record_field_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,[14,42,114,101,99,111,114,100,95,102,105,101,108,100,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![record_field/2](#record_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,114,101,99,111,114,100,95,102,105,101,108,100,95,118,97,108,
               117,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> none |"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Returns the value subtree of a record_field node, if any."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"record_field_value-1\">record_field_value-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,118,97,108,
                 117,101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,[14,42,114,101,99,111,114,100,95,102,105,101,108,100,42]},
             {sep,
              [{text,
                [16,110,111,100,101,44,32,105,102,32,97,110,121,46,32,73,
                 102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [26,105,115,32,114,101,116,117,114,110,101,100,46,32,79,116,
                 104,101,114,119,105,115,101,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[14,42,78,97,109,101,32,61,32,86,97,108,117,101,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"![record_field/2](#record_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,114,101,99,111,114,100,95,105,110,100,101,120,95,101,120,
               112,114,40,84,121,112,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t, Field::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Creates an abstract record field index expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"record_index_expr-2\">record_index_expr-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "JCreates an abstract record field index expression. The result represents \""}],
              0,false},
             {text,"\r*#Type.Field*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [24,40,78,111,116,101,58,32,116,104,101,32,102,117,110,99,116,
                 105,111,110,32,110,97,109,101]}],
              0,false},
             {text,
              [16,42,114,101,99,111,114,100,95,105,110,100,101,120,47,50,42]},
             {sep,
              [{text,
                "cis reserved by the Erlang compiler, which is why that name could not be used for this constructor.)"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,114,101,99,111,114,100,95,101,120,112,114,47,51,93,40,35,
               114,101,99,111,114,100,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"7[record_index_expr_field/1](#record_index_expr_field-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"5[record_index_expr_type/1](#record_index_expr_type-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [30,114,101,99,111,114,100,95,105,110,100,101,120,95,101,120,
               112,114,95,102,105,101,108,100,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Returns the field subtree of a record_index_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "A<a name=\"record_index_expr_field-1\">record_index_expr_field-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,102,105,101,
                 108,100,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [19,42,114,101,99,111,114,100,95,105,110,100,101,120,95,101,120,
               112,114,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[record_index_expr/2](#record_index_expr-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [29,114,101,99,111,114,100,95,105,110,100,101,120,95,101,120,
               112,114,95,116,121,112,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Returns the type subtree of a record_index_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"record_index_expr_type-1\">record_index_expr_type-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,116,121,112,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [19,42,114,101,99,111,114,100,95,105,110,100,101,120,95,101,120,
               112,114,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[record_index_expr/2](#record_index_expr-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,114,101,99,111,114,100,95,116,121,112,101,40,78,97,109,101,
               58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\v, Fields::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text," Creates an abstract record type."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"record_type-2\">record_type-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Creates an abstract record type. If"}],0,false},
             {text,"\b*Fields*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,70,49,44,32,46,46,46,44,32,70,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [20,42,35,78,97,109,101,123,70,49,44,32,46,46,46,44,32,70,110,
               125,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"-[record_type_fields/1](#record_type_fields-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[record_type_name/1](#record_type_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,114,101,99,111,114,100,95,116,121,112,101,95,102,105,101,
               108,100,40,78,97,109,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Type::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Creates an abstract record type field."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"record_type_field-2\">record_type_field-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ">Creates an abstract record type field. The result represents \""}],
              0,false},
             {text,[14,42,78,97,109,101,32,58,58,32,84,121,112,101,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"5[record_type_field_name/1](#record_type_field_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"5[record_type_field_type/1](#record_type_field_type-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [29,114,101,99,111,114,100,95,116,121,112,101,95,102,105,101,
               108,100,95,110,97,109,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Returns the name subtree of a record_type_field node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"record_type_field_name-1\">record_type_field_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [19,42,114,101,99,111,114,100,95,116,121,112,101,95,102,105,101,
               108,100,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[record_type_field/2](#record_type_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [29,114,101,99,111,114,100,95,116,121,112,101,95,102,105,101,
               108,100,95,116,121,112,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Returns the type subtree of a record_type_field node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"record_type_field_type-1\">record_type_field_type-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,116,121,112,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [19,42,114,101,99,111,114,100,95,116,121,112,101,95,102,105,101,
               108,100,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"+[record_type_field/2](#record_type_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,114,101,99,111,114,100,95,116,121,112,101,95,102,105,101,
               108,100,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Returns the fields subtree of a record_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"record_type_fields-1\">record_type_fields-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [31,82,101,116,117,114,110,115,32,116,104,101,32,102,105,101,
                 108,100,115,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\r*record_type*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,114,101,99,111,114,100,95,116,121,112,101,47,50,93,40,35,
               114,101,99,111,114,100,95,116,121,112,101,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,114,101,99,111,114,100,95,116,121,112,101,95,110,97,109,101,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Returns the name subtree of a record_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"record_type_name-1\">record_type_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,"\r*record_type*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,114,101,99,111,114,100,95,116,121,112,101,47,50,93,40,35,
               114,101,99,111,114,100,95,116,121,112,101,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,114,101,109,111,118,101,95,99,111,109,109,101,110,116,115,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"'Clears the associated comments of Node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"remove_comments-1\">remove_comments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Clears the associated comments of"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: This is equivalent to"}],0,false},
             {text,"1*set_precomments(set_postcomments(Node, []), [])*"},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[set_postcomments/2](#set_postcomments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[set_precomments/2](#set_precomments-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\rrevert(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "MReturns an erl_parse-compatible representation of a syntax tree, if possible."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [31,60,97,32,110,97,109,101,61,34,114,101,118,101,114,116,45,49,34,62,
        114,101,118,101,114,116,45,49,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nReturns an"}],0,false},
             {text,"\v*erl_parse*"},
             {sep,
              [{text,
                "<-compatible representation of a syntax tree, if possible. If"}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                "nrepresents a well-formed Erlang program or expression, the conversion should work without problems. Typically,"}],
              0,false},
             {text,
              [23,91,105,115,95,116,114,101,101,47,49,93,40,35,105,115,95,116,
               114,101,101,45,49,41]},
             {sep,[{text,[6,121,105,101,108,100,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,
              [{text,
                "Mif conversion failed (i.e., the result is still an abstract syntax tree), and"}],
              0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,"\notherwise."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,
              [23,91,105,115,95,116,114,101,101,47,49,93,40,35,105,115,95,116,
               114,101,101,45,49,41]},
             {sep,
              [{text,
                "Dtest is not completely foolproof. For a few special node types (e.g."}],
              0,false},
             {text,
              [17,42,97,114,105,116,121,95,113,117,97,108,105,102,105,101,114,
               42]},
             {sep,
              [{text,
                [154,41,44,32,105,102,32,115,117,99,104,32,97,32,110,111,100,
                 101,32,111,99,99,117,114,115,32,105,110,32,97,32,99,111,110,
                 116,101,120,116,32,119,104,101,114,101,32,105,116,32,105,115,
                 32,110,111,116,32,101,120,112,101,99,116,101,100,44,32,105,
                 116,32,119,105,108,108,32,98,101,32,108,101,102,116,32,117,
                 110,99,104,97,110,103,101,100,32,97,115,32,97,32,110,111,110,
                 45,114,101,118,101,114,116,101,100,32,115,117,98,116,114,101,
                 101,32,111,102,32,116,104,101,32,114,101,115,117,108,116,46,
                 32,84,104,105,115,32,99,97,110,32,111,110,108,121,32,104,97,
                 112,112,101,110,32,105,102]}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,".does not actually represent legal Erlang code."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[erl_parse(3)](./erl_parse)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![revert_forms/1](#revert_forms-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,114,101,118,101,114,116,95,102,111,114,109,115,40,70,111,
               114,109,115,58,58]}],
            0,false},
           {sep,[{text,[7,102,111,114,109,115,40,41]}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\verl_parse()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Reverts a sequence of Erlang source code forms."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"revert_forms-1\">revert_forms-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "UReverts a sequence of Erlang source code forms. The sequence can be given either as a"}],
              0,false},
             {text,"\v*form_list*"},
             {sep,
              [{text,
                "ysyntax tree (possibly nested), or as a list of \"program form\" syntax trees. If successful, the corresponding flat list of"}],
              0,false},
             {text,"\v*erl_parse*"},
             {sep,
              [{text,")-compatible syntax trees is returned (see"}],
              0,false},
             {text,
              [21,91,114,101,118,101,114,116,47,49,93,40,35,114,101,118,101,
               114,116,45,49,41]},
             {sep,
              [{text,".). If some program form could not be reverted,"}],
              0,false},
             {text,
              [15,42,123,101,114,114,111,114,44,32,70,111,114,109,125,42]},
             {sep,
              [{text,
                "Bis thrown. Standalone comments in the form sequence are discarded."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[form_list/1](#form_list-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,102,111,114,109,47,49,93,40,35,105,115,95,102,
               111,114,109,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,114,101,118,101,114,116,47,49,93,40,35,114,101,118,101,
               114,116,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,115,101,116,95,97,110,110,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [17,44,32,65,115,58,58,91,116,101,114,109,40,41,93,41,32,45]}],
            0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Sets the list of user annotations of Node to Annotations."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"set_ann-2\">set_ann-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"$Sets the list of user annotations of"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[2,116,111]}],0,false},
             {text,"\r*Annotations*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [23,91,97,100,100,95,97,110,110,47,50,93,40,35,97,100,100,95,97,
               110,110,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,99,111,112,121,95,97,110,110,47,50,93,40,35,99,111,112,
               121,95,97,110,110,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,103,101,116,95,97,110,110,47,49,93,40,35,103,101,116,95,
               97,110,110,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,115,101,116,95,97,116,116,114,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Attr::"}],0,false},
           {sep,
            [{text,
              [22,115,121,110,116,97,120,84,114,101,101,65,116,116,114,105,98,
               117,116,101,115,40,41]}],
            0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Sets the attributes of Node to Attributes."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"set_attrs-2\">set_attrs-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,83,101,116,115,32,116,104,101,32,97,116,116,114,105,98,
                 117,116,101,115,32,111,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[2,116,111]}],0,false},
             {text,"\f*Attributes*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,99,111,112,121,95,97,116,116,114,115,47,50,93,40,35,99,
               111,112,121,95,97,116,116,114,115,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[get_attrs/1](#get_attrs-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,[14,115,101,116,95,112,111,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [16,44,32,80,111,115,58,58,116,101,114,109,40,41,41,32,45]}],
            0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Sets the position information of Node to Pos."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"!<a name=\"set_pos-2\">set_pos-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," Sets the position information of"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[2,116,111]}],0,false},
             {text,[5,42,80,111,115,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,99,111,112,121,95,112,111,115,47,50,93,40,35,99,111,112,
               121,95,112,111,115,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,103,101,116,95,112,111,115,47,49,93,40,35,103,101,116,95,
               112,111,115,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,115,101,116,95,112,111,115,116,99,111,109,109,101,110,116,
               115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[7,44,32,67,115,58,58,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Sets the post-comments of Node to Comments."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"set_postcomments-2\">set_postcomments-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [25,83,101,116,115,32,116,104,101,32,112,111,115,116,45,99,
                 111,109,109,101,110,116,115,32,111,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[2,116,111]}],0,false},
             {text,"\n*Comments*"},
             {sep,[{text,[1,46]}],0,false},
             {text,"\n*Comments*"},
             {sep,
              [{text,
                "Oshould be a possibly empty list of abstract comments, in top-down textual order"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[add_postcomments/2](#add_postcomments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[copy_comments/2](#copy_comments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[get_postcomments/1](#get_postcomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[join_comments/2](#join_comments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[remove_comments/1](#remove_comments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[set_precomments/2](#set_precomments-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,115,101,116,95,112,114,101,99,111,109,109,101,110,116,115,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[7,44,32,67,115,58,58,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Sets the pre-comments of Node to Comments."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"set_precomments-2\">set_precomments-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [24,83,101,116,115,32,116,104,101,32,112,114,101,45,99,111,
                 109,109,101,110,116,115,32,111,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[2,116,111]}],0,false},
             {text,"\n*Comments*"},
             {sep,[{text,[1,46]}],0,false},
             {text,"\n*Comments*"},
             {sep,
              [{text,
                "Pshould be a possibly empty list of abstract comments, in top-down textual order."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"'[add_precomments/2](#add_precomments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[copy_comments/2](#copy_comments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[get_precomments/1](#get_precomments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[join_comments/2](#join_comments-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[remove_comments/1](#remove_comments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[set_postcomments/2](#set_postcomments-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,115,105,122,101,95,113,117,97,108,105,102,105,101,114,40,66,
               111,100,121,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Size::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Creates an abstract size qualifier."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"size_qualifier-2\">size_qualifier-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ";Creates an abstract size qualifier. The result represents \""}],
              0,false},
             {text,"\v*Body:Size*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"7[size_qualifier_argument/1](#size_qualifier_argument-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[size_qualifier_body/1](#size_qualifier_body-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [30,115,105,122,101,95,113,117,97,108,105,102,105,101,114,95,97,
               114,103,117,109,101,110,116,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "AReturns the argument subtree (the size) of a size_qualifier node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "A<a name=\"size_qualifier_argument-1\">size_qualifier_argument-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",Returns the argument subtree (the size) of a"}],
              0,false},
             {text,
              [16,42,115,105,122,101,95,113,117,97,108,105,102,105,101,114,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[size_qualifier/2](#size_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,115,105,122,101,95,113,117,97,108,105,102,105,101,114,95,98,
               111,100,121,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Returns the body subtree of a size_qualifier node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"size_qualifier_body-1\">size_qualifier_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,98,111,100,
                 121,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [16,42,115,105,122,101,95,113,117,97,108,105,102,105,101,114,
               42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[size_qualifier/2](#size_qualifier-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\estring(String::string()) ->"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Creates an abstract string literal."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [31,60,97,32,110,97,109,101,61,34,115,116,114,105,110,103,45,49,34,62,
        115,116,114,105,110,103,45,49,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "9Creates an abstract string literal. The result represents"}],
              0,false},
             {text,"\b*\"Text\"*"},
             {sep,
              [{text,"0(including the surrounding double-quotes), where"}],
              0,false},
             {text,[6,42,84,101,120,116,42]},
             {sep,
              [{text,",corresponds to the sequence of characters in"}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,
              [{text,
                [24,44,32,98,117,116,32,110,111,116,32,114,101,112,114,101,
                 115,101,110,116,105,110,103,32,97]}],
              0,false},
             {text,"\f**specific**"},
             {sep,
              [{text,
                [15,115,116,114,105,110,103,32,108,105,116,101,114,97,108,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [26,70,111,114,32,101,120,97,109,112,108,101,44,32,116,104,
                 101,32,114,101,115,117,108,116,32,111,102]}],
              0,false},
             {text,
              [16,42,115,116,114,105,110,103,40,34,120,92,110,121,34,41,42]},
             {sep,
              [{text,
                [25,114,101,112,114,101,115,101,110,116,115,32,97,110,121,32,
                 97,110,100,32,97,108,108,32,111,102]}],
              0,false},
             {text,"\b*\"x\\ny\"*"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\t*\"x\\12y\"*"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\n*\"x\\012y\"*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\t*\"x\\^Jy\"*"},
             {sep,[{text,[5,59,32,115,101,101]}],0,false},
             {text,
              [17,91,99,104,97,114,47,49,93,40,35,99,104,97,114,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,99,104,97,114,47,49,93,40,35,99,104,97,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[is_string/2](#is_string-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[string_literal/1](#string_literal-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[string_literal/2](#string_literal-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"![string_value/1](#string_value-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,115,116,114,105,110,103,95,108,105,116,101,114,97,108,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [19,62,32,110,111,110,101,109,112,116,121,95,115,116,114,105,
               110,103,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the literal string represented by a string node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"string_literal-1\">string_literal-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+Returns the literal string represented by a"}],
              0,false},
             {text,"\b*string*"},
             {sep,
              [{text,
                "_node. This includes surrounding double-quote characters. Characters beyond 255 will be escaped."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,115,116,114,105,110,103,47,49,93,40,35,115,116,114,105,
               110,103,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,115,116,114,105,110,103,95,108,105,116,101,114,97,108,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[6,44,32,88,50,58,58]}],0,false},
           {sep,[{text,"\nencoding()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [19,62,32,110,111,110,101,109,112,116,121,95,115,116,114,105,
               110,103,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Returns the literal string represented by a string node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"string_literal-2\">string_literal-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+Returns the literal string represented by a"}],
              0,false},
             {text,"\b*string*"},
             {sep,
              [{text,
                "znode. This includes surrounding double-quote characters. Depending on the encoding characters beyond 255 will be escaped ("}],
              0,false},
             {text,"\b*latin1*"},
             {sep,
              [{text,
                [19,41,32,111,114,32,99,111,112,105,101,100,32,97,115,32,105,
                 115,32,40]}],
              0,false},
             {text,[6,42,117,116,102,56,42]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,115,116,114,105,110,103,47,49,93,40,35,115,116,114,105,
               110,103,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,115,116,114,105,110,103,95,118,97,108,117,101,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> string()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Returns the value represented by a string node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"string_value-1\">string_value-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"Returns the value represented by a"}],0,false},
             {text,"\b*string*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [21,91,115,116,114,105,110,103,47,49,93,40,35,115,116,114,105,
               110,103,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\fsubtrees(T::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[4,62,32,91,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[2,93,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Returns the grouped list of all subtrees of a syntax tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"subtrees-1\">subtrees-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "=Returns the grouped list of all subtrees of a syntax tree. If"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [19,105,115,32,97,32,108,101,97,102,32,110,111,100,101,32,40,
                 115,101,101]}],
              0,false},
             {text,
              [23,91,105,115,95,108,101,97,102,47,49,93,40,35,105,115,95,108,
               101,97,102,45,49,41]},
             {sep,
              [{text,
                "n), this is the empty list, otherwise the result is always a nonempty list, containing the lists of subtrees of"}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [142,44,32,105,110,32,108,101,102,116,45,116,111,45,114,105,
                 103,104,116,32,111,114,100,101,114,32,97,115,32,116,104,101,
                 121,32,111,99,99,117,114,32,105,110,32,116,104,101,32,112,
                 114,105,110,116,101,100,32,112,114,111,103,114,97,109,32,116,
                 101,120,116,44,32,97,110,100,32,103,114,111,117,112,101,100,
                 32,98,121,32,99,97,116,101,103,111,114,121,46,32,79,102,116,
                 101,110,44,32,101,97,99,104,32,103,114,111,117,112,32,99,111,
                 110,116,97,105,110,115,32,111,110,108,121,32,97,32,115,105,
                 110,103,108,101,32,115,117,98,116,114,101,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [24,68,101,112,101,110,100,105,110,103,32,111,110,32,116,104,
                 101,32,116,121,112,101,32,111,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                [432,44,32,116,104,101,32,115,105,122,101,32,111,102,32,115,
                 111,109,101,32,103,114,111,117,112,115,32,109,97,121,32,98,
                 101,32,118,97,114,105,97,98,108,101,32,40,101,46,103,46,44,
                 32,116,104,101,32,103,114,111,117,112,32,99,111,110,115,105,
                 115,116,105,110,103,32,111,102,32,97,108,108,32,116,104,101,
                 32,101,108,101,109,101,110,116,115,32,111,102,32,97,32,116,
                 117,112,108,101,41,44,32,119,104,105,108,101,32,111,116,104,
                 101,114,115,32,97,108,119,97,121,115,32,99,111,110,116,97,
                 105,110,32,116,104,101,32,115,97,109,101,32,110,117,109,98,
                 101,114,32,111,102,32,101,108,101,109,101,110,116,115,32,45,
                 32,117,115,117,97,108,108,121,32,101,120,97,99,116,108,121,
                 32,111,110,101,32,40,101,46,103,46,44,32,116,104,101,32,103,
                 114,111,117,112,32,99,111,110,116,97,105,110,105,110,103,32,
                 116,104,101,32,97,114,103,117,109,101,110,116,32,101,120,112,
                 114,101,115,115,105,111,110,32,111,102,32,97,32,99,97,115,
                 101,45,101,120,112,114,101,115,115,105,111,110,41,46,32,78,
                 111,116,101,44,32,104,111,119,101,118,101,114,44,32,116,104,
                 97,116,32,116,104,101,32,101,120,97,99,116,32,115,116,114,
                 117,99,116,117,114,101,32,111,102,32,116,104,101,32,114,101,
                 116,117,114,110,101,100,32,108,105,115,116,32,40,102,111,114,
                 32,97,32,103,105,118,101,110,32,110,111,100,101,32,116,121,
                 112,101,41,32,115,104,111,117,108,100,32,105,110,32,103,101,
                 110,101,114,97,108,32,110,111,116,32,98,101,32,100,101,112,
                 101,110,100,101,100,32,117,112,111,110,44,32,115,105,110,99,
                 101,32,105,116,32,109,105,103,104,116,32,98,101,32,115,117,
                 98,106,101,99,116,32,116,111,32,99,104,97,110,103,101,32,119,
                 105,116,104,111,117,116,32,110,111,116,105,99,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\fThe function"}],0,false},
             {text,
              [25,91,115,117,98,116,114,101,101,115,47,49,93,40,35,115,117,98,
               116,114,101,101,115,45,49,41]},
             {sep,
              [{text,
                [29,97,110,100,32,116,104,101,32,99,111,110,115,116,114,117,
                 99,116,111,114,32,102,117,110,99,116,105,111,110,115]}],
              0,false},
             {text,"\e[make_tree/2](#make_tree-2)"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [31,91,117,112,100,97,116,101,95,116,114,101,101,47,50,93,40,35,
               117,112,100,97,116,101,95,116,114,101,101,45,50,41]},
             {sep,
              [{text,
                [384,99,97,110,32,98,101,32,97,32,103,114,101,97,116,32,104,
                 101,108,112,32,105,102,32,111,110,101,32,119,97,110,116,115,
                 32,116,111,32,116,114,97,118,101,114,115,101,32,97,32,115,
                 121,110,116,97,120,32,116,114,101,101,44,32,118,105,115,105,
                 116,105,110,103,32,97,108,108,32,105,116,115,32,115,117,98,
                 116,114,101,101,115,44,32,98,117,116,32,116,114,101,97,116,
                 32,110,111,100,101,115,32,111,102,32,116,104,101,32,116,114,
                 101,101,32,105,110,32,97,32,117,110,105,102,111,114,109,32,
                 119,97,121,32,105,110,32,109,111,115,116,32,111,114,32,97,
                 108,108,32,99,97,115,101,115,46,32,85,115,105,110,103,32,116,
                 104,101,115,101,32,102,117,110,99,116,105,111,110,115,32,109,
                 97,107,101,115,32,116,104,105,115,32,115,105,109,112,108,101,
                 44,32,97,110,100,32,97,108,115,111,32,97,115,115,117,114,101,
                 115,32,116,104,97,116,32,121,111,117,114,32,99,111,100,101,
                 32,105,115,32,110,111,116,32,111,118,101,114,108,121,32,115,
                 101,110,115,105,116,105,118,101,32,116,111,32,101,120,116,
                 101,110,115,105,111,110,115,32,111,102,32,116,104,101,32,115,
                 121,110,116,97,120,32,116,114,101,101,32,100,97,116,97,32,
                 116,121,112,101,44,32,98,101,99,97,117,115,101,32,97,110,121,
                 32,110,111,100,101,32,116,121,112,101,115,32,110,111,116,32,
                 101,120,112,108,105,99,105,116,108,121,32,104,97,110,100,108,
                 101,100,32,98,121,32,121,111,117,114,32,99,111,100,101,32,99,
                 97,110,32,98,101,32,108,101,102,116,32,116,111,32,97,32,100,
                 101,102,97,117,108,116,32,99,97,115,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\fFor example:"}],0,false}],0,true},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [306,32,32,32,32,32,112,111,115,116,111,114,100,101,114,40,70,
               44,32,84,114,101,101,41,32,45,62,10,32,32,32,32,32,32,32,32,70,
               40,99,97,115,101,32,115,117,98,116,114,101,101,115,40,84,114,
               101,101,41,32,111,102,10,32,32,32,32,32,32,32,32,32,32,32,32,
               91,93,32,45,62,32,84,114,101,101,59,10,32,32,32,32,32,32,32,32,
               32,32,32,32,76,105,115,116,32,45,62,32,117,112,100,97,116,101,
               95,116,114,101,101,40,84,114,101,101,44,10,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,91,91,112,111,115,116,111,114,100,101,114,40,70,
               44,32,83,117,98,116,114,101,101,41,10,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,124,124,32,83,117,98,116,114,101,101,32,38,108,
               116,59,45,32,71,114,111,117,112,93,10,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,124,124,32,71,114,111,117,112,32,38,108,116,59,45,
               32,76,105,115,116,93,41,10,32,32,32,32,32,32,32,32,32,32,101,
               110,100,41,46]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [17,109,97,112,115,32,116,104,101,32,102,117,110,99,116,105,
                 111,110]}],
              0,false},
             {text,[3,42,70,42]},
             {sep,[{text,[2,111,110]}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                "Wand all its subtrees, doing a post-order traversal of the syntax tree. (Note the use of"}],
              0,false},
             {text,
              [31,91,117,112,100,97,116,101,95,116,114,101,101,47,50,93,40,35,
               117,112,100,97,116,101,95,116,114,101,101,45,50,41]},
             {sep,
              [{text,
                "9to preserve node attributes.) For a simple function like:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [128,32,32,32,32,32,102,40,78,111,100,101,41,32,45,62,10,32,32,
               32,32,32,32,32,32,99,97,115,101,32,116,121,112,101,40,78,111,
               100,101,41,32,111,102,10,32,32,32,32,32,32,32,32,32,32,32,32,
               97,116,111,109,32,45,62,32,97,116,111,109,40,34,97,95,34,32,43,
               43,32,97,116,111,109,95,110,97,109,101,40,78,111,100,101,41,41,
               59,10,32,32,32,32,32,32,32,32,32,32,32,32,95,32,45,62,32,78,
               111,100,101,10,32,32,32,32,32,32,32,32,101,110,100,46]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bthe call"}],0,false},
             {text,
              [26,42,112,111,115,116,111,114,100,101,114,40,102,117,110,32,
               102,47,49,44,32,84,114,101,101,41,42]},
             {sep,[{text,"\"will yield a new representation of"}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                [150,105,110,32,119,104,105,99,104,32,97,108,108,32,97,116,
                 111,109,32,110,97,109,101,115,32,104,97,118,101,32,98,101,
                 101,110,32,101,120,116,101,110,100,101,100,32,119,105,116,
                 104,32,116,104,101,32,112,114,101,102,105,120,32,34,97,95,34,
                 44,32,98,117,116,32,110,111,116,104,105,110,103,32,101,108,
                 115,101,32,40,105,110,99,108,117,100,105,110,103,32,99,111,
                 109,109,101,110,116,115,44,32,97,110,110,111,116,97,116,105,
                 111,110,115,32,97,110,100,32,108,105,110,101,32,110,117,109,
                 98,101,114,115,41,32,104,97,115,32,98,101,101,110,32,99,104,
                 97,110,103,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,99,111,112,121,95,97,116,116,114,115,47,50,93,40,35,99,
               111,112,121,95,97,116,116,114,115,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,108,101,97,102,47,49,93,40,35,105,115,95,108,
               101,97,102,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[make_tree/2](#make_tree-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [25,116,101,120,116,40,83,116,114,105,110,103,58,58,115,116,114,
               105,110,103,40,41,41,32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,".Creates an abstract piece of source code text."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"text-1\">text-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "jCreates an abstract piece of source code text. The result represents exactly the sequence of characters in"}],
              0,false},
             {text,"\b*String*"},
             {sep,
              [{text,
                [151,46,32,84,104,105,115,32,105,115,32,117,115,101,102,117,
                 108,32,105,110,32,99,97,115,101,115,32,119,104,101,110,32,
                 111,110,101,32,119,97,110,116,115,32,102,117,108,108,32,99,
                 111,110,116,114,111,108,32,111,102,32,116,104,101,32,114,101,
                 115,117,108,116,105,110,103,32,111,117,116,112,117,116,44,32,
                 101,46,103,46,44,32,102,111,114,32,116,104,101,32,97,112,112,
                 101,97,114,97,110,99,101,32,111,102,32,102,108,111,97,116,
                 105,110,103,45,112,111,105,110,116,32,110,117,109,98,101,114,
                 115,32,111,114,32,109,97,99,114,111,32,100,101,102,105,110,
                 105,116,105,111,110,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [31,91,116,101,120,116,95,115,116,114,105,110,103,47,49,93,40,
               35,116,101,120,116,95,115,116,114,105,110,103,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,116,101,120,116,95,115,116,114,105,110,103,40,78,111,100,
               101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> string()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Returns the character sequence represented by a text node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"text_string-1\">text_string-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"/Returns the character sequence represented by a"}],
              0,false},
             {text,[6,42,116,101,120,116,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,116,101,120,116,47,49,93,40,35,116,101,120,116,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              "ctree(Type::atom()) -> #tree{type=atom(), attr=#attr{pos=term(), ann=[term()], com=none | #com{pre=["}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t], post=["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [17,93,125,125,44,32,100,97,116,97,61,116,101,114,109,40,41,
               125]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [29,69,113,117,105,118,97,108,101,110,116,32,116,111,32,116,114,
             101,101,40,84,121,112,101,44,32,91,93,41,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"tree-1\">tree-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [25,91,116,114,101,101,40,84,121,112,101,44,32,91,93,41,93,40,
               35,116,114,101,101,45,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              "qtree(Type::atom(), Data::term()) -> #tree{type=atom(), attr=#attr{pos=term(), ann=[term()], com=none | #com{pre=["}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\t], post=["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,
              [17,93,125,125,44,32,100,97,116,97,61,116,101,114,109,40,41,
               125]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [26,70,111,114,32,115,112,101,99,105,97,108,32,112,117,114,112,
             111,115,101,115,32,111,110,108,121,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"tree-2\">tree-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,42,42,70,111,114,32,115,112,101,99,105,97,108,32,112,117,
               114,112,111,115,101,115,32,111,110,108,121,42,42]},
             {sep,
              [{text,"4. Creates an abstract syntax tree node with type tag"}],
              0,false},
             {text,[6,42,84,121,112,101,42]},
             {sep,
              [{text,
                [19,97,110,100,32,97,115,115,111,99,105,97,116,101,100,32,100,
                 97,116,97]}],
              0,false},
             {text,[6,42,68,97,116,97,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,97,
                 110,100,32,116,104,101,32,114,101,108,97,116,101,100]}],
              0,false},
             {text,
              [23,91,105,115,95,116,114,101,101,47,49,93,40,35,105,115,95,116,
               114,101,101,45,49,41]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [17,91,100,97,116,97,47,49,93,40,35,100,97,116,97,45,49,41]},
             {sep,
              [{text,"*provide a uniform way to extend the set of"}],
              0,false},
             {text,"\v*erl_parse*"},
             {sep,
              [{text,
                "Unode types. The associated data is any term, whose format may depend on the type tag."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\e<a name=\"Notes:\">Notes:</a>"},{text,"\n**Notes:**"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,
              "vAny nodes created outside of this module must have type tags distinct from those currently defined by this module; see"}],
            0,false},
           {text,
            [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,49,41]},
           {sep,
            [{text,
              [20,102,111,114,32,97,32,99,111,109,112,108,101,116,101,32,108,
               105,115,116,46]}],
            0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,
              "KThe type tag of a syntax tree node may also be used as a primary tag by the"}],
            0,false},
           {text,"\v*erl_parse*"},
           {sep,
            [{text,
              "Grepresentation; in that case, the selector functions for that node type"}],
            0,false},
           {text,"\b**must**"},
           {sep,
            [{text,",handle both the abstract syntax tree and the"}],
            0,false},
           {text,"\v*erl_parse*"},
           {sep,
            [{text,
              [18,102,111,114,109,46,32,84,104,101,32,102,117,110,99,116,105,
               111,110]}],
            0,false},
           {text,"\t*type(T)*"},
           {sep,
            [{text,
              "Fshould return the correct type tag regardless of the representation of"}],
            0,false},
           {text,[3,42,84,42]},
           {sep,
            [{text,"-, so that the user sees no difference between"}],
            0,false},
           {text,"\f*erl_syntax*"},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,"\v*erl_parse*"},
           {sep,[{text,[6,110,111,100,101,115,46]}],0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{sep,[null],0,true},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [17,91,100,97,116,97,47,49,93,40,35,100,97,116,97,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,116,114,101,101,47,49,93,40,35,105,115,95,116,
               114,101,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [22,116,114,121,95,97,102,116,101,114,95,101,120,112,114,40,66,
               111,100,121,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\v], After::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,",Equivalent to try_expr(Body, [], [], After)."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"try_after_expr-2\">try_after_expr-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,",[try_expr(Body, [], [], After)](#try_expr-4)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,116,114,121,95,101,120,112,114,40,66,111,100,121,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[14,93,44,32,72,97,110,100,108,101,114,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Equivalent to try_expr(Body, [], Handlers)."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"try_expr-2\">try_expr-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"+[try_expr(Body, [], Handlers)](#try_expr-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,116,114,121,95,101,120,112,114,40,66,111,100,121,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\r], Clauses::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[14,93,44,32,72,97,110,100,108,101,114,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Equivalent to try_expr(Body, Clauses, Handlers, [])."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"try_expr-3\">try_expr-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"4[try_expr(Body, Clauses, Handlers, [])](#try_expr-4)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [16,116,114,121,95,101,120,112,114,40,66,111,100,121,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\r], Clauses::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[14,93,44,32,72,97,110,100,108,101,114,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\v], After::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Creates an abstract try-expression."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"try_expr-4\">try_expr-4</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Creates an abstract try-expression. If"}],0,false},
             {text,[6,42,66,111,100,121,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,66,49,44,32,46,46,46,44,32,66,110,93,42]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\t*Clauses*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,67,49,44,32,46,46,46,44,32,67,106,93,42]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\n*Handlers*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,72,49,44,32,46,46,46,44,32,72,107,93,42]},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,[7,42,65,102,116,101,114,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,65,49,44,32,46,46,46,44,32,65,109,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              "H*try B1, ..., Bn of C1; ...; Cj catch H1; ...; Hk after A1, ..., Am end*"},
             {sep,
              [{text,
                [24,34,46,32,77,111,114,101,32,101,120,97,99,116,108,121,44,
                 32,105,102,32,101,97,99,104]}],
              0,false},
             {text,[4,42,67,105,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [18,42,40,67,80,105,41,32,67,71,105,32,45,62,32,67,66,105,42]},
             {sep,[{text,"\v\", and each"}],0,false},
             {text,[4,42,72,105,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,
              [18,42,40,72,80,105,41,32,72,71,105,32,45,62,32,72,66,105,42]},
             {sep,
              [{text,
                [31,34,44,32,116,104,101,110,32,116,104,101,32,114,101,115,
                 117,108,116,32,114,101,112,114,101,115,101,110,116,115,32,
                 34]}],
              0,false},
             {text,
              "x*try B1, ..., Bn of CP1 CG1 -> CB1; ...; CPj CGj -> CBj catch HP1 HG1 -> HB1; ...; HPk HGk -> HBk after A1, ..., Am end*"},
             {sep,[{text,[6,34,59,32,115,101,101]}],0,false},
             {text,"\e[case_expr/2](#case_expr-2)"},
             {sep,[{text,[4,46,32,73,102]}],0,false},
             {text,"\t*Clauses*"},
             {sep,
              [{text,
                [22,105,115,32,116,104,101,32,101,109,112,116,121,32,108,105,
                 115,116,44,32,116,104,101]}],
              0,false},
             {text,"\b*of ...*"},
             {sep,
              [{text,
                [23,115,101,99,116,105,111,110,32,105,115,32,108,101,102,116,
                 32,111,117,116,46,32,73,102]}],
              0,false},
             {text,[7,42,65,102,116,101,114,42]},
             {sep,
              [{text,
                [22,105,115,32,116,104,101,32,101,109,112,116,121,32,108,105,
                 115,116,44,32,116,104,101]}],
              0,false},
             {text,"\v*after ...*"},
             {sep,
              [{text,
                [23,115,101,99,116,105,111,110,32,105,115,32,108,101,102,116,
                 32,111,117,116,46,32,73,102]}],
              0,false},
             {text,"\n*Handlers*"},
             {sep,
              [{text,
                [22,105,115,32,116,104,101,32,101,109,112,116,121,32,108,105,
                 115,116,44,32,97,110,100]}],
              0,false},
             {text,[7,42,65,102,116,101,114,42]},
             {sep,
              [{text,
                [16,105,115,32,110,111,110,101,109,112,116,121,44,32,116,104,
                 101]}],
              0,false},
             {text,"\v*catch ...*"},
             {sep,
              [{text,
                [20,115,101,99,116,105,111,110,32,105,115,32,108,101,102,116,
                 32,111,117,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"\e[case_expr/2](#case_expr-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[class_qualifier/2](#class_qualifier-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[try_after_expr/2](#try_after_expr-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,116,114,121,95,101,120,112,114,47,50,93,40,35,116,114,
               121,95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,116,114,121,95,101,120,112,114,47,51,93,40,35,116,114,
               121,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[try_expr_after/1](#try_expr_after-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[try_expr_body/1](#try_expr_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[try_expr_clauses/1](#try_expr_clauses-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[try_expr_handlers/1](#try_expr_handlers-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,116,114,121,95,101,120,112,114,95,97,102,116,101,114,40,78,
               111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "8Returns the list of \"after\" subtrees of a try_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"try_expr_after-1\">try_expr_after-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")Returns the list of \"after\" subtrees of a"}],
              0,false},
             {text,"\n*try_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,116,114,121,95,101,120,112,114,47,52,93,40,35,116,114,
               121,95,101,120,112,114,45,52,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,116,114,121,95,101,120,112,114,95,98,111,100,121,40,78,111,
               100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Returns the list of body subtrees of a try_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"try_expr_body-1\">try_expr_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Returns the list of body subtrees of a"}],0,false},
             {text,"\n*try_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,116,114,121,95,101,120,112,114,47,52,93,40,35,116,114,
               121,95,101,120,112,114,45,52,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,116,114,121,95,101,120,112,114,95,99,108,97,117,115,101,115,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "<Returns the list of case-clause subtrees of a try_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"try_expr_clauses-1\">try_expr_clauses-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"-Returns the list of case-clause subtrees of a"}],
              0,false},
             {text,"\n*try_expr*"},
             {sep,[{text,"\bnode. If"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text," *try Body catch H1; ...; Hn end*"},
             {sep,[{text," \", the result is the empty list."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,116,114,121,95,101,120,112,114,47,52,93,40,35,116,114,
               121,95,101,120,112,114,45,52,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [24,116,114,121,95,101,120,112,114,95,104,97,110,100,108,101,
               114,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "?Returns the list of handler-clause subtrees of a try_expr node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"try_expr_handlers-1\">try_expr_handlers-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0Returns the list of handler-clause subtrees of a"}],
              0,false},
             {text,"\n*try_expr*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,116,114,121,95,101,120,112,114,47,52,93,40,35,116,114,
               121,95,101,120,112,114,45,52,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\rtuple(List::["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [26,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,97,
             99,116,32,116,117,112,108,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [29,60,97,32,110,97,109,101,61,34,116,117,112,108,101,45,49,34,62,116,
        117,112,108,101,45,49,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,
                 97,99,116,32,116,117,112,108,101,46,32,73,102]}],
              0,false},
             {text,"\n*Elements*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,88,49,44,32,46,46,46,44,32,88,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,[15,42,123,88,49,44,32,46,46,46,44,32,88,110,125,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "6Note: The Erlang language has distinct 1-tuples, i.e.,"}],
              0,false},
             {text,[5,42,123,88,125,42]},
             {sep,
              [{text,
                [23,105,115,32,97,108,119,97,121,115,32,100,105,115,116,105,
                 110,99,116,32,102,114,111,109]}],
              0,false},
             {text,[3,42,88,42]},
             {sep,[{text,[7,105,116,115,101,108,102,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[tuple_elements/1](#tuple_elements-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,116,117,112,108,101,95,115,105,122,101,47,49,93,40,35,
               116,117,112,108,101,95,115,105,122,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [21,116,117,112,108,101,95,101,108,101,109,101,110,116,115,40,
               78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Returns the list of element subtrees of a tuple node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"tuple_elements-1\">tuple_elements-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")Returns the list of element subtrees of a"}],
              0,false},
             {text,[7,42,116,117,112,108,101,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,116,117,112,108,101,47,49,93,40,35,116,117,112,108,101,
               45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [17,116,117,112,108,101,95,115,105,122,101,40,78,111,100,101,58,
               58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,
              [19,62,32,110,111,110,95,110,101,103,95,105,110,116,101,103,101,
               114,40,41]}],
            0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Returns the number of elements of a tuple node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"tuple_size-1\">tuple_size-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Returns the number of elements of a"}],0,false},
             {text,[7,42,116,117,112,108,101,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eNote: this is equivalent to"}],0,false},
             {text,
              [30,42,108,101,110,103,116,104,40,116,117,112,108,101,95,101,
               108,101,109,101,110,116,115,40,78,111,100,101,41,41,42]},
             {sep,[{text,"!, but potentially more efficient."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [19,91,116,117,112,108,101,47,49,93,40,35,116,117,112,108,101,
               45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[tuple_elements/1](#tuple_elements-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [26,35,35,32,116,117,112,108,101,95,116,121,112,101,40,41,32,45,62,32,
         116,101,114,109,40,41,10]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Equivalent to tuple_type(any_size)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"tuple_type-0\">tuple_type-0</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"%[tuple_type(any_size)](#tuple_type-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"!tuple_type(Elements::any_size | ["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,97,
             99,116,32,116,121,112,101,32,116,117,112,108,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"tuple_type-1\">tuple_type-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"Creates an abstract type tuple. If"}],0,false},
             {text,"\n*Elements*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,84,49,44,32,46,46,46,44,32,84,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,[15,42,123,84,49,44,32,46,46,46,44,32,84,110,125,42]},
             {sep,
              [{text,
                [16,34,59,32,111,116,104,101,114,119,105,115,101,44,32,105,
                 102]}],
              0,false},
             {text,"\n*Elements*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,"\n*any_size*"},
             {sep,
              [{text,
                [17,44,32,105,116,32,114,101,112,114,101,115,101,110,116,115,
                 32,34]}],
              0,false},
             {text,"\t*tuple()*"},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"/[tuple_type_elements/1](#tuple_type_elements-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,116,117,112,108,101,95,116,121,112,101,95,101,108,101,109,
               101,110,116,115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,
            [{text,[14,62,32,97,110,121,95,115,105,122,101,32,124,32,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "?Returns the list of type element subtrees of a tuple_type node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"tuple_type_elements-1\">tuple_type_elements-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,".Returns the list of type element subtrees of a"}],
              0,false},
             {text,"\f*tuple_type*"},
             {sep,[{text,"\bnode. If"}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,"\t*tuple()*"},
             {sep,[{text,[2,34,44]}],0,false},
             {text,"\n*any_size*"},
             {sep,
              [{text,
                [26,105,115,32,114,101,116,117,114,110,101,100,59,32,111,116,
                 104,101,114,119,105,115,101,44,32,105,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,"\frepresents \""}],0,false},
             {text,[15,42,123,84,49,44,32,46,46,46,44,32,84,110,125,42]},
             {sep,[{text,[2,34,44]}],0,false},
             {text,[15,42,91,84,49,44,32,46,46,46,44,32,84,110,93,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,116,117,112,108,101,95,116,121,112,101,47,48,93,40,35,
               116,117,112,108,101,95,116,121,112,101,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,116,117,112,108,101,95,116,121,112,101,47,49,93,40,35,
               116,117,112,108,101,95,116,121,112,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\vtype(Tree::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> atom()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [29,82,101,116,117,114,110,115,32,116,104,101,32,116,121,112,101,
             32,116,97,103,32,111,102,32,78,111,100,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"\e<a name=\"type-1\">type-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [23,82,101,116,117,114,110,115,32,116,104,101,32,116,121,112,
                 101,32,116,97,103,32,111,102]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[4,46,32,73,102]}],0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,
              [{text,
                ">does not represent a syntax tree, evaluation fails with reason"}],
              0,false},
             {text,"\b*badarg*"},
             {sep,
              [{text,"2. Node types currently defined by this module are:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"/application annotated_type arity_qualifier atom"}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,",attribute binary binary_field bitstring_type"}],
              0,false},
             {above,{above,null,null},null},
             {sep,[{text,"$block_expr case_expr catch_expr char"}],0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,"(class_qualifier clause comment cond_expr"}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,
                "<conjunction constrained_function_type constraint disjunction"}],
              0,false},
             {above,{above,null,null},null},
             {sep,[{text,"'eof_marker error_marker float form_list"}],0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,"(fun_expr fun_type function function_type"}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,")generator if_expr implicit_fun infix_expr"}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,")integer integer_range_type list list_comp"}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,".macro map_expr map_field_assoc map_field_exact"}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,
                "Bmap_type map_type_assoc map_type_exact match_expr module_qualifier"}],
              0,false},
             {above,{above,null,null},null},
             {sep,[{text,"'named_fun_expr nil operator parentheses"}],0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,"2prefix_expr receive_expr record_access record_expr"}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,
                "<record_field record_index_expr record_type record_type_field"}],
              0,false},
             {above,{above,null,null},null},
             {sep,[{text,"#size_qualifier string text try_expr"}],0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,
                "ituple tuple_type typed_record_field type_application type_union underscore user_type_application variable"}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,
                [14,119,97,114,110,105,110,103,95,109,97,114,107,101,114]}],
              0,false},
             {above,{above,null,null},null}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "[The user may (for special purposes) create additional nodes with other type tags, using the"}],
              0,false},
             {text,
              [17,91,116,114,101,101,47,50,93,40,35,116,114,101,101,45,50,41]},
             {sep,[{text,"\tfunction."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "qNote: The primary constructor functions for a node type should always have the same name as the node type itself."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[annotated_type/2](#annotated_type-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,97,112,112,108,105,99,97,116,105,111,110,47,51,93,40,35,
               97,112,112,108,105,99,97,116,105,111,110,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[arity_qualifier/2](#arity_qualifier-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,97,116,111,109,47,49,93,40,35,97,116,111,109,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[attribute/2](#attribute-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,98,105,110,97,114,121,47,49,93,40,35,98,105,110,97,114,
               121,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![binary_field/2](#binary_field-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[bitstring_type/2](#bitstring_type-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,98,108,111,99,107,95,101,120,112,114,47,49,93,40,35,98,
               108,111,99,107,95,101,120,112,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[case_expr/2](#case_expr-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,99,97,116,99,104,95,101,120,112,114,47,49,93,40,35,99,97,
               116,99,104,95,101,120,112,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,99,104,97,114,47,49,93,40,35,99,104,97,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[class_qualifier/2](#class_qualifier-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,99,108,97,117,115,101,47,51,93,40,35,99,108,97,117,115,
               101,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,99,111,109,109,101,110,116,47,50,93,40,35,99,111,109,109,
               101,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[cond_expr/1](#cond_expr-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,99,111,110,106,117,110,99,116,105,111,110,47,49,93,40,35,
               99,111,110,106,117,110,99,116,105,111,110,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              ";[constrained_function_type/2](#constrained_function_type-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,99,111,110,115,116,114,97,105,110,116,47,50,93,40,35,99,
               111,110,115,116,114,97,105,110,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,100,105,115,106,117,110,99,116,105,111,110,47,49,93,40,
               35,100,105,115,106,117,110,99,116,105,111,110,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,101,111,102,95,109,97,114,107,101,114,47,48,93,40,35,101,
               111,102,95,109,97,114,107,101,114,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![error_marker/1](#error_marker-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [19,91,102,108,111,97,116,47,49,93,40,35,102,108,111,97,116,45,
               49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[form_list/1](#form_list-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,102,117,110,95,101,120,112,114,47,49,93,40,35,102,117,
               110,95,101,120,112,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,102,117,110,95,116,121,112,101,47,48,93,40,35,102,117,
               110,95,116,121,112,101,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,102,117,110,99,116,105,111,110,47,50,93,40,35,102,117,
               110,99,116,105,111,110,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[function_type/1](#function_type-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[function_type/2](#function_type-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[generator/2](#generator-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,102,95,101,120,112,114,47,49,93,40,35,105,102,95,101,
               120,112,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![implicit_fun/2](#implicit_fun-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,105,110,102,105,120,95,101,120,112,114,47,51,93,40,35,
               105,110,102,105,120,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,110,116,101,103,101,114,47,49,93,40,35,105,110,116,
               101,103,101,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"-[integer_range_type/2](#integer_range_type-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,108,105,115,116,47,50,93,40,35,108,105,115,116,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[list_comp/2](#list_comp-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [19,91,109,97,99,114,111,47,50,93,40,35,109,97,99,114,111,45,50,
               41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,109,97,112,95,101,120,112,114,47,50,93,40,35,109,97,112,
               95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[map_field_assoc/2](#map_field_assoc-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"'[map_field_exact/2](#map_field_exact-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,109,97,112,95,116,121,112,101,47,48,93,40,35,109,97,112,
               95,116,121,112,101,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,109,97,112,95,116,121,112,101,47,49,93,40,35,109,97,112,
               95,116,121,112,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[map_type_assoc/2](#map_type_assoc-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[map_type_exact/2](#map_type_exact-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,109,97,116,99,104,95,101,120,112,114,47,50,93,40,35,109,
               97,116,99,104,95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[module_qualifier/2](#module_qualifier-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[named_fun_expr/2](#named_fun_expr-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,[15,91,110,105,108,47,48,93,40,35,110,105,108,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,111,112,101,114,97,116,111,114,47,49,93,40,35,111,112,
               101,114,97,116,111,114,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,112,97,114,101,110,116,104,101,115,101,115,47,49,93,40,
               35,112,97,114,101,110,116,104,101,115,101,115,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,112,114,101,102,105,120,95,101,120,112,114,47,50,93,40,
               35,112,114,101,102,105,120,95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![receive_expr/3](#receive_expr-3)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[record_access/3](#record_access-3)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,114,101,99,111,114,100,95,101,120,112,114,47,50,93,40,35,
               114,101,99,111,114,100,95,101,120,112,114,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![record_field/2](#record_field-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[record_index_expr/2](#record_index_expr-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [31,91,114,101,99,111,114,100,95,116,121,112,101,47,50,93,40,35,
               114,101,99,111,114,100,95,116,121,112,101,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"+[record_type_field/2](#record_type_field-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[size_qualifier/2](#size_qualifier-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [21,91,115,116,114,105,110,103,47,49,93,40,35,115,116,114,105,
               110,103,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,101,120,116,47,49,93,40,35,116,101,120,116,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,114,101,101,47,50,93,40,35,116,114,101,101,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,116,114,121,95,101,120,112,114,47,51,93,40,35,116,114,
               121,95,101,120,112,114,45,51,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [19,91,116,117,112,108,101,47,49,93,40,35,116,117,112,108,101,
               45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,116,117,112,108,101,95,116,121,112,101,47,48,93,40,35,
               116,117,112,108,101,95,116,121,112,101,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,116,117,112,108,101,95,116,121,112,101,47,49,93,40,35,
               116,117,112,108,101,95,116,121,112,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[type_application/2](#type_application-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,116,121,112,101,95,117,110,105,111,110,47,49,93,40,35,
               116,121,112,101,95,117,110,105,111,110,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"-[typed_record_field/2](#typed_record_field-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [29,91,117,110,100,101,114,115,99,111,114,101,47,48,93,40,35,
               117,110,100,101,114,115,99,111,114,101,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"3[user_type_application/2](#user_type_application-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [25,91,118,97,114,105,97,98,108,101,47,49,93,40,35,118,97,114,
               105,97,98,108,101,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"%[warning_marker/1](#warning_marker-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\etype_application(TypeName::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[14,44,32,65,114,103,117,109,101,110,116,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Creates an abstract type application expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"type_application-2\">type_application-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"3Creates an abstract type application expression. If"}],
              0,false},
             {text,"\v*Arguments*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,84,49,44,32,46,46,46,44,32,84,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [21,42,84,121,112,101,78,97,109,101,40,84,49,44,32,46,46,46,84,
               110,41,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[type_application/3](#type_application-3)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "=[type_application_arguments/1](#type_application_arguments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"3[type_application_name/1](#type_application_name-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"3[user_type_application/2](#user_type_application-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [31,116,121,112,101,95,97,112,112,108,105,99,97,116,105,111,110,
               40,77,111,100,117,108,101,58,58,110,111,110,101,32,124]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\f, TypeName::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[14,44,32,65,114,103,117,109,101,110,116,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Creates an abstract type application expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"type_application-3\">type_application-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"3Creates an abstract type application expression. If"}],
              0,false},
             {text,"\b*Module*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [31,44,32,116,104,105,115,32,105,115,32,99,97,108,108,32,105,
                 115,32,101,113,117,105,118,97,108,101,110,116,32,116,111]}],
              0,false},
             {text,"'*type_application(TypeName, Arguments)*"},
             {sep,
              [{text,
                [31,44,32,111,116,104,101,114,119,105,115,101,32,105,116,32,
                 105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,
                 111]}],
              0,false},
             {text,
              "A*type_application(module_qualifier(Module, TypeName), Arguments)*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,40,84,104,105,115,32,105,115,32,97,32,117,116,105,108,105,
               116,121,32,102,117,110,99,116,105,111,110,46,41]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[module_qualifier/2](#module_qualifier-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,")[type_application/2](#type_application-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"!type_application_arguments(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Returns the arguments subtrees of a type_application node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "G<a name=\"type_application_arguments-1\">type_application_arguments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Returns the arguments subtrees of a"}],0,false},
             {text,
              [18,42,116,121,112,101,95,97,112,112,108,105,99,97,116,105,111,
               110,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[type_application/2](#type_application-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [28,116,121,112,101,95,97,112,112,108,105,99,97,116,105,111,110,
               95,110,97,109,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Returns the type name subtree of a type_application node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"type_application_name-1\">type_application_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"Returns the type name subtree of a"}],0,false},
             {text,
              [18,42,116,121,112,101,95,97,112,112,108,105,99,97,116,105,111,
               110,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[type_application/2](#type_application-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [19,116,121,112,101,95,117,110,105,111,110,40,84,121,112,101,
               115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,97,
             99,116,32,116,121,112,101,32,117,110,105,111,110,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"type_union-1\">type_union-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"Creates an abstract type union. If"}],0,false},
             {text,[7,42,84,121,112,101,115,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,84,49,44,32,46,46,46,44,32,84,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,[15,42,84,49,32,124,32,46,46,46,32,124,32,84,110,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[type_union_types/1](#type_union_types-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,116,121,112,101,95,117,110,105,111,110,95,116,121,112,101,
               115,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Returns the list of type subtrees of a type_union node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"type_union_types-1\">type_union_types-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Returns the list of type subtrees of a"}],0,false},
             {text,"\f*type_union*"},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,116,121,112,101,95,117,110,105,111,110,47,49,93,40,35,
               116,121,112,101,95,117,110,105,111,110,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,116,121,112,101,100,95,114,101,99,111,114,100,95,102,105,
               101,108,100,40,70,105,101,108,100,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\b, Type::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Creates an abstract typed record field specification."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"typed_record_field-2\">typed_record_field-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "MCreates an abstract typed record field specification. The result represents \""}],
              0,false},
             {text,[15,42,70,105,101,108,100,32,58,58,32,84,121,112,101,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"7[typed_record_field_body/1](#typed_record_field_body-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"7[typed_record_field_type/1](#typed_record_field_type-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [30,116,121,112,101,100,95,114,101,99,111,114,100,95,102,105,
               101,108,100,95,98,111,100,121,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7Returns the field subtree of a typed_record_field node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "A<a name=\"typed_record_field_body-1\">typed_record_field_body-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,102,105,101,
                 108,100,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [20,42,116,121,112,101,100,95,114,101,99,111,114,100,95,102,105,
               101,108,100,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"-[typed_record_field/2](#typed_record_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [30,116,121,112,101,100,95,114,101,99,111,114,100,95,102,105,
               101,108,100,95,116,121,112,101,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Returns the type subtree of a typed_record_field node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "A<a name=\"typed_record_field_type-1\">typed_record_field_type-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,82,101,116,117,114,110,115,32,116,104,101,32,116,121,112,
                 101,32,115,117,98,116,114,101,101,32,111,102,32,97]}],
              0,false},
             {text,
              [20,42,116,121,112,101,100,95,114,101,99,111,114,100,95,102,105,
               101,108,100,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"-[typed_record_field/2](#typed_record_field-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [15,117,110,100,101,114,115,99,111,114,101,40,41,32,45,62]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,",Creates an abstract universal pattern (\"_\")."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"underscore-0\">underscore-0</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Creates an abstract universal pattern (\""}],
              0,false},
             {text,[3,42,95,42]},
             {sep,
              [{text,
                "R\"). The lexical representation is a single underscore character. Note that this is"}],
              0,false},
             {text,[7,42,42,110,111,116,42,42]},
             {sep,
              [{text,
                [31,97,32,118,97,114,105,97,98,108,101,44,32,108,101,120,105,
                 99,97,108,108,121,32,115,112,101,97,107,105,110,103,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,118,97,114,105,97,98,108,101,47,49,93,40,35,118,97,114,
               105,97,98,108,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [18,117,112,100,97,116,101,95,116,114,101,101,40,78,111,100,101,
               58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,"\f, Groups::[["}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[5,93,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "JCreates a syntax tree with the same type and attributes as the given tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"update_tree-2\">update_tree-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "`Creates a syntax tree with the same type and attributes as the given tree. This is equivalent to"}],
              0,false},
             {text,"1*copy_attrs(Node, make_tree(type(Node), Groups))*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,99,111,112,121,95,97,116,116,114,115,47,50,93,40,35,99,
               111,112,121,95,97,116,116,114,115,45,50,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"\e[make_tree/2](#make_tree-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [17,91,116,121,112,101,47,49,93,40,35,116,121,112,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text," user_type_application(TypeName::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,
            [{text,[14,44,32,65,114,103,117,109,101,110,116,115,58,58,91]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[4,93,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [30,67,114,101,97,116,101,115,32,97,110,32,97,98,115,116,114,97,
             99,116,32,117,115,101,114,32,116,121,112,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"user_type_application-2\">user_type_application-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Creates an abstract user type. If"}],0,false},
             {text,"\v*Arguments*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[15,42,91,84,49,44,32,46,46,46,44,32,84,110,93,42]},
             {sep,
              [{text,
                [25,44,32,116,104,101,32,114,101,115,117,108,116,32,114,101,
                 112,114,101,115,101,110,116,115,32,34]}],
              0,false},
             {text,
              [21,42,84,121,112,101,78,97,109,101,40,84,49,44,32,46,46,46,84,
               110,41,42]},
             {sep,[{text,[2,34,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,")[type_application/2](#type_application-2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "G[user_type_application_arguments/1](#user_type_application_arguments-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              "=[user_type_application_name/1](#user_type_application_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"&user_type_application_arguments(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[3,62,32,91]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[1,93]}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "?Returns the arguments subtrees of a user_type_application node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "Q<a name=\"user_type_application_arguments-1\">user_type_application_arguments-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Returns the arguments subtrees of a"}],0,false},
             {text,
              [23,42,117,115,101,114,95,116,121,112,101,95,97,112,112,108,105,
               99,97,116,105,111,110,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"3[user_type_application/2](#user_type_application-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"!user_type_application_name(Node::"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,[1,62]}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ">Returns the type name subtree of a user_type_application node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "G<a name=\"user_type_application_name-1\">user_type_application_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"Returns the type name subtree of a"}],0,false},
             {text,
              [23,42,117,115,101,114,95,116,121,112,101,95,97,112,112,108,105,
               99,97,116,105,111,110,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"3[user_type_application/2](#user_type_application-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"$variable(Name::atom() | string()) ->"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Creates an abstract variable with the given name."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"variable-1\">variable-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"1Creates an abstract variable with the given name."}],
              0,false},
             {text,[6,42,78,97,109,101,42]},
             {sep,
              [{text,
                "Nmay be any atom or string that represents a lexically valid variable name, but"}],
              0,false},
             {text,[7,42,42,110,111,116,42,42]},
             {sep,[{text,"\"a single underscore character; see"}],0,false},
             {text,
              [29,91,117,110,100,101,114,115,99,111,114,101,47,48,93,40,35,
               117,110,100,101,114,115,99,111,114,101,45,48,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ÃªNote: no checking is done whether the character sequence represents a proper variable name, i.e., whether or not its first character is an uppercase Erlang character, or whether it does not contain control characters, whitespace, etc."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,117,110,100,101,114,115,99,111,114,101,47,48,93,40,35,
               117,110,100,101,114,115,99,111,114,101,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,")[variable_literal/1](#variable_literal-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,"#[variable_name/1](#variable_name-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [23,118,97,114,105,97,98,108,101,95,108,105,116,101,114,97,108,
               40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\n> string()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Returns the name of a variable node as a string."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"variable_literal-1\">variable_literal-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,111,102,32,97]}],
              0,false},
             {text,"\n*variable*"},
             {sep,
              [{text,
                [17,110,111,100,101,32,97,115,32,97,32,115,116,114,105,110,
                 103,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,118,97,114,105,97,98,108,101,47,49,93,40,35,118,97,114,
               105,97,98,108,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [20,118,97,114,105,97,98,108,101,95,110,97,109,101,40,78,111,
               100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> atom()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Returns the name of a variable node as an atom."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"variable_name-1\">variable_name-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,82,101,116,117,114,110,115,32,116,104,101,32,110,97,109,
                 101,32,111,102,32,97]}],
              0,false},
             {text,"\n*variable*"},
             {sep,
              [{text,
                [16,110,111,100,101,32,97,115,32,97,110,32,97,116,111,109,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [25,91,118,97,114,105,97,98,108,101,47,49,93,40,35,118,97,114,
               105,97,98,108,101,45,49,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,[{text,"\"warning_marker(Warning::term()) ->"}],0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Creates an abstract warning marker."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"warning_marker-1\">warning_marker-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "Â¬Creates an abstract warning marker. The result represents an occurrence of a possible problem in the source code, with an associated Erlang I/O ErrorInfo structure given by"}],
              0,false},
             {text,[7,42,69,114,114,111,114,42]},
             {sep,[{text,"\v(see module"}],0,false},
             {text,"\r[io(3)](./io)"},
             {sep,
              [{text,
                "bfor details). Warning markers are regarded as source code forms, but have no defined lexical form."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "YNote: this is supported only for backwards compatibility with existing parsers and tools."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,
              [29,91,101,111,102,95,109,97,114,107,101,114,47,48,93,40,35,101,
               111,102,95,109,97,114,107,101,114,45,48,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"![error_marker/1](#error_marker-1)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [23,91,105,115,95,102,111,114,109,47,49,93,40,35,105,115,95,102,
               111,114,109,45,49,41]},
             {sep,[{text,[1,44]}],0,false},
             {text,"/[warning_marker_info/1](#warning_marker_info-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{text,[3,35,35,32]},
         {sep,
          [{sep,
            [{text,
              [26,119,97,114,110,105,110,103,95,109,97,114,107,101,114,95,105,
               110,102,111,40,78,111,100,101,58,58]}],
            0,false},
           {sep,[{text,"\fsyntaxTree()"}],0,false},
           {sep,[{text,[3,41,32,45]}],0,false},
           {sep,[{text,"\b> term()"}],0,false}],
          0,false},
         {text,[0]}],
        0,false},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Returns the ErrorInfo structure of a warning_marker node."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"warning_marker_info-1\">warning_marker_info-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"$Returns the ErrorInfo structure of a"}],0,false},
             {text,
              [16,42,119,97,114,110,105,110,103,95,109,97,114,107,101,114,42]},
             {sep,[{text,[5,110,111,100,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r**See also:**"},
             {text,"%[warning_marker/1](#warning_marker-1)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t# Authors"},null},null}},
   {sep,
    [{sep,
      [{sep,
        [{text,
          [16,82,105,99,104,97,114,100,32,67,97,114,108,115,115,111,110]}],
        0,false}],
      0,false},
     {sep,
      [{sep,
        [{text,
          [26,99,97,114,108,115,115,111,110,46,114,105,99,104,97,114,100,64,
           103,109,97,105,108,46,99,111,109]}],
        0,false}],
      0,false}],
    0,false}],
  0,false}}
