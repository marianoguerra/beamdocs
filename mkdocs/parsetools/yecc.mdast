{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,{above,{text,[0]},null},null},
            {above,{above,{text,[6,35,32,121,101,99,99]},null},null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,{above,{text,[6,35,32,121,101,99,99]},null},null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [23,76,65,76,82,45,49,32,80,97,114,115,101,114,32,71,101,
                   110,101,114,97,116,111,114]}],
                0,false}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "1An LALR-1 parser generator for Erlang, similar to"}],
                        0,false},
                       {text,[6,42,121,97,99,99,42]},
                       {sep,
                        [{text,
                          "Q. Takes a BNF grammar definition as input, and produces Erlang code for a parser."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "5To understand this text, you also have to look at the"}],
                        0,false},
                       {text,[6,42,121,97,99,99,42]},
                       {sep,
                        [{text,
                          "Ãdocumentation in the UNIX(TM) manual. This is most probably necessary in order to understand the idea of a parser generator, and the principle and problems of LALR parsing with finite look-ahead."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true},
            null},
           null}}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,{above,{text,"\v# Functions"},null},null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text,"+## file(Grammarfile [, Options]) -> YeccRet"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "FGive information about resolved and unresolved parse action conflicts."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       [24,71,114,97,109,109,97,114,102,105,108,101,32,61,32,
                        102,105,108,101,110,97,109,101,40,41]}],
                     0,false}],
                   0,false},
                  {sep,
                   [{text,[1,42]},
                    {sep,[{text,"\eOptions = Option | [Option]"}],0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      [25,79,112,116,105,111,110,32,61,194,160,45,194,160,115,
                       101,101,32,98,101,108,111,119,194,160,45]}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "[YeccRet = {ok, Parserfile} | {ok, Parserfile, Warnings} | error | {error, Errors, Warnings}"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [23,80,97,114,115,101,114,102,105,108,101,32,61,32,102,
                     105,108,101,110,97,109,101,40,41]}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"/Warnings = Errors = [{filename(), [ErrorInfo]}]"}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,")ErrorInfo = {ErrorLine, module(), Reason}"}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [21,69,114,114,111,114,76,105,110,101,32,61,32,105,110,116,
                  101,103,101,114,40,41]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,",Reason =Â -Â formatable by format_error/1Â -"}],
              0,false}],
            0,false}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,"\r*Grammarfile*"},
                   {sep,
                    [{text,
                      "6is the file of declarations and grammar rules. Returns"}],
                    0,false},
                   {text,[4,42,111,107,42]},
                   {sep,
                    [{text,
                      [16,117,112,111,110,32,115,117,99,99,101,115,115,44,32,
                       111,114]}],
                    0,false},
                   {text,[7,42,101,114,114,111,114,42]},
                   {sep,
                    [{text,
                      "mif there are errors. An Erlang file containing the parser is created if there are no errors. The options are:"}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,
              {text,[4,60,100,108,62]},
              {nest,4,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,
                                        [{sep,
                                          [{text,
                                            [24,123,112,97,114,115,101,114,
                                             102,105,108,101,44,32,80,97,114,
                                             115,101,114,102,105,108,101,125]},
                                           {sep,[{text,[1,46]}],0,false}],
                                          0,false}],
                                        0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,100,62]},
                                       {sep,
                                        [{text,"\nParserfile"},
                                         {sep,
                                          [{text,
                                            "ais the name of the file that will contain the Erlang parser code that is generated. The default ("}],
                                          0,false},
                                         {text,[2,34,34]},
                                         {sep,
                                          [{text,
                                            [25,41,32,105,115,32,116,111,32,
                                             97,100,100,32,116,104,101,32,101,
                                             120,116,101,110,115,105,111,
                                             110]}],
                                          0,false},
                                         {text,[4,46,101,114,108]},
                                         {sep,[{text,[2,116,111]}],0,false},
                                         {text,"\vGrammarfile"},
                                         {sep,
                                          [{text,
                                            [15,115,116,114,105,112,112,101,
                                             100,32,111,102,32,116,104,101]}],
                                          0,false},
                                         {text,[4,46,121,114,108]},
                                         {sep,
                                          [{text,"\nextension."}],
                                          0,false}],
                                        0,false},
                                       {text,[5,60,47,100,100,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,116,62]},
                                      {sep,
                                       [{sep,
                                         [{text,
                                           [26,123,105,110,99,108,117,100,101,
                                            102,105,108,101,44,32,73,110,99,
                                            108,117,100,101,102,105,108,101,
                                            125]},
                                          {sep,[{text,[1,46]}],0,false}],
                                         0,false}],
                                       0,false},
                                      {text,[5,60,47,100,116,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,100,62]},
                                     {sep,
                                      [{sep,
                                        [{text,
                                          "_Indicates a customized prologue file which the user may want to use instead of the default file"}],
                                        0,false},
                                       {text,
                                        "\"lib/parsetools/include/yeccpre.hrl"},
                                       {sep,
                                        [{text,
                                          "Jwhich is otherwise included at the beginning of the resulting parser file."}],
                                        0,false},
                                       {text,[4,78,46,66,46]},
                                       {sep,[{text,[3,84,104,101]}],0,false},
                                       {text,"\vIncludefile"},
                                       {sep,
                                        [{text,
                                          "Ôis included 'as is' in the parser file, so it must not have a module declaration of its own, and it should not be compiled. It must, however, contain the necessary export declarations. The default is indicated by"}],
                                        0,false},
                                       {text,[2,34,34]},
                                       {sep,[{text,[1,46]}],0,false}],
                                      0,false},
                                     {text,[5,60,47,100,100,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,
                                     [{sep,
                                       [{text,
                                         [23,123,114,101,112,111,114,116,95,
                                          101,114,114,111,114,115,44,32,98,
                                          111,111,108,40,41,125]},
                                        {sep,[{text,[1,46]}],0,false}],
                                       0,false}],
                                     0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,100,62]},
                                   {sep,
                                    [{sep,
                                      [{text,
                                        "5Causes errors to be printed as they occur. Default is"}],
                                      0,false},
                                     {text,[4,116,114,117,101]},
                                     {sep,[{text,[1,46]}],0,false}],
                                    0,false},
                                   {text,[5,60,47,100,100,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,
                                   [{sep,
                                     [{text,
                                       [25,123,114,101,112,111,114,116,95,119,
                                        97,114,110,105,110,103,115,44,32,98,
                                        111,111,108,40,41,125]},
                                      {sep,[{text,[1,46]}],0,false}],
                                     0,false}],
                                   0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {sep,
                                  [{sep,
                                    [{text,
                                      "7Causes warnings to be printed as they occur. Default is"}],
                                    0,false},
                                   {text,[4,116,114,117,101]},
                                   {sep,[{text,[1,46]}],0,false}],
                                  0,false},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,
                                 [{sep,
                                   [{text,
                                     [16,123,114,101,112,111,114,116,44,32,98,
                                      111,111,108,40,41,125]},
                                    {sep,[{text,[1,46]}],0,false}],
                                   0,false}],
                                 0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {sep,
                                [{sep,
                                  [{text,
                                    [29,84,104,105,115,32,105,115,32,97,32,
                                     115,104,111,114,116,32,102,111,114,109,
                                     32,102,111,114,32,98,111,116,104]}],
                                  0,false},
                                 {text,"\rreport_errors"},
                                 {sep,[{text,[3,97,110,100]}],0,false},
                                 {text,
                                  [15,114,101,112,111,114,116,95,119,97,114,
                                   110,105,110,103,115]},
                                 {sep,[{text,[1,46]}],0,false}],
                                0,false},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,
                               [{text,
                                 [18,119,97,114,110,105,110,103,115,95,97,115,
                                  95,101,114,114,111,114,115]}],
                               0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,
                                     "(Causes warnings to be treated as errors."}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{sep,
                               [{text,
                                 [23,123,114,101,116,117,114,110,95,101,114,
                                  114,111,114,115,44,32,98,111,111,108,40,41,
                                  125]},
                                {sep,[{text,[1,46]}],0,false}],
                               0,false}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {sep,
                            [{sep,
                              [{text,
                                [20,73,102,32,116,104,105,115,32,102,108,97,
                                 103,32,105,115,32,115,101,116,44]}],
                              0,false},
                             {text,
                              [25,123,101,114,114,111,114,44,32,69,114,114,
                               111,114,115,44,32,87,97,114,110,105,110,103,
                               115,125]},
                             {sep,
                              [{text,
                                "-is returned when there are errors. Default is"}],
                              0,false},
                             {text,[5,102,97,108,115,101]},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{sep,
                             [{text,
                               [25,123,114,101,116,117,114,110,95,119,97,114,
                                110,105,110,103,115,44,32,98,111,111,108,40,
                                41,125]},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {sep,
                          [{sep,
                            [{text,
                              ".If this flag is set, an extra field containing"}],
                            0,false},
                           {text,"\bWarnings"},
                           {sep,
                            [{text,
                              "7is added to the tuple returned upon success. Default is"}],
                            0,false},
                           {text,[5,102,97,108,115,101]},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{sep,
                           [{text,
                             [16,123,114,101,116,117,114,110,44,32,98,111,111,
                              108,40,41,125]},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {sep,
                        [{sep,
                          [{text,
                            [29,84,104,105,115,32,105,115,32,97,32,115,104,
                             111,114,116,32,102,111,114,109,32,102,111,114,32,
                             98,111,116,104]}],
                          0,false},
                         {text,"\rreturn_errors"},
                         {sep,[{text,[3,97,110,100]}],0,false},
                         {text,
                          [15,114,101,116,117,114,110,95,119,97,114,110,105,
                           110,103,115]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{sep,
                         [{text,
                           [17,123,118,101,114,98,111,115,101,44,32,98,111,
                            111,108,40,41,125]},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {sep,
                      [{sep,
                        [{text,
                          "{Determines whether the parser generator should give full information about resolved and unresolved parse action conflicts ("}],
                        0,false},
                       {text,[4,116,114,117,101]},
                       {sep,
                        [{text,
                          "d), or only about those conflicts that prevent a parser from being generated from the input grammar ("}],
                        0,false},
                       {text,[5,102,97,108,115,101]},
                       {sep,
                        [{text,
                          [15,44,32,116,104,101,32,100,101,102,97,117,108,116,
                           41,46]}],
                        0,false}],
                      0,false},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}}}},
             {text,[5,60,47,100,108,62]}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,"(Any of the Boolean options can be set to"}],
                    0,false},
                   {text,[6,42,116,114,117,101,42]},
                   {sep,
                    [{text,
                      "/by stating the name of the option. For example,"}],
                    0,false},
                   {text,"\t*verbose*"},
                   {sep,
                    [{text,
                      [16,105,115,32,101,113,117,105,118,97,108,101,110,116,
                       32,116,111]}],
                    0,false},
                   {text,
                    [17,42,123,118,101,114,98,111,115,101,44,32,116,114,117,
                     101,125,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      [16,84,104,101,32,118,97,108,117,101,32,111,102,32,116,
                       104,101]}],
                    0,false},
                   {text,"\f*Parserfile*"},
                   {sep,
                    [{text,
                      [22,111,112,116,105,111,110,32,115,116,114,105,112,112,
                       101,100,32,111,102,32,116,104,101]}],
                    0,false},
                   {text,[6,42,46,101,114,108,42]},
                   {sep,
                    [{text,
                      "Jextension is used by Yecc as the module name of the generated parser file."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,[{text,"\eYecc will add the extension"}],0,false},
                   {text,[6,42,46,121,114,108,42]},
                   {sep,[{text,[6,116,111,32,116,104,101]}],0,false},
                   {text,"\r*Grammarfile*"},
                   {sep,
                    [{text,
                      [19,110,97,109,101,44,32,116,104,101,32,101,120,116,101,
                       110,115,105,111,110]}],
                    0,false},
                   {text,[6,42,46,104,114,108,42]},
                   {sep,[{text,[6,116,111,32,116,104,101]}],0,false},
                   {text,"\r*Includefile*"},
                   {sep,
                    [{text,
                      [23,110,97,109,101,44,32,97,110,100,32,116,104,101,32,
                       101,120,116,101,110,115,105,111,110]}],
                    0,false},
                   {text,[6,42,46,101,114,108,42]},
                   {sep,[{text,[6,116,111,32,116,104,101]}],0,false},
                   {text,"\f*Parserfile*"},
                   {sep,
                    [{text,",name, unless the extension is already there."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text," ## format_error(Reason) -> Chars"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,"2Return an English description of a an error tuple."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,",Reason =Â -Â as returned by yecc:file/1,2Â -"}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [24,67,104,97,114,115,32,61,32,91,99,104,97,114,40,41,32,124,
                 32,67,104,97,114,115,93]}],
              0,false}],
            0,false}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "EReturns a descriptive string in English of an error tuple returned by"}],
                    0,false},
                   {text,
                    [15,42,121,101,99,99,58,102,105,108,101,47,49,44,50,42]},
                   {sep,
                    [{text,
                      "=. This function is mainly used by the compiler invoking Yecc."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,false}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [17,35,35,32,80,114,101,45,80,114,111,99,101,115,115,105,110,
              103]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,[{text,[1,65]}],0,false},
                {text,"\t*scanner*"},
                {sep,
                 [{text,
                   "Kto pre-process the text (program, etc.) to be parsed is not provided in the"}],
                 0,false},
                {text,[6,42,121,101,99,99,42]},
                {sep,
                 [{text,
                   "õmodule. The scanner serves as a kind of lexicon look-up routine. It is possible to write a grammar that uses only character tokens as terminal symbols, thereby eliminating the need for a scanner, but this would make the parser larger and slower."}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [281,84,104,101,32,117,115,101,114,32,115,104,111,117,108,
                    100,32,105,109,112,108,101,109,101,110,116,32,97,32,115,
                    99,97,110,110,101,114,32,116,104,97,116,32,115,101,103,
                    109,101,110,116,115,32,116,104,101,32,105,110,112,117,116,
                    32,116,101,120,116,44,32,97,110,100,32,116,117,114,110,
                    115,32,105,116,32,105,110,116,111,32,111,110,101,32,111,
                    114,32,109,111,114,101,32,108,105,115,116,115,32,111,102,
                    32,116,111,107,101,110,115,46,32,69,97,99,104,32,116,111,
                    107,101,110,32,115,104,111,117,108,100,32,98,101,32,97,32,
                    116,117,112,108,101,32,99,111,110,116,97,105,110,105,110,
                    103,32,105,110,102,111,114,109,97,116,105,111,110,32,97,
                    98,111,117,116,32,115,121,110,116,97,99,116,105,99,32,99,
                    97,116,101,103,111,114,121,44,32,112,111,115,105,116,105,
                    111,110,32,105,110,32,116,104,101,32,116,101,120,116,32,
                    40,101,46,103,46,32,108,105,110,101,32,110,117,109,98,101,
                    114,41,44,32,97,110,100,32,116,104,101,32,97,99,116,117,
                    97,108,32,116,101,114,109,105,110,97,108,32,115,121,109,
                    98,111,108,32,102,111,117,110,100,32,105,110,32,116,104,
                    101,32,116,101,120,116,58]}],
                 0,false},
                {text," *{Category, LineNumber, Symbol}*"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [133,73,102,32,97,32,116,101,114,109,105,110,97,108,32,115,
                    121,109,98,111,108,32,105,115,32,116,104,101,32,111,110,
                    108,121,32,109,101,109,98,101,114,32,111,102,32,97,32,99,
                    97,116,101,103,111,114,121,44,32,97,110,100,32,116,104,
                    101,32,115,121,109,98,111,108,32,110,97,109,101,32,105,
                    115,32,105,100,101,110,116,105,99,97,108,32,116,111,32,
                    116,104,101,32,99,97,116,101,103,111,114,121,32,110,97,
                    109,101,44,32,116,104,101,32,116,111,107,101,110,32,102,
                    111,114,109,97,116,32,109,97,121,32,98,101]}],
                 0,false},
                {text,
                 [22,42,123,83,121,109,98,111,108,44,32,76,105,110,101,78,117,
                  109,98,101,114,125,42]},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "BA list of tokens produced by the scanner should end with a special"}],
                 0,false},
                {text,
                 [14,42,101,110,100,95,111,102,95,105,110,112,117,116,42]},
                {sep,
                 [{text,
                   "Ituple which the parser is looking for. The format of this tuple should be"}],
                 0,false},
                {text,
                 [29,42,123,69,110,100,115,121,109,98,111,108,44,32,76,97,115,
                  116,76,105,110,101,78,117,109,98,101,114,125,42]},
                {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                {text,"\v*Endsymbol*"},
                {sep,
                 [{text,
                   "qis an identifier that is distinguished from all the terminal and non-terminal categories of the syntax rules. The"}],
                 0,false},
                {text,"\v*Endsymbol*"},
                {sep,
                 [{text,"0may be declared in the grammar file (see below)."}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "²The simplest case is to segment the input string into a list of identifiers (atoms) and use those atoms both as categories and values of the tokens. For example, the input string"}],
                 0,false},
                {text,[16,42,97,97,97,32,98,98,98,32,55,55,55,44,32,88,42]},
                {sep,
                 [{text,
                   [30,109,97,121,32,98,101,32,115,99,97,110,110,101,100,32,
                    40,116,111,107,101,110,105,122,101,100,41,32,97,115,58]}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 "G\n[{aaa, 1}, {bbb, 1}, {777, 1}, {',' , 1}, {'X', 1},\n {'$end', 1}].    "}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "DThis assumes that this is the first line of the input text, and that"}],
                 0,false},
                {text,"\b*'$end'*"},
                {sep,
                 [{text,
                   [20,105,115,32,116,104,101,32,100,105,115,116,105,110,103,
                    117,105,115,104,101,100]}],
                 0,false},
                {text,
                 [14,42,101,110,100,95,111,102,95,105,110,112,117,116,42]},
                {sep,[{text,[7,115,121,109,98,111,108,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [25,84,104,101,32,69,114,108,97,110,103,32,115,99,97,110,
                    110,101,114,32,105,110,32,116,104,101]}],
                 0,false},
                {text,[4,42,105,111,42]},
                {sep,
                 [{text,
                   "Hmodule can be used as a starting point when writing a new scanner. Study"}],
                 0,false},
                {text,[14,42,121,101,99,99,115,99,97,110,46,101,114,108,42]},
                {sep,
                 [{text,
                   "3in order to see how a filter can be added on top of"}],
                 0,false},
                {text,
                 [20,42,105,111,58,115,99,97,110,95,101,114,108,95,102,111,
                  114,109,47,51,42]},
                {sep,
                 [{text,
                   "Úto provide a scanner for Yecc that tokenizes grammar files before parsing them with the Yecc parser. A more general approach to scanner implementation is to use a scanner generator. A scanner generator in Erlang called"}],
                 0,false},
                {text,[6,42,108,101,101,120,42]},
                {sep,
                 [{text,
                   [21,105,115,32,117,110,100,101,114,32,100,101,118,101,108,
                    111,112,109,101,110,116,46]}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [28,35,35,32,71,114,97,109,109,97,114,32,68,101,102,105,110,105,
             116,105,111,110,32,70,111,114,109,97,116]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fErlang style"}],0,false},
               {text,"\n*comments*"},
               {sep,
                [{text,
                  [17,44,32,115,116,97,114,116,105,110,103,32,119,105,116,104,
                   32,97]}],
                0,false},
               {text,[5,42,39,37,39,42]},
               {sep,
                [{text,
                  [31,44,32,97,114,101,32,97,108,108,111,119,101,100,32,105,
                   110,32,103,114,97,109,109,97,114,32,102,105,108,101,115,
                   46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[4,69,97,99,104]}],0,false},
               {text,"\r*declaration*"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,[6,42,114,117,108,101,42]},
               {sep,
                [{text,
                  [30,101,110,100,115,32,119,105,116,104,32,97,32,100,111,116,
                   32,40,116,104,101,32,99,104,97,114,97,99,116,101,114]}],
                0,false},
               {text,[5,42,39,46,39,42]},
               {sep,[{text,[2,41,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#The grammar starts with an optional"}],0,false},
               {text,"\b*header*"},
               {sep,
                [{text,
                  [306,115,101,99,116,105,111,110,46,32,84,104,101,32,104,101,
                   97,100,101,114,32,105,115,32,112,117,116,32,102,105,114,
                   115,116,32,105,110,32,116,104,101,32,103,101,110,101,114,
                   97,116,101,100,32,102,105,108,101,44,32,98,101,102,111,114,
                   101,32,116,104,101,32,109,111,100,117,108,101,32,100,101,
                   99,108,97,114,97,116,105,111,110,46,32,84,104,101,32,112,
                   117,114,112,111,115,101,32,111,102,32,116,104,101,32,104,
                   101,97,100,101,114,32,105,115,32,116,111,32,112,114,111,
                   118,105,100,101,32,97,32,109,101,97,110,115,32,116,111,32,
                   109,97,107,101,32,116,104,101,32,100,111,99,117,109,101,
                   110,116,97,116,105,111,110,32,103,101,110,101,114,97,116,
                   101,100,32,98,121,32,69,68,111,99,32,108,111,111,107,32,
                   110,105,99,101,114,46,32,69,97,99,104,32,104,101,97,100,
                   101,114,32,108,105,110,101,32,115,104,111,117,108,100,32,
                   98,101,32,101,110,99,108,111,115,101,100,32,105,110,32,100,
                   111,117,98,108,101,32,113,117,111,116,101,115,44,32,97,110,
                   100,32,110,101,119,108,105,110,101,115,32,119,105,108,108,
                   32,98,101,32,105,110,115,101,114,116,101,100,32,98,101,116,
                   119,101,101,110,32,116,104,101,32,108,105,110,101,115,46,
                   32,70,111,114,32,101,120,97,109,112,108,101,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                ";\nHeader \"%% Copyright (C)\"\n\"%% @private\"\n\"%% @Author John\"."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [31,78,101,120,116,32,99,111,109,101,115,32,97,32,100,101,
                   99,108,97,114,97,116,105,111,110,32,111,102,32,116,104,
                   101]}],
                0,false},
               {text,
                [24,42,110,111,110,116,101,114,109,105,110,97,108,32,99,97,
                 116,101,103,111,114,105,101,115,42]},
               {sep,
                [{text,"%to be used in the rules. For example:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"1\nNonterminals sentence nounphrase verbphrase.    "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "<A non-terminal category can be used at the left hand side (="}],
                0,false},
               {text,[5,42,108,104,115,42]},
               {sep,[{text,[4,44,32,111,114]}],0,false},
               {text,[6,42,104,101,97,100,42]},
               {sep,
                [{text,
                  "H) of a grammar rule. It can also appear at the right hand side of rules."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [31,78,101,120,116,32,99,111,109,101,115,32,97,32,100,101,
                   99,108,97,114,97,116,105,111,110,32,111,102,32,116,104,
                   101]}],
                0,false},
               {text,
                [21,42,116,101,114,109,105,110,97,108,32,99,97,116,101,103,
                 111,114,105,101,115,42]},
               {sep,
                [{text,
                  "J, which are the categories of tokens produced by the scanner. For example:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"+\nTerminals article adjective noun verb.    "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ">Terminal categories may only appear in the right hand sides (="}],
                0,false},
               {text,[5,42,114,104,115,42]},
               {sep,
                [{text,
                  [19,41,32,111,102,32,103,114,97,109,109,97,114,32,114,117,
                   108,101,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [31,78,101,120,116,32,99,111,109,101,115,32,97,32,100,101,
                   99,108,97,114,97,116,105,111,110,32,111,102,32,116,104,
                   101]}],
                0,false},
               {text,"\f*rootsymbol*"},
               {sep,
                [{text,"0, or start category of the grammar. For example:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [25,10,82,111,111,116,115,121,109,98,111,108,32,115,101,110,
                 116,101,110,99,101,46,32,32,32,32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "®This symbol should appear in the lhs of at least one grammar rule. This is the most general syntactic category which the parser ultimately will parse every input string into."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "EAfter the rootsymbol declaration comes an optional declaration of the"}],
                0,false},
               {text,[14,42,101,110,100,95,111,102,95,105,110,112,117,116,42]},
               {sep,
                [{text,
                  "9symbol that your scanner is expected to use. For example:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [22,10,69,110,100,115,121,109,98,111,108,32,39,36,101,110,100,
                 39,46,32,32,32,32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"&Next comes one or more declarations of"}],
                0,false},
               {text,
                [22,42,111,112,101,114,97,116,111,114,32,112,114,101,99,101,
                 100,101,110,99,101,115,42]},
               {sep,
                [{text,
                  "B, if needed. These are used to resolve shift/reduce conflicts (see"}],
                0,false},
               {text,[6,42,121,97,99,99,42]},
               {sep,
                [{text,
                  [15,100,111,99,117,109,101,110,116,97,116,105,111,110,41,
                   46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"\"Examples of operator declarations:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "W\nRight 100 '='.\nNonassoc 200 '==' '=/='.\nLeft 300 '+'.\nLeft 400 '*'.\nUnary 500 '-'.    "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [28,84,104,101,115,101,32,100,101,99,108,97,114,97,116,105,
                   111,110,115,32,109,101,97,110,32,116,104,97,116]}],
                0,false},
               {text,[5,42,39,61,39,42]},
               {sep,
                [{text,
                  [15,105,115,32,100,101,102,105,110,101,100,32,97,115,32,
                   97]}],
                0,false},
               {text,
                [26,42,114,105,103,104,116,32,97,115,115,111,99,105,97,116,
                 105,118,101,32,98,105,110,97,114,121,42]},
               {sep,
                [{text,
                  [29,111,112,101,114,97,116,111,114,32,119,105,116,104,32,
                   112,114,101,99,101,100,101,110,99,101,32,49,48,48,44]}],
                0,false},
               {text,[6,42,39,61,61,39,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[7,42,39,61,47,61,39,42]},
               {sep,
                [{text,
                  [18,97,114,101,32,111,112,101,114,97,116,111,114,115,32,119,
                   105,116,104]}],
                0,false},
               {text,
                [18,42,110,111,32,97,115,115,111,99,105,97,116,105,118,105,
                 116,121,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[5,42,39,43,39,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[5,42,39,42,39,42]},
               {sep,[{text,[3,97,114,101]}],0,false},
               {text,
                [25,42,108,101,102,116,32,97,115,115,111,99,105,97,116,105,
                 118,101,32,98,105,110,97,114,121,42]},
               {sep,
                [{text,
                  [16,111,112,101,114,97,116,111,114,115,44,32,119,104,101,
                   114,101]}],
                0,false},
               {text,[5,42,39,42,39,42]},
               {sep,
                [{text,
                  [21,116,97,107,101,115,32,112,114,101,99,101,100,101,110,99,
                   101,32,111,118,101,114]}],
                0,false},
               {text,[5,42,39,43,39,42]},
               {sep,
                [{text,
                  [22,40,116,104,101,32,110,111,114,109,97,108,32,99,97,115,
                   101,41,44,32,97,110,100]}],
                0,false},
               {text,[5,42,39,45,39,42]},
               {sep,[{text,[4,105,115,32,97]}],0,false},
               {text,[7,42,117,110,97,114,121,42]},
               {sep,[{text,"\"operator of higher precedence than"}],0,false},
               {text,[5,42,39,42,39,42]},
               {sep,
                [{text,
                  "G. The fact that '==' has no associativity means that an expression like"}],
                0,false},
               {text,"\r*a == b == c*"},
               {sep,
                [{text,
                  [29,105,115,32,99,111,110,115,105,100,101,114,101,100,32,97,
                   32,115,121,110,116,97,120,32,101,114,114,111,114,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [298,67,101,114,116,97,105,110,32,114,117,108,101,115,32,97,
                 114,101,32,97,115,115,105,103,110,101,100,32,112,114,101,99,
                 101,100,101,110,99,101,58,32,101,97,99,104,32,114,117,108,
                 101,32,103,101,116,115,32,105,116,115,32,112,114,101,99,101,
                 100,101,110,99,101,32,102,114,111,109,32,116,104,101,32,108,
                 97,115,116,32,116,101,114,109,105,110,97,108,32,115,121,109,
                 98,111,108,32,109,101,110,116,105,111,110,101,100,32,105,110,
                 32,116,104,101,32,114,105,103,104,116,32,104,97,110,100,32,
                 115,105,100,101,32,111,102,32,116,104,101,32,114,117,108,101,
                 46,32,73,116,32,105,115,32,97,108,115,111,32,112,111,115,115,
                 105,98,108,101,32,116,111,32,100,101,99,108,97,114,101,32,
                 112,114,101,99,101,100,101,110,99,101,32,102,111,114,32,110,
                 111,110,45,116,101,114,109,105,110,97,108,115,44,32,34,111,
                 110,101,32,108,101,118,101,108,32,117,112,34,46,32,84,104,
                 105,115,32,105,115,32,112,114,97,99,116,105,99,97,108,32,119,
                 104,101,110,32,97,110,32,111,112,101,114,97,116,111,114,32,
                 105,115,32,111,118,101,114,108,111,97,100,101,100,32,40,115,
                 101,101,32,97,108,115,111,32,101,120,97,109,112,108,101,32,
                 51,32,98,101,108,111,119,41,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rNext come the"}],0,false},
               {text,
                [15,42,103,114,97,109,109,97,114,32,114,117,108,101,115,42]},
               {sep,[{text," . Each rule has the general form"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "9\nLeft_hand_side -> Right_hand_side : Associated_code.    "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "çThe left hand side is a non-terminal category. The right hand side is a sequence of one or more non-terminal or terminal symbols with spaces between. The associated code is a sequence of zero or more Erlang expressions (with commas"}],
                0,false},
               {text,[5,42,39,44,39,42]},
               {sep,
                [{text,
                  "Eas separators). If the associated code is empty, the separating colon"}],
                0,false},
               {text,[5,42,39,58,39,42]},
               {sep,
                [{text,
                  "7is also omitted. A final dot marks the end of the rule."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [15,83,121,109,98,111,108,115,32,115,117,99,104,32,97,115]}],
                0,false},
               {text,[5,42,39,123,39,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[5,42,39,46,39,42]},
               {sep,
                [{text,
                  [131,44,32,101,116,99,46,44,32,104,97,118,101,32,116,111,32,
                   98,101,32,101,110,99,108,111,115,101,100,32,105,110,32,115,
                   105,110,103,108,101,32,113,117,111,116,101,115,32,119,104,
                   101,110,32,117,115,101,100,32,97,115,32,116,101,114,109,
                   105,110,97,108,32,111,114,32,110,111,110,45,116,101,114,
                   109,105,110,97,108,32,115,121,109,98,111,108,115,32,105,
                   110,32,103,114,97,109,109,97,114,32,114,117,108,101,115,46,
                   32,84,104,101,32,117,115,101,32,111,102,32,116,104,101,32,
                   115,121,109,98,111,108,115]}],
                0,false},
               {text,"\n*'$empty'*"},
               {sep,[{text,[1,44]}],0,false},
               {text,"\b*'$end'*"},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[14,42,39,36,117,110,100,101,102,105,110,101,100,39,42]},
               {sep,
                [{text,
                  [18,115,104,111,117,108,100,32,98,101,32,97,118,111,105,100,
                   101,100,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÜThe last part of the grammar file is an optional section with Erlang code (= function definitions) which is included 'as is' in the resulting parser file. This section must start with the pseudo declaration, or key words"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [17,10,69,114,108,97,110,103,32,99,111,100,101,46,32,32,32,
                 32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [287,78,111,32,115,121,110,116,97,120,32,114,117,108,101,32,
                 100,101,102,105,110,105,116,105,111,110,115,32,111,114,32,
                 111,116,104,101,114,32,100,101,99,108,97,114,97,116,105,111,
                 110,115,32,109,97,121,32,102,111,108,108,111,119,32,116,104,
                 105,115,32,115,101,99,116,105,111,110,46,32,84,111,32,97,118,
                 111,105,100,32,99,111,110,102,108,105,99,116,115,32,119,105,
                 116,104,32,105,110,116,101,114,110,97,108,32,118,97,114,105,
                 97,98,108,101,115,44,32,100,111,32,110,111,116,32,117,115,
                 101,32,118,97,114,105,97,98,108,101,32,110,97,109,101,115,32,
                 98,101,103,105,110,110,105,110,103,32,119,105,116,104,32,116,
                 119,111,32,117,110,100,101,114,115,99,111,114,101,32,99,104,
                 97,114,97,99,116,101,114,115,32,40,39,95,95,39,41,32,105,110,
                 32,116,104,101,32,69,114,108,97,110,103,32,99,111,100,101,32,
                 105,110,32,116,104,105,115,32,115,101,99,116,105,111,110,44,
                 32,111,114,32,105,110,32,116,104,101,32,99,111,100,101,32,97,
                 115,115,111,99,105,97,116,101,100,32,119,105,116,104,32,116,
                 104,101,32,105,110,100,105,118,105,100,117,97,108,32,115,121,
                 110,116,97,120,32,114,117,108,101,115,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fThe optional"}],0,false},
               {text,"\b*expect*"},
               {sep,
                [{text,
                  "Îdeclaration can be placed anywhere before the last optional section with Erlang code. It is used for suppressing the warning about conflicts that is ordinarily given if the grammar is ambiguous. An example:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[14,10,69,120,112,101,99,116,32,50,46,32,32,32,32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "uThe warning is given if the number of shift/reduce conflicts differs from 2, or if there are reduce/reduce conflicts."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\v## Examples"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "AA grammar to parse list expressions (with empty associated code):"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "Ñ\nNonterminals list elements element.\nTerminals atom '(' ')'.\nRootsymbol list.\nlist -> '(' ')'.\nlist -> '(' elements ')'.\nelements -> element.\nelements -> element elements.\nelement -> atom.\nelement -> list.    "}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "TThis grammar can be used to generate a parser which parses list expressions, such as"}],
               0,false},
              {text,"1*(), (a), (peter charles), (a (b c) d (())), ...*"},
              {sep,
               [{text,
                 "<provided that your scanner tokenizes, for example, the input"}],
               0,false},
              {text,
               [17,42,40,112,101,116,101,114,32,99,104,97,114,108,101,115,41,
                42]},
              {sep,[{text,"\vas follows:"}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "O\n[{'(', 1} , {atom, 1, peter}, {atom, 1, charles}, {')', 1}, \n {'$end', 1}]    "}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [465,87,104,101,110,32,97,32,103,114,97,109,109,97,114,32,114,
                117,108,101,32,105,115,32,117,115,101,100,32,98,121,32,116,
                104,101,32,112,97,114,115,101,114,32,116,111,32,112,97,114,
                115,101,32,40,112,97,114,116,32,111,102,41,32,116,104,101,32,
                105,110,112,117,116,32,115,116,114,105,110,103,32,97,115,32,
                97,32,103,114,97,109,109,97,116,105,99,97,108,32,112,104,114,
                97,115,101,44,32,116,104,101,32,97,115,115,111,99,105,97,116,
                101,100,32,99,111,100,101,32,105,115,32,101,118,97,108,117,97,
                116,101,100,44,32,97,110,100,32,116,104,101,32,118,97,108,117,
                101,32,111,102,32,116,104,101,32,108,97,115,116,32,101,120,
                112,114,101,115,115,105,111,110,32,98,101,99,111,109,101,115,
                32,116,104,101,32,118,97,108,117,101,32,111,102,32,116,104,
                101,32,112,97,114,115,101,100,32,112,104,114,97,115,101,46,32,
                84,104,105,115,32,118,97,108,117,101,32,109,97,121,32,98,101,
                32,117,115,101,100,32,98,121,32,116,104,101,32,112,97,114,115,
                101,114,32,108,97,116,101,114,32,116,111,32,98,117,105,108,
                100,32,115,116,114,117,99,116,117,114,101,115,32,116,104,97,
                116,32,97,114,101,32,118,97,108,117,101,115,32,111,102,32,104,
                105,103,104,101,114,32,112,104,114,97,115,101,115,32,111,102,
                32,119,104,105,99,104,32,116,104,101,32,99,117,114,114,101,
                110,116,32,112,104,114,97,115,101,32,105,115,32,97,32,112,97,
                114,116,46,32,84,104,101,32,118,97,108,117,101,115,32,105,110,
                105,116,105,97,108,108,121,32,97,115,115,111,99,105,97,116,
                101,100,32,119,105,116,104,32,116,101,114,109,105,110,97,108,
                32,99,97,116,101,103,111,114,121,32,112,104,114,97,115,101,
                115,44,32,105,46,101,46,32,105,110,112,117,116,32,116,111,107,
                101,110,115,44,32,97,114,101,32,116,104,101,32,116,111,107,
                101,110,32,116,117,112,108,101,115,32,116,104,101,109,115,101,
                108,118,101,115,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "LBelow is an example of the grammar above with structure building code added:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "È\nlist -> '(' ')' : nil.\nlist -> '(' elements ')' : '$2'.\nelements -> element : {cons, '$1', nil}.\nelements -> element elements : {cons, '$1', '$2'}.\nelement -> atom : '$1'.\nelement -> list : '$1'.    "}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "|With this code added to the grammar rules, the parser produces the following value (structure) when parsing the input string"}],
               0,false},
              {text,"\n*(a b c).*"},
              {sep,
               [{text,
                 "S. This still assumes that this was the first input line that the scanner tokenized:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "f\n{cons, {atom, 1, a,} {cons, {atom, 1, b},\n                            {cons, {atom, 1, c}, nil}}}    "}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [28,84,104,101,32,97,115,115,111,99,105,97,116,101,100,32,99,
                  111,100,101,32,99,111,110,116,97,105,110,115]}],
               0,false},
              {text,
               [18,42,112,115,101,117,100,111,32,118,97,114,105,97,98,108,101,
                115,42]},
              {text,[6,42,39,36,49,39,42]},
              {sep,[{text,[1,44]}],0,false},
              {text,[6,42,39,36,50,39,42]},
              {sep,[{text,[1,44]}],0,false},
              {text,[6,42,39,36,51,39,42]},
              {sep,
               [{text,
                 "ñ, etc. which refer to (are bound to) the values associated previously by the parser with the symbols of the right hand side of the rule. When these symbols are terminal categories, the values are token tuples of the input string (see above)."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [425,84,104,101,32,97,115,115,111,99,105,97,116,101,100,32,
                  99,111,100,101,32,109,97,121,32,110,111,116,32,111,110,108,
                  121,32,98,101,32,117,115,101,100,32,116,111,32,98,117,105,
                  108,100,32,115,116,114,117,99,116,117,114,101,115,32,97,115,
                  115,111,99,105,97,116,101,100,32,119,105,116,104,32,112,104,
                  114,97,115,101,115,44,32,98,117,116,32,109,97,121,32,97,108,
                  115,111,32,98,101,32,117,115,101,100,32,102,111,114,32,115,
                  121,110,116,97,99,116,105,99,32,97,110,100,32,115,101,109,
                  97,110,116,105,99,32,116,101,115,116,115,44,32,112,114,105,
                  110,116,111,117,116,32,97,99,116,105,111,110,115,32,40,102,
                  111,114,32,101,120,97,109,112,108,101,32,102,111,114,32,116,
                  114,97,99,105,110,103,41,44,32,101,116,99,46,32,100,117,114,
                  105,110,103,32,116,104,101,32,112,97,114,115,105,110,103,32,
                  112,114,111,99,101,115,115,46,32,83,105,110,99,101,32,116,
                  111,107,101,110,115,32,99,111,110,116,97,105,110,32,112,111,
                  115,105,116,105,111,110,97,108,32,40,108,105,110,101,32,110,
                  117,109,98,101,114,41,32,105,110,102,111,114,109,97,116,105,
                  111,110,44,32,105,116,32,105,115,32,112,111,115,115,105,98,
                  108,101,32,116,111,32,112,114,111,100,117,99,101,32,101,114,
                  114,111,114,32,109,101,115,115,97,103,101,115,32,119,104,
                  105,99,104,32,99,111,110,116,97,105,110,32,108,105,110,101,
                  32,110,117,109,98,101,114,115,46,32,73,102,32,116,104,101,
                  114,101,32,105,115,32,110,111,32,97,115,115,111,99,105,97,
                  116,101,100,32,99,111,100,101,32,97,102,116,101,114,32,116,
                  104,101,32,114,105,103,104,116,32,104,97,110,100,32,115,105,
                  100,101,32,111,102,32,116,104,101,32,114,117,108,101,44,32,
                  116,104,101,32,118,97,108,117,101]}],
               0,false},
              {text,[14,42,39,36,117,110,100,101,102,105,110,101,100,39,42]},
              {sep,
               [{text,
                 [30,105,115,32,97,115,115,111,99,105,97,116,101,100,32,119,
                  105,116,104,32,116,104,101,32,112,104,114,97,115,101,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "aThe right hand side of a grammar rule may be empty. This is indicated by using the special symbol"}],
               0,false},
              {text,"\n*'$empty'*"},
              {sep,
               [{text,
                 "9as rhs. Then the list grammar above may be simplified to:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "¤\nlist -> '(' elements ')' : '$2'.\nelements -> element elements : {cons, '$1', '$2'}.\nelements -> '$empty' : nil.\nelement -> atom : '$1'.\nelement -> list : '$1'.    "}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [22,35,35,32,71,101,110,101,114,97,116,105,110,103,32,97,32,80,97,
           114,115,101,114]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "8To call the parser generator, use the following command:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [28,10,121,101,99,99,58,102,105,108,101,40,71,114,97,109,109,97,
               114,102,105,108,101,41,46,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "äAn error message from Yecc will be shown if the grammar is not of the LALR type (for example too ambiguous). Shift/reduce conflicts are resolved in favor of shifting if there are no operator precedence declarations. Refer to the"}],
              0,false},
             {text,[6,42,121,97,99,99,42]},
             {sep,
              [{text,"0documentation on the use of operator precedence."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "]The output file contains Erlang source code for a parser module with module name equal to the"}],
              0,false},
             {text,"\f*Parserfile*"},
             {sep,
              [{text,
                "cparameter. After compilation, the parser can be called as follows (the module name is assumed to be"}],
              0,false},
             {text,"\n*myparser*"},
             {sep,[{text,[2,41,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,"+\nmyparser:parse(myscanner:scan(Inport))    "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [135,84,104,101,32,99,97,108,108,32,102,111,114,109,97,116,32,
                 109,97,121,32,98,101,32,100,105,102,102,101,114,101,110,116,
                 32,105,102,32,97,32,99,117,115,116,111,109,105,122,101,100,
                 32,112,114,111,108,111,103,117,101,32,102,105,108,101,32,104,
                 97,115,32,98,101,101,110,32,105,110,99,108,117,100,101,100,
                 32,119,104,101,110,32,103,101,110,101,114,97,116,105,110,103,
                 32,116,104,101,32,112,97,114,115,101,114,32,105,110,115,116,
                 101,97,100,32,111,102,32,116,104,101,32,100,101,102,97,117,
                 108,116,32,102,105,108,101]}],
              0,false},
             {text,"$*lib/parsetools/include/yeccpre.hrl*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "8With the standard prologue, this call will return either"}],
              0,false},
             {text,[14,42,123,111,107,44,32,82,101,115,117,108,116,125,42]},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,"\b*Result*"},
             {sep,
              [{text,
                "Eis a structure that the Erlang code of the grammar file has built, or"}],
              0,false},
             {text,")*{error, {Line_number, Module, Message}}*"},
             {sep,
              [{text,")if there was a syntax error in the input."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\t*Message*"},
             {sep,
              [{text,
                "<is something which may be converted into a string by calling"}],
              0,false},
             {text,
              [30,42,77,111,100,117,108,101,58,102,111,114,109,97,116,95,101,
               114,114,111,114,40,77,101,115,115,97,103,101,41,42]},
             {sep,
              [{text,
                [16,97,110,100,32,112,114,105,110,116,101,100,32,119,105,116,
                 104]}],
              0,false},
             {text,"\r*io:format/3*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [286,66,121,32,100,101,102,97,117,108,116,44,32,116,
                          104,101,32,112,97,114,115,101,114,32,116,104,97,116,
                          32,119,97,115,32,103,101,110,101,114,97,116,101,100,
                          32,119,105,108,108,32,110,111,116,32,112,114,105,
                          110,116,32,111,117,116,32,101,114,114,111,114,32,
                          109,101,115,115,97,103,101,115,32,116,111,32,116,
                          104,101,32,115,99,114,101,101,110,46,32,84,104,101,
                          32,117,115,101,114,32,119,105,108,108,32,104,97,118,
                          101,32,116,111,32,100,111,32,116,104,105,115,32,101,
                          105,116,104,101,114,32,98,121,32,112,114,105,110,
                          116,105,110,103,32,116,104,101,32,114,101,116,117,
                          114,110,101,100,32,101,114,114,111,114,32,109,101,
                          115,115,97,103,101,115,44,32,111,114,32,98,121,32,
                          105,110,115,101,114,116,105,110,103,32,116,101,115,
                          116,115,32,97,110,100,32,112,114,105,110,116,32,105,
                          110,115,116,114,117,99,116,105,111,110,115,32,105,
                          110,32,116,104,101,32,69,114,108,97,110,103,32,99,
                          111,100,101,32,97,115,115,111,99,105,97,116,101,100,
                          32,119,105,116,104,32,116,104,101,32,115,121,110,
                          116,97,120,32,114,117,108,101,115,32,111,102,32,116,
                          104,101,32,103,114,97,109,109,97,114,32,102,105,108,
                          101,46]}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "rIt is also possible to make the parser ask for more input tokens when needed if the following call format is used:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "^\nmyparser:parse_and_scan({Function, Args})\nmyparser:parse_and_scan({Mod, Tokenizer, Args})    "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rThe tokenizer"}],0,false},
             {text,"\n*Function*"},
             {sep,
              [{text,
                [26,105,115,32,101,105,116,104,101,114,32,97,32,102,117,110,
                 32,111,114,32,97,32,116,117,112,108,101]}],
              0,false},
             {text,
              [18,42,123,77,111,100,44,32,84,111,107,101,110,105,122,101,114,
               125,42]},
             {sep,[{text,"\n. The call"}],0,false},
             {text,
              [23,42,97,112,112,108,121,40,70,117,110,99,116,105,111,110,44,
               32,65,114,103,115,41,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,
              [31,42,97,112,112,108,121,40,123,77,111,100,44,32,84,111,107,
               101,110,105,122,101,114,125,44,32,65,114,103,115,41,42]},
             {sep,
              [{text,
                "vis executed whenever a new token is needed. This, for example, makes it possible to parse from a file, token by token."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "TThe tokenizer used above has to be implemented so as to return one of the following:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "M\n{ok, Tokens, Endline}\n{eof, Endline}\n{error, Error_description, Endline}    "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "=This conforms to the format used by the scanner in the Erlang"}],
              0,false},
             {text,[4,42,105,111,42]},
             {sep,
              [{text,
                [15,108,105,98,114,97,114,121,32,109,111,100,117,108,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,102]}],0,false},
             {text,
              [16,42,123,101,111,102,44,32,69,110,100,108,105,110,101,125,42]},
             {sep,[{text,"$is returned immediately, the call to"}],0,false},
             {text,
              [18,42,112,97,114,115,101,95,97,110,100,95,115,99,97,110,47,49,
               42]},
             {sep,[{text,[7,114,101,116,117,114,110,115]}],0,false},
             {text,"\v*{ok, eof}*"},
             {sep,[{text,[4,46,32,73,102]}],0,false},
             {text,
              [16,42,123,101,111,102,44,32,69,110,100,108,105,110,101,125,42]},
             {sep,
              [{text,"3is returned before the parser expects end of input,"}],
              0,false},
             {text,
              [18,42,112,97,114,115,101,95,97,110,100,95,115,99,97,110,47,49,
               42]},
             {sep,
              [{text,
                "?will, of course, return an error message (see above). Otherwise"}],
              0,false},
             {text,[14,42,123,111,107,44,32,82,101,115,117,108,116,125,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[16,35,35,32,77,111,114,101,32,69,120,97,109,112,108,101,115]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "h1. A grammar for parsing infix arithmetic expressions into prefix notation, without operator precedence:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "Õ\nNonterminals E T F.\nTerminals '+' '*' '(' ')' number.\nRootsymbol E.\nE -> E '+' T: {'$2', '$1', '$3'}.\nE -> T : '$1'.\nT -> T '*' F: {'$2', '$1', '$3'}.\nT -> F : '$1'.\nF -> '(' E ')' : '$2'.\nF -> number : '$1'.    "}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"52. The same with operator precedence becomes simpler:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "Ñ\nNonterminals E.\nTerminals '+' '*' '(' ')' number.\nRootsymbol E.\nLeft 100 '+'.\nLeft 200 '*'.\nE -> E '+' E : {'$2', '$1', '$3'}.\nE -> E '*' E : {'$2', '$1', '$3'}.\nE -> '(' E ')' : '$2'.\nE -> number : '$1'.    "}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," 3. An overloaded minus operator:"}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "»\nNonterminals E uminus.\nTerminals '*' '-' number.\nRootsymbol E.\n\nLeft 100 '-'.\nLeft 200 '*'.\nUnary 300 uminus.\n\nE -> E '-' E.\nE -> E '*' E.\nE -> uminus.\nE -> number.\n\numinus -> '-' E.    "}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "M4. The Yecc grammar that is used for parsing grammar files, including itself:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [1273,10,78,111,110,116,101,114,109,105,110,97,108,115,10,103,
              114,97,109,109,97,114,32,100,101,99,108,97,114,97,116,105,111,
              110,32,114,117,108,101,32,104,101,97,100,32,115,121,109,98,111,
              108,32,115,121,109,98,111,108,115,32,97,116,116,97,99,104,101,
              100,95,99,111,100,101,10,116,111,107,101,110,32,116,111,107,101,
              110,115,46,10,84,101,114,109,105,110,97,108,115,10,97,116,111,
              109,32,102,108,111,97,116,32,105,110,116,101,103,101,114,32,114,
              101,115,101,114,118,101,100,95,115,121,109,98,111,108,32,114,
              101,115,101,114,118,101,100,95,119,111,114,100,32,115,116,114,
              105,110,103,32,99,104,97,114,32,118,97,114,10,39,45,62,39,32,39,
              58,39,32,100,111,116,46,10,82,111,111,116,115,121,109,98,111,
              108,32,103,114,97,109,109,97,114,46,10,69,110,100,115,121,109,
              98,111,108,32,39,36,101,110,100,39,46,10,103,114,97,109,109,97,
              114,32,45,62,32,100,101,99,108,97,114,97,116,105,111,110,32,58,
              32,39,36,49,39,46,10,103,114,97,109,109,97,114,32,45,62,32,114,
              117,108,101,32,58,32,39,36,49,39,46,10,100,101,99,108,97,114,97,
              116,105,111,110,32,45,62,32,115,121,109,98,111,108,32,115,121,
              109,98,111,108,115,32,100,111,116,58,32,123,39,36,49,39,44,32,
              39,36,50,39,125,46,10,114,117,108,101,32,45,62,32,104,101,97,
              100,32,39,45,62,39,32,115,121,109,98,111,108,115,32,97,116,116,
              97,99,104,101,100,95,99,111,100,101,32,100,111,116,58,32,123,
              114,117,108,101,44,32,91,39,36,49,39,32,124,32,39,36,51,39,93,
              44,32,10,32,32,32,32,32,32,32,32,39,36,52,39,125,46,10,104,101,
              97,100,32,45,62,32,115,121,109,98,111,108,32,58,32,39,36,49,39,
              46,10,115,121,109,98,111,108,115,32,45,62,32,115,121,109,98,111,
              108,32,58,32,91,39,36,49,39,93,46,10,115,121,109,98,111,108,115,
              32,45,62,32,115,121,109,98,111,108,32,115,121,109,98,111,108,
              115,32,58,32,91,39,36,49,39,32,124,32,39,36,50,39,93,46,10,97,
              116,116,97,99,104,101,100,95,99,111,100,101,32,45,62,32,39,58,
              39,32,116,111,107,101,110,115,32,58,32,123,101,114,108,97,110,
              103,95,99,111,100,101,44,32,39,36,50,39,125,46,10,97,116,116,97,
              99,104,101,100,95,99,111,100,101,32,45,62,32,39,36,101,109,112,
              116,121,39,32,58,32,123,101,114,108,97,110,103,95,99,111,100,
              101,44,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              91,123,97,116,111,109,44,32,48,44,32,39,36,117,110,100,101,102,
              105,110,101,100,39,125,93,125,46,10,116,111,107,101,110,115,32,
              45,62,32,116,111,107,101,110,32,58,32,91,39,36,49,39,93,46,10,
              116,111,107,101,110,115,32,45,62,32,116,111,107,101,110,32,116,
              111,107,101,110,115,32,58,32,91,39,36,49,39,32,124,32,39,36,50,
              39,93,46,10,115,121,109,98,111,108,32,45,62,32,118,97,114,32,58,
              32,118,97,108,117,101,95,111,102,40,39,36,49,39,41,46,10,115,
              121,109,98,111,108,32,45,62,32,97,116,111,109,32,58,32,118,97,
              108,117,101,95,111,102,40,39,36,49,39,41,46,10,115,121,109,98,
              111,108,32,45,62,32,105,110,116,101,103,101,114,32,58,32,118,97,
              108,117,101,95,111,102,40,39,36,49,39,41,46,10,115,121,109,98,
              111,108,32,45,62,32,114,101,115,101,114,118,101,100,95,119,111,
              114,100,32,58,32,118,97,108,117,101,95,111,102,40,39,36,49,39,
              41,46,10,116,111,107,101,110,32,45,62,32,118,97,114,32,58,32,39,
              36,49,39,46,10,116,111,107,101,110,32,45,62,32,97,116,111,109,
              32,58,32,39,36,49,39,46,10,116,111,107,101,110,32,45,62,32,102,
              108,111,97,116,32,58,32,39,36,49,39,46,10,116,111,107,101,110,
              32,45,62,32,105,110,116,101,103,101,114,32,58,32,39,36,49,39,46,
              10,116,111,107,101,110,32,45,62,32,115,116,114,105,110,103,32,
              58,32,39,36,49,39,46,10,116,111,107,101,110,32,45,62,32,99,104,
              97,114,32,58,32,39,36,49,39,46,10,116,111,107,101,110,32,45,62,
              32,114,101,115,101,114,118,101,100,95,115,121,109,98,111,108,32,
              58,32,123,118,97,108,117,101,95,111,102,40,39,36,49,39,41,44,32,
              108,105,110,101,95,111,102,40,39,36,49,39,41,125,46,10,116,111,
              107,101,110,32,45,62,32,114,101,115,101,114,118,101,100,95,119,
              111,114,100,32,58,32,123,118,97,108,117,101,95,111,102,40,39,36,
              49,39,41,44,32,108,105,110,101,95,111,102,40,39,36,49,39,41,125,
              46,10,116,111,107,101,110,32,45,62,32,39,45,62,39,32,58,32,123,
              39,45,62,39,44,32,108,105,110,101,95,111,102,40,39,36,49,39,41,
              125,46,10,116,111,107,101,110,32,45,62,32,39,58,39,32,58,32,123,
              39,58,39,44,32,108,105,110,101,95,111,102,40,39,36,49,39,41,125,
              46,10,69,114,108,97,110,103,32,99,111,100,101,46,10,118,97,108,
              117,101,95,111,102,40,84,111,107,101,110,41,32,45,62,10,32,32,
              32,32,101,108,101,109,101,110,116,40,51,44,32,84,111,107,101,
              110,41,46,10,108,105,110,101,95,111,102,40,84,111,107,101,110,
              41,32,45,62,10,32,32,32,32,101,108,101,109,101,110,116,40,50,44,
              32,84,111,107,101,110,41,46,32,32,32,32]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,[{text,"\vThe symbols"}],0,false},
                       {text,[6,42,39,45,62,39,42]},
                       {sep,[{text,[5,44,32,97,110,100]}],0,false},
                       {text,[5,42,39,58,39,42]},
                       {sep,
                        [{text,
                          [135,104,97,118,101,32,116,111,32,98,101,32,116,114,
                           101,97,116,101,100,32,105,110,32,97,32,115,112,101,
                           99,105,97,108,32,119,97,121,44,32,97,115,32,116,
                           104,101,121,32,97,114,101,32,109,101,116,97,32,115,
                           121,109,98,111,108,115,32,111,102,32,116,104,101,
                           32,103,114,97,109,109,97,114,32,110,111,116,97,116,
                           105,111,110,44,32,97,115,32,119,101,108,108,32,97,
                           115,32,116,101,114,109,105,110,97,108,32,115,121,
                           109,98,111,108,115,32,111,102,32,116,104,101,32,89,
                           101,99,99,32,103,114,97,109,109,97,114,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\v5. The file"}],0,false},
            {text,[15,42,101,114,108,95,112,97,114,115,101,46,121,114,108,42]},
            {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
            {text,
             [16,42,108,105,98,47,115,116,100,108,105,98,47,115,114,99,42]},
            {sep,
             [{text,"*directory contains the grammar for Erlang."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "ÚSyntactic tests are used in the code associated with some rules, and an error is thrown (and caught by the generated parser to produce an error message) when a test fails. The same effect can be achieved with a call to"}],
                        0,false},
                       {text,"**return_error(Error_line, Message_string)*"},
                       {sep,
                        [{text,
                          [25,44,32,119,104,105,99,104,32,105,115,32,100,101,
                           102,105,110,101,100,32,105,110,32,116,104,101]}],
                        0,false},
                       {text,"\r*yeccpre.hrl*"},
                       {sep,
                        [{text,
                          [20,100,101,102,97,117,108,116,32,104,101,97,100,
                           101,114,32,102,105,108,101,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\b## Files"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,[{text,"'\nlib/parsetools/include/yeccpre.hrl    "}],0,true}},
        {text,[3,96,96,96]}},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## See Also"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "CAho & Johnson: 'LR Parsing', ACM Computing Surveys, vol. 6:2, 1974."}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
