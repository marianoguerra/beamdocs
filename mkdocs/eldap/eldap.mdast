{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[7,35,32,101,108,100,97,112]},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[7,35,32,101,108,100,97,112]},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{sep,[{sep,[{text,"\vLDAP Client"}],0,false}],0,true},null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "VThis module provides a client api to the Lightweight Directory Access Protocol (LDAP)."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{sep,[{sep,[{text,"\vReferences:"}],0,false}],0,true},null},
            null}},
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [19,82,70,67,32,52,53,49,48,32,45,32,82,70,67,32,52,53,49,
                 57]}],
              0,false}],
            0,false},
           {sep,[{text,[1,42]},{sep,[{text,"\bRFC 2830"}],0,false}],0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,"&The above publications can be found at"}],
                  0,false},
                 {text,"\e[IETF](http://www.ietf.org)"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## DATA TYPES"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "=Type definitions that are used more than once in this module:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {text,[4,60,100,108,62]},
      {nest,4,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,"\bhandle()"}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   [17,67,111,110,110,101,99,116,105,111,110,
                                    32,104,97,110,100,108,101]}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,[{text,"\rattribute() ="}],0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,
                                 "${Type = string(), Values=[string()]}"}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,"\vmodify_op()"}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,[{text,[3,83,101,101]}],0,false},
                              {text,"\tmod_add/2"},
                              {sep,[{text,[1,44]}],0,false},
                              {text,"\fmod_delete/2"},
                              {sep,[{text,[1,44]}],0,false},
                              {text,"\rmod_replace/2"}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[7,115,99,111,112,101,40,41]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,[{text,[3,83,101,101]}],0,false},
                            {text,"\fbaseObject/0"},
                            {sep,[{text,[1,44]}],0,false},
                            {text,"\rsingleLevel/0"},
                            {sep,[{text,[1,44]}],0,false},
                            {text,
                             [14,119,104,111,108,101,83,117,98,116,114,101,
                              101,47,48]}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,"\rdereference()"}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,[{text,[3,83,101,101]}],0,false},
                          {text,
                           [19,110,101,118,101,114,68,101,114,101,102,65,108,
                            105,97,115,101,115,47,48]},
                          {sep,[{text,[1,44]}],0,false},
                          {text,
                           [18,100,101,114,101,102,73,110,83,101,97,114,99,
                            104,105,110,103,47,48]},
                          {sep,[{text,[1,44]}],0,false},
                          {text,
                           [21,100,101,114,101,102,70,105,110,100,105,110,103,
                            66,97,115,101,79,98,106,47,48]},
                          {sep,[{text,[1,44]}],0,false},
                          {text,"\rderefAlways/0"}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\bfilter()"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,[{text,[3,83,101,101]}],0,false},
                        {text,"\tpresent/1"},
                        {sep,[{text,[1,44]}],0,false},
                        {text,"\fsubstrings/2"},
                        {sep,[{text,[1,44]}],0,false},
                        {text,
                         [15,101,113,117,97,108,105,116,121,77,97,116,99,104,
                          47,50]},
                        {sep,[{text,[1,44]}],0,false},
                        {text,
                         [16,103,114,101,97,116,101,114,79,114,69,113,117,97,
                          108,47,50]},
                        {sep,[{text,[1,44]}],0,false},
                        {text,"\rlessOrEqual/2"},
                        {sep,[{text,[1,44]}],0,false},
                        {text,"\rapproxMatch/2"},
                        {sep,[{text,[1,44]}],0,false},
                        {text,
                         [17,101,120,116,101,110,115,105,98,108,101,77,97,116,
                          99,104,47,50]},
                        {sep,[{text,[1,44]}],0,false},
                        {text,[7,39,97,110,100,39,47,49]},
                        {sep,[{text,[1,44]}],0,false},
                        {text,[6,39,111,114,39,47,49]},
                        {sep,[{text,[1,44]}],0,false},
                        {text,[7,39,110,111,116,39,47,49]}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,
                   [16,114,101,116,117,114,110,95,118,97,108,117,101,40,41,32,
                    61]}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "1ok | {ok, {referral,referrals()}} | {error,Error}"}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,116,62]},
              {sep,[{text,"\rreferrals() ="}],0,false},
              {text,[5,60,47,100,116,62]}],
             0,true},
            null},
           null}}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{text,[4,60,100,100,62]},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [20,91,65,100,100,114,101,115,115,32,61,32,115,116,114,
                      105,110,103,40,41,93]},
                    {sep,
                     [{text,
                       [15,84,104,101,32,99,111,110,116,101,110,116,115,32,
                        111,102]}],
                     0,false},
                    {text,[7,65,100,100,114,101,115,115]},
                    {sep,
                     [{text,
                       [20,105,115,32,115,101,114,118,101,114,32,100,101,112,
                        101,110,100,101,110,116,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {text,[5,60,47,100,100,62]}],
            0,true},
           null},
          null}}}}},
     {text,[5,60,47,100,108,62]}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"1## open([Host]) -> {ok, Handle} | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Open a connection to an LDAP server."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [17,72,97,110,100,108,101,32,61,32,104,97,110,100,108,101,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,")Setup a connection to an LDAP server, the"}],
             0,false},
            {text,[6,42,72,79,83,84,42]},
            {sep,
             [{text,
               [22,39,115,32,97,114,101,32,116,114,105,101,100,32,105,110,32,
                111,114,100,101,114,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,";## open([Host], [Option]) -> {ok, Handle} | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Open a connection to an LDAP server."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,72,97,110,100,108,101,32,61,32,104,97,110,100,108,101,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [128,79,112,116,105,111,110,32,61,32,123,112,111,114,116,44,32,105,
          110,116,101,103,101,114,40,41,125,32,124,32,123,108,111,103,44,32,
          102,117,110,99,116,105,111,110,40,41,125,32,124,32,123,116,105,109,
          101,111,117,116,44,32,105,110,116,101,103,101,114,40,41,125,32,124,
          32,123,115,115,108,44,32,98,111,111,108,101,97,110,40,41,125,32,124,
          32,123,115,115,108,111,112,116,115,44,32,108,105,115,116,40,41,125,
          32,124,32,123,116,99,112,111,112,116,115,44,32,108,105,115,116,40,
          41,125]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,")Setup a connection to an LDAP server, the"}],
             0,false},
            {text,[6,42,72,79,83,84,42]},
            {sep,
             [{text,
               [22,39,115,32,97,114,101,32,116,114,105,101,100,32,105,110,32,
                111,114,100,101,114,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"'The log function takes three arguments,"}],0,false},
            {text,"+*fun(Level, FormatString, [FormatArg]) end*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "OTimeout set the maximum time in milliseconds that each server request may take."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"*All TCP socket options are accepted except"}],
             0,false},
            {text,"\b*active*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\b*binary*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\t*deliver*"},
            {sep,[{text,[1,44]}],0,false},
            {text,[6,42,108,105,115,116,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,[6,42,109,111,100,101,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\b*packet*"}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,99,108,111,115,101,40,72,97,110,100,108,101,41,32,45,62,
        32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [24,83,104,117,116,100,111,119,110,32,116,104,101,32,99,111,110,
            110,101,99,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [17,72,97,110,100,108,101,32,61,32,104,97,110,100,108,101,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [129,83,104,117,116,100,111,119,110,32,116,104,101,32,99,111,
                110,110,101,99,116,105,111,110,32,97,102,116,101,114,32,115,
                101,110,100,105,110,103,32,97,110,32,117,110,98,105,110,100,
                82,101,113,117,101,115,116,32,116,111,32,116,104,101,32,115,
                101,114,118,101,114,46,32,73,102,32,116,104,101,32,99,111,110,
                110,101,99,116,105,111,110,32,105,115,32,116,108,115,32,116,
                104,101,32,99,111,110,110,101,99,116,105,111,110,32,119,105,
                108,108,32,98,101,32,99,108,111,115,101,100,32,119,105,116,
                104]}],
             0,false},
            {text,"\r*ssl:close/1*"},
            {sep,
             [{text,
               [16,44,32,111,116,104,101,114,119,105,115,101,32,119,105,116,
                104]}],
             0,false},
            {text,
             [17,42,103,101,110,95,116,99,112,58,99,108,111,115,101,47,49,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"/## start_tls(Handle, Options) -> return_value()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,85,112,103,114,97,100,101,32,97,32,99,111,110,110,101,99,116,
            105,111,110,32,116,111,32,84,76,83,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Same as start_tls(Handle, Options, infinity)"}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"8## start_tls(Handle, Options, Timeout) -> return_value()"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,85,112,103,114,97,100,101,32,97,32,99,111,110,110,101,99,116,
            105,111,110,32,116,111,32,84,76,83,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,72,97,110,100,108,101,32,61,32,104,97,110,100,108,101,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},{sep,[{text,"\eOptions = ssl:ssl_options()"}],0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,[{text,"'Timeout = infinity | positive_integer()"}],0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"&Upgrade the connection associated with"}],0,false},
            {text,"\b*Handle*"},
            {sep,[{text," to a tls connection if possible."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             " The upgrade is done in two phases: first the server is asked for permission to upgrade. Second, if the request is acknowledged, the upgrade to tls is performed."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "sError responses from phase one will not affect the current encryption state of the connection. Those responses are:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,
                   [19,116,108,115,95,97,108,114,101,97,100,121,95,115,116,97,
                    114,116,101,100]}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {text,
                 "DThe connection is already encrypted. The connection is not affected."},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [29,123,114,101,115,112,111,110,115,101,44,82,101,115,112,
                   111,110,115,101,70,114,111,109,83,101,114,118,101,114,
                   125]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [{sep,
                 [{text,"/The upgrade was refused by the LDAP server. The"}],
                 0,false},
                {text,
                 [18,82,101,115,112,111,110,115,101,70,114,111,109,83,101,114,
                  118,101,114]},
                {sep,
                 [{text,
                   [139,105,115,32,97,110,32,97,116,111,109,32,100,101,108,
                    105,118,101,114,101,100,32,98,121,116,32,116,104,101,32,
                    76,68,65,80,32,115,101,114,118,101,114,32,101,120,112,108,
                    97,105,110,101,100,32,105,110,32,115,101,99,116,105,111,
                    110,32,50,46,51,32,111,102,32,114,102,99,32,50,56,51,48,
                    46,32,84,104,101,32,99,111,110,110,101,99,116,105,111,110,
                    32,105,115,32,110,111,116,32,97,102,102,101,99,116,101,
                    100,44,32,115,111,32,105,116,32,105,115,32,115,116,105,
                    108,108,32,117,110,45,101,110,99,114,121,112,116,101,100,
                    46]}],
                 0,false}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             ";Errors in the second phase will however end the connection:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,116,62]},
              {sep,[{text,[5,69,114,114,111,114]}],0,false},
              {text,[5,60,47,100,116,62]}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {text,"&Any error responded from ssl:connect/3"},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\t*Timeout*"},
            {sep,
             [{text,
               "Fparameter is for the actual tls upgrade (phase 2) while the timeout in"}],
             0,false},
            {text,
             [23,91,101,108,100,97,112,58,111,112,101,110,47,50,93,40,35,111,
              112,101,110,47,50,41]},
            {sep,
             [{text,
               "<is used for the initial negotiation about upgrade (phase 1)."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"6## simple_bind(Handle, Dn, Password) -> return_value()"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,65,117,116,104,101,110,116,105,99,97,116,101,32,116,104,101,32,
            99,111,110,110,101,99,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,72,97,110,100,108,101,32,61,32,104,97,110,100,108,101,40,41]}],
        0,false}],
      0,false},
     {sep,[{text,[1,42]},{sep,[{text,"\rDn = string()"}],0,false}],0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,80,97,115,115,119,111,114,100,32,61,32,115,116,114,105,110,103,
          40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "8Authenticate the connection using simple authentication."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"1## add(Handle, Dn, [Attribute]) -> return_value()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{sep,[{sep,[{text,"\rAdd an entry."}],0,false}],0,true},null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,72,97,110,100,108,101,32,61,32,104,97,110,100,108,101,40,41]}],
        0,false}],
      0,false},
     {sep,[{text,[1,42]},{sep,[{text,"\rDn = string()"}],0,false}],0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [23,65,116,116,114,105,98,117,116,101,32,61,32,97,116,116,114,105,98,
          117,116,101,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"'Add an entry. The entry must not exist."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "ø\n  add(Handle,\n      \"cn=Bill Valentine, ou=people, o=Example Org, dc=example, dc=com\",\n       [{\"objectclass\", [\"person\"]},\n        {\"cn\", [\"Bill Valentine\"]},\n        {\"sn\", [\"Valentine\"]},\n        {\"telephoneNumber\", [\"545 555 00\"]}]\n     )\n\t"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"'## delete(Handle, Dn) -> return_value()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [16,68,101,108,101,116,101,32,97,110,32,101,110,116,114,121,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,[{text,[1,42]},{sep,[{text,"\rDn = string()"}],0,false}],0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [16,68,101,108,101,116,101,32,97,110,32,101,110,116,114,121,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "X\n  delete(Handle, \"cn=Bill Valentine, ou=people, o=Example Org, dc=example, dc=com\")\n\t"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"(## mod_add(Type, [Value]) -> modify_op()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text," Create a modification operation."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,84,121,112,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,86,97,108,117,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"%Create an add modification operation."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"+## mod_delete(Type, [Value]) -> modify_op()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text," Create a modification operation."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,84,121,112,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,86,97,108,117,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"'Create a delete modification operation."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,",## mod_replace(Type, [Value]) -> modify_op()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text," Create a modification operation."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,84,121,112,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,86,97,108,117,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"(Create a replace modification operation."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"3## modify(Handle, Dn, [ModifyOp]) -> return_value()"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [16,77,111,100,105,102,121,32,97,110,32,101,110,116,114,121,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,[{text,[1,42]},{sep,[{text,"\rDn = string()"}],0,false}],0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [22,77,111,100,105,102,121,79,112,32,61,32,109,111,100,105,102,121,
          95,111,112,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [16,77,111,100,105,102,121,32,97,110,32,101,110,116,114,121,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "Ð\n  modify(Handle, \"cn=Bill Valentine, ou=people, o=Example Org, dc=example, dc=com\",\n         [eldap:mod_replace(\"telephoneNumber\", [\"555 555 00\"]),\n\t  eldap:mod_add(\"description\", [\"LDAP Hacker\"]) ])\n\t"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "M## modify_password(Handle, Dn, NewPasswd) -> return_value() | {ok, GenPasswd}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [30,77,111,100,105,102,121,32,116,104,101,32,112,97,115,115,119,
            111,114,100,32,111,102,32,97,32,117,115,101,114,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,[{text,[1,42]},{sep,[{text,"\rDn = string()"}],0,false}],0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [20,78,101,119,80,97,115,115,119,100,32,61,32,115,116,114,105,110,
          103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\"Modify the password of a user. See"}],0,false},
            {text,"'[modify_password/4](#modify_password/4)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "X## modify_password(Handle, Dn, NewPasswd, OldPasswd) -> return_value() | {ok, GenPasswd}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [30,77,111,100,105,102,121,32,116,104,101,32,112,97,115,115,119,
            111,114,100,32,111,102,32,97,32,117,115,101,114,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,[{text,[1,42]},{sep,[{text,"\rDn = string()"}],0,false}],0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [20,78,101,119,80,97,115,115,119,100,32,61,32,115,116,114,105,110,
            103,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [20,79,108,100,80,97,115,115,119,100,32,61,32,115,116,114,105,110,
           103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [20,71,101,110,80,97,115,115,119,100,32,61,32,115,116,114,105,110,
          103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,77,111,100,105,102,121,32,116,104,101,32,112,97,115,115,119,
              111,114,100,32,111,102,32,97,32,117,115,101,114,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[4,42,68,110,42]},
           {sep,
            [{text,
              "]. The user to modify. Should be \"\" if the modify request is for the user of the LDAP session."}],
            0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\v*NewPasswd*"},
           {sep,
            [{text,
              "s. The new password to set. Should be \"\" if the server is to generate the password. In this case, the result will be"}],
            0,false},
           {text,
            [17,42,123,111,107,44,32,71,101,110,80,97,115,115,119,100,125,42]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"\v*OldPasswd*"},
          {sep,
           [{text,
             "_. Sometimes required by server policy for a user to change their password. If not required, use"}],
           0,false},
          {text,"'[modify_password/3](#modify_password/3)"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "J## modify_dn(Handle, Dn, NewRDN, DeleteOldRDN, NewSupDN) -> return_value()"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [26,77,111,100,105,102,121,32,116,104,101,32,68,78,32,111,102,32,
            97,110,32,101,110,116,114,121,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,[{text,[1,42]},{sep,[{text,"\rDn = string()"}],0,false}],0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,78,101,119,82,68,78,32,61,32,115,116,114,105,110,103,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,68,101,108,101,116,101,79,108,100,82,68,78,32,61,32,98,111,111,
           108,101,97,110,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,78,101,119,83,117,112,68,78,32,61,32,115,116,114,105,110,103,40,
          41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [26,77,111,100,105,102,121,32,116,104,101,32,68,78,32,111,102,
                32,97,110,32,101,110,116,114,121,46]}],
             0,false},
            {text,[14,42,68,101,108,101,116,101,79,108,100,82,68,78,42]},
            {sep,
             [{text,
               "findicates whether the current RDN should be removed from the attribute list after the after operation."}],
             0,false},
            {text,"\n*NewSupDN*"},
            {sep,
             [{text,
               "\\is the new parent that the RDN shall be moved to. If the old parent should remain as parent,"}],
             0,false},
            {text,"\n*NewSupDN*"},
            {sep,[{text,"\fshall be \"\"."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [136,10,32,32,109,111,100,105,102,121,95,100,110,40,72,97,110,
              100,108,101,44,32,34,99,110,61,66,105,108,108,32,86,97,108,101,
              110,116,105,110,101,44,32,111,117,61,112,101,111,112,108,101,44,
              32,111,61,69,120,97,109,112,108,101,32,79,114,103,44,32,100,99,
              61,101,120,97,109,112,108,101,44,32,100,99,61,99,111,109,32,34,
              44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,99,110,61,66,105,
              108,108,32,74,114,32,86,97,108,101,110,116,105,110,101,34,44,32,
              116,114,117,101,44,32,34,34,41,10,9]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "q## search(Handle, SearchOptions) -> {ok, #eldap_search_result{}} | {ok, {referral,referrals()}} | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,83,101,97,114,99,104,32,116,104,101,32,68,105,114,101,99,116,
            111,114,121]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,"0SearchOptions = #eldap_search{} | [SearchOption]"}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         "®SearchOption = {base, string()} | {filter, filter()} | {scope, scope()} | {attributes, [string()]} | {deref, dereference()} | | {types_only, boolean()} | {timeout, integer()}"}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [128,83,101,97,114,99,104,32,116,104,101,32,100,105,114,101,99,
                116,111,114,121,32,119,105,116,104,32,116,104,101,32,115,117,
                112,112,108,105,101,100,32,116,104,101,32,83,101,97,114,99,
                104,79,112,116,105,111,110,115,46,32,84,104,101,32,98,97,115,
                101,32,97,110,100,32,102,105,108,116,101,114,32,111,112,116,
                105,111,110,115,32,109,117,115,116,32,98,101,32,115,117,112,
                112,108,105,101,100,46,32,68,101,102,97,117,108,116,32,118,97,
                108,117,101,115,58,32,115,99,111,112,101,32,105,115]}],
             0,false},
            {text,
             [16,42,119,104,111,108,101,83,117,98,116,114,101,101,40,41,42]},
            {sep,[{text,"\n, deref is"}],0,false},
            {text,[15,42,100,101,114,101,102,65,108,119,97,121,115,40,41,42]},
            {sep,
             [{text,
               [15,44,32,116,121,112,101,115,95,111,110,108,121,32,105,115]}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,
             [{text,
               [14,97,110,100,32,116,105,109,101,111,117,116,32,105,115]}],
             0,false},
            {text,[3,42,48,42]},
            {sep,
             [{text,
               [19,40,109,101,97,110,105,110,103,32,105,110,102,105,110,105,
                116,121,41,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [144,10,32,32,70,105,108,116,101,114,32,61,32,101,108,100,97,112,
              58,115,117,98,115,116,114,105,110,103,115,40,34,99,110,34,44,32,
              91,123,97,110,121,44,34,86,34,125,93,41,44,10,32,32,115,101,97,
              114,99,104,40,72,97,110,100,108,101,44,32,91,123,98,97,115,101,
              44,32,34,100,99,61,101,120,97,109,112,108,101,44,32,100,99,61,
              99,111,109,34,125,44,32,123,102,105,108,116,101,114,44,32,70,
              105,108,116,101,114,125,44,32,123,97,116,116,114,105,98,117,116,
              101,115,44,32,91,34,99,110,34,93,125,93,41,44,10,9]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\t*timeout*"},
            {sep,[{text,"\roption in the"}],0,false},
            {text,[15,42,83,101,97,114,99,104,79,112,116,105,111,110,115,42]},
            {sep,
             [{text,",is for the ldap server, while the timeout in"}],
             0,false},
            {text,
             [23,91,101,108,100,97,112,58,111,112,101,110,47,50,93,40,35,111,
              112,101,110,47,50,41]},
            {sep,
             [{text,
               "<is used for each individual request in the search operation."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,98,97,115,101,79,98,106,101,99,116,40,41,32,45,62,32,115,
        99,111,112,101,40,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,67,114,101,97,116,101,32,115,101,97,114,99,104,32,115,99,111,
            112,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [23,83,101,97,114,99,104,32,98,97,115,101,111,98,106,101,99,116,
              32,111,110,108,121,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## singleLevel() -> scope()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,67,114,101,97,116,101,32,115,101,97,114,99,104,32,115,99,111,
            112,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"5Search the specified level only, i.e. do not recurse."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,119,104,111,108,101,83,117,98,116,114,101,101,40,41,32,45,
        62,32,115,99,111,112,101,40,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,67,114,101,97,116,101,32,115,101,97,114,99,104,32,115,99,111,
            112,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [26,83,101,97,114,99,104,32,116,104,101,32,101,110,116,105,114,
              101,32,115,117,98,116,114,101,101,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"'## neverDerefAliases() -> dereference()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [21,67,114,101,97,116,101,32,115,101,97,114,99,104,32,111,112,116,
            105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"3Never derefrence aliases, treat aliases as entries."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"!## derefAlways() -> dereference()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [21,67,114,101,97,116,101,32,115,101,97,114,99,104,32,111,112,116,
            105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [26,65,108,119,97,121,115,32,100,101,114,101,102,114,101,110,99,
              101,32,97,108,105,97,115,101,115,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"&## derefInSearching() -> dereference()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [21,67,114,101,97,116,101,32,115,101,97,114,99,104,32,111,112,116,
            105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"'Derefrence aliases only when searching."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,")## derefFindingBaseObj() -> dereference()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [21,67,114,101,97,116,101,32,115,101,97,114,99,104,32,111,112,116,
            105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Derefrence aliases only in finding the base."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,112,114,101,115,101,110,116,40,84,121,112,101,41,32,45,62,
        32,102,105,108,116,101,114,40,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,115,101,97,114,99,104,32,102,105,108,
            116,101,114,32,111,112,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,[15,84,121,112,101,32,61,32,115,116,114,105,110,103,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "9Create a filter which filters on attribute type presence."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,",## substrings(Type, [SubString]) -> filter()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,115,101,97,114,99,104,32,102,105,108,
            116,101,114,32,111,112,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,84,121,112,101,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,[{text,"\"SubString = {StringPart, string()}"}],0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,[{text,"\"StringPart = initial | any | final"}],0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Create a filter which filters on substrings."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,")## equalityMatch(Type, Value) -> filter()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,115,101,97,114,99,104,32,102,105,108,
            116,101,114,32,111,112,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,84,121,112,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,86,97,108,117,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [25,67,114,101,97,116,101,32,97,32,101,113,117,97,108,105,116,
              121,32,102,105,108,116,101,114,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"*## greaterOrEqual(Type, Value) -> filter()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,115,101,97,114,99,104,32,102,105,108,
            116,101,114,32,111,112,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,84,121,112,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,86,97,108,117,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"!Create a greater or equal filter."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"'## lessOrEqual(Type, Value) -> filter()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,115,101,97,114,99,104,32,102,105,108,
            116,101,114,32,111,112,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,84,121,112,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,86,97,108,117,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,67,114,101,97,116,101,32,97,32,108,101,115,115,32,111,114,32,
              101,113,117,97,108,32,102,105,108,116,101,114,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"'## approxMatch(Type, Value) -> filter()"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,115,101,97,114,99,104,32,102,105,108,
            116,101,114,32,111,112,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,84,121,112,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,86,97,108,117,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$Create a approximation match filter."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"9## extensibleMatch(MatchValue, OptionalAttrs) -> filter()"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,115,101,97,114,99,104,32,102,105,108,
            116,101,114,32,111,112,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [21,77,97,116,99,104,86,97,108,117,101,32,61,32,115,116,114,105,110,
           103,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [22,79,112,116,105,111,110,97,108,65,116,116,114,115,32,61,32,91,65,
           116,116,114,93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         "KAttr = {matchingRule,string()} | {type,string()} | {dnAttributes,boolean()}"}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"0Creates an extensible match filter. For example,"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "W\n  eldap:extensibleMatch(\"Bar\", [{type,\"sn\"}, {matchingRule,\"caseExactMatch\"}]))\n      "}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"!creates a filter which performs a"}],0,false},
            {text,[16,42,99,97,115,101,69,120,97,99,116,77,97,116,99,104,42]},
            {sep,
             [{text,
               [16,111,110,32,116,104,101,32,97,116,116,114,105,98,117,116,
                101]}],
             0,false},
            {text,[4,42,115,110,42]},
            {sep,
             [{text,
               [26,97,110,100,32,109,97,116,99,104,101,115,32,119,105,116,104,
                32,116,104,101,32,118,97,108,117,101]}],
             0,false},
            {text,[7,42,34,66,97,114,34,42]},
            {sep,
             [{text,
               [22,46,32,84,104,101,32,100,101,102,97,117,108,116,32,118,97,
                108,117,101,32,111,102]}],
             0,false},
            {text,[14,42,100,110,65,116,116,114,105,98,117,116,101,115,42]},
            {sep,[{text,[2,105,115]}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [30,35,35,32,39,97,110,100,39,40,91,70,105,108,116,101,114,93,41,32,45,
        62,32,102,105,108,116,101,114,40,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,115,101,97,114,99,104,32,102,105,108,
            116,101,114,32,111,112,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [17,70,105,108,116,101,114,32,61,32,102,105,108,116,101,114,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [26,67,114,101,97,116,101,115,32,97,32,102,105,108,116,101,114,
                32,119,104,101,114,101,32,97,108,108]}],
             0,false},
            {text,"\b*Filter*"},
            {sep,[{text,"\rmust be true."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [29,35,35,32,39,111,114,39,40,91,70,105,108,116,101,114,93,41,32,45,62,
        32,102,105,108,116,101,114,40,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,115,101,97,114,99,104,32,102,105,108,
            116,101,114,32,111,112,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [17,70,105,108,116,101,114,32,61,32,102,105,108,116,101,114,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,")Create a filter where at least one of the"}],
             0,false},
            {text,"\b*Filter*"},
            {sep,[{text,"\rmust be true."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,39,110,111,116,39,40,70,105,108,116,101,114,41,32,45,62,
        32,102,105,108,116,101,114,40,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,115,101,97,114,99,104,32,102,105,108,
            116,101,114,32,111,112,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [17,70,105,108,116,101,114,32,61,32,102,105,108,116,101,114,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [16,78,101,103,97,116,101,32,97,32,102,105,108,116,101,114,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
