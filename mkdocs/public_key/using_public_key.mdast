{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [17,35,32,71,101,116,116,105,110,103,32,83,116,97,114,116,101,100]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "±This section describes examples of how to use the Public Key API. Keys and certificates used in the following sections are generated only for testing the Public Key application."}],
             0,false}],
           0,true},
          null},
         null}}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "YSome shell printouts in the following examples are abbreviated for increased readability."}],
            0,false}],
          0,true},
         null},
        null}}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\f## PEM Files"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [144,80,117,98,108,105,99,45,107,101,121,32,100,97,116,97,32,
                40,107,101,121,115,44,32,99,101,114,116,105,102,105,99,97,116,
                101,115,44,32,97,110,100,32,115,111,32,111,110,41,32,99,97,
                110,32,98,101,32,115,116,111,114,101,100,32,105,110,32,80,114,
                105,118,97,99,121,32,69,110,104,97,110,99,101,100,32,77,97,
                105,108,32,40,80,69,77,41,32,102,111,114,109,97,116,46,32,84,
                104,101,32,80,69,77,32,102,105,108,101,115,32,104,97,118,101,
                32,116,104,101,32,102,111,108,108,111,119,105,110,103,32,115,
                116,114,117,99,116,117,114,101,58]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [140,10,32,32,32,32,60,116,101,120,116,62,10,32,32,32,32,45,45,
                45,45,45,66,69,71,73,78,32,60,83,79,77,69,84,72,73,78,71,62,
                45,45,45,45,45,10,32,32,32,32,60,65,116,116,114,105,98,117,
                116,101,62,32,58,32,60,86,97,108,117,101,62,10,32,32,32,32,60,
                66,97,115,101,54,52,32,101,110,99,111,100,101,100,32,68,69,82,
                32,100,97,116,97,62,10,32,32,32,32,45,45,45,45,45,69,78,68,32,
                60,83,79,77,69,84,72,73,78,71,62,45,45,45,45,45,10,32,32,32,
                32,60,116,101,120,116,62]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [26,65,32,102,105,108,101,32,99,97,110,32,99,111,110,116,97,
                  105,110,32,115,101,118,101,114,97,108]}],
               0,false},
              {text,"\v*BEGIN/END*"},
              {sep,
               [{text,
                 "]blocks. Text lines between blocks are ignored. Attributes, if present, are ignored except for"}],
               0,false},
              {text,"\v*Proc-Type*"},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,"\n*DEK-Info*"},
              {sep,
               [{text,
                 [21,44,32,119,104,105,99,104,32,97,114,101,32,117,115,101,
                  100,32,119,104,101,110]}],
               0,false},
              {text,[5,42,68,69,82,42]},
              {sep,
               [{text,
                 [18,100,97,116,97,32,105,115,32,101,110,99,114,121,112,116,
                  101,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [18,35,35,32,68,83,65,32,80,114,105,118,97,116,101,32,75,101,
              121]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,"&A DSA private key can look as follows:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
              {sep,
               [{text,[4,32,32,32,32]},
                {sep,
                 [{sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "8File handling is not done by the Public Key application."}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false}],
                 0,true}],
               0,false}},
             {text,[0]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 "b1> {ok, PemBin} = file:read_file(\"dsa.pem\").\n{ok,<<\"-----BEGIN DSA PRIVATE KEY-----\\nMIIBuw\"...>>}"}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "=The following PEM file has only one entry, a private DSA key:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 "ë2> [DSAEntry] =  public_key:pem_decode(PemBin).\n[{'DSAPrivateKey',<<48,130,1,187,2,1,0,2,129,129,0,183,\n                    179,230,217,37,99,144,157,21,228,204,\n\t\t    162,207,61,246,...>>,\n\t\t    not_encrypted}]"}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [373,51,62,32,75,101,121,32,61,32,112,117,98,108,105,99,95,
                  107,101,121,58,112,101,109,95,101,110,116,114,121,95,100,
                  101,99,111,100,101,40,68,83,65,69,110,116,114,121,41,46,10,
                  35,39,68,83,65,80,114,105,118,97,116,101,75,101,121,39,123,
                  118,101,114,115,105,111,110,32,61,32,48,44,10,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,112,32,61,32,49,50,
                  57,48,48,48,52,53,49,56,53,48,49,57,57,54,54,54,49,56,46,46,
                  46,54,53,57,51,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,113,32,61,32,49,50,49,54,55,48,48,49,49,52,55,
                  57,52,55,51,54,49,52,51,52,51,50,50,51,53,50,56,56,51,48,53,
                  55,55,54,56,53,48,50,57,53,54,50,48,52,56,56,57,51,55,44,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,103,32,
                  61,32,49,48,52,52,50,48,52,48,50,50,55,52,53,50,51,52,57,51,
                  51,50,46,46,46,52,55,50,49,51,44,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,121,32,61,32,56,55,50,53,54,56,
                  48,55,57,56,48,48,51,48,53,48,57,48,55,52,46,46,46,52,48,51,
                  49,52,51,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,120,32,61,32,53,49,48,57,54,56,53,50,57,56,53,54,48,
                  49,50,49,52,54,51,53,49,51,49,55,51,54,51,56,48,55,51,54,54,
                  53,55,53,48,55,53,54,52,53,56,51,57,54,53,52,125]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}}],
        0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,{text," ## RSA Private Key with Password"},null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "AAn RSA private key encrypted with a password can look as follows:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 "G1> {ok, PemBin} = file:read_file(\"rsa.pem\").\n{ok,<<\"Bag Attribut\"...>>}"}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "=The following PEM file has only one entry, a private RSA key:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [264,50,62,91,82,83,65,69,110,116,114,121,93,32,61,32,112,
                  117,98,108,105,99,95,107,101,121,58,112,101,109,95,100,101,
                  99,111,100,101,40,80,101,109,66,105,110,41,46,10,91,123,39,
                  82,83,65,80,114,105,118,97,116,101,75,101,121,39,44,60,60,
                  50,50,52,44,49,48,56,44,49,49,55,44,50,48,51,44,49,53,50,44,
                  52,48,44,49,53,44,55,55,44,49,50,56,44,49,50,54,44,10,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,50,50,
                  49,44,49,57,53,44,49,53,52,44,50,52,57,44,56,53,44,50,48,56,
                  44,50,48,50,44,50,53,49,44,49,48,57,44,10,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,49,57,44,49,50,
                  48,44,53,55,44,50,57,44,56,57,44,49,57,44,57,44,46,46,46,62,
                  62,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,123,34,68,69,83,45,69,68,69,51,45,67,66,67,34,44,60,60,
                  34,107,195,153,101,195,184,194,188,112,194,181,76,34,62,62,
                  125,125,93]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,"*In this following example, the password is"}],
                 0,false},
                {text,"\f*\"abcd1234\"*"},
                {sep,[{text,[1,58]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [642,51,62,32,75,101,121,32,61,32,112,117,98,108,105,99,95,
                  107,101,121,58,112,101,109,95,101,110,116,114,121,95,100,
                  101,99,111,100,101,40,82,83,65,69,110,116,114,121,44,32,34,
                  97,98,99,100,49,50,51,52,34,41,46,10,32,32,32,32,35,39,82,
                  83,65,80,114,105,118,97,116,101,75,101,121,39,123,118,101,
                  114,115,105,111,110,32,61,32,39,116,119,111,45,112,114,105,
                  109,101,39,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,109,111,100,117,108,117,115,32,61,32,49,49,49,50,
                  51,53,53,49,53,54,55,50,57,57,50,49,54,54,51,51,55,51,46,46,
                  46,50,55,51,55,49,48,55,44,10,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,112,117,98,108,105,99,69,120,112,111,
                  110,101,110,116,32,61,32,54,53,53,51,55,44,10,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,112,114,105,118,97,
                  116,101,69,120,112,111,110,101,110,116,32,61,32,53,56,48,54,
                  52,52,48,54,50,51,49,49,56,51,46,46,46,50,50,51,57,55,54,54,
                  48,51,51,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,112,114,105,109,101,49,32,61,32,49,49,48,51,52,55,54,
                  54,54,49,52,54,53,54,53,57,56,52,56,52,48,57,56,46,46,46,55,
                  51,50,54,56,56,51,48,49,55,44,10,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,112,114,105,109,101,50,32,61,32,49,
                  48,48,56,48,52,53,57,50,57,51,53,54,49,48,51,54,54,49,56,50,
                  52,48,46,46,46,55,55,55,51,56,54,52,51,55,55,49,44,10,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,120,112,
                  111,110,101,110,116,49,32,61,32,55,55,57,50,56,56,49,57,51,
                  50,55,52,50,53,57,51,52,54,48,55,46,46,46,50,50,49,53,50,57,
                  56,52,50,49,55,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,101,120,112,111,110,101,110,116,50,32,61,32,51,
                  54,50,56,55,54,50,51,49,50,49,56,53,51,54,48,53,55,51,51,46,
                  46,46,50,48,53,56,56,53,50,51,55,57,51,44,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,99,111,101,102,102,105,
                  99,105,101,110,116,32,61,32,57,50,52,56,52,48,52,49,50,54,
                  50,54,48,57,56,52,52,52,46,46,46,52,49,56,50,48,57,54,56,51,
                  52,51,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,111,116,104,101,114,80,114,105,109,101,73,110,102,111,
                  115,32,61,32,97,115,110,49,95,78,79,86,65,76,85,69,125]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}}],
        0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [20,35,35,32,88,53,48,57,32,67,101,114,116,105,102,105,99,97,116,
              101,115]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,"1The following is an example of X509 certificates:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 "f1> {ok, PemBin} = file:read_file(\"cacerts.pem\").\n{ok,<<\"-----BEGIN CERTIFICATE-----\\nMIIC7jCCAl\"...>>}"}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,"-The following file includes two certificates:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [380,50,62,32,91,67,101,114,116,69,110,116,114,121,49,44,32,
                  67,101,114,116,69,110,116,114,121,50,93,32,61,32,112,117,98,
                  108,105,99,95,107,101,121,58,112,101,109,95,100,101,99,111,
                  100,101,40,80,101,109,66,105,110,41,46,10,91,123,39,67,101,
                  114,116,105,102,105,99,97,116,101,39,44,60,60,52,56,44,49,
                  51,48,44,50,44,50,51,56,44,52,56,44,49,51,48,44,50,44,56,55,
                  44,49,54,48,44,51,44,50,44,49,44,50,44,50,44,10,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,57,44,48,44,50,51,
                  48,44,49,52,53,44,57,55,44,50,49,52,44,49,57,49,44,50,44,49,
                  50,48,44,49,53,48,44,52,56,44,49,51,44,10,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,46,46,46,62,62,44,10,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,111,116,95,
                  101,110,99,114,121,112,116,101,100,125,44,10,32,123,39,67,
                  101,114,116,105,102,105,99,97,116,101,39,44,60,60,52,56,44,
                  49,51,48,44,51,44,50,48,48,44,52,56,44,49,51,48,44,51,44,52,
                  57,44,49,54,48,44,51,44,50,44,49,44,50,44,50,44,49,44,10,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,44,52,
                  56,44,49,51,44,54,44,57,44,52,50,44,49,51,52,44,55,50,44,49,
                  51,52,44,50,52,55,44,46,46,46,62,62,44,10,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,110,111,116,95,101,110,99,114,
                  121,112,116,101,100,125,93]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,[{text,"%Certificates can be decoded as usual:"}],0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [4104,50,62,32,67,101,114,116,32,61,32,112,117,98,108,105,99,
                  95,107,101,121,58,112,101,109,95,101,110,116,114,121,95,100,
                  101,99,111,100,101,40,67,101,114,116,69,110,116,114,121,49,
                  41,46,10,35,39,67,101,114,116,105,102,105,99,97,116,101,39,
                  123,10,32,32,32,32,116,98,115,67,101,114,116,105,102,105,99,
                  97,116,101,32,61,10,32,32,32,32,32,32,32,32,35,39,84,66,83,
                  67,101,114,116,105,102,105,99,97,116,101,39,123,10,32,32,32,
                  32,32,32,32,32,32,32,32,32,118,101,114,115,105,111,110,32,
                  61,32,118,51,44,115,101,114,105,97,108,78,117,109,98,101,
                  114,32,61,32,49,54,54,49,52,49,54,56,48,55,53,51,48,49,57,
                  55,54,50,49,52,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                  115,105,103,110,97,116,117,114,101,32,61,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,35,39,65,108,103,111,114,
                  105,116,104,109,73,100,101,110,116,105,102,105,101,114,39,
                  123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,97,108,103,111,114,105,116,104,109,32,61,32,123,49,
                  44,50,44,56,52,48,44,49,49,51,53,52,57,44,49,44,49,44,53,
                  125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,112,97,114,97,109,101,116,101,114,115,32,61,32,
                  60,60,53,44,48,62,62,125,44,10,32,32,32,32,32,32,32,32,32,
                  32,32,32,105,115,115,117,101,114,32,61,10,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,123,114,100,110,83,101,113,
                  117,101,110,99,101,44,10,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,91,91,35,39,65,116,116,114,105,
                  98,117,116,101,84,121,112,101,65,110,100,86,97,108,117,101,
                  39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,116,121,112,101,32,61,32,123,
                  50,44,53,44,52,44,51,125,44,10,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,
                  108,117,101,32,61,32,60,60,49,57,44,56,44,49,48,49,44,49,49,
                  52,44,49,48,56,44,57,55,44,49,49,48,44,49,48,51,44,54,55,44,
                  54,53,62,62,125,93,44,10,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,91,35,39,65,116,116,114,105,
                  98,117,116,101,84,121,112,101,65,110,100,86,97,108,117,101,
                  39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,116,121,112,101,32,61,32,123,
                  50,44,53,44,52,44,49,49,125,44,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,
                  97,108,117,101,32,61,32,60,60,49,57,44,49,48,44,54,57,44,49,
                  49,52,44,49,48,56,44,57,55,44,49,49,48,44,49,48,51,44,51,50,
                  44,55,57,44,56,52,44,56,48,62,62,125,93,44,10,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,35,39,
                  65,116,116,114,105,98,117,116,101,84,121,112,101,65,110,100,
                  86,97,108,117,101,39,123,10,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,
                  101,32,61,32,123,50,44,53,44,52,44,49,48,125,44,10,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,118,97,108,117,101,32,61,32,60,60,49,57,44,49,49,
                  44,54,57,44,49,49,52,44,49,48,53,44,57,57,44,49,49,53,44,49,
                  49,53,44,49,49,49,44,49,49,48,44,51,50,44,54,53,44,54,54,62,
                  62,125,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,91,35,39,65,116,116,114,105,98,117,116,
                  101,84,121,112,101,65,110,100,86,97,108,117,101,39,123,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,116,121,112,101,32,61,32,123,50,44,53,44,
                  52,44,55,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,108,117,101,
                  32,61,32,60,60,49,57,44,57,44,56,51,44,49,49,54,44,49,49,49,
                  44,57,57,44,49,48,55,44,49,48,52,44,49,49,49,44,49,48,56,44,
                  49,48,57,62,62,125,93,44,10,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,91,35,39,65,116,116,114,
                  105,98,117,116,101,84,121,112,101,65,110,100,86,97,108,117,
                  101,39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,32,61,32,
                  123,50,44,53,44,52,44,54,125,44,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,
                  97,108,117,101,32,61,32,60,60,49,57,44,50,44,56,51,44,54,57,
                  62,62,125,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,91,35,39,65,116,116,114,105,98,117,
                  116,101,84,121,112,101,65,110,100,86,97,108,117,101,39,123,
                  10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,116,121,112,101,32,61,32,123,49,44,50,
                  44,56,52,48,44,49,49,51,53,52,57,44,49,44,57,44,49,125,44,
                  10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,118,97,108,117,101,32,61,32,60,60,50,
                  50,44,50,50,44,49,49,50,44,49,48,49,44,49,49,54,44,49,48,49,
                  44,49,49,52,44,54,52,44,49,48,49,44,49,49,52,44,46,46,46,62,
                  62,125,93,93,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                  118,97,108,105,100,105,116,121,32,61,10,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,35,39,86,97,108,105,100,105,
                  116,121,39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,110,111,116,66,101,102,111,114,101,32,61,
                  32,123,117,116,99,84,105,109,101,44,34,48,56,48,49,48,57,48,
                  56,50,57,50,57,90,34,125,44,10,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,110,111,116,65,102,116,101,
                  114,32,61,32,123,117,116,99,84,105,109,101,44,34,48,56,48,
                  50,48,56,48,56,50,57,50,57,90,34,125,125,44,10,32,32,32,32,
                  32,32,32,32,32,32,32,32,115,117,98,106,101,99,116,32,61,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,114,100,
                  110,83,101,113,117,101,110,99,101,44,10,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,91,35,39,65,
                  116,116,114,105,98,117,116,101,84,121,112,101,65,110,100,86,
                  97,108,117,101,39,123,10,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,
                  101,32,61,32,123,50,44,53,44,52,44,51,125,44,10,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,118,97,108,117,101,32,61,32,60,60,49,57,44,56,44,49,
                  48,49,44,49,49,52,44,49,48,56,44,57,55,44,49,49,48,44,49,48,
                  51,44,54,55,44,54,53,62,62,125,93,44,10,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,35,39,65,
                  116,116,114,105,98,117,116,101,84,121,112,101,65,110,100,86,
                  97,108,117,101,39,123,10,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,
                  101,32,61,32,123,50,44,53,44,52,44,49,49,125,44,10,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,118,97,108,117,101,32,61,32,60,60,49,57,44,49,48,
                  44,54,57,44,49,49,52,44,49,48,56,44,57,55,44,49,49,48,44,49,
                  48,51,44,51,50,44,55,57,44,56,52,44,56,48,62,62,125,93,44,
                  10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,91,35,39,65,116,116,114,105,98,117,116,101,84,121,112,
                  101,65,110,100,86,97,108,117,101,39,123,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,116,121,112,101,32,61,32,123,50,44,53,44,52,44,49,48,125,
                  44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,118,97,108,117,101,32,61,32,60,60,
                  49,57,44,49,49,44,54,57,44,49,49,52,44,49,48,53,44,57,57,44,
                  49,49,53,44,49,49,53,44,49,49,49,44,49,49,48,44,51,50,44,46,
                  46,46,62,62,125,93,44,10,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,91,35,39,65,116,116,114,105,
                  98,117,116,101,84,121,112,101,65,110,100,86,97,108,117,101,
                  39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,116,121,112,101,32,61,32,123,
                  50,44,53,44,52,44,55,125,44,10,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,118,97,
                  108,117,101,32,61,32,60,60,49,57,44,57,44,56,51,44,49,49,54,
                  44,49,49,49,44,57,57,44,49,48,55,44,49,48,52,44,49,49,49,44,
                  49,48,56,44,46,46,46,62,62,125,93,44,10,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,35,39,65,
                  116,116,114,105,98,117,116,101,84,121,112,101,65,110,100,86,
                  97,108,117,101,39,123,10,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,121,112,
                  101,32,61,32,123,50,44,53,44,52,44,54,125,44,10,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,118,97,108,117,101,32,61,32,60,60,49,57,44,50,44,56,
                  51,44,54,57,62,62,125,93,44,10,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,91,35,39,65,116,116,114,
                  105,98,117,116,101,84,121,112,101,65,110,100,86,97,108,117,
                  101,39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,116,121,112,101,32,61,32,
                  123,49,44,50,44,56,52,48,44,49,49,51,53,52,57,44,49,44,57,
                  44,49,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,118,97,108,117,101,32,
                  61,32,60,60,50,50,44,50,50,44,49,49,50,44,49,48,49,44,49,49,
                  54,44,49,48,49,44,49,49,52,44,54,52,44,46,46,46,62,62,125,
                  93,93,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,115,117,
                  98,106,101,99,116,80,117,98,108,105,99,75,101,121,73,110,
                  102,111,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,35,39,83,117,98,106,101,99,116,80,117,98,108,105,99,
                  75,101,121,73,110,102,111,39,123,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,97,108,103,111,114,105,
                  116,104,109,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,35,39,65,108,103,111,114,
                  105,116,104,109,73,100,101,110,116,105,102,105,101,114,39,
                  123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,97,108,103,111,114,105,116,
                  104,109,32,61,32,123,49,44,50,44,56,52,48,44,49,49,51,53,52,
                  57,44,49,44,49,44,49,125,44,10,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  112,97,114,97,109,101,116,101,114,115,32,61,32,60,60,53,44,
                  48,62,62,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,115,117,98,106,101,99,116,80,117,98,
                  108,105,99,75,101,121,32,61,10,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,48,44,60,
                  60,52,56,44,49,50,57,44,49,51,55,44,50,44,49,50,57,44,49,50,
                  57,44,48,44,50,48,51,44,50,48,57,44,49,56,55,44,55,55,44,55,
                  51,44,50,51,49,44,57,48,44,46,46,46,62,62,125,125,44,10,32,
                  32,32,32,32,32,32,32,32,32,32,32,105,115,115,117,101,114,85,
                  110,105,113,117,101,73,68,32,61,32,97,115,110,49,95,78,79,
                  86,65,76,85,69,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                  115,117,98,106,101,99,116,85,110,105,113,117,101,73,68,32,
                  61,32,97,115,110,49,95,78,79,86,65,76,85,69,44,10,32,32,32,
                  32,32,32,32,32,32,32,32,32,101,120,116,101,110,115,105,111,
                  110,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,91,35,39,69,120,116,101,110,115,105,111,110,39,123,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,101,120,116,110,73,68,32,61,32,123,50,44,53,44,50,57,44,
                  49,57,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,99,114,105,116,105,99,97,108,32,61,32,
                  116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,101,120,116,110,86,97,108,117,
                  101,32,61,32,91,52,56,44,51,44,49,44,49,44,50,53,53,93,125,
                  44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,35,
                  39,69,120,116,101,110,115,105,111,110,39,123,10,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,120,
                  116,110,73,68,32,61,32,123,50,44,53,44,50,57,44,49,53,125,
                  44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,99,114,105,116,105,99,97,108,32,61,32,102,97,108,
                  115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,101,120,116,110,86,97,108,117,101,32,61,
                  32,91,51,44,50,44,49,44,54,93,125,44,10,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,35,39,69,120,116,101,110,
                  115,105,111,110,39,123,10,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,101,120,116,110,73,68,32,61,
                  32,123,50,44,53,44,50,57,44,49,52,125,44,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,114,105,
                  116,105,99,97,108,32,61,32,102,97,108,115,101,44,10,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  101,120,116,110,86,97,108,117,101,32,61,32,91,52,44,50,48,
                  44,50,55,44,50,49,55,44,54,53,44,49,53,50,44,54,44,51,48,44,
                  49,52,50,124,46,46,46,93,125,44,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,35,39,69,120,116,101,110,115,105,
                  111,110,39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,101,120,116,110,73,68,32,61,32,123,50,
                  44,53,44,50,57,44,49,55,125,44,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,99,114,105,116,105,
                  99,97,108,32,61,32,102,97,108,115,101,44,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,120,116,
                  110,86,97,108,117,101,32,61,32,91,52,56,44,50,52,44,49,50,
                  57,44,50,50,44,49,49,50,44,49,48,49,44,49,49,54,44,49,48,49,
                  124,46,46,46,93,125,93,125,44,10,32,32,32,32,115,105,103,
                  110,97,116,117,114,101,65,108,103,111,114,105,116,104,109,
                  32,61,10,32,32,32,32,32,32,32,32,35,39,65,108,103,111,114,
                  105,116,104,109,73,100,101,110,116,105,102,105,101,114,39,
                  123,10,32,32,32,32,32,32,32,32,32,32,32,32,97,108,103,111,
                  114,105,116,104,109,32,61,32,123,49,44,50,44,56,52,48,44,49,
                  49,51,53,52,57,44,49,44,49,44,53,125,44,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,112,97,114,97,109,101,116,101,114,115,
                  32,61,32,60,60,53,44,48,62,62,125,44,10,32,32,32,32,115,105,
                  103,110,97,116,117,114,101,32,61,10,32,32,32,32,60,60,49,54,
                  51,44,49,56,54,44,55,44,49,54,51,44,50,49,54,44,49,53,50,44,
                  54,51,44,52,55,44,49,53,52,44,50,51,52,44,49,51,57,44,55,51,
                  44,49,53,52,44,57,54,44,49,50,48,44,10,32,32,32,32,49,54,53,
                  44,50,44,53,50,44,49,57,54,44,49,57,53,44,49,48,57,44,49,54,
                  55,44,49,57,50,44,46,46,46,62,62,125]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,")Parts of certificates can be decoded with"}],
                 0,false},
                {text,
                 [25,42,112,117,98,108,105,99,95,107,101,121,58,100,101,114,
                  95,100,101,99,111,100,101,47,50,42]},
                {sep,
                 [{text,
                   "Â, using the ASN.1 type of that part. However, an application-specific certificate extension requires application-specific ASN.1 decode/encode-functions. In the recent example, the first value of"}],
                 0,false},
                {text,"\r*rdnSequence*"},
                {sep,
                 [{text,
                   [16,105,115,32,111,102,32,65,83,78,46,49,32,116,121,112,
                    101]}],
                 0,false},
                {text,"3*'X520CommonName'. ({2,5,4,3} = ?id-at-commonName)*"},
                {sep,[{text,[1,58]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 "lpublic_key:der_decode('X520CommonName', <<19,8,101,114,108,97,110,103,67,65>>).\n{printableString,\"erlangCA\"}"}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,"/However, certificates can also be decoded using"}],
                 0,false},
                {text,
                 [20,42,112,107,105,120,95,100,101,99,111,100,101,95,99,101,
                  114,116,47,50,42]},
                {sep,
                 [{text,
                   "M, which can customize and recursively decode standard parts of a certificate:"}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [31,51,62,123,95,44,32,68,101,114,67,101,114,116,44,32,95,
                  125,32,61,32,67,101,114,116,69,110,116,114,121,49,46]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [4081,52,62,32,112,117,98,108,105,99,95,107,101,121,58,112,
                  107,105,120,95,100,101,99,111,100,101,95,99,101,114,116,40,
                  68,101,114,67,101,114,116,44,32,111,116,112,41,46,10,35,39,
                  79,84,80,67,101,114,116,105,102,105,99,97,116,101,39,123,10,
                  32,32,32,32,116,98,115,67,101,114,116,105,102,105,99,97,116,
                  101,32,61,10,32,32,32,32,32,32,32,32,35,39,79,84,80,84,66,
                  83,67,101,114,116,105,102,105,99,97,116,101,39,123,10,32,32,
                  32,32,32,32,32,32,32,32,32,32,118,101,114,115,105,111,110,
                  32,61,32,118,51,44,115,101,114,105,97,108,78,117,109,98,101,
                  114,32,61,32,49,54,54,49,52,49,54,56,48,55,53,51,48,49,57,
                  55,54,50,49,52,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                  115,105,103,110,97,116,117,114,101,32,61,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,35,39,83,105,103,110,97,
                  116,117,114,101,65,108,103,111,114,105,116,104,109,39,123,
                  10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,97,108,103,111,114,105,116,104,109,32,61,32,123,49,44,50,
                  44,56,52,48,44,49,49,51,53,52,57,44,49,44,49,44,53,125,44,
                  10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,112,97,114,97,109,101,116,101,114,115,32,61,32,39,78,85,
                  76,76,39,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,105,
                  115,115,117,101,114,32,61,10,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,123,114,100,110,83,101,113,117,101,110,99,
                  101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,91,91,35,39,65,116,116,114,105,98,117,116,101,
                  84,121,112,101,65,110,100,86,97,108,117,101,39,123,10,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,116,121,112,101,32,61,32,123,50,44,53,44,52,44,
                  51,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,118,97,108,117,101,32,61,
                  32,123,112,114,105,110,116,97,98,108,101,83,116,114,105,110,
                  103,44,34,101,114,108,97,110,103,67,65,34,125,125,93,44,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,91,35,39,65,116,116,114,105,98,117,116,101,84,121,112,
                  101,65,110,100,86,97,108,117,101,39,123,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,116,121,112,101,32,61,32,123,50,44,53,44,52,44,49,49,125,
                  44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,118,97,108,117,101,32,61,32,123,112,
                  114,105,110,116,97,98,108,101,83,116,114,105,110,103,44,34,
                  69,114,108,97,110,103,32,79,84,80,34,125,125,93,44,10,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,
                  35,39,65,116,116,114,105,98,117,116,101,84,121,112,101,65,
                  110,100,86,97,108,117,101,39,123,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,
                  121,112,101,32,61,32,123,50,44,53,44,52,44,49,48,125,44,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,118,97,108,117,101,32,61,32,123,112,114,
                  105,110,116,97,98,108,101,83,116,114,105,110,103,44,34,69,
                  114,105,99,115,115,111,110,32,65,66,34,125,125,93,44,10,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  91,35,39,65,116,116,114,105,98,117,116,101,84,121,112,101,
                  65,110,100,86,97,108,117,101,39,123,10,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  116,121,112,101,32,61,32,123,50,44,53,44,52,44,55,125,44,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,118,97,108,117,101,32,61,32,123,112,114,
                  105,110,116,97,98,108,101,83,116,114,105,110,103,44,34,83,
                  116,111,99,107,104,111,108,109,34,125,125,93,44,10,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,35,
                  39,65,116,116,114,105,98,117,116,101,84,121,112,101,65,110,
                  100,86,97,108,117,101,39,123,116,121,112,101,32,61,32,123,
                  50,44,53,44,52,44,54,125,44,118,97,108,117,101,32,61,32,34,
                  83,69,34,125,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,91,35,39,65,116,116,114,105,98,
                  117,116,101,84,121,112,101,65,110,100,86,97,108,117,101,39,
                  123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,116,121,112,101,32,61,32,123,49,
                  44,50,44,56,52,48,44,49,49,51,53,52,57,44,49,44,57,44,49,
                  125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,118,97,108,117,101,32,61,32,
                  34,112,101,116,101,114,64,101,114,105,120,46,101,114,105,99,
                  115,115,111,110,46,115,101,34,125,93,93,125,44,10,32,32,32,
                  32,32,32,32,32,32,32,32,32,118,97,108,105,100,105,116,121,
                  32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,35,
                  39,86,97,108,105,100,105,116,121,39,123,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,111,116,66,
                  101,102,111,114,101,32,61,32,123,117,116,99,84,105,109,101,
                  44,34,48,56,48,49,48,57,48,56,50,57,50,57,90,34,125,44,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  110,111,116,65,102,116,101,114,32,61,32,123,117,116,99,84,
                  105,109,101,44,34,48,56,48,50,48,56,48,56,50,57,50,57,90,34,
                  125,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,115,117,
                  98,106,101,99,116,32,61,10,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,123,114,100,110,83,101,113,117,101,110,99,
                  101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,91,91,35,39,65,116,116,114,105,98,117,116,101,
                  84,121,112,101,65,110,100,86,97,108,117,101,39,123,10,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,116,121,112,101,32,61,32,123,50,44,53,44,52,44,
                  51,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,118,97,108,117,101,32,61,
                  32,123,112,114,105,110,116,97,98,108,101,83,116,114,105,110,
                  103,44,34,101,114,108,97,110,103,67,65,34,125,125,93,44,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,91,35,39,65,116,116,114,105,98,117,116,101,84,121,112,
                  101,65,110,100,86,97,108,117,101,39,123,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,116,121,112,101,32,61,32,123,50,44,53,44,52,44,49,49,125,
                  44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,118,97,108,117,101,32,61,32,123,112,
                  114,105,110,116,97,98,108,101,83,116,114,105,110,103,44,34,
                  69,114,108,97,110,103,32,79,84,80,34,125,125,93,44,10,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,
                  35,39,65,116,116,114,105,98,117,116,101,84,121,112,101,65,
                  110,100,86,97,108,117,101,39,123,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,
                  121,112,101,32,61,32,123,50,44,53,44,52,44,49,48,125,44,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,118,97,108,117,101,32,61,32,123,112,114,
                  105,110,116,97,98,108,101,83,116,114,105,110,103,44,34,69,
                  114,105,99,115,115,111,110,32,65,66,34,125,125,93,44,10,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  91,35,39,65,116,116,114,105,98,117,116,101,84,121,112,101,
                  65,110,100,86,97,108,117,101,39,123,10,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  116,121,112,101,32,61,32,123,50,44,53,44,52,44,55,125,44,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,118,97,108,117,101,32,61,32,123,112,114,
                  105,110,116,97,98,108,101,83,116,114,105,110,103,44,34,83,
                  116,111,99,107,104,111,108,109,34,125,125,93,44,10,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,35,
                  39,65,116,116,114,105,98,117,116,101,84,121,112,101,65,110,
                  100,86,97,108,117,101,39,123,116,121,112,101,32,61,32,123,
                  50,44,53,44,52,44,54,125,44,118,97,108,117,101,32,61,32,34,
                  83,69,34,125,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,91,35,39,65,116,116,114,105,98,
                  117,116,101,84,121,112,101,65,110,100,86,97,108,117,101,39,
                  123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,116,121,112,101,32,61,32,123,49,
                  44,50,44,56,52,48,44,49,49,51,53,52,57,44,49,44,57,44,49,
                  125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,118,97,108,117,101,32,61,32,
                  34,112,101,116,101,114,64,101,114,105,120,46,101,114,105,99,
                  115,115,111,110,46,115,101,34,125,93,93,125,44,10,32,32,32,
                  32,32,32,32,32,32,32,32,32,115,117,98,106,101,99,116,80,117,
                  98,108,105,99,75,101,121,73,110,102,111,32,61,10,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,35,39,79,84,80,83,
                  117,98,106,101,99,116,80,117,98,108,105,99,75,101,121,73,
                  110,102,111,39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,97,108,103,111,114,105,116,104,109,
                  32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,35,39,80,117,98,108,105,99,75,101,121,
                  65,108,103,111,114,105,116,104,109,39,123,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,97,108,103,111,114,105,116,104,109,32,61,32,123,49,
                  44,50,44,56,52,48,44,49,49,51,53,52,57,44,49,44,49,44,49,
                  125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,112,97,114,97,109,101,
                  116,101,114,115,32,61,32,39,78,85,76,76,39,125,44,10,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,
                  117,98,106,101,99,116,80,117,98,108,105,99,75,101,121,32,61,
                  10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,35,39,82,83,65,80,117,98,108,105,99,75,101,
                  121,39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,109,111,100,117,108,
                  117,115,32,61,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,49,52,
                  51,49,50,54,55,53,52,55,50,52,55,57,57,55,46,46,46,51,55,52,
                  49,57,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,112,117,98,108,105,99,
                  69,120,112,111,110,101,110,116,32,61,32,54,53,53,51,55,125,
                  125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,105,115,115,
                  117,101,114,85,110,105,113,117,101,73,68,32,61,32,97,115,
                  110,49,95,78,79,86,65,76,85,69,44,10,32,32,32,32,32,32,32,
                  32,32,32,32,32,115,117,98,106,101,99,116,85,110,105,113,117,
                  101,73,68,32,61,32,97,115,110,49,95,78,79,86,65,76,85,69,44,
                  10,32,32,32,32,32,32,32,32,32,32,32,32,101,120,116,101,110,
                  115,105,111,110,115,32,61,10,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,91,35,39,69,120,116,101,110,115,105,111,
                  110,39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,101,120,116,110,73,68,32,61,32,123,50,44,
                  53,44,50,57,44,49,57,125,44,10,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,99,114,105,116,105,99,
                  97,108,32,61,32,116,114,117,101,44,10,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,120,116,110,
                  86,97,108,117,101,32,61,10,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,35,39,66,97,115,
                  105,99,67,111,110,115,116,114,97,105,110,116,115,39,123,10,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,99,65,32,61,32,116,114,117,101,
                  44,112,97,116,104,76,101,110,67,111,110,115,116,114,97,105,
                  110,116,32,61,32,97,115,110,49,95,78,79,86,65,76,85,69,125,
                  125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,35,39,69,120,116,101,110,115,105,111,110,39,123,10,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  101,120,116,110,73,68,32,61,32,123,50,44,53,44,50,57,44,49,
                  53,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,99,114,105,116,105,99,97,108,32,61,32,102,
                  97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,101,120,116,110,86,97,108,117,101,
                  32,61,32,91,107,101,121,67,101,114,116,83,105,103,110,44,99,
                  82,76,83,105,103,110,93,125,44,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,35,39,69,120,116,101,110,115,105,
                  111,110,39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,101,120,116,110,73,68,32,61,32,123,50,
                  44,53,44,50,57,44,49,52,125,44,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,99,114,105,116,105,
                  99,97,108,32,61,32,102,97,108,115,101,44,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,120,116,
                  110,86,97,108,117,101,32,61,32,91,50,55,44,50,49,55,44,54,
                  53,44,49,53,50,44,54,44,51,48,44,49,52,50,44,49,51,50,44,50,
                  52,53,124,46,46,46,93,125,44,10,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,35,39,69,120,116,101,110,115,105,
                  111,110,39,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,101,120,116,110,73,68,32,61,32,123,50,
                  44,53,44,50,57,44,49,55,125,44,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,99,114,105,116,105,
                  99,97,108,32,61,32,102,97,108,115,101,44,10,32,32,32,32,32,
                  32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,120,116,
                  110,86,97,108,117,101,32,61,32,91,123,114,102,99,56,50,50,
                  78,97,109,101,44,34,112,101,116,101,114,64,101,114,105,120,
                  46,101,114,105,99,115,115,111,110,46,115,101,34,125,93,125,
                  93,125,44,10,32,32,32,32,115,105,103,110,97,116,117,114,101,
                  65,108,103,111,114,105,116,104,109,32,61,10,32,32,32,32,32,
                  32,32,32,35,39,83,105,103,110,97,116,117,114,101,65,108,103,
                  111,114,105,116,104,109,39,123,10,32,32,32,32,32,32,32,32,
                  32,32,32,32,97,108,103,111,114,105,116,104,109,32,61,32,123,
                  49,44,50,44,56,52,48,44,49,49,51,53,52,57,44,49,44,49,44,53,
                  125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,112,97,114,97,
                  109,101,116,101,114,115,32,61,32,39,78,85,76,76,39,125,44,
                  10,32,32,32,32,115,105,103,110,97,116,117,114,101,32,61,10,
                  32,32,32,32,32,32,32,32,32,60,60,49,54,51,44,49,56,54,44,55,
                  44,49,54,51,44,50,49,54,44,49,53,50,44,54,51,44,52,55,44,49,
                  53,52,44,50,51,52,44,49,51,57,44,55,51,44,49,53,52,44,57,54,
                  44,49,50,48,44,10,32,32,32,32,32,32,32,32,32,32,32,49,54,53,
                  44,50,44,53,50,44,49,57,54,44,49,57,53,44,49,48,57,44,49,54,
                  55,44,49,57,50,44,46,46,46,62,62,125]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [26,84,104,105,115,32,99,97,108,108,32,105,115,32,101,113,
                    117,105,118,97,108,101,110,116,32,116,111]}],
                 0,false},
                {text,")*public_key:pem_entry_decode(CertEntry1)*"},
                {sep,[{text,[1,58]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 "D5> public_key:pkix_decode_cert(DerCert, plain).\n#'Certificate'{ ...}"}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}}],
        0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,{text,")## Encoding Public-Key Data to PEM Format"},null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "_If you have public-key data and want to create a PEM file this can be done by calling functions"}],
                 0,false},
                {text,
                 [31,42,112,117,98,108,105,99,95,107,101,121,58,112,101,109,
                  95,101,110,116,114,121,95,101,110,99,111,100,101,47,50,42]},
                {sep,[{text,[3,97,110,100]}],0,false},
                {text,[14,42,112,101,109,95,101,110,99,111,100,101,47,49,42]},
                {sep,
                 [{text,
                   "Band saving the result to a file. For example, assume that you have"}],
                 0,false},
                {text,"\e*PubKey = 'RSAPublicKey'{}*"},
                {sep,
                 [{text,
                   "=. Then you can create a PEM-\"RSA PUBLIC KEY\" file (ASN.1 type"}],
                 0,false},
                {text,
                 [16,42,39,82,83,65,80,117,98,108,105,99,75,101,121,39,42]},
                {sep,
                 [{text,
                   [30,41,32,111,114,32,97,32,80,69,77,45,34,80,85,66,76,73,
                    67,32,75,69,89,34,32,102,105,108,101,32,40]}],
                 0,false},
                {text,
                 [24,42,39,83,117,98,106,101,99,116,80,117,98,108,105,99,75,
                  101,121,73,110,102,111,39,42]},
                {sep,[{text,"\fASN.1 type)."}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,"0The second element of the PEM-entry is the ASN.1"}],
                 0,false},
                {text,[5,42,68,69,82,42]},
                {sep,
                 [{text,
                   [17,101,110,99,111,100,101,100,32,107,101,121,32,100,97,
                    116,97,58]}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [260,49,62,32,80,101,109,69,110,116,114,121,32,61,32,112,117,
                  98,108,105,99,95,107,101,121,58,112,101,109,95,101,110,116,
                  114,121,95,101,110,99,111,100,101,40,39,82,83,65,80,117,98,
                  108,105,99,75,101,121,39,44,32,82,83,65,80,117,98,75,101,
                  121,41,46,10,123,39,82,83,65,80,117,98,108,105,99,75,101,
                  121,39,44,32,60,60,52,56,44,55,50,44,46,46,46,62,62,44,32,
                  110,111,116,95,101,110,99,114,121,112,116,101,100,125,10,10,
                  50,62,32,80,101,109,66,105,110,32,61,32,112,117,98,108,105,
                  99,95,107,101,121,58,112,101,109,95,101,110,99,111,100,101,
                  40,91,80,101,109,69,110,116,114,121,93,41,46,10,60,60,34,45,
                  45,45,45,45,66,69,71,73,78,32,82,83,65,32,80,85,66,76,73,67,
                  32,75,69,89,45,45,45,45,45,92,110,77,69,103,67,46,46,46,62,
                  62,10,10,51,62,32,102,105,108,101,58,119,114,105,116,101,95,
                  102,105,108,101,40,34,114,115,97,95,112,117,98,95,107,101,
                  121,46,112,101,109,34,44,32,80,101,109,66,105,110,41,46,10,
                  111,107]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,{sep,[{sep,[{text,[3,111,114,58]}],0,false}],0,true},null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [266,49,62,32,80,101,109,69,110,116,114,121,32,61,32,112,117,
                  98,108,105,99,95,107,101,121,58,112,101,109,95,101,110,116,
                  114,121,95,101,110,99,111,100,101,40,39,83,117,98,106,101,
                  99,116,80,117,98,108,105,99,75,101,121,73,110,102,111,39,44,
                  32,82,83,65,80,117,98,75,101,121,41,46,10,123,39,83,117,98,
                  106,101,99,116,80,117,98,108,105,99,75,101,121,73,110,102,
                  111,39,44,32,60,60,52,56,44,57,50,46,46,46,62,62,44,32,110,
                  111,116,95,101,110,99,114,121,112,116,101,100,125,10,10,50,
                  62,32,80,101,109,66,105,110,32,61,32,112,117,98,108,105,99,
                  95,107,101,121,58,112,101,109,95,101,110,99,111,100,101,40,
                  91,80,101,109,69,110,116,114,121,93,41,46,10,60,60,34,45,45,
                  45,45,45,66,69,71,73,78,32,80,85,66,76,73,67,32,75,69,89,45,
                  45,45,45,45,92,110,77,70,119,46,46,46,62,62,10,10,51,62,32,
                  102,105,108,101,58,119,114,105,116,101,95,102,105,108,101,
                  40,34,112,117,98,95,107,101,121,46,112,101,109,34,44,32,80,
                  101,109,66,105,110,41,46,10,111,107]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [30,35,35,32,82,83,65,32,80,117,98,108,105,99,45,75,101,121,32,67,
           114,121,112,116,111,103,114,97,112,104,121]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "JSuppose you have the following private key and a corresponding public key:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"!*PrivateKey = #'RSAPrivateKey{}'*"},
           {sep,
            [{text,
              [17,97,110,100,32,116,104,101,32,112,108,97,105,110,116,101,120,
               116]}],
            0,false},
           {text,[16,42,77,115,103,32,61,32,98,105,110,97,114,121,40,41,42]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {text,
          [31,42,80,117,98,108,105,99,75,101,121,32,61,32,35,39,82,83,65,80,
           117,98,108,105,99,75,101,121,39,123,125,42]}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text," Then you can proceed as follows:"}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,69,110,99,114,121,112,116,32,119,105,116,104,32,116,104,101,
               32,112,114,105,118,97,116,101,32,107,101,121,58]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "uRsaEncrypted = public_key:encrypt_private(Msg, PrivateKey),\nMsg = public_key:decrypt_public(RsaEncrypted, PublicKey),"}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [28,69,110,99,114,121,112,116,32,119,105,116,104,32,116,104,101,
               32,112,117,98,108,105,99,32,107,101,121,58]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "uRsaEncrypted = public_key:encrypt_public(Msg, PublicKey),\nMsg = public_key:decrypt_private(RsaEncrypted, PrivateKey),"}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "¦You normally do only one of the encrypt or decrypt operations, and the peer does the other. This normaly used in legacy applications as a primitive digital signature."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [21,35,35,32,68,105,103,105,116,97,108,32,83,105,103,110,97,116,117,
          114,101,115]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "JSuppose you have the following private key and a corresponding public key:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"!*PrivateKey = #'RSAPrivateKey{}'*"},
          {sep,[{text,[2,111,114]}],0,false},
          {text,
           [20,42,35,39,68,83,65,80,114,105,118,97,116,101,75,101,121,39,123,
            125,42]},
          {sep,
           [{text,
             [17,97,110,100,32,116,104,101,32,112,108,97,105,110,116,101,120,
              116]}],
           0,false},
          {text,[16,42,77,115,103,32,61,32,98,105,110,97,114,121,40,41,42]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [31,42,80,117,98,108,105,99,75,101,121,32,61,32,35,39,82,83,65,80,
            117,98,108,105,99,75,101,121,39,123,125,42]},
          {sep,[{text,[2,111,114]}],0,false},
          {text,
           [29,42,123,105,110,116,101,103,101,114,40,41,44,32,35,39,68,115,
            115,80,97,114,97,109,115,39,123,125,125,42]}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," Then you can proceed as follows:"}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "lSignature = public_key:sign(Msg, sha, PrivateKey),\ntrue = public_key:verify(Msg, sha, Signature, PublicKey),"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "WYou normally do only one of the sign or verify operations, and the peer does the other."}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "DIt can be appropriate to calculate the message digest before calling"}],
             0,false},
            {text,[6,42,115,105,103,110,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\b*verify*"},
            {sep,
             [{text,[14,44,32,97,110,100,32,116,104,101,110,32,117,115,101]}],
             0,false},
            {text,[6,42,110,111,110,101,42]},
            {sep,
             [{text,
               [19,97,115,32,115,101,99,111,110,100,32,97,114,103,117,109,101,
                110,116,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [142,68,105,103,101,115,116,32,61,32,99,114,121,112,116,111,58,
              115,104,97,40,77,115,103,41,44,10,83,105,103,110,97,116,117,114,
              101,32,61,32,112,117,98,108,105,99,95,107,101,121,58,115,105,
              103,110,40,68,105,103,101,115,116,44,32,110,111,110,101,44,32,
              80,114,105,118,97,116,101,75,101,121,41,44,10,116,114,117,101,
              32,61,32,112,117,98,108,105,99,95,107,101,121,58,118,101,114,
              105,102,121,40,68,105,103,101,115,116,44,32,110,111,110,101,44,
              32,83,105,103,110,97,116,117,114,101,44,32,80,117,98,108,105,99,
              75,101,121,41,44]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false}},
  {sep,
   [{text,"-<a name=\"verify_hostname\">verify_hostname</a>"},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"### Verifying a certificate hostname"},null},null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\r## Background"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              " When a client checks a server certificate there are a number of checks available like checks that the certificate is not revoked, not forged or not out-of-date."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [403,84,104,101,114,101,32,97,114,101,32,104,111,119,101,118,
               101,114,32,97,116,116,97,99,107,115,32,116,104,97,116,32,97,
               114,101,32,110,111,116,32,100,101,116,101,99,116,101,100,32,98,
               121,32,116,104,111,115,101,32,99,104,101,99,107,115,46,32,83,
               117,112,112,111,115,101,32,97,32,98,97,100,32,103,117,121,32,
               104,97,115,32,115,117,99,99,101,100,101,100,32,119,105,116,104,
               32,97,32,68,78,83,32,105,110,102,101,99,116,105,111,110,46,32,
               84,104,101,110,32,116,104,101,32,99,108,105,101,110,116,32,99,
               111,117,108,100,32,98,101,108,105,118,101,32,105,116,32,105,
               115,32,99,111,110,110,101,99,116,105,110,103,32,116,111,32,111,
               110,101,32,104,111,115,116,32,98,117,116,32,101,110,100,115,32,
               117,112,32,97,116,32,97,110,111,116,104,101,114,32,98,117,116,
               32,101,118,105,108,32,111,110,101,46,32,84,104,111,117,103,104,
               32,105,116,32,105,115,32,101,118,105,108,44,32,105,116,32,99,
               111,117,108,100,32,104,97,118,101,32,97,32,112,101,114,102,101,
               99,116,108,121,32,108,101,103,97,108,32,99,101,114,116,105,102,
               105,99,97,116,101,33,32,84,104,101,32,99,101,114,116,105,102,
               105,99,97,116,101,32,104,97,115,32,97,32,118,97,108,105,100,32,
               115,105,103,110,97,116,117,114,101,44,32,105,116,32,105,115,32,
               110,111,116,32,114,101,118,111,107,101,100,44,32,116,104,101,
               32,99,101,114,116,105,102,105,99,97,116,101,32,99,104,97,105,
               110,32,105,115,32,110,111,116,32,102,97,107,101,100,32,97,110,
               100,32,104,97,115,32,97,32,116,114,117,115,116,101,100,32,114,
               111,111,116,32,97,110,100,32,115,111,32,111,110,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "XTo detect that the server is not the intended one, the client must additionaly perform a"}],
              0,false},
             {text,
              [25,42,42,104,111,115,116,110,97,109,101,32,118,101,114,105,102,
               105,99,97,116,105,111,110,42,42]},
             {sep,[{text," . This procedure is described in"}],0,false},
             {text,"/[RFC 6125](https://tools.ietf.org/html/rfc6125)"},
             {sep,
              [{text,
                [256,46,32,84,104,101,32,105,100,101,97,32,105,115,32,116,104,
                 97,116,32,116,104,101,32,99,101,114,116,105,102,105,99,97,
                 116,101,32,108,105,115,116,115,32,116,104,101,32,104,111,115,
                 116,110,97,109,101,115,32,105,116,32,99,111,117,108,100,32,
                 98,101,32,102,101,116,99,104,101,100,32,102,114,111,109,46,
                 32,84,104,105,115,32,105,115,32,99,104,101,99,107,101,100,32,
                 98,121,32,116,104,101,32,99,101,114,116,105,102,105,99,97,
                 116,101,32,105,115,115,117,101,114,32,119,104,101,110,32,116,
                 104,101,32,99,101,114,116,105,102,105,99,97,116,101,32,105,
                 115,32,115,105,103,110,101,100,46,32,83,111,32,105,102,32,
                 116,104,101,32,99,101,114,116,105,102,105,99,97,116,101,32,
                 105,115,32,105,115,115,117,101,100,32,98,121,32,97,32,116,
                 114,117,115,116,101,100,32,114,111,111,116,32,116,104,101,32,
                 99,108,105,101,110,116,32,99,111,117,108,100,32,116,114,117,
                 115,116,32,116,104,101,32,104,111,115,116,32,110,97,109,101,
                 115,32,115,105,103,110,101,100,32,105,110,32,105,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "9There is a default hostname matching procedure defined in"}],
              0,false},
             {text,
              "D[RFC 6125, section 6](https://tools.ietf.org/html/rfc6125#section-6)"},
             {sep,
              [{text,"3as well as protocol dependent variations defined in"}],
              0,false},
             {text,
              "E[RFC 6125 appendix B](https://tools.ietf.org/html/rfc6125#appendix-B)"},
             {sep,
              [{text,"). The default procedure is implemented in"}],
              0,false},
             {text,
              "V[public_key:pkix_verify_hostname/2,3](../public_key/public_key#pkix_verify_hostname-2)"},
             {sep,
              [{text,
                "O. It is possible for a client to hook in modified rules using the options list."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "gSome terminology is needed: the certificate presents hostname(s) on which it is valid. Those are called"}],
              0,false},
             {text,
              [17,42,42,80,114,101,115,101,110,116,101,100,32,73,68,115,42,
               42]},
             {sep,
              [{text,
                ">. The hostname(s) the client belives it connects to are called"}],
              0,false},
             {text,
              [17,42,42,82,101,102,101,114,101,110,99,101,32,73,68,115,42,42]},
             {sep,
              [{text,
                [154,46,32,84,104,101,32,109,97,116,99,104,105,110,103,32,114,
                 117,108,101,115,32,97,105,109,115,32,116,111,32,118,101,114,
                 105,102,121,32,116,104,97,116,32,116,104,101,114,101,32,105,
                 115,32,97,116,32,108,101,97,115,116,32,111,110,101,32,111,
                 102,32,116,104,101,32,82,101,102,101,114,101,110,99,101,32,
                 73,68,115,32,116,104,97,116,32,109,97,116,99,104,101,115,32,
                 111,110,101,32,111,102,32,116,104,101,32,80,114,101,115,101,
                 110,116,101,100,32,73,68,115,46,32,73,102,32,110,111,116,44,
                 32,116,104,101,32,118,101,114,105,102,105,99,97,116,105,111,
                 110,32,102,97,105,108,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "=The IDs contains normal fully qualified domain names like e.g"}],
              0,false},
             {text,
              [17,42,102,111,111,46,101,120,97,109,112,108,101,46,99,111,109,
               42]},
             {sep,
              [{text,
                [159,44,32,98,117,116,32,73,80,32,97,100,100,114,101,115,115,
                 101,115,32,97,114,101,32,110,111,116,32,114,101,99,111,109,
                 109,101,110,100,101,100,46,32,84,104,101,32,114,102,99,32,
                 100,101,115,99,114,105,98,101,115,32,119,104,121,32,116,104,
                 105,115,32,105,115,32,110,111,116,32,114,101,99,111,109,109,
                 101,110,100,101,100,32,97,115,32,119,101,108,108,32,97,115,
                 32,115,101,99,117,114,105,116,121,32,99,111,110,115,105,100,
                 101,114,97,116,105,111,110,115,32,97,98,111,117,116,32,104,
                 111,119,32,116,111,32,97,113,117,105,114,101,32,116,104,101,
                 32,82,101,102,101,114,101,110,99,101,32,73,68,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"1Internationalized domain names are not supported."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\e## The verification process"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"1Traditionally the Presented IDs were found in the"}],
              0,false},
             {text,"\t*Subject*"},
             {sep,
              [{text,
                [20,99,101,114,116,105,102,105,99,97,116,101,32,102,105,101,
                 108,100,32,97,115]}],
              0,false},
             {text,[4,42,67,78,42]},
             {sep,
              [{text,
                "Onames. This is still quite common. When printing a certificate they show up as:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "p\n $ openssl x509 -text < cert.pem\n ...\n Subject: C=SE, CN=example.com, CN=*.example.com, O=erlang.org\n ...\n     "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\vThe example"}],0,false},
             {text,"\t*Subject*"},
             {sep,
              [{text,
                [286,102,105,101,108,100,32,104,97,115,32,111,110,101,32,67,
                 44,32,116,119,111,32,67,78,32,97,110,100,32,111,110,101,32,
                 79,32,112,97,114,116,46,32,73,116,32,105,115,32,111,110,108,
                 121,32,116,104,101,32,67,78,32,40,67,111,109,109,111,110,32,
                 78,97,109,101,41,32,116,104,97,116,32,105,115,32,117,115,101,
                 100,32,98,121,32,104,111,115,116,110,97,109,101,32,118,101,
                 114,105,102,105,99,97,116,105,111,110,46,32,84,104,101,32,
                 116,119,111,32,111,116,104,101,114,32,40,67,32,97,110,100,32,
                 79,41,32,105,115,32,110,111,116,32,117,115,101,100,32,104,
                 101,114,101,32,101,118,101,110,32,119,104,101,110,32,116,104,
                 101,121,32,99,111,110,116,97,105,110,32,97,32,100,111,109,97,
                 105,110,32,110,97,109,101,32,108,105,107,101,32,116,104,101,
                 32,79,32,112,97,114,116,46,32,84,104,101,32,67,32,97,110,100,
                 32,79,32,112,97,114,116,115,32,97,114,101,32,100,101,102,105,
                 110,101,100,32,101,108,115,101,119,104,101,114,101,32,97,110,
                 100,32,109,101,97,110,105,110,103,102,117,108,32,111,110,108,
                 121,32,102,111,114,32,111,116,104,101,114,32,102,117,110,99,
                 116,105,111,110,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"$In the example the Presented IDs are"}],0,false},
             {text,"\r*example.com*"},
             {sep,
              [{text,
                [29,97,115,32,119,101,108,108,32,97,115,32,104,111,115,116,
                 110,97,109,101,115,32,109,97,116,99,104,105,110,103]}],
              0,false},
             {text,[15,42,42,46,101,120,97,109,112,108,101,46,99,111,109,42]},
             {sep,[{text,"\r. For example"}],0,false},
             {text,
              [17,42,102,111,111,46,101,120,97,109,112,108,101,46,99,111,109,
               42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [17,42,98,97,114,46,101,120,97,109,112,108,101,46,99,111,109,
               42]},
             {sep,
              [{text,
                [20,98,111,116,104,32,109,97,116,99,104,101,115,32,98,117,116,
                 32,110,111,116]}],
              0,false},
             {text,
              [21,42,102,111,111,46,98,97,114,46,101,120,97,109,112,108,101,
               46,99,111,109,42]},
             {sep,[{text,"\n. The name"}],0,false},
             {text,"\f*erlang.org*"},
             {sep,[{text,"%matches neither since it is not a CN."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"4In case where the Presented IDs are fetched from the"}],
              0,false},
             {text,"\t*Subject*"},
             {sep,
              [{text,
                "ecertificate field, the names may contain wildcard characters. The function handles this as defined in"}],
              0,false},
             {text,
              "N[chapter 6.4.3 in RFC 6125](https://tools.ietf.org/html/rfc6125#section-6.4.3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "UThere may only be one wildcard character and that is in the first label, for example:"}],
              0,false},
             {text,[15,42,42,46,101,120,97,109,112,108,101,46,99,111,109,42]},
             {sep,
              [{text,[14,46,32,84,104,105,115,32,109,97,116,99,104,101,115]}],
              0,false},
             {text,
              [17,42,102,111,111,46,101,120,97,109,112,108,101,46,99,111,109,
               42]},
             {sep,[{text,"\vbut neither"}],0,false},
             {text,"\r*example.com*"},
             {sep,[{text,[3,110,111,114]}],0,false},
             {text,
              [21,42,102,111,111,46,98,97,114,46,101,120,97,109,112,108,101,
               46,99,111,109,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "LThere may be label characters before or/and after the wildcard. For example:"}],
              0,false},
             {text,
              [17,42,97,42,100,46,101,120,97,109,112,108,101,46,99,111,109,
               42]},
             {sep,[{text,[7,109,97,116,99,104,101,115]}],0,false},
             {text,
              [18,42,97,98,99,100,46,101,120,97,109,112,108,101,46,99,111,109,
               42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [16,42,97,100,46,101,120,97,109,112,108,101,46,99,111,109,42]},
             {sep,[{text,"\t, but not"}],0,false},
             {text,
              [19,42,97,98,46,99,100,46,101,120,97,109,112,108,101,46,99,111,
               109,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [311,73,110,32,116,104,101,32,112,114,101,118,105,111,117,115,
                 32,101,120,97,109,112,108,101,32,116,104,101,114,101,32,105,
                 115,32,110,111,32,105,110,100,105,99,97,116,105,111,110,32,
                 111,102,32,119,104,105,99,104,32,112,114,111,116,111,99,111,
                 108,115,32,97,114,101,32,101,120,112,101,99,116,101,100,46,
                 32,83,111,32,97,32,99,108,105,101,110,116,32,104,97,115,32,
                 110,111,32,105,110,100,105,99,97,116,105,111,110,32,111,102,
                 32,119,104,101,116,104,101,114,32,105,116,32,105,115,32,97,
                 32,119,101,98,32,115,101,114,118,101,114,44,32,97,110,32,108,
                 100,97,112,32,115,101,114,118,101,114,32,111,114,32,109,97,
                 121,98,101,32,97,32,115,105,112,32,115,101,114,118,101,114,
                 32,105,116,32,105,115,32,99,111,110,110,101,99,116,101,100,
                 32,116,111,46,32,84,104,101,114,101,32,97,114,101,32,102,105,
                 101,108,100,115,32,105,110,32,116,104,101,32,99,101,114,116,
                 105,102,105,99,97,116,101,32,116,104,97,116,32,99,97,110,32,
                 105,110,100,105,99,97,116,101,32,116,104,105,115,46,32,84,
                 111,32,98,101,32,109,111,114,101,32,101,120,97,99,116,44,32,
                 116,104,101,32,114,102,99,32,105,110,116,114,111,100,117,99,
                 101,115,32,116,104,101,32,117,115,97,103,101,32,111,102,32,
                 116,104,101]}],
              0,false},
             {text,"!*X509v3 Subject Alternative Name*"},
             {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
             {text,
              [19,42,88,53,48,57,118,51,32,101,120,116,101,110,115,105,111,
               110,115,42]},
             {sep,[{text,[6,102,105,101,108,100,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "¤\n $ openssl x509 -text < cert.pem\n ...\n X509v3 extensions:\n     X509v3 Subject Alternative Name:\n         DNS:kb.example.org, URI:https://www.example.org\n ...\n     "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[4,72,101,114,101]}],0,false},
             {text,
              [16,42,107,98,46,101,120,97,109,112,108,101,46,111,114,103,42]},
             {sep,
              [{text,
                [25,115,101,114,118,101,115,32,97,110,121,32,112,114,111,116,
                 111,99,111,108,32,119,104,105,108,101]}],
              0,false},
             {text,
              [17,42,119,119,119,46,101,120,97,109,112,108,101,46,111,114,103,
               42]},
             {sep,
              [{text,
                [29,112,114,101,115,101,110,116,115,32,97,32,115,101,99,117,
                 114,101,32,119,101,98,32,115,101,114,118,101,114,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [25,84,104,101,32,110,101,120,116,32,101,120,97,109,112,108,
                 101,32,104,97,115,32,98,111,116,104]}],
              0,false},
             {text,"\t*Subject*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [24,42,83,117,98,106,101,99,116,32,65,108,116,101,114,110,97,
               116,101,32,78,97,109,101,42]},
             {sep,[{text,"\bpresent:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "è\n $ openssl x509 -text < cert.pem\n ...\n Subject: C=SE, CN=example.com, CN=*.example.com, O=erlang.org\n ...\n X509v3 extensions:\n     X509v3 Subject Alternative Name:\n         DNS:kb.example.org, URI:https://www.example.org\n ...\n     "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?The RFC states that if a certificate defines Reference IDs in a"}],
              0,false},
             {text,
              [24,42,83,117,98,106,101,99,116,32,65,108,116,101,114,110,97,
               116,101,32,78,97,109,101,42]},
             {sep,[{text,"\nfield, the"}],0,false},
             {text,"\t*Subject*"},
             {sep,
              [{text,
                "afield MUST NOT be used for host name checking, even if it contains valid CN names. Therefore only"}],
              0,false},
             {text,
              [16,42,107,98,46,101,120,97,109,112,108,101,46,111,114,103,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [25,42,104,116,116,112,115,58,47,47,119,119,119,46,101,120,97,
               109,112,108,101,46,111,114,103,42]},
             {sep,[{text,"!matches. The match fails both for"}],0,false},
             {text,"\r*example.com*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [17,42,102,111,111,46,101,120,97,109,112,108,101,46,99,111,109,
               42]},
             {sep,
              [{text,
                [23,98,101,99,117,97,115,101,32,116,104,101,121,32,97,114,101,
                 32,105,110,32,116,104,101]}],
              0,false},
             {text,"\t*Subject*"},
             {sep,[{text,"&field which is not checked because the"}],0,false},
             {text,
              [24,42,83,117,98,106,101,99,116,32,65,108,116,101,114,110,97,
               116,101,32,78,97,109,101,42]},
             {sep,
              [{text,
                [17,102,105,101,108,100,32,105,115,32,112,114,101,115,101,110,
                 116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {sep,
     [{text,
       "?<a name=\"verify_hostname_examples\">verify_hostname_examples</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [25,35,35,32,70,117,110,99,116,105,111,110,32,99,97,108,108,32,101,
           120,97,109,112,108,101,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "WOther applications like ssl/tls or https might have options that are passed down to the"}],
                         0,false},
                        {text,"!*public_key:pkix_verify_hostname*"},
                        {sep,
                         [{text,
                           "0. You will probably not have to call it directly"}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [153,83,117,112,112,111,115,101,32,111,117,114,32,99,108,105,
               101,110,116,32,101,120,112,101,99,116,115,32,116,111,32,99,111,
               110,110,101,99,116,32,116,111,32,116,104,101,32,119,101,98,32,
               115,101,114,118,101,114,32,104,116,116,112,115,58,47,47,119,
               119,119,46,101,120,97,109,112,108,101,46,110,101,116,46,32,84,
               104,105,115,32,85,82,73,32,105,115,32,116,104,101,114,101,102,
               111,114,101,32,116,104,101,32,82,101,102,101,114,101,110,99,
               101,32,73,68,115,32,111,102,32,116,104,101,32,99,108,105,101,
               110,116,46,32,84,104,101,32,99,97,108,108,32,119,105,108,108,
               32,98,101,58]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              " \n public_key:pkix_verify_hostname(CertFromHost,\n                                 [{uri_id, \"https://www.example.net\"}\n                                 ]).\n     "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [20,84,104,101,32,99,97,108,108,32,119,105,108,108,32,114,101,
                 116,117,114,110]}],
              0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,
              [{text,
                "udepending on the check. The caller do not need to handle the matching rules in the rfc. The matching will proceed as:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,"\rIf there is a"}],0,false},
           {text,
            [24,42,83,117,98,106,101,99,116,32,65,108,116,101,114,110,97,116,
             101,32,78,97,109,101,42]},
           {sep,[{text,"\nfield, the"}],0,false},
           {text,
            [19,42,123,117,114,105,95,105,100,44,115,116,114,105,110,103,40,
             41,125,42]},
           {sep,
            [{text,",in the function call will be compared to any"}],
            0,false},
           {text,"&*{uniformResourceIdentifier,string()}*"},
           {sep,[{text,"$in the Certificate field. If the two"}],0,false},
           {text,"\v*strings()*"},
           {sep,
            [{text,
              "Hare equal (case insensitive), there is a match. The same applies for any"}],
            0,false},
           {text,
            [19,42,123,100,110,115,95,105,100,44,115,116,114,105,110,103,40,
             41,125,42]},
           {sep,[{text,"&in the call which is compared with all"}],0,false},
           {text,
            [20,42,123,100,78,83,78,97,109,101,44,115,116,114,105,110,103,40,
             41,125,42]},
           {sep,
            [{text,
              [25,105,110,32,116,104,101,32,67,101,114,116,105,102,105,99,97,
               116,101,32,102,105,101,108,100,46]}],
            0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,[14,73,102,32,116,104,101,114,101,32,105,115,32,78,79]}],
            0,false},
           {text,
            [24,42,83,117,98,106,101,99,116,32,65,108,116,101,114,110,97,116,
             101,32,78,97,109,101,42]},
           {sep,[{text,"\nfield, the"}],0,false},
           {text,"\t*Subject*"},
           {sep,
            [{text,
              [26,102,105,101,108,100,32,119,105,108,108,32,98,101,32,99,104,
               101,99,107,101,100,46,32,65,108,108]}],
            0,false},
           {text,[4,42,67,78,42]},
           {sep,[{text,"'names will be compared to all hostnames"}],0,false},
           {text,"\r**extracted**"},
           {sep,[{text,[4,102,114,111,109]}],0,false},
           {text,
            [19,42,123,117,114,105,95,105,100,44,115,116,114,105,110,103,40,
             41,125,42]},
           {sep,[{text,"\band from"}],0,false},
           {text,
            [19,42,123,100,110,115,95,105,100,44,115,116,114,105,110,103,40,
             41,125,42]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"!## Extending the search mechanism"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "WThe caller can use own extraction and matching rules. This is done with the two options"}],
              0,false},
             {text,"\n*fqdn_fun*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\v*match_fun*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{text,"5<a name=\"hostname_extraction\">hostname_extraction</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [22,35,35,32,72,111,115,116,110,97,109,101,32,101,120,116,114,97,
             99,116,105,111,110]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,"\n*fqdn_fun*"},
               {sep,
                [{text,
                  "Åextracts hostnames (Fully Qualified Domain Names) from uri_id or other ReferenceIDs that are not pre-defined in the public_key function. Suppose you have some URI with a very special protocol-part:"}],
                0,false},
               {text,
                [26,42,109,121,115,112,101,99,105,97,108,58,47,47,101,120,97,
                 109,112,108,101,46,99,111,109,34,42]},
               {sep,
                [{text,
                  "`. Since this a non-standard URI there will be no hostname extracted for matching CN-names in the"}],
                0,false},
               {text,"\t*Subject*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "nTo \"teach\" the function how to extract, you can give a fun which replaces the default extraction function. The"}],
                0,false},
               {text,"\n*fqdn_fun*"},
               {sep,
                [{text,"'takes one argument and returns either a"}],
                0,false},
               {text,"\n*string()*"},
               {sep,
                [{text,")to be matched to each CN-name or the atom"}],
                0,false},
               {text,"\t*default*"},
               {sep,
                [{text,
                  "Hwhich will invoke the default fqdn extraction function. The return value"}],
                0,false},
               {text,"\v*undefined*"},
               {sep,
                [{text,"1removes the current URI from the fqdn extraction."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "ý\n ...\n Extract = fun({uri_id, \"myspecial://\"++HostName}) -> HostName;\n              (_Else) -> default\n           end,\n ...\t \n public_key:pkix_verify_hostname(CertFromHost, RefIDs,\n                                 [{fqdn_fun, Extract}])\n ...\n       "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{text,"5<a name=\"redefining_match_op\">redefining_match_op</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"\"## Re-defining the match operation"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "sThe default matching handles dns_id and uri_id. In an uri_id the value is tested for equality with a value from the"}],
                0,false},
               {text,
                [24,42,83,117,98,106,101,99,116,32,65,108,116,101,114,110,97,
                 116,101,32,78,97,109,101,42]},
               {sep,
                [{text,"2. If som other kind of matching is needed, use the"}],
                0,false},
               {text,"\v*match_fun*"},
               {sep,[{text,[7,111,112,116,105,111,110,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,"\v*match_fun*"},
               {sep,
                [{text,"&takes two arguments and returns either"}],
                0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[7,42,102,97,108,115,101,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"\t*default*"},
               {sep,[{text,"\v. The value"}],0,false},
               {text,"\t*default*"},
               {sep,
                [{text,"'will invoke the default match function."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [397,10,32,46,46,46,10,32,77,97,116,99,104,32,61,32,102,117,
                 110,40,123,117,114,105,95,105,100,44,34,109,121,115,112,101,
                 99,105,97,108,58,47,47,34,43,43,65,125,44,10,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,123,117,110,105,102,111,114,109,82,
                 101,115,111,117,114,99,101,73,100,101,110,116,105,102,105,
                 101,114,44,34,109,121,115,112,101,99,105,97,108,58,47,47,34,
                 43,43,66,125,41,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,109,121,95,109,97,116,99,104,40,65,44,66,41,59,10,32,32,
                 32,32,32,32,32,32,32,32,32,32,40,95,82,101,102,73,68,44,32,
                 95,80,114,101,115,101,110,116,101,100,73,68,41,32,45,62,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,100,101,102,97,117,108,
                 116,10,32,32,32,32,32,32,32,32,32,101,110,100,44,10,32,46,46,
                 46,10,32,112,117,98,108,105,99,95,107,101,121,58,112,107,105,
                 120,95,118,101,114,105,102,121,95,104,111,115,116,110,97,109,
                 101,40,67,101,114,116,70,114,111,109,72,111,115,116,44,32,82,
                 101,102,73,68,115,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,91,123,109,97,116,99,104,95,102,117,110,44,32,77,97,116,
                 99,104,125,93,41,44,10,32,46,46,46,10,32,32,32,32,32,32,32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "JIn case of a match operation between a ReferenceID and a CN value from the"}],
                0,false},
               {text,"\t*Subject*"},
               {sep,
                [{text,
                  "yfield, the first argument to the fun is the extracted hostname from the ReferenceID, and the second argument is the tuple"}],
                0,false},
               {text,
                [16,42,123,99,110,44,32,115,116,114,105,110,103,40,41,125,42]},
               {sep,
                [{text,
                  [14,116,97,107,101,110,32,102,114,111,109,32,116,104,101]}],
                0,false},
               {text,"\t*Subject*"},
               {sep,
                [{text,
                  "Xfield. That makes it possible to have separate matching rules for Presented IDs from the"}],
                0,false},
               {text,"\t*Subject*"},
               {sep,
                [{text,
                  [18,102,105,101,108,100,32,97,110,100,32,102,114,111,109,32,
                   116,104,101]}],
                0,false},
               {text,
                [24,42,83,117,98,106,101,99,116,32,65,108,116,101,114,110,97,
                 116,101,32,78,97,109,101,42]},
               {sep,[{text,[6,102,105,101,108,100,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "_The default matching transformes the ascii values in strings to lowercase before comparing. The"}],
                0,false},
               {text,"\v*match_fun*"},
               {sep,
                [{text,
                  "±is however called without any transfomation applied to the strings. The reason is to enable the user to do unforseen handling of the strings where the original format is needed."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [26,35,35,32,34,80,105,110,110,105,110,103,34,32,97,32,67,101,114,
           116,105,102,105,99,97,116,101]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,"/[RFC 6125](https://tools.ietf.org/html/rfc6125)"},
             {sep,[{text,[7,100,101,102,105,110,101,115]}],0,false},
             {text,"\v**pinning**"},
             {sep,[{text,[3,97,115,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ô\"The act of establishing a cached name association between the application service's certificate and one of the client's reference identifiers, despite the fact that none of the presented identifiers matches the given reference identifier. ...\""}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [149,84,104,101,32,112,117,114,112,111,115,101,32,105,115,32,
               116,111,32,104,97,118,101,32,97,32,109,101,99,104,97,110,105,
               115,109,32,102,111,114,32,97,32,104,117,109,97,110,32,116,111,
               32,97,99,99,101,112,116,32,97,110,32,111,116,104,101,114,119,
               105,115,101,32,102,97,117,108,116,121,32,67,101,114,116,105,
               102,105,99,97,116,101,46,32,73,110,32,102,111,114,32,101,120,
               97,109,112,108,101,32,97,32,119,101,98,32,98,114,111,119,115,
               101,114,44,32,121,111,117,32,99,111,117,108,100,32,103,101,116,
               32,97,32,113,117,101,115,116,105,111,110,32,108,105,107,101]}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "|Warning: you wanted to visit the site www.example.com, but the certificate is for shop.example.com. Accept anyway (yes/no)?\""}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"*This could be accomplished with the option"}],
              0,false},
             {text,[15,42,102,97,105,108,95,99,97,108,108,98,97,99,107,42]},
             {sep,
              [{text,
                "8which will be called if the hostname verification fails:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [462,10,32,45,105,110,99,108,117,100,101,95,108,105,98,40,34,
               112,117,98,108,105,99,95,107,101,121,47,105,110,99,108,117,100,
               101,47,112,117,98,108,105,99,95,107,101,121,46,104,114,108,34,
               41,46,32,37,32,82,101,99,111,114,100,32,100,101,102,10,32,46,
               46,46,10,32,70,97,105,108,32,61,32,102,117,110,40,35,39,79,84,
               80,67,101,114,116,105,102,105,99,97,116,101,39,123,125,61,67,
               41,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,97,
               115,101,32,105,110,95,109,121,95,99,97,99,104,101,40,67,41,32,
               111,114,101,108,115,101,32,109,121,95,97,99,99,101,112,116,40,
               67,41,32,111,102,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,116,114,117,101,32,45,62,10,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,101,110,116,
               101,114,95,109,121,95,99,97,99,104,101,40,67,41,44,10,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               116,114,117,101,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,102,97,108,115,101,32,45,62,10,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,102,97,
               108,115,101,10,32,32,32,32,32,32,32,32,32,101,110,100,44,10,32,
               46,46,46,10,32,112,117,98,108,105,99,95,107,101,121,58,112,107,
               105,120,95,118,101,114,105,102,121,95,104,111,115,116,110,97,
               109,101,40,67,101,114,116,70,114,111,109,72,111,115,116,44,32,
               82,101,102,73,68,115,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               91,123,102,97,105,108,95,99,97,108,108,98,97,99,107,44,32,70,
               97,105,108,125,93,41,44,10,32,46,46,46,10,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## SSH Files"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "fSSH typically uses PEM files for private keys but has its own file format for storing public keys. The"}],
           0,false},
          {text,"\f*public_key*"},
          {sep,
           [{text,
             "Eapplication can be used to parse the content of SSH public-key files."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text," ## RFC 4716 SSH Public-Key Files"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "TRFC 4716 SSH files looks confusingly like PEM files, but there are some differences:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "f1> {ok, SshBin} = file:read_file(\"ssh2_rsa_pub\").\n{ok, <<\"---- BEGIN SSH2 PUBLIC KEY ----\\nAAAA\"...>>}"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,84,104,105,115,32,105,115,32,101,113,117,105,118,97,108,
                101,110,116,32,116,111,32,99,97,108,108,105,110,103]}],
             0,false},
            {text,"3*public_key:ssh_decode(SshBin, rfc4716_public_key)*"},
            {sep,[{text,[1,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [137,50,62,32,112,117,98,108,105,99,95,107,101,121,58,115,115,
              104,95,100,101,99,111,100,101,40,83,115,104,66,105,110,44,32,
              112,117,98,108,105,99,95,107,101,121,41,46,10,91,123,35,39,82,
              83,65,80,117,98,108,105,99,75,101,121,39,123,109,111,100,117,
              108,117,115,32,61,32,55,57,52,52,51,48,54,56,53,46,46,46,57,49,
              54,54,51,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,112,117,98,108,105,99,69,120,112,111,110,101,110,116,32,
              61,32,51,53,125,44,32,91,93,125,93]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [28,35,35,32,79,112,101,110,83,83,72,32,80,117,98,108,105,99,45,75,
          101,121,32,70,111,114,109,97,116]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+OpenSSH public-key format looks as follows:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "T1> {ok, SshBin} = file:read_file(\"openssh_dsa_pub\").\n{ok,<<\"ssh-dss AAAAB3Nza\"...>>}"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,84,104,105,115,32,105,115,32,101,113,117,105,118,97,108,
                101,110,116,32,116,111,32,99,97,108,108,105,110,103]}],
             0,false},
            {text,"3*public_key:ssh_decode(SshBin, openssh_public_key)*"},
            {sep,[{text,[1,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [273,50,62,32,32,112,117,98,108,105,99,95,107,101,121,58,115,115,
              104,95,100,101,99,111,100,101,40,83,115,104,66,105,110,44,32,
              112,117,98,108,105,99,95,107,101,121,41,46,10,91,123,123,49,53,
              54,52,50,54,57,50,46,46,46,54,57,52,50,56,48,55,50,53,44,10,32,
              32,32,35,39,68,115,115,45,80,97,114,109,115,39,123,112,32,61,32,
              49,55,50,57,49,50,55,51,57,51,54,46,46,46,54,57,54,49,50,51,50,
              50,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,113,
              32,61,32,49,50,53,53,54,50,54,53,57,48,49,55,57,54,54,53,56,49,
              55,50,57,53,52,55,53,54,53,52,50,48,52,51,55,49,56,51,51,55,51,
              53,55,48,54,48,48,49,56,53,51,44,10,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,103,32,61,32,49,48,52,53,52,50,49,49,49,57,
              54,46,46,46,52,56,48,51,51,56,54,52,53,125,125,44,10,32,32,91,
              123,99,111,109,109,101,110,116,44,34,100,104,111,112,115,111,
              110,64,86,77,85,98,117,110,116,117,45,68,83,72,34,125,93,125,
              93]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [31,35,35,32,75,110,111,119,110,32,72,111,115,116,115,32,45,32,79,
          112,101,110,83,83,72,32,70,111,114,109,97,116]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,".Known hosts - OpenSSH format looks as follows:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "k1> {ok, SshBin} = file:read_file(\"known_hosts\").\n{ok,<<\"hostname.domain.com,192.168.0.1 ssh-rsa AAAAB...>>}"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [140,82,101,116,117,114,110,115,32,97,32,108,105,115,116,32,111,
              102,32,112,117,98,108,105,99,32,107,101,121,115,32,97,110,100,
              32,116,104,101,105,114,32,114,101,108,97,116,101,100,32,97,116,
              116,114,105,98,117,116,101,115,46,32,69,97,99,104,32,112,97,105,
              114,32,111,102,32,107,101,121,32,97,110,100,32,97,116,116,114,
              105,98,117,116,101,32,99,111,114,114,101,115,112,111,110,100,
              115,32,116,111,32,111,110,101,32,101,110,116,114,121,32,105,110,
              32,116,104,101,32,107,110,111,119,110,32,104,111,115,116,115,32,
              102,105,108,101,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [402,50,62,32,32,112,117,98,108,105,99,95,107,101,121,58,115,115,
              104,95,100,101,99,111,100,101,40,83,115,104,66,105,110,44,32,
              107,110,111,119,110,95,104,111,115,116,115,41,46,10,91,123,35,
              39,82,83,65,80,117,98,108,105,99,75,101,121,39,123,109,111,100,
              117,108,117,115,32,61,32,49,52,57,56,57,55,57,52,54,48,52,48,56,
              46,46,46,55,50,55,50,49,54,57,57,44,10,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,112,117,98,108,105,99,69,120,112,
              111,110,101,110,116,32,61,32,51,53,125,44,10,32,32,91,123,104,
              111,115,116,110,97,109,101,115,44,91,34,104,111,115,116,110,97,
              109,101,46,100,111,109,97,105,110,46,99,111,109,34,44,34,49,57,
              50,46,49,54,56,46,48,46,49,34,93,125,93,125,44,10,32,123,35,39,
              82,83,65,80,117,98,108,105,99,75,101,121,39,123,109,111,100,117,
              108,117,115,32,61,32,49,52,57,56,57,55,57,52,54,48,52,48,56,56,
              46,46,46,50,55,50,49,54,57,57,44,10,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,112,117,98,108,105,99,69,120,112,111,
              110,101,110,116,32,61,32,51,53,125,44,10,32,32,91,123,99,111,
              109,109,101,110,116,44,34,102,111,111,64,98,97,114,46,99,111,
              109,34,125,44,10,32,32,32,123,104,111,115,116,110,97,109,101,
              115,44,91,34,124,49,124,66,87,79,53,113,68,120,107,47,99,70,72,
              48,119,97,48,53,74,76,100,72,110,43,106,54,120,81,61,124,114,88,
              81,118,73,120,104,53,99,68,68,51,67,52,51,107,53,68,80,68,97,
              109,97,119,86,78,65,61,34,93,125,93,125,93]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"### Authorized Keys - OpenSSH Format"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"2Authorized keys - OpenSSH format looks as follows:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "y1> {ok, SshBin} = file:read_file(\"auth_keys\").\n{ok, <<\"command=\\\"dump /home\\\",no-pty,no-port-forwarding ssh-rsa AAA...>>}"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [143,82,101,116,117,114,110,115,32,97,32,108,105,115,116,32,111,
              102,32,112,117,98,108,105,99,32,107,101,121,115,32,97,110,100,
              32,116,104,101,105,114,32,114,101,108,97,116,101,100,32,97,116,
              116,114,105,98,117,116,101,115,46,32,69,97,99,104,32,112,97,105,
              114,32,111,102,32,107,101,121,32,97,110,100,32,97,116,116,114,
              105,98,117,116,101,32,99,111,114,114,101,115,112,111,110,100,
              115,32,116,111,32,111,110,101,32,101,110,116,114,121,32,105,110,
              32,116,104,101,32,97,117,116,104,111,114,105,122,101,100,32,107,
              101,121,32,102,105,108,101,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [522,50,62,32,112,117,98,108,105,99,95,107,101,121,58,115,115,
              104,95,100,101,99,111,100,101,40,83,115,104,66,105,110,44,32,97,
              117,116,104,95,107,101,121,115,41,46,10,91,123,35,39,82,83,65,
              80,117,98,108,105,99,75,101,121,39,123,109,111,100,117,108,117,
              115,32,61,32,55,57,52,52,51,48,54,56,53,46,46,46,54,57,49,54,54,
              51,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              112,117,98,108,105,99,69,120,112,111,110,101,110,116,32,61,32,
              51,53,125,44,10,32,32,91,123,99,111,109,109,101,110,116,44,34,
              100,104,111,112,115,111,110,64,86,77,85,98,117,110,116,117,45,
              68,83,72,34,125,44,10,32,32,32,123,111,112,116,105,111,110,115,
              44,91,34,99,111,109,109,97,110,100,61,92,34,100,117,109,112,47,
              104,111,109,101,92,34,34,44,34,110,111,45,112,116,121,34,44,10,
              32,32,32,32,32,32,32,32,32,32,32,32,32,34,110,111,45,112,111,
              114,116,45,102,111,114,119,97,114,100,105,110,103,34,93,125,93,
              125,44,10,32,123,123,49,53,54,52,50,54,57,50,53,56,52,57,49,46,
              46,46,54,48,55,54,57,52,50,56,48,55,50,53,44,10,32,32,32,35,39,
              68,115,115,45,80,97,114,109,115,39,123,112,32,61,32,49,55,50,57,
              49,50,55,51,57,51,54,49,56,53,46,46,46,55,54,51,54,57,54,49,50,
              51,50,50,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,113,32,61,32,49,50,53,53,54,50,54,53,57,48,49,55,57,54,54,53,
              56,49,55,50,57,53,52,55,53,54,53,52,50,48,52,51,55,49,56,51,51,
              55,51,53,55,48,54,48,48,49,56,53,51,44,10,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,103,32,61,32,49,48,52,53,52,50,49,49,
              49,57,53,55,48,53,46,46,46,54,48,53,49,49,48,51,57,53,57,48,48,
              55,54,55,56,48,57,57,57,48,52,54,52,56,48,51,51,56,54,52,53,125,
              125,44,10,32,32,91,123,99,111,109,109,101,110,116,44,34,100,104,
              111,112,115,111,110,64,86,77,85,98,117,110,116,117,45,68,83,72,
              34,125,93,125,93]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,",## Creating an SSH File from Public-Key Data"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,73,102,32,121,111,117,32,103,111,116,32,97,32,112,117,98,
                108,105,99,32,107,101,121]}],
             0,false},
            {text,"\b*PubKey*"},
            {sep,[{text," and a related list of attributes"}],0,false},
            {text,"\f*Attributes*"},
            {sep,
             [{text,[14,97,115,32,114,101,116,117,114,110,101,100,32,98,121]}],
             0,false},
            {text,[14,42,115,115,104,95,100,101,99,111,100,101,47,50,42]},
            {sep,
             [{text,"-, you can create a new SSH file, for example:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [143,78,62,32,83,115,104,66,105,110,32,61,32,112,117,98,108,105,
              99,95,107,101,121,58,115,115,104,95,101,110,99,111,100,101,40,
              91,123,80,117,98,75,101,121,44,32,65,116,116,114,105,98,117,116,
              101,115,125,93,44,32,111,112,101,110,115,115,104,95,112,117,98,
              108,105,99,95,107,101,121,41,44,10,60,60,34,115,115,104,45,114,
              115,97,32,34,46,46,46,62,62,10,78,43,49,62,32,102,105,108,101,
              58,119,114,105,116,101,95,102,105,108,101,40,34,105,100,95,114,
              115,97,46,112,117,98,34,44,32,83,115,104,66,105,110,41,46,10,
              111,107]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false}],
  0,false}}
