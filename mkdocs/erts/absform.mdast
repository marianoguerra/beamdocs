{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {text,
                  [21,35,32,84,104,101,32,65,98,115,116,114,97,99,116,32,70,
                   111,114,109,97,116]},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [138,84,104,105,115,32,115,101,99,116,105,111,110,32,
                         100,101,115,99,114,105,98,101,115,32,116,104,101,32,
                         115,116,97,110,100,97,114,100,32,114,101,112,114,101,
                         115,101,110,116,97,116,105,111,110,32,111,102,32,112,
                         97,114,115,101,32,116,114,101,101,115,32,102,111,114,
                         32,69,114,108,97,110,103,32,112,114,111,103,114,97,
                         109,115,32,97,115,32,69,114,108,97,110,103,32,116,
                         101,114,109,115,46,32,84,104,105,115,32,114,101,112,
                         114,101,115,101,110,116,97,116,105,111,110,32,105,
                         115,32,107,110,111,119,110,32,97,115,32,116,104,
                         101]}],
                      0,false},
                     {text,
                      [19,42,42,97,98,115,116,114,97,99,116,32,102,111,114,
                       109,97,116,42,42]},
                     {sep,
                      [{text,
                        "-. Functions dealing with such parse trees are"}],
                      0,false},
                     {text,
                      "7[compiler/compile#forms/1](../compiler/compile#forms/1)"},
                     {sep,
                      [{text,"'and functions in the following modules:"}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {sep,
                   [{text,[1,42]},
                    {text,
                     [19,91,115,116,100,108,105,98,47,101,112,112,93,40,46,47,
                      101,112,112,41]}],
                   0,false},
                  {sep,
                   [{text,[1,42]},
                    {text,
                     [29,91,115,116,100,108,105,98,47,101,114,108,95,101,118,
                      97,108,93,40,46,47,101,114,108,95,101,118,97,108,41]}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {text,
                    [29,91,115,116,100,108,105,98,47,101,114,108,95,108,105,
                     110,116,93,40,46,47,101,114,108,95,108,105,110,116,41]}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {text,
                   [31,91,115,116,100,108,105,98,47,101,114,108,95,112,97,114,
                    115,101,93,40,46,47,101,114,108,95,112,97,114,115,101,
                    41]}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {text,
                  [25,91,115,116,100,108,105,98,47,101,114,108,95,112,112,93,
                   40,46,47,101,114,108,95,112,112,41]}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {text,
                 [17,91,115,116,100,108,105,98,47,105,111,93,40,46,47,105,111,
                  41]}],
               0,false}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "MThe functions are also used as input and output for parse transforms, see the"}],
                    0,false},
                   {text,
                    [29,91,99,111,109,112,105,108,101,114,47,99,111,109,112,
                     105,108,101,93,40,46,47,99,111,109,112,105,108,101,41]},
                   {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [19,87,101,32,117,115,101,32,116,104,101,32,102,117,110,
                      99,116,105,111,110]}],
                   0,false},
                  {text,[5,42,82,101,112,42]},
                  {sep,
                   [{text,
                     "5to denote the mapping from an Erlang source construct"}],
                   0,false},
                  {text,[3,42,67,42]},
                  {sep,
                   [{text,"%to its abstract format representation"}],
                   0,false},
                  {text,[3,42,82,42]},
                  {sep,[{text,"\v, and write"}],0,false},
                  {text,"\f*R = Rep(C)*"},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\bThe word"}],0,false},
                 {text,[6,42,76,73,78,69,42]},
                 {sep,
                  [{text,
                    [146,105,110,32,116,104,105,115,32,115,101,99,116,105,111,
                     110,32,114,101,112,114,101,115,101,110,116,115,32,97,110,
                     32,105,110,116,101,103,101,114,44,32,97,110,100,32,100,
                     101,110,111,116,101,115,32,116,104,101,32,110,117,109,98,
                     101,114,32,111,102,32,116,104,101,32,108,105,110,101,32,
                     105,110,32,116,104,101,32,115,111,117,114,99,101,32,102,
                     105,108,101,32,119,104,101,114,101,32,116,104,101,32,99,
                     111,110,115,116,114,117,99,116,105,111,110,32,111,99,99,
                     117,114,114,101,100,46,32,83,101,118,101,114,97,108,32,
                     105,110,115,116,97,110,99,101,115,32,111,102]}],
                  0,false},
                 {text,[6,42,76,73,78,69,42]},
                 {sep,
                  [{text,
                    "4in the same construction can denote different lines."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "Ã–As operators are not terms in their own right, when operators are mentioned below, the representation of an operator is to be taken to be the atom with a printname consisting of the same characters as the operator."}],
               0,false}],
             0,true},
            null},
           null}}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text," ## Module Declarations and Forms"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "kA module declaration consists of a sequence of forms, which are either function declarations or attributes."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{sep,
                         [{text,
                           "4If D is a module declaration consisting of the forms"}],
                         0,false},
                        {text,[5,42,70,95,49,42]},
                        {sep,[{text,[6,44,32,46,46,46,44]}],0,false},
                        {text,[5,42,70,95,107,42]},
                        {sep,
                         [{text,
                           [15,44,32,116,104,101,110,32,82,101,112,40,68,41,
                            32,61]}],
                         0,false},
                        {text,"\e*[Rep(F_1), ..., Rep(F_k)]*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,false},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{sep,
                         [{text,
                           [20,73,102,32,70,32,105,115,32,97,110,32,97,116,
                            116,114,105,98,117,116,101]}],
                         0,false},
                        {text,"&*-export([Fun_1/A_1, ..., Fun_k/A_k])*"},
                        {sep,
                         [{text,
                           [15,44,32,116,104,101,110,32,82,101,112,40,70,41,
                            32,61]}],
                         0,false},
                        {text,
                         "9*{attribute,LINE,export,[{Fun_1,A_1}, ..., {Fun_k,A_k}]}*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,
                        [{text,
                          [20,73,102,32,70,32,105,115,32,97,110,32,97,116,116,
                           114,105,98,117,116,101]}],
                        0,false},
                       {text,"**-import(Mod,[Fun_1/A_1, ..., Fun_k/A_k])*"},
                       {sep,
                        [{text,
                          [15,44,32,116,104,101,110,32,82,101,112,40,70,41,32,
                           61]}],
                        0,false},
                       {text,
                        "?*{attribute,LINE,import,{Mod,[{Fun_1,A_1}, ..., {Fun_k,A_k}]}}*"},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{sep,
                       [{text,
                         [20,73,102,32,70,32,105,115,32,97,110,32,97,116,116,
                          114,105,98,117,116,101]}],
                       0,false},
                      {text,
                       [14,42,45,109,111,100,117,108,101,40,77,111,100,41,42]},
                      {sep,
                       [{text,
                         [15,44,32,116,104,101,110,32,82,101,112,40,70,41,32,
                          61]}],
                       0,false},
                      {text,
                       [29,42,123,97,116,116,114,105,98,117,116,101,44,76,73,
                        78,69,44,109,111,100,117,108,101,44,77,111,100,125,
                        42]},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{sep,
                      [{text,
                        [20,73,102,32,70,32,105,115,32,97,110,32,97,116,116,
                         114,105,98,117,116,101]}],
                      0,false},
                     {text,
                      [18,42,45,102,105,108,101,40,70,105,108,101,44,76,105,
                       110,101,41,42]},
                     {sep,
                      [{text,
                        [15,44,32,116,104,101,110,32,82,101,112,40,70,41,32,
                         61]}],
                      0,false},
                     {text,"#*{attribute,LINE,file,{File,Line}}*"},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,
                     [{text,
                       [30,73,102,32,70,32,105,115,32,97,32,102,117,110,99,
                        116,105,111,110,32,100,101,99,108,97,114,97,116,105,
                        111,110]}],
                     0,false},
                    {text,
                     [29,42,78,97,109,101,32,70,99,95,49,32,59,32,46,46,46,32,
                      59,32,78,97,109,101,32,70,99,95,107,42]},
                    {sep,[{text,"\f, where each"}],0,false},
                    {text,[6,42,70,99,95,105,42]},
                    {sep,
                     [{text,
                       "?is a function clause with a pattern sequence of the same length"}],
                     0,false},
                    {text,[7,42,65,114,105,116,121,42]},
                    {sep,
                     [{text,
                       [15,44,32,116,104,101,110,32,82,101,112,40,70,41,32,
                        61]}],
                     0,false},
                    {text,
                     "7*{function,LINE,Name,Arity,[Rep(Fc_1), ...,Rep(Fc_k)]}*"},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,[{text," If F is a function specification"}],0,false},
                   {text,
                    [28,42,45,83,112,101,99,32,78,97,109,101,32,70,116,95,49,
                     59,32,46,46,46,59,32,70,116,95,107,42]},
                   {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                   {text,[6,42,83,112,101,99,42]},
                   {sep,
                    [{text,
                      [18,105,115,32,101,105,116,104,101,114,32,116,104,101,
                       32,97,116,111,109]}],
                    0,false},
                   {text,[6,42,115,112,101,99,42]},
                   {sep,[{text,"\vor the atom"}],0,false},
                   {text,"\n*callback*"},
                   {sep,[{text,"\n, and each"}],0,false},
                   {text,[6,42,70,116,95,105,42]},
                   {sep,
                    [{text,
                      "Tis a possibly constrained function type with an argument sequence of the same length"}],
                    0,false},
                   {text,[7,42,65,114,105,116,121,42]},
                   {sep,
                    [{text,
                      [15,44,32,116,104,101,110,32,82,101,112,40,70,41,32,
                       61]}],
                    0,false},
                   {text,
                    "B*{attribute,Line,Spec,{{Name,Arity},[Rep(Ft_1), ..., Rep(Ft_k)]}}*"},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text," If F is a function specification"}],0,false},
                  {text," *-spec Mod:Name Ft_1; ...; Ft_k*"},
                  {sep,[{text,"\f, where each"}],0,false},
                  {text,[6,42,70,116,95,105,42]},
                  {sep,
                   [{text,
                     "Tis a possibly constrained function type with an argument sequence of the same length"}],
                   0,false},
                  {text,[7,42,65,114,105,116,121,42]},
                  {sep,
                   [{text,
                     [15,44,32,116,104,101,110,32,82,101,112,40,70,41,32,61]}],
                   0,false},
                  {text,
                   "F*{attribute,Line,spec,{{Mod,Name,Arity},[Rep(Ft_1), ..., Rep(Ft_k)]}}*"},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,
                    [28,73,102,32,70,32,105,115,32,97,32,114,101,99,111,114,
                     100,32,100,101,99,108,97,114,97,116,105,111,110]}],
                  0,false},
                 {text,
                  [31,42,45,114,101,99,111,114,100,40,78,97,109,101,44,123,86,
                   95,49,44,32,46,46,46,44,32,86,95,107,125,41,42]},
                 {sep,[{text,"\f, where each"}],0,false},
                 {text,[5,42,86,95,105,42]},
                 {sep,[{text," is a record field, then Rep(F) ="}],0,false},
                 {text,
                  ":*{attribute,LINE,record,{Name,[Rep(V_1), ..., Rep(V_k)]}}*"},
                 {sep,
                  [{text,
                    [24,46,32,70,111,114,32,82,101,112,40,86,41,44,32,115,101,
                     101,32,98,101,108,111,119,46]}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   [26,73,102,32,70,32,105,115,32,97,32,116,121,112,101,32,
                    100,101,99,108,97,114,97,116,105,111,110]}],
                 0,false},
                {text," *-Type Name(V_1, ..., V_k) :: T*"},
                {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                {text,[6,42,84,121,112,101,42]},
                {sep,
                 [{text,
                   [18,105,115,32,101,105,116,104,101,114,32,116,104,101,32,
                    97,116,111,109]}],
                 0,false},
                {text,[6,42,116,121,112,101,42]},
                {sep,[{text,"\vor the atom"}],0,false},
                {text,"\b*opaque*"},
                {sep,[{text,[6,44,32,101,97,99,104]}],0,false},
                {text,[5,42,86,95,105,42]},
                {sep,
                 [{text,
                   [18,105,115,32,97,32,118,97,114,105,97,98,108,101,44,32,97,
                    110,100]}],
                 0,false},
                {text,[3,42,84,42]},
                {sep,
                 [{text,
                   [24,105,115,32,97,32,116,121,112,101,44,32,116,104,101,110,
                    32,82,101,112,40,70,41,32,61]}],
                 0,false},
                {text,
                 "?*{attribute,LINE,Type,{Name,Rep(T),[Rep(V_1), ..., Rep(V_k)]}}*"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [24,73,102,32,70,32,105,115,32,97,32,119,105,108,100,32,97,
                   116,116,114,105,98,117,116,101]}],
                0,false},
               {text,[7,42,45,65,40,84,41,42]},
               {sep,
                [{text,
                  [15,44,32,116,104,101,110,32,82,101,112,40,70,41,32,61]}],
                0,false},
               {text,
                [22,42,123,97,116,116,114,105,98,117,116,101,44,76,73,78,69,
                 44,65,44,84,125,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,false}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {text,
                [16,35,35,32,82,101,99,111,114,100,32,70,105,101,108,100,115]},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "xEach field in a record declaration can have an optional, explicit, default initializer expression, and an optional type."}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,
              {above,
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,[{text,[7,73,102,32,86,32,105,115]}],0,false},
                   {text,[3,42,65,42]},
                   {sep,
                    [{text,
                      [15,44,32,116,104,101,110,32,82,101,112,40,86,41,32,
                       61]}],
                    0,false},
                   {text,
                    [28,42,123,114,101,99,111,114,100,95,102,105,101,108,100,
                     44,76,73,78,69,44,82,101,112,40,65,41,125,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,false},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,[{text,[7,73,102,32,86,32,105,115]}],0,false},
                   {text,[7,42,65,32,61,32,69,42]},
                   {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                   {text,[3,42,69,42]},
                   {sep,
                    [{text,
                      [31,105,115,32,97,110,32,101,120,112,114,101,115,115,
                       105,111,110,44,32,116,104,101,110,32,82,101,112,40,86,
                       41,32,61]}],
                    0,false},
                   {text,"#*{record_field,LINE,Rep(A),Rep(E)}*"},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,[7,73,102,32,86,32,105,115]}],0,false},
                  {text,"\b*A :: T*"},
                  {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                  {text,[3,42,84,42]},
                  {sep,
                   [{text,
                     [24,105,115,32,97,32,116,121,112,101,44,32,116,104,101,
                      110,32,82,101,112,40,86,41,32,61]}],
                   0,false},
                  {text,
                   "8*{typed_record_field,{record_field,LINE,Rep(A)},Rep(T)}*"},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,[7,73,102,32,86,32,105,115]}],0,false},
                 {text,"\f*A = E :: T*"},
                 {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                 {text,[3,42,69,42]},
                 {sep,
                  [{text,
                    [20,105,115,32,97,110,32,101,120,112,114,101,115,115,105,
                     111,110,32,97,110,100]}],
                  0,false},
                 {text,[3,42,84,42]},
                 {sep,
                  [{text,
                    [24,105,115,32,97,32,116,121,112,101,44,32,116,104,101,
                     110,32,82,101,112,40,86,41,32,61]}],
                  0,false},
                 {text,
                  "?*{typed_record_field,{record_field,LINE,Rep(A),Rep(E)},Rep(T)}*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,false}}],
           0,false},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {text,"1## Representation of Parse Errors and End-of-File"},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "wIn addition to the representations of forms, the list that represents a module declaration (as returned by functions in"}],
                    0,false},
                   {text,
                    [19,91,115,116,100,108,105,98,47,101,112,112,93,40,46,47,
                     101,112,112,41]},
                   {sep,[{text,[3,97,110,100]}],0,false},
                   {text,
                    [31,91,115,116,100,108,105,98,47,101,114,108,95,112,97,
                     114,115,101,93,40,46,47,101,114,108,95,112,97,114,115,
                     101,41]},
                   {sep,
                    [{text,
                      [28,41,32,99,97,110,32,99,111,110,116,97,105,110,32,116,
                       104,101,32,102,111,108,108,111,119,105,110,103,58]}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,[6,84,117,112,108,101,115]}],0,false},
                 {text,"\v*{error,E}*"},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,"\r*{warning,W}*"},
                 {sep,
                  [{text,
                    "6, denoting syntactically incorrect forms and warnings."}],
                  0,false}],
                0,false}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [16,42,123,101,111,102,44,76,79,67,65,84,73,79,78,125,42]},
                 {sep,
                  [{text,
                    "X, denoting an end-of-stream encountered before a complete form had been parsed. The word"}],
                  0,false},
                 {text,"\n*LOCATION*"},
                 {sep,
                  [{text,
                    "Rrepresents an integer, and denotes the number of the last line in the source file."}],
                  0,false}],
                0,false}],
              0,false}}],
           0,false}],
         0,false}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [18,35,35,32,65,116,111,109,105,99,32,76,105,116,101,114,97,108,
              115]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "tThere are five kinds of atomic literals, which are represented in the same way in patterns, expressions, and guards:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {above,
            {above,
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,"&If L is an atom literal, then Rep(L) ="}],
                  0,false},
                 {text,[15,42,123,97,116,111,109,44,76,73,78,69,44,76,125,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,"*If L is a character literal, then Rep(L) ="}],
                  0,false},
                 {text,[15,42,123,99,104,97,114,44,76,73,78,69,44,76,125,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,"&If L is a float literal, then Rep(L) ="}],
                 0,false},
                {text,
                 [16,42,123,102,108,111,97,116,44,76,73,78,69,44,76,125,42]},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,")If L is an integer literal, then Rep(L) ="}],
                0,false},
               {text,
                [18,42,123,105,110,116,101,103,101,114,44,76,73,78,69,44,76,
                 125,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 "5If L is a string literal consisting of the characters"}],
               0,false},
              {text,[5,42,67,95,49,42]},
              {sep,[{text,[6,44,32,46,46,46,44]}],0,false},
              {text,[5,42,67,95,107,42]},
              {sep,
               [{text,
                 [15,44,32,116,104,101,110,32,82,101,112,40,76,41,32,61]}],
               0,false},
              {text,
               [31,42,123,115,116,114,105,110,103,44,76,73,78,69,44,91,67,95,
                49,44,32,46,46,46,44,32,67,95,107,93,125,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 [135,78,111,116,105,99,101,32,116,104,97,116,32,110,101,103,
                  97,116,105,118,101,32,105,110,116,101,103,101,114,32,97,110,
                  100,32,102,108,111,97,116,32,108,105,116,101,114,97,108,115,
                  32,100,111,32,110,111,116,32,111,99,99,117,114,32,97,115,32,
                  115,117,99,104,59,32,116,104,101,121,32,97,114,101,32,112,
                  97,114,115,101,100,32,97,115,32,97,110,32,97,112,112,108,
                  105,99,97,116,105,111,110,32,111,102,32,116,104,101,32,117,
                  110,97,114,121,32,110,101,103,97,116,105,111,110,32,111,112,
                  101,114,97,116,111,114,46]}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\v## Patterns"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [31,73,102,32,80,115,32,105,115,32,97,32,115,101,113,117,
                   101,110,99,101,32,111,102,32,112,97,116,116,101,114,110,
                   115]}],
                0,false},
               {text,[15,42,80,95,49,44,32,46,46,46,44,32,80,95,107,42]},
               {sep,
                [{text,
                  [16,44,32,116,104,101,110,32,82,101,112,40,80,115,41,32,
                   61]}],
                0,false},
               {text,"\e*[Rep(P_1), ..., Rep(P_k)]*"},
               {sep,
                [{text,
                  "E. Such sequences occur as the list of arguments to a function or fun."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"/Individual patterns are represented as follows:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{sep,
                          [{text,
                            [25,73,102,32,80,32,105,115,32,97,110,32,97,116,
                             111,109,105,99,32,108,105,116,101,114,97,108]}],
                          0,false},
                         {text,[3,42,76,42]},
                         {sep,
                          [{text,
                            [23,44,32,116,104,101,110,32,82,101,112,40,80,41,
                             32,61,32,82,101,112,40,76,41,46]}],
                          0,false}],
                        0,false}],
                      0,false},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{sep,
                          [{text,"\eIf P is a bitstring pattern"}],
                          0,false},
                         {text,
                          "-*<<P_1:Size_1/TSL_1, ..., P_k:Size_k/TSL_k>>*"},
                         {sep,[{text,"\f, where each"}],0,false},
                         {text,"\b*Size_i*"},
                         {sep,
                          [{text,
                            ">is an expression that can be evaluated to an integer, and each"}],
                          0,false},
                         {text,[7,42,84,83,76,95,105,42]},
                         {sep,
                          [{text,"(is a type specificer list, then Rep(P) ="}],
                          0,false},
                         {text,
                          "z*{bin,LINE,[{bin_element,LINE,Rep(P_1),Rep(Size_1),Rep(TSL_1)}, ..., {bin_element,LINE,Rep(P_k),Rep(Size_k),Rep(TSL_k)}]}*"},
                         {sep,
                          [{text,"%. For Rep(TSL), see below. An omitted"}],
                          0,false},
                         {text,"\b*Size_i*"},
                         {sep,
                          [{text,
                            [17,105,115,32,114,101,112,114,101,115,101,110,
                             116,101,100,32,98,121]}],
                          0,false},
                         {text,"\t*default*"},
                         {sep,[{text,"\f. An omitted"}],0,false},
                         {text,[7,42,84,83,76,95,105,42]},
                         {sep,
                          [{text,
                            [17,105,115,32,114,101,112,114,101,115,101,110,
                             116,101,100,32,98,121]}],
                          0,false},
                         {text,"\t*default*"},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{sep,
                         [{text,
                           [26,73,102,32,80,32,105,115,32,97,32,99,111,109,
                            112,111,117,110,100,32,112,97,116,116,101,114,
                            110]}],
                         0,false},
                        {text,"\v*P_1 = P_2*"},
                        {sep,
                         [{text,
                           [15,44,32,116,104,101,110,32,82,101,112,40,80,41,
                            32,61]}],
                         0,false},
                        {text," *{match,LINE,Rep(P_1),Rep(P_2)}*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,
                        [{text,
                          [22,73,102,32,80,32,105,115,32,97,32,99,111,110,115,
                           32,112,97,116,116,101,114,110]}],
                        0,false},
                       {text,"\r*[P_h | P_t]*"},
                       {sep,
                        [{text,
                          [15,44,32,116,104,101,110,32,82,101,112,40,80,41,32,
                           61]}],
                        0,false},
                       {text,
                        [31,42,123,99,111,110,115,44,76,73,78,69,44,82,101,
                         112,40,80,95,104,41,44,82,101,112,40,80,95,116,41,
                         125,42]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{sep,
                       [{text,
                         [21,73,102,32,80,32,105,115,32,97,32,109,97,112,32,
                          112,97,116,116,101,114,110]}],
                       0,false},
                      {text,
                       [18,42,35,123,65,95,49,44,32,46,46,46,44,32,65,95,107,
                        125,42]},
                      {sep,[{text,"\f, where each"}],0,false},
                      {text,[5,42,65,95,105,42]},
                      {sep,
                       [{text,
                         [17,105,115,32,97,110,32,97,115,115,111,99,105,97,
                          116,105,111,110]}],
                       0,false},
                      {text,
                       [16,42,80,95,105,95,49,32,58,61,32,80,95,105,95,50,42]},
                      {sep,
                       [{text,
                         [15,44,32,116,104,101,110,32,82,101,112,40,80,41,32,
                          61]}],
                       0,false},
                      {text,"&*{map,LINE,[Rep(A_1), ..., Rep(A_k)]}*"},
                      {sep,
                       [{text,
                         [24,46,32,70,111,114,32,82,101,112,40,65,41,44,32,
                          115,101,101,32,98,101,108,111,119,46]}],
                       0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{sep,
                      [{text,
                        [21,73,102,32,80,32,105,115,32,97,32,110,105,108,32,
                         112,97,116,116,101,114,110]}],
                      0,false},
                     {text,[4,42,91,93,42]},
                     {sep,
                      [{text,
                        [15,44,32,116,104,101,110,32,82,101,112,40,80,41,32,
                         61]}],
                      0,false},
                     {text,"\f*{nil,LINE}*"},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,[{text,"\eIf P is an operator pattern"}],0,false},
                    {text,"\f*P_1 Op P_2*"},
                    {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                    {text,[4,42,79,112,42]},
                    {sep,
                     [{text,
                       "5is a binary operator (this is either an occurrence of"}],
                     0,false},
                    {text,[4,42,43,43,42]},
                    {sep,
                     [{text,
                       [146,97,112,112,108,105,101,100,32,116,111,32,97,32,
                        108,105,116,101,114,97,108,32,115,116,114,105,110,103,
                        32,111,114,32,99,104,97,114,97,99,116,101,114,32,108,
                        105,115,116,44,32,111,114,32,97,110,32,111,99,99,117,
                        114,114,101,110,99,101,32,111,102,32,97,110,32,101,
                        120,112,114,101,115,115,105,111,110,32,116,104,97,116,
                        32,99,97,110,32,98,101,32,101,118,97,108,117,97,116,
                        101,100,32,116,111,32,97,32,110,117,109,98,101,114,32,
                        97,116,32,99,111,109,112,105,108,101,32,116,105,109,
                        101,41,44,32,116,104,101,110,32,82,101,112,40,80,41,
                        32,61]}],
                     0,false},
                    {text," *{op,LINE,Op,Rep(P_1),Rep(P_2)}*"},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,[{text,"\eIf P is an operator pattern"}],0,false},
                   {text,"\b*Op P_0*"},
                   {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                   {text,[4,42,79,112,42]},
                   {sep,
                    [{text,
                      "}is a unary operator (this is an occurrence of an expression that can be evaluated to a number at compile time), then Rep(P) ="}],
                    0,false},
                   {text,
                    [23,42,123,111,112,44,76,73,78,69,44,79,112,44,82,101,112,
                     40,80,95,48,41,125,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{text,
                     [31,73,102,32,80,32,105,115,32,97,32,112,97,114,101,110,
                      116,104,101,115,105,122,101,100,32,112,97,116,116,101,
                      114,110]}],
                   0,false},
                  {text,"\t*( P_0 )*"},
                  {sep,
                   [{text,
                     [15,44,32,116,104,101,110,32,82,101,112,40,80,41,32,61]}],
                   0,false},
                  {text,"\n*Rep(P_0)*"},
                  {sep,
                   [{text,
                     "L, that is, parenthesized patterns cannot be distinguished from their bodies."}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,"$If P is a record field index pattern"}],
                  0,false},
                 {text,"\r*#Name.Field*"},
                 {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                 {text,[7,42,70,105,101,108,100,42]},
                 {sep,
                  [{text,
                    [25,105,115,32,97,110,32,97,116,111,109,44,32,116,104,101,
                     110,32,82,101,112,40,80,41,32,61]}],
                  0,false},
                 {text,"%*{record_index,LINE,Name,Rep(Field)}*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   [24,73,102,32,80,32,105,115,32,97,32,114,101,99,111,114,
                    100,32,112,97,116,116,101,114,110]}],
                 0,false},
                {text,"&*#Name{Field_1=P_1, ..., Field_k=P_k}*"},
                {sep,[{text,"\f, where each"}],0,false},
                {text,"\t*Field_i*"},
                {sep,[{text,"\ris an atom or"}],0,false},
                {text,[3,42,95,42]},
                {sep,
                 [{text,
                   [15,44,32,116,104,101,110,32,82,101,112,40,80,41,32,61]}],
                 0,false},
                {text,
                 "p*{record,LINE,Name,[{record_field,LINE,Rep(Field_1),Rep(P_1)}, ..., {record_field,LINE,Rep(Field_k),Rep(P_k)}]}*"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [23,73,102,32,80,32,105,115,32,97,32,116,117,112,108,101,32,
                   112,97,116,116,101,114,110]}],
                0,false},
               {text,
                [17,42,123,80,95,49,44,32,46,46,46,44,32,80,95,107,125,42]},
               {sep,
                [{text,
                  [15,44,32,116,104,101,110,32,82,101,112,40,80,41,32,61]}],
                0,false},
               {text,"(*{tuple,LINE,[Rep(P_1), ..., Rep(P_k)]}*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,"\eIf P is a universal pattern"}],0,false},
              {text,[3,42,95,42]},
              {sep,
               [{text,
                 [15,44,32,116,104,101,110,32,82,101,112,40,80,41,32,61]}],
               0,false},
              {text,[16,42,123,118,97,114,44,76,73,78,69,44,39,95,39,125,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                [26,73,102,32,80,32,105,115,32,97,32,118,97,114,105,97,98,108,
                 101,32,112,97,116,116,101,114,110]}],
              0,false},
             {text,[3,42,86,42]},
             {sep,
              [{text,[15,44,32,116,104,101,110,32,82,101,112,40,80,41,32,61]}],
              0,false},
             {text,[14,42,123,118,97,114,44,76,73,78,69,44,65,125,42]},
             {sep,
              [{text,
                "J, where A is an atom with a printname consisting of the same characters as"}],
              0,false},
             {text,[3,42,86,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [138,78,111,116,105,99,101,32,116,104,97,116,32,101,118,101,
                 114,121,32,112,97,116,116,101,114,110,32,104,97,115,32,116,
                 104,101,32,115,97,109,101,32,115,111,117,114,99,101,32,102,
                 111,114,109,32,97,115,32,115,111,109,101,32,101,120,112,114,
                 101,115,115,105,111,110,44,32,97,110,100,32,105,115,32,114,
                 101,112,114,101,115,101,110,116,101,100,32,105,110,32,116,
                 104,101,32,115,97,109,101,32,119,97,121,32,97,115,32,116,104,
                 101,32,99,111,114,114,101,115,112,111,110,100,105,110,103,32,
                 101,120,112,114,101,115,115,105,111,110,46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,[14,35,35,32,69,120,112,114,101,115,115,105,111,110,115]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"/A body B is a non-empty sequence of expressions"}],
               0,false},
              {text,[15,42,69,95,49,44,32,46,46,46,44,32,69,95,107,42]},
              {sep,
               [{text,[14,44,32,97,110,100,32,82,101,112,40,66,41,32,61]}],
               0,false},
              {text,"\e*[Rep(E_1), ..., Rep(E_k)]*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"(An expression E is one of the following:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[1,42]},
                                            {sep,
                                             [{sep,
                                               [{text,
                                                 [25,73,102,32,69,32,105,115,
                                                  32,97,110,32,97,116,111,109,
                                                  105,99,32,108,105,116,101,
                                                  114,97,108]}],
                                               0,false},
                                              {text,[3,42,76,42]},
                                              {sep,
                                               [{text,
                                                 [23,44,32,116,104,101,110,32,
                                                  82,101,112,40,69,41,32,61,
                                                  32,82,101,112,40,76,41,46]}],
                                               0,false}],
                                             0,false}],
                                           0,false},
                                          {sep,
                                           [{text,[1,42]},
                                            {sep,
                                             [{sep,
                                               [{text,
                                                 "!If E is a bitstring comprehension"}],
                                               0,false},
                                              {text,
                                               [26,42,60,60,69,95,48,32,124,
                                                124,32,81,95,49,44,32,46,46,
                                                46,44,32,81,95,107,62,62,42]},
                                              {sep,
                                               [{text,"\f, where each"}],
                                               0,false},
                                              {text,[5,42,81,95,105,42]},
                                              {sep,
                                               [{text,
                                                 [29,105,115,32,97,32,113,117,
                                                  97,108,105,102,105,101,114,
                                                  44,32,116,104,101,110,32,82,
                                                  101,112,40,69,41,32,61]}],
                                               0,false},
                                              {text,
                                               ".*{bc,LINE,Rep(E_0),[Rep(Q_1), ..., Rep(Q_k)]}*"},
                                              {sep,
                                               [{text,
                                                 [24,46,32,70,111,114,32,82,
                                                  101,112,40,81,41,44,32,115,
                                                  101,101,32,98,101,108,111,
                                                  119,46]}],
                                               0,false}],
                                             0,false}],
                                           0,false}},
                                         {sep,
                                          [{text,[1,42]},
                                           {sep,
                                            [{sep,
                                              [{text,
                                                [31,73,102,32,69,32,105,115,
                                                 32,97,32,98,105,116,115,116,
                                                 114,105,110,103,32,99,111,
                                                 110,115,116,114,117,99,116,
                                                 111,114]}],
                                              0,false},
                                             {text,
                                              "-*<<E_1:Size_1/TSL_1, ..., E_k:Size_k/TSL_k>>*"},
                                             {sep,
                                              [{text,"\f, where each"}],
                                              0,false},
                                             {text,"\b*Size_i*"},
                                             {sep,
                                              [{text,
                                                [25,105,115,32,97,110,32,101,
                                                 120,112,114,101,115,115,105,
                                                 111,110,32,97,110,100,32,101,
                                                 97,99,104]}],
                                              0,false},
                                             {text,[7,42,84,83,76,95,105,42]},
                                             {sep,
                                              [{text,
                                                "(is a type specificer list, then Rep(E) ="}],
                                              0,false},
                                             {text,
                                              "z*{bin,LINE,[{bin_element,LINE,Rep(E_1),Rep(Size_1),Rep(TSL_1)}, ..., {bin_element,LINE,Rep(E_k),Rep(Size_k),Rep(TSL_k)}]}*"},
                                             {sep,
                                              [{text,
                                                "%. For Rep(TSL), see below. An omitted"}],
                                              0,false},
                                             {text,"\b*Size_i*"},
                                             {sep,
                                              [{text,
                                                [17,105,115,32,114,101,112,
                                                 114,101,115,101,110,116,101,
                                                 100,32,98,121]}],
                                              0,false},
                                             {text,"\t*default*"},
                                             {sep,
                                              [{text,"\f. An omitted"}],
                                              0,false},
                                             {text,[7,42,84,83,76,95,105,42]},
                                             {sep,
                                              [{text,
                                                [17,105,115,32,114,101,112,
                                                 114,101,115,101,110,116,101,
                                                 100,32,98,121]}],
                                              0,false},
                                             {text,"\t*default*"},
                                             {sep,[{text,[1,46]}],0,false}],
                                            0,false}],
                                          0,false}},
                                        {sep,
                                         [{text,[1,42]},
                                          {sep,
                                           [{sep,
                                             [{text,
                                               [26,73,102,32,69,32,105,115,32,
                                                97,32,98,108,111,99,107,32,
                                                101,120,112,114,101,115,115,
                                                105,111,110]}],
                                             0,false},
                                            {text,"\r*begin B end*"},
                                            {sep,
                                             [{text,
                                               [7,44,32,119,104,101,114,101]}],
                                             0,false},
                                            {text,[3,42,66,42]},
                                            {sep,
                                             [{text,
                                               [24,105,115,32,97,32,98,111,
                                                100,121,44,32,116,104,101,110,
                                                32,82,101,112,40,69,41,32,
                                                61]}],
                                             0,false},
                                            {text,
                                             [21,42,123,98,108,111,99,107,44,
                                              76,73,78,69,44,82,101,112,40,66,
                                              41,125,42]},
                                            {sep,[{text,[1,46]}],0,false}],
                                           0,false}],
                                         0,false}},
                                       {sep,
                                        [{text,[1,42]},
                                         {sep,
                                          [{sep,
                                            [{text,
                                              [25,73,102,32,69,32,105,115,32,
                                               97,32,99,97,115,101,32,101,120,
                                               112,114,101,115,115,105,111,
                                               110]}],
                                            0,false},
                                           {text,
                                            "#*case E_0 of Cc_1 ; ... ; Cc_k end*"},
                                           {sep,
                                            [{text,
                                              [7,44,32,119,104,101,114,101]}],
                                            0,false},
                                           {text,[5,42,69,95,48,42]},
                                           {sep,
                                            [{text,
                                              [25,105,115,32,97,110,32,101,
                                               120,112,114,101,115,115,105,
                                               111,110,32,97,110,100,32,101,
                                               97,99,104]}],
                                            0,false},
                                           {text,[6,42,67,99,95,105,42]},
                                           {sep,
                                            [{text,
                                              [31,105,115,32,97,32,99,97,115,
                                               101,32,99,108,97,117,115,101,
                                               44,32,116,104,101,110,32,82,
                                               101,112,40,69,41,32,61]}],
                                            0,false},
                                           {text,
                                            "4*{'case',LINE,Rep(E_0),[Rep(Cc_1), ..., Rep(Cc_k)]}*"},
                                           {sep,[{text,[1,46]}],0,false}],
                                          0,false}],
                                        0,false}},
                                      {sep,
                                       [{text,[1,42]},
                                        {sep,
                                         [{sep,
                                           [{text,
                                             [26,73,102,32,69,32,105,115,32,
                                              97,32,99,97,116,99,104,32,101,
                                              120,112,114,101,115,115,105,111,
                                              110]}],
                                           0,false},
                                          {text,"\v*catch E_0*"},
                                          {sep,
                                           [{text,
                                             [15,44,32,116,104,101,110,32,82,
                                              101,112,40,69,41,32,61]}],
                                           0,false},
                                          {text,
                                           [25,42,123,39,99,97,116,99,104,39,
                                            44,76,73,78,69,44,82,101,112,40,
                                            69,95,48,41,125,42]},
                                          {sep,[{text,[1,46]}],0,false}],
                                         0,false}],
                                       0,false}},
                                     {sep,
                                      [{text,[1,42]},
                                       {sep,
                                        [{sep,
                                          [{text,
                                            [23,73,102,32,69,32,105,115,32,97,
                                             32,99,111,110,115,32,115,107,101,
                                             108,101,116,111,110]}],
                                          0,false},
                                         {text,"\r*[E_h | E_t]*"},
                                         {sep,
                                          [{text,
                                            [15,44,32,116,104,101,110,32,82,
                                             101,112,40,69,41,32,61]}],
                                          0,false},
                                         {text,
                                          [31,42,123,99,111,110,115,44,76,73,
                                           78,69,44,82,101,112,40,69,95,104,
                                           41,44,82,101,112,40,69,95,116,41,
                                           125,42]},
                                         {sep,[{text,[1,46]}],0,false}],
                                        0,false}],
                                      0,false}},
                                    {sep,
                                     [{text,[1,42]},
                                      {sep,
                                       [{sep,
                                         [{text,
                                           [24,73,102,32,69,32,105,115,32,97,
                                            32,102,117,110,32,101,120,112,114,
                                            101,115,115,105,111,110]}],
                                         0,false},
                                        {text,
                                         [16,42,102,117,110,32,78,97,109,101,
                                          47,65,114,105,116,121,42]},
                                        {sep,
                                         [{text,
                                           [15,44,32,116,104,101,110,32,82,
                                            101,112,40,69,41,32,61]}],
                                         0,false},
                                        {text,
                                         "$*{'fun',LINE,{function,Name,Arity}}*"},
                                        {sep,[{text,[1,46]}],0,false}],
                                       0,false}],
                                     0,false}},
                                   {sep,
                                    [{text,[1,42]},
                                     {sep,
                                      [{sep,
                                        [{text,
                                          [24,73,102,32,69,32,105,115,32,97,
                                           32,102,117,110,32,101,120,112,114,
                                           101,115,115,105,111,110]}],
                                        0,false},
                                       {text,
                                        [23,42,102,117,110,32,77,111,100,117,
                                         108,101,58,78,97,109,101,47,65,114,
                                         105,116,121,42]},
                                       {sep,
                                        [{text,
                                          [15,44,32,116,104,101,110,32,82,101,
                                           112,40,69,41,32,61]}],
                                        0,false},
                                       {text,
                                        ":*{'fun',LINE,{function,Rep(Module),Rep(Name),Rep(Arity)}}*"},
                                       {sep,
                                        [{text,
                                          "\". (Before Erlang/OTP R15: Rep(E) ="}],
                                        0,false},
                                       {text,
                                        "+*{'fun',LINE,{function,Module,Name,Arity}}*"},
                                       {sep,[{text,[2,46,41]}],0,false}],
                                      0,false}],
                                    0,false}},
                                  {sep,
                                   [{text,[1,42]},
                                    {sep,
                                     [{sep,
                                       [{text,
                                         [24,73,102,32,69,32,105,115,32,97,32,
                                          102,117,110,32,101,120,112,114,101,
                                          115,115,105,111,110]}],
                                       0,false},
                                      {text,"\e*fun Fc_1 ; ... ; Fc_k end*"},
                                      {sep,[{text,"\f, where each"}],0,false},
                                      {text,[6,42,70,99,95,105,42]},
                                      {sep,
                                       [{text,
                                         "#is a function clause, then Rep(E) ="}],
                                       0,false},
                                      {text,
                                       "4*{'fun',LINE,{clauses,[Rep(Fc_1), ..., Rep(Fc_k)]}}*"},
                                      {sep,[{text,[1,46]}],0,false}],
                                     0,false}],
                                   0,false}},
                                 {sep,
                                  [{text,[1,42]},
                                   {sep,
                                    [{sep,
                                      [{text,
                                        [24,73,102,32,69,32,105,115,32,97,32,
                                         102,117,110,32,101,120,112,114,101,
                                         115,115,105,111,110]}],
                                      0,false},
                                     {text,
                                      "%*fun Name Fc_1 ; ... ; Name Fc_k end*"},
                                     {sep,
                                      [{text,[7,44,32,119,104,101,114,101]}],
                                      0,false},
                                     {text,[6,42,78,97,109,101,42]},
                                     {sep,
                                      [{text,
                                        [22,105,115,32,97,32,118,97,114,105,
                                         97,98,108,101,32,97,110,100,32,101,
                                         97,99,104]}],
                                      0,false},
                                     {text,[6,42,70,99,95,105,42]},
                                     {sep,
                                      [{text,
                                        "#is a function clause, then Rep(E) ="}],
                                      0,false},
                                     {text,
                                      "3*{named_fun,LINE,Name,[Rep(Fc_1), ..., Rep(Fc_k)]}*"},
                                     {sep,[{text,[1,46]}],0,false}],
                                    0,false}],
                                  0,false}},
                                {sep,
                                 [{text,[1,42]},
                                  {sep,
                                   [{sep,
                                     [{text,
                                       [23,73,102,32,69,32,105,115,32,97,32,
                                        102,117,110,99,116,105,111,110,32,99,
                                        97,108,108]}],
                                     0,false},
                                    {text,
                                     [20,42,69,95,48,40,69,95,49,44,32,46,46,
                                      46,44,32,69,95,107,41,42]},
                                    {sep,
                                     [{text,
                                       [15,44,32,116,104,101,110,32,82,101,
                                        112,40,69,41,32,61]}],
                                     0,false},
                                    {text,
                                     "0*{call,LINE,Rep(E_0),[Rep(E_1), ..., Rep(E_k)]}*"},
                                    {sep,[{text,[1,46]}],0,false}],
                                   0,false}],
                                 0,false}},
                               {sep,
                                [{text,[1,42]},
                                 {sep,
                                  [{sep,
                                    [{text,
                                      [23,73,102,32,69,32,105,115,32,97,32,
                                       102,117,110,99,116,105,111,110,32,99,
                                       97,108,108]}],
                                    0,false},
                                   {text,
                                    [24,42,69,95,109,58,69,95,48,40,69,95,49,
                                     44,32,46,46,46,44,32,69,95,107,41,42]},
                                   {sep,
                                    [{text,
                                      [15,44,32,116,104,101,110,32,82,101,112,
                                       40,69,41,32,61]}],
                                    0,false},
                                   {text,
                                    "G*{call,LINE,{remote,LINE,Rep(E_m),Rep(E_0)},[Rep(E_1), ..., Rep(E_k)]}*"},
                                   {sep,[{text,[1,46]}],0,false}],
                                  0,false}],
                                0,false}},
                              {sep,
                               [{text,[1,42]},
                                {sep,
                                 [{sep,
                                   [{text,
                                     [24,73,102,32,69,32,105,115,32,97,110,32,
                                      105,102,32,101,120,112,114,101,115,115,
                                      105,111,110]}],
                                   0,false},
                                  {text,
                                   [26,42,105,102,32,73,99,95,49,32,59,32,46,
                                    46,46,32,59,32,73,99,95,107,32,101,110,
                                    100,42]},
                                  {sep,[{text,"\f, where each"}],0,false},
                                  {text,[6,42,73,99,95,105,42]},
                                  {sep,
                                   [{text,
                                     [30,105,115,32,97,110,32,105,102,32,99,
                                      108,97,117,115,101,44,32,116,104,101,
                                      110,32,82,101,112,40,69,41,32,61]}],
                                   0,false},
                                  {text,
                                   ")*{'if',LINE,[Rep(Ic_1), ..., Rep(Ic_k)]}*"},
                                  {sep,[{text,[1,46]}],0,false}],
                                 0,false}],
                               0,false}},
                             {sep,
                              [{text,[1,42]},
                               {sep,
                                [{sep,
                                  [{text,
                                    [28,73,102,32,69,32,105,115,32,97,32,108,
                                     105,115,116,32,99,111,109,112,114,101,
                                     104,101,110,115,105,111,110]}],
                                  0,false},
                                 {text,
                                  [24,42,91,69,95,48,32,124,124,32,81,95,49,
                                   44,32,46,46,46,44,32,81,95,107,93,42]},
                                 {sep,[{text,"\f, where each"}],0,false},
                                 {text,[5,42,81,95,105,42]},
                                 {sep,
                                  [{text,
                                    [29,105,115,32,97,32,113,117,97,108,105,
                                     102,105,101,114,44,32,116,104,101,110,32,
                                     82,101,112,40,69,41,32,61]}],
                                  0,false},
                                 {text,
                                  ".*{lc,LINE,Rep(E_0),[Rep(Q_1), ..., Rep(Q_k)]}*"},
                                 {sep,
                                  [{text,
                                    [24,46,32,70,111,114,32,82,101,112,40,81,
                                     41,44,32,115,101,101,32,98,101,108,111,
                                     119,46]}],
                                  0,false}],
                                0,false}],
                              0,false}},
                            {sep,
                             [{text,[1,42]},
                              {sep,
                               [{sep,
                                 [{text,
                                   [22,73,102,32,69,32,105,115,32,97,32,109,
                                    97,112,32,99,114,101,97,116,105,111,110]}],
                                 0,false},
                                {text,
                                 [18,42,35,123,65,95,49,44,32,46,46,46,44,32,
                                  65,95,107,125,42]},
                                {sep,[{text,"\f, where each"}],0,false},
                                {text,[5,42,65,95,105,42]},
                                {sep,
                                 [{text,
                                   [17,105,115,32,97,110,32,97,115,115,111,99,
                                    105,97,116,105,111,110]}],
                                 0,false},
                                {text,
                                 [16,42,69,95,105,95,49,32,61,62,32,69,95,105,
                                  95,50,42]},
                                {sep,
                                 [{text,
                                   [15,44,32,116,104,101,110,32,82,101,112,40,
                                    69,41,32,61]}],
                                 0,false},
                                {text,
                                 "&*{map,LINE,[Rep(A_1), ..., Rep(A_k)]}*"},
                                {sep,
                                 [{text,
                                   [24,46,32,70,111,114,32,82,101,112,40,65,
                                    41,44,32,115,101,101,32,98,101,108,111,
                                    119,46]}],
                                 0,false}],
                               0,false}],
                             0,false}},
                           {sep,
                            [{text,[1,42]},
                             {sep,
                              [{sep,
                                [{text,
                                  [20,73,102,32,69,32,105,115,32,97,32,109,97,
                                   112,32,117,112,100,97,116,101]}],
                                0,false},
                               {text,
                                [21,42,69,95,48,35,123,65,95,49,44,32,46,46,
                                 46,44,32,65,95,107,125,42]},
                               {sep,[{text,"\f, where each"}],0,false},
                               {text,[5,42,65,95,105,42]},
                               {sep,
                                [{text,
                                  [17,105,115,32,97,110,32,97,115,115,111,99,
                                   105,97,116,105,111,110]}],
                                0,false},
                               {text,
                                [16,42,69,95,105,95,49,32,61,62,32,69,95,105,
                                 95,50,42]},
                               {sep,[{text,[2,111,114]}],0,false},
                               {text,
                                [16,42,69,95,105,95,49,32,58,61,32,69,95,105,
                                 95,50,42]},
                               {sep,
                                [{text,
                                  [15,44,32,116,104,101,110,32,82,101,112,40,
                                   69,41,32,61]}],
                                0,false},
                               {text,
                                "/*{map,LINE,Rep(E_0),[Rep(A_1), ..., Rep(A_k)]}*"},
                               {sep,
                                [{text,
                                  [24,46,32,70,111,114,32,82,101,112,40,65,41,
                                   44,32,115,101,101,32,98,101,108,111,119,
                                   46]}],
                                0,false}],
                              0,false}],
                            0,false}},
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{sep,
                               [{text,"#If E is a match operator expression"}],
                               0,false},
                              {text,"\t*P = E_0*"},
                              {sep,
                               [{text,[7,44,32,119,104,101,114,101]}],
                               0,false},
                              {text,[3,42,80,42]},
                              {sep,
                               [{text,"\eis a pattern, then Rep(E) ="}],
                               0,false},
                              {text,
                               [30,42,123,109,97,116,99,104,44,76,73,78,69,44,
                                82,101,112,40,80,41,44,82,101,112,40,69,95,48,
                                41,125,42]},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,false}},
                         {sep,
                          [{text,[1,42]},
                           {sep,
                            [{sep,[{text,"\fIf E is nil,"}],0,false},
                             {text,[4,42,91,93,42]},
                             {sep,
                              [{text,
                                [15,44,32,116,104,101,110,32,82,101,112,40,69,
                                 41,32,61]}],
                              0,false},
                             {text,"\f*{nil,LINE}*"},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false}],
                          0,false}},
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{sep,
                             [{text,
                               [30,73,102,32,69,32,105,115,32,97,110,32,111,
                                112,101,114,97,116,111,114,32,101,120,112,114,
                                101,115,115,105,111,110]}],
                             0,false},
                            {text,"\f*E_1 Op E_2*"},
                            {sep,
                             [{text,[7,44,32,119,104,101,114,101]}],
                             0,false},
                            {text,[4,42,79,112,42]},
                            {sep,
                             [{text,
                               ".is a binary operator other than match operator"}],
                             0,false},
                            {text,[3,42,61,42]},
                            {sep,
                             [{text,
                               [15,44,32,116,104,101,110,32,82,101,112,40,69,
                                41,32,61]}],
                             0,false},
                            {text," *{op,LINE,Op,Rep(E_1),Rep(E_2)}*"},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{sep,
                            [{text,
                              [30,73,102,32,69,32,105,115,32,97,110,32,111,
                               112,101,114,97,116,111,114,32,101,120,112,114,
                               101,115,115,105,111,110]}],
                            0,false},
                           {text,"\b*Op E_0*"},
                           {sep,
                            [{text,[7,44,32,119,104,101,114,101]}],
                            0,false},
                           {text,[4,42,79,112,42]},
                           {sep,
                            [{text,"\"is a unary operator, then Rep(E) ="}],
                            0,false},
                           {text,
                            [23,42,123,111,112,44,76,73,78,69,44,79,112,44,82,
                             101,112,40,69,95,48,41,125,42]},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{sep,
                           [{text,"\"If E is a parenthesized expression"}],
                           0,false},
                          {text,"\t*( E_0 )*"},
                          {sep,
                           [{text,
                             [15,44,32,116,104,101,110,32,82,101,112,40,69,41,
                              32,61]}],
                           0,false},
                          {text,"\n*Rep(E_0)*"},
                          {sep,
                           [{text,
                             "O, that is, parenthesized expressions cannot be distinguished from their bodies."}],
                           0,false}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{sep,
                          [{text,
                            [28,73,102,32,69,32,105,115,32,97,32,114,101,99,
                             101,105,118,101,32,101,120,112,114,101,115,115,
                             105,111,110]}],
                          0,false},
                         {text,
                          [31,42,114,101,99,101,105,118,101,32,67,99,95,49,32,
                           59,32,46,46,46,32,59,32,67,99,95,107,32,101,110,
                           100,42]},
                         {sep,[{text,"\f, where each"}],0,false},
                         {text,[6,42,67,99,95,105,42]},
                         {sep,
                          [{text,
                            [31,105,115,32,97,32,99,97,115,101,32,99,108,97,
                             117,115,101,44,32,116,104,101,110,32,82,101,112,
                             40,69,41,32,61]}],
                          0,false},
                         {text,
                          ".*{'receive',LINE,[Rep(Cc_1), ..., Rep(Cc_k)]}*"},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{sep,
                         [{text,
                           [28,73,102,32,69,32,105,115,32,97,32,114,101,99,
                            101,105,118,101,32,101,120,112,114,101,115,115,
                            105,111,110]}],
                         0,false},
                        {text,
                         "0*receive Cc_1 ; ... ; Cc_k after E_0 -> B_t end*"},
                        {sep,[{text,"\f, where each"}],0,false},
                        {text,[6,42,67,99,95,105,42]},
                        {sep,
                         [{text,
                           [17,105,115,32,97,32,99,97,115,101,32,99,108,97,
                            117,115,101,44]}],
                         0,false},
                        {text,[5,42,69,95,48,42]},
                        {sep,
                         [{text,
                           [21,105,115,32,97,110,32,101,120,112,114,101,115,
                            115,105,111,110,44,32,97,110,100]}],
                         0,false},
                        {text,[5,42,66,95,116,42]},
                        {sep,
                         [{text,
                           [24,105,115,32,97,32,98,111,100,121,44,32,116,104,
                            101,110,32,82,101,112,40,69,41,32,61]}],
                         0,false},
                        {text,
                         "@*{'receive',LINE,[Rep(Cc_1), ..., Rep(Cc_k)],Rep(E_0),Rep(B_t)}*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,
                        [{text,
                          [25,73,102,32,69,32,105,115,32,97,32,114,101,99,111,
                           114,100,32,99,114,101,97,116,105,111,110]}],
                        0,false},
                       {text,"&*#Name{Field_1=E_1, ..., Field_k=E_k}*"},
                       {sep,[{text,"\f, where each"}],0,false},
                       {text,"\t*Field_i*"},
                       {sep,[{text,"\ris an atom or"}],0,false},
                       {text,[3,42,95,42]},
                       {sep,
                        [{text,
                          [15,44,32,116,104,101,110,32,82,101,112,40,69,41,32,
                           61]}],
                        0,false},
                       {text,
                        "p*{record,LINE,Name,[{record_field,LINE,Rep(Field_1),Rep(E_1)}, ..., {record_field,LINE,Rep(Field_k),Rep(E_k)}]}*"},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{sep,
                       [{text,
                         [29,73,102,32,69,32,105,115,32,97,32,114,101,99,111,
                          114,100,32,102,105,101,108,100,32,97,99,99,101,115,
                          115]}],
                       0,false},
                      {text,
                       [16,42,69,95,48,35,78,97,109,101,46,70,105,101,108,100,
                        42]},
                      {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                      {text,[7,42,70,105,101,108,100,42]},
                      {sep,
                       [{text,
                         [25,105,115,32,97,110,32,97,116,111,109,44,32,116,
                          104,101,110,32,82,101,112,40,69,41,32,61]}],
                       0,false},
                      {text,".*{record_field,LINE,Rep(E_0),Name,Rep(Field)}*"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{sep,
                      [{text,
                        [28,73,102,32,69,32,105,115,32,97,32,114,101,99,111,
                         114,100,32,102,105,101,108,100,32,105,110,100,101,
                         120]}],
                      0,false},
                     {text,"\r*#Name.Field*"},
                     {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                     {text,[7,42,70,105,101,108,100,42]},
                     {sep,
                      [{text,
                        [25,105,115,32,97,110,32,97,116,111,109,44,32,116,104,
                         101,110,32,82,101,112,40,69,41,32,61]}],
                      0,false},
                     {text,"%*{record_index,LINE,Name,Rep(Field)}*"},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,
                     [{text,
                       [23,73,102,32,69,32,105,115,32,97,32,114,101,99,111,
                        114,100,32,117,112,100,97,116,101]}],
                     0,false},
                    {text,")*E_0#Name{Field_1=E_1, ..., Field_k=E_k}*"},
                    {sep,[{text,"\f, where each"}],0,false},
                    {text,"\t*Field_i*"},
                    {sep,
                     [{text,
                       [25,105,115,32,97,110,32,97,116,111,109,44,32,116,104,
                        101,110,32,82,101,112,40,69,41,32,61]}],
                     0,false},
                    {text,
                     "y*{record,LINE,Rep(E_0),Name,[{record_field,LINE,Rep(Field_1),Rep(E_1)}, ..., {record_field,LINE,Rep(Field_k),Rep(E_k)}]}*"},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,
                    [{text,
                      [24,73,102,32,69,32,105,115,32,97,32,116,117,112,108,
                       101,32,115,107,101,108,101,116,111,110]}],
                    0,false},
                   {text,
                    [17,42,123,69,95,49,44,32,46,46,46,44,32,69,95,107,125,
                     42]},
                   {sep,
                    [{text,
                      [15,44,32,116,104,101,110,32,82,101,112,40,69,41,32,
                       61]}],
                    0,false},
                   {text,"(*{tuple,LINE,[Rep(E_1), ..., Rep(E_k)]}*"},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{text,
                     [24,73,102,32,69,32,105,115,32,97,32,116,114,121,32,101,
                      120,112,114,101,115,115,105,111,110]}],
                   0,false},
                  {text,"#*try B catch Tc_1 ; ... ; Tc_k end*"},
                  {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                  {text,[3,42,66,42]},
                  {sep,
                   [{text,
                     [18,105,115,32,97,32,98,111,100,121,32,97,110,100,32,101,
                      97,99,104]}],
                   0,false},
                  {text,[6,42,84,99,95,105,42]},
                  {sep,[{text," is a catch clause, then Rep(E) ="}],0,false},
                  {text,
                   "7*{'try',LINE,Rep(B),[],[Rep(Tc_1), ..., Rep(Tc_k)],[]}*"},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,
                    [24,73,102,32,69,32,105,115,32,97,32,116,114,121,32,101,
                     120,112,114,101,115,115,105,111,110]}],
                  0,false},
                 {text,
                  "8*try B of Cc_1 ; ... ; Cc_k catch Tc_1 ; ... ; Tc_n end*"},
                 {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                 {text,[3,42,66,42]},
                 {sep,
                  [{text,
                    [15,105,115,32,97,32,98,111,100,121,44,32,101,97,99,104]}],
                  0,false},
                 {text,[6,42,67,99,95,105,42]},
                 {sep,
                  [{text,
                    [26,105,115,32,97,32,99,97,115,101,32,99,108,97,117,115,
                     101,44,32,97,110,100,32,101,97,99,104]}],
                  0,false},
                 {text,[6,42,84,99,95,106,42]},
                 {sep,[{text," is a catch clause, then Rep(E) ="}],0,false},
                 {text,
                  "P*{'try',LINE,Rep(B),[Rep(Cc_1), ..., Rep(Cc_k)],[Rep(Tc_1), ..., Rep(Tc_n)],[]}*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   [24,73,102,32,69,32,105,115,32,97,32,116,114,121,32,101,
                    120,112,114,101,115,115,105,111,110]}],
                 0,false},
                {text,
                 [19,42,116,114,121,32,66,32,97,102,116,101,114,32,65,32,101,
                  110,100,42]},
                {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                {text,[3,42,66,42]},
                {sep,[{text,[3,97,110,100]}],0,false},
                {text,[3,42,65,42]},
                {sep,
                 [{text,
                   [25,97,114,101,32,98,111,100,105,101,115,44,32,116,104,101,
                    110,32,82,101,112,40,69,41,32,61]}],
                 0,false},
                {text,"\"*{'try',LINE,Rep(B),[],[],Rep(A)}*"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [24,73,102,32,69,32,105,115,32,97,32,116,114,121,32,101,120,
                   112,114,101,115,115,105,111,110]}],
                0,false},
               {text,"(*try B of Cc_1 ; ... ; Cc_k after A end*"},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,[3,42,66,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[3,42,65,42]},
               {sep,
                [{text,
                  [22,97,114,101,32,97,32,98,111,100,105,101,115,44,32,97,110,
                   100,32,101,97,99,104]}],
                0,false},
               {text,[6,42,67,99,95,105,42]},
               {sep,
                [{text,
                  [31,105,115,32,97,32,99,97,115,101,32,99,108,97,117,115,101,
                   44,32,116,104,101,110,32,82,101,112,40,69,41,32,61]}],
                0,false},
               {text,
                ";*{'try',LINE,Rep(B),[Rep(Cc_1), ..., Rep(Cc_k)],[],Rep(A)}*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [24,73,102,32,69,32,105,115,32,97,32,116,114,121,32,101,120,
                  112,114,101,115,115,105,111,110]}],
               0,false},
              {text,"+*try B catch Tc_1 ; ... ; Tc_k after A end*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[3,42,66,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,[3,42,65,42]},
              {sep,
               [{text,
                 [20,97,114,101,32,98,111,100,105,101,115,44,32,97,110,100,32,
                  101,97,99,104]}],
               0,false},
              {text,[6,42,84,99,95,105,42]},
              {sep,[{text," is a catch clause, then Rep(E) ="}],0,false},
              {text,
               ";*{'try',LINE,Rep(B),[],[Rep(Tc_1), ..., Rep(Tc_k)],Rep(A)}*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                [24,73,102,32,69,32,105,115,32,97,32,116,114,121,32,101,120,
                 112,114,101,115,115,105,111,110]}],
              0,false},
             {text,
              "@*try B of Cc_1 ; ... ; Cc_k catch Tc_1 ; ... ; Tc_n after A end*"},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[3,42,66,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[3,42,65,42]},
             {sep,
              [{text,
                [18,97,114,101,32,97,32,98,111,100,105,101,115,44,32,101,97,
                 99,104]}],
              0,false},
             {text,[6,42,67,99,95,105,42]},
             {sep,
              [{text,
                [26,105,115,32,97,32,99,97,115,101,32,99,108,97,117,115,101,
                 44,32,97,110,100,32,101,97,99,104]}],
              0,false},
             {text,[6,42,84,99,95,106,42]},
             {sep,[{text," is a catch clause, then Rep(E) ="}],0,false},
             {text,
              "T*{'try',LINE,Rep(B),[Rep(Cc_1), ..., Rep(Cc_k)],[Rep(Tc_1), ..., Rep(Tc_n)],Rep(A)}*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               [18,73,102,32,69,32,105,115,32,97,32,118,97,114,105,97,98,108,
                101]}],
             0,false},
            {text,[3,42,86,42]},
            {sep,
             [{text,[15,44,32,116,104,101,110,32,82,101,112,40,69,41,32,61]}],
             0,false},
            {text,[14,42,123,118,97,114,44,76,73,78,69,44,65,125,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,[3,42,65,42]},
            {sep,
             [{text,
               "@is an atom with a printname consisting of the same characters as"}],
             0,false},
            {text,[3,42,86,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,{above,{text,"\r## Qualifiers"},null},null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,"&A qualifier Q is one of the following:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [16,73,102,32,81,32,105,115,32,97,32,102,105,108,116,101,
                   114]}],
                0,false},
               {text,[3,42,69,42]},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,[3,42,69,42]},
               {sep,
                [{text,
                  [31,105,115,32,97,110,32,101,120,112,114,101,115,115,105,
                   111,110,44,32,116,104,101,110,32,82,101,112,40,81,41,32,
                   61]}],
                0,false},
               {text,"\b*Rep(E)*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [19,73,102,32,81,32,105,115,32,97,32,103,101,110,101,114,97,
                   116,111,114]}],
                0,false},
               {text,"\b*P <- E*"},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,[3,42,80,42]},
               {sep,
                [{text,
                  [16,105,115,32,97,32,112,97,116,116,101,114,110,32,97,110,
                   100]}],
                0,false},
               {text,[3,42,69,42]},
               {sep,
                [{text,
                  [31,105,115,32,97,110,32,101,120,112,114,101,115,115,105,
                   111,110,44,32,116,104,101,110,32,82,101,112,40,81,41,32,
                   61]}],
                0,false},
               {text,
                [31,42,123,103,101,110,101,114,97,116,101,44,76,73,78,69,44,
                 82,101,112,40,80,41,44,82,101,112,40,69,41,125,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [29,73,102,32,81,32,105,115,32,97,32,98,105,116,115,116,114,
                  105,110,103,32,103,101,110,101,114,97,116,111,114]}],
               0,false},
              {text,"\b*P <= E*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[3,42,80,42]},
              {sep,
               [{text,
                 [16,105,115,32,97,32,112,97,116,116,101,114,110,32,97,110,
                  100]}],
               0,false},
              {text,[3,42,69,42]},
              {sep,
               [{text,
                 [31,105,115,32,97,110,32,101,120,112,114,101,115,115,105,111,
                  110,44,32,116,104,101,110,32,82,101,112,40,81,41,32,61]}],
               0,false},
              {text,"!*{b_generate,LINE,Rep(P),Rep(E)}*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}}],
        0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,{text,"$## Bitstring Element Type Specifiers"},null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "RA type specifier list TSL for a bitstring element is a sequence of type specifiers"}],
                 0,false},
                {text,
                 [19,42,84,83,95,49,32,45,32,46,46,46,32,45,32,84,83,95,107,
                  42]},
                {sep,
                 [{text,
                   [16,44,32,97,110,100,32,82,101,112,40,84,83,76,41,32,61]}],
                 0,false},
                {text,
                 [29,42,91,82,101,112,40,84,83,95,49,41,44,32,46,46,46,44,32,
                  82,101,112,40,84,83,95,107,41,93,42]},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [25,73,102,32,84,83,32,105,115,32,97,32,116,121,112,101,32,
                  115,112,101,99,105,102,105,101,114]}],
               0,false},
              {text,[3,42,65,42]},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[3,42,65,42]},
              {sep,
               [{text,
                 [26,105,115,32,97,110,32,97,116,111,109,44,32,116,104,101,
                  110,32,82,101,112,40,84,83,41,32,61]}],
               0,false},
              {text,[3,42,65,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [25,73,102,32,84,83,32,105,115,32,97,32,116,121,112,101,32,
                  115,112,101,99,105,102,105,101,114]}],
               0,false},
              {text,"\t*A:Value*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[3,42,65,42]},
              {sep,
               [{text,[14,105,115,32,97,110,32,97,116,111,109,32,97,110,100]}],
               0,false},
              {text,[7,42,86,97,108,117,101,42]},
              {sep,
               [{text,
                 [29,105,115,32,97,110,32,105,110,116,101,103,101,114,44,32,
                  116,104,101,110,32,82,101,112,40,84,83,41,32,61]}],
               0,false},
              {text,"\v*{A,Value}*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}}],
        0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,[15,35,35,32,65,115,115,111,99,105,97,116,105,111,110,115]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,")An association A is one of the following:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [22,73,102,32,65,32,105,115,32,97,110,32,97,115,115,111,99,
                  105,97,116,105,111,110]}],
               0,false},
              {text,"\b*K => V*"},
              {sep,
               [{text,
                 [15,44,32,116,104,101,110,32,82,101,112,40,65,41,32,61]}],
               0,false},
              {text,"&*{map_field_assoc,LINE,Rep(K),Rep(V)}*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [22,73,102,32,65,32,105,115,32,97,110,32,97,115,115,111,99,
                  105,97,116,105,111,110]}],
               0,false},
              {text,"\b*K := V*"},
              {sep,
               [{text,
                 [15,44,32,116,104,101,110,32,82,101,112,40,65,41,32,61]}],
               0,false},
              {text,"&*{map_field_exact,LINE,Rep(K),Rep(V)}*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n## Clauses"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "HThere are function clauses, if clauses, case clauses, and catch clauses."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"#A clause C is one of the following:"}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,
                     [{text,
                       [21,73,102,32,67,32,105,115,32,97,32,99,97,115,101,32,
                        99,108,97,117,115,101]}],
                     0,false},
                    {text,"\b*P -> B*"},
                    {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                    {text,[3,42,80,42]},
                    {sep,
                     [{text,
                       [16,105,115,32,97,32,112,97,116,116,101,114,110,32,97,
                        110,100]}],
                     0,false},
                    {text,[3,42,66,42]},
                    {sep,
                     [{text,
                       [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,
                        110,32,82,101,112,40,67,41,32,61]}],
                     0,false},
                    {text,"\"*{clause,LINE,[Rep(P)],[],Rep(B)}*"},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,
                     [{text,
                       [21,73,102,32,67,32,105,115,32,97,32,99,97,115,101,32,
                        99,108,97,117,115,101]}],
                     0,false},
                    {text,
                     [16,42,80,32,119,104,101,110,32,71,115,32,45,62,32,66,
                      42]},
                    {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                    {text,[3,42,80,42]},
                    {sep,[{text,"\ris a pattern,"}],0,false},
                    {text,[4,42,71,115,42]},
                    {sep,
                     [{text,
                       [24,105,115,32,97,32,103,117,97,114,100,32,115,101,113,
                        117,101,110,99,101,44,32,97,110,100]}],
                     0,false},
                    {text,[3,42,66,42]},
                    {sep,
                     [{text,
                       [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,
                        110,32,82,101,112,40,67,41,32,61]}],
                     0,false},
                    {text,"'*{clause,LINE,[Rep(P)],Rep(Gs),Rep(B)}*"},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,
                    [{text,
                      [22,73,102,32,67,32,105,115,32,97,32,99,97,116,99,104,
                       32,99,108,97,117,115,101]}],
                    0,false},
                   {text,"\b*P -> B*"},
                   {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                   {text,[3,42,80,42]},
                   {sep,
                    [{text,
                      [16,105,115,32,97,32,112,97,116,116,101,114,110,32,97,
                       110,100]}],
                    0,false},
                   {text,[3,42,66,42]},
                   {sep,
                    [{text,
                      [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,
                       110,32,82,101,112,40,67,41,32,61]}],
                    0,false},
                   {text,",*{clause,LINE,[Rep({throw,P,_})],[],Rep(B)}*"},
                   {sep,
                    [{text,
                      ":, that is, a catch clause with an explicit exception class"}],
                    0,false},
                   {text,[7,42,116,104,114,111,119,42]},
                   {sep,
                    [{text,
                      "3and with or without an explicit stacktrace variable"}],
                    0,false},
                   {text,[3,42,95,42]},
                   {sep,
                    [{text,
                      "|cannot be distinguished from a catch clause without an explicit exception class and without an explicit stacktrace variable."}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{text,
                     [22,73,102,32,67,32,105,115,32,97,32,99,97,116,99,104,32,
                      99,108,97,117,115,101]}],
                   0,false},
                  {text,"\f*X : P -> B*"},
                  {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                  {text,[3,42,88,42]},
                  {sep,
                   [{text,"+is an atomic literal or a variable pattern,"}],
                   0,false},
                  {text,[3,42,80,42]},
                  {sep,
                   [{text,
                     [17,105,115,32,97,32,112,97,116,116,101,114,110,44,32,97,
                      110,100]}],
                   0,false},
                  {text,[3,42,66,42]},
                  {sep,
                   [{text,
                     [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,
                      110,32,82,101,112,40,67,41,32,61]}],
                   0,false},
                  {text,"(*{clause,LINE,[Rep({X,P,_})],[],Rep(B)}*"},
                  {sep,
                   [{text,
                     "c, that is, a catch clause with an explicit exception class and with an explicit stacktrace variable"}],
                   0,false},
                  {text,[3,42,95,42]},
                  {sep,
                   [{text,
                     "ycannot be distinguished from a catch clause with an explicit exception class and without an explicit stacktrace variable."}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,
                    [22,73,102,32,67,32,105,115,32,97,32,99,97,116,99,104,32,
                     99,108,97,117,115,101]}],
                  0,false},
                 {text,[16,42,88,32,58,32,80,32,58,32,83,32,45,62,32,66,42]},
                 {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                 {text,[3,42,88,42]},
                 {sep,
                  [{text,"+is an atomic literal or a variable pattern,"}],
                  0,false},
                 {text,[3,42,80,42]},
                 {sep,[{text,"\ris a pattern,"}],0,false},
                 {text,[3,42,83,42]},
                 {sep,
                  [{text,
                    [18,105,115,32,97,32,118,97,114,105,97,98,108,101,44,32,
                     97,110,100]}],
                  0,false},
                 {text,[3,42,66,42]},
                 {sep,
                  [{text,
                    [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,110,
                     32,82,101,112,40,67,41,32,61]}],
                  0,false},
                 {text,"(*{clause,LINE,[Rep({X,P,S})],[],Rep(B)}*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   [22,73,102,32,67,32,105,115,32,97,32,99,97,116,99,104,32,
                    99,108,97,117,115,101]}],
                 0,false},
                {text,
                 [16,42,80,32,119,104,101,110,32,71,115,32,45,62,32,66,42]},
                {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                {text,[3,42,80,42]},
                {sep,[{text,"\ris a pattern,"}],0,false},
                {text,[4,42,71,115,42]},
                {sep,
                 [{text,
                   [24,105,115,32,97,32,103,117,97,114,100,32,115,101,113,117,
                    101,110,99,101,44,32,97,110,100]}],
                 0,false},
                {text,[3,42,66,42]},
                {sep,
                 [{text,
                   [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,110,
                    32,82,101,112,40,67,41,32,61]}],
                 0,false},
                {text,"1*{clause,LINE,[Rep({throw,P,_})],Rep(Gs),Rep(B)}*"},
                {sep,
                 [{text,
                   ":, that is, a catch clause with an explicit exception class"}],
                 0,false},
                {text,[7,42,116,104,114,111,119,42]},
                {sep,
                 [{text,
                   "3and with or without an explicit stacktrace variable"}],
                 0,false},
                {text,[3,42,95,42]},
                {sep,
                 [{text,
                   "|cannot be distinguished from a catch clause without an explicit exception class and without an explicit stacktrace variable."}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [22,73,102,32,67,32,105,115,32,97,32,99,97,116,99,104,32,99,
                   108,97,117,115,101]}],
                0,false},
               {text,
                [20,42,88,32,58,32,80,32,119,104,101,110,32,71,115,32,45,62,
                 32,66,42]},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,[3,42,88,42]},
               {sep,
                [{text,"+is an atomic literal or a variable pattern,"}],
                0,false},
               {text,[3,42,80,42]},
               {sep,[{text,"\ris a pattern,"}],0,false},
               {text,[4,42,71,115,42]},
               {sep,
                [{text,
                  [24,105,115,32,97,32,103,117,97,114,100,32,115,101,113,117,
                   101,110,99,101,44,32,97,110,100]}],
                0,false},
               {text,[3,42,66,42]},
               {sep,
                [{text,
                  [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,110,
                   32,82,101,112,40,67,41,32,61]}],
                0,false},
               {text,"-*{clause,LINE,[Rep({X,P,_})],Rep(Gs),Rep(B)}*"},
               {sep,
                [{text,
                  "c, that is, a catch clause with an explicit exception class and with an explicit stacktrace variable"}],
                0,false},
               {text,[3,42,95,42]},
               {sep,
                [{text,
                  "ycannot be distinguished from a catch clause with an explicit exception class and without an explicit stacktrace variable."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [22,73,102,32,67,32,105,115,32,97,32,99,97,116,99,104,32,99,
                  108,97,117,115,101]}],
               0,false},
              {text,
               [24,42,88,32,58,32,80,32,58,32,83,32,119,104,101,110,32,71,115,
                32,45,62,32,66,42]},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[3,42,88,42]},
              {sep,
               [{text,"+is an atomic literal or a variable pattern,"}],
               0,false},
              {text,[3,42,80,42]},
              {sep,[{text,"\ris a pattern,"}],0,false},
              {text,[4,42,71,115,42]},
              {sep,
               [{text,
                 [20,105,115,32,97,32,103,117,97,114,100,32,115,101,113,117,
                  101,110,99,101,44]}],
               0,false},
              {text,[3,42,83,42]},
              {sep,
               [{text,
                 [18,105,115,32,97,32,118,97,114,105,97,98,108,101,44,32,97,
                  110,100]}],
               0,false},
              {text,[3,42,66,42]},
              {sep,
               [{text,
                 [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,110,32,
                  82,101,112,40,67,41,32,61]}],
               0,false},
              {text,"-*{clause,LINE,[Rep({X,P,S})],Rep(Gs),Rep(B)}*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                [25,73,102,32,67,32,105,115,32,97,32,102,117,110,99,116,105,
                 111,110,32,99,108,97,117,115,101]}],
              0,false},
             {text,"\r*( Ps ) -> B*"},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[4,42,80,115,42]},
             {sep,
              [{text,
                [25,105,115,32,97,32,112,97,116,116,101,114,110,32,115,101,
                 113,117,101,110,99,101,32,97,110,100]}],
              0,false},
             {text,[3,42,66,42]},
             {sep,
              [{text,
                [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,110,32,
                 82,101,112,40,67,41,32,61]}],
              0,false},
             {text,"!*{clause,LINE,Rep(Ps),[],Rep(B)}*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               [25,73,102,32,67,32,105,115,32,97,32,102,117,110,99,116,105,
                111,110,32,99,108,97,117,115,101]}],
             0,false},
            {text,
             [21,42,40,32,80,115,32,41,32,119,104,101,110,32,71,115,32,45,62,
              32,66,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,[4,42,80,115,42]},
            {sep,
             [{text,
               [22,105,115,32,97,32,112,97,116,116,101,114,110,32,115,101,113,
                117,101,110,99,101,44]}],
             0,false},
            {text,[4,42,71,115,42]},
            {sep,
             [{text,
               [23,105,115,32,97,32,103,117,97,114,100,32,115,101,113,117,101,
                110,99,101,32,97,110,100]}],
             0,false},
            {text,[3,42,66,42]},
            {sep,
             [{text,
               [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,110,32,
                82,101,112,40,67,41,32,61]}],
             0,false},
            {text,"&*{clause,LINE,Rep(Ps),Rep(Gs),Rep(B)}*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,
              [20,73,102,32,67,32,105,115,32,97,110,32,105,102,32,99,108,97,
               117,115,101]}],
            0,false},
           {text,"\t*Gs -> B*"},
           {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
           {text,[4,42,71,115,42]},
           {sep,
            [{text,
              [23,105,115,32,97,32,103,117,97,114,100,32,115,101,113,117,101,
               110,99,101,32,97,110,100]}],
            0,false},
           {text,[3,42,66,42]},
           {sep,
            [{text,
              [24,105,115,32,97,32,98,111,100,121,44,32,116,104,101,110,32,82,
               101,112,40,67,41,32,61]}],
            0,false},
           {text,"!*{clause,LINE,[],Rep(Gs),Rep(B)}*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\t## Guards"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+A guard sequence Gs is a sequence of guards"}],
             0,false},
            {text,[15,42,71,95,49,59,32,46,46,46,59,32,71,95,107,42]},
            {sep,
             [{text,[15,44,32,97,110,100,32,82,101,112,40,71,115,41,32,61]}],
             0,false},
            {text,"\e*[Rep(G_1), ..., Rep(G_k)]*"},
            {sep,
             [{text,"0. If the guard sequence is empty, then Rep(Gs) ="}],
             0,false},
            {text,[4,42,91,93,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"0A guard G is a non-empty sequence of guard tests"}],
             0,false},
            {text,[17,42,71,116,95,49,44,32,46,46,46,44,32,71,116,95,107,42]},
            {sep,
             [{text,[14,44,32,97,110,100,32,82,101,112,40,71,41,32,61]}],
             0,false},
            {text,
             [29,42,91,82,101,112,40,71,116,95,49,41,44,32,46,46,46,44,32,82,
              101,112,40,71,116,95,107,41,93,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"(A guard test Gt is one of the following:"}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{sep,
                         [{text,
                           [26,73,102,32,71,116,32,105,115,32,97,110,32,97,
                            116,111,109,105,99,32,108,105,116,101,114,97,
                            108]}],
                         0,false},
                        {text,[3,42,76,42]},
                        {sep,
                         [{text,
                           [24,44,32,116,104,101,110,32,82,101,112,40,71,116,
                            41,32,61,32,82,101,112,40,76,41,46]}],
                         0,false}],
                       0,false}],
                     0,false},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{sep,
                         [{text," If Gt is a bitstring constructor"}],
                         0,false},
                        {text,
                         "/*<<Gt_1:Size_1/TSL_1, ..., Gt_k:Size_k/TSL_k>>*"},
                        {sep,[{text,"\f, where each"}],0,false},
                        {text,"\b*Size_i*"},
                        {sep,
                         [{text,
                           [24,105,115,32,97,32,103,117,97,114,100,32,116,101,
                            115,116,32,97,110,100,32,101,97,99,104]}],
                         0,false},
                        {text,[7,42,84,83,76,95,105,42]},
                        {sep,
                         [{text,")is a type specificer list, then Rep(Gt) ="}],
                         0,false},
                        {text,
                         "|*{bin,LINE,[{bin_element,LINE,Rep(Gt_1),Rep(Size_1),Rep(TSL_1)}, ..., {bin_element,LINE,Rep(Gt_k),Rep(Size_k),Rep(TSL_k)}]}*"},
                        {sep,
                         [{text,"%. For Rep(TSL), see above. An omitted"}],
                         0,false},
                        {text,"\b*Size_i*"},
                        {sep,
                         [{text,
                           [17,105,115,32,114,101,112,114,101,115,101,110,116,
                            101,100,32,98,121]}],
                         0,false},
                        {text,"\t*default*"},
                        {sep,[{text,"\f. An omitted"}],0,false},
                        {text,[7,42,84,83,76,95,105,42]},
                        {sep,
                         [{text,
                           [17,105,115,32,114,101,112,114,101,115,101,110,116,
                            101,100,32,98,121]}],
                         0,false},
                        {text,"\t*default*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,
                        [{text,
                          [24,73,102,32,71,116,32,105,115,32,97,32,99,111,110,
                           115,32,115,107,101,108,101,116,111,110]}],
                        0,false},
                       {text,
                        [15,42,91,71,116,95,104,32,124,32,71,116,95,116,93,
                         42]},
                       {sep,
                        [{text,
                          [16,44,32,116,104,101,110,32,82,101,112,40,71,116,
                           41,32,61]}],
                        0,false},
                       {text,"!*{cons,LINE,Rep(Gt_h),Rep(Gt_t)}*"},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{sep,
                       [{text,
                         [24,73,102,32,71,116,32,105,115,32,97,32,102,117,110,
                          99,116,105,111,110,32,99,97,108,108]}],
                       0,false},
                      {text,
                       [20,42,65,40,71,116,95,49,44,32,46,46,46,44,32,71,116,
                        95,107,41,42]},
                      {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                      {text,[3,42,65,42]},
                      {sep,
                       [{text,
                         [26,105,115,32,97,110,32,97,116,111,109,44,32,116,
                          104,101,110,32,82,101,112,40,71,116,41,32,61]}],
                       0,false},
                      {text,
                       "0*{call,LINE,Rep(A),[Rep(Gt_1), ..., Rep(Gt_k)]}*"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{sep,
                      [{text,
                        [24,73,102,32,71,116,32,105,115,32,97,32,102,117,110,
                         99,116,105,111,110,32,99,97,108,108]}],
                      0,false},
                     {text,
                      [24,42,65,95,109,58,65,40,71,116,95,49,44,32,46,46,46,
                       44,32,71,116,95,107,41,42]},
                     {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                     {text,[5,42,65,95,109,42]},
                     {sep,[{text,"\vis the atom"}],0,false},
                     {text,"\b*erlang*"},
                     {sep,[{text,[3,97,110,100]}],0,false},
                     {text,[3,42,65,42]},
                     {sep,
                      [{text,")is an atom or an operator, then Rep(Gt) ="}],
                      0,false},
                     {text,
                      "G*{call,LINE,{remote,LINE,Rep(A_m),Rep(A)},[Rep(Gt_1), ..., Rep(Gt_k)]}*"},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,
                     [{text,
                       [23,73,102,32,71,116,32,105,115,32,97,32,109,97,112,32,
                        99,114,101,97,116,105,111,110]}],
                     0,false},
                    {text,
                     [18,42,35,123,65,95,49,44,32,46,46,46,44,32,65,95,107,
                      125,42]},
                    {sep,[{text,"\f, where each"}],0,false},
                    {text,[5,42,65,95,105,42]},
                    {sep,
                     [{text,
                       [17,105,115,32,97,110,32,97,115,115,111,99,105,97,116,
                        105,111,110]}],
                     0,false},
                    {text,
                     [18,42,71,116,95,105,95,49,32,61,62,32,71,116,95,105,95,
                      50,42]},
                    {sep,
                     [{text,
                       [16,44,32,116,104,101,110,32,82,101,112,40,71,116,41,
                        32,61]}],
                     0,false},
                    {text,"&*{map,LINE,[Rep(A_1), ..., Rep(A_k)]}*"},
                    {sep,
                     [{text,
                       [24,46,32,70,111,114,32,82,101,112,40,65,41,44,32,115,
                        101,101,32,97,98,111,118,101,46]}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,
                    [{text,
                      [21,73,102,32,71,116,32,105,115,32,97,32,109,97,112,32,
                       117,112,100,97,116,101]}],
                    0,false},
                   {text,
                    [22,42,71,116,95,48,35,123,65,95,49,44,32,46,46,46,44,32,
                     65,95,107,125,42]},
                   {sep,[{text,"\f, where each"}],0,false},
                   {text,[5,42,65,95,105,42]},
                   {sep,
                    [{text,
                      [17,105,115,32,97,110,32,97,115,115,111,99,105,97,116,
                       105,111,110]}],
                    0,false},
                   {text,
                    [18,42,71,116,95,105,95,49,32,61,62,32,71,116,95,105,95,
                     50,42]},
                   {sep,[{text,[2,111,114]}],0,false},
                   {text,
                    [18,42,71,116,95,105,95,49,32,58,61,32,71,116,95,105,95,
                     50,42]},
                   {sep,
                    [{text,
                      [16,44,32,116,104,101,110,32,82,101,112,40,71,116,41,32,
                       61]}],
                    0,false},
                   {text,"0*{map,LINE,Rep(Gt_0),[Rep(A_1), ..., Rep(A_k)]}*"},
                   {sep,
                    [{text,
                      [24,46,32,70,111,114,32,82,101,112,40,65,41,44,32,115,
                       101,101,32,97,98,111,118,101,46]}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,"\rIf Gt is nil,"}],0,false},
                  {text,[4,42,91,93,42]},
                  {sep,
                   [{text,
                     [16,44,32,116,104,101,110,32,82,101,112,40,71,116,41,32,
                      61]}],
                   0,false},
                  {text,"\f*{nil,LINE}*"},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,
                    [31,73,102,32,71,116,32,105,115,32,97,110,32,111,112,101,
                     114,97,116,111,114,32,103,117,97,114,100,32,116,101,115,
                     116]}],
                  0,false},
                 {text,[14,42,71,116,95,49,32,79,112,32,71,116,95,50,42]},
                 {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                 {text,[4,42,79,112,42]},
                 {sep,
                  [{text,".is a binary operator other than match operator"}],
                  0,false},
                 {text,[3,42,61,42]},
                 {sep,
                  [{text,
                    [16,44,32,116,104,101,110,32,82,101,112,40,71,116,41,32,
                     61]}],
                  0,false},
                 {text,"\"*{op,LINE,Op,Rep(Gt_1),Rep(Gt_2)}*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   [31,73,102,32,71,116,32,105,115,32,97,110,32,111,112,101,
                    114,97,116,111,114,32,103,117,97,114,100,32,116,101,115,
                    116]}],
                 0,false},
                {text,"\t*Op Gt_0*"},
                {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                {text,[4,42,79,112,42]},
                {sep,[{text,"#is a unary operator, then Rep(Gt) ="}],0,false},
                {text,
                 [24,42,123,111,112,44,76,73,78,69,44,79,112,44,82,101,112,40,
                  71,116,95,48,41,125,42]},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,[{text,"#If Gt is a parenthesized guard test"}],0,false},
               {text,"\n*( Gt_0 )*"},
               {sep,
                [{text,
                  [16,44,32,116,104,101,110,32,82,101,112,40,71,116,41,32,
                   61]}],
                0,false},
               {text,"\v*Rep(Gt_0)*"},
               {sep,
                [{text,
                  "O, that is, parenthesized guard tests cannot be distinguished from their bodies."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [26,73,102,32,71,116,32,105,115,32,97,32,114,101,99,111,114,
                  100,32,99,114,101,97,116,105,111,110]}],
               0,false},
              {text,"(*#Name{Field_1=Gt_1, ..., Field_k=Gt_k}*"},
              {sep,[{text,"\f, where each"}],0,false},
              {text,"\t*Field_i*"},
              {sep,[{text,"\ris an atom or"}],0,false},
              {text,[3,42,95,42]},
              {sep,
               [{text,
                 [16,44,32,116,104,101,110,32,82,101,112,40,71,116,41,32,61]}],
               0,false},
              {text,
               "r*{record,LINE,Name,[{record_field,LINE,Rep(Field_1),Rep(Gt_1)}, ..., {record_field,LINE,Rep(Field_k),Rep(Gt_k)}]}*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                [30,73,102,32,71,116,32,105,115,32,97,32,114,101,99,111,114,
                 100,32,102,105,101,108,100,32,97,99,99,101,115,115]}],
              0,false},
             {text,
              [17,42,71,116,95,48,35,78,97,109,101,46,70,105,101,108,100,42]},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[7,42,70,105,101,108,100,42]},
             {sep,
              [{text,
                [26,105,115,32,97,110,32,97,116,111,109,44,32,116,104,101,110,
                 32,82,101,112,40,71,116,41,32,61]}],
              0,false},
             {text,"/*{record_field,LINE,Rep(Gt_0),Name,Rep(Field)}*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               [29,73,102,32,71,116,32,105,115,32,97,32,114,101,99,111,114,
                100,32,102,105,101,108,100,32,105,110,100,101,120]}],
             0,false},
            {text,"\r*#Name.Field*"},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,[7,42,70,105,101,108,100,42]},
            {sep,
             [{text,
               [26,105,115,32,97,110,32,97,116,111,109,44,32,116,104,101,110,
                32,82,101,112,40,71,116,41,32,61]}],
             0,false},
            {text,"%*{record_index,LINE,Name,Rep(Field)}*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,
              [25,73,102,32,71,116,32,105,115,32,97,32,116,117,112,108,101,32,
               115,107,101,108,101,116,111,110]}],
            0,false},
           {text,
            [19,42,123,71,116,95,49,44,32,46,46,46,44,32,71,116,95,107,125,
             42]},
           {sep,
            [{text,
              [16,44,32,116,104,101,110,32,82,101,112,40,71,116,41,32,61]}],
            0,false},
           {text,"**{tuple,LINE,[Rep(Gt_1), ..., Rep(Gt_k)]}*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,[{text,"\eIf Gt is a variable pattern"}],0,false},
          {text,[3,42,86,42]},
          {sep,
           [{text,
             [16,44,32,116,104,101,110,32,82,101,112,40,71,116,41,32,61]}],
           0,false},
          {text,[14,42,123,118,97,114,44,76,73,78,69,44,65,125,42]},
          {sep,
           [{text,
             "J, where A is an atom with a printname consisting of the same characters as"}],
           0,false},
          {text,[3,42,86,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [141,78,111,116,105,99,101,32,116,104,97,116,32,101,118,101,114,
              121,32,103,117,97,114,100,32,116,101,115,116,32,104,97,115,32,
              116,104,101,32,115,97,109,101,32,115,111,117,114,99,101,32,102,
              111,114,109,32,97,115,32,115,111,109,101,32,101,120,112,114,101,
              115,115,105,111,110,44,32,97,110,100,32,105,115,32,114,101,112,
              114,101,115,101,110,116,101,100,32,105,110,32,116,104,101,32,
              115,97,109,101,32,119,97,121,32,97,115,32,116,104,101,32,99,111,
              114,114,101,115,112,111,110,100,105,110,103,32,101,120,112,114,
              101,115,115,105,111,110,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\b## Types"},null},null}},
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{sep,
                             [{text,
                               [25,73,102,32,84,32,105,115,32,97,110,32,97,
                                110,110,111,116,97,116,101,100,32,116,121,112,
                                101]}],
                             0,false},
                            {text,"\n*A :: T_0*"},
                            {sep,
                             [{text,[7,44,32,119,104,101,114,101]}],
                             0,false},
                            {text,[3,42,65,42]},
                            {sep,
                             [{text,
                               [28,105,115,32,97,32,118,97,114,105,97,98,108,
                                101,44,32,116,104,101,110,32,82,101,112,40,84,
                                41,32,61]}],
                             0,false},
                            {text,"#*{ann_type,LINE,[Rep(A),Rep(T_0)]}*"},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,false},
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{text,
                             "LIf T is an atom, a character, or an integer literal L, then Rep(T) = Rep(L)."}],
                           0,false}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{sep,
                            [{text,
                              [24,73,102,32,84,32,105,115,32,97,32,98,105,116,
                               115,116,114,105,110,103,32,116,121,112,101]}],
                            0,false},
                           {text,
                            [15,42,60,60,95,58,77,44,95,58,95,42,78,62,62,42]},
                           {sep,
                            [{text,[7,44,32,119,104,101,114,101]}],
                            0,false},
                           {text,[3,42,77,42]},
                           {sep,[{text,[3,97,110,100]}],0,false},
                           {text,[3,42,78,42]},
                           {sep,
                            [{text,
                              "*are singleton integer types, then Rep(T) ="}],
                            0,false},
                           {text,"$*{type,LINE,binary,[Rep(M),Rep(N)]}*"},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{sep,
                           [{text,"\eIf T is the empty list type"}],
                           0,false},
                          {text,[4,42,91,93,42]},
                          {sep,
                           [{text,
                             [15,44,32,116,104,101,110,32,82,101,112,40,84,41,
                              32,61]}],
                           0,false},
                          {text,
                           [20,42,123,116,121,112,101,44,76,105,110,101,44,
                            110,105,108,44,91,93,125,42]},
                          {sep,
                           [{text,
                             [30,44,32,116,104,97,116,32,105,115,44,32,116,
                              104,101,32,101,109,112,116,121,32,108,105,115,
                              116,32,116,121,112,101]}],
                           0,false},
                          {text,[4,42,91,93,42]},
                          {sep,
                           [{text,
                             "0cannot be distinguished from the predefined type"}],
                           0,false},
                          {text,[7,42,110,105,108,40,41,42]},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{sep,
                          [{text,
                            [18,73,102,32,84,32,105,115,32,97,32,102,117,110,
                             32,116,121,112,101]}],
                          0,false},
                         {text,[7,42,102,117,110,40,41,42]},
                         {sep,
                          [{text,
                            [15,44,32,116,104,101,110,32,82,101,112,40,84,41,
                             32,61]}],
                          0,false},
                         {text,
                          [22,42,123,116,121,112,101,44,76,73,78,69,44,39,102,
                           117,110,39,44,91,93,125,42]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{sep,
                         [{text,
                           [18,73,102,32,84,32,105,115,32,97,32,102,117,110,
                            32,116,121,112,101]}],
                         0,false},
                        {text,
                         [19,42,102,117,110,40,40,46,46,46,41,32,45,62,32,84,
                          95,48,41,42]},
                        {sep,
                         [{text,
                           [15,44,32,116,104,101,110,32,82,101,112,40,84,41,
                            32,61]}],
                         0,false},
                        {text,
                         ".*{type,LINE,'fun',[{type,LINE,any},Rep(T_0)]}*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,
                        [{text,
                          [18,73,102,32,84,32,105,115,32,97,32,102,117,110,32,
                           116,121,112,101]}],
                        0,false},
                       {text,"\t*fun(Ft)*"},
                       {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                       {text,[4,42,70,116,42]},
                       {sep,
                        [{text,"!is a function type, then Rep(T) ="}],
                        0,false},
                       {text,"\t*Rep(Ft)*"},
                       {sep,
                        [{text,
                          [25,46,32,70,111,114,32,82,101,112,40,70,116,41,44,
                           32,115,101,101,32,98,101,108,111,119,46]}],
                        0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{sep,
                       [{text,
                         [29,73,102,32,84,32,105,115,32,97,110,32,105,110,116,
                          101,103,101,114,32,114,97,110,103,101,32,116,121,
                          112,101]}],
                       0,false},
                      {text,"\b*L .. H*"},
                      {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                      {text,[3,42,76,42]},
                      {sep,[{text,[3,97,110,100]}],0,false},
                      {text,[3,42,72,42]},
                      {sep,
                       [{text,"*are singleton integer types, then Rep(T) ="}],
                       0,false},
                      {text,"#*{type,LINE,range,[Rep(L),Rep(H)]}*"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{sep,
                      [{text,
                        [18,73,102,32,84,32,105,115,32,97,32,109,97,112,32,
                         116,121,112,101]}],
                      0,false},
                     {text,[7,42,109,97,112,40,41,42]},
                     {sep,
                      [{text,
                        [15,44,32,116,104,101,110,32,82,101,112,40,84,41,32,
                         61]}],
                      0,false},
                     {text,
                      [21,42,123,116,121,112,101,44,76,73,78,69,44,109,97,112,
                       44,97,110,121,125,42]},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,
                     [{text,
                       [18,73,102,32,84,32,105,115,32,97,32,109,97,112,32,116,
                        121,112,101]}],
                     0,false},
                    {text,
                     [18,42,35,123,65,95,49,44,32,46,46,46,44,32,65,95,107,
                      125,42]},
                    {sep,[{text,"\f, where each"}],0,false},
                    {text,[5,42,65,95,105,42]},
                    {sep,
                     [{text,"%is an association type, then Rep(T) ="}],
                     0,false},
                    {text,"+*{type,LINE,map,[Rep(A_1), ..., Rep(A_k)]}*"},
                    {sep,
                     [{text,
                       [24,46,32,70,111,114,32,82,101,112,40,65,41,44,32,115,
                        101,101,32,98,101,108,111,119,46]}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,
                    [{text,
                      [24,73,102,32,84,32,105,115,32,97,110,32,111,112,101,
                       114,97,116,111,114,32,116,121,112,101]}],
                    0,false},
                   {text,"\f*T_1 Op T_2*"},
                   {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                   {text,[4,42,79,112,42]},
                   {sep,
                    [{text,
                      [128,105,115,32,97,32,98,105,110,97,114,121,32,111,112,
                       101,114,97,116,111,114,32,40,116,104,105,115,32,105,
                       115,32,97,110,32,111,99,99,117,114,114,101,110,99,101,
                       32,111,102,32,97,110,32,101,120,112,114,101,115,115,
                       105,111,110,32,116,104,97,116,32,99,97,110,32,98,101,
                       32,101,118,97,108,117,97,116,101,100,32,116,111,32,97,
                       110,32,105,110,116,101,103,101,114,32,97,116,32,99,111,
                       109,112,105,108,101,32,116,105,109,101,41,44,32,116,
                       104,101,110,32,82,101,112,40,84,41,32,61]}],
                    0,false},
                   {text," *{op,LINE,Op,Rep(T_1),Rep(T_2)}*"},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{text,
                     [24,73,102,32,84,32,105,115,32,97,110,32,111,112,101,114,
                      97,116,111,114,32,116,121,112,101]}],
                   0,false},
                  {text,"\b*Op T_0*"},
                  {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                  {text,[4,42,79,112,42]},
                  {sep,
                   [{text,
                     [127,105,115,32,97,32,117,110,97,114,121,32,111,112,101,
                      114,97,116,111,114,32,40,116,104,105,115,32,105,115,32,
                      97,110,32,111,99,99,117,114,114,101,110,99,101,32,111,
                      102,32,97,110,32,101,120,112,114,101,115,115,105,111,
                      110,32,116,104,97,116,32,99,97,110,32,98,101,32,101,118,
                      97,108,117,97,116,101,100,32,116,111,32,97,110,32,105,
                      110,116,101,103,101,114,32,97,116,32,99,111,109,112,105,
                      108,101,32,116,105,109,101,41,44,32,116,104,101,110,32,
                      82,101,112,40,84,41,32,61]}],
                   0,false},
                  {text,
                   [23,42,123,111,112,44,76,73,78,69,44,79,112,44,82,101,112,
                    40,84,95,48,41,125,42]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,[7,73,102,32,84,32,105,115]}],0,false},
                 {text,"\t*( T_0 )*"},
                 {sep,
                  [{text,
                    [15,44,32,116,104,101,110,32,82,101,112,40,84,41,32,61]}],
                  0,false},
                 {text,"\n*Rep(T_0)*"},
                 {sep,
                  [{text,
                    "I, that is, parenthesized types cannot be distinguished from their bodies."}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,"'If T is a predefined (or built-in) type"}],
                 0,false},
                {text,
                 [18,42,78,40,84,95,49,44,32,46,46,46,44,32,84,95,107,41,42]},
                {sep,
                 [{text,
                   [15,44,32,116,104,101,110,32,82,101,112,40,84,41,32,61]}],
                 0,false},
                {text,")*{type,LINE,N,[Rep(T_1), ..., Rep(T_k)]}*"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [21,73,102,32,84,32,105,115,32,97,32,114,101,99,111,114,100,
                   32,116,121,112,101]}],
                0,false},
               {text,
                [22,42,35,78,97,109,101,123,70,95,49,44,32,46,46,46,44,32,70,
                 95,107,125,42]},
               {sep,[{text,"\f, where each"}],0,false},
               {text,[5,42,70,95,105,42]},
               {sep,[{text,"%is a record field type, then Rep(T) ="}],0,false},
               {text,
                "8*{type,LINE,record,[Rep(Name),Rep(F_1), ..., Rep(F_k)]}*"},
               {sep,
                [{text,
                  [24,46,32,70,111,114,32,82,101,112,40,70,41,44,32,115,101,
                   101,32,98,101,108,111,119,46]}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [21,73,102,32,84,32,105,115,32,97,32,114,101,109,111,116,101,
                  32,116,121,112,101]}],
               0,false},
              {text,
               [20,42,77,58,78,40,84,95,49,44,32,46,46,46,44,32,84,95,107,41,
                42]},
              {sep,
               [{text,
                 [15,44,32,116,104,101,110,32,82,101,112,40,84,41,32,61]}],
               0,false},
              {text,
               ">*{remote_type,LINE,[Rep(M),Rep(N),[Rep(T_1), ..., Rep(T_k)]]}*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                [20,73,102,32,84,32,105,115,32,97,32,116,117,112,108,101,32,
                 116,121,112,101]}],
              0,false},
             {text,"\t*tuple()*"},
             {sep,
              [{text,[15,44,32,116,104,101,110,32,82,101,112,40,84,41,32,61]}],
              0,false},
             {text,
              [23,42,123,116,121,112,101,44,76,73,78,69,44,116,117,112,108,
               101,44,97,110,121,125,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               [20,73,102,32,84,32,105,115,32,97,32,116,117,112,108,101,32,
                116,121,112,101]}],
             0,false},
            {text,[17,42,123,84,95,49,44,32,46,46,46,44,32,84,95,107,125,42]},
            {sep,
             [{text,[15,44,32,116,104,101,110,32,82,101,112,40,84,41,32,61]}],
             0,false},
            {text,"-*{type,LINE,tuple,[Rep(T_1), ..., Rep(T_k)]}*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,
              [20,73,102,32,84,32,105,115,32,97,32,116,121,112,101,32,117,110,
               105,111,110]}],
            0,false},
           {text,[17,42,84,95,49,32,124,32,46,46,46,32,124,32,84,95,107,42]},
           {sep,
            [{text,[15,44,32,116,104,101,110,32,82,101,112,40,84,41,32,61]}],
            0,false},
           {text,"-*{type,LINE,union,[Rep(T_1), ..., Rep(T_k)]}*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,
             [23,73,102,32,84,32,105,115,32,97,32,116,121,112,101,32,118,97,
              114,105,97,98,108,101]}],
           0,false},
          {text,[3,42,86,42]},
          {sep,
           [{text,[15,44,32,116,104,101,110,32,82,101,112,40,84,41,32,61]}],
           0,false},
          {text,[14,42,123,118,97,114,44,76,73,78,69,44,65,125,42]},
          {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
          {text,[3,42,65,42]},
          {sep,
           [{text,
             "@is an atom with a printname consisting of the same characters as"}],
           0,false},
          {text,[3,42,86,42]},
          {sep,
           [{text,"5. A type variable is any variable except underscore ("}],
           0,false},
          {text,[3,42,95,42]},
          {sep,[{text,[2,41,46]}],0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,[{text,"\eIf T is a user-defined type"}],0,false},
         {text,[18,42,78,40,84,95,49,44,32,46,46,46,44,32,84,95,107,41,42]},
         {sep,
          [{text,[15,44,32,116,104,101,110,32,82,101,112,40,84,41,32,61]}],
          0,false},
         {text,".*{user_type,LINE,N,[Rep(T_1), ..., Rep(T_k)]}*"},
         {sep,[{text,[1,46]}],0,false}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [17,35,35,32,70,117,110,99,116,105,111,110,32,84,121,112,101,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"+A function type Ft is one of the following:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,"$If Ft is a constrained function type"}],0,false},
           {text,[14,42,70,116,95,49,32,119,104,101,110,32,70,99,42]},
           {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
           {text,[6,42,70,116,95,49,42]},
           {sep,
            [{text,
              [22,105,115,32,97,32,102,117,110,99,116,105,111,110,32,116,121,
               112,101,32,97,110,100]}],
            0,false},
           {text,[4,42,70,99,42]},
           {sep,[{text,"'is a function constraint, then Rep(T) ="}],0,false},
           {text,"-*{type,LINE,bounded_fun,[Rep(Ft_1),Rep(Fc)]}*"},
           {sep,
            [{text,
              [25,46,32,70,111,114,32,82,101,112,40,70,99,41,44,32,115,101,
               101,32,98,101,108,111,119,46]}],
            0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,
              [24,73,102,32,70,116,32,105,115,32,97,32,102,117,110,99,116,105,
               111,110,32,116,121,112,101]}],
            0,false},
           {text,
            [24,42,40,84,95,49,44,32,46,46,46,44,32,84,95,110,41,32,45,62,32,
             84,95,48,42]},
           {sep,[{text,"\f, where each"}],0,false},
           {text,[5,42,84,95,105,42]},
           {sep,
            [{text,
              [25,105,115,32,97,32,116,121,112,101,44,32,116,104,101,110,32,
               82,101,112,40,70,116,41,32,61]}],
            0,false},
           {text,
            "L*{type,LINE,'fun',[{type,LINE,product,[Rep(T_1), ..., Rep(T_n)]},Rep(T_0)]}*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [23,35,35,32,70,117,110,99,116,105,111,110,32,67,111,110,115,116,
           114,97,105,110,116,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?A function constraint Fc is a non-empty sequence of constraints"}],
              0,false},
             {text,[15,42,67,95,49,44,32,46,46,46,44,32,67,95,107,42]},
             {sep,
              [{text,[15,44,32,97,110,100,32,82,101,112,40,70,99,41,32,61]}],
              0,false},
             {text,"\e*[Rep(C_1), ..., Rep(C_k)]*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,
             [20,73,102,32,67,32,105,115,32,97,32,99,111,110,115,116,114,97,
              105,110,116]}],
           0,false},
          {text,"\b*V :: T*"},
          {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
          {text,[3,42,86,42]},
          {sep,
           [{text,
             [22,105,115,32,97,32,116,121,112,101,32,118,97,114,105,97,98,108,
              101,32,97,110,100]}],
           0,false},
          {text,[3,42,84,42]},
          {sep,
           [{text,
             [24,105,115,32,97,32,116,121,112,101,44,32,116,104,101,110,32,82,
              101,112,40,67,41,32,61]}],
           0,false},
          {text,
           "A*{type,LINE,constraint,[{atom,LINE,is_subtype},[Rep(V),Rep(T)]]}*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [20,35,35,32,65,115,115,111,99,105,97,116,105,111,110,32,84,121,112,
           101,115]},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,"\eIf A is an association type"}],0,false},
           {text,"\b*K => V*"},
           {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
           {text,[3,42,75,42]},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,[3,42,86,42]},
           {sep,
            [{text,
              [24,97,114,101,32,116,121,112,101,115,44,32,116,104,101,110,32,
               82,101,112,40,65,41,32,61]}],
            0,false},
           {text,"-*{type,LINE,map_field_assoc,[Rep(K),Rep(V)]}*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,"\eIf A is an association type"}],0,false},
           {text,"\b*K := V*"},
           {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
           {text,[3,42,75,42]},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,[3,42,86,42]},
           {sep,
            [{text,
              [24,97,114,101,32,116,121,112,101,115,44,32,116,104,101,110,32,
               82,101,112,40,65,41,32,61]}],
            0,false},
           {text,"-*{type,LINE,map_field_exact,[Rep(K),Rep(V)]}*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [21,35,35,32,82,101,99,111,114,100,32,70,105,101,108,100,32,84,121,
           112,101,115]},
         null},
        null}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,[{text,"\eIf F is a record field type"}],0,false},
          {text,[14,42,78,97,109,101,32,58,58,32,84,121,112,101,42]},
          {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
          {text,[6,42,84,121,112,101,42]},
          {sep,
           [{text,
             [24,105,115,32,97,32,116,121,112,101,44,32,116,104,101,110,32,82,
              101,112,40,70,41,32,61]}],
           0,false},
          {text,".*{type,LINE,field_type,[Rep(Name),Rep(Type)]}*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"*## The Abstract Format after Preprocessing"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [22,84,104,101,32,99,111,109,112,105,108,97,116,105,111,110,32,
              111,112,116,105,111,110]}],
           0,false},
          {text,"\f*debug_info*"},
          {sep,
           [{text,
             "Hcan be specified to the compiler to have the abstract code stored in the"}],
           0,false},
          {text,[15,42,97,98,115,116,114,97,99,116,95,99,111,100,101,42]},
          {sep,
           [{text,"0chunk in the Beam file (for debugging purposes)."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\eAs from Erlang/OTP R9C, the"}],0,false},
          {text,[15,42,97,98,115,116,114,97,99,116,95,99,111,100,101,42]},
          {sep,
           [{text,[14,99,104,117,110,107,32,99,111,110,116,97,105,110,115]}],
           0,false},
          {text," *{raw_abstract_v1,AbstractCode}*"},
          {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
          {text,[14,42,65,98,115,116,114,97,99,116,67,111,100,101,42]},
          {sep,
           [{text,"2is the abstract code as described in this section."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [148,73,110,32,79,84,80,32,114,101,108,101,97,115,101,115,32,98,
              101,102,111,114,101,32,82,57,67,44,32,116,104,101,32,97,98,115,
              116,114,97,99,116,32,99,111,100,101,32,97,102,116,101,114,32,
              115,111,109,101,32,109,111,114,101,32,112,114,111,99,101,115,
              115,105,110,103,32,119,97,115,32,115,116,111,114,101,100,32,105,
              110,32,116,104,101,32,66,101,97,109,32,102,105,108,101,46,32,84,
              104,101,32,102,105,114,115,116,32,101,108,101,109,101,110,116,
              32,111,102,32,116,104,101,32,116,117,112,108,101,32,119,111,117,
              108,100,32,98,101,32,101,105,116,104,101,114]}],
           0,false},
          {text,"\r*abstract_v1*"},
          {sep,
           [{text,[15,40,105,110,32,79,84,80,32,82,55,66,41,32,111,114]}],
           0,false},
          {text,"\r*abstract_v2*"},
          {sep,[{text,"\r(in OTP R8B)."}],0,false}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
