{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\f# erl_driver"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\f# erl_driver"},null},null}}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,[{text,"#API functions for an Erlang driver."}],0,false}],
           0,true},
          null},
         null}}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     "ñAn Erlang driver is a library containing a set of native driver callback functions that the Erlang Virtual Machine calls when certain events occur. There can be multiple instances of a driver, each instance is associated with an Erlang port."}],
                   0,false}],
                 0,true},
                null},
               null}},
             {text,
              [29,60,97,32,110,97,109,101,61,34,87,65,82,78,73,78,71,34,62,87,
               65,82,78,73,78,71,60,47,97,62]},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,"-**Use this functionality with extreme care.**"}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         [133,65,32,100,114,105,118,101,114,32,99,97,108,108,
                          98,97,99,107,32,105,115,32,101,120,101,99,117,116,
                          101,100,32,97,115,32,97,32,100,105,114,101,99,116,
                          32,101,120,116,101,110,115,105,111,110,32,111,102,
                          32,116,104,101,32,110,97,116,105,118,101,32,99,111,
                          100,101,32,111,102,32,116,104,101,32,86,77,46,32,69,
                          120,101,99,117,116,105,111,110,32,105,115,32,110,
                          111,116,32,109,97,100,101,32,105,110,32,97,32,115,
                          97,102,101,32,101,110,118,105,114,111,110,109,101,
                          110,116,46,32,84,104,101,32,86,77]}],
                       0,false},
                      {text,"\n**cannot**"},
                      {sep,
                       [{text,
                         "Éprovide the same services as provided when executing Erlang code, such as pre-emptive scheduling or memory protection. If the driver callback function does not behave well, the whole VM will misbehave."}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      "5A driver callback that crash will crash the whole VM."}],
                    0,false}],
                  0,false},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      "ÖAn erroneously implemented driver callback can cause a VM internal state inconsistency, which can cause a crash of the VM, or miscellaneous misbehaviors of the VM at any point after the call to the driver callback."}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,
                     [{text,
                       [23,65,32,100,114,105,118,101,114,32,99,97,108,108,98,
                        97,99,107,32,100,111,105,110,103]}],
                     0,false},
                    {text,
                     [29,91,108,101,110,103,116,104,121,32,119,111,114,107,93,
                      40,35,108,101,110,103,116,104,121,95,119,111,114,107,
                      41]},
                    {sep,
                     [{text,
                       [317,98,101,102,111,114,101,32,114,101,116,117,114,110,
                        105,110,103,32,100,101,103,114,97,100,101,115,32,114,
                        101,115,112,111,110,115,105,118,101,110,101,115,115,
                        32,111,102,32,116,104,101,32,86,77,32,97,110,100,32,
                        99,97,110,32,99,97,117,115,101,32,109,105,115,99,101,
                        108,108,97,110,101,111,117,115,32,115,116,114,97,110,
                        103,101,32,98,101,104,97,118,105,111,114,115,46,32,83,
                        117,99,104,32,115,116,114,97,110,103,101,32,98,101,
                        104,97,118,105,111,114,115,32,105,110,99,108,117,100,
                        101,44,32,98,117,116,32,97,114,101,32,110,111,116,32,
                        108,105,109,105,116,101,100,32,116,111,44,32,101,120,
                        116,114,101,109,101,32,109,101,109,111,114,121,32,117,
                        115,97,103,101,32,97,110,100,32,98,97,100,32,108,111,
                        97,100,32,98,97,108,97,110,99,105,110,103,32,98,101,
                        116,119,101,101,110,32,115,99,104,101,100,117,108,101,
                        114,115,46,32,83,116,114,97,110,103,101,32,98,101,104,
                        97,118,105,111,114,115,32,116,104,97,116,32,99,97,110,
                        32,111,99,99,117,114,32,98,101,99,97,117,115,101,32,
                        111,102,32,108,101,110,103,116,104,121,32,119,111,114,
                        107,32,99,97,110,32,97,108,115,111,32,118,97,114,121,
                        32,98,101,116,119,101,101,110,32,69,114,108,97,110,
                        103,47,79,84,80,32,114,101,108,101,97,115,101,115,
                        46]}],
                     0,false}],
                   0,false}],
                 0,false}}],
              0,false},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       ">As from ERTS 5.5.3 the driver interface has been extended (see"}],
                     0,false},
                    {text,
                     ">[driver_entry#extended_marker](./driver_entry#extended_marker)"},
                    {sep,
                     [{text,"$). The extended interface introduces"}],
                     0,false},
                    {text,")[version management](#version_management)"},
                    {sep,
                     [{text,
                       "/, the possibility to pass capability flags (see"}],
                     0,false},
                    {text,
                     "8[driver_entry#driver_flags](./driver_entry#driver_flags)"},
                    {sep,
                     [{text,
                       "T) to the runtime system at driver initialization, and some new driver API functions."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         "qAs from ERTS 5.9 old drivers must be recompiled and use the extended interface. They must also be adjusted to the"}],
                       0,false},
                      {text,
                       "8[64-bit capable driver interface](#rewrites_for_64_bits)"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "JThe driver calls back to the emulator, using the API functions declared in"}],
                     0,false},
                    {text,
                     [14,42,101,114,108,95,100,114,105,118,101,114,46,104,42]},
                    {sep,
                     [{text,
                       "M. They are used for outputting data from the driver, using timers, and so on."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "ÀEach driver instance is associated with a port. Every port has a port owner process. Communication with the port is normally done through the port owner process. Most of the functions take the"}],
                     0,false},
                    {text,[6,42,112,111,114,116,42]},
                    {sep,
                     [{text,
                       "·handle as an argument. This identifies the driver instance. Notice that this port handle must be stored by the driver, it is not given when the driver is called from the emulator (see"}],
                     0,false},
                    {text,"0[driver_entry#emulator](./driver_entry#emulator)"},
                    {sep,[{text,[2,41,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       ".Some of the functions take a parameter of type"}],
                     0,false},
                    {text,
                     [14,42,69,114,108,68,114,118,66,105,110,97,114,121,42]},
                    {sep,
                     [{text,
                       [128,44,32,97,32,100,114,105,118,101,114,32,98,105,110,
                        97,114,121,46,32,73,116,32,105,115,32,116,111,32,98,
                        101,32,98,111,116,104,32,97,108,108,111,99,97,116,101,
                        100,32,97,110,100,32,102,114,101,101,100,32,98,121,32,
                        116,104,101,32,99,97,108,108,101,114,46,32,85,115,105,
                        110,103,32,97,32,98,105,110,97,114,121,32,100,105,114,
                        101,99,116,108,121,32,97,118,111,105,100,115,32,111,
                        110,101,32,101,120,116,114,97,32,99,111,112,121,105,
                        110,103,32,111,102,32,100,97,116,97,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "9Many of the output functions have a \"header buffer\", with"}],
                     0,false},
                    {text,[6,42,104,98,117,102,42]},
                    {sep,[{text,[3,97,110,100]}],0,false},
                    {text,[6,42,104,108,101,110,42]},
                    {sep,
                     [{text,
                       [302,112,97,114,97,109,101,116,101,114,115,46,32,84,
                        104,105,115,32,98,117,102,102,101,114,32,105,115,32,
                        115,101,110,116,32,97,115,32,97,32,108,105,115,116,32,
                        98,101,102,111,114,101,32,116,104,101,32,98,105,110,
                        97,114,121,32,40,111,114,32,108,105,115,116,44,32,100,
                        101,112,101,110,100,105,110,103,32,111,110,32,112,111,
                        114,116,32,109,111,100,101,41,32,116,104,97,116,32,
                        105,115,32,115,101,110,116,46,32,84,104,105,115,32,
                        105,115,32,99,111,110,118,101,110,105,101,110,116,32,
                        119,104,101,110,32,109,97,116,99,104,105,110,103,32,
                        111,110,32,109,101,115,115,97,103,101,115,32,114,101,
                        99,101,105,118,101,100,32,102,114,111,109,32,116,104,
                        101,32,112,111,114,116,46,32,40,65,108,116,104,111,
                        117,103,104,32,105,110,32,116,104,101,32,108,97,116,
                        101,115,116,32,69,114,108,97,110,103,32,118,101,114,
                        115,105,111,110,115,32,116,104,101,114,101,32,105,115,
                        32,116,104,101,32,98,105,110,97,114,121,32,115,121,
                        110,116,97,120,44,32,119,104,105,99,104,32,101,110,97,
                        98,108,101,115,32,121,111,117,32,116,111,32,109,97,
                        116,99,104,32,111,110,32,116,104,101,32,98,101,103,
                        105,110,110,105,110,103,32,111,102,32,97,32,98,105,
                        110,97,114,121,46,41]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,"%<a name=\"smp_support\">smp_support</a>"},
                    {sep,
                     [{text,
                       [480,73,110,32,116,104,101,32,114,117,110,116,105,109,
                        101,32,115,121,115,116,101,109,32,119,105,116,104,32,
                        83,77,80,32,115,117,112,112,111,114,116,44,32,100,114,
                        105,118,101,114,115,32,97,114,101,32,108,111,99,107,
                        101,100,32,101,105,116,104,101,114,32,111,110,32,100,
                        114,105,118,101,114,32,108,101,118,101,108,32,111,114,
                        32,112,111,114,116,32,108,101,118,101,108,32,40,100,
                        114,105,118,101,114,32,105,110,115,116,97,110,99,101,
                        32,108,101,118,101,108,41,46,32,66,121,32,100,101,102,
                        97,117,108,116,32,100,114,105,118,101,114,32,108,101,
                        118,101,108,32,108,111,99,107,105,110,103,32,119,105,
                        108,108,32,98,101,32,117,115,101,100,44,32,116,104,97,
                        116,32,105,115,44,32,111,110,108,121,32,111,110,101,
                        32,101,109,117,108,97,116,111,114,32,116,104,114,101,
                        97,100,32,119,105,108,108,32,101,120,101,99,117,116,
                        101,32,99,111,100,101,32,105,110,32,116,104,101,32,
                        100,114,105,118,101,114,32,97,116,32,97,32,116,105,
                        109,101,46,32,73,102,32,112,111,114,116,32,108,101,
                        118,101,108,32,108,111,99,107,105,110,103,32,105,115,
                        32,117,115,101,100,44,32,109,117,108,116,105,112,108,
                        101,32,101,109,117,108,97,116,111,114,32,116,104,114,
                        101,97,100,115,32,99,97,110,32,101,120,101,99,117,116,
                        101,32,99,111,100,101,32,105,110,32,116,104,101,32,
                        100,114,105,118,101,114,32,97,116,32,116,104,101,32,
                        115,97,109,101,32,116,105,109,101,46,32,79,110,108,
                        121,32,111,110,101,32,116,104,114,101,97,100,32,97,
                        116,32,97,32,116,105,109,101,32,119,105,108,108,32,99,
                        97,108,108,32,100,114,105,118,101,114,32,99,97,108,
                        108,98,97,99,107,115,32,99,111,114,114,101,115,112,
                        111,110,100,105,110,103,32,116,111,32,116,104,101,32,
                        115,97,109,101,32,112,111,114,116,44,32,116,104,111,
                        117,103,104,46,32,84,111,32,101,110,97,98,108,101,32,
                        112,111,114,116,32,108,101,118,101,108,32,108,111,99,
                        107,105,110,103,44,32,115,101,116,32,116,104,101]}],
                     0,false},
                    {text,
                     [31,42,69,82,76,95,68,82,86,95,70,76,65,71,95,85,83,69,
                      95,80,79,82,84,95,76,79,67,75,73,78,71,42]},
                    {text,"*[driver flag](./driver_entry#driver_flags)"},
                    {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
                    {text,
                     [28,91,100,114,105,118,101,114,95,101,110,116,114,121,93,
                      40,100,114,105,118,101,114,95,101,110,116,114,121,41]},
                    {sep,
                     [{text,
                       "¤used by the driver. When port level locking is used, the driver writer is responsible for synchronizing all accesses to data shared by the ports (driver instances)."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     "±Most drivers written before the runtime system with SMP support existed can run in the runtime system with SMP support, without being rewritten, if driver level locking is used."}],
                   0,false}],
                 0,true},
                null},
               null}},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "×It is assumed that drivers do not access other drivers. If drivers access each other, they must provide their own mechanism for thread-safe synchronization. Such \"inter-driver communication\" is strongly discouraged."}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [129,80,114,101,118,105,111,117,115,108,121,44,32,105,
                        110,32,116,104,101,32,114,117,110,116,105,109,101,32,
                        115,121,115,116,101,109,32,119,105,116,104,111,117,
                        116,32,83,77,80,32,115,117,112,112,111,114,116,44,32,
                        115,112,101,99,105,102,105,99,32,100,114,105,118,101,
                        114,32,99,97,108,108,98,97,99,107,115,32,119,101,114,
                        101,32,97,108,119,97,121,115,32,99,97,108,108,101,100,
                        32,102,114,111,109,32,116,104,101,32,115,97,109,101,
                        32,116,104,114,101,97,100,46,32,84,104,105,115,32,105,
                        115]}],
                     0,false},
                    {text,[7,42,42,110,111,116,42,42]},
                    {sep,
                     [{text,
                       [287,116,104,101,32,99,97,115,101,32,105,110,32,116,
                        104,101,32,114,117,110,116,105,109,101,32,115,121,115,
                        116,101,109,32,119,105,116,104,32,83,77,80,32,115,117,
                        112,112,111,114,116,46,32,82,101,103,97,114,100,108,
                        101,115,115,32,111,102,32,108,111,99,107,105,110,103,
                        32,115,99,104,101,109,101,32,117,115,101,100,44,32,99,
                        97,108,108,115,32,116,111,32,100,114,105,118,101,114,
                        32,99,97,108,108,98,97,99,107,115,32,99,97,110,32,98,
                        101,32,109,97,100,101,32,102,114,111,109,32,100,105,
                        102,102,101,114,101,110,116,32,116,104,114,101,97,100,
                        115,46,32,70,111,114,32,101,120,97,109,112,108,101,44,
                        32,116,119,111,32,99,111,110,115,101,99,117,116,105,
                        118,101,32,99,97,108,108,115,32,116,111,32,101,120,97,
                        99,116,108,121,32,116,104,101,32,115,97,109,101,32,99,
                        97,108,108,98,97,99,107,32,102,111,114,32,101,120,97,
                        99,116,108,121,32,116,104,101,32,115,97,109,101,32,
                        112,111,114,116,32,99,97,110,32,98,101,32,109,97,100,
                        101,32,102,114,111,109,32,116,119,111,32,100,105,102,
                        102,101,114,101,110,116,32,116,104,114,101,97,100,115,
                        46,32,84,104,105,115,32,105,115,32,102,111,114]}],
                     0,false},
                    {text,"\b**most**"},
                    {sep,
                     [{text,
                       "ndrivers not a problem, but it can be. Drivers that depend on all callbacks that are called in the same thread,"}],
                     0,false},
                    {text,"\b**must**"},
                    {sep,
                     [{text,
                       "Ibe rewritten before they are used in the runtime system with SMP support."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "`Regardless of locking scheme used, calls to driver callbacks can be made from different threads."}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [30,77,111,115,116,32,102,117,110,99,116,105,111,110,
                        115,32,105,110,32,116,104,105,115,32,65,80,73,32,97,
                        114,101]}],
                     0,false},
                    {text,[7,42,42,110,111,116,42,42]},
                    {sep,
                     [{text,
                       [26,116,104,114,101,97,100,45,115,97,102,101,44,32,116,
                        104,97,116,32,105,115,44,32,116,104,101,121]}],
                     0,false},
                    {text,"\n**cannot**"},
                    {sep,
                     [{text,
                       [358,98,101,32,99,97,108,108,101,100,32,102,114,111,
                        109,32,97,114,98,105,116,114,97,114,121,32,116,104,
                        114,101,97,100,115,46,32,70,117,110,99,116,105,111,
                        110,115,32,116,104,97,116,32,97,114,101,32,110,111,
                        116,32,100,111,99,117,109,101,110,116,101,100,32,97,
                        115,32,116,104,114,101,97,100,45,115,97,102,101,32,99,
                        97,110,32,111,110,108,121,32,98,101,32,99,97,108,108,
                        101,100,32,102,114,111,109,32,100,114,105,118,101,114,
                        32,99,97,108,108,98,97,99,107,115,32,111,114,32,102,
                        117,110,99,116,105,111,110,32,99,97,108,108,115,32,
                        100,101,115,99,101,110,100,105,110,103,32,102,114,111,
                        109,32,97,32,100,114,105,118,101,114,32,99,97,108,108,
                        98,97,99,107,32,99,97,108,108,46,32,78,111,116,105,99,
                        101,32,116,104,97,116,32,100,114,105,118,101,114,32,
                        99,97,108,108,98,97,99,107,115,32,99,97,110,32,98,101,
                        32,99,97,108,108,101,100,32,102,114,111,109,32,100,
                        105,102,102,101,114,101,110,116,32,116,104,114,101,97,
                        100,115,46,32,84,104,105,115,44,32,104,111,119,101,
                        118,101,114,44,32,105,115,32,110,111,116,32,97,32,112,
                        114,111,98,108,101,109,32,102,111,114,32,97,110,121,
                        32,102,117,110,99,116,105,111,110,32,105,110,32,116,
                        104,105,115,32,65,80,73,44,32,97,115,32,116,104,101,
                        32,101,109,117,108,97,116,111,114,32,104,97,115,32,99,
                        111,110,116,114,111,108,32,111,118,101,114,32,116,104,
                        101,115,101,32,116,104,114,101,97,100,115,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         "6Functions not explicitly documented as thread-safe are"}],
                       0,false},
                      {text,[7,42,42,110,111,116,42,42]},
                      {sep,
                       [{text,
                         "0thread safe. Also notice that some functions are"}],
                       0,false},
                      {text,"\b**only**"},
                      {sep,
                       [{text,
                         ";thread-safe when used in a runtime system with SMP support."}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         "¾A function not explicitly documented as thread-safe can, at some point in time, have a thread-safe implementation in the runtime system. Such an implementation can however change to a thread"}],
                       0,false},
                      {text,"\n**unsafe**"},
                      {sep,
                       [{text,
                         [26,105,109,112,108,101,109,101,110,116,97,116,105,
                          111,110,32,97,116,32,97,110,121,32,116,105,109,
                          101]}],
                       0,false},
                      {text,
                       [22,42,42,119,105,116,104,111,117,116,32,97,110,121,32,
                        110,111,116,105,99,101,42,42]},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "S**Only use functions explicitly documented as thread-safe from arbitrary threads.**"}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,"'<a name=\"lengthy_work\">lengthy_work</a>"},
                    {sep,
                     [{text,
                       [19,65,115,32,109,101,110,116,105,111,110,101,100,32,
                        105,110,32,116,104,101]}],
                     0,false},
                    {text,
                     [19,91,119,97,114,110,105,110,103,93,40,35,87,65,82,78,
                      73,78,71,41]},
                    {sep,
                     [{text,
                       [517,116,101,120,116,32,97,116,32,116,104,101,32,98,
                        101,103,105,110,110,105,110,103,32,111,102,32,116,104,
                        105,115,32,115,101,99,116,105,111,110,44,32,105,116,
                        32,105,115,32,111,102,32,118,105,116,97,108,32,105,
                        109,112,111,114,116,97,110,99,101,32,116,104,97,116,
                        32,97,32,100,114,105,118,101,114,32,99,97,108,108,98,
                        97,99,107,32,114,101,116,117,114,110,115,32,114,101,
                        108,97,116,105,118,101,108,121,32,102,97,115,116,46,
                        32,73,116,32,105,115,32,100,105,102,102,105,99,117,
                        108,116,32,116,111,32,103,105,118,101,32,97,110,32,
                        101,120,97,99,116,32,109,97,120,105,109,117,109,32,97,
                        109,111,117,110,116,32,111,102,32,116,105,109,101,32,
                        116,104,97,116,32,97,32,100,114,105,118,101,114,32,99,
                        97,108,108,98,97,99,107,32,105,115,32,97,108,108,111,
                        119,101,100,32,116,111,32,119,111,114,107,44,32,98,
                        117,116,32,117,115,117,97,108,108,121,32,97,32,119,
                        101,108,108,45,98,101,104,97,118,105,110,103,32,100,
                        114,105,118,101,114,32,99,97,108,108,98,97,99,107,32,
                        105,115,32,116,111,32,114,101,116,117,114,110,32,119,
                        105,116,104,105,110,32,49,32,109,105,108,108,105,115,
                        101,99,111,110,100,46,32,84,104,105,115,32,99,97,110,
                        32,98,101,32,97,99,104,105,101,118,101,100,32,117,115,
                        105,110,103,32,100,105,102,102,101,114,101,110,116,32,
                        97,112,112,114,111,97,99,104,101,115,46,32,73,102,32,
                        121,111,117,32,104,97,118,101,32,102,117,108,108,32,
                        99,111,110,116,114,111,108,32,111,118,101,114,32,116,
                        104,101,32,99,111,100,101,32,116,111,32,101,120,101,
                        99,117,116,101,32,105,110,32,116,104,101,32,100,114,
                        105,118,101,114,32,99,97,108,108,98,97,99,107,44,32,
                        116,104,101,32,98,101,115,116,32,97,112,112,114,111,
                        97,99,104,32,105,115,32,116,111,32,100,105,118,105,
                        100,101,32,116,104,101,32,119,111,114,107,32,105,110,
                        116,111,32,109,117,108,116,105,112,108,101,32,99,104,
                        117,110,107,115,32,111,102,32,119,111,114,107,44,32,
                        97,110,100,32,116,114,105,103,103,101,114,32,109,117,
                        108,116,105,112,108,101,32,99,97,108,108,115,32,116,
                        111,32,116,104,101]}],
                     0,false},
                    {text,"+[time-out callback](./driver_entry#timeout)"},
                    {sep,
                     [{text,
                       [30,117,115,105,110,103,32,122,101,114,111,32,116,105,
                        109,101,45,111,117,116,115,46,32,70,117,110,99,116,
                        105,111,110]}],
                     0,false},
                    {text,
                     "7[erl_drv_consume_timeslice](#erl_drv_consume_timeslice)"},
                    {sep,
                     [{text,
                       [302,99,97,110,32,98,101,32,117,115,101,102,117,108,32,
                        116,111,32,100,101,116,101,114,109,105,110,101,32,119,
                        104,101,110,32,116,111,32,116,114,105,103,103,101,114,
                        32,115,117,99,104,32,116,105,109,101,45,111,117,116,
                        32,99,97,108,108,98,97,99,107,32,99,97,108,108,115,46,
                        32,72,111,119,101,118,101,114,44,32,115,111,109,101,
                        116,105,109,101,115,32,105,116,32,99,97,110,110,111,
                        116,32,98,101,32,105,109,112,108,101,109,101,110,116,
                        101,100,32,116,104,105,115,32,119,97,121,44,32,102,
                        111,114,32,101,120,97,109,112,108,101,32,119,104,101,
                        110,32,99,97,108,108,105,110,103,32,116,104,105,114,
                        100,45,112,97,114,116,121,32,108,105,98,114,97,114,
                        105,101,115,46,32,73,110,32,116,104,105,115,32,99,97,
                        115,101,44,32,121,111,117,32,116,121,112,105,99,97,
                        108,108,121,32,119,97,110,116,32,116,111,32,100,105,
                        115,112,97,116,99,104,32,116,104,101,32,119,111,114,
                        107,32,116,111,32,97,110,111,116,104,101,114,32,116,
                        104,114,101,97,100,46,32,73,110,102,111,114,109,97,
                        116,105,111,110,32,97,98,111,117,116,32,116,104,114,
                        101,97,100,32,112,114,105,109,105,116,105,118,101,115,
                        32,105,115,32,112,114,111,118,105,100,101,100,32,98,
                        101,108,111,119,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}],
          0,true},
         null},
        null}}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [16,35,35,32,70,117,110,99,116,105,111,110,97,108,105,116,121]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [144,65,108,108,32,102,117,110,99,116,105,111,110,115,32,116,
                104,97,116,32,97,32,100,114,105,118,101,114,32,110,101,101,
                100,115,32,116,111,32,100,111,32,119,105,116,104,32,69,114,
                108,97,110,103,32,97,114,101,32,112,101,114,102,111,114,109,
                101,100,32,116,104,114,111,117,103,104,32,100,114,105,118,101,
                114,32,65,80,73,32,102,117,110,99,116,105,111,110,115,46,32,
                70,117,110,99,116,105,111,110,115,32,101,120,105,115,116,32,
                102,111,114,32,116,104,101,32,102,111,108,108,111,119,105,110,
                103,32,102,117,110,99,116,105,111,110,97,108,105,116,121,58]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {text,[4,60,100,108,62]},
         {nest,4,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,
                                   [{text,
                                     [15,84,105,109,101,114,32,102,117,110,99,
                                      116,105,111,110,115]}],
                                   0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            "LControl the timer that a driver can use. The timer has the emulator call the"}],
                                          0,false},
                                         {text,
                                          [20,100,114,105,118,101,114,95,101,
                                           110,116,114,121,35,116,105,109,101,
                                           111,117,116]},
                                         {sep,
                                          [{text,
                                            "\\entry function after a specified time. Only one timer is available for each driver instance."}],
                                          0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{text,
                                    [14,81,117,101,117,101,32,104,97,110,100,
                                     108,105,110,103]}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {sep,
                                 [{above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            ">Every driver instance has an associated queue. This queue is a"}],
                                          0,false},
                                         {text,"\bSysIOVec"},
                                         {sep,
                                          [{text,
                                            [290,44,32,119,104,105,99,104,32,
                                             119,111,114,107,115,32,97,115,32,
                                             97,32,98,117,102,102,101,114,46,
                                             32,73,116,32,105,115,32,109,111,
                                             115,116,108,121,32,117,115,101,
                                             100,32,102,111,114,32,116,104,
                                             101,32,100,114,105,118,101,114,
                                             32,116,111,32,98,117,102,102,101,
                                             114,32,100,97,116,97,32,116,104,
                                             97,116,32,105,115,32,116,111,32,
                                             98,101,32,119,114,105,116,116,
                                             101,110,32,116,111,32,97,32,100,
                                             101,118,105,99,101,44,32,105,116,
                                             32,105,115,32,97,32,98,121,116,
                                             101,32,115,116,114,101,97,109,46,
                                             32,73,102,32,116,104,101,32,112,
                                             111,114,116,32,111,119,110,101,
                                             114,32,112,114,111,99,101,115,
                                             115,32,99,108,111,115,101,115,32,
                                             116,104,101,32,100,114,105,118,
                                             101,114,44,32,97,110,100,32,116,
                                             104,101,32,113,117,101,117,101,
                                             32,105,115,32,110,111,116,32,101,
                                             109,112,116,121,44,32,116,104,
                                             101,32,100,114,105,118,101,114,
                                             32,105,115,32,110,111,116,32,99,
                                             108,111,115,101,100,46,32,84,104,
                                             105,115,32,101,110,97,98,108,101,
                                             115,32,116,104,101,32,100,114,
                                             105,118,101,114,32,116,111,32,
                                             102,108,117,115,104,32,105,116,
                                             115,32,98,117,102,102,101,114,
                                             115,32,98,101,102,111,114,101,32,
                                             99,108,111,115,105,110,103,46]}],
                                          0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            "dThe queue can be manipulated from any threads if a port data lock is used. For more information, see"}],
                                          0,false},
                                         {text,"\tErlDrvPDL"},
                                         {sep,[{text,[1,46]}],0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}}],
                                 0,false},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{text,
                                  [16,79,117,116,112,117,116,32,102,117,110,
                                   99,116,105,111,110,115]}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        [129,87,105,116,104,32,116,104,101,
                                         115,101,32,102,117,110,99,116,105,
                                         111,110,115,44,32,116,104,101,32,100,
                                         114,105,118,101,114,32,115,101,110,
                                         100,115,32,100,97,116,97,32,98,97,99,
                                         107,32,116,111,32,116,104,101,32,101,
                                         109,117,108,97,116,111,114,46,32,84,
                                         104,101,32,100,97,116,97,32,105,115,
                                         32,114,101,99,101,105,118,101,100,32,
                                         97,115,32,109,101,115,115,97,103,101,
                                         115,32,98,121,32,116,104,101,32,112,
                                         111,114,116,32,111,119,110,101,114,
                                         32,112,114,111,99,101,115,115,44,32,
                                         115,101,101]}],
                                      0,false},
                                     {text,
                                      [18,101,114,108,97,110,103,35,111,112,
                                       101,110,95,112,111,114,116,47,50]},
                                     {sep,
                                      [{text,
                                        "Ù. The vector function and the function taking a driver binary are faster, as they avoid copying the data buffer. There is also a fast way of sending terms from the driver, without going through the binary term format."}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,[7,70,97,105,108,117,114,101]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{text,
                                    "~The driver can exit and signal errors up to Erlang. This is only for severe errors, when the driver cannot possibly keep open."}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,
                              [18,65,115,121,110,99,104,114,111,110,111,117,
                               115,32,99,97,108,108,115]}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  "ÂErlang/OTP R7B and later versions have provision for asynchronous function calls, using a thread pool provided by Erlang. There is also a select call, which can be used for asynchronous drivers."}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{sep,
                            [{text,
                              [15,109,117,108,116,105,95,116,104,114,101,97,
                               100,105,110,103]},
                             {sep,
                              [{text,
                                [15,77,117,108,116,105,45,116,104,114,101,97,
                                 100,105,110,103]}],
                              0,false}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {sep,
                         [{above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  [262,65,32,80,79,83,73,88,32,116,104,114,
                                   101,97,100,32,108,105,107,101,32,65,80,73,
                                   32,102,111,114,32,109,117,108,116,105,45,
                                   116,104,114,101,97,100,105,110,103,32,105,
                                   115,32,112,114,111,118,105,100,101,100,46,
                                   32,84,104,101,32,69,114,108,97,110,103,32,
                                   100,114,105,118,101,114,32,116,104,114,101,
                                   97,100,32,65,80,73,32,111,110,108,121,32,
                                   112,114,111,118,105,100,101,115,32,97,32,
                                   115,117,98,115,101,116,32,111,102,32,116,
                                   104,101,32,102,117,110,99,116,105,111,110,
                                   97,108,105,116,121,32,112,114,111,118,105,
                                   100,101,100,32,98,121,32,116,104,101,32,80,
                                   79,83,73,88,32,116,104,114,101,97,100,32,
                                   65,80,73,46,32,84,104,101,32,115,117,98,
                                   115,101,116,32,112,114,111,118,105,100,101,
                                   100,32,105,115,32,109,111,114,101,32,111,
                                   114,32,108,101,115,115,32,116,104,101,32,
                                   98,97,115,105,99,32,102,117,110,99,116,105,
                                   111,110,97,108,105,116,121,32,110,101,101,
                                   100,101,100,32,102,111,114,32,109,117,108,
                                   116,105,45,116,104,114,101,97,100,101,100,
                                   32,112,114,111,103,114,97,109,109,105,110,
                                   103,58]}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,
                            {above,
                             {above,
                              {sep,
                               [{text,[1,42]},
                                {text,[7,84,104,114,101,97,100,115]}],
                               0,false},
                              {sep,
                               [{text,[1,42]},
                                {text,[7,77,117,116,101,120,101,115]}],
                               0,false}},
                             {sep,
                              [{text,[1,42]},
                               {text,
                                [19,67,111,110,100,105,116,105,111,110,32,118,
                                 97,114,105,97,98,108,101,115]}],
                              0,false}},
                            {sep,
                             [{text,[1,42]},
                              {text,
                               [16,82,101,97,100,47,119,114,105,116,101,32,
                                108,111,99,107,115]}],
                             0,false}},
                           {sep,
                            [{text,[1,42]},
                             {text,
                              [20,84,104,114,101,97,100,45,115,112,101,99,105,
                               102,105,99,32,100,97,116,97]}],
                            0,false}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  [336,84,104,101,32,69,114,108,97,110,103,32,
                                   100,114,105,118,101,114,32,116,104,114,101,
                                   97,100,32,65,80,73,32,99,97,110,32,98,101,
                                   32,117,115,101,100,32,105,110,32,99,111,
                                   110,106,117,110,99,116,105,111,110,32,119,
                                   105,116,104,32,116,104,101,32,80,79,83,73,
                                   88,32,116,104,114,101,97,100,32,65,80,73,
                                   32,111,110,32,85,78,45,105,99,101,115,32,
                                   97,110,100,32,119,105,116,104,32,116,104,
                                   101,32,87,105,110,100,111,119,115,32,110,
                                   97,116,105,118,101,32,116,104,114,101,97,
                                   100,32,65,80,73,32,111,110,32,87,105,110,
                                   100,111,119,115,46,32,84,104,101,32,69,114,
                                   108,97,110,103,32,100,114,105,118,101,114,
                                   32,116,104,114,101,97,100,32,65,80,73,32,
                                   104,97,115,32,116,104,101,32,97,100,118,97,
                                   110,116,97,103,101,32,111,102,32,98,101,
                                   105,110,103,32,112,111,114,116,97,98,108,
                                   101,44,32,98,117,116,32,116,104,101,114,
                                   101,32,99,97,110,32,101,120,105,115,116,32,
                                   115,105,116,117,97,116,105,111,110,115,32,
                                   119,104,101,114,101,32,121,111,117,32,119,
                                   97,110,116,32,116,111,32,117,115,101,32,
                                   102,117,110,99,116,105,111,110,97,108,105,
                                   116,121,32,102,114,111,109,32,116,104,101,
                                   32,80,79,83,73,88,32,116,104,114,101,97,
                                   100,32,65,80,73,32,111,114,32,116,104,101,
                                   32,87,105,110,100,111,119,115,32,110,97,
                                   116,105,118,101,32,116,104,114,101,97,100,
                                   32,65,80,73,46]}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  [368,84,104,101,32,69,114,108,97,110,103,32,
                                   100,114,105,118,101,114,32,116,104,114,101,
                                   97,100,32,65,80,73,32,111,110,108,121,32,
                                   114,101,116,117,114,110,115,32,101,114,114,
                                   111,114,32,99,111,100,101,115,32,119,104,
                                   101,110,32,105,116,32,105,115,32,114,101,
                                   97,115,111,110,97,98,108,101,32,116,111,32,
                                   114,101,99,111,118,101,114,32,102,114,111,
                                   109,32,97,110,32,101,114,114,111,114,32,99,
                                   111,110,100,105,116,105,111,110,46,32,73,
                                   102,32,105,116,32,105,115,32,110,111,116,
                                   32,114,101,97,115,111,110,97,98,108,101,32,
                                   116,111,32,114,101,99,111,118,101,114,32,
                                   102,114,111,109,32,97,110,32,101,114,114,
                                   111,114,32,99,111,110,100,105,116,105,111,
                                   110,44,32,116,104,101,32,119,104,111,108,
                                   101,32,114,117,110,116,105,109,101,32,115,
                                   121,115,116,101,109,32,105,115,32,116,101,
                                   114,109,105,110,97,116,101,100,46,32,70,
                                   111,114,32,101,120,97,109,112,108,101,44,
                                   32,105,102,32,97,32,99,114,101,97,116,101,
                                   32,109,117,116,101,120,32,111,112,101,114,
                                   97,116,105,111,110,32,102,97,105,108,115,
                                   44,32,97,110,32,101,114,114,111,114,32,99,
                                   111,100,101,32,105,115,32,114,101,116,117,
                                   114,110,101,100,44,32,98,117,116,32,105,
                                   102,32,97,32,108,111,99,107,32,111,112,101,
                                   114,97,116,105,111,110,32,111,110,32,97,32,
                                   109,117,116,101,120,32,102,97,105,108,115,
                                   44,32,116,104,101,32,119,104,111,108,101,
                                   32,114,117,110,116,105,109,101,32,115,121,
                                   115,116,101,109,32,105,115,32,116,101,114,
                                   109,105,110,97,116,101,100,46]}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    "|Notice that there is no \"condition variable wait with time-out\" in the Erlang driver thread API. This because of issues with"}],
                                  0,false},
                                 {text,
                                  [22,112,116,104,114,101,97,100,95,99,111,
                                   110,100,95,116,105,109,101,100,119,97,105,
                                   116]},
                                 {sep,
                                  [{text,
                                    [391,46,32,87,104,101,110,32,116,104,101,
                                     32,115,121,115,116,101,109,32,99,108,111,
                                     99,107,32,115,117,100,100,101,110,108,
                                     121,32,105,115,32,99,104,97,110,103,101,
                                     100,44,32,105,116,32,105,115,32,110,111,
                                     116,32,97,108,119,97,121,115,32,103,117,
                                     97,114,97,110,116,101,101,100,32,116,104,
                                     97,116,32,121,111,117,32,119,105,108,108,
                                     32,119,97,107,101,32,117,112,32,102,114,
                                     111,109,32,116,104,101,32,99,97,108,108,
                                     32,97,115,32,101,120,112,101,99,116,101,
                                     100,46,32,65,110,32,69,114,108,97,110,
                                     103,32,114,117,110,116,105,109,101,32,
                                     115,121,115,116,101,109,32,109,117,115,
                                     116,32,98,101,32,97,98,108,101,32,116,
                                     111,32,99,111,112,101,32,119,105,116,104,
                                     32,115,117,100,100,101,110,32,99,104,97,
                                     110,103,101,115,32,111,102,32,116,104,
                                     101,32,115,121,115,116,101,109,32,99,108,
                                     111,99,107,46,32,84,104,101,114,101,102,
                                     111,114,101,44,32,119,101,32,104,97,118,
                                     101,32,111,109,105,116,116,101,100,32,
                                     105,116,32,102,114,111,109,32,116,104,
                                     101,32,69,114,108,97,110,103,32,100,114,
                                     105,118,101,114,32,116,104,114,101,97,
                                     100,32,65,80,73,46,32,73,110,32,116,104,
                                     101,32,69,114,108,97,110,103,32,100,114,
                                     105,118,101,114,32,99,97,115,101,44,32,
                                     116,105,109,101,45,111,117,116,115,32,99,
                                     97,110,32,97,110,100,32,97,114,101,32,
                                     116,111,32,98,101,32,104,97,110,100,108,
                                     101,100,32,119,105,116,104,32,116,104,
                                     101,32,116,105,109,101,114,32,102,117,
                                     110,99,116,105,111,110,97,108,105,116,
                                     121,32,111,102,32,116,104,101,32,69,114,
                                     108,97,110,103,32,100,114,105,118,101,
                                     114,32,65,80,73,46]}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    "®In order for the Erlang driver thread API to function, thread support must be enabled in the runtime system. An Erlang driver can check if thread support is enabled by use of"}],
                                  0,false},
                                 {text,
                                  [18,100,114,105,118,101,114,95,115,121,115,
                                   116,101,109,95,105,110,102,111]},
                                 {sep,
                                  [{text,
                                    "¢. Notice that some functions in the Erlang driver API are thread-safe only when the runtime system has SMP support, also this information can be retrieved through"}],
                                  0,false},
                                 {text,
                                  [18,100,114,105,118,101,114,95,115,121,115,
                                   116,101,109,95,105,110,102,111]},
                                 {sep,
                                  [{text,
                                    ">. Also notice that many functions in the Erlang driver API are"}],
                                  0,false},
                                 {text,[3,110,111,116]},
                                 {sep,
                                  [{text,
                                    "wthread-safe, regardless of whether SMP support is enabled or not. If a function is not documented as thread-safe, it is"}],
                                  0,false},
                                 {text,[3,110,111,116]},
                                 {sep,[{text,"\fthread-safe."}],0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {sep,
                           [{above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      "+When executing in an emulator thread, it is"}],
                                    0,false},
                                   {text,
                                    [14,118,101,114,121,32,105,109,112,111,
                                     114,116,97,110,116]},
                                   {sep,
                                    [{text,
                                      [15,116,104,97,116,32,121,111,117,32,
                                       117,110,108,111,99,107]}],
                                    0,false},
                                   {text,[3,97,108,108]},
                                   {sep,
                                    [{text,
                                      "Vlocks you have locked before letting the thread out of your control; otherwise you are"}],
                                    0,false},
                                   {text,"\vvery likely"},
                                   {sep,
                                    [{text,
                                      [31,116,111,32,100,101,97,100,108,111,
                                       99,107,32,116,104,101,32,119,104,111,
                                       108,101,32,101,109,117,108,97,116,111,
                                       114,46]}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{text,
                                    "ßIf you need to use thread-specific data in an emulator thread, only have the thread-specific data set while the thread is under your control, and clear the thread-specific data before you let the thread out of your control."}],
                                  0,false}],
                                0,true},
                               null},
                              null}}],
                           0,false},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    [139,73,110,32,116,104,101,32,102,117,116,
                                     117,114,101,44,32,100,101,98,117,103,32,
                                     102,117,110,99,116,105,111,110,97,108,
                                     105,116,121,32,119,105,108,108,32,112,
                                     114,111,98,97,98,108,121,32,98,101,32,
                                     105,110,116,101,103,114,97,116,101,100,
                                     32,119,105,116,104,32,116,104,101,32,69,
                                     114,108,97,110,103,32,100,114,105,118,
                                     101,114,32,116,104,114,101,97,100,32,65,
                                     80,73,46,32,65,108,108,32,102,117,110,99,
                                     116,105,111,110,115,32,116,104,97,116,32,
                                     99,114,101,97,116,101,32,101,110,116,105,
                                     116,105,101,115,32,116,97,107,101,32,
                                     97]}],
                                  0,false},
                                 {text,[4,110,97,109,101]},
                                 {sep,
                                  [{text,
                                    [23,97,114,103,117,109,101,110,116,46,32,
                                     67,117,114,114,101,110,116,108,121,32,
                                     116,104,101]}],
                                  0,false},
                                 {text,[4,110,97,109,101]},
                                 {sep,
                                  [{text,
                                    "Âargument is unused, but it will be used when the debug functionality is implemented. If you name all entities created well, the debug functionality will be able to give you better error reports."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}}],
                         0,false},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{text,
                          [23,65,100,100,105,110,103,47,114,101,109,111,118,
                           105,110,103,32,100,114,105,118,101,114,115]}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              "*A driver can add and later remove drivers."}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{text,
                        [20,77,111,110,105,116,111,114,105,110,103,32,112,114,
                         111,99,101,115,115,101,115]}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "8A driver can monitor a process that does not own a port."}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{sep,
                      [{text,
                        [18,118,101,114,115,105,111,110,95,109,97,110,97,103,
                         101,109,101,110,116]},
                       {sep,
                        [{text,
                          [18,86,101,114,115,105,111,110,32,109,97,110,97,103,
                           101,109,101,110,116]}],
                        0,false}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              ";Version management is enabled for drivers that have set the"}],
                            0,false},
                           {text,
                            [28,100,114,105,118,101,114,95,101,110,116,114,
                             121,35,101,120,116,101,110,100,101,100,95,109,97,
                             114,107,101,114]},
                           {sep,
                            [{text,
                              [14,102,105,101,108,100,32,111,102,32,116,104,
                               101,105,114]}],
                            0,false},
                           {text,"\fdriver_entry"},
                           {sep,[{text,[2,116,111]}],0,false},
                           {text,
                            [23,69,82,76,95,68,82,86,95,69,88,84,69,78,68,69,
                             68,95,77,65,82,75,69,82]},
                           {sep,[{text,[1,46]}],0,false},
                           {text,"\ferl_driver.h"},
                           {sep,[{text,"\bdefines:"}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,
                           [23,69,82,76,95,68,82,86,95,69,88,84,69,78,68,69,
                            68,95,77,65,82,75,69,82]}],
                         0,false}],
                       0,false},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,
                           [30,69,82,76,95,68,82,86,95,69,88,84,69,78,68,69,
                            68,95,77,65,74,79,82,95,86,69,82,83,73,79,78]},
                          {sep,
                           [{text,
                             [141,44,32,119,104,105,99,104,32,105,115,32,105,
                              110,99,114,101,109,101,110,116,101,100,32,119,
                              104,101,110,32,100,114,105,118,101,114,32,105,
                              110,99,111,109,112,97,116,105,98,108,101,32,99,
                              104,97,110,103,101,115,32,97,114,101,32,109,97,
                              100,101,32,116,111,32,116,104,101,32,69,114,108,
                              97,110,103,32,114,117,110,116,105,109,101,32,
                              115,121,115,116,101,109,46,32,78,111,114,109,97,
                              108,108,121,32,105,116,32,115,117,102,102,105,
                              99,101,115,32,116,111,32,114,101,99,111,109,112,
                              105,108,101,32,100,114,105,118,101,114,115,32,
                              119,104,101,110]}],
                           0,false},
                          {text,
                           [30,69,82,76,95,68,82,86,95,69,88,84,69,78,68,69,
                            68,95,77,65,74,79,82,95,86,69,82,83,73,79,78]},
                          {sep,
                           [{text,
                             [137,104,97,115,32,99,104,97,110,103,101,100,44,
                              32,98,117,116,32,105,116,32,99,97,110,44,32,117,
                              110,100,101,114,32,114,97,114,101,32,99,105,114,
                              99,117,109,115,116,97,110,99,101,115,44,32,109,
                              101,97,110,32,116,104,97,116,32,100,114,105,118,
                              101,114,115,32,109,117,115,116,32,98,101,32,115,
                              108,105,103,104,116,108,121,32,109,111,100,105,
                              102,105,101,100,46,32,73,102,32,115,111,44,32,
                              116,104,105,115,32,119,105,108,108,32,111,102,
                              32,99,111,117,114,115,101,32,98,101,32,100,111,
                              99,117,109,101,110,116,101,100,46]}],
                           0,false}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          [30,69,82,76,95,68,82,86,95,69,88,84,69,78,68,69,68,
                           95,77,73,78,79,82,95,86,69,82,83,73,79,78]},
                         {sep,
                          [{text,
                            [142,44,32,119,104,105,99,104,32,105,115,32,105,
                             110,99,114,101,109,101,110,116,101,100,32,119,
                             104,101,110,32,110,101,119,32,102,101,97,116,117,
                             114,101,115,32,97,114,101,32,97,100,100,101,100,
                             46,32,84,104,101,32,114,117,110,116,105,109,101,
                             32,115,121,115,116,101,109,32,117,115,101,115,32,
                             116,104,101,32,109,105,110,111,114,32,118,101,
                             114,115,105,111,110,32,111,102,32,116,104,101,32,
                             100,114,105,118,101,114,32,116,111,32,100,101,
                             116,101,114,109,105,110,101,32,119,104,97,116,32,
                             102,101,97,116,117,114,101,115,32,116,111,32,117,
                             115,101,46]}],
                          0,false}],
                        0,false}],
                      0,false}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            [421,84,104,101,32,114,117,110,116,105,109,101,32,
                             115,121,115,116,101,109,32,110,111,114,109,97,
                             108,108,121,32,114,101,102,117,115,101,115,32,
                             116,111,32,108,111,97,100,32,97,32,100,114,105,
                             118,101,114,32,105,102,32,116,104,101,32,109,97,
                             106,111,114,32,118,101,114,115,105,111,110,115,
                             32,100,105,102,102,101,114,44,32,111,114,32,105,
                             102,32,116,104,101,32,109,97,106,111,114,32,118,
                             101,114,115,105,111,110,115,32,97,114,101,32,101,
                             113,117,97,108,32,97,110,100,32,116,104,101,32,
                             109,105,110,111,114,32,118,101,114,115,105,111,
                             110,32,117,115,101,100,32,98,121,32,116,104,101,
                             32,100,114,105,118,101,114,32,105,115,32,103,114,
                             101,97,116,101,114,32,116,104,97,110,32,116,104,
                             101,32,111,110,101,32,117,115,101,100,32,98,121,
                             32,116,104,101,32,114,117,110,116,105,109,101,32,
                             115,121,115,116,101,109,46,32,79,108,100,32,100,
                             114,105,118,101,114,115,32,119,105,116,104,32,
                             108,111,119,101,114,32,109,97,106,111,114,32,118,
                             101,114,115,105,111,110,115,32,97,114,101,32,104,
                             111,119,101,118,101,114,32,97,108,108,111,119,
                             101,100,32,97,102,116,101,114,32,97,32,98,117,
                             109,112,32,111,102,32,116,104,101,32,109,97,106,
                             111,114,32,118,101,114,115,105,111,110,32,100,
                             117,114,105,110,103,32,97,32,116,114,97,110,115,
                             105,116,105,111,110,32,112,101,114,105,111,100,
                             32,111,102,32,116,119,111,32,109,97,106,111,114,
                             32,114,101,108,101,97,115,101,115,46,32,83,117,
                             99,104,32,111,108,100,32,100,114,105,118,101,114,
                             115,32,99,97,110,44,32,104,111,119,101,118,101,
                             114,44,32,102,97,105,108,32,105,102,32,100,101,
                             112,114,101,99,97,116,101,100,32,102,101,97,116,
                             117,114,101,115,32,97,114,101,32,117,115,101,100,
                             46]}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "ªThe emulator refuses to load a driver that does not use the extended driver interface, to allow for 64-bit capable drivers, as incompatible type changes for the callbacks"}],
                            0,false},
                           {text,
                            [19,100,114,105,118,101,114,95,101,110,116,114,
                             121,35,111,117,116,112,117,116]},
                           {sep,[{text,[1,44]}],0,false},
                           {text,
                            [20,100,114,105,118,101,114,95,101,110,116,114,
                             121,35,99,111,110,116,114,111,108]},
                           {sep,[{text,[5,44,32,97,110,100]}],0,false},
                           {text,
                            [17,100,114,105,118,101,114,95,101,110,116,114,
                             121,35,99,97,108,108]},
                           {sep,
                            [{text,
                              "âwere introduced in Erlang/OTP R15B. A driver written with the old types would compile with warnings and when called return garbage sizes to the emulator, causing it to read random memory and create huge incorrect result blobs."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "ÐTherefore it is not enough to only recompile drivers written with version management for pre R15B types; the types must be changed in the driver suggesting other rewrites, especially regarding size variables."}],
                            0,false},
                           {text,
                            "*Investigate all warnings when recompiling."}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [30,65,108,115,111,44,32,116,104,101,32,65,80,
                               73,32,100,114,105,118,101,114,32,102,117,110,
                               99,116,105,111,110,115]}],
                            0,false},
                           {text,
                            [14,100,114,105,118,101,114,95,111,117,116,112,
                             117,116,42]},
                           {sep,[{text,[3,97,110,100]}],0,false},
                           {text,
                            [17,100,114,105,118,101,114,95,118,101,99,95,116,
                             111,95,98,117,102]},
                           {sep,[{text,[1,44]}],0,false},
                           {text,
                            [21,100,114,105,118,101,114,95,97,108,108,111,99,
                             47,114,101,97,108,108,111,99,42]},
                           {sep,[{text,"\t, and the"}],0,false},
                           {text,"\bdriver_*"},
                           {sep,
                            [{text,
                              "óqueue functions were changed to have larger length arguments and return values. This is a lesser problem, as code that passes smaller types gets them auto-converted in the calls, and as long as the driver does not handle sizes that overflow an"}],
                            0,false},
                           {text,[3,105,110,116]},
                           {sep,
                            [{text,
                              [26,44,32,97,108,108,32,119,105,108,108,32,119,
                               111,114,107,32,97,115,32,98,101,102,111,114,
                               101,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{text,
                      [16,116,105,109,101,95,109,101,97,115,117,114,101,109,
                       101,110,116]},
                     {sep,
                      [{text,
                        [16,84,105,109,101,32,109,101,97,115,117,114,101,109,
                         101,110,116]}],
                      0,false}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,"(Support for time measurement in drivers:"}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,
                    {above,
                     {above,
                      {sep,[{text,[1,42]},{text,"\nErlDrvTime"}],0,false},
                      {sep,
                       [{text,[1,42]},
                        {text,
                         [14,69,114,108,68,114,118,84,105,109,101,85,110,105,
                          116]}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {text,
                        [22,101,114,108,95,100,114,118,95,109,111,110,111,116,
                         111,110,105,99,95,116,105,109,101]}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {text,
                       [19,101,114,108,95,100,114,118,95,116,105,109,101,95,
                        111,102,102,115,101,116]}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {text,
                      [25,101,114,108,95,100,114,118,95,99,111,110,118,101,
                       114,116,95,116,105,109,101,95,117,110,105,116]}],
                    0,false}}],
                 0,false},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}}}},
        {text,[5,60,47,100,108,62]}}],
      0,false}},
    {sep,
     [{text,"7<a name=\"rewrites_for_64_bits\">rewrites_for_64_bits</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"'## Rewrites for 64-Bit Driver Interface"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"*ERTS 5.9 introduced two new integer types,"}],
              0,false},
             {text,"\e[ErlDrvSizeT](#ErlDrvSizeT)"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [29,91,69,114,108,68,114,118,83,83,105,122,101,84,93,40,35,69,
               114,108,68,114,118,83,83,105,122,101,84,41]},
             {sep,
              [{text,"+, which can hold 64-bit sizes if necessary."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [259,84,111,32,110,111,116,32,117,112,100,97,116,101,32,97,32,
                 100,114,105,118,101,114,32,97,110,100,32,111,110,108,121,32,
                 114,101,99,111,109,112,105,108,101,44,32,105,116,32,112,114,
                 111,98,97,98,108,121,32,119,111,114,107,115,32,119,104,101,
                 110,32,98,117,105,108,100,105,110,103,32,102,111,114,32,97,
                 32,51,50,45,98,105,116,32,109,97,99,104,105,110,101,32,99,
                 114,101,97,116,105,110,103,32,97,32,102,97,108,115,101,32,
                 115,101,110,115,101,32,111,102,32,115,101,99,117,114,105,116,
                 121,46,32,72,111,112,101,102,117,108,108,121,32,116,104,97,
                 116,32,119,105,108,108,32,103,101,110,101,114,97,116,101,32,
                 109,97,110,121,32,105,109,112,111,114,116,97,110,116,32,119,
                 97,114,110,105,110,103,115,46,32,66,117,116,32,119,104,101,
                 110,32,114,101,99,111,109,112,105,108,105,110,103,32,116,104,
                 101,32,115,97,109,101,32,100,114,105,118,101,114,32,108,97,
                 116,101,114,32,111,110,32,102,111,114,32,97,32,54,52,45,98,
                 105,116,32,109,97,99,104,105,110,101,44,32,116,104,101,114,
                 101]}],
              0,false},
             {text,"\b**will**"},
             {sep,
              [{text,"4be warnings and almost certainly crashes. So it is a"}],
              0,false},
             {text,[7,42,42,98,97,100,42,42]},
             {sep,
              [{text,
                "Aidea to postpone updating the driver and not fixing the warnings."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,87,104,101,110,32,114,101,99,111,109,112,105,108,105,110,
                 103,32,119,105,116,104]}],
              0,false},
             {text,[5,42,103,99,99,42]},
             {sep,[{text,"\n, use flag"}],0,false},
             {text,
              [21,42,45,87,115,116,114,105,99,116,45,112,114,111,116,111,116,
               121,112,101,115,42]},
             {sep,
              [{text,
                "Oto get better warnings. Try to find a similar flag if you use another compiler."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "WThe following is a checklist for rewriting a pre ERTS 5.9 driver, most important first:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{text,"!Return types for driver callbacks"}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {sep,
                      [{above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 [23,82,101,119,114,105,116,101,32,100,114,
                                  105,118,101,114,32,99,97,108,108,98,97,99,
                                  107]}],
                               0,false},
                              {text,
                               [20,100,114,105,118,101,114,95,101,110,116,114,
                                121,35,99,111,110,116,114,111,108]},
                              {sep,
                               [{text,
                                 [18,116,111,32,117,115,101,32,114,101,116,
                                  117,114,110,32,116,121,112,101]}],
                               0,false},
                              {text,"\fErlDrvSSizeT"},
                              {sep,[{text,"\ninstead of"}],0,false},
                              {text,[3,105,110,116]},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 [23,82,101,119,114,105,116,101,32,100,114,
                                  105,118,101,114,32,99,97,108,108,98,97,99,
                                  107]}],
                               0,false},
                              {text,
                               [17,100,114,105,118,101,114,95,101,110,116,114,
                                121,35,99,97,108,108]},
                              {sep,
                               [{text,
                                 [18,116,111,32,117,115,101,32,114,101,116,
                                  117,114,110,32,116,121,112,101]}],
                               0,false},
                              {text,"\fErlDrvSSizeT"},
                              {sep,[{text,"\ninstead of"}],0,false},
                              {text,[3,105,110,116]},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {sep,
                        [{above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,
                                 [306,84,104,101,115,101,32,99,104,97,110,103,
                                  101,115,32,97,114,101,32,101,115,115,101,
                                  110,116,105,97,108,32,110,111,116,32,116,
                                  111,32,99,114,97,115,104,32,116,104,101,32,
                                  101,109,117,108,97,116,111,114,32,111,114,
                                  32,119,111,114,115,101,32,99,97,117,115,101,
                                  32,109,97,108,102,117,110,99,116,105,111,
                                  110,46,32,87,105,116,104,111,117,116,32,116,
                                  104,101,109,32,97,32,100,114,105,118,101,
                                  114,32,99,97,110,32,114,101,116,117,114,110,
                                  32,103,97,114,98,97,103,101,32,105,110,32,
                                  116,104,101,32,104,105,103,104,32,51,50,32,
                                  98,105,116,115,32,116,111,32,116,104,101,32,
                                  101,109,117,108,97,116,111,114,44,32,99,97,
                                  117,115,105,110,103,32,105,116,32,116,111,
                                  32,98,117,105,108,100,32,97,32,104,117,103,
                                  101,32,114,101,115,117,108,116,32,102,114,
                                  111,109,32,114,97,110,100,111,109,32,98,121,
                                  116,101,115,44,32,101,105,116,104,101,114,
                                  32,99,114,97,115,104,105,110,103,32,111,110,
                                  32,109,101,109,111,114,121,32,97,108,108,
                                  111,99,97,116,105,111,110,32,111,114,32,115,
                                  117,99,99,101,101,100,105,110,103,32,119,
                                  105,116,104,32,97,32,114,97,110,100,111,109,
                                  32,114,101,115,117,108,116,32,102,114,111,
                                  109,32,116,104,101,32,100,114,105,118,101,
                                  114,32,99,97,108,108,46]}],
                               0,false}],
                             0,true},
                            null},
                           null}}],
                        0,false}],
                      0,false},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [29,65,114,103,117,109,101,110,116,115,32,116,111,32,
                        100,114,105,118,101,114,32,99,97,108,108,98,97,99,107,
                        115]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               [15,68,114,105,118,101,114,32,99,97,108,108,98,
                                97,99,107]}],
                             0,false},
                            {text,
                             [19,100,114,105,118,101,114,95,101,110,116,114,
                              121,35,111,117,116,112,117,116]},
                            {sep,[{text,"\bnow gets"}],0,false},
                            {text,"\vErlDrvSizeT"},
                            {sep,
                             [{text,"%as 3rd argument instead of previously"}],
                             0,false},
                            {text,[3,105,110,116]},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               [15,68,114,105,118,101,114,32,99,97,108,108,98,
                                97,99,107]}],
                             0,false},
                            {text,
                             [20,100,114,105,118,101,114,95,101,110,116,114,
                              121,35,99,111,110,116,114,111,108]},
                            {sep,[{text,"\bnow gets"}],0,false},
                            {text,"\vErlDrvSizeT"},
                            {sep,
                             [{text,
                               ".as 4th and 6th arguments instead of previously"}],
                             0,false},
                            {text,[3,105,110,116]},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               [15,68,114,105,118,101,114,32,99,97,108,108,98,
                                97,99,107]}],
                             0,false},
                            {text,
                             [17,100,114,105,118,101,114,95,101,110,116,114,
                              121,35,99,97,108,108]},
                            {sep,[{text,"\bnow gets"}],0,false},
                            {text,"\vErlDrvSizeT"},
                            {sep,
                             [{text,
                               ".as 4th and 6th arguments instead of previously"}],
                             0,false},
                            {text,[3,105,110,116]},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               "¾Sane compiler's calling conventions probably make these changes necessary only for a driver to handle data chunks that require 64-bit size fields (mostly larger than 2 GB, as that is what an"}],
                             0,false},
                            {text,[3,105,110,116]},
                            {sep,
                             [{text,
                               " of 32 bits can hold). But it is possible to think of non-sane calling conventions that would make the driver callbacks mix up the arguments causing malfunction."}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {sep,
                      [{above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               "¿The argument type change is from signed to unsigned. This can cause problems for, for example, loop termination conditions or error conditions if you only change the types all over the place."}],
                             0,false}],
                           0,true},
                          null},
                         null}}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{sep,[{text,[6,76,97,114,103,101,114]}],0,false},
                      {text,[4,115,105,122,101]},
                      {sep,[{text,"\bfield in"}],0,false},
                      {text,"\bErlIOVec"}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,[{text,[3,84,104,101]}],0,false},
                          {text,[4,115,105,122,101]},
                          {sep,[{text,"\bfield in"}],0,false},
                          {text,"\bErlIOVec"},
                          {sep,
                           [{text,
                             [19,104,97,115,32,98,101,101,110,32,99,104,97,
                              110,103,101,100,32,116,111]}],
                           0,false},
                          {text,"\vErlDrvSizeT"},
                          {sep,[{text,[4,102,114,111,109]}],0,false},
                          {text,[3,105,110,116]},
                          {sep,
                           [{text,"%. Check all code that use that field."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "pAutomatic type-casting probably makes these changes necessary only for a driver that encounters sizes > 32 bits."}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {sep,
                    [{above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,[{text,[3,84,104,101]}],0,false},
                            {text,[4,115,105,122,101]},
                            {sep,
                             [{text,
                               "±field changed from signed to unsigned. This can cause problems for, for example, loop termination conditions or error conditions if you only change the types all over the place."}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,"-Arguments and return values in the driver API"}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "KMany driver API functions have changed argument type and/or return value to"}],
                         0,false},
                        {text,"\vErlDrvSizeT"},
                        {sep,[{text,"\vfrom mostly"}],0,false},
                        {text,[3,105,110,116]},
                        {sep,
                         [{text,
                           "g. Automatic type-casting probably makes these changes necessary only for a driver that encounters sizes"}],
                         0,false},
                        {sep,[{text,"\n> 32 bits."}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,
                   {text,[4,60,100,108,62]},
                   {nest,4,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {above,
                                             {above,
                                              {above,
                                               {above,
                                                {above,
                                                 {above,
                                                  {above,
                                                   {above,
                                                    {above,
                                                     {above,
                                                      {above,
                                                       {above,
                                                        {above,
                                                         {above,
                                                          {text,[0]},
                                                          null},
                                                         null},
                                                        {above,
                                                         {above,
                                                          {sep,
                                                           [{text,
                                                             [4,60,100,116,
                                                              62]},
                                                            {sep,
                                                             [{text,
                                                               "\rdriver_output"}],
                                                             0,false},
                                                            {text,
                                                             [5,60,47,100,116,
                                                              62]}],
                                                           0,true},
                                                          null},
                                                         null}},
                                                       {above,
                                                        {above,
                                                         {above,
                                                          {text,[0]},
                                                          null},
                                                         null},
                                                        {above,
                                                         {above,
                                                          {sep,
                                                           [{text,
                                                             [4,60,100,100,
                                                              62]},
                                                            {text,
                                                             "\f3rd argument"},
                                                            {text,
                                                             [5,60,47,100,100,
                                                              62]}],
                                                           0,true},
                                                          null},
                                                         null}}},
                                                      {above,
                                                       {above,
                                                        {above,
                                                         {text,[0]},
                                                         null},
                                                        null},
                                                       {above,
                                                        {above,
                                                         {sep,
                                                          [{text,
                                                            [4,60,100,116,62]},
                                                           {sep,
                                                            [{text,
                                                              [14,100,114,105,
                                                               118,101,114,95,
                                                               111,117,116,
                                                               112,117,116,
                                                               50]}],
                                                            0,false},
                                                           {text,
                                                            [5,60,47,100,116,
                                                             62]}],
                                                          0,true},
                                                         null},
                                                        null}}},
                                                     {above,
                                                      {above,
                                                       {above,{text,[0]},null},
                                                       null},
                                                      {above,
                                                       {above,
                                                        {sep,
                                                         [{text,
                                                           [4,60,100,100,62]},
                                                          {text,
                                                           [21,51,114,100,32,
                                                            97,110,100,32,53,
                                                            116,104,32,97,114,
                                                            103,117,109,101,
                                                            110,116,115]},
                                                          {text,
                                                           [5,60,47,100,100,
                                                            62]}],
                                                         0,true},
                                                        null},
                                                       null}}},
                                                    {above,
                                                     {above,
                                                      {above,{text,[0]},null},
                                                      null},
                                                     {above,
                                                      {above,
                                                       {sep,
                                                        [{text,
                                                          [4,60,100,116,62]},
                                                         {sep,
                                                          [{text,
                                                            [20,100,114,105,
                                                             118,101,114,95,
                                                             111,117,116,112,
                                                             117,116,95,98,
                                                             105,110,97,114,
                                                             121]}],
                                                          0,false},
                                                         {text,
                                                          [5,60,47,100,116,
                                                           62]}],
                                                        0,true},
                                                       null},
                                                      null}}},
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{text,
                                                         [4,60,100,100,62]},
                                                        {text,
                                                         "\e3rd, 5th, and 6th arguments"},
                                                        {text,
                                                         [5,60,47,100,100,
                                                          62]}],
                                                       0,true},
                                                      null},
                                                     null}}},
                                                  {above,
                                                   {above,
                                                    {above,{text,[0]},null},
                                                    null},
                                                   {above,
                                                    {above,
                                                     {sep,
                                                      [{text,
                                                        [4,60,100,116,62]},
                                                       {sep,
                                                        [{text,
                                                          [14,100,114,105,118,
                                                           101,114,95,111,117,
                                                           116,112,117,116,
                                                           118]}],
                                                        0,false},
                                                       {text,
                                                        [5,60,47,100,116,62]}],
                                                      0,true},
                                                     null},
                                                    null}}},
                                                 {above,
                                                  {above,
                                                   {above,{text,[0]},null},
                                                   null},
                                                  {above,
                                                   {above,
                                                    {sep,
                                                     [{text,[4,60,100,100,62]},
                                                      {text,
                                                       [21,51,114,100,32,97,
                                                        110,100,32,53,116,104,
                                                        32,97,114,103,117,109,
                                                        101,110,116,115]},
                                                      {text,
                                                       [5,60,47,100,100,62]}],
                                                     0,true},
                                                    null},
                                                   null}}},
                                                {above,
                                                 {above,
                                                  {above,{text,[0]},null},
                                                  null},
                                                 {above,
                                                  {above,
                                                   {sep,
                                                    [{text,[4,60,100,116,62]},
                                                     {sep,
                                                      [{text,
                                                        [17,100,114,105,118,
                                                         101,114,95,118,101,
                                                         99,95,116,111,95,98,
                                                         117,102]}],
                                                      0,false},
                                                     {text,
                                                      [5,60,47,100,116,62]}],
                                                    0,true},
                                                   null},
                                                  null}}},
                                               {above,
                                                {above,
                                                 {above,{text,[0]},null},
                                                 null},
                                                {above,
                                                 {above,
                                                  {sep,
                                                   [{text,[4,60,100,100,62]},
                                                    {text,
                                                     [29,51,114,100,32,97,114,
                                                      103,117,109,101,110,116,
                                                      32,97,110,100,32,114,
                                                      101,116,117,114,110,32,
                                                      118,97,108,117,101]},
                                                    {text,
                                                     [5,60,47,100,100,62]}],
                                                   0,true},
                                                  null},
                                                 null}}},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{text,[4,60,100,116,62]},
                                                   {sep,
                                                    [{text,"\fdriver_alloc"}],
                                                    0,false},
                                                   {text,
                                                    [5,60,47,100,116,62]}],
                                                  0,true},
                                                 null},
                                                null}}},
                                             {above,
                                              {above,
                                               {above,{text,[0]},null},
                                               null},
                                              {above,
                                               {above,
                                                {sep,
                                                 [{text,[4,60,100,100,62]},
                                                  {text,"\f1st argument"},
                                                  {text,[5,60,47,100,100,62]}],
                                                 0,true},
                                                null},
                                               null}}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{text,[4,60,100,116,62]},
                                                 {sep,
                                                  [{text,
                                                    [14,100,114,105,118,101,
                                                     114,95,114,101,97,108,
                                                     108,111,99]}],
                                                  0,false},
                                                 {text,[5,60,47,100,116,62]}],
                                                0,true},
                                               null},
                                              null}}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{text,[4,60,100,100,62]},
                                                {text,"\f2nd argument"},
                                                {text,[5,60,47,100,100,62]}],
                                               0,true},
                                              null},
                                             null}}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{text,[4,60,100,116,62]},
                                               {sep,
                                                [{text,
                                                  [19,100,114,105,118,101,114,
                                                   95,97,108,108,111,99,95,98,
                                                   105,110,97,114,121]}],
                                                0,false},
                                               {text,[5,60,47,100,116,62]}],
                                              0,true},
                                             null},
                                            null}}},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{text,[4,60,100,100,62]},
                                              {text,"\f1st argument"},
                                              {text,[5,60,47,100,100,62]}],
                                             0,true},
                                            null},
                                           null}}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{text,[4,60,100,116,62]},
                                             {sep,
                                              [{text,
                                                [21,100,114,105,118,101,114,
                                                 95,114,101,97,108,108,111,99,
                                                 95,98,105,110,97,114,121]}],
                                              0,false},
                                             {text,[5,60,47,100,116,62]}],
                                            0,true},
                                           null},
                                          null}}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,100,62]},
                                            {text,"\f2nd argument"},
                                            {text,[5,60,47,100,100,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,116,62]},
                                           {sep,
                                            [{text,"\ndriver_enq"}],
                                            0,false},
                                           {text,[5,60,47,100,116,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,100,62]},
                                          {text,"\f3rd argument"},
                                          {text,[5,60,47,100,100,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,116,62]},
                                         {sep,
                                          [{text,"\fdriver_pushq"}],
                                          0,false},
                                         {text,[5,60,47,100,116,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,100,62]},
                                        {text,"\f3rd argument"},
                                        {text,[5,60,47,100,100,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,[{text,"\ndriver_deq"}],0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,100,62]},
                                      {text,
                                       [29,50,110,100,32,97,114,103,117,109,
                                        101,110,116,32,97,110,100,32,114,101,
                                        116,117,114,110,32,118,97,108,117,
                                        101]},
                                      {text,[5,60,47,100,100,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,[{text,"\fdriver_sizeq"}],0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {text,"\fReturn value"},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,
                                    [{text,
                                      [14,100,114,105,118,101,114,95,101,110,
                                       113,95,98,105,110]}],
                                    0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {text,
                                   [21,51,114,100,32,97,110,100,32,52,116,104,
                                    32,97,114,103,117,109,101,110,116,115]},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{text,
                                    [16,100,114,105,118,101,114,95,112,117,
                                     115,104,113,95,98,105,110]}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {text,
                                 [21,51,114,100,32,97,110,100,32,52,116,104,
                                  32,97,114,103,117,109,101,110,116,115]},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,"\vdriver_enqv"}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {text,"\f3rd argument"},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,[{text,"\rdriver_pushqv"}],0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {text,"\f3rd argument"},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,"\rdriver_peekqv"}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {text,"\fReturn value"},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}}}},
                  {text,[5,60,47,100,108,62]}},
                 {sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "µThis is a change from signed to unsigned. This can cause problems for, for example, loop termination conditions and error conditions if you only change the types all over the place."}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,false},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r## Data Types"},null},null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{text,[4,60,100,116,62]},
                                                {sep,
                                                 [{sep,
                                                   [{text,"\vErlDrvSizeT"},
                                                    {text,"\vErlDrvSizeT"}],
                                                   0,false}],
                                                 0,false},
                                                {text,[5,60,47,100,116,62]}],
                                               0,true},
                                              null},
                                             null}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{text,[4,60,100,100,62]},
                                                {above,
                                                 {above,
                                                  {above,{text,[0]},null},
                                                  null},
                                                 {above,
                                                  {above,
                                                   {sep,
                                                    [{sep,
                                                      [{sep,
                                                        [{text,
                                                          "&An unsigned integer type to be used as"}],
                                                        0,false},
                                                       {text,
                                                        [6,115,105,122,101,95,
                                                         116]},
                                                       {sep,
                                                        [{text,[1,46]}],
                                                        0,false}],
                                                      0,false}],
                                                    0,true},
                                                   null},
                                                  null}},
                                                {text,[5,60,47,100,100,62]}],
                                               0,true},
                                              null},
                                             null}}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{text,[4,60,100,116,62]},
                                               {sep,
                                                [{sep,
                                                  [{text,"\fErlDrvSSizeT"},
                                                   {text,"\fErlDrvSSizeT"}],
                                                  0,false}],
                                                0,false},
                                               {text,[5,60,47,100,116,62]}],
                                              0,true},
                                             null},
                                            null}}},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{text,[4,60,100,100,62]},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{sep,
                                                    [{sep,
                                                      [{text,
                                                        "\"A signed integer type, the size of"}],
                                                      0,false},
                                                     {text,"\vErlDrvSizeT"},
                                                     {sep,
                                                      [{text,[1,46]}],
                                                      0,false}],
                                                    0,false}],
                                                  0,true},
                                                 null},
                                                null}},
                                              {text,[5,60,47,100,100,62]}],
                                             0,true},
                                            null},
                                           null}}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{text,[4,60,100,116,62]},
                                             {sep,
                                              [{sep,
                                                [{text,"\rErlDrvSysInfo"},
                                                 {text,"\rErlDrvSysInfo"}],
                                                0,false}],
                                              0,false},
                                             {text,[5,60,47,100,116,62]}],
                                            0,true},
                                           null},
                                          null}}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,100,62]},
                                            {sep,
                                             [{above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {above,
                                                  {above,
                                                   {text,[3,96,96,96]},
                                                   {sep,
                                                    [{text,
                                                      [326,10,116,121,112,101,
                                                       100,101,102,32,115,116,
                                                       114,117,99,116,32,69,
                                                       114,108,68,114,118,83,
                                                       121,115,73,110,102,111,
                                                       32,123,10,32,32,32,105,
                                                       110,116,32,100,114,105,
                                                       118,101,114,95,109,97,
                                                       106,111,114,95,118,101,
                                                       114,115,105,111,110,59,
                                                       10,32,32,32,105,110,
                                                       116,32,100,114,105,118,
                                                       101,114,95,109,105,110,
                                                       111,114,95,118,101,114,
                                                       115,105,111,110,59,10,
                                                       32,32,32,99,104,97,114,
                                                       32,42,101,114,116,115,
                                                       95,118,101,114,115,105,
                                                       111,110,59,10,32,32,32,
                                                       99,104,97,114,32,42,
                                                       111,116,112,95,114,101,
                                                       108,101,97,115,101,59,
                                                       10,32,32,32,105,110,
                                                       116,32,116,104,114,101,
                                                       97,100,95,115,117,112,
                                                       112,111,114,116,59,10,
                                                       32,32,32,105,110,116,
                                                       32,115,109,112,95,115,
                                                       117,112,112,111,114,
                                                       116,59,10,32,32,32,105,
                                                       110,116,32,97,115,121,
                                                       110,99,95,116,104,114,
                                                       101,97,100,115,59,10,
                                                       32,32,32,105,110,116,
                                                       32,115,99,104,101,100,
                                                       117,108,101,114,95,116,
                                                       104,114,101,97,100,115,
                                                       59,10,32,32,32,105,110,
                                                       116,32,110,105,102,95,
                                                       109,97,106,111,114,95,
                                                       118,101,114,115,105,
                                                       111,110,59,10,32,32,32,
                                                       105,110,116,32,110,105,
                                                       102,95,109,105,110,111,
                                                       114,95,118,101,114,115,
                                                       105,111,110,59,10,32,
                                                       32,32,105,110,116,32,
                                                       100,105,114,116,121,95,
                                                       115,99,104,101,100,117,
                                                       108,101,114,95,115,117,
                                                       112,112,111,114,116,59,
                                                       10,125,32,69,114,108,
                                                       68,114,118,83,121,115,
                                                       73,110,102,111,59]}],
                                                    0,true}},
                                                  {text,[3,96,96,96]}},
                                                 null},
                                                null}},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{sep,
                                                    [{sep,
                                                      [{text,[3,84,104,101]}],
                                                      0,false},
                                                     {text,"\rErlDrvSysInfo"},
                                                     {sep,
                                                      [{text,
                                                        "Mstructure is used for storage of information about the Erlang runtime system."}],
                                                      0,false},
                                                     {text,
                                                      [18,100,114,105,118,101,
                                                       114,95,115,121,115,116,
                                                       101,109,95,105,110,102,
                                                       111]},
                                                     {sep,
                                                      [{text,
                                                        ":writes the system information when passed a reference to a"}],
                                                      0,false},
                                                     {text,"\rErlDrvSysInfo"},
                                                     {sep,
                                                      [{text,
                                                        "6structure. The fields in the structure are as follows:"}],
                                                      0,false}],
                                                    0,false}],
                                                  0,true},
                                                 null},
                                                null}},
                                              {above,
                                               {above,
                                                {text,[4,60,100,108,62]},
                                                {nest,4,
                                                 {above,
                                                  {above,
                                                   {above,
                                                    {above,
                                                     {above,
                                                      {above,
                                                       {above,
                                                        {above,
                                                         {above,
                                                          {above,
                                                           {above,
                                                            {above,
                                                             {above,
                                                              {above,
                                                               {above,
                                                                {above,
                                                                 {above,
                                                                  {above,
                                                                   {above,
                                                                    {above,
                                                                     {above,
                                                                      {above,
                                                                       {above,
                                                                        {above,
                                                                         {text,
                                                                          [0]},
                                                                         null},
                                                                        null},
                                                                       {above,
                                                                        {above,
                                                                         {sep,
                                                                          [{text,
                                                                            [4,
                                                                             60,
                                                                             100,
                                                                             116,
                                                                             62]},
                                                                           {sep,
                                                                            [{text,
                                                                              [20,
                                                                               100,
                                                                               114,
                                                                               105,
                                                                               118,
                                                                               101,
                                                                               114,
                                                                               95,
                                                                               109,
                                                                               97,
                                                                               106,
                                                                               111,
                                                                               114,
                                                                               95,
                                                                               118,
                                                                               101,
                                                                               114,
                                                                               115,
                                                                               105,
                                                                               111,
                                                                               110]}],
                                                                            0,
                                                                            false},
                                                                           {text,
                                                                            [5,
                                                                             60,
                                                                             47,
                                                                             100,
                                                                             116,
                                                                             62]}],
                                                                          0,
                                                                          true},
                                                                         null},
                                                                        null}},
                                                                      {above,
                                                                       {above,
                                                                        {above,
                                                                         {text,
                                                                          [0]},
                                                                         null},
                                                                        null},
                                                                       {above,
                                                                        {above,
                                                                         {sep,
                                                                          [{text,
                                                                            [4,
                                                                             60,
                                                                             100,
                                                                             100,
                                                                             62]},
                                                                           {above,
                                                                            {above,
                                                                             {above,
                                                                              {text,
                                                                               [0]},
                                                                              null},
                                                                             null},
                                                                            {above,
                                                                             {above,
                                                                              {sep,
                                                                               [{sep,
                                                                                 [{sep,
                                                                                   [{text,
                                                                                     "\fThe value of"}],
                                                                                   0,
                                                                                   false},
                                                                                  {text,
                                                                                   [18,
                                                                                    118,
                                                                                    101,
                                                                                    114,
                                                                                    115,
                                                                                    105,
                                                                                    111,
                                                                                    110,
                                                                                    95,
                                                                                    109,
                                                                                    97,
                                                                                    110,
                                                                                    97,
                                                                                    103,
                                                                                    101,
                                                                                    109,
                                                                                    101,
                                                                                    110,
                                                                                    116]},
                                                                                  {sep,
                                                                                   [{text,
                                                                                     "Lwhen the runtime system was compiled. This value is the same as the value of"}],
                                                                                   0,
                                                                                   false},
                                                                                  {text,
                                                                                   [18,
                                                                                    118,
                                                                                    101,
                                                                                    114,
                                                                                    115,
                                                                                    105,
                                                                                    111,
                                                                                    110,
                                                                                    95,
                                                                                    109,
                                                                                    97,
                                                                                    110,
                                                                                    97,
                                                                                    103,
                                                                                    101,
                                                                                    109,
                                                                                    101,
                                                                                    110,
                                                                                    116]},
                                                                                  {sep,
                                                                                   [{text,
                                                                                     "cused when compiling the driver; otherwise the runtime system would have refused to load the driver."}],
                                                                                   0,
                                                                                   false}],
                                                                                 0,
                                                                                 false}],
                                                                               0,
                                                                               true},
                                                                              null},
                                                                             null}},
                                                                           {text,
                                                                            [5,
                                                                             60,
                                                                             47,
                                                                             100,
                                                                             100,
                                                                             62]}],
                                                                          0,
                                                                          true},
                                                                         null},
                                                                        null}}},
                                                                     {above,
                                                                      {above,
                                                                       {above,
                                                                        {text,
                                                                         [0]},
                                                                        null},
                                                                       null},
                                                                      {above,
                                                                       {above,
                                                                        {sep,
                                                                         [{text,
                                                                           [4,
                                                                            60,
                                                                            100,
                                                                            116,
                                                                            62]},
                                                                          {sep,
                                                                           [{text,
                                                                             [20,
                                                                              100,
                                                                              114,
                                                                              105,
                                                                              118,
                                                                              101,
                                                                              114,
                                                                              95,
                                                                              109,
                                                                              105,
                                                                              110,
                                                                              111,
                                                                              114,
                                                                              95,
                                                                              118,
                                                                              101,
                                                                              114,
                                                                              115,
                                                                              105,
                                                                              111,
                                                                              110]}],
                                                                           0,
                                                                           false},
                                                                          {text,
                                                                           [5,
                                                                            60,
                                                                            47,
                                                                            100,
                                                                            116,
                                                                            62]}],
                                                                         0,
                                                                         true},
                                                                        null},
                                                                       null}}},
                                                                    {above,
                                                                     {above,
                                                                      {above,
                                                                       {text,
                                                                        [0]},
                                                                       null},
                                                                      null},
                                                                     {above,
                                                                      {above,
                                                                       {sep,
                                                                        [{text,
                                                                          [4,
                                                                           60,
                                                                           100,
                                                                           100,
                                                                           62]},
                                                                         {above,
                                                                          {above,
                                                                           {above,
                                                                            {text,
                                                                             [0]},
                                                                            null},
                                                                           null},
                                                                          {above,
                                                                           {above,
                                                                            {sep,
                                                                             [{sep,
                                                                               [{sep,
                                                                                 [{text,
                                                                                   "\fThe value of"}],
                                                                                 0,
                                                                                 false},
                                                                                {text,
                                                                                 [18,
                                                                                  118,
                                                                                  101,
                                                                                  114,
                                                                                  115,
                                                                                  105,
                                                                                  111,
                                                                                  110,
                                                                                  95,
                                                                                  109,
                                                                                  97,
                                                                                  110,
                                                                                  97,
                                                                                  103,
                                                                                  101,
                                                                                  109,
                                                                                  101,
                                                                                  110,
                                                                                  116]},
                                                                                {sep,
                                                                                 [{text,
                                                                                   "Mwhen the runtime system was compiled. This value can differ from the value of"}],
                                                                                 0,
                                                                                 false},
                                                                                {text,
                                                                                 [18,
                                                                                  118,
                                                                                  101,
                                                                                  114,
                                                                                  115,
                                                                                  105,
                                                                                  111,
                                                                                  110,
                                                                                  95,
                                                                                  109,
                                                                                  97,
                                                                                  110,
                                                                                  97,
                                                                                  103,
                                                                                  101,
                                                                                  109,
                                                                                  101,
                                                                                  110,
                                                                                  116]},
                                                                                {sep,
                                                                                 [{text,
                                                                                   [31,
                                                                                    117,
                                                                                    115,
                                                                                    101,
                                                                                    100,
                                                                                    32,
                                                                                    119,
                                                                                    104,
                                                                                    101,
                                                                                    110,
                                                                                    32,
                                                                                    99,
                                                                                    111,
                                                                                    109,
                                                                                    112,
                                                                                    105,
                                                                                    108,
                                                                                    105,
                                                                                    110,
                                                                                    103,
                                                                                    32,
                                                                                    116,
                                                                                    104,
                                                                                    101,
                                                                                    32,
                                                                                    100,
                                                                                    114,
                                                                                    105,
                                                                                    118,
                                                                                    101,
                                                                                    114,
                                                                                    46]}],
                                                                                 0,
                                                                                 false}],
                                                                               0,
                                                                               false}],
                                                                             0,
                                                                             true},
                                                                            null},
                                                                           null}},
                                                                         {text,
                                                                          [5,
                                                                           60,
                                                                           47,
                                                                           100,
                                                                           100,
                                                                           62]}],
                                                                        0,
                                                                        true},
                                                                       null},
                                                                      null}}},
                                                                   {above,
                                                                    {above,
                                                                     {above,
                                                                      {text,
                                                                       [0]},
                                                                      null},
                                                                     null},
                                                                    {above,
                                                                     {above,
                                                                      {sep,
                                                                       [{text,
                                                                         [4,
                                                                          60,
                                                                          100,
                                                                          116,
                                                                          62]},
                                                                        {sep,
                                                                         [{text,
                                                                           "\ferts_version"}],
                                                                         0,
                                                                         false},
                                                                        {text,
                                                                         [5,
                                                                          60,
                                                                          47,
                                                                          100,
                                                                          116,
                                                                          62]}],
                                                                       0,true},
                                                                      null},
                                                                     null}}},
                                                                  {above,
                                                                   {above,
                                                                    {above,
                                                                     {text,
                                                                      [0]},
                                                                     null},
                                                                    null},
                                                                   {above,
                                                                    {above,
                                                                     {sep,
                                                                      [{text,
                                                                        [4,60,
                                                                         100,
                                                                         100,
                                                                         62]},
                                                                       {above,
                                                                        {above,
                                                                         {above,
                                                                          {text,
                                                                           [0]},
                                                                          null},
                                                                         null},
                                                                        {above,
                                                                         {above,
                                                                          {sep,
                                                                           [{sep,
                                                                             [{sep,
                                                                               [{text,
                                                                                 "UA string containing the version number of the runtime system (the same as returned by"}],
                                                                               0,
                                                                               false},
                                                                              {text,
                                                                               [26,
                                                                                101,
                                                                                114,
                                                                                108,
                                                                                97,
                                                                                110,
                                                                                103,
                                                                                35,
                                                                                115,
                                                                                121,
                                                                                115,
                                                                                116,
                                                                                101,
                                                                                109,
                                                                                95,
                                                                                105,
                                                                                110,
                                                                                102,
                                                                                111,
                                                                                95,
                                                                                118,
                                                                                101,
                                                                                114,
                                                                                115,
                                                                                105,
                                                                                111,
                                                                                110]},
                                                                              {sep,
                                                                               [{text,
                                                                                 [2,
                                                                                  41,
                                                                                  46]}],
                                                                               0,
                                                                               false}],
                                                                             0,
                                                                             false}],
                                                                           0,
                                                                           true},
                                                                          null},
                                                                         null}},
                                                                       {text,
                                                                        [5,60,
                                                                         47,
                                                                         100,
                                                                         100,
                                                                         62]}],
                                                                      0,true},
                                                                     null},
                                                                    null}}},
                                                                 {above,
                                                                  {above,
                                                                   {above,
                                                                    {text,[0]},
                                                                    null},
                                                                   null},
                                                                  {above,
                                                                   {above,
                                                                    {sep,
                                                                     [{text,
                                                                       [4,60,
                                                                        100,
                                                                        116,
                                                                        62]},
                                                                      {sep,
                                                                       [{text,
                                                                         "\votp_release"}],
                                                                       0,
                                                                       false},
                                                                      {text,
                                                                       [5,60,
                                                                        47,
                                                                        100,
                                                                        116,
                                                                        62]}],
                                                                     0,true},
                                                                    null},
                                                                   null}}},
                                                                {above,
                                                                 {above,
                                                                  {above,
                                                                   {text,[0]},
                                                                   null},
                                                                  null},
                                                                 {above,
                                                                  {above,
                                                                   {sep,
                                                                    [{text,
                                                                      [4,60,
                                                                       100,
                                                                       100,
                                                                       62]},
                                                                     {above,
                                                                      {above,
                                                                       {above,
                                                                        {text,
                                                                         [0]},
                                                                        null},
                                                                       null},
                                                                      {above,
                                                                       {above,
                                                                        {sep,
                                                                         [{sep,
                                                                           [{sep,
                                                                             [{text,
                                                                               "CA string containing the OTP release number (the same as returned by"}],
                                                                             0,
                                                                             false},
                                                                            {text,
                                                                             [30,
                                                                              101,
                                                                              114,
                                                                              108,
                                                                              97,
                                                                              110,
                                                                              103,
                                                                              35,
                                                                              115,
                                                                              121,
                                                                              115,
                                                                              116,
                                                                              101,
                                                                              109,
                                                                              95,
                                                                              105,
                                                                              110,
                                                                              102,
                                                                              111,
                                                                              95,
                                                                              111,
                                                                              116,
                                                                              112,
                                                                              95,
                                                                              114,
                                                                              101,
                                                                              108,
                                                                              101,
                                                                              97,
                                                                              115,
                                                                              101]},
                                                                            {sep,
                                                                             [{text,
                                                                               [2,
                                                                                41,
                                                                                46]}],
                                                                             0,
                                                                             false}],
                                                                           0,
                                                                           false}],
                                                                         0,
                                                                         true},
                                                                        null},
                                                                       null}},
                                                                     {text,
                                                                      [5,60,
                                                                       47,100,
                                                                       100,
                                                                       62]}],
                                                                    0,true},
                                                                   null},
                                                                  null}}},
                                                               {above,
                                                                {above,
                                                                 {above,
                                                                  {text,[0]},
                                                                  null},
                                                                 null},
                                                                {above,
                                                                 {above,
                                                                  {sep,
                                                                   [{text,
                                                                     [4,60,
                                                                      100,116,
                                                                      62]},
                                                                    {sep,
                                                                     [{text,
                                                                       [14,
                                                                        116,
                                                                        104,
                                                                        114,
                                                                        101,
                                                                        97,
                                                                        100,
                                                                        95,
                                                                        115,
                                                                        117,
                                                                        112,
                                                                        112,
                                                                        111,
                                                                        114,
                                                                        116]}],
                                                                     0,false},
                                                                    {text,
                                                                     [5,60,47,
                                                                      100,116,
                                                                      62]}],
                                                                   0,true},
                                                                  null},
                                                                 null}}},
                                                              {above,
                                                               {above,
                                                                {above,
                                                                 {text,[0]},
                                                                 null},
                                                                null},
                                                               {above,
                                                                {above,
                                                                 {sep,
                                                                  [{text,
                                                                    [4,60,100,
                                                                     100,62]},
                                                                   {above,
                                                                    {above,
                                                                     {above,
                                                                      {text,
                                                                       [0]},
                                                                      null},
                                                                     null},
                                                                    {above,
                                                                     {above,
                                                                      {sep,
                                                                       [{sep,
                                                                         [{sep,
                                                                           [{text,
                                                                             [7,
                                                                              65,
                                                                              32,
                                                                              118,
                                                                              97,
                                                                              108,
                                                                              117,
                                                                              101]}],
                                                                           0,
                                                                           false},
                                                                          {text,
                                                                           [4,
                                                                            33,
                                                                            61,
                                                                            32,
                                                                            48]},
                                                                          {sep,
                                                                           [{text,
                                                                             "3if the runtime system has thread support; otherwise"}],
                                                                           0,
                                                                           false},
                                                                          {text,
                                                                           [1,
                                                                            48]},
                                                                          {sep,
                                                                           [{text,
                                                                             [1,
                                                                              46]}],
                                                                           0,
                                                                           false}],
                                                                         0,
                                                                         false}],
                                                                       0,true},
                                                                      null},
                                                                     null}},
                                                                   {text,
                                                                    [5,60,47,
                                                                     100,100,
                                                                     62]}],
                                                                  0,true},
                                                                 null},
                                                                null}}},
                                                             {above,
                                                              {above,
                                                               {above,
                                                                {text,[0]},
                                                                null},
                                                               null},
                                                              {above,
                                                               {above,
                                                                {sep,
                                                                 [{text,
                                                                   [4,60,100,
                                                                    116,62]},
                                                                  {sep,
                                                                   [{text,
                                                                     "\vsmp_support"}],
                                                                   0,false},
                                                                  {text,
                                                                   [5,60,47,
                                                                    100,116,
                                                                    62]}],
                                                                 0,true},
                                                                null},
                                                               null}}},
                                                            {above,
                                                             {above,
                                                              {above,
                                                               {text,[0]},
                                                               null},
                                                              null},
                                                             {above,
                                                              {above,
                                                               {sep,
                                                                [{text,
                                                                  [4,60,100,
                                                                   100,62]},
                                                                 {above,
                                                                  {above,
                                                                   {above,
                                                                    {text,[0]},
                                                                    null},
                                                                   null},
                                                                  {above,
                                                                   {above,
                                                                    {sep,
                                                                     [{sep,
                                                                       [{sep,
                                                                         [{text,
                                                                           [7,
                                                                            65,
                                                                            32,
                                                                            118,
                                                                            97,
                                                                            108,
                                                                            117,
                                                                            101]}],
                                                                         0,
                                                                         false},
                                                                        {text,
                                                                         [4,
                                                                          33,
                                                                          61,
                                                                          32,
                                                                          48]},
                                                                        {sep,
                                                                         [{text,
                                                                           "0if the runtime system has SMP support; otherwise"}],
                                                                         0,
                                                                         false},
                                                                        {text,
                                                                         [1,
                                                                          48]},
                                                                        {sep,
                                                                         [{text,
                                                                           [1,
                                                                            46]}],
                                                                         0,
                                                                         false}],
                                                                       0,
                                                                       false}],
                                                                     0,true},
                                                                    null},
                                                                   null}},
                                                                 {text,
                                                                  [5,60,47,
                                                                   100,100,
                                                                   62]}],
                                                                0,true},
                                                               null},
                                                              null}}},
                                                           {above,
                                                            {above,
                                                             {above,
                                                              {text,[0]},
                                                              null},
                                                             null},
                                                            {above,
                                                             {above,
                                                              {sep,
                                                               [{text,
                                                                 [4,60,100,
                                                                  116,62]},
                                                                {sep,
                                                                 [{text,
                                                                   "\rasync_threads"}],
                                                                 0,false},
                                                                {text,
                                                                 [5,60,47,100,
                                                                  116,62]}],
                                                               0,true},
                                                              null},
                                                             null}}},
                                                          {above,
                                                           {above,
                                                            {above,
                                                             {text,[0]},
                                                             null},
                                                            null},
                                                           {above,
                                                            {above,
                                                             {sep,
                                                              [{text,
                                                                [4,60,100,100,
                                                                 62]},
                                                               {above,
                                                                {above,
                                                                 {above,
                                                                  {text,[0]},
                                                                  null},
                                                                 null},
                                                                {above,
                                                                 {above,
                                                                  {sep,
                                                                   [{sep,
                                                                     [{sep,
                                                                       [{text,
                                                                         "<The number of async threads in the async thread pool used by"}],
                                                                       0,
                                                                       false},
                                                                      {text,
                                                                       "\fdriver_async"},
                                                                      {sep,
                                                                       [{text,
                                                                         [24,
                                                                          40,
                                                                          116,
                                                                          104,
                                                                          101,
                                                                          32,
                                                                          115,
                                                                          97,
                                                                          109,
                                                                          101,
                                                                          32,
                                                                          97,
                                                                          115,
                                                                          32,
                                                                          114,
                                                                          101,
                                                                          116,
                                                                          117,
                                                                          114,
                                                                          110,
                                                                          101,
                                                                          100,
                                                                          32,
                                                                          98,
                                                                          121]}],
                                                                       0,
                                                                       false},
                                                                      {text,
                                                                       "#erlang#system_info_thread_pool_size"},
                                                                      {sep,
                                                                       [{text,
                                                                         [2,
                                                                          41,
                                                                          46]}],
                                                                       0,
                                                                       false}],
                                                                     0,false}],
                                                                   0,true},
                                                                  null},
                                                                 null}},
                                                               {text,
                                                                [5,60,47,100,
                                                                 100,62]}],
                                                              0,true},
                                                             null},
                                                            null}}},
                                                         {above,
                                                          {above,
                                                           {above,
                                                            {text,[0]},
                                                            null},
                                                           null},
                                                          {above,
                                                           {above,
                                                            {sep,
                                                             [{text,
                                                               [4,60,100,116,
                                                                62]},
                                                              {sep,
                                                               [{text,
                                                                 [17,115,99,
                                                                  104,101,100,
                                                                  117,108,101,
                                                                  114,95,116,
                                                                  104,114,101,
                                                                  97,100,
                                                                  115]}],
                                                               0,false},
                                                              {text,
                                                               [5,60,47,100,
                                                                116,62]}],
                                                             0,true},
                                                            null},
                                                           null}}},
                                                        {above,
                                                         {above,
                                                          {above,
                                                           {text,[0]},
                                                           null},
                                                          null},
                                                         {above,
                                                          {above,
                                                           {sep,
                                                            [{text,
                                                              [4,60,100,100,
                                                               62]},
                                                             {above,
                                                              {above,
                                                               {above,
                                                                {text,[0]},
                                                                null},
                                                               null},
                                                              {above,
                                                               {above,
                                                                {sep,
                                                                 [{sep,
                                                                   [{sep,
                                                                     [{text,
                                                                       "SThe number of scheduler threads used by the runtime system (the same as returned by"}],
                                                                     0,false},
                                                                    {text,
                                                                     [29,101,
                                                                      114,108,
                                                                      97,110,
                                                                      103,35,
                                                                      115,121,
                                                                      115,116,
                                                                      101,109,
                                                                      95,105,
                                                                      110,102,
                                                                      111,95,
                                                                      115,99,
                                                                      104,101,
                                                                      100,117,
                                                                      108,101,
                                                                      114,
                                                                      115]},
                                                                    {sep,
                                                                     [{text,
                                                                       [2,41,
                                                                        46]}],
                                                                     0,false}],
                                                                   0,false}],
                                                                 0,true},
                                                                null},
                                                               null}},
                                                             {text,
                                                              [5,60,47,100,
                                                               100,62]}],
                                                            0,true},
                                                           null},
                                                          null}}},
                                                       {above,
                                                        {above,
                                                         {above,
                                                          {text,[0]},
                                                          null},
                                                         null},
                                                        {above,
                                                         {above,
                                                          {sep,
                                                           [{text,
                                                             [4,60,100,116,
                                                              62]},
                                                            {sep,
                                                             [{text,
                                                               [17,110,105,
                                                                102,95,109,97,
                                                                106,111,114,
                                                                95,118,101,
                                                                114,115,105,
                                                                111,110]}],
                                                             0,false},
                                                            {text,
                                                             [5,60,47,100,116,
                                                              62]}],
                                                           0,true},
                                                          null},
                                                         null}}},
                                                      {above,
                                                       {above,
                                                        {above,
                                                         {text,[0]},
                                                         null},
                                                        null},
                                                       {above,
                                                        {above,
                                                         {sep,
                                                          [{text,
                                                            [4,60,100,100,62]},
                                                           {above,
                                                            {above,
                                                             {above,
                                                              {text,[0]},
                                                              null},
                                                             null},
                                                            {above,
                                                             {above,
                                                              {sep,
                                                               [{sep,
                                                                 [{sep,
                                                                   [{text,
                                                                     "\fThe value of"}],
                                                                   0,false},
                                                                  {text,
                                                                   [21,69,82,
                                                                    76,95,78,
                                                                    73,70,95,
                                                                    77,65,74,
                                                                    79,82,95,
                                                                    86,69,82,
                                                                    83,73,79,
                                                                    78]},
                                                                  {sep,
                                                                   [{text,
                                                                     "%when the runtime system was compiled."}],
                                                                   0,false}],
                                                                 0,false}],
                                                               0,true},
                                                              null},
                                                             null}},
                                                           {text,
                                                            [5,60,47,100,100,
                                                             62]}],
                                                          0,true},
                                                         null},
                                                        null}}},
                                                     {above,
                                                      {above,
                                                       {above,{text,[0]},null},
                                                       null},
                                                      {above,
                                                       {above,
                                                        {sep,
                                                         [{text,
                                                           [4,60,100,116,62]},
                                                          {sep,
                                                           [{text,
                                                             [17,110,105,102,
                                                              95,109,105,110,
                                                              111,114,95,118,
                                                              101,114,115,105,
                                                              111,110]}],
                                                           0,false},
                                                          {text,
                                                           [5,60,47,100,116,
                                                            62]}],
                                                         0,true},
                                                        null},
                                                       null}}},
                                                    {above,
                                                     {above,
                                                      {above,{text,[0]},null},
                                                      null},
                                                     {above,
                                                      {above,
                                                       {sep,
                                                        [{text,
                                                          [4,60,100,100,62]},
                                                         {above,
                                                          {above,
                                                           {above,
                                                            {text,[0]},
                                                            null},
                                                           null},
                                                          {above,
                                                           {above,
                                                            {sep,
                                                             [{sep,
                                                               [{sep,
                                                                 [{text,
                                                                   "\fThe value of"}],
                                                                 0,false},
                                                                {text,
                                                                 [21,69,82,76,
                                                                  95,78,73,70,
                                                                  95,77,73,78,
                                                                  79,82,95,86,
                                                                  69,82,83,73,
                                                                  79,78]},
                                                                {sep,
                                                                 [{text,
                                                                   "%when the runtime system was compiled."}],
                                                                 0,false}],
                                                               0,false}],
                                                             0,true},
                                                            null},
                                                           null}},
                                                         {text,
                                                          [5,60,47,100,100,
                                                           62]}],
                                                        0,true},
                                                       null},
                                                      null}}},
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{text,
                                                         [4,60,100,116,62]},
                                                        {sep,
                                                         [{text,
                                                           [23,100,105,114,
                                                            116,121,95,115,99,
                                                            104,101,100,117,
                                                            108,101,114,95,
                                                            115,117,112,112,
                                                            111,114,116]}],
                                                         0,false},
                                                        {text,
                                                         [5,60,47,100,116,
                                                          62]}],
                                                       0,true},
                                                      null},
                                                     null}}},
                                                  {above,
                                                   {above,
                                                    {above,{text,[0]},null},
                                                    null},
                                                   {above,
                                                    {above,
                                                     {sep,
                                                      [{text,
                                                        [4,60,100,100,62]},
                                                       {above,
                                                        {above,
                                                         {above,
                                                          {text,[0]},
                                                          null},
                                                         null},
                                                        {above,
                                                         {above,
                                                          {sep,
                                                           [{sep,
                                                             [{sep,
                                                               [{text,
                                                                 [7,65,32,118,
                                                                  97,108,117,
                                                                  101]}],
                                                               0,false},
                                                              {text,
                                                               [4,33,61,32,
                                                                48]},
                                                              {sep,
                                                               [{text,
                                                                 "Hif the runtime system has support for dirty scheduler threads; otherwise"}],
                                                               0,false},
                                                              {text,[1,48]},
                                                              {sep,
                                                               [{text,[1,46]}],
                                                               0,false}],
                                                             0,false}],
                                                           0,true},
                                                          null},
                                                         null}},
                                                       {text,
                                                        [5,60,47,100,100,62]}],
                                                      0,true},
                                                     null},
                                                    null}}}}},
                                               {text,[5,60,47,100,108,62]}}],
                                             0,false},
                                            {text,[5,60,47,100,100,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,116,62]},
                                           {sep,
                                            [{sep,
                                              [{text,"\fErlDrvBinary"},
                                               {text,"\fErlDrvBinary"}],
                                              0,false}],
                                            0,false},
                                           {text,[5,60,47,100,116,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,100,62]},
                                          {sep,
                                           [{above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {above,
                                                {above,
                                                 {text,[3,96,96,96]},
                                                 {sep,
                                                  [{text,
                                                    "]\ntypedef struct ErlDrvBinary {\n   ErlDrvSint orig_size;\n   char orig_bytes[];\n} ErlDrvBinary;"}],
                                                  0,true}},
                                                {text,[3,96,96,96]}},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,[3,84,104,101]}],
                                                    0,false},
                                                   {text,"\fErlDrvBinary"},
                                                   {sep,
                                                    [{text,
                                                      "lstructure is a binary, as sent between the emulator and the driver. All binaries are reference counted; when"}],
                                                    0,false},
                                                   {text,
                                                    [18,100,114,105,118,101,
                                                     114,95,98,105,110,97,114,
                                                     121,95,102,114,101,101]},
                                                   {sep,
                                                    [{text,
                                                      "_is called, the reference count is decremented, when it reaches zero, the binary is deallocated."}],
                                                    0,false},
                                                   {text,"\torig_size"},
                                                   {sep,
                                                    [{text,
                                                      [22,105,115,32,116,104,
                                                       101,32,98,105,110,97,
                                                       114,121,32,115,105,122,
                                                       101,32,97,110,100]}],
                                                    0,false},
                                                   {text,"\norig_bytes"},
                                                   {sep,
                                                    [{text,
                                                      [14,105,115,32,116,104,
                                                       101,32,98,117,102,102,
                                                       101,114,46]}],
                                                    0,false},
                                                   {text,"\fErlDrvBinary"},
                                                   {sep,
                                                    [{text,
                                                      "!has not a fixed size, its size is"}],
                                                    0,false},
                                                   {text,
                                                    "\eorig_size + 2 * sizeof(int)"},
                                                   {sep,
                                                    [{text,[1,46]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {sep,
                                             [{above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{sep,
                                                    [{sep,
                                                      [{text,[3,84,104,101]}],
                                                      0,false},
                                                     {text,[4,114,101,102,99]},
                                                     {sep,
                                                      [{text,
                                                        "1field has been removed. The reference count of an"}],
                                                      0,false},
                                                     {text,"\fErlDrvBinary"},
                                                     {sep,
                                                      [{text,
                                                        "2is now stored elsewhere. The reference count of an"}],
                                                      0,false},
                                                     {text,"\fErlDrvBinary"},
                                                     {sep,
                                                      [{text,
                                                        [23,99,97,110,32,98,
                                                         101,32,97,99,99,101,
                                                         115,115,101,100,32,
                                                         116,104,114,111,117,
                                                         103,104]}],
                                                      0,false},
                                                     {text,
                                                      [22,100,114,105,118,101,
                                                       114,95,98,105,110,97,
                                                       114,121,95,103,101,116,
                                                       95,114,101,102,99]},
                                                     {sep,
                                                      [{text,[1,44]}],
                                                      0,false},
                                                     {text,
                                                      [22,100,114,105,118,101,
                                                       114,95,98,105,110,97,
                                                       114,121,95,105,110,99,
                                                       95,114,101,102,99]},
                                                     {sep,
                                                      [{text,
                                                        [5,44,32,97,110,100]}],
                                                      0,false},
                                                     {text,
                                                      [22,100,114,105,118,101,
                                                       114,95,98,105,110,97,
                                                       114,121,95,100,101,99,
                                                       95,114,101,102,99]},
                                                     {sep,
                                                      [{text,[1,46]}],
                                                      0,false}],
                                                    0,false}],
                                                  0,true},
                                                 null},
                                                null}}],
                                             0,false},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      [26,83,111,109,101,32,
                                                       100,114,105,118,101,
                                                       114,32,99,97,108,108,
                                                       115,44,32,115,117,99,
                                                       104,32,97,115]}],
                                                    0,false},
                                                   {text,
                                                    [17,100,114,105,118,101,
                                                     114,95,101,110,113,95,98,
                                                     105,110,97,114,121]},
                                                   {sep,
                                                    [{text,
                                                      ";, increment the driver reference count, and others, such as"}],
                                                    0,false},
                                                   {text,"\ndriver_deq"},
                                                   {sep,
                                                    [{text,"\rdecrement it."}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{text,
                                                    [135,85,115,105,110,103,
                                                     32,97,32,100,114,105,118,
                                                     101,114,32,98,105,110,97,
                                                     114,121,32,105,110,115,
                                                     116,101,97,100,32,111,
                                                     102,32,97,32,110,111,114,
                                                     109,97,108,32,98,117,102,
                                                     102,101,114,32,105,115,
                                                     32,111,102,116,101,110,
                                                     32,102,97,115,116,101,
                                                     114,44,32,97,115,32,116,
                                                     104,101,32,101,109,117,
                                                     108,97,116,111,114,32,
                                                     110,101,101,100,115,32,
                                                     110,111,116,32,116,111,
                                                     32,99,111,112,121,32,116,
                                                     104,101,32,100,97,116,97,
                                                     44,32,111,110,108,121,32,
                                                     116,104,101,32,112,111,
                                                     105,110,116,101,114,32,
                                                     105,115,32,117,115,101,
                                                     100,46]}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      "-A driver binary allocated in the driver, with"}],
                                                    0,false},
                                                   {text,
                                                    [19,100,114,105,118,101,
                                                     114,95,97,108,108,111,99,
                                                     95,98,105,110,97,114,
                                                     121]},
                                                   {sep,
                                                    [{text,
                                                      "=, is to be freed in the driver (unless otherwise stated) with"}],
                                                    0,false},
                                                   {text,
                                                    [18,100,114,105,118,101,
                                                     114,95,102,114,101,101,
                                                     95,98,105,110,97,114,
                                                     121]},
                                                   {sep,
                                                    [{text,
                                                      [140,46,32,40,78,111,
                                                       116,105,99,101,32,116,
                                                       104,97,116,32,116,104,
                                                       105,115,32,100,111,101,
                                                       115,32,110,111,116,32,
                                                       110,101,99,101,115,115,
                                                       97,114,105,108,121,32,
                                                       100,101,97,108,108,111,
                                                       99,97,116,101,32,105,
                                                       116,44,32,105,102,32,
                                                       116,104,101,32,100,114,
                                                       105,118,101,114,32,105,
                                                       115,32,115,116,105,108,
                                                       108,32,114,101,102,101,
                                                       114,114,101,100,32,105,
                                                       110,32,116,104,101,32,
                                                       101,109,117,108,97,116,
                                                       111,114,44,32,116,104,
                                                       101,32,114,101,102,45,
                                                       99,111,117,110,116,32,
                                                       119,105,108,108,32,110,
                                                       111,116,32,103,111,32,
                                                       116,111,32,122,101,114,
                                                       111,46,41]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      [31,68,114,105,118,101,
                                                       114,32,98,105,110,97,
                                                       114,105,101,115,32,97,
                                                       114,101,32,117,115,101,
                                                       100,32,105,110,32,116,
                                                       104,101]}],
                                                    0,false},
                                                   {text,
                                                    [14,100,114,105,118,101,
                                                     114,95,111,117,116,112,
                                                     117,116,50]},
                                                   {sep,
                                                    [{text,[3,97,110,100]}],
                                                    0,false},
                                                   {text,
                                                    [14,100,114,105,118,101,
                                                     114,95,111,117,116,112,
                                                     117,116,118]},
                                                   {sep,
                                                    [{text,
                                                      "1calls, and in the queue. Also the driver callback"}],
                                                    0,false},
                                                   {text,
                                                    [20,100,114,105,118,101,
                                                     114,95,101,110,116,114,
                                                     121,35,111,117,116,112,
                                                     117,116,118]},
                                                   {sep,
                                                    [{text,
                                                      [21,117,115,101,115,32,
                                                       100,114,105,118,101,
                                                       114,32,98,105,110,97,
                                                       114,105,101,115,46]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      "¸If the driver for some reason wants to keep a driver binary around, for example in a static variable, the reference count is to be incremented, and the binary can later be freed in the"}],
                                                    0,false},
                                                   {text,
                                                    [17,100,114,105,118,101,
                                                     114,95,101,110,116,114,
                                                     121,35,115,116,111,112]},
                                                   {sep,
                                                    [{text,
                                                      [14,99,97,108,108,98,97,
                                                       99,107,44,32,119,105,
                                                       116,104]}],
                                                    0,false},
                                                   {text,
                                                    [18,100,114,105,118,101,
                                                     114,95,102,114,101,101,
                                                     95,98,105,110,97,114,
                                                     121]},
                                                   {sep,
                                                    [{text,[1,46]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{text,
                                                    "§Notice that as a driver binary is shared by the driver and the emulator. A binary received from the emulator or sent to the emulator must not be changed by the driver."}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      "!Since ERTS 5.5 (Erlang/OTP R11B),"}],
                                                    0,false},
                                                   {text,"\norig_bytes"},
                                                   {sep,
                                                    [{text,
                                                      "ais guaranteed to be properly aligned for storage of an array of doubles (usually 8-byte aligned)."}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}}],
                                           0,false},
                                          {text,[5,60,47,100,100,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,116,62]},
                                         {sep,[{text,"\nErlDrvData"}],0,false},
                                         {text,[5,60,47,100,116,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,100,62]},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{text,
                                                [147,65,32,104,97,110,100,108,
                                                 101,32,116,111,32,100,114,
                                                 105,118,101,114,45,115,112,
                                                 101,99,105,102,105,99,32,100,
                                                 97,116,97,44,32,112,97,115,
                                                 115,101,100,32,116,111,32,
                                                 116,104,101,32,100,114,105,
                                                 118,101,114,32,99,97,108,108,
                                                 98,97,99,107,115,46,32,73,
                                                 116,32,105,115,32,97,32,112,
                                                 111,105,110,116,101,114,44,
                                                 32,97,110,100,32,105,115,32,
                                                 109,111,115,116,32,111,102,
                                                 116,101,110,32,116,121,112,
                                                 101,32,99,97,115,116,32,116,
                                                 111,32,97,32,115,112,101,99,
                                                 105,102,105,99,32,112,111,
                                                 105,110,116,101,114,32,105,
                                                 110,32,116,104,101,32,100,
                                                 114,105,118,101,114,46]}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}},
                                        {text,[5,60,47,100,100,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,[{text,"\bSysIOVec"}],0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,100,62]},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{sep,
                                              [{text,
                                                [31,65,32,115,121,115,116,101,
                                                 109,32,73,47,79,32,118,101,
                                                 99,116,111,114,44,32,97,115,
                                                 32,117,115,101,100,32,98,
                                                 121]}],
                                              0,false},
                                             {text,
                                              [6,119,114,105,116,101,118]},
                                             {sep,
                                              [{text,"\von Unix and"}],
                                              0,false},
                                             {text,
                                              [7,87,83,65,83,101,110,100]},
                                             {sep,
                                              [{text,
                                                [23,111,110,32,87,105,110,51,
                                                 50,46,32,73,116,32,105,115,
                                                 32,117,115,101,100,32,105,
                                                 110]}],
                                              0,false},
                                             {text,"\bErlIOVec"},
                                             {sep,[{text,[1,46]}],0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {text,[5,60,47,100,100,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,
                                      [{sep,
                                        [{text,"\bErlIOVec"},
                                         {text,"\bErlIOVec"}],
                                        0,false}],
                                      0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {sep,
                                     [{above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {text,[3,96,96,96]},
                                           {sep,
                                            [{text,
                                              "o\ntypedef struct ErlIOVec {\n  int vsize;\n  ErlDrvSizeT size;\n  SysIOVec* iov;\n  ErlDrvBinary** binv;\n} ErlIOVec;"}],
                                            0,true}},
                                          {text,[3,96,96,96]}},
                                         null},
                                        null}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{sep,
                                              [{text,
                                                "MThe I/O vector used by the emulator and drivers is a list of binaries, with a"}],
                                              0,false},
                                             {text,"\bSysIOVec"},
                                             {sep,
                                              [{text,
                                                "6pointing to the buffers of the binaries. It is used in"}],
                                              0,false},
                                             {text,
                                              [14,100,114,105,118,101,114,95,
                                               111,117,116,112,117,116,118]},
                                             {sep,
                                              [{text,
                                                [7,97,110,100,32,116,104,
                                                 101]}],
                                              0,false},
                                             {text,
                                              [20,100,114,105,118,101,114,95,
                                               101,110,116,114,121,35,111,117,
                                               116,112,117,116,118]},
                                             {sep,
                                              [{text,
                                                "-driver callback. Also, the driver queue is an"}],
                                              0,false},
                                             {text,"\bErlIOVec"},
                                             {sep,[{text,[1,46]}],0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}}],
                                     0,false},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,[{text,"\rErlDrvMonitor"}],0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {sep,
                                   [{above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,
                                              "0When a driver creates a monitor for a process, a"}],
                                            0,false},
                                           {text,"\rErlDrvMonitor"},
                                           {sep,
                                            [{text,
                                              "¤is filled in. This is an opaque data type that can be assigned to, but not compared without using the supplied compare function (that is, it behaves like a struct)."}],
                                            0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,
                                              "OThe driver writer is to provide the memory for storing the monitor when calling"}],
                                            0,false},
                                           {text,
                                            [22,100,114,105,118,101,114,95,
                                             109,111,110,105,116,111,114,95,
                                             112,114,111,99,101,115,115]},
                                           {sep,
                                            [{text,
                                              "A. The address of the data is not stored outside of the driver, so"}],
                                            0,false},
                                           {text,"\rErlDrvMonitor"},
                                           {sep,
                                            [{text,
                                              "Wcan be used as any other data, it can be copied, moved in memory, forgotten, and so on."}],
                                            0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}}],
                                   0,false},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{sep,
                                    [{text,"\rErlDrvNowData"},
                                     {text,"\rErlDrvNowData"}],
                                    0,false}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {sep,
                                 [{above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,[{text,[3,84,104,101]}],0,false},
                                         {text,"\rErlDrvNowData"},
                                         {sep,
                                          [{text,
                                            [136,115,116,114,117,99,116,117,
                                             114,101,32,104,111,108,100,115,
                                             32,97,32,116,105,109,101,32,115,
                                             116,97,109,112,32,99,111,110,115,
                                             105,115,116,105,110,103,32,111,
                                             102,32,116,104,114,101,101,32,
                                             118,97,108,117,101,115,32,109,
                                             101,97,115,117,114,101,100,32,
                                             102,114,111,109,32,115,111,109,
                                             101,32,97,114,98,105,116,114,97,
                                             114,121,32,112,111,105,110,116,
                                             32,105,110,32,116,104,101,32,112,
                                             97,115,116,46,32,84,104,101,32,
                                             116,104,114,101,101,32,115,116,
                                             114,117,99,116,117,114,101,32,
                                             109,101,109,98,101,114,115,32,97,
                                             114,101,58]}],
                                          0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {above,
                                   {above,
                                    {text,[4,60,100,108,62]},
                                    {nest,4,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{text,[4,60,100,116,62]},
                                               {sep,
                                                [{text,"\bmegasecs"}],
                                                0,false},
                                               {text,[5,60,47,100,116,62]}],
                                              0,true},
                                             null},
                                            null}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{text,[4,60,100,100,62]},
                                               {text,
                                                "IThe number of whole megaseconds elapsed since the arbitrary point in time"},
                                               {text,[5,60,47,100,100,62]}],
                                              0,true},
                                             null},
                                            null}}},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{text,[4,60,100,116,62]},
                                              {sep,
                                               [{text,[4,115,101,99,115]}],
                                               0,false},
                                              {text,[5,60,47,100,116,62]}],
                                             0,true},
                                            null},
                                           null}}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{text,[4,60,100,100,62]},
                                             {text,
                                              "EThe number of whole seconds elapsed since the arbitrary point in time"},
                                             {text,[5,60,47,100,100,62]}],
                                            0,true},
                                           null},
                                          null}}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,116,62]},
                                            {sep,
                                             [{text,"\tmicrosecs"}],
                                             0,false},
                                            {text,[5,60,47,100,116,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,100,62]},
                                           {text,
                                            "JThe number of whole microseconds elapsed since the arbitrary point in time"},
                                           {text,[5,60,47,100,100,62]}],
                                          0,true},
                                         null},
                                        null}}}}},
                                   {text,[5,60,47,100,108,62]}}],
                                 0,false},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{sep,
                                  [{text,"\tErlDrvPDL"},{text,"\tErlDrvPDL"}],
                                  0,false}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {sep,
                               [{above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{text,
                                        [291,73,102,32,99,101,114,116,97,105,
                                         110,32,112,111,114,116,45,115,112,
                                         101,99,105,102,105,99,32,100,97,116,
                                         97,32,109,117,115,116,32,98,101,32,
                                         97,99,99,101,115,115,101,100,32,102,
                                         114,111,109,32,111,116,104,101,114,
                                         32,116,104,114,101,97,100,115,32,116,
                                         104,97,110,32,116,104,111,115,101,32,
                                         99,97,108,108,105,110,103,32,116,104,
                                         101,32,100,114,105,118,101,114,32,99,
                                         97,108,108,98,97,99,107,115,44,32,97,
                                         32,112,111,114,116,32,100,97,116,97,
                                         32,108,111,99,107,32,99,97,110,32,98,
                                         101,32,117,115,101,100,32,116,111,32,
                                         115,121,110,99,104,114,111,110,105,
                                         122,101,32,116,104,101,32,111,112,
                                         101,114,97,116,105,111,110,115,32,
                                         111,110,32,116,104,101,32,100,97,116,
                                         97,46,32,67,117,114,114,101,110,116,
                                         108,121,44,32,116,104,101,32,111,110,
                                         108,121,32,112,111,114,116,45,115,
                                         112,101,99,105,102,105,99,32,100,97,
                                         116,97,32,116,104,97,116,32,116,104,
                                         101,32,101,109,117,108,97,116,111,
                                         114,32,97,115,115,111,99,105,97,116,
                                         101,115,32,119,105,116,104,32,116,
                                         104,101,32,112,111,114,116,32,100,97,
                                         116,97,32,108,111,99,107,32,105,115,
                                         32,116,104,101,32,100,114,105,118,
                                         101,114,32,113,117,101,117,101,46]}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          [148,78,111,114,109,97,108,108,121,
                                           32,97,32,100,114,105,118,101,114,
                                           32,105,110,115,116,97,110,99,101,
                                           32,104,97,115,32,110,111,32,112,
                                           111,114,116,32,100,97,116,97,32,
                                           108,111,99,107,46,32,73,102,32,116,
                                           104,101,32,100,114,105,118,101,114,
                                           32,105,110,115,116,97,110,99,101,
                                           32,119,97,110,116,115,32,116,111,
                                           32,117,115,101,32,97,32,112,111,
                                           114,116,32,100,97,116,97,32,108,
                                           111,99,107,44,32,105,116,32,109,
                                           117,115,116,32,99,114,101,97,116,
                                           101,32,116,104,101,32,112,111,114,
                                           116,32,100,97,116,97,32,108,111,99,
                                           107,32,98,121,32,99,97,108,108,105,
                                           110,103]}],
                                        0,false},
                                       {text,
                                        [17,100,114,105,118,101,114,95,112,
                                         100,108,95,99,114,101,97,116,101]},
                                       {sep,[{text,[1,46]}],0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {sep,
                                 [{above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            "¿Once the port data lock has been created, every access to data associated with the port data lock must be done while the port data lock is locked. The port data lock is locked and unlocked by"}],
                                          0,false},
                                         {text,
                                          [15,100,114,105,118,101,114,95,112,
                                           100,108,95,108,111,99,107]},
                                         {sep,
                                          [{text,[5,44,32,97,110,100]}],
                                          0,false},
                                         {text,
                                          [17,100,114,105,118,101,114,95,112,
                                           100,108,95,117,110,108,111,99,107]},
                                         {sep,
                                          [{text,
                                            [15,44,32,114,101,115,112,101,99,
                                             116,105,118,101,108,121,46]}],
                                          0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}}],
                                 0,false},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          [599,65,32,112,111,114,116,32,100,
                                           97,116,97,32,108,111,99,107,32,105,
                                           115,32,114,101,102,101,114,101,110,
                                           99,101,32,99,111,117,110,116,101,
                                           100,44,32,97,110,100,32,119,104,
                                           101,110,32,116,104,101,32,114,101,
                                           102,101,114,101,110,99,101,32,99,
                                           111,117,110,116,32,114,101,97,99,
                                           104,101,115,32,122,101,114,111,44,
                                           32,105,116,32,105,115,32,100,101,
                                           115,116,114,111,121,101,100,46,32,
                                           84,104,101,32,101,109,117,108,97,
                                           116,111,114,32,97,116,32,108,101,
                                           97,115,116,32,105,110,99,114,101,
                                           109,101,110,116,115,32,116,104,101,
                                           32,114,101,102,101,114,101,110,99,
                                           101,32,99,111,117,110,116,32,111,
                                           110,99,101,32,119,104,101,110,32,
                                           116,104,101,32,108,111,99,107,32,
                                           105,115,32,99,114,101,97,116,101,
                                           100,32,97,110,100,32,100,101,99,
                                           114,101,109,101,110,116,115,32,105,
                                           116,32,111,110,99,101,32,116,104,
                                           101,32,112,111,114,116,32,97,115,
                                           115,111,99,105,97,116,101,100,32,
                                           119,105,116,104,32,116,104,101,32,
                                           108,111,99,107,32,116,101,114,109,
                                           105,110,97,116,101,115,46,32,84,
                                           104,101,32,101,109,117,108,97,116,
                                           111,114,32,97,108,115,111,32,105,
                                           110,99,114,101,109,101,110,116,115,
                                           32,116,104,101,32,114,101,102,101,
                                           114,101,110,99,101,32,99,111,117,
                                           110,116,32,119,104,101,110,32,97,
                                           110,32,97,115,121,110,99,32,106,
                                           111,98,32,105,115,32,101,110,113,
                                           117,101,117,101,100,32,97,110,100,
                                           32,100,101,99,114,101,109,101,110,
                                           116,115,32,105,116,32,119,104,101,
                                           110,32,97,110,32,97,115,121,110,99,
                                           32,106,111,98,32,104,97,115,32,98,
                                           101,101,110,32,105,110,118,111,107,
                                           101,100,46,32,65,108,115,111,44,32,
                                           116,104,101,32,100,114,105,118,101,
                                           114,32,105,115,32,114,101,115,112,
                                           111,110,115,105,98,108,101,32,102,
                                           111,114,32,101,110,115,117,114,105,
                                           110,103,32,116,104,97,116,32,116,
                                           104,101,32,114,101,102,101,114,101,
                                           110,99,101,32,99,111,117,110,116,
                                           32,100,111,101,115,32,110,111,116,
                                           32,114,101,97,99,104,32,122,101,
                                           114,111,32,98,101,102,111,114,101,
                                           32,116,104,101,32,108,97,115,116,
                                           32,117,115,101,32,111,102,32,116,
                                           104,101,32,108,111,99,107,32,98,
                                           121,32,116,104,101,32,100,114,105,
                                           118,101,114,32,104,97,115,32,98,
                                           101,101,110,32,109,97,100,101,46,
                                           32,84,104,101,32,114,101,102,101,
                                           114,101,110,99,101,32,99,111,117,
                                           110,116,32,99,97,110,32,98,101,32,
                                           114,101,97,100,44,32,105,110,99,
                                           114,101,109,101,110,116,101,100,44,
                                           32,97,110,100,32,100,101,99,114,
                                           101,109,101,110,116,101,100,32,98,
                                           121]}],
                                        0,false},
                                       {text,
                                        [19,100,114,105,118,101,114,95,112,
                                         100,108,95,103,101,116,95,114,101,
                                         102,99]},
                                       {sep,[{text,[1,44]}],0,false},
                                       {text,
                                        [19,100,114,105,118,101,114,95,112,
                                         100,108,95,105,110,99,95,114,101,102,
                                         99]},
                                       {sep,
                                        [{text,[5,44,32,97,110,100]}],
                                        0,false},
                                       {text,
                                        [19,100,114,105,118,101,114,95,112,
                                         100,108,95,100,101,99,95,114,101,102,
                                         99]},
                                       {sep,
                                        [{text,
                                          [15,44,32,114,101,115,112,101,99,
                                           116,105,118,101,108,121,46]}],
                                        0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}}],
                               0,false},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{sep,
                                [{text,"\tErlDrvTid"},{text,"\tErlDrvTid"}],
                                0,false}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {sep,
                             [{above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{text,
                                      [18,84,104,114,101,97,100,32,105,100,
                                       101,110,116,105,102,105,101,114,46]}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,[{text,"\bSee also"}],0,false},
                                     {text,
                                      [21,101,114,108,95,100,114,118,95,116,
                                       104,114,101,97,100,95,99,114,101,97,
                                       116,101]},
                                     {sep,[{text,[1,44]}],0,false},
                                     {text,
                                      [19,101,114,108,95,100,114,118,95,116,
                                       104,114,101,97,100,95,101,120,105,116]},
                                     {sep,[{text,[1,44]}],0,false},
                                     {text,
                                      [19,101,114,108,95,100,114,118,95,116,
                                       104,114,101,97,100,95,106,111,105,110]},
                                     {sep,[{text,[1,44]}],0,false},
                                     {text,
                                      [19,101,114,108,95,100,114,118,95,116,
                                       104,114,101,97,100,95,115,101,108,102]},
                                     {sep,
                                      [{text,[5,44,32,97,110,100]}],
                                      0,false},
                                     {text,
                                      [18,101,114,108,95,100,114,118,95,101,
                                       113,117,97,108,95,116,105,100,115]},
                                     {sep,[{text,[1,46]}],0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}}],
                             0,false},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{sep,
                              [{text,
                                [16,69,114,108,68,114,118,84,104,114,101,97,
                                 100,79,112,116,115]},
                               {text,
                                [16,69,114,108,68,114,118,84,104,114,101,97,
                                 100,79,112,116,115]}],
                              0,false}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {sep,
                           [{above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {above,
                                {above,
                                 {text,[3,96,96,96]},
                                 {sep,
                                  [{text,
                                    [26,10,105,110,116,32,115,117,103,103,101,
                                     115,116,101,100,95,115,116,97,99,107,95,
                                     115,105,122,101,59]}],
                                  0,true}},
                                {text,[3,96,96,96]}},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      "\"Thread options structure passed to"}],
                                    0,false},
                                   {text,
                                    [21,101,114,108,95,100,114,118,95,116,104,
                                     114,101,97,100,95,99,114,101,97,116,101]},
                                   {sep,
                                    [{text,
                                      [29,46,32,84,104,101,32,102,111,108,108,
                                       111,119,105,110,103,32,102,105,101,108,
                                       100,32,101,120,105,115,116,115,58]}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,
                              {text,[4,60,100,108,62]},
                              {nest,4,
                               {above,
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,
                                      [{text,
                                        [20,115,117,103,103,101,115,116,101,
                                         100,95,115,116,97,99,107,95,115,105,
                                         122,101]}],
                                      0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,100,62]},
                                     {text,
                                      "XA suggestion, in kilowords, on how large a stack to use. A value < 0 means default size."},
                                     {text,[5,60,47,100,100,62]}],
                                    0,true},
                                   null},
                                  null}}}}},
                             {text,[5,60,47,100,108,62]}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,[{text,"\bSee also"}],0,false},
                                   {text,
                                    [26,101,114,108,95,100,114,118,95,116,104,
                                     114,101,97,100,95,111,112,116,115,95,99,
                                     114,101,97,116,101]},
                                   {sep,[{text,[1,44]}],0,false},
                                   {text,"\eerl_drv_thread_opts_destroy"},
                                   {sep,[{text,[5,44,32,97,110,100]}],0,false},
                                   {text,
                                    [21,101,114,108,95,100,114,118,95,116,104,
                                     114,101,97,100,95,99,114,101,97,116,101]},
                                   {sep,[{text,[1,46]}],0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}}],
                           0,false},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{sep,
                            [{text,"\vErlDrvMutex"},{text,"\vErlDrvMutex"}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {sep,
                         [{above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  "pMutual exclusion lock. Used for synchronizing access to shared data. Only one thread at a time can lock a mutex."}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,[{text,"\bSee also"}],0,false},
                                 {text,
                                  [20,101,114,108,95,100,114,118,95,109,117,
                                   116,101,120,95,99,114,101,97,116,101]},
                                 {sep,[{text,[1,44]}],0,false},
                                 {text,
                                  [21,101,114,108,95,100,114,118,95,109,117,
                                   116,101,120,95,100,101,115,116,114,111,
                                   121]},
                                 {sep,[{text,[1,44]}],0,false},
                                 {text,
                                  [18,101,114,108,95,100,114,118,95,109,117,
                                   116,101,120,95,108,111,99,107]},
                                 {sep,[{text,[1,44]}],0,false},
                                 {text,
                                  [21,101,114,108,95,100,114,118,95,109,117,
                                   116,101,120,95,116,114,121,108,111,99,107]},
                                 {sep,[{text,[5,44,32,97,110,100]}],0,false},
                                 {text,
                                  [20,101,114,108,95,100,114,118,95,109,117,
                                   116,101,120,95,117,110,108,111,99,107]},
                                 {sep,[{text,[1,46]}],0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}}],
                         0,false},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{sep,
                          [{text,"\nErlDrvCond"},{text,"\nErlDrvCond"}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {sep,
                       [{above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,
                                "©Condition variable. Used when threads must wait for a specific condition to appear before continuing execution. Condition variables must be used with associated mutexes."}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,[{text,"\bSee also"}],0,false},
                               {text,
                                [19,101,114,108,95,100,114,118,95,99,111,110,
                                 100,95,99,114,101,97,116,101]},
                               {sep,[{text,[1,44]}],0,false},
                               {text,
                                [20,101,114,108,95,100,114,118,95,99,111,110,
                                 100,95,100,101,115,116,114,111,121]},
                               {sep,[{text,[1,44]}],0,false},
                               {text,
                                [19,101,114,108,95,100,114,118,95,99,111,110,
                                 100,95,115,105,103,110,97,108]},
                               {sep,[{text,[1,44]}],0,false},
                               {text,
                                [22,101,114,108,95,100,114,118,95,99,111,110,
                                 100,95,98,114,111,97,100,99,97,115,116]},
                               {sep,[{text,[5,44,32,97,110,100]}],0,false},
                               {text,
                                [17,101,114,108,95,100,114,118,95,99,111,110,
                                 100,95,119,97,105,116]},
                               {sep,[{text,[1,46]}],0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}}],
                       0,false},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{sep,
                        [{text,"\fErlDrvRWLock"},{text,"\fErlDrvRWLock"}],
                        0,false}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              "ôRead/write lock. Used to allow multiple threads to read shared data while only allowing one thread to write the same data. Multiple threads can read lock an rwlock at the same time, while only one thread can read/write lock an rwlock at a time."}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,[{text,"\bSee also"}],0,false},
                             {text,
                              [21,101,114,108,95,100,114,118,95,114,119,108,
                               111,99,107,95,99,114,101,97,116,101]},
                             {sep,[{text,[1,44]}],0,false},
                             {text,
                              [22,101,114,108,95,100,114,118,95,114,119,108,
                               111,99,107,95,100,101,115,116,114,111,121]},
                             {sep,[{text,[1,44]}],0,false},
                             {text,
                              [20,101,114,108,95,100,114,118,95,114,119,108,
                               111,99,107,95,114,108,111,99,107]},
                             {sep,[{text,[1,44]}],0,false},
                             {text,
                              [23,101,114,108,95,100,114,118,95,114,119,108,
                               111,99,107,95,116,114,121,114,108,111,99,107]},
                             {sep,[{text,[1,44]}],0,false},
                             {text,
                              [22,101,114,108,95,100,114,118,95,114,119,108,
                               111,99,107,95,114,117,110,108,111,99,107]},
                             {sep,[{text,[1,44]}],0,false},
                             {text,
                              [21,101,114,108,95,100,114,118,95,114,119,108,
                               111,99,107,95,114,119,108,111,99,107]},
                             {sep,[{text,[1,44]}],0,false},
                             {text,
                              [24,101,114,108,95,100,114,118,95,114,119,108,
                               111,99,107,95,116,114,121,114,119,108,111,99,
                               107]},
                             {sep,[{text,[5,44,32,97,110,100]}],0,false},
                             {text,
                              [23,101,114,108,95,100,114,118,95,114,119,108,
                               111,99,107,95,114,119,117,110,108,111,99,107]},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{sep,
                      [{text,"\fErlDrvTSDKey"},{text,"\fErlDrvTSDKey"}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "5Key that thread-specific data can be associated with."}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,[{text,"\bSee also"}],0,false},
                           {text,
                            [22,101,114,108,95,100,114,118,95,116,115,100,95,
                             107,101,121,95,99,114,101,97,116,101]},
                           {sep,[{text,[1,44]}],0,false},
                           {text,
                            [23,101,114,108,95,100,114,118,95,116,115,100,95,
                             107,101,121,95,100,101,115,116,114,111,121]},
                           {sep,[{text,[1,44]}],0,false},
                           {text,
                            [15,101,114,108,95,100,114,118,95,116,115,100,95,
                             115,101,116]},
                           {sep,[{text,[5,44,32,97,110,100]}],0,false},
                           {text,
                            [15,101,114,108,95,100,114,118,95,116,115,100,95,
                             103,101,116]},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{text,"\nErlDrvTime"},{text,"\nErlDrvTime"}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "5A signed 64-bit integer type for time representation."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{sep,
                  [{text,
                    [14,69,114,108,68,114,118,84,105,109,101,85,110,105,116]},
                   {text,
                    [14,69,114,108,68,114,118,84,105,109,101,85,110,105,116]}],
                  0,false}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "9An enumeration of time units supported by the driver API:"}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,
                  {text,[4,60,100,108,62]},
                  {nest,4,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,"\vERL_DRV_SEC"}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {text,[7,83,101,99,111,110,100,115]},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,[{text,"\fERL_DRV_MSEC"}],0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {text,"\fMilliseconds"},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,[{text,"\fERL_DRV_USEC"}],0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {text,"\fMicroseconds"},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,[{text,"\fERL_DRV_NSEC"}],0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {text,"\vNanoseconds"},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}}}},
                 {text,[5,60,47,100,108,62]}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"1## add_driver_entry(ErlDrvEntry\n        *de):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [19,65,100,100,32,97,32,100,114,105,118,101,114,32,101,110,116,
             114,121,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"add_driver_entry\">add_driver_entry</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?Adds a driver entry to the list of drivers known by Erlang. The"}],
              0,false},
             {text,"([driver_entry#init](./driver_entry#init)"},
             {sep,
              [{text,
                [21,102,117,110,99,116,105,111,110,32,111,102,32,112,97,114,
                 97,109,101,116,101,114]}],
              0,false},
             {text,[4,42,100,101,42]},
             {sep,[{text,"\nis called."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "¹To use this function for adding drivers residing in dynamically loaded code is dangerous. If the driver code for the added driver resides in the same dynamically loaded module (that is,"}],
                         0,false},
                        {text,[5,42,46,115,111,42]},
                        {sep,
                         [{text,
                           "<file) as a normal dynamically loaded driver (loaded with the"}],
                         0,false},
                        {text,"\n*erl_ddll*"},
                        {sep,
                         [{text,"!interface), the caller is to call"}],
                         0,false},
                        {text,")[driver_lock_driver](#driver_lock_driver)"},
                        {sep,
                         [{text,
                           [29,98,101,102,111,114,101,32,97,100,100,105,110,
                            103,32,100,114,105,118,101,114,32,101,110,116,114,
                            105,101,115,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "1**Use of this function is generally deprecated.**"}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"(## driver_alloc(ErlDrvSizeT size):void *"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [16,65,108,108,111,99,97,116,101,32,109,101,109,111,114,121,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"driver_alloc\">driver_alloc</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"1Allocates a memory block of the size specified in"}],
              0,false},
             {text,[6,42,115,105,122,101,42]},
             {sep,
              [{text,
                "A, and returns it. This fails only on out of memory, in which case"}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,".is returned. (This is most often a wrapper for"}],
              0,false},
             {text,"\b*malloc*"},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "FMemory allocated must be explicitly freed with a corresponding call to"}],
              0,false},
             {text,"\e[driver_free](#driver_free)"},
             {sep,
              [{text,
                [26,40,117,110,108,101,115,115,32,111,116,104,101,114,119,105,
                 115,101,32,115,116,97,116,101,100,41,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"7## driver_alloc_binary(ErlDrvSizeT size):ErlDrvBinary *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,65,108,108,111,99,97,116,101,32,97,32,100,114,105,118,101,114,
             32,98,105,110,97,114,121,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"driver_alloc_binary\">driver_alloc_binary</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "9Allocates a driver binary with a memory block of at least"}],
              0,false},
             {text,[6,42,115,105,122,101,42]},
             {sep,[{text,"&bytes, and returns a pointer to it, or"}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "¨on failure (out of memory). When a driver binary has been sent to the emulator, it must not be changed. Every allocated binary is to be freed by a corresponding call to"}],
              0,false},
             {text,")[driver_free_binary](#driver_free_binary)"},
             {sep,
              [{text,
                [26,40,117,110,108,101,115,115,32,111,116,104,101,114,119,105,
                 115,101,32,115,116,97,116,101,100,41,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "VNotice that a driver binary has an internal reference counter. This means that calling"}],
              0,false},
             {text,
              [20,42,100,114,105,118,101,114,95,102,114,101,101,95,98,105,110,
               97,114,121,42]},
             {sep,
              [{text,
                "_, it may not actually dispose of it. If it is sent to the emulator, it can be referenced there."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,84,104,101,32,100,114,105,118,101,114,32,98,105,110,97,
                 114,121,32,104,97,115,32,97,32,102,105,101,108,100,44]}],
              0,false},
             {text,"\f*orig_bytes*"},
             {sep,
              [{text,"2, which marks the start of the data in the binary."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [146,35,35,32,100,114,105,118,101,114,95,97,115,121,110,99,40,69,114,
         108,68,114,118,80,111,114,116,32,112,111,114,116,44,32,117,110,115,
         105,103,110,101,100,10,32,32,32,32,32,32,32,32,105,110,116,42,32,107,
         101,121,44,32,118,111,105,100,32,40,42,97,115,121,110,99,95,105,110,
         118,111,107,101,41,40,118,111,105,100,42,41,44,32,118,111,105,100,42,
         32,97,115,121,110,99,95,100,97,116,97,44,32,118,111,105,100,10,32,32,
         32,32,32,32,32,32,40,42,97,115,121,110,99,95,102,114,101,101,41,40,
         118,111,105,100,42,41,41,58,108,111,110,103]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Perform an asynchronous call within a driver."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"driver_async\">driver_async</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+Performs an asynchronous call. The function"}],
              0,false},
             {text,[14,42,97,115,121,110,99,95,105,110,118,111,107,101,42]},
             {sep,
              [{text,
                [159,105,115,32,105,110,118,111,107,101,100,32,105,110,32,97,
                 32,116,104,114,101,97,100,32,115,101,112,97,114,97,116,101,
                 32,102,114,111,109,32,116,104,101,32,101,109,117,108,97,116,
                 111,114,32,116,104,114,101,97,100,46,32,84,104,105,115,32,
                 101,110,97,98,108,101,115,32,116,104,101,32,100,114,105,118,
                 101,114,32,116,111,32,112,101,114,102,111,114,109,32,116,105,
                 109,101,45,99,111,110,115,117,109,105,110,103,44,32,98,108,
                 111,99,107,105,110,103,32,111,112,101,114,97,116,105,111,110,
                 115,32,119,105,116,104,111,117,116,32,98,108,111,99,107,105,
                 110,103,32,116,104,101,32,101,109,117,108,97,116,111,114,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "@The async thread pool size can be set with command-line argument"}],
              0,false},
             {text,
              ":[erl#async_thread_pool_size](./erl#async_thread_pool_size)"},
             {sep,[{text,[2,105,110]}],0,false},
             {text,"\n[erl](erl)"},
             {sep,
              [{text,
                "^. If an async thread pool is unavailable, the call is made synchronously in the thread calling"}],
              0,false},
             {text,[14,42,100,114,105,118,101,114,95,97,115,121,110,99,42]},
             {sep,
              [{text,
                "W. The current number of async threads in the async thread pool can be retrieved through"}],
              0,false},
             {text,")[driver_system_info](#driver_system_info)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "<If a thread pool is available, a thread is used. If argument"}],
              0,false},
             {text,[5,42,107,101,121,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "G, the threads from the pool are used in a round-robin way, each call to"}],
              0,false},
             {text,[14,42,100,114,105,118,101,114,95,97,115,121,110,99,42]},
             {sep,
              [{text,"/uses the next thread in the pool. With argument"}],
              0,false},
             {text,[5,42,107,101,121,42]},
             {sep,
              [{text,
                "5set, this behavior is changed. The two same values of"}],
              0,false},
             {text,[6,42,42,107,101,121,42]},
             {sep,[{text,"\ealways get the same thread."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "]To ensure that a driver instance always uses the same thread, the following call can be used:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "k\nunsigned int myKey = driver_async_port_key(myPort);\n\nr = driver_async(myPort, &myKey, myData, myFunc);    "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [26,73,116,32,105,115,32,101,110,111,117,103,104,32,116,111,
                 32,105,110,105,116,105,97,108,105,122,101]}],
              0,false},
             {text,[7,42,109,121,75,101,121,42]},
             {sep,
              [{text,
                [30,111,110,99,101,32,102,111,114,32,101,97,99,104,32,100,114,
                 105,118,101,114,32,105,110,115,116,97,110,99,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ªIf a thread is already working, the calls are queued up and executed in order. Using the same thread for each driver instance ensures that the calls are made in sequence."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,"\f*async_data*"},
             {sep,[{text," is the argument to the functions"}],0,false},
             {text,[14,42,97,115,121,110,99,95,105,110,118,111,107,101,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\f*async_free*"},
             {sep,
              [{text,
                [159,46,32,73,116,32,105,115,32,116,121,112,105,99,97,108,108,
                 121,32,97,32,112,111,105,110,116,101,114,32,116,111,32,97,32,
                 115,116,114,117,99,116,117,114,101,32,99,111,110,116,97,105,
                 110,105,110,103,32,97,32,112,105,112,101,32,111,114,32,101,
                 118,101,110,116,32,116,104,97,116,32,99,97,110,32,98,101,32,
                 117,115,101,100,32,116,111,32,115,105,103,110,97,108,32,116,
                 104,97,116,32,116,104,101,32,97,115,121,110,99,32,111,112,
                 101,114,97,116,105,111,110,32,99,111,109,112,108,101,116,101,
                 100,46,32,84,104,101,32,100,97,116,97,32,105,115,32,116,111,
                 32,98,101,32,102,114,101,101,100,32,105,110]}],
              0,false},
             {text,"\f*async_free*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!When the async operation is done,"}],0,false},
             {text,"6[driver_entry#ready_async](./driver_entry#ready_async)"},
             {sep,[{text,"#driver entry function is called. If"}],0,false},
             {text,"\r*ready_async*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                [24,105,110,32,116,104,101,32,100,114,105,118,101,114,32,101,
                 110,116,114,121,44,32,116,104,101]}],
              0,false},
             {text,"\f*async_free*"},
             {sep,[{text,"\efunction is called instead."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,[{text,[6,105,102,32,116,104,101]}],0,false},
             {text,[14,42,100,114,105,118,101,114,95,97,115,121,110,99,42]},
             {sep,[{text,"\vcall fails."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           [403,65,115,32,102,114,111,109,32,69,82,84,83,32,
                            53,46,53,46,52,46,51,32,116,104,101,32,100,101,
                            102,97,117,108,116,32,115,116,97,99,107,32,115,
                            105,122,101,32,102,111,114,32,116,104,114,101,97,
                            100,115,32,105,110,32,116,104,101,32,97,115,121,
                            110,99,45,116,104,114,101,97,100,32,112,111,111,
                            108,32,105,115,32,49,54,32,107,105,108,111,119,
                            111,114,100,115,44,32,116,104,97,116,32,105,115,
                            44,32,54,52,32,107,105,108,111,98,121,116,101,32,
                            111,110,32,51,50,45,98,105,116,32,97,114,99,104,
                            105,116,101,99,116,117,114,101,115,46,32,84,104,
                            105,115,32,115,109,97,108,108,32,100,101,102,97,
                            117,108,116,32,115,105,122,101,32,104,97,115,32,
                            98,101,101,110,32,99,104,111,115,101,110,32,98,
                            101,99,97,117,115,101,32,116,104,101,32,97,109,
                            111,117,110,116,32,111,102,32,97,115,121,110,99,
                            45,116,104,114,101,97,100,115,32,99,97,110,32,98,
                            101,32,113,117,105,116,101,32,108,97,114,103,101,
                            46,32,84,104,101,32,100,101,102,97,117,108,116,32,
                            115,116,97,99,107,32,115,105,122,101,32,105,115,
                            32,101,110,111,117,103,104,32,102,111,114,32,100,
                            114,105,118,101,114,115,32,100,101,108,105,118,
                            101,114,101,100,32,119,105,116,104,32,69,114,108,
                            97,110,103,47,79,84,80,44,32,98,117,116,32,105,
                            115,32,112,111,115,115,105,98,108,121,32,110,111,
                            116,32,115,117,102,102,105,99,105,101,110,116,108,
                            121,32,108,97,114,103,101,32,102,111,114,32,111,
                            116,104,101,114,32,100,121,110,97,109,105,99,97,
                            108,108,121,32,108,105,110,107,101,100,45,105,110,
                            32,100,114,105,118,101,114,115,32,116,104,97,116,
                            32,117,115,101,32,116,104,101]}],
                         0,false},
                        {text,
                         [14,42,100,114,105,118,101,114,95,97,115,121,110,99,
                          42]},
                        {sep,
                         [{text,
                           "zfunctionality. A suggested stack size for threads in the async-thread pool can be configured through command-line argument"}],
                         0,false},
                        {text,
                         "<[erl#async_thread_stack_size](./erl#async_thread_stack_size)"},
                        {sep,[{text,[2,105,110]}],0,false},
                        {text,"\n[erl](erl)"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        ">## driver_async_port_key(ErlDrvPort\n        port):unsigned int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Calculate an async key from an ErlDrvPort."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"driver_async_port_key\">driver_async_port_key</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Calculates a key for later use in"}],0,false},
             {text,
              [29,91,100,114,105,118,101,114,95,97,115,121,110,99,93,40,35,
               100,114,105,118,101,114,95,97,115,121,110,99,41]},
             {sep,
              [{text,
                "k. The keys are evenly distributed so that a fair mapping between port IDs and async thread IDs is achieved."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "ýBefore Erlang/OTP R16, the port ID could be used as a key with proper casting, but after the rewrite of the port subsystem, this is no longer the case. With this function, you can achieve the same distribution based on port IDs as before Erlang/OTP R16."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"1## driver_binary_dec_refc(ErlDrvBinary *bin):long"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Decrement the reference count of a driver binary."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"driver_binary_dec_refc\">driver_binary_dec_refc</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Decrements the reference count on"}],0,false},
             {text,[5,42,98,105,110,42]},
             {sep,
              [{text,
                "<and returns the reference count reached after the decrement."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "MThe reference count of driver binary is normally to be decremented by calling"}],
                         0,false},
                        {text,")[driver_free_binary](#driver_free_binary)"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [24,42,100,114,105,118,101,114,95,98,105,110,97,114,
                          121,95,100,101,99,95,114,101,102,99,42]},
                        {sep,[{text,[4,100,111,101,115]}],0,false},
                        {text,[7,42,42,110,111,116,42,42]},
                        {sep,
                         [{text,
                           "4free the binary if the reference count reaches zero."}],
                         0,false},
                        {text,"\b**Only**"},
                        {sep,[{text,[3,117,115,101]}],0,false},
                        {text,
                         [24,42,100,114,105,118,101,114,95,98,105,110,97,114,
                          121,95,100,101,99,95,114,101,102,99,42]},
                        {sep,
                         [{text,
                           [17,119,104,101,110,32,121,111,117,32,97,114,101,
                            32,115,117,114,101]}],
                         0,false},
                        {text,[7,42,42,110,111,116,42,42]},
                        {sep,
                         [{text,"#to reach a reference count of zero."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"1## driver_binary_get_refc(ErlDrvBinary *bin):long"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Get the reference count of a driver binary."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"driver_binary_get_refc\">driver_binary_get_refc</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Returns the current reference count on"}],0,false},
             {text,[5,42,98,105,110,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"1## driver_binary_inc_refc(ErlDrvBinary *bin):long"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"1Increment the reference count of a driver binary."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"driver_binary_inc_refc\">driver_binary_inc_refc</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Increments the reference count on"}],0,false},
             {text,[5,42,98,105,110,42]},
             {sep,
              [{text,
                "<and returns the reference count reached after the increment."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"8## driver_caller(ErlDrvPort\n        port):ErlDrvTermData"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Return the process making the driver call."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"driver_caller\">driver_caller</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "oReturns the process ID of the process that made the current call to the driver. The process ID can be used with"}],
              0,false},
             {text,"%[driver_send_term](#driver_send_term)"},
             {sep,[{text," to send back data to the caller."}],0,false},
             {text,
              [15,42,100,114,105,118,101,114,95,99,97,108,108,101,114,42]},
             {sep,
              [{text,
                "Zonly returns valid data when currently executing in one of the following driver callbacks:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{text,
                          [18,100,114,105,118,101,114,95,101,110,116,114,121,
                           35,115,116,97,114,116]}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {sep,
                        [{sep,[{text,"\vCalled from"}],0,false},
                         {text,
                          [18,101,114,108,97,110,103,35,111,112,101,110,95,
                           112,111,114,116,47,50]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         [19,100,114,105,118,101,114,95,101,110,116,114,121,
                          35,111,117,116,112,117,116]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {sep,
                      [{sep,[{text,"\vCalled from"}],0,false},
                       {text,"\rerlang#send/2"},
                       {sep,[{text,[3,97,110,100]}],0,false},
                       {text,
                        [21,101,114,108,97,110,103,35,112,111,114,116,95,99,
                         111,109,109,97,110,100,47,50]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [20,100,114,105,118,101,114,95,101,110,116,114,121,35,
                        111,117,116,112,117,116,118]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,[{text,"\vCalled from"}],0,false},
                     {text,"\rerlang#send/2"},
                     {sep,[{text,[3,97,110,100]}],0,false},
                     {text,
                      [21,101,114,108,97,110,103,35,112,111,114,116,95,99,111,
                       109,109,97,110,100,47,50]},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     [20,100,114,105,118,101,114,95,101,110,116,114,121,35,99,
                      111,110,116,114,111,108]}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{sep,[{text,"\vCalled from"}],0,false},
                   {text,
                    [21,101,114,108,97,110,103,35,112,111,114,116,95,99,111,
                     110,116,114,111,108,47,51]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{text,
                   [17,100,114,105,118,101,114,95,101,110,116,114,121,35,99,
                    97,108,108]}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {sep,
                [{sep,[{text,"\vCalled from"}],0,false},
                 {text,
                  [18,101,114,108,97,110,103,35,112,111,114,116,95,99,97,108,
                   108,47,51]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [28,78,111,116,105,99,101,32,116,104,97,116,32,116,104,105,
                 115,32,102,117,110,99,116,105,111,110,32,105,115]}],
              0,false},
             {text,[7,42,42,110,111,116,42,42]},
             {sep,
              [{text,
                "Athread-safe, not even when the emulator with SMP support is used."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"+## driver_cancel_timer(ErlDrvPort port):int"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [30,67,97,110,99,101,108,32,97,32,112,114,101,118,105,111,117,115,
             108,121,32,115,101,116,32,116,105,109,101,114,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"driver_cancel_timer\">driver_cancel_timer</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [24,67,97,110,99,101,108,115,32,97,32,116,105,109,101,114,32,
                 115,101,116,32,119,105,116,104]}],
              0,false},
             {text,"%[driver_set_timer](#driver_set_timer)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "d## driver_compare_monitors(const ErlDrvMonitor\n        *monitor1, const ErlDrvMonitor *monitor2):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [21,67,111,109,112,97,114,101,32,116,119,111,32,109,111,110,105,
             116,111,114,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"driver_compare_monitors\">driver_compare_monitors</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\fCompares two"}],0,false},
             {text,
              [15,42,69,114,108,68,114,118,77,111,110,105,116,111,114,42]},
             {sep,
              [{text,
                "Ts. Can also be used to imply some artificial order on monitors, for whatever reason."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,"\n*monitor1*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\n*monitor2*"},
             {sep,[{text,"\nare equal,"}],0,false},
             {sep,[{text,[1,60]}],0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,"\n*monitor1*"},
             {sep,[{text,[1,60]}],0,false},
             {text,"\n*monitor2*"},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {sep,[{text,[1,62]}],0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,"\n*monitor1*"},
             {sep,[{text,[1,62]}],0,false},
             {text,"\n*monitor2*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,";## driver_connected(ErlDrvPort\n        port):ErlDrvTermData"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [30,82,101,116,117,114,110,32,116,104,101,32,112,111,114,116,32,
             111,119,110,101,114,32,112,114,111,99,101,115,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"driver_connected\">driver_connected</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [31,82,101,116,117,114,110,115,32,116,104,101,32,112,111,114,
               116,32,111,119,110,101,114,32,112,114,111,99,101,115,115,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [28,78,111,116,105,99,101,32,116,104,97,116,32,116,104,105,
                 115,32,102,117,110,99,116,105,111,110,32,105,115]}],
              0,false},
             {text,[7,42,42,110,111,116,42,42]},
             {sep,
              [{text,
                "Athread-safe, not even when the emulator with SMP support is used."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "|## driver_create_port(ErlDrvPort port,\n        ErlDrvTermData owner_pid, char* name,\n        ErlDrvData drv_data):ErlDrvPort"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Create a new port (driver instance)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "TCreates a new port executing the same driver code as the port creating the new port."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,[4,112,111,114,116]}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {text,
                      "DThe port handle of the port (driver instance) creating the new port."},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,"\towner_pid"}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,
                      [{text,
                        [138,84,104,101,32,112,114,111,99,101,115,115,32,73,
                         68,32,111,102,32,116,104,101,32,69,114,108,97,110,
                         103,32,112,114,111,99,101,115,115,32,116,111,32,98,
                         101,99,111,109,101,32,111,119,110,101,114,32,111,102,
                         32,116,104,101,32,110,101,119,32,112,111,114,116,46,
                         32,84,104,105,115,32,112,114,111,99,101,115,115,32,
                         119,105,108,108,32,98,101,32,108,105,110,107,101,100,
                         32,116,111,32,116,104,101,32,110,101,119,32,112,111,
                         114,116,46,32,89,111,117,32,117,115,117,97,108,108,
                         121,32,119,97,110,116,32,116,111,32,117,115,101]}],
                      0,false},
                     {text,
                      [19,100,114,105,118,101,114,95,99,97,108,108,101,114,40,
                       112,111,114,116,41]},
                     {sep,[{text,[2,97,115]}],0,false},
                     {text,"\towner_pid"},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[4,110,97,109,101]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{sep,
                    [{text,
                      "^The port name of the new port. You usually want to use the same port name as the driver name ("}],
                    0,false},
                   {text,
                    [24,100,114,105,118,101,114,95,101,110,116,114,121,35,100,
                     114,105,118,101,114,95,110,97,109,101]},
                   {sep,[{text,"\ffield of the"}],0,false},
                   {text,"\fdriver_entry"},
                   {sep,[{text,[2,41,46]}],0,false}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,"\bdrv_data"}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {sep,
                [{sep,
                  [{text,
                    "\\The driver-defined handle that is passed in later calls to driver callbacks. Notice that the"}],
                  0,false},
                 {text,
                  [21,100,114,105,118,101,114,32,115,116,97,114,116,32,99,97,
                   108,108,98,97,99,107]},
                 {sep,
                  [{text,
                    "`is not called for this new driver instance. The driver-defined handle is normally created in the"}],
                  0,false},
                 {text,
                  [21,100,114,105,118,101,114,32,115,116,97,114,116,32,99,97,
                   108,108,98,97,99,107]},
                 {sep,
                  [{text,
                    [30,119,104,101,110,32,97,32,112,111,114,116,32,105,115,
                     32,99,114,101,97,116,101,100,32,116,104,114,111,117,103,
                     104]}],
                  0,false},
                 {text,
                  [18,101,114,108,97,110,103,35,111,112,101,110,95,112,111,
                   114,116,47,50]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rThe caller of"}],0,false},
             {text,
              [20,42,100,114,105,118,101,114,95,99,114,101,97,116,101,95,112,
               111,114,116,42]},
             {sep,
              [{text,"4is allowed to manipulate the newly created port when"}],
              0,false},
             {text,
              [20,42,100,114,105,118,101,114,95,99,114,101,97,116,101,95,112,
               111,114,116,42]},
             {sep,
              [{text,
                [18,104,97,115,32,114,101,116,117,114,110,101,100,46,32,87,
                 104,101,110]}],
              0,false},
             {text,"\"[port level locking](#smp_support)"},
             {sep,
              [{text,
                [157,105,115,32,117,115,101,100,44,32,116,104,101,32,99,114,
                 101,97,116,105,110,103,32,112,111,114,116,32,105,115,32,111,
                 110,108,121,32,97,108,108,111,119,101,100,32,116,111,32,109,
                 97,110,105,112,117,108,97,116,101,32,116,104,101,32,110,101,
                 119,108,121,32,99,114,101,97,116,101,100,32,112,111,114,116,
                 32,117,110,116,105,108,32,116,104,101,32,99,117,114,114,101,
                 110,116,32,100,114,105,118,101,114,32,99,97,108,108,98,97,99,
                 107,44,32,119,104,105,99,104,32,119,97,115,32,99,97,108,108,
                 101,100,32,98,121,32,116,104,101,32,101,109,117,108,97,116,
                 111,114,44,32,114,101,116,117,114,110,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "V## driver_demonitor_process(ErlDrvPort port,\n        const ErlDrvMonitor *monitor):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"(Stop monitoring a process from a driver."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"driver_demonitor_process\">driver_demonitor_process</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"\"Cancels a monitor created earlier."}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [28,105,102,32,97,32,109,111,110,105,116,111,114,32,119,97,
                 115,32,114,101,109,111,118,101,100,32,97,110,100]}],
              0,false},
             {sep,[{text,"$> 0 if the monitor no longer exists."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "D## driver_deq(ErlDrvPort port,\n        ErlDrvSizeT size):ErlDrvSizeT"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Dequeue data from the head of the driver queue."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"driver_deq\">driver_deq</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GDequeues data by moving the head pointer forward in the driver queue by"}],
              0,false},
             {text,[6,42,115,105,122,101,42]},
             {sep,
              [{text,",bytes. The data in the queue is deallocated."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "HReturns the number of bytes remaining in the queue on success, otherwise"}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0This function can be called from any thread if a"}],
              0,false},
             {text,
              [28,91,112,111,114,116,32,100,97,116,97,32,108,111,99,107,93,40,
               35,69,114,108,68,114,118,80,68,76,41]},
             {sep,
              [{text,
                [19,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"0is locked by the calling thread during the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "F## driver_enq(ErlDrvPort port, char* buf,\n        ErlDrvSizeT len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Enqueue data in the driver queue."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"driver_enq\">driver_enq</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,".Enqueues data in the driver queue. The data in"}],
              0,false},
             {text,[5,42,98,117,102,42]},
             {sep,[{text,"\vis copied ("}],0,false},
             {text,[5,42,108,101,110,42]},
             {sep,
              [{text,
                "bbytes) and placed at the end of the driver queue. The driver queue is normally used in a FIFO way."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [326,84,104,101,32,100,114,105,118,101,114,32,113,117,101,117,
                 101,32,105,115,32,97,118,97,105,108,97,98,108,101,32,116,111,
                 32,113,117,101,117,101,32,111,117,116,112,117,116,32,102,114,
                 111,109,32,116,104,101,32,101,109,117,108,97,116,111,114,32,
                 116,111,32,116,104,101,32,100,114,105,118,101,114,32,40,100,
                 97,116,97,32,102,114,111,109,32,116,104,101,32,100,114,105,
                 118,101,114,32,116,111,32,116,104,101,32,101,109,117,108,97,
                 116,111,114,32,105,115,32,113,117,101,117,101,100,32,98,121,
                 32,116,104,101,32,101,109,117,108,97,116,111,114,32,105,110,
                 32,110,111,114,109,97,108,32,69,114,108,97,110,103,32,109,
                 101,115,115,97,103,101,32,113,117,101,117,101,115,41,46,32,
                 84,104,105,115,32,99,97,110,32,98,101,32,117,115,101,102,117,
                 108,32,105,102,32,116,104,101,32,100,114,105,118,101,114,32,
                 109,117,115,116,32,119,97,105,116,32,102,111,114,32,115,108,
                 111,119,32,100,101,118,105,99,101,115,44,32,97,110,100,32,
                 115,111,32,111,110,44,32,97,110,100,32,119,97,110,116,115,32,
                 116,111,32,121,105,101,108,100,32,98,97,99,107,32,116,111,32,
                 116,104,101,32,101,109,117,108,97,116,111,114,46,32,84,104,
                 101,32,100,114,105,118,101,114,32,113,117,101,117,101,32,105,
                 115,32,105,109,112,108,101,109,101,110,116,101,100,32,97,115,
                 32,97,110]}],
              0,false},
             {text,"\n*ErlIOVec*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "QWhen the queue contains data, the driver does not close until the queue is empty."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0This function can be called from any thread if a"}],
              0,false},
             {text,
              [28,91,112,111,114,116,32,100,97,116,97,32,108,111,99,107,93,40,
               35,69,114,108,68,114,118,80,68,76,41]},
             {sep,
              [{text,
                [19,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"0is locked by the calling thread during the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "f## driver_enq_bin(ErlDrvPort port,\n        ErlDrvBinary *bin, ErlDrvSizeT offset, ErlDrvSizeT len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Enqueue binary in the driver queue."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"driver_enq_bin\">driver_enq_bin</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "9Enqueues a driver binary in the driver queue. The data in"}],
              0,false},
             {text,[5,42,98,105,110,42]},
             {sep,[{text,[2,97,116]}],0,false},
             {text,"\b*offset*"},
             {sep,[{text,"\vwith length"}],0,false},
             {text,[5,42,108,101,110,42]},
             {sep,
              [{text,
                "Jis placed at the end of the queue. This function is most often faster than"}],
              0,false},
             {text,
              [25,91,100,114,105,118,101,114,95,101,110,113,93,40,35,100,114,
               105,118,101,114,95,101,110,113,41]},
             {sep,[{text,"!, because no data must be copied."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0This function can be called from any thread if a"}],
              0,false},
             {text,
              [28,91,112,111,114,116,32,100,97,116,97,32,108,111,99,107,93,40,
               35,69,114,108,68,114,118,80,68,76,41]},
             {sep,
              [{text,
                [19,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"0is locked by the calling thread during the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "K## driver_enqv(ErlDrvPort port, ErlIOVec *ev,\n        ErlDrvSizeT skip):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Enqueue vector in the driver queue."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"driver_enqv\">driver_enqv</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [20,69,110,113,117,101,117,101,115,32,116,104,101,32,100,97,
                 116,97,32,105,110]}],
              0,false},
             {text,[4,42,101,118,42]},
             {sep,
              [{text,
                [20,44,32,115,107,105,112,112,105,110,103,32,116,104,101,32,
                 102,105,114,115,116]}],
              0,false},
             {text,[6,42,115,107,105,112,42]},
             {sep,
              [{text,
                ">bytes of it, at the end of the driver queue. It is faster than"}],
              0,false},
             {text,
              [25,91,100,114,105,118,101,114,95,101,110,113,93,40,35,100,114,
               105,118,101,114,95,101,110,113,41]},
             {sep,[{text,"!, because no data must be copied."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0This function can be called from any thread if a"}],
              0,false},
             {text,
              [28,91,112,111,114,116,32,100,97,116,97,32,108,111,99,107,93,40,
               35,69,114,108,68,114,118,80,68,76,41]},
             {sep,
              [{text,
                [19,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"0is locked by the calling thread during the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"9## driver_failure(ErlDrvPort port, int\n        error):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "A## driver_failure_atom(ErlDrvPort port, char\n        *string):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "?## driver_failure_posix(ErlDrvPort port, int\n        error):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [16,70,97,105,108,32,119,105,116,104,32,101,114,114,111,114,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"driver_failure_atom\">driver_failure_atom</a>"},
      {text,"7<a name=\"driver_failure_posix\">driver_failure_posix</a>"},
      {text,"+<a name=\"driver_failure\">driver_failure</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "pSignals to Erlang that the driver has encountered an error and is to be closed. The port is closed and the tuple"}],
              0,false},
             {text,
              [22,42,123,39,69,88,73,84,39,44,32,101,114,114,111,114,44,32,69,
               114,114,125,42]},
             {sep,
              [{text,
                "Ais sent to the port owner process, where error is an error atom ("}],
              0,false},
             {text,
              [21,42,100,114,105,118,101,114,95,102,97,105,108,117,114,101,95,
               97,116,111,109,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [22,42,100,114,105,118,101,114,95,102,97,105,108,117,114,101,95,
               112,111,115,105,120,42]},
             {sep,
              [{text,
                [17,41,32,111,114,32,97,110,32,105,110,116,101,103,101,114,32,
                 40]}],
              0,false},
             {text,
              [16,42,100,114,105,118,101,114,95,102,97,105,108,117,114,101,
               42]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ÛThe driver is to fail only when in severe error situations, when the driver cannot possibly keep open, for example, buffer allocation gets out of memory. For normal errors it is more appropriate to send error codes with"}],
              0,false},
             {text,
              [31,91,100,114,105,118,101,114,95,111,117,116,112,117,116,93,40,
               35,100,114,105,118,101,114,95,111,117,116,112,117,116,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"2## driver_failure_eof(ErlDrvPort\n        port):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,[14,70,97,105,108,32,119,105,116,104,32,69,79,70,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"driver_failure_eof\">driver_failure_eof</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "tSignals to Erlang that the driver has encountered an EOF and is to be closed, unless the port was opened with option"}],
              0,false},
             {text,[5,42,101,111,102,42]},
             {sep,
              [{text,
                [15,44,32,105,110,32,119,104,105,99,104,32,99,97,115,101]}],
              0,false},
             {text,[5,42,101,111,102,42]},
             {sep,
              [{text,
                "8is sent to the port. Otherwise the port is closed and an"}],
              0,false},
             {text,"\b*'EXIT'*"},
             {sep,
              [{text,"*message is sent to the port owner process."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [30,35,35,32,100,114,105,118,101,114,95,102,114,101,101,40,118,111,
         105,100,32,42,112,116,114,41,58,118,111,105,100]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,70,114,101,101,32,97,110,32,97,108,108,111,99,97,116,101,100,
             32,109,101,109,111,114,121,32,98,108,111,99,107,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"%<a name=\"driver_free\">driver_free</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,70,114,101,101,115,32,116,104,101,32,109,101,109,111,114,
                 121,32,112,111,105,110,116,101,100,32,116,111,32,98,121]}],
              0,false},
             {text,[5,42,112,116,114,42]},
             {sep,
              [{text,"+. The memory is to have been allocated with"}],
              0,false},
             {text,[14,42,100,114,105,118,101,114,95,97,108,108,111,99,42]},
             {sep,
              [{text,
                "b. All allocated memory is to be deallocated, only once. There is no garbage collection in drivers."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"-## driver_free_binary(ErlDrvBinary *bin):void"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [21,70,114,101,101,32,97,32,100,114,105,118,101,114,32,98,105,110,
             97,114,121,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"driver_free_binary\">driver_free_binary</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,70,114,101,101,115,32,97,32,100,114,105,118,101,114,32,98,
                 105,110,97,114,121]}],
              0,false},
             {text,[5,42,98,105,110,42]},
             {sep,[{text,"\e, allocated previously with"}],0,false},
             {text,"+[driver_alloc_binary](#driver_alloc_binary)"},
             {sep,
              [{text,
                "N. As binaries in Erlang are reference counted, the binary can still be around."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "e## driver_get_monitored_process(ErlDrvPort port, const\n        ErlDrvMonitor *monitor):ErlDrvTermData"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"'Retrieve the process ID from a monitor."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "G<a name=\"driver_get_monitored_process\">driver_get_monitored_process</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "NReturns the process ID associated with a living monitor. It can be used in the"}],
              0,false},
             {text,
              "8[driver_entry#process_exit](./driver_entry#process_exit)"},
             {sep,
              [{text,
                "Ccallback to get the process identification for the exiting process."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,
              [17,42,100,114,105,118,101,114,95,116,101,114,109,95,110,105,
               108,42]},
             {sep,[{text," if the monitor no longer exists."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,")## driver_get_now(ErlDrvNowData *now):int"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,82,101,97,100,32,97,32,115,121,115,116,101,109,32,116,105,109,
             101,32,115,116,97,109,112,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"driver_get_now\">driver_get_now</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "/**This function is deprecated. Do not use it.**"},
                        {sep,[{text,[3,85,115,101]}],0,false},
                        {text,
                         "1[erl_drv_monotonic_time](#erl_drv_monotonic_time)"},
                        {sep,
                         [{text,
                           [28,40,112,101,114,104,97,112,115,32,105,110,32,99,
                            111,109,98,105,110,97,116,105,111,110,32,119,105,
                            116,104]}],
                         0,false},
                        {text,"+[erl_drv_time_offset](#erl_drv_time_offset)"},
                        {sep,[{text,"\n) instead."}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ":Reads a time stamp into the memory pointed to by parameter"}],
              0,false},
             {text,[5,42,110,111,119,42]},
             {sep,
              [{text,",. For information about specific fields, see"}],
              0,false},
             {text,
              [31,91,69,114,108,68,114,118,78,111,119,68,97,116,97,93,40,35,
               69,114,108,68,114,118,78,111,119,68,97,116,97,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,"\f, unless the"}],0,false},
             {text,[5,42,110,111,119,42]},
             {sep,[{text,"'pointer is invalid, in which case it is"}],0,false},
             {sep,[{text,[1,60]}],0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"2## driver_lock_driver(ErlDrvPort\n        port):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Ensure the driver is never unloaded."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"driver_lock_driver\">driver_lock_driver</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"!Locks the driver used by the port"}],0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,
                [142,105,110,32,109,101,109,111,114,121,32,102,111,114,32,116,
                 104,101,32,114,101,115,116,32,111,102,32,116,104,101,32,101,
                 109,117,108,97,116,111,114,32,112,114,111,99,101,115,115,39,
                 32,108,105,102,101,116,105,109,101,46,32,65,102,116,101,114,
                 32,116,104,105,115,32,99,97,108,108,44,32,116,104,101,32,100,
                 114,105,118,101,114,32,98,101,104,97,118,101,115,32,97,115,
                 32,111,110,101,32,111,102,32,69,114,108,97,110,103,39,115,32,
                 115,116,97,116,105,99,97,108,108,121,32,108,105,110,107,101,
                 100,45,105,110,32,100,114,105,118,101,114,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"6## driver_mk_atom(char*\n        string):ErlDrvTermData"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,77,97,107,101,32,97,110,32,97,116,111,109,32,102,114,111,109,
             32,97,32,110,97,109,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"driver_mk_atom\">driver_mk_atom</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [28,82,101,116,117,114,110,115,32,97,110,32,97,116,111,109,32,
                 103,105,118,101,110,32,97,32,110,97,109,101]}],
              0,false},
             {text,"\b*string*"},
             {sep,
              [{text,
                [143,46,32,84,104,101,32,97,116,111,109,32,105,115,32,99,114,
                 101,97,116,101,100,32,97,110,100,32,100,111,101,115,32,110,
                 111,116,32,99,104,97,110,103,101,44,32,115,111,32,116,104,
                 101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,99,
                 97,110,32,98,101,32,115,97,118,101,100,32,97,110,100,32,114,
                 101,117,115,101,100,44,32,119,104,105,99,104,32,105,115,32,
                 102,97,115,116,101,114,32,116,104,97,110,32,108,111,111,107,
                 105,110,103,32,117,112,32,116,104,101,32,97,116,111,109,32,
                 115,101,118,101,114,97,108,32,116,105,109,101,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [28,78,111,116,105,99,101,32,116,104,97,116,32,116,104,105,
                 115,32,102,117,110,99,116,105,111,110,32,105,115]}],
              0,false},
             {text,[7,42,42,110,111,116,42,42]},
             {sep,
              [{text,
                "Athread-safe, not even when the emulator with SMP support is used."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"9## driver_mk_port(ErlDrvPort\n        port):ErlDrvTermData"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Make an Erlang term port from a port."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"driver_mk_port\">driver_mk_port</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ";Converts a port handle to the Erlang term format, usable in"}],
              0,false},
             {text,"+[erl_drv_output_term](#erl_drv_output_term)"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"'[erl_drv_send_term](#erl_drv_send_term)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [28,78,111,116,105,99,101,32,116,104,97,116,32,116,104,105,
                 115,32,102,117,110,99,116,105,111,110,32,105,115]}],
              0,false},
             {text,[7,42,42,110,111,116,42,42]},
             {sep,
              [{text,
                "Athread-safe, not even when the emulator with SMP support is used."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "f## driver_monitor_process(ErlDrvPort port,\n        ErlDrvTermData process, ErlDrvMonitor *monitor):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text," Monitor a process from a driver."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"driver_monitor_process\">driver_monitor_process</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "xStarts monitoring a process from a driver. When a process is monitored, a process exit results in a call to the provided"}],
              0,false},
             {text,
              "8[driver_entry#process_exit](./driver_entry#process_exit)"},
             {sep,
              [{text,
                [15,99,97,108,108,98,97,99,107,32,105,110,32,116,104,101]}],
              0,false},
             {text,
              [28,91,100,114,105,118,101,114,95,101,110,116,114,121,93,40,100,
               114,105,118,101,114,95,101,110,116,114,121,41]},
             {sep,
              [{text,
                [14,115,116,114,117,99,116,117,114,101,46,32,84,104,101]}],
              0,false},
             {text,
              [15,42,69,114,108,68,114,118,77,111,110,105,116,111,114,42]},
             {sep,
              [{text,
                "5structure is filled in, for later removal or compare."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tParameter"}],0,false},
             {text,"\t*process*"},
             {sep,
              [{text,"/is to be the return value of an earlier call to"}],
              0,false},
             {text,
              [31,91,100,114,105,118,101,114,95,99,97,108,108,101,114,93,40,
               35,100,114,105,118,101,114,95,99,97,108,108,101,114,41]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,"%[driver_connected](#driver_connected)"},
             {sep,[{text,[5,99,97,108,108,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,[{text,"\von success,"}],0,false},
             {sep,[{text,"#< 0 if no callback is provided, and"}],0,false},
             {sep,[{text,"&> 0 if the process is no longer alive."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "I## driver_output(ErlDrvPort port, char *buf,\n        ErlDrvSizeT len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Send data from driver to port owner."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"driver_output\">driver_output</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [137,83,101,110,100,115,32,100,97,116,97,32,102,114,111,109,32,
               116,104,101,32,100,114,105,118,101,114,32,117,112,32,116,111,
               32,116,104,101,32,101,109,117,108,97,116,111,114,46,32,84,104,
               101,32,100,97,116,97,32,105,115,32,114,101,99,101,105,118,101,
               100,32,97,115,32,116,101,114,109,115,32,111,114,32,98,105,110,
               97,114,121,32,100,97,116,97,44,32,100,101,112,101,110,100,105,
               110,103,32,111,110,32,104,111,119,32,116,104,101,32,100,114,
               105,118,101,114,32,112,111,114,116,32,119,97,115,32,111,112,
               101,110,101,100,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "¥The data is queued in the port owner process' message queue. Notice that this does not yield to the emulator (as the driver and the emulator run in the same thread)."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tParameter"}],0,false},
             {text,[5,42,98,117,102,42]},
             {sep,
              [{text,
                [31,112,111,105,110,116,115,32,116,111,32,116,104,101,32,100,
                 97,116,97,32,116,111,32,115,101,110,100,44,32,97,110,100]}],
              0,false},
             {text,[5,42,108,101,110,42]},
             {sep,
              [{text,
                [23,105,115,32,116,104,101,32,110,117,109,98,101,114,32,111,
                 102,32,98,121,116,101,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",The return value for all output functions is"}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                "Nfor normal use. If the driver is used for distribution, it can fail and return"}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [146,35,35,32,100,114,105,118,101,114,95,111,117,116,112,117,116,95,
         98,105,110,97,114,121,40,69,114,108,68,114,118,80,111,114,116,32,112,
         111,114,116,44,32,99,104,97,114,10,32,32,32,32,32,32,32,32,42,104,98,
         117,102,44,32,69,114,108,68,114,118,83,105,122,101,84,32,104,108,101,
         110,44,32,69,114,108,68,114,118,66,105,110,97,114,121,42,32,98,105,
         110,44,32,69,114,108,68,114,118,83,105,122,101,84,32,111,102,102,115,
         101,116,44,10,32,32,32,32,32,32,32,32,69,114,108,68,114,118,83,105,
         122,101,84,32,108,101,110,41,58,105,110,116]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Send data from a driver binary to port owner."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"driver_output_binary\">driver_output_binary</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "QSends data to a port owner process from a driver binary. It has a header buffer ("}],
              0,false},
             {text,[6,42,104,98,117,102,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[6,42,104,108,101,110,42]},
             {sep,[{text,"\v) just like"}],0,false},
             {text,"![driver_output2](#driver_output2)"},
             {sep,[{text,"\v. Parameter"}],0,false},
             {text,[6,42,104,98,117,102,42]},
             {sep,[{text,[6,99,97,110,32,98,101]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tParameter"}],0,false},
             {text,"\b*offset*"},
             {sep,[{text," is an offset into the binary and"}],0,false},
             {text,[5,42,108,101,110,42]},
             {sep,
              [{text,
                [31,105,115,32,116,104,101,32,110,117,109,98,101,114,32,111,
                 102,32,98,121,116,101,115,32,116,111,32,115,101,110,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," Driver binaries are created with"}],0,false},
             {text,"+[driver_alloc_binary](#driver_alloc_binary)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "dThe data in the header is sent as a list and the binary as an Erlang binary in the tail of the list."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [15,70,111,114,32,101,120,97,109,112,108,101,44,32,105,102]}],
              0,false},
             {text,[6,42,104,108,101,110,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[3,42,50,42]},
             {sep,[{text,"!, the port owner process receives"}],0,false},
             {text,
              [18,42,91,72,49,44,32,72,50,32,124,32,60,60,84,62,62,93,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [15,102,111,114,32,110,111,114,109,97,108,32,117,115,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "¡Notice that, using the binary syntax in Erlang, the driver application can match the header directly from the binary, so the header can be put in the binary, and"}],
              0,false},
             {text,[6,42,104,108,101,110,42]},
             {sep,[{text,"\rcan be set to"}],0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "O## driver_output_term(ErlDrvPort port,\n        ErlDrvTermData* term, int n):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Send term data from driver to port owner."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"driver_output_term\">driver_output_term</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text," **This function is deprecated.**"},
                        {sep,[{text,[3,85,115,101]}],0,false},
                        {text,"'[erl_drv_send_term](#erl_drv_send_term)"},
                        {sep,[{text,"\binstead."}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nParameters"}],0,false},
             {text,[6,42,116,101,114,109,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[3,42,110,42]},
             {sep,[{text,"\nwork as in"}],0,false},
             {text,"+[erl_drv_output_term](#erl_drv_output_term)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [28,78,111,116,105,99,101,32,116,104,97,116,32,116,104,105,
                 115,32,102,117,110,99,116,105,111,110,32,105,115]}],
              0,false},
             {text,[7,42,42,110,111,116,42,42]},
             {sep,
              [{text,
                "Athread-safe, not even when the emulator with SMP support is used."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "h## driver_output2(ErlDrvPort port, char *hbuf,\n        ErlDrvSizeT hlen, char *buf, ErlDrvSizeT len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"(Send data and binary data to port owner."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"driver_output2\">driver_output2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\vFirst sends"}],0,false},
             {text,[6,42,104,98,117,102,42]},
             {sep,[{text,"\n(length in"}],0,false},
             {text,[6,42,104,108,101,110,42]},
             {sep,
              [{text,
                "9) data as a list, regardless of port settings. Then sends"}],
              0,false},
             {text,[5,42,98,117,102,42]},
             {sep,[{text,"$as a binary or list. For example, if"}],0,false},
             {text,[6,42,104,108,101,110,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[3,42,51,42]},
             {sep,[{text,"!, the port owner process receives"}],0,false},
             {text,
              [18,42,91,72,49,44,32,72,50,44,32,72,51,32,124,32,84,93,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "[The point of sending data as a list header, is to facilitate matching on the data received."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [15,102,111,114,32,110,111,114,109,97,108,32,117,115,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "l## driver_outputv(ErlDrvPort port, char* hbuf,\n        ErlDrvSizeT hlen, ErlIOVec *ev, ErlDrvSizeT skip):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Send vectorized data to port owner."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"driver_outputv\">driver_outputv</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,83,101,110,100,115,32,100,97,116,97,32,102,114,111,109,32,
                 97,110,32,73,47,79,32,118,101,99,116,111,114,44]}],
              0,false},
             {text,[4,42,101,118,42]},
             {sep,
              [{text,
                "5, to the port owner process. It has a header buffer ("}],
              0,false},
             {text,[6,42,104,98,117,102,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[6,42,104,108,101,110,42]},
             {sep,[{text,"\f), just like"}],0,false},
             {text,"![driver_output2](#driver_output2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tParameter"}],0,false},
             {text,[6,42,115,107,105,112,42]},
             {sep,[{text,"#is a number of bytes to skip of the"}],0,false},
             {text,[4,42,101,118,42]},
             {sep,
              [{text,
                [21,118,101,99,116,111,114,32,102,114,111,109,32,116,104,101,
                 32,104,101,97,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [18,89,111,117,32,103,101,116,32,118,101,99,116,111,114,115,
                 32,111,102]}],
              0,false},
             {text,"\n*ErlIOVec*"},
             {sep,
              [{text,"/type from the driver queue (see below), and the"}],
              0,false},
             {text,".[driver_entry#outputv](./driver_entry#outputv)"},
             {sep,
              [{text,
                "Sdriver entry function. You can also make them yourself, if you want to send several"}],
              0,false},
             {text,[14,42,69,114,108,68,114,118,66,105,110,97,114,121,42]},
             {sep,
              [{text,"*buffers at once. Often it is faster to use"}],
              0,false},
             {text,
              [31,91,100,114,105,118,101,114,95,111,117,116,112,117,116,93,40,
               35,100,114,105,118,101,114,95,111,117,116,112,117,116,41]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,"-[driver_output_binary](#driver_output_binary)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [15,70,111,114,32,101,120,97,109,112,108,101,44,32,105,102]}],
              0,false},
             {text,[6,42,104,108,101,110,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[3,42,50,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[4,42,101,118,42]},
             {sep,
              [{text,
                "Epoints to an array of three binaries, the port owner process receives"}],
              0,false},
             {text,"#*[H1, H2, <<B1>>, <<B2>> | <<B3>>]*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [15,102,111,114,32,110,111,114,109,97,108,32,117,115,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [15,84,104,101,32,99,111,109,109,101,110,116,32,102,111,114]}],
              0,false},
             {text,
              [22,42,100,114,105,118,101,114,95,111,117,116,112,117,116,95,98,
               105,110,97,114,121,42]},
             {sep,
              [{text,
                [16,97,108,115,111,32,97,112,112,108,105,101,115,32,102,111,
                 114]}],
              0,false},
             {text,
              [16,42,100,114,105,118,101,114,95,111,117,116,112,117,116,118,
               42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"/## driver_pdl_create(ErlDrvPort port):ErlDrvPDL"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [24,67,114,101,97,116,101,32,97,32,112,111,114,116,32,100,97,116,
             97,32,108,111,99,107,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"driver_pdl_create\">driver_pdl_create</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",Creates a port data lock associated with the"}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "jOnce a port data lock has been created, it must be locked during all operations on the driver queue of the"}],
                         0,false},
                        {text,[6,42,112,111,114,116,42]},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "<Returns a newly created port data lock on success, otherwise"}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                [23,46,32,84,104,101,32,102,117,110,99,116,105,111,110,32,102,
                 97,105,108,115,32,105,102]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,
                "Fis invalid or if a port data lock already has been associated with the"}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"2## driver_pdl_dec_refc(ErlDrvPDL\n        pdl):long"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{sep,[null],0,true},null},null}},
    {sep,
     [{text,"5<a name=\"driver_pdl_dec_refc\">driver_pdl_dec_refc</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "IDecrements the reference count of the port data lock passed as argument ("}],
              0,false},
             {text,[5,42,112,100,108,42]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "OThe current reference count after the decrement has been performed is returned."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"*## driver_pdl_get_refc(ErlDrvPDL pdl):long"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{sep,[null],0,true},null},null}},
    {sep,
     [{text,"5<a name=\"driver_pdl_get_refc\">driver_pdl_get_refc</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "NReturns the current reference count of the port data lock passed as argument ("}],
              0,false},
             {text,[5,42,112,100,108,42]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"*## driver_pdl_inc_refc(ErlDrvPDL pdl):long"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{sep,[null],0,true},null},null}},
    {sep,
     [{text,"5<a name=\"driver_pdl_inc_refc\">driver_pdl_inc_refc</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "IIncrements the reference count of the port data lock passed as argument ("}],
              0,false},
             {text,[5,42,112,100,108,42]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "OThe current reference count after the increment has been performed is returned."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"&## driver_pdl_lock(ErlDrvPDL pdl):void"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [20,76,111,99,107,32,112,111,114,116,32,100,97,116,97,32,108,111,
             99,107,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"driver_pdl_lock\">driver_pdl_lock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"-Locks the port data lock passed as argument ("}],
              0,false},
             {text,[5,42,112,100,108,42]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"(## driver_pdl_unlock(ErlDrvPDL pdl):void"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,85,110,108,111,99,107,32,112,111,114,116,32,100,97,116,97,32,
             108,111,99,107,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"driver_pdl_unlock\">driver_pdl_unlock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"/Unlocks the port data lock passed as argument ("}],
              0,false},
             {text,[5,42,112,100,108,42]},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        ">## driver_peekq(ErlDrvPort port, int\n        *vlen):SysIOVec *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Get the driver queue as a vector."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"driver_peekq\">driver_peekq</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "6Retrieves the driver queue as a pointer to an array of"}],
              0,false},
             {text,"\n*SysIOVec*"},
             {sep,
              [{text,",s. It also returns the number of elements in"}],
              0,false},
             {text,[6,42,118,108,101,110,42]},
             {sep,
              [{text,
                "7. This is one of two ways to get data out of the queue."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "JNothing is removed from the queue by this function, that must be done with"}],
              0,false},
             {text,
              [25,91,100,114,105,118,101,114,95,100,101,113,93,40,35,100,114,
               105,118,101,114,95,100,101,113,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?The returned array is suitable to use with the Unix system call"}],
              0,false},
             {text,"\b*writev*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0This function can be called from any thread if a"}],
              0,false},
             {text,
              [28,91,112,111,114,116,32,100,97,116,97,32,108,111,99,107,93,40,
               35,69,114,108,68,114,118,80,68,76,41]},
             {sep,
              [{text,
                [19,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"0is locked by the calling thread during the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "C## driver_peekqv(ErlDrvPort port,\n        ErlIOVec *ev):ErlDrvSizeT"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Get the driver queue as an I/O vector."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"driver_peekqv\">driver_peekqv</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"*Retrieves the driver queue into a supplied"}],
              0,false},
             {text,"\n*ErlIOVec*"},
             {text,[4,42,101,118,42]},
             {sep,
              [{text,
                "W. It also returns the queue size. This is one of two ways to get data out of the queue."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,102]}],0,false},
             {text,[4,42,101,118,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                [18,44,32,97,108,108,32,111,110,101,115,32,116,104,97,116,32,
                 105,115]}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,[{text,"\ftype cast to"}],0,false},
             {text,"\r*ErlDrvSizeT*"},
             {sep,[{text,"\rare returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "JNothing is removed from the queue by this function, that must be done with"}],
              0,false},
             {text,
              [25,91,100,114,105,118,101,114,95,100,101,113,93,40,35,100,114,
               105,118,101,114,95,100,101,113,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0This function can be called from any thread if a"}],
              0,false},
             {text,
              [28,91,112,111,114,116,32,100,97,116,97,32,108,111,99,107,93,40,
               35,69,114,108,68,114,118,80,68,76,41]},
             {sep,
              [{text,
                [19,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"0is locked by the calling thread during the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "H## driver_pushq(ErlDrvPort port, char* buf,\n        ErlDrvSizeT len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Push data at the head of the driver queue."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"driver_pushq\">driver_pushq</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "6Puts data at the head of the driver queue. The data in"}],
              0,false},
             {text,[5,42,98,117,102,42]},
             {sep,[{text,"\vis copied ("}],0,false},
             {text,[5,42,108,101,110,42]},
             {sep,
              [{text,"0bytes) and placed at the beginning of the queue."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0This function can be called from any thread if a"}],
              0,false},
             {text,
              [28,91,112,111,114,116,32,100,97,116,97,32,108,111,99,107,93,40,
               35,69,114,108,68,114,118,80,68,76,41]},
             {sep,
              [{text,
                [19,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"0is locked by the calling thread during the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "h## driver_pushq_bin(ErlDrvPort port,\n        ErlDrvBinary *bin, ErlDrvSizeT offset, ErlDrvSizeT len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,",Push binary at the head of the driver queue."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"driver_pushq_bin\">driver_pushq_bin</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [23,80,117,116,115,32,100,97,116,97,32,105,110,32,116,104,101,
                 32,98,105,110,97,114,121]}],
              0,false},
             {text,[5,42,98,105,110,42]},
             {sep,[{text,[4,44,32,97,116]}],0,false},
             {text,"\b*offset*"},
             {sep,[{text,"\vwith length"}],0,false},
             {text,[5,42,108,101,110,42]},
             {sep,
              [{text,
                "=at the head of the driver queue. It is most often faster than"}],
              0,false},
             {text,
              [29,91,100,114,105,118,101,114,95,112,117,115,104,113,93,40,35,
               100,114,105,118,101,114,95,112,117,115,104,113,41]},
             {sep,[{text,"!, because no data must be copied."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0This function can be called from any thread if a"}],
              0,false},
             {text,
              [28,91,112,111,114,116,32,100,97,116,97,32,108,111,99,107,93,40,
               35,69,114,108,68,114,118,80,68,76,41]},
             {sep,
              [{text,
                [19,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"0is locked by the calling thread during the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "M## driver_pushqv(ErlDrvPort port, ErlIOVec\n        *ev, ErlDrvSizeT skip):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,",Push vector at the head of the driver queue."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"driver_pushqv\">driver_pushqv</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,80,117,116,115,32,116,104,101,32,100,97,116,97,32,105,
                 110]}],
              0,false},
             {text,[4,42,101,118,42]},
             {sep,
              [{text,
                [20,44,32,115,107,105,112,112,105,110,103,32,116,104,101,32,
                 102,105,114,115,116]}],
              0,false},
             {text,[6,42,115,107,105,112,42]},
             {sep,
              [{text,
                "?bytes of it, at the head of the driver queue. It is faster than"}],
              0,false},
             {text,
              [29,91,100,114,105,118,101,114,95,112,117,115,104,113,93,40,35,
               100,114,105,118,101,114,95,112,117,115,104,113,41]},
             {sep,[{text,"!, because no data must be copied."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0This function can be called from any thread if a"}],
              0,false},
             {text,
              [28,91,112,111,114,116,32,100,97,116,97,32,108,111,99,107,93,40,
               35,69,114,108,68,114,118,80,68,76,41]},
             {sep,
              [{text,
                [19,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"0is locked by the calling thread during the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "K## driver_read_timer(ErlDrvPort port, unsigned\n        long *time_left):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Read the time left before time-out."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"driver_read_timer\">driver_read_timer</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ";Reads the current time of a timer, and places the result in"}],
              0,false},
             {text,"\v*time_left*"},
             {sep,
              [{text,
                "?. This is the time in milliseconds, before the time-out occurs."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"5## driver_realloc(void *ptr, ErlDrvSizeT size):void *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Resize an allocated memory block."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"driver_realloc\">driver_realloc</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ÀResizes a memory block, either in place, or by allocating a new block, copying the data, and freeing the old block. A pointer is returned to the reallocated memory. On failure (out of memory),"}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,".is returned. (This is most often a wrapper for"}],
              0,false},
             {text,"\t*realloc*"},
             {sep,[{text,[2,46,41]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "M## driver_realloc_binary(ErlDrvBinary *bin, ErlDrvSizeT size)\n:ErlDrvBinary *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [23,82,101,115,105,122,101,32,97,32,100,114,105,118,101,114,32,98,
             105,110,97,114,121,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"driver_realloc_binary\">driver_realloc_binary</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"0Resizes a driver binary, while keeping the data."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "5Returns the resized driver binary on success. Returns"}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,[{text,"\eon failure (out of memory)."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "R## driver_select(ErlDrvPort port, ErlDrvEvent\n        event, int mode, int on):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Provides an event for having the emulator call the driver."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"driver_select\">driver_select</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "«This function is used by drivers to provide the emulator with events to check for. This enables the emulator to call the driver when something has occurred asynchronously."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tParameter"}],0,false},
             {text,[7,42,101,118,101,110,116,42]},
             {sep,
              [{text,
                "Fidentifies an OS-specific event object. On Unix systems, the functions"}],
              0,false},
             {text,"\b*select*"},
             {sep,[{text,[1,47]}],0,false},
             {text,[6,42,112,111,108,108,42]},
             {sep,
              [{text,
                "Iare used. The event object must be a socket or pipe (or other object that"}],
              0,false},
             {text,"\b*select*"},
             {sep,[{text,[1,47]}],0,false},
             {text,[6,42,112,111,108,108,42]},
             {sep,
              [{text,",can use). On Windows, the Win32 API function"}],
              0,false},
             {text,
              [24,42,87,97,105,116,70,111,114,77,117,108,116,105,112,108,101,
               79,98,106,101,99,116,115,42]},
             {sep,
              [{text,
                "]is used. This places other restrictions on the event object; see the Win32 SDK documentation."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tParameter"}],0,false},
             {text,[4,42,111,110,42]},
             {sep,[{text,"\bis to be"}],0,false},
             {text,[3,42,49,42]},
             {sep,
              [{text,
                [22,102,111,114,32,115,101,116,116,105,110,103,32,101,118,101,
                 110,116,115,32,97,110,100]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [18,102,111,114,32,99,108,101,97,114,105,110,103,32,116,104,
                 101,109,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tParameter"}],0,false},
             {text,[6,42,109,111,100,101,42]},
             {sep,
              [{text,
                [30,105,115,32,97,32,98,105,116,119,105,115,101,32,79,82,32,
                 99,111,109,98,105,110,97,116,105,111,110,32,111,102]}],
              0,false},
             {text,[14,42,69,82,76,95,68,82,86,95,82,69,65,68,42]},
             {sep,[{text,[1,44]}],0,false},
             {text,[15,42,69,82,76,95,68,82,86,95,87,82,73,84,69,42]},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,"\r*ERL_DRV_USE*"},
             {sep,
              [{text,
                "e. The first two specify whether to wait for read events and/or write events. A fired read event calls"}],
              0,false},
             {text,"6[driver_entry#ready_input](./driver_entry#ready_input)"},
             {sep,
              [{text,
                [29,97,110,100,32,97,32,102,105,114,101,100,32,119,114,105,
                 116,101,32,101,118,101,110,116,32,99,97,108,108,115]}],
              0,false},
             {text,
              "8[driver_entry#ready_output](./driver_entry#ready_output)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           [134,83,111,109,101,32,79,83,32,40,87,105,110,100,
                            111,119,115,41,32,100,111,32,110,111,116,32,100,
                            105,102,102,101,114,101,110,116,105,97,116,101,32,
                            98,101,116,119,101,101,110,32,114,101,97,100,32,
                            97,110,100,32,119,114,105,116,101,32,101,118,101,
                            110,116,115,46,32,84,104,101,32,99,97,108,108,98,
                            97,99,107,32,102,111,114,32,97,32,102,105,114,101,
                            100,32,101,118,101,110,116,32,116,104,101,110,32,
                            111,110,108,121,32,100,101,112,101,110,100,115,32,
                            111,110,32,116,104,101,32,118,97,108,117,101,32,
                            111,102]}],
                         0,false},
                        {text,[6,42,109,111,100,101,42]},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\r*ERL_DRV_USE*"},
             {sep,
              [{text,
                "¯specifies if we are using the event object or if we want to close it. On an emulator with SMP support, it is not safe to clear all events and then close the event object after"}],
              0,false},
             {text,
              [15,42,100,114,105,118,101,114,95,115,101,108,101,99,116,42]},
             {sep,
              [{text,
                "rhas returned. Another thread can still be using the event object internally. To safely close an event object, call"}],
              0,false},
             {text,
              [15,42,100,114,105,118,101,114,95,115,101,108,101,99,116,42]},
             {sep,[{text,[4,119,105,116,104]}],0,false},
             {text,"\r*ERL_DRV_USE*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[7,42,111,110,61,61,48,42]},
             {sep,
              [{text,"/, which clears all events and then either calls"}],
              0,false},
             {text,"6[driver_entry#stop_select](./driver_entry#stop_select)"},
             {sep,
              [{text,
                "Gor schedules it to be called when it is safe to close the event object."}],
              0,false},
             {text,"\r*ERL_DRV_USE*"},
             {sep,
              [{text,
                "Uis to be set together with the first event for an event object. It is harmless to set"}],
              0,false},
             {text,"\r*ERL_DRV_USE*"},
             {sep,
              [{text,
                "Aeven if it already has been done. Clearing all events but keeping"}],
              0,false},
             {text,"\r*ERL_DRV_USE*"},
             {sep,
              [{text,
                "[set indicates that we are using the event object and probably will set events for it again."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,"\r*ERL_DRV_USE*"},
                        {sep,
                         [{text,
                           "jwas added in Erlang/OTP R13. Old drivers still work as before, but it is recommended to update them to use"}],
                         0,false},
                        {text,"\r*ERL_DRV_USE*"},
                        {sep,[{text,[3,97,110,100]}],0,false},
                        {text,"\r*stop_select*"},
                        {sep,
                         [{text,
                           "6to ensure that event objects are closed in a safe way."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                 101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,"\b, unless"}],0,false},
             {text,"\r*ready_input*"},
             {sep,[{text,[1,47]}],0,false},
             {text,[14,42,114,101,97,100,121,95,111,117,116,112,117,116,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                [21,44,32,105,110,32,119,104,105,99,104,32,99,97,115,101,32,
                 105,116,32,105,115]}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "f## driver_send_term(ErlDrvPort port,\n        ErlDrvTermData receiver, ErlDrvTermData* term, int n):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Send term data to other process than port owner process."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"driver_send_term\">driver_send_term</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text," **This function is deprecated.**"},
                        {sep,[{text,[3,85,115,101]}],0,false},
                        {text,"'[erl_drv_send_term](#erl_drv_send_term)"},
                        {sep,[{text,"\binstead."}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "¬The parameters of this function cannot be properly checked by the runtime system when executed by arbitrary threads. This can cause the function not to fail when it should."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nParameters"}],0,false},
             {text,[6,42,116,101,114,109,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[3,42,110,42]},
             {sep,[{text,"\nwork as in"}],0,false},
             {text,"+[erl_drv_output_term](#erl_drv_output_term)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "MThis function is only thread-safe when the emulator with SMP support is used."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "D## driver_set_timer(ErlDrvPort port, unsigned\n        long time):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,83,101,116,32,97,32,116,105,109,101,114,32,116,111,32,99,97,
             108,108,32,116,104,101,32,100,114,105,118,101,114,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"driver_set_timer\">driver_set_timer</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "eSets a timer on the driver, which will count down and call the driver when it is timed out. Parameter"}],
              0,false},
             {text,[6,42,116,105,109,101,42]},
             {sep,
              [{text,
                "5is the time in milliseconds before the timer expires."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,87,104,101,110,32,116,104,101,32,116,105,109,101,114,32,
                 114,101,97,99,104,101,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,"&and expires, the driver entry function"}],0,false},
             {text,".[driver_entry#timeout](./driver_entry#timeout)"},
             {sep,[{text,"\nis called."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "eNotice that only one timer exists on each driver instance; setting a new timer replaces an older one."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [15,82,101,116,117,114,110,32,118,97,108,117,101,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,"\f, unless the"}],0,false},
             {text,"\t*timeout*"},
             {sep,
              [{text,
                [18,100,114,105,118,101,114,32,102,117,110,99,116,105,111,110,
                 32,105,115]}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                [21,44,32,105,110,32,119,104,105,99,104,32,99,97,115,101,32,
                 105,116,32,105,115]}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,",## driver_sizeq(ErlDrvPort port):ErlDrvSizeT"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Return the size of the driver queue."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"driver_sizeq\">driver_sizeq</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              ":Returns the number of bytes currently in the driver queue."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0This function can be called from any thread if a"}],
              0,false},
             {text,
              [28,91,112,111,114,116,32,100,97,116,97,32,108,111,99,107,93,40,
               35,69,114,108,68,114,118,80,68,76,41]},
             {sep,
              [{text,
                [19,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"0is locked by the calling thread during the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "L## driver_system_info(ErlDrvSysInfo\n        *sys_info_ptr, size_t size):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Get information about the Erlang runtime system."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"driver_system_info\">driver_system_info</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ";Writes information about the Erlang runtime system into the"}],
              0,false},
             {text,
              [31,91,69,114,108,68,114,118,83,121,115,73,110,102,111,93,40,35,
               69,114,108,68,114,118,83,121,115,73,110,102,111,41]},
             {sep,
              [{text,
                "Ystructure referred to by the first argument. The second argument is to be the size of the"}],
              0,false},
             {text,
              [31,91,69,114,108,68,114,118,83,121,115,73,110,102,111,93,40,35,
               69,114,108,68,114,118,83,121,115,73,110,102,111,41]},
             {sep,
              [{text,
                [19,115,116,114,117,99,116,117,114,101,44,32,116,104,97,116,
                 32,105,115,44]}],
              0,false},
             {text,
              [23,42,115,105,122,101,111,102,40,69,114,108,68,114,118,83,121,
               115,73,110,102,111,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"*For information about specific fields, see"}],
              0,false},
             {text,
              [31,91,69,114,108,68,114,118,83,121,115,73,110,102,111,93,40,35,
               69,114,108,68,114,118,83,121,115,73,110,102,111,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "R## driver_vec_to_buf(ErlIOVec *ev,\n        char *buf, ErlDrvSizeT len):ErlDrvSizeT"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Collect data segments into a buffer."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"driver_vec_to_buf\">driver_vec_to_buf</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0Collects several segments of data, referenced by"}],
              0,false},
             {text,[4,42,101,118,42]},
             {sep,
              [{text,"(, by copying them in order to the buffer"}],
              0,false},
             {text,[5,42,98,117,102,42]},
             {sep,[{text,"\r, of the size"}],0,false},
             {text,[5,42,108,101,110,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "XIf the data is to be sent from the driver to the port owner process, it is faster to use"}],
              0,false},
             {text,"![driver_outputv](#driver_outputv)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "=The return value is the space left in the buffer, that is, if"}],
              0,false},
             {text,[4,42,101,118,42]},
             {sep,
              [{text,
                [18,99,111,110,116,97,105,110,115,32,108,101,115,115,32,116,
                 104,97,110]}],
              0,false},
             {text,[5,42,108,101,110,42]},
             {sep,[{text,"\"bytes it is the difference, and if"}],0,false},
             {text,[4,42,101,118,42]},
             {sep,[{text,"\bcontains"}],0,false},
             {text,[5,42,108,101,110,42]},
             {sep,
              [{text,
                [20,98,121,116,101,115,32,111,114,32,109,111,114,101,44,32,
                 105,116,32,105,115]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                "}. This is faster if there is more than one header byte, as the binary syntax can construct integers directly from the binary."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "^## erl_drv_busy_msgq_limits(ErlDrvPort port,\n        ErlDrvSizeT *low, ErlDrvSizeT *high):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Set and get limits for busy port message queue."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"erl_drv_busy_msgq_limits\">erl_drv_busy_msgq_limits</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "`Sets and gets limits that will be used for controlling the busy state of the port message queue."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "wThe port message queue is set into a busy state when the amount of command data queued on the message queue reaches the"}],
              0,false},
             {text,[6,42,104,105,103,104,42]},
             {sep,
              [{text,
                [134,108,105,109,105,116,46,32,84,104,101,32,112,111,114,116,
                 32,109,101,115,115,97,103,101,32,113,117,101,117,101,32,105,
                 115,32,115,101,116,32,105,110,116,111,32,97,32,110,111,116,
                 32,98,117,115,121,32,115,116,97,116,101,32,119,104,101,110,
                 32,116,104,101,32,97,109,111,117,110,116,32,111,102,32,99,
                 111,109,109,97,110,100,32,100,97,116,97,32,113,117,101,117,
                 101,100,32,111,110,32,116,104,101,32,109,101,115,115,97,103,
                 101,32,113,117,101,117,101,32,102,97,108,108,115,32,98,101,
                 108,111,119,32,116,104,101]}],
              0,false},
             {text,[5,42,108,111,119,42]},
             {sep,
              [{text,
                "Klimit. Command data is in this context data passed to the port using either"}],
              0,false},
             {text,"!*Port ! {Owner, {command, Data}}*"},
             {sep,[{text,[2,111,114]}],0,false},
             {text,
              [20,42,112,111,114,116,95,99,111,109,109,97,110,100,47,91,50,44,
               51,93,42]},
             {sep,
              [{text,
                "]. Notice that these limits only concerns command data that have not yet reached the port. The"}],
              0,false},
             {text,"\e[busy port](#set_busy_port)"},
             {sep,
              [{text,
                "7feature can be used for data that has reached the port."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"$Valid limits are values in the range"}],0,false},
             {text,
              "8*[ERL_DRV_BUSY_MSGQ_LIM_MIN, ERL_DRV_BUSY_MSGQ_LIM_MAX]*"},
             {sep,
              [{text,
                "Ù. Limits are automatically adjusted to be sane. That is, the system adjusts values so that the low limit used is lower than or equal to the high limit used. By default the high limit is 8 kB and the low limit is 4 kB."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "@By passing a pointer to an integer variable containing the value"}],
              0,false},
             {text,
              [29,42,69,82,76,95,68,82,86,95,66,85,83,89,95,77,83,71,81,95,82,
               69,65,68,95,79,78,76,89,42]},
             {sep,
              [{text,
                [383,44,32,116,104,101,32,99,117,114,114,101,110,116,108,121,
                 32,117,115,101,100,32,108,105,109,105,116,32,105,115,32,114,
                 101,97,100,32,97,110,100,32,119,114,105,116,116,101,110,32,
                 98,97,99,107,32,116,111,32,116,104,101,32,105,110,116,101,
                 103,101,114,32,118,97,114,105,97,98,108,101,46,32,65,32,110,
                 101,119,32,108,105,109,105,116,32,99,97,110,32,98,101,32,115,
                 101,116,32,98,121,32,112,97,115,115,105,110,103,32,97,32,112,
                 111,105,110,116,101,114,32,116,111,32,97,110,32,105,110,116,
                 101,103,101,114,32,118,97,114,105,97,98,108,101,32,99,111,
                 110,116,97,105,110,105,110,103,32,97,32,118,97,108,105,100,
                 32,108,105,109,105,116,46,32,84,104,101,32,112,97,115,115,
                 101,100,32,118,97,108,117,101,32,105,115,32,119,114,105,116,
                 116,101,110,32,116,111,32,116,104,101,32,105,110,116,101,114,
                 110,97,108,32,108,105,109,105,116,46,32,84,104,101,32,105,
                 110,116,101,114,110,97,108,32,108,105,109,105,116,32,105,115,
                 32,116,104,101,110,32,97,100,106,117,115,116,101,100,46,32,
                 65,102,116,101,114,32,116,104,105,115,32,116,104,101,32,97,
                 100,106,117,115,116,101,100,32,108,105,109,105,116,32,105,
                 115,32,119,114,105,116,116,101,110,32,98,97,99,107,32,116,
                 111,32,116,104,101,32,105,110,116,101,103,101,114,32,118,97,
                 114,105,97,98,108,101,32,102,114,111,109,32,119,104,105,99,
                 104,32,116,104,101,32,110,101,119,32,118,97,108,117,101,32,
                 119,97,115,32,114,101,97,100,46,32,86,97,108,117,101,115,32,
                 97,114,101,32,105,110,32,98,121,116,101,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "DThe busy message queue feature can be disabled either by setting the"}],
              0,false},
             {text,"\e*ERL_DRV_FLAG_NO_BUSY_MSGQ*"},
             {text,"*[driver flag](./driver_entry#driver_flags)"},
             {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
             {text,
              [28,91,100,114,105,118,101,114,95,101,110,116,114,121,93,40,100,
               114,105,118,101,114,95,101,110,116,114,121,41]},
             {sep,
              [{text,"4used by the driver, or by calling this function with"}],
              0,false},
             {text,
              [28,42,69,82,76,95,68,82,86,95,66,85,83,89,95,77,83,71,81,95,68,
               73,83,65,66,76,69,68,42]},
             {sep,
              [{text,
                [131,97,115,32,97,32,108,105,109,105,116,32,40,101,105,116,
                 104,101,114,32,108,111,119,32,111,114,32,104,105,103,104,41,
                 46,32,87,104,101,110,32,116,104,105,115,32,102,101,97,116,
                 117,114,101,32,104,97,115,32,98,101,101,110,32,100,105,115,
                 97,98,108,101,100,44,32,105,116,32,99,97,110,110,111,116,32,
                 98,101,32,101,110,97,98,108,101,100,32,97,103,97,105,110,46,
                 32,87,104,101,110,32,114,101,97,100,105,110,103,32,116,104,
                 101,32,108,105,109,105,116,115,44,32,98,111,116,104,32,97,
                 114,101]}],
              0,false},
             {text,
              [28,42,69,82,76,95,68,82,86,95,66,85,83,89,95,77,83,71,81,95,68,
               73,83,65,66,76,69,68,42]},
             {sep,[{text,"\"if this feature has been disabled."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ÒProcesses sending command data to the port are suspended if either the port is busy or if the port message queue is busy. Suspended processes are resumed when neither the port or the port message queue is busy."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"2For information about busy port functionality, see"}],
              0,false},
             {text,
              [31,91,115,101,116,95,98,117,115,121,95,112,111,114,116,93,40,
               35,115,101,116,95,98,117,115,121,95,112,111,114,116,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"7## erl_drv_cond_broadcast(ErlDrvCond\n        *cnd):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Broadcast on a condition variable."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"erl_drv_cond_broadcast\">erl_drv_cond_broadcast</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "wBroadcasts on a condition variable. That is, if other threads are waiting on the condition variable being broadcast on,"}],
              0,false},
             {text,[7,42,42,97,108,108,42,42]},
             {sep,
              [{text,
                [18,111,102,32,116,104,101,109,32,97,114,101,32,119,111,107,
                 101,110,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,99,110,100,42]},
             {sep,
              [{text,
                "5is a pointer to a condition variable to broadcast on."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"7## erl_drv_cond_create(char\n        *name):ErlDrvCond *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [28,67,114,101,97,116,101,32,97,32,99,111,110,100,105,116,105,111,
             110,32,118,97,114,105,97,98,108,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"erl_drv_cond_create\">erl_drv_cond_create</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "9Creates a condition variable and returns a pointer to it."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,110,97,109,101,42]},
             {sep,
              [{text,
                [140,105,115,32,97,32,115,116,114,105,110,103,32,105,100,101,
                 110,116,105,102,121,105,110,103,32,116,104,101,32,99,114,101,
                 97,116,101,100,32,99,111,110,100,105,116,105,111,110,32,118,
                 97,114,105,97,98,108,101,46,32,73,116,32,105,115,32,117,115,
                 101,100,32,116,111,32,105,100,101,110,116,105,102,121,32,116,
                 104,101,32,99,111,110,100,105,116,105,111,110,32,118,97,114,
                 105,97,98,108,101,32,105,110,32,112,108,97,110,110,101,100,
                 32,102,117,116,117,114,101,32,100,101,98,117,103,32,102,117,
                 110,99,116,105,111,110,97,108,105,116,121,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "von failure. The driver creating the condition variable is responsible for destroying it before the driver is unloaded."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"5## erl_drv_cond_destroy(ErlDrvCond\n        *cnd):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [29,68,101,115,116,114,111,121,32,97,32,99,111,110,100,105,116,
             105,111,110,32,118,97,114,105,97,98,108,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"erl_drv_cond_destroy\">erl_drv_cond_destroy</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"3Destroys a condition variable previously created by"}],
              0,false},
             {text,"+[erl_drv_cond_create](#erl_drv_cond_create)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,99,110,100,42]},
             {sep,
              [{text,"0is a pointer to a condition variable to destroy."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"4## erl_drv_cond_name(ErlDrvCond\n        *cnd):char *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,71,101,116,32,110,97,109,101,32,111,102,32,100,114,105,118,
             101,114,32,109,117,116,101,120,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"erl_drv_cnd_name\">erl_drv_cnd_name</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"/Returns a pointer to the name of the condition."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,99,110,100,42]},
             {sep,
              [{text,")is a pointer to an initialized condition."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "6This function is intended for debugging purposes only."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"4## erl_drv_cond_signal(ErlDrvCond\n        *cnd):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,83,105,103,110,97,108,32,111,110,32,97,32,99,111,110,100,105,
             116,105,111,110,32,118,97,114,105,97,98,108,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"erl_drv_cond_signal\">erl_drv_cond_signal</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "pSignals on a condition variable. That is, if other threads are waiting on the condition variable being signaled,"}],
              0,false},
             {text,[7,42,42,111,110,101,42,42]},
             {sep,
              [{text,
                [17,111,102,32,116,104,101,109,32,105,115,32,119,111,107,101,
                 110,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,99,110,100,42]},
             {sep,
              [{text,"2is a pointer to a condition variable to signal on."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "D## erl_drv_cond_wait(ErlDrvCond *cnd,\n        ErlDrvMutex *mtx):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [29,87,97,105,116,32,111,110,32,97,32,99,111,110,100,105,116,105,
             111,110,32,118,97,114,105,97,98,108,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"erl_drv_cond_wait\">erl_drv_cond_wait</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [395,87,97,105,116,115,32,111,110,32,97,32,99,111,110,100,105,
               116,105,111,110,32,118,97,114,105,97,98,108,101,46,32,84,104,
               101,32,99,97,108,108,105,110,103,32,116,104,114,101,97,100,32,
               105,115,32,98,108,111,99,107,101,100,32,117,110,116,105,108,32,
               97,110,111,116,104,101,114,32,116,104,114,101,97,100,32,119,97,
               107,101,115,32,105,116,32,98,121,32,115,105,103,110,97,108,105,
               110,103,32,111,114,32,98,114,111,97,100,99,97,115,116,105,110,
               103,32,111,110,32,116,104,101,32,99,111,110,100,105,116,105,
               111,110,32,118,97,114,105,97,98,108,101,46,32,66,101,102,111,
               114,101,32,116,104,101,32,99,97,108,108,105,110,103,32,116,104,
               114,101,97,100,32,105,115,32,98,108,111,99,107,101,100,44,32,
               105,116,32,117,110,108,111,99,107,115,32,116,104,101,32,109,
               117,116,101,120,32,112,97,115,115,101,100,32,97,115,32,97,114,
               103,117,109,101,110,116,46,32,87,104,101,110,32,116,104,101,32,
               99,97,108,108,105,110,103,32,116,104,114,101,97,100,32,105,115,
               32,119,111,107,101,110,44,32,105,116,32,108,111,99,107,115,32,
               116,104,101,32,115,97,109,101,32,109,117,116,101,120,32,98,101,
               102,111,114,101,32,114,101,116,117,114,110,105,110,103,46,32,
               84,104,97,116,32,105,115,44,32,116,104,101,32,109,117,116,101,
               120,32,99,117,114,114,101,110,116,108,121,32,109,117,115,116,
               32,98,101,32,108,111,99,107,101,100,32,98,121,32,116,104,101,
               32,99,97,108,108,105,110,103,32,116,104,114,101,97,100,32,119,
               104,101,110,32,99,97,108,108,105,110,103,32,116,104,105,115,32,
               102,117,110,99,116,105,111,110,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,99,110,100,42]},
             {sep,
              [{text,"0is a pointer to a condition variable to wait on."}],
              0,false},
             {text,[5,42,109,116,120,42]},
             {sep,
              [{text,"0is a pointer to a mutex to unlock while waiting."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [19,42,101,114,108,95,100,114,118,95,99,111,110,100,
                          95,119,97,105,116,42]},
                        {sep,
                         [{text,
                           "[can return even if no one has signaled or broadcast on the condition variable. Code calling"}],
                         0,false},
                        {text,
                         [19,42,101,114,108,95,100,114,118,95,99,111,110,100,
                          95,119,97,105,116,42]},
                        {sep,
                         [{text,
                           [28,105,115,32,97,108,119,97,121,115,32,116,111,32,
                            98,101,32,112,114,101,112,97,114,101,100,32,102,
                            111,114]}],
                         0,false},
                        {text,
                         [19,42,101,114,108,95,100,114,118,95,99,111,110,100,
                          95,119,97,105,116,42]},
                        {sep,
                         [{text,
                           "nreturning even if the condition that the thread was waiting for has not occurred. That is, when returning from"}],
                         0,false},
                        {text,
                         [19,42,101,114,108,95,100,114,118,95,99,111,110,100,
                          95,119,97,105,116,42]},
                        {sep,
                         [{text,
                           "=, always check if the condition has occurred, and if not call"}],
                         0,false},
                        {text,
                         [19,42,101,114,108,95,100,114,118,95,99,111,110,100,
                          95,119,97,105,116,42]},
                        {sep,[{text,[6,97,103,97,105,110,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "F## erl_drv_consume_timeslice(ErlDrvPort port,\n        int percent):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "eGive the runtime system a hint about how much CPU time the current driver callback call has consumed."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "A<a name=\"erl_drv_consume_timeslice\">erl_drv_consume_timeslice</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ÅGives the runtime system a hint about how much CPU time the current driver callback call has consumed since the last hint, or since the the start of the callback if no previous hint has been given."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[4,112,111,114,116]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,"\"Port handle of the executing port."},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[7,112,101,114,99,101,110,116]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,
                ">Approximate consumed fraction of a full time-slice in percent."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "¾The time is specified as a fraction, in percent, of a full time-slice that a port is allowed to execute before it is to surrender the CPU to other runnable ports or processes. Valid range is"}],
              0,false},
             {text,"\n*[1, 100]*"},
             {sep,
              [{text,
                "k. The scheduling time-slice is not an exact entity, but can usually be approximated to about 1 millisecond."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [342,78,111,116,105,99,101,32,116,104,97,116,32,105,116,32,105,
               115,32,117,112,32,116,111,32,116,104,101,32,114,117,110,116,
               105,109,101,32,115,121,115,116,101,109,32,116,111,32,100,101,
               116,101,114,109,105,110,101,32,105,102,32,97,110,100,32,104,
               111,119,32,116,111,32,117,115,101,32,116,104,105,115,32,105,
               110,102,111,114,109,97,116,105,111,110,46,32,73,109,112,108,
               101,109,101,110,116,97,116,105,111,110,115,32,111,110,32,115,
               111,109,101,32,112,108,97,116,102,111,114,109,115,32,99,97,110,
               32,117,115,101,32,111,116,104,101,114,32,109,101,97,110,115,32,
               116,111,32,100,101,116,101,114,109,105,110,101,32,116,104,101,
               32,99,111,110,115,117,109,101,100,32,102,114,97,99,116,105,111,
               110,32,111,102,32,116,104,101,32,116,105,109,101,45,115,108,
               105,99,101,46,32,76,101,110,103,116,104,121,32,100,114,105,118,
               101,114,32,99,97,108,108,98,97,99,107,115,32,115,104,111,117,
               108,100,44,32,114,101,103,97,114,100,108,101,115,115,32,111,
               102,32,116,104,105,115,44,32,102,114,101,113,117,101,110,116,
               108,121,32,99,97,108,108,32,116,104,105,115,32,102,117,110,99,
               116,105,111,110,32,116,111,32,100,101,116,101,114,109,105,110,
               101,32,105,102,32,105,116,32,105,115,32,97,108,108,111,119,101,
               100,32,116,111,32,99,111,110,116,105,110,117,101,32,101,120,
               101,99,117,116,105,111,110,32,111,114,32,110,111,116,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [264,84,104,105,115,32,102,117,110,99,116,105,111,110,32,114,
               101,116,117,114,110,115,32,97,32,110,111,110,45,122,101,114,
               111,32,118,97,108,117,101,32,105,102,32,116,104,101,32,116,105,
               109,101,45,115,108,105,99,101,32,104,97,115,32,98,101,101,110,
               32,101,120,104,97,117,115,116,101,100,44,32,97,110,100,32,122,
               101,114,111,32,105,102,32,116,104,101,32,99,97,108,108,98,97,
               99,107,32,105,115,32,97,108,108,111,119,101,100,32,116,111,32,
               99,111,110,116,105,110,117,101,32,101,120,101,99,117,116,105,
               111,110,46,32,73,102,32,97,32,110,111,110,45,122,101,114,111,
               32,118,97,108,117,101,32,105,115,32,114,101,116,117,114,110,
               101,100,44,32,116,104,101,32,100,114,105,118,101,114,32,99,97,
               108,108,98,97,99,107,32,105,115,32,116,111,32,114,101,116,117,
               114,110,32,97,115,32,115,111,111,110,32,97,115,32,112,111,115,
               115,105,98,108,101,32,105,110,32,111,114,100,101,114,32,102,
               111,114,32,116,104,101,32,112,111,114,116,32,116,111,32,98,101,
               32,97,98,108,101,32,116,111,32,121,105,101,108,100,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [323,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,
               115,32,112,114,111,118,105,100,101,100,32,116,111,32,98,101,
               116,116,101,114,32,115,117,112,112,111,114,116,32,99,111,45,
               111,112,101,114,97,116,105,118,101,32,115,99,104,101,100,117,
               108,105,110,103,44,32,105,109,112,114,111,118,101,32,115,121,
               115,116,101,109,32,114,101,115,112,111,110,115,105,118,101,110,
               101,115,115,44,32,97,110,100,32,116,111,32,109,97,107,101,32,
               105,116,32,101,97,115,105,101,114,32,116,111,32,112,114,101,
               118,101,110,116,32,109,105,115,98,101,104,97,118,105,111,114,
               115,32,111,102,32,116,104,101,32,86,77,32,98,101,99,97,117,115,
               101,32,111,102,32,97,32,112,111,114,116,32,109,111,110,111,112,
               111,108,105,122,105,110,103,32,97,32,115,99,104,101,100,117,
               108,101,114,32,116,104,114,101,97,100,46,32,73,116,32,99,97,
               110,32,98,101,32,117,115,101,100,32,119,104,101,110,32,100,105,
               118,105,100,105,110,103,32,108,101,110,103,116,104,121,32,119,
               111,114,107,32,105,110,116,111,32,115,111,109,101,32,114,101,
               112,101,97,116,101,100,32,100,114,105,118,101,114,32,99,97,108,
               108,98,97,99,107,32,99,97,108,108,115,44,32,119,105,116,104,
               111,117,116,32,116,104,101,32,110,101,101,100,32,116,111,32,
               117,115,101,32,116,104,114,101,97,100,115,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,83,101,101,32,97,108,115,111,32,116,104,101,32,105,109,
                 112,111,114,116,97,110,116]}],
              0,false},
             {text,
              [19,91,119,97,114,110,105,110,103,93,40,35,87,65,82,78,73,78,71,
               41]},
             {sep,
              [{text,"*text at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "g## erl_drv_convert_time_unit(ErlDrvTime\n        val, ErlDrvTimeUnit from, ErlDrvTimeUnit to):ErlDrvTime"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Convert time unit of a time value."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "A<a name=\"erl_drv_convert_time_unit\">erl_drv_convert_time_unit</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\fConverts the"}],0,false},
             {text,[5,42,118,97,108,42]},
             {sep,
              [{text,
                [18,118,97,108,117,101,32,111,102,32,116,105,109,101,32,117,
                 110,105,116]}],
              0,false},
             {text,[6,42,102,114,111,109,42]},
             {sep,[{text,"'to the corresponding value of time unit"}],0,false},
             {text,[4,42,116,111,42]},
             {sep,
              [{text,"1. The result is rounded using the floor function."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,[3,118,97,108]}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,
                    [31,86,97,108,117,101,32,116,111,32,99,111,110,118,101,
                     114,116,32,116,105,109,101,32,117,110,105,116,32,102,111,
                     114,46]},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[4,102,114,111,109]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{sep,[{text,"\fTime unit of"}],0,false},
                   {text,[3,118,97,108]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[2,116,111]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,
                [28,84,105,109,101,32,117,110,105,116,32,111,102,32,114,101,
                 116,117,114,110,101,100,32,118,97,108,117,101,46]},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,
              [20,42,69,82,76,95,68,82,86,95,84,73,77,69,95,69,82,82,79,82,
               42]},
             {sep,
              [{text,"-if called with an invalid time unit argument."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bSee also"}],0,false},
             {text,
              [25,91,69,114,108,68,114,118,84,105,109,101,93,40,35,69,114,108,
               68,114,118,84,105,109,101,41]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"![ErlDrvTimeUnit](#ErlDrvTimeUnit)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "A## erl_drv_equal_tids(ErlDrvTid tid1,\n        ErlDrvTid tid2):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"(Compare thread identifiers for equality."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"erl_drv_equal_tids\">erl_drv_equal_tids</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," Compares two thread identifiers,"}],0,false},
             {text,[6,42,116,105,100,49,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[6,42,116,105,100,50,42]},
             {sep,
              [{text,
                [15,44,32,102,111,114,32,101,113,117,97,108,105,116,121,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,"/it they are not equal, and a value not equal to"}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [18,105,102,32,116,104,101,121,32,97,114,101,32,101,113,117,
                 97,108,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "àA thread identifier can be reused very quickly after a thread has terminated. Therefore, if a thread corresponding to one of the involved thread identifiers has terminated since the thread identifier was saved, the result of"}],
                         0,false},
                        {text,
                         [20,42,101,114,108,95,100,114,118,95,101,113,117,97,
                          108,95,116,105,100,115,42]},
                        {sep,
                         [{text,
                           "+does possibly not give the expected result."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "O## erl_drv_getenv(const char *key, char\n        *value, size_t *value_size):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Get the value of an environment variable."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"erl_drv_getenv\">erl_drv_getenv</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"/Retrieves the value of an environment variable."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,[3,107,101,121]}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,[{text,[1,65]}],0,false},
                     {text,[4,78,85,76,76]},
                     {sep,
                      [{text,
                        "C-terminated string containing the name of the environment variable."}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[5,118,97,108,117,101]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [30,65,32,112,111,105,110,116,101,114,32,116,111,32,97,110,
                   32,111,117,116,112,117,116,32,98,117,102,102,101,114,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,"\nvalue_size"}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,
                "aA pointer to an integer. The integer is used both for passing input and output sizes (see below)."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,87,104,101,110,32,116,104,105,115,32,102,117,110,99,116,
                 105,111,110,32,105,115,32,99,97,108,108,101,100,44]}],
              0,false},
             {text,"\r**value_size*"},
             {sep,
              [{text,
                [29,105,115,32,116,111,32,99,111,110,116,97,105,110,32,116,
                 104,101,32,115,105,122,101,32,111,102,32,116,104,101]}],
              0,false},
             {text,[7,42,118,97,108,117,101,42]},
             {sep,[{text,[7,98,117,102,102,101,114,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\vOn success,"}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                "Jis returned, the value of the environment variable has been written to the"}],
              0,false},
             {text,[7,42,118,97,108,117,101,42]},
             {sep,[{text,"\vbuffer, and"}],0,false},
             {text,"\r**value_size*"},
             {sep,
              [{text,
                "5contains the string length (excluding the terminating"}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,[{text,"&character) of the value written to the"}],0,false},
             {text,[7,42,118,97,108,117,101,42]},
             {sep,[{text,[7,98,117,102,102,101,114,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "FOn failure, that is, no such environment variable was found, a value <"}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,"!is returned. When the size of the"}],0,false},
             {text,[7,42,118,97,108,117,101,42]},
             {sep,
              [{text,
                [28,98,117,102,102,101,114,32,105,115,32,116,111,111,32,115,
                 109,97,108,108,44,32,97,32,118,97,108,117,101]}],
              0,false},
             {sep,[{text,[1,62]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [15,105,115,32,114,101,116,117,114,110,101,100,32,97,110,
                 100]}],
              0,false},
             {text,"\r**value_size*"},
             {sep,
              [{text,"'has been set to the buffer size needed."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "4This function reads the emulated environment used by"}],
                         0,false},
                        {text,"+[kernel/os#getenv/1](../kernel/os#getenv/1)"},
                        {sep,
                         [{text,"&and not the environment used by libc's"}],
                         0,false},
                        {text,"\v*getenv(3)*"},
                        {sep,
                         [{text,
                           [24,111,114,32,115,105,109,105,108,97,114,46,32,68,
                            114,105,118,101,114,115,32,116,104,97,116]}],
                         0,false},
                        {text,"\v**require**"},
                        {sep,
                         [{text,
                           "mthat these are in sync will need to do so themselves, but keep in mind that they are segregated for a reason;"}],
                         0,false},
                        {text,"\v*getenv(3)*"},
                        {sep,
                         [{text,
                           [19,97,110,100,32,105,116,115,32,102,114,105,101,
                            110,100,115,32,97,114,101]}],
                         0,false},
                        {text,
                         [19,42,42,110,111,116,32,116,104,114,101,97,100,45,
                          115,97,102,101,42,42]},
                        {sep,
                         [{text,
                           "@and may cause unrelated code to misbehave or crash the emulator."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "A## erl_drv_init_ack(ErlDrvPort port,\n        ErlDrvData res):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Acknowledge the start of the port."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"erl_drv_init_ack\">erl_drv_init_ack</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"#Acknowledges the start of the port."}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[4,112,111,114,116]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  "GThe port handle of the port (driver instance) doing the acknowledgment."},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,114,101,115]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {sep,
                [{sep,
                  [{text,
                    "TThe result of the port initialization. Can be the same values as the return value of"}],
                  0,false},
                 {text,
                  [18,100,114,105,118,101,114,95,101,110,116,114,121,35,115,
                   116,97,114,116]},
                 {sep,
                  [{text,"(, that is, any of the error codes or the"}],
                  0,false},
                 {text,"\nErlDrvData"},
                 {sep,[{text,"!that is to be used for this port."}],0,false}],
                0,false},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"+When this function is called the initiating"}],
              0,false},
             {text,
              [18,42,101,114,108,97,110,103,58,111,112,101,110,95,112,111,114,
               116,42]},
             {sep,
              [{text,
                [26,99,97,108,108,32,105,115,32,114,101,116,117,114,110,101,
                 100,32,97,115,32,105,102,32,116,104,101]}],
              0,false},
             {text,"*[driver_entry#start](./driver_entry#start)"},
             {sep,
              [{text,
                "<function had just been called. It can only be used when flag"}],
              0,false},
             {text,
              "8[driver_entry#driver_flags](./driver_entry#driver_flags)"},
             {sep,[{text,"%has been set on the linked-in driver."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        ">## erl_drv_monotonic_time(ErlDrvTimeUnit time_unit):ErlDrvTime"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [26,71,101,116,32,69,114,108,97,110,103,32,109,111,110,111,116,
             111,110,105,99,32,116,105,109,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"erl_drv_monotonic_time\">erl_drv_monotonic_time</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,
              "@[Erlang monotonic time](./time_correction#Erlang_Monotonic_Time)"},
             {sep,
              [{text,"/. Notice that negative values are not uncommon."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\v*time_unit*"},
             {sep,
              [{text,
                [31,105,115,32,116,105,109,101,32,117,110,105,116,32,111,102,
                 32,114,101,116,117,114,110,101,100,32,118,97,108,117,101,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,
              [20,42,69,82,76,95,68,82,86,95,84,73,77,69,95,69,82,82,79,82,
               42]},
             {sep,
              [{text,
                "hif called with an invalid time unit argument, or if called from a thread that is not a scheduler thread."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bSee also"}],0,false},
             {text,
              [25,91,69,114,108,68,114,118,84,105,109,101,93,40,35,69,114,108,
               68,114,118,84,105,109,101,41]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"![ErlDrvTimeUnit](#ErlDrvTimeUnit)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"9## erl_drv_mutex_create(char\n        *name):ErlDrvMutex *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,[15,67,114,101,97,116,101,32,97,32,109,117,116,101,120,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"erl_drv_mutex_create\">erl_drv_mutex_create</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,",Creates a mutex and returns a pointer to it."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,110,97,109,101,42]},
             {sep,
              [{text,
                "ris a string identifying the created mutex. It is used to identify the mutex in planned future debug functionality."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "ion failure. The driver creating the mutex is responsible for destroying it before the driver is unloaded."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"7## erl_drv_mutex_destroy(ErlDrvMutex\n        *mtx):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [16,68,101,115,116,114,111,121,32,97,32,109,117,116,101,120,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"erl_drv_mutex_destroy\">erl_drv_mutex_destroy</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&Destroys a mutex previously created by"}],0,false},
             {text,"-[erl_drv_mutex_create](#erl_drv_mutex_create)"},
             {sep,
              [{text,
                "@. The mutex must be in an unlocked state before it is destroyed."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,109,116,120,42]},
             {sep,[{text,"#is a pointer to a mutex to destroy."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"4## erl_drv_mutex_lock(ErlDrvMutex\n        *mtx):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{sep,[{sep,[{text,"\rLock a mutex."}],0,false}],0,true},null},
      null}},
    {sep,
     [{text,"3<a name=\"erl_drv_mutex_lock\">erl_drv_mutex_lock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "zLocks a mutex. The calling thread is blocked until the mutex has been locked. A thread that has currently locked the mutex"}],
              0,false},
             {text,"\n**cannot**"},
             {sep,
              [{text,
                [26,108,111,99,107,32,116,104,101,32,115,97,109,101,32,109,
                 117,116,101,120,32,97,103,97,105,110,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,109,116,120,42]},
             {sep,[{text," is a pointer to a mutex to lock."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "gIf you leave a mutex locked in an emulator thread when you let the thread out of your control, you will"}],
                         0,false},
                        {text,
                         [15,42,42,118,101,114,121,32,108,105,107,101,108,121,
                          42,42]},
                        {sep,
                         [{text,
                           [28,100,101,97,100,108,111,99,107,32,116,104,101,
                            32,119,104,111,108,101,32,101,109,117,108,97,116,
                            111,114,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"6## erl_drv_mutex_name(ErlDrvMutex\n        *mtx):char *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,71,101,116,32,110,97,109,101,32,111,102,32,100,114,105,118,
             101,114,32,109,117,116,101,120,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"erl_drv_mutex_name\">erl_drv_mutex_name</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"$Returns a pointer to the mutex name."}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,109,116,120,42]},
             {sep,[{text,"%is a pointer to an initialized mutex."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "6This function is intended for debugging purposes only."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"6## erl_drv_mutex_trylock(ErlDrvMutex\n        *mtx):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [17,84,114,121,32,108,111,99,107,32,97,32,109,117,116,101,120,
             46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"erl_drv_mutex_trylock\">erl_drv_mutex_trylock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "CTries to lock a mutex. A thread that has currently locked the mutex"}],
              0,false},
             {text,"\n**cannot**"},
             {sep,[{text,"!try to lock the same mutex again."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,109,116,120,42]},
             {sep,
              [{text,"'is a pointer to a mutex to try to lock."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [21,111,110,32,115,117,99,99,101,115,115,44,32,111,116,104,
                 101,114,119,105,115,101]}],
              0,false},
             {text,[7,42,69,66,85,83,89,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "gIf you leave a mutex locked in an emulator thread when you let the thread out of your control, you will"}],
                         0,false},
                        {text,
                         [15,42,42,118,101,114,121,32,108,105,107,101,108,121,
                          42,42]},
                        {sep,
                         [{text,
                           [28,100,101,97,100,108,111,99,107,32,116,104,101,
                            32,119,104,111,108,101,32,101,109,117,108,97,116,
                            111,114,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"6## erl_drv_mutex_unlock(ErlDrvMutex\n        *mtx):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,[15,85,110,108,111,99,107,32,97,32,109,117,116,101,120,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"erl_drv_mutex_unlock\">erl_drv_mutex_unlock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "JUnlocks a mutex. The mutex currently must be locked by the calling thread."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,109,116,120,42]},
             {sep,[{text,"\"is a pointer to a mutex to unlock."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "T## erl_drv_output_term(ErlDrvTermData port,\n        ErlDrvTermData* term, int n):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Send term data from driver to port owner."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"erl_drv_output_term\">erl_drv_output_term</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "áSends data in the special driver term format to the port owner process. This is a fast way to deliver term data from a driver. It needs no binary conversion, so the port owner process receives data as normal Erlang terms. The"}],
              0,false},
             {text,"'[erl_drv_send_term](#erl_drv_send_term)"},
             {sep,
              [{text,
                "Cfunctions can be used for sending to any process on the local node."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,[{text,"\tParameter"}],0,false},
                        {text,[6,42,112,111,114,116,42]},
                        {sep,[{text,[2,105,115]}],0,false},
                        {text,[7,42,42,110,111,116,42,42]},
                        {sep,
                         [{text,
                           ":an ordinary port handle, but a port handle converted using"}],
                         0,false},
                        {text,"![driver_mk_port](#driver_mk_port)"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tParameter"}],0,false},
             {text,[6,42,116,101,114,109,42]},
             {sep,
              [{text,
                [21,112,111,105,110,116,115,32,116,111,32,97,110,32,97,114,
                 114,97,121,32,111,102]}],
              0,false},
             {text,
              [16,42,69,114,108,68,114,118,84,101,114,109,68,97,116,97,42]},
             {sep,[{text,[4,119,105,116,104]}],0,false},
             {text,[3,42,110,42]},
             {sep,
              [{text,
                "·elements. This array contains terms described in the driver term format. Every term consists of 1-4 elements in the array. The first term has a term type and then arguments. Parameter"}],
              0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,[{text,"\especifies the sending port."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ÙTuples, maps, and lists (except strings, see below) are built in reverse polish notation, so that to build a tuple, the elements are specified first, and then the tuple term, with a count. Likewise for lists and maps."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               "PA tuple must be specified with the number of elements. (The elements precede the"}],
             0,false},
            {text,[15,42,69,82,76,95,68,82,86,95,84,85,80,76,69,42]},
            {sep,[{text,[6,116,101,114,109,46,41]}],0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               ":A map must be specified with the number of key-value pairs"}],
             0,false},
            {text,[3,42,78,42]},
            {sep,[{text,"&. The key-value pairs must precede the"}],0,false},
            {text,"\r*ERL_DRV_MAP*"},
            {sep,
             [{text,
               [14,105,110,32,116,104,105,115,32,111,114,100,101,114,58]}],
             0,false},
            {text,")*key1,value1,key2,value2,...,keyN,valueN*"},
            {sep,[{text,"!. Duplicate keys are not allowed."}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,
              "jA list must be specified with the number of elements, including the tail, which is the last term preceding"}],
            0,false},
           {text,[14,42,69,82,76,95,68,82,86,95,76,73,83,84,42]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,84,104,101,32,115,112,101,99,105,97,108,32,116,101,114,
                 109]}],
              0,false},
             {text,
              [21,42,69,82,76,95,68,82,86,95,83,84,82,73,78,71,95,67,79,78,83,
               42]},
             {sep,
              [{text,
                [150,105,115,32,117,115,101,100,32,116,111,32,34,115,112,108,
                 105,99,101,34,32,105,110,32,97,32,115,116,114,105,110,103,32,
                 105,110,32,97,32,108,105,115,116,44,32,97,32,115,116,114,105,
                 110,103,32,115,112,101,99,105,102,105,101,100,32,116,104,105,
                 115,32,119,97,121,32,105,115,32,110,111,116,32,97,32,108,105,
                 115,116,32,105,110,32,105,116,115,101,108,102,44,32,98,117,
                 116,32,116,104,101,32,101,108,101,109,101,110,116,115,32,97,
                 114,101,32,101,108,101,109,101,110,116,115,32,111,102,32,116,
                 104,101,32,115,117,114,114,111,117,110,100,105,110,103,32,
                 108,105,115,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [906,10,84,101,114,109,32,116,121,112,101,32,32,32,32,32,32,32,
               32,32,32,32,32,65,114,103,117,109,101,110,116,115,10,45,45,45,
               45,45,45,45,45,45,32,32,32,32,32,32,32,32,32,32,32,32,45,45,45,
               45,45,45,45,45,45,10,69,82,76,95,68,82,86,95,78,73,76,10,69,82,
               76,95,68,82,86,95,65,84,79,77,32,32,32,32,32,32,32,32,32,69,
               114,108,68,114,118,84,101,114,109,68,97,116,97,32,97,116,111,
               109,32,40,102,114,111,109,32,100,114,105,118,101,114,95,109,
               107,95,97,116,111,109,40,99,104,97,114,32,42,115,116,114,105,
               110,103,41,41,10,69,82,76,95,68,82,86,95,73,78,84,32,32,32,32,
               32,32,32,32,32,32,69,114,108,68,114,118,83,73,110,116,32,105,
               110,116,101,103,101,114,10,69,82,76,95,68,82,86,95,85,73,78,84,
               32,32,32,32,32,32,32,32,32,69,114,108,68,114,118,85,73,110,116,
               32,105,110,116,101,103,101,114,10,69,82,76,95,68,82,86,95,73,
               78,84,54,52,32,32,32,32,32,32,32,32,69,114,108,68,114,118,83,
               73,110,116,54,52,32,42,105,110,116,101,103,101,114,95,112,116,
               114,10,69,82,76,95,68,82,86,95,85,73,78,84,54,52,32,32,32,32,
               32,32,32,69,114,108,68,114,118,85,73,110,116,54,52,32,42,105,
               110,116,101,103,101,114,95,112,116,114,10,69,82,76,95,68,82,86,
               95,80,79,82,84,32,32,32,32,32,32,32,32,32,69,114,108,68,114,
               118,84,101,114,109,68,97,116,97,32,112,111,114,116,32,40,102,
               114,111,109,32,100,114,105,118,101,114,95,109,107,95,112,111,
               114,116,40,69,114,108,68,114,118,80,111,114,116,32,112,111,114,
               116,41,41,10,69,82,76,95,68,82,86,95,66,73,78,65,82,89,32,32,
               32,32,32,32,32,69,114,108,68,114,118,66,105,110,97,114,121,32,
               42,98,105,110,44,32,69,114,108,68,114,118,85,73,110,116,32,108,
               101,110,44,32,69,114,108,68,114,118,85,73,110,116,32,111,102,
               102,115,101,116,10,69,82,76,95,68,82,86,95,66,85,70,50,66,73,
               78,65,82,89,32,32,32,99,104,97,114,32,42,98,117,102,44,32,69,
               114,108,68,114,118,85,73,110,116,32,108,101,110,10,69,82,76,95,
               68,82,86,95,83,84,82,73,78,71,32,32,32,32,32,32,32,99,104,97,
               114,32,42,115,116,114,44,32,105,110,116,32,108,101,110,10,69,
               82,76,95,68,82,86,95,84,85,80,76,69,32,32,32,32,32,32,32,32,
               105,110,116,32,115,122,10,69,82,76,95,68,82,86,95,76,73,83,84,
               32,32,32,32,32,32,32,32,32,105,110,116,32,115,122,10,69,82,76,
               95,68,82,86,95,80,73,68,32,32,32,32,32,32,32,32,32,32,69,114,
               108,68,114,118,84,101,114,109,68,97,116,97,32,112,105,100,32,
               40,102,114,111,109,32,100,114,105,118,101,114,95,99,111,110,
               110,101,99,116,101,100,40,69,114,108,68,114,118,80,111,114,116,
               32,112,111,114,116,41,10,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,111,114,32,100,114,105,118,101,114,
               95,99,97,108,108,101,114,40,69,114,108,68,114,118,80,111,114,
               116,32,112,111,114,116,41,41,10,69,82,76,95,68,82,86,95,83,84,
               82,73,78,71,95,67,79,78,83,32,32,99,104,97,114,32,42,115,116,
               114,44,32,105,110,116,32,108,101,110,10,69,82,76,95,68,82,86,
               95,70,76,79,65,84,32,32,32,32,32,32,32,32,100,111,117,98,108,
               101,32,42,100,98,108,10,69,82,76,95,68,82,86,95,69,88,84,50,84,
               69,82,77,32,32,32,32,32,99,104,97,114,32,42,98,117,102,44,32,
               69,114,108,68,114,118,85,73,110,116,32,108,101,110,10,69,82,76,
               95,68,82,86,95,77,65,80,32,32,32,32,32,32,32,32,32,32,105,110,
               116,32,115,122]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,84,104,101,32,117,110,115,105,103,110,101,100,32,105,110,
                 116,101,103,101,114,32,100,97,116,97,32,116,121,112,101]}],
              0,false},
             {text,"\f*ErlDrvUInt*"},
             {sep,[{text," and the signed integer data type"}],0,false},
             {text,"\f*ErlDrvSInt*"},
             {sep,
              [{text,
                [146,97,114,101,32,54,52,32,98,105,116,115,32,119,105,100,101,
                 32,111,110,32,97,32,54,52,45,98,105,116,32,114,117,110,116,
                 105,109,101,32,115,121,115,116,101,109,32,97,110,100,32,51,
                 50,32,98,105,116,115,32,119,105,100,101,32,111,110,32,97,32,
                 51,50,45,98,105,116,32,114,117,110,116,105,109,101,32,115,
                 121,115,116,101,109,46,32,84,104,101,121,32,119,101,114,101,
                 32,105,110,116,114,111,100,117,99,101,100,32,105,110,32,69,
                 82,84,83,32,53,46,54,32,97,110,100,32,114,101,112,108,97,99,
                 101,100,32,115,111,109,101,32,111,102,32,116,104,101]}],
              0,false},
             {text,[5,42,105,110,116,42]},
             {sep,
              [{text,
                [28,97,114,103,117,109,101,110,116,115,32,105,110,32,116,104,
                 101,32,108,105,115,116,32,97,98,111,118,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,84,104,101,32,117,110,115,105,103,110,101,100,32,105,110,
                 116,101,103,101,114,32,100,97,116,97,32,116,121,112,101]}],
              0,false},
             {text,[14,42,69,114,108,68,114,118,85,73,110,116,54,52,42]},
             {sep,[{text," and the signed integer data type"}],0,false},
             {text,[14,42,69,114,108,68,114,118,83,73,110,116,54,52,42]},
             {sep,
              [{text,
                "<are always 64 bits wide. They were introduced in ERTS 5.7.4."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [18,84,111,32,98,117,105,108,100,32,116,104,101,32,116,117,
                 112,108,101]}],
              0,false},
             {text,
              [29,42,123,116,99,112,44,32,80,111,114,116,44,32,91,49,48,48,32,
               124,32,66,105,110,97,114,121,93,125,42]},
             {sep,[{text,"!, the following call can be made."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [356,10,69,114,108,68,114,118,66,105,110,97,114,121,42,32,98,
               105,110,32,61,32,46,46,46,10,69,114,108,68,114,118,80,111,114,
               116,32,112,111,114,116,32,61,32,46,46,46,10,69,114,108,68,114,
               118,84,101,114,109,68,97,116,97,32,115,112,101,99,91,93,32,61,
               32,123,10,32,32,32,32,69,82,76,95,68,82,86,95,65,84,79,77,44,
               32,100,114,105,118,101,114,95,109,107,95,97,116,111,109,40,34,
               116,99,112,34,41,44,10,32,32,32,32,69,82,76,95,68,82,86,95,80,
               79,82,84,44,32,100,114,105,118,101,114,95,109,107,95,112,111,
               114,116,40,100,114,118,112,111,114,116,41,44,10,32,32,32,32,32,
               32,32,32,69,82,76,95,68,82,86,95,73,78,84,44,32,49,48,48,44,10,
               32,32,32,32,32,32,32,32,69,82,76,95,68,82,86,95,66,73,78,65,82,
               89,44,32,98,105,110,44,32,53,48,44,32,48,44,10,32,32,32,32,32,
               32,32,32,69,82,76,95,68,82,86,95,76,73,83,84,44,32,50,44,10,32,
               32,32,32,69,82,76,95,68,82,86,95,84,85,80,76,69,44,32,51,44,10,
               125,59,10,101,114,108,95,100,114,118,95,111,117,116,112,117,
               116,95,116,101,114,109,40,100,114,105,118,101,114,95,109,107,
               95,112,111,114,116,40,100,114,118,112,111,114,116,41,44,32,115,
               112,101,99,44,32,115,105,122,101,111,102,40,115,112,101,99,41,
               32,47,32,115,105,122,101,111,102,40,115,112,101,99,91,48,93,41,
               41,59,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[4,72,101,114,101]}],0,false},
             {text,[5,42,98,105,110,42]},
             {sep,
              [{text,",is a driver binary of length at least 50 and"}],
              0,false},
             {text,"\t*drvport*"},
             {sep,
              [{text,
                [29,105,115,32,97,32,112,111,114,116,32,104,97,110,100,108,
                 101,46,32,78,111,116,105,99,101,32,116,104,97,116]}],
              0,false},
             {text,[14,42,69,82,76,95,68,82,86,95,76,73,83,84,42]},
             {sep,
              [{text,".comes after the elements of the list, likewise"}],
              0,false},
             {text,[15,42,69,82,76,95,68,82,86,95,84,85,80,76,69,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,
              [21,42,69,82,76,95,68,82,86,95,83,84,82,73,78,71,95,67,79,78,83,
               42]},
             {sep,
              [{text,
                "Aterm is a way to construct strings. It works differently from how"}],
              0,false},
             {text,[16,42,69,82,76,95,68,82,86,95,83,84,82,73,78,71,42]},
             {sep,[{text,[6,119,111,114,107,115,46]}],0,false},
             {text,
              [21,42,69,82,76,95,68,82,86,95,83,84,82,73,78,71,95,67,79,78,83,
               42]},
             {sep,
              [{text,
                "8builds a string list in reverse order (as opposed to how"}],
              0,false},
             {text,[14,42,69,82,76,95,68,82,86,95,76,73,83,84,42]},
             {sep,
              [{text,
                "Tworks), concatenating the strings added to a list. The tail must be specified before"}],
              0,false},
             {text,
              [21,42,69,82,76,95,68,82,86,95,83,84,82,73,78,71,95,67,79,78,83,
               42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[16,42,69,82,76,95,68,82,86,95,83,84,82,73,78,71,42]},
             {sep,
              [{text,
                "7constructs a string, and ends it. (So it is the same as"}],
              0,false},
             {text,"\r*ERL_DRV_NIL*"},
             {sep,[{text,"\vfollowed by"}],0,false},
             {text,
              [21,42,69,82,76,95,68,82,86,95,83,84,82,73,78,71,95,67,79,78,83,
               42]},
             {sep,[{text,[2,46,41]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [319,10,47,42,32,116,111,32,115,101,110,100,32,91,120,44,32,34,
               97,98,99,34,44,32,121,93,32,116,111,32,116,104,101,32,112,111,
               114,116,58,32,42,47,10,69,114,108,68,114,118,84,101,114,109,68,
               97,116,97,32,115,112,101,99,91,93,32,61,32,123,10,32,32,32,32,
               69,82,76,95,68,82,86,95,65,84,79,77,44,32,100,114,105,118,101,
               114,95,109,107,95,97,116,111,109,40,34,120,34,41,44,10,32,32,
               32,32,69,82,76,95,68,82,86,95,83,84,82,73,78,71,44,32,40,69,
               114,108,68,114,118,84,101,114,109,68,97,116,97,41,34,97,98,99,
               34,44,32,51,44,10,32,32,32,32,69,82,76,95,68,82,86,95,65,84,79,
               77,44,32,100,114,105,118,101,114,95,109,107,95,97,116,111,109,
               40,34,121,34,41,44,10,32,32,32,32,69,82,76,95,68,82,86,95,78,
               73,76,44,10,32,32,32,32,69,82,76,95,68,82,86,95,76,73,83,84,44,
               32,52,10,125,59,10,101,114,108,95,100,114,118,95,111,117,116,
               112,117,116,95,116,101,114,109,40,100,114,105,118,101,114,95,
               109,107,95,112,111,114,116,40,100,114,118,112,111,114,116,41,
               44,32,115,112,101,99,44,32,115,105,122,101,111,102,40,115,112,
               101,99,41,32,47,32,115,105,122,101,111,102,40,115,112,101,99,
               91,48,93,41,41,59,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [324,10,47,42,32,116,111,32,115,101,110,100,32,34,97,98,99,49,
               50,51,34,32,116,111,32,116,104,101,32,112,111,114,116,58,32,42,
               47,10,69,114,108,68,114,118,84,101,114,109,68,97,116,97,32,115,
               112,101,99,91,93,32,61,32,123,10,32,32,32,32,69,82,76,95,68,82,
               86,95,78,73,76,44,32,32,32,32,32,32,32,32,47,42,32,119,105,116,
               104,32,83,84,82,73,78,71,95,67,79,78,83,44,32,116,104,101,32,
               116,97,105,108,32,99,111,109,101,115,32,102,105,114,115,116,32,
               42,47,10,32,32,32,32,69,82,76,95,68,82,86,95,83,84,82,73,78,71,
               95,67,79,78,83,44,32,40,69,114,108,68,114,118,84,101,114,109,
               68,97,116,97,41,34,49,50,51,34,44,32,51,44,10,32,32,32,32,69,
               82,76,95,68,82,86,95,83,84,82,73,78,71,95,67,79,78,83,44,32,40,
               69,114,108,68,114,118,84,101,114,109,68,97,116,97,41,34,97,98,
               99,34,44,32,51,44,10,125,59,10,101,114,108,95,100,114,118,95,
               111,117,116,112,117,116,95,116,101,114,109,40,100,114,105,118,
               101,114,95,109,107,95,112,111,114,116,40,100,114,118,112,111,
               114,116,41,44,32,115,112,101,99,44,32,115,105,122,101,111,102,
               40,115,112,101,99,41,32,47,32,115,105,122,101,111,102,40,115,
               112,101,99,91,48,93,41,41,59,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,[18,42,69,82,76,95,68,82,86,95,69,88,84,50,84,69,82,77,42]},
             {sep,
              [{text,
                "5term type is used for passing a term encoded with the"}],
              0,false},
             {text,
              [31,91,101,120,116,101,114,110,97,108,32,102,111,114,109,97,116,
               93,40,101,114,108,95,101,120,116,95,100,105,115,116,41]},
             {sep,
              [{text,"*, that is, a term that has been encoded by"}],
              0,false},
             {text,"4[erlang#term_to_binary/2](./erlang#term_to_binary/2)"},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [24,91,101,114,108,95,105,110,116,101,114,102,97,99,101,47,101,
               105,93,40,46,47,101,105,41]},
             {sep,
              [{text,
                [28,44,32,97,110,100,32,115,111,32,111,110,46,32,70,111,114,
                 32,101,120,97,109,112,108,101,44,32,105,102]}],
              0,false},
             {text,[6,42,98,105,110,112,42]},
             {sep,
              [{text,
                [18,105,115,32,97,32,112,111,105,110,116,101,114,32,116,111,
                 32,97,110]}],
              0,false},
             {text,[14,42,69,114,108,68,114,118,66,105,110,97,114,121,42]},
             {sep,
              [{text,
                [18,116,104,97,116,32,99,111,110,116,97,105,110,115,32,116,
                 101,114,109]}],
              0,false},
             {text,"\f*{17, 4711}*"},
             {sep,
              [{text,
                [16,101,110,99,111,100,101,100,32,119,105,116,104,32,116,104,
                 101]}],
              0,false},
             {text,
              [31,91,101,120,116,101,114,110,97,108,32,102,111,114,109,97,116,
               93,40,101,114,108,95,101,120,116,95,100,105,115,116,41]},
             {sep,
              [{text,
                "5, and you want to wrap it in a two-tuple with the tag"}],
              0,false},
             {text,"\b*my_tag*"},
             {sep,[{text,"\n, that is,"}],0,false},
             {text,
              [22,42,123,109,121,95,116,97,103,44,32,123,49,55,44,32,52,55,49,
               49,125,125,42]},
             {sep,
              [{text,
                [24,44,32,121,111,117,32,99,97,110,32,100,111,32,97,115,32,
                 102,111,108,108,111,119,115,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [264,10,69,114,108,68,114,118,84,101,114,109,68,97,116,97,32,
               115,112,101,99,91,93,32,61,32,123,10,32,32,32,32,32,32,32,32,
               69,82,76,95,68,82,86,95,65,84,79,77,44,32,100,114,105,118,101,
               114,95,109,107,95,97,116,111,109,40,34,109,121,95,116,97,103,
               34,41,44,10,32,32,32,32,32,32,32,32,69,82,76,95,68,82,86,95,69,
               88,84,50,84,69,82,77,44,32,40,69,114,108,68,114,118,84,101,114,
               109,68,97,116,97,41,32,98,105,110,112,45,62,111,114,105,103,95,
               98,121,116,101,115,44,32,98,105,110,112,45,62,111,114,105,103,
               95,115,105,122,101,10,32,32,32,32,69,82,76,95,68,82,86,95,84,
               85,80,76,69,44,32,50,44,10,125,59,10,101,114,108,95,100,114,
               118,95,111,117,116,112,117,116,95,116,101,114,109,40,100,114,
               105,118,101,114,95,109,107,95,112,111,114,116,40,100,114,118,
               112,111,114,116,41,44,32,115,112,101,99,44,32,115,105,122,101,
               111,102,40,115,112,101,99,41,32,47,32,115,105,122,101,111,102,
               40,115,112,101,99,91,48,93,41,41,59,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,84,111,32,98,117,105,108,100,32,116,104,101,32,109,97,
                 112]}],
              0,false},
             {text,"$*#{key1 => 100, key2 => {200, 300}}*"},
             {sep,[{text,"!, the following call can be made."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [342,10,69,114,108,68,114,118,80,111,114,116,32,112,111,114,116,
               32,61,32,46,46,46,10,69,114,108,68,114,118,84,101,114,109,68,
               97,116,97,32,115,112,101,99,91,93,32,61,32,123,10,32,32,32,32,
               69,82,76,95,68,82,86,95,65,84,79,77,44,32,100,114,105,118,101,
               114,95,109,107,95,97,116,111,109,40,34,107,101,121,49,34,41,44,
               10,32,32,32,32,32,32,32,32,69,82,76,95,68,82,86,95,73,78,84,44,
               32,49,48,48,44,10,32,32,32,32,69,82,76,95,68,82,86,95,65,84,79,
               77,44,32,100,114,105,118,101,114,95,109,107,95,97,116,111,109,
               40,34,107,101,121,50,34,41,44,10,32,32,32,32,32,32,32,32,69,82,
               76,95,68,82,86,95,73,78,84,44,32,50,48,48,44,10,32,32,32,32,32,
               32,32,32,69,82,76,95,68,82,86,95,73,78,84,44,32,51,48,48,44,10,
               32,32,32,32,69,82,76,95,68,82,86,95,84,85,80,76,69,44,32,50,44,
               10,32,32,32,32,69,82,76,95,68,82,86,95,77,65,80,44,32,50,10,
               125,59,10,101,114,108,95,100,114,118,95,111,117,116,112,117,
               116,95,116,101,114,109,40,100,114,105,118,101,114,95,109,107,
               95,112,111,114,116,40,100,114,118,112,111,114,116,41,44,32,115,
               112,101,99,44,32,115,105,122,101,111,102,40,115,112,101,99,41,
               32,47,32,115,105,122,101,111,102,40,115,112,101,99,91,48,93,41,
               41,59,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "TIf you want to pass a binary and do not already have the content of the binary in an"}],
              0,false},
             {text,[14,42,69,114,108,68,114,118,66,105,110,97,114,121,42]},
             {sep,
              [{text,
                [28,44,32,121,111,117,32,99,97,110,32,98,101,110,101,102,105,
                 116,32,102,114,111,109,32,117,115,105,110,103]}],
              0,false},
             {text,
              [20,42,69,82,76,95,68,82,86,95,66,85,70,50,66,73,78,65,82,89,
               42]},
             {sep,
              [{text,
                [22,105,110,115,116,101,97,100,32,111,102,32,99,114,101,97,
                 116,105,110,103,32,97,110]}],
              0,false},
             {text,[14,42,69,114,108,68,114,118,66,105,110,97,114,121,42]},
             {sep,[{text,[7,116,104,114,111,117,103,104]}],0,false},
             {text,"+[driver_alloc_binary](#driver_alloc_binary)"},
             {sep,[{text," and then pass the binary through"}],0,false},
             {text,[16,42,69,82,76,95,68,82,86,95,66,73,78,65,82,89,42]},
             {sep,
              [{text,
                "8. The runtime system often allocates binaries smarter if"}],
              0,false},
             {text,
              [20,42,69,82,76,95,68,82,86,95,66,85,70,50,66,73,78,65,82,89,
               42]},
             {sep,
              [{text,
                "Lis used. However, if the content of the binary to pass already resides in an"}],
              0,false},
             {text,[14,42,69,114,108,68,114,118,66,105,110,97,114,121,42]},
             {sep,
              [{text,"0, it is normally better to pass the binary using"}],
              0,false},
             {text,[16,42,69,82,76,95,68,82,86,95,66,73,78,65,82,89,42]},
             {sep,[{text,[7,97,110,100,32,116,104,101]}],0,false},
             {text,[14,42,69,114,108,68,114,118,66,105,110,97,114,121,42]},
             {sep,[{text,"\fin question."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,[14,42,69,82,76,95,68,82,86,95,85,73,78,84,42]},
             {sep,[{text,[1,44]}],0,false},
             {text,
              [20,42,69,82,76,95,68,82,86,95,66,85,70,50,66,73,78,65,82,89,
               42]},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,[18,42,69,82,76,95,68,82,86,95,69,88,84,50,84,69,82,77,42]},
             {sep,
              [{text,"'term types were introduced in ERTS 5.6."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "MThis function is only thread-safe when the emulator with SMP support is used."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,";## erl_drv_putenv(const char *key, char\n        *value):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Set the value of an environment variable."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"+<a name=\"erl_drv_putenv\">erl_drv_putenv</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"*Sets the value of an environment variable."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,107,101,121,42]},
             {sep,[{text,[4,105,115,32,97]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "C-terminated string containing the name of the environment variable."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,118,97,108,117,101,42]},
             {sep,[{text,[4,105,115,32,97]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "H-terminated string containing the new value of the environment variable."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [29,111,110,32,115,117,99,99,101,115,115,44,32,111,116,104,
                 101,114,119,105,115,101,32,97,32,118,97,108,117,101]}],
              0,false},
             {text,[6,42,33,61,32,48,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"(The result of passing the empty string ("}],
                         0,false},
                        {text,[4,42,34,34,42]},
                        {sep,
                         [{text,
                           [147,41,32,97,115,32,97,32,118,97,108,117,101,32,
                            105,115,32,112,108,97,116,102,111,114,109,45,100,
                            101,112,101,110,100,101,110,116,46,32,79,110,32,
                            115,111,109,101,32,112,108,97,116,102,111,114,109,
                            115,32,116,104,101,32,118,97,114,105,97,98,108,
                            101,32,118,97,108,117,101,32,105,115,32,115,101,
                            116,32,116,111,32,116,104,101,32,101,109,112,116,
                            121,32,115,116,114,105,110,103,44,32,111,110,32,
                            111,116,104,101,114,115,32,116,104,101,32,101,110,
                            118,105,114,111,110,109,101,110,116,32,118,97,114,
                            105,97,98,108,101,32,105,115,32,114,101,109,111,
                            118,101,100,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "7This function modifies the emulated environment used by"}],
                         0,false},
                        {text,"+[kernel/os#putenv/2](../kernel/os#putenv/2)"},
                        {sep,
                         [{text,"&and not the environment used by libc's"}],
                         0,false},
                        {text,"\v*putenv(3)*"},
                        {sep,
                         [{text,
                           [24,111,114,32,115,105,109,105,108,97,114,46,32,68,
                            114,105,118,101,114,115,32,116,104,97,116]}],
                         0,false},
                        {text,"\v**require**"},
                        {sep,
                         [{text,
                           "mthat these are in sync will need to do so themselves, but keep in mind that they are segregated for a reason;"}],
                         0,false},
                        {text,"\v*putenv(3)*"},
                        {sep,
                         [{text,
                           [19,97,110,100,32,105,116,115,32,102,114,105,101,
                            110,100,115,32,97,114,101]}],
                         0,false},
                        {text,
                         [19,42,42,110,111,116,32,116,104,114,101,97,100,45,
                          115,97,102,101,42,42]},
                        {sep,
                         [{text,
                           "@and may cause unrelated code to misbehave or crash the emulator."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,";## erl_drv_rwlock_create(char\n        *name):ErlDrvRWLock *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [17,67,114,101,97,116,101,32,97,110,32,114,119,108,111,99,107,
             46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"erl_drv_rwlock_create\">erl_drv_rwlock_create</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,".Creates an rwlock and returns a pointer to it."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,110,97,109,101,42]},
             {sep,
              [{text,
                "tis a string identifying the created rwlock. It is used to identify the rwlock in planned future debug functionality."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "jon failure. The driver creating the rwlock is responsible for destroying it before the driver is unloaded."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,";## erl_drv_rwlock_destroy(ErlDrvRWLock\n        *rwlck):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [18,68,101,115,116,114,111,121,32,97,110,32,114,119,108,111,99,
             107,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"erl_drv_rwlock_destroy\">erl_drv_rwlock_destroy</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"(Destroys an rwlock previously created by"}],
              0,false},
             {text,"/[erl_drv_rwlock_create](#erl_drv_rwlock_create)"},
             {sep,
              [{text,
                "A. The rwlock must be in an unlocked state before it is destroyed."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,114,119,108,99,107,42]},
             {sep,[{text,"%is a pointer to an rwlock to destroy."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,":## erl_drv_rwlock_name(ErlDrvRWLock\n        *rwlck):char *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,71,101,116,32,110,97,109,101,32,111,102,32,100,114,105,118,
             101,114,32,109,117,116,101,120,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"erl_drv_rwlock_name\">erl_drv_rwlock_name</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,",Returns a pointer to the name of the rwlock."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,114,119,108,99,107,42]},
             {sep,[{text,"&is a pointer to an initialized rwlock."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "6This function is intended for debugging purposes only."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"9## erl_drv_rwlock_rlock(ErlDrvRWLock\n        *rwlck):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [20,82,101,97,100,32,108,111,99,107,32,97,110,32,114,119,108,111,
             99,107,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"7<a name=\"erl_drv_rwlock_rlock\">erl_drv_rwlock_rlock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [155,82,101,97,100,32,108,111,99,107,115,32,97,110,32,114,119,
                 108,111,99,107,46,32,84,104,101,32,99,97,108,108,105,110,103,
                 32,116,104,114,101,97,100,32,105,115,32,98,108,111,99,107,
                 101,100,32,117,110,116,105,108,32,116,104,101,32,114,119,108,
                 111,99,107,32,104,97,115,32,98,101,101,110,32,114,101,97,100,
                 32,108,111,99,107,101,100,46,32,65,32,116,104,114,101,97,100,
                 32,116,104,97,116,32,99,117,114,114,101,110,116,108,121,32,
                 104,97,115,32,114,101,97,100,32,111,114,32,114,101,97,100,47,
                 119,114,105,116,101,32,108,111,99,107,101,100,32,116,104,101,
                 32,114,119,108,111,99,107]}],
              0,false},
             {text,"\n**cannot**"},
             {sep,[{text,"\elock the same rwlock again."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,114,119,108,99,107,42]},
             {sep,
              [{text,"(is a pointer to the rwlock to read lock."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "iIf you leave an rwlock locked in an emulator thread when you let the thread out of your control, you will"}],
                         0,false},
                        {text,
                         [15,42,42,118,101,114,121,32,108,105,107,101,108,121,
                          42,42]},
                        {sep,
                         [{text,
                           [28,100,101,97,100,108,111,99,107,32,116,104,101,
                            32,119,104,111,108,101,32,101,109,117,108,97,116,
                            111,114,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,";## erl_drv_rwlock_runlock(ErlDrvRWLock\n        *rwlck):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,82,101,97,100,32,117,110,108,111,99,107,32,97,110,32,114,119,
             108,111,99,107,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"erl_drv_rwlock_runlock\">erl_drv_rwlock_runlock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "WRead unlocks an rwlock. The rwlock currently must be read locked by the calling thread."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,114,119,108,99,107,42]},
             {sep,
              [{text,")is a pointer to an rwlock to read unlock."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,":## erl_drv_rwlock_rwlock(ErlDrvRWLock\n        *rwlck):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [26,82,101,97,100,47,119,114,105,116,101,32,108,111,99,107,32,97,
             110,32,114,119,108,111,99,107,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"erl_drv_rwlock_rwlock\">erl_drv_rwlock_rwlock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "§Read/write locks an rwlock. The calling thread is blocked until the rwlock has been read/write locked. A thread that currently has read or read/write locked the rwlock"}],
              0,false},
             {text,"\n**cannot**"},
             {sep,[{text,"\elock the same rwlock again."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,114,119,108,99,107,42]},
             {sep,
              [{text,"-is a pointer to an rwlock to read/write lock."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "iIf you leave an rwlock locked in an emulator thread when you let the thread out of your control, you will"}],
                         0,false},
                        {text,
                         [15,42,42,118,101,114,121,32,108,105,107,101,108,121,
                          42,42]},
                        {sep,
                         [{text,
                           [28,100,101,97,100,108,111,99,107,32,116,104,101,
                            32,119,104,111,108,101,32,101,109,117,108,97,116,
                            111,114,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"<## erl_drv_rwlock_rwunlock(ErlDrvRWLock\n        *rwlck):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [28,82,101,97,100,47,119,114,105,116,101,32,117,110,108,111,99,
             107,32,97,110,32,114,119,108,111,99,107,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"erl_drv_rwlock_rwunlock\">erl_drv_rwlock_rwunlock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "cRead/write unlocks an rwlock. The rwlock currently must be read/write locked by the calling thread."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,114,119,108,99,107,42]},
             {sep,
              [{text,"/is a pointer to an rwlock to read/write unlock."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,";## erl_drv_rwlock_tryrlock(ErlDrvRWLock\n        *rwlck):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,[{sep,[{text,"\eTry to read lock an rwlock."}],0,false}],0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"erl_drv_rwlock_tryrlock\">erl_drv_rwlock_tryrlock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,114,105,101,115,32,116,111,32,114,101,97,100,32,108,111,
               99,107,32,97,110,32,114,119,108,111,99,107,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,114,119,108,99,107,42]},
             {sep,
              [{text,".is a pointer to an rwlock to try to read lock."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [21,111,110,32,115,117,99,99,101,115,115,44,32,111,116,104,
                 101,114,119,105,115,101]}],
              0,false},
             {text,[7,42,69,66,85,83,89,42]},
             {sep,
              [{text,
                "B. A thread that currently has read or read/write locked the rwlock"}],
              0,false},
             {text,"\n**cannot**"},
             {sep,[{text,"\"try to lock the same rwlock again."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "iIf you leave an rwlock locked in an emulator thread when you let the thread out of your control, you will"}],
                         0,false},
                        {text,
                         [15,42,42,118,101,114,121,32,108,105,107,101,108,121,
                          42,42]},
                        {sep,
                         [{text,
                           [28,100,101,97,100,108,111,99,107,32,116,104,101,
                            32,119,104,111,108,101,32,101,109,117,108,97,116,
                            111,114,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"<## erl_drv_rwlock_tryrwlock(ErlDrvRWLock\n        *rwlck):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Try to read/write lock an rwlock."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "?<a name=\"erl_drv_rwlock_tryrwlock\">erl_drv_rwlock_tryrwlock</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "dTries to read/write lock an rwlock. A thread that currently has read or read/write locked the rwlock"}],
              0,false},
             {text,"\n**cannot**"},
             {sep,[{text,"\"try to lock the same rwlock again."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,114,119,108,99,107,42]},
             {sep,
              [{text,"2is pointer to an rwlock to try to read/write lock."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [21,111,110,32,115,117,99,99,101,115,115,44,32,111,116,104,
                 101,114,119,105,115,101]}],
              0,false},
             {text,[7,42,69,66,85,83,89,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "iIf you leave an rwlock locked in an emulator thread when you let the thread out of your control, you will"}],
                         0,false},
                        {text,
                         [15,42,42,118,101,114,121,32,108,105,107,101,108,121,
                          42,42]},
                        {sep,
                         [{text,
                           [28,100,101,97,100,108,111,99,107,32,116,104,101,
                            32,119,104,111,108,101,32,101,109,117,108,97,116,
                            111,114,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "k## erl_drv_send_term(ErlDrvTermData port,\n        ErlDrvTermData receiver, ErlDrvTermData* term, int n):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Send term data to other process than port owner process."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"erl_drv_send_term\">erl_drv_send_term</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ":This function is the only way for a driver to send data to"}],
              0,false},
             {text,"\t**other**"},
             {sep,
              [{text,"0processes than the port owner process. Parameter"}],
              0,false},
             {text,"\n*receiver*"},
             {sep,
              [{text,"*specifies the process to receive the data."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,[{text,"\tParameter"}],0,false},
                        {text,[6,42,112,111,114,116,42]},
                        {sep,[{text,[2,105,115]}],0,false},
                        {text,[7,42,42,110,111,116,42,42]},
                        {sep,
                         [{text,
                           ":an ordinary port handle, but a port handle converted using"}],
                         0,false},
                        {text,"![driver_mk_port](#driver_mk_port)"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nParameters"}],0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,[{text,[1,44]}],0,false},
             {text,[6,42,116,101,114,109,42]},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,[3,42,110,42]},
             {sep,[{text,"\nwork as in"}],0,false},
             {text,"+[erl_drv_output_term](#erl_drv_output_term)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "MThis function is only thread-safe when the emulator with SMP support is used."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "C## erl_drv_set_os_pid(ErlDrvPort port,\n        ErlDrvSInt pid):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [28,83,101,116,32,116,104,101,32,111,115,95,112,105,100,32,102,
             111,114,32,116,104,101,32,112,111,114,116,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"erl_drv_set_os_pid\">erl_drv_set_os_pid</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bSets the"}],0,false},
             {text,"\b*os_pid*"},
             {sep,
              [{text,
                [15,115,101,101,110,32,119,104,101,110,32,100,111,105,110,
                 103]}],
              0,false},
             {text,"*[erlang#port_info/2](./erlang#port_info/2)"},
             {sep,[{text,"\ron this port."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,
                "Cis the port handle of the port (driver instance) to set the pid on."}],
              0,false},
             {text,[5,42,112,105,100,42]},
             {sep,
              [{text,
                [18,105,115,32,116,104,101,32,112,105,100,32,116,111,32,115,
                 101,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [131,35,35,32,101,114,108,95,100,114,118,95,116,104,114,101,97,100,95,
         99,114,101,97,116,101,40,99,104,97,114,32,42,110,97,109,101,44,32,69,
         114,108,68,114,118,84,105,100,10,32,32,32,32,32,32,32,32,42,116,105,
         100,44,32,118,111,105,100,32,42,32,40,42,102,117,110,99,41,40,118,
         111,105,100,32,42,41,44,32,118,111,105,100,32,42,97,114,103,44,32,69,
         114,108,68,114,118,84,104,114,101,97,100,79,112,116,115,10,32,32,32,
         32,32,32,32,32,42,111,112,116,115,41,58,105,110,116]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [16,67,114,101,97,116,101,32,97,32,116,104,114,101,97,100,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"9<a name=\"erl_drv_thread_create\">erl_drv_thread_create</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [21,67,114,101,97,116,101,115,32,97,32,110,101,119,32,116,104,
               114,101,97,100,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,[{text,[4,110,97,109,101]}],0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {text,
                        "qA string identifying the created thread. It is used to identify the thread in planned future debug functionality."},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[3,116,105,100]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {text,"*A pointer to a thread identifier variable."},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[4,102,117,110,99]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,
                    "9A pointer to a function to execute in the created thread."},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[3,97,114,103]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{sep,
                    [{text,
                      [28,65,32,112,111,105,110,116,101,114,32,116,111,32,97,
                       114,103,117,109,101,110,116,32,116,111,32,116,104,
                       101]}],
                    0,false},
                   {text,[4,102,117,110,99]},
                   {sep,[{text,"\tfunction."}],0,false}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[4,111,112,116,115]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {sep,
                [{sep,
                  [{text,"%A pointer to thread options to use or"}],
                  0,false},
                 {text,[4,78,85,76,76]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [24,111,110,32,115,117,99,99,101,115,115,44,32,111,116,104,
                 101,114,119,105,115,101,32,97,110]}],
              0,false},
             {text,[7,42,101,114,114,110,111,42]},
             {sep,
              [{text,
                "pvalue is returned to indicate the error. The newly created thread begins executing in the function pointed to by"}],
              0,false},
             {text,[6,42,102,117,110,99,42]},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,[6,42,102,117,110,99,42]},
             {sep,[{text,"\tis passed"}],0,false},
             {text,[5,42,97,114,103,42]},
             {sep,
              [{text,
                [17,97,115,32,97,114,103,117,109,101,110,116,46,32,87,104,101,
                 110]}],
              0,false},
             {text,
              [23,42,101,114,108,95,100,114,118,95,116,104,114,101,97,100,95,
               99,114,101,97,116,101,42]},
             {sep,
              [{text,
                "Jreturns, the thread identifier of the newly created thread is available in"}],
              0,false},
             {text,[6,42,42,116,105,100,42]},
             {sep,[{text,[1,46]}],0,false},
             {text,[6,42,111,112,116,115,42]},
             {sep,
              [{text,
                [15,99,97,110,32,98,101,32,101,105,116,104,101,114,32,97]}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,[{text,"\epointer, or a pointer to an"}],0,false},
             {text,"%[ErlDrvThreadOpts](#ErlDrvThreadOpts)"},
             {sep,[{text,"\rstructure. If"}],0,false},
             {text,[6,42,111,112,116,115,42]},
             {sep,[{text,[4,105,115,32,97]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "Ipointer, default options are used, otherwise the passed options are used."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"#You are not allowed to allocate the"}],
                         0,false},
                        {text,"%[ErlDrvThreadOpts](#ErlDrvThreadOpts)"},
                        {sep,
                         [{text,
                           ">structure by yourself. It must be allocated and initialized by"}],
                         0,false},
                        {text,
                         "9[erl_drv_thread_opts_create](#erl_drv_thread_opts_create)"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")The created thread terminates either when"}],
              0,false},
             {text,[6,42,102,117,110,99,42]},
             {sep,[{text,"\rreturns or if"}],0,false},
             {text,"+[erl_drv_thread_exit](#erl_drv_thread_exit)"},
             {sep,
              [{text,
                "Mis called by the thread. The exit value of the thread is either returned from"}],
              0,false},
             {text,[6,42,102,117,110,99,42]},
             {sep,
              [{text,
                [24,111,114,32,112,97,115,115,101,100,32,97,115,32,97,114,103,
                 117,109,101,110,116,32,116,111]}],
              0,false},
             {text,"+[erl_drv_thread_exit](#erl_drv_thread_exit)"},
             {sep,
              [{text,
                "O. The driver creating the thread is responsible for joining the thread, through"}],
              0,false},
             {text,"+[erl_drv_thread_join](#erl_drv_thread_join)"},
             {sep,
              [{text,
                "v, before the driver is unloaded. \"Detached\" threads cannot be created, that is, threads that do not need to be joined."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "×All created threads must be joined by the driver before it is unloaded. If the driver fails to join all threads created before it is unloaded, the runtime system most likely crashes when the driver code is unloaded."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"5## erl_drv_thread_exit(void\n        *exit_value):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,84,101,114,109,105,110,97,116,101,32,99,97,108,108,105,110,
             103,32,116,104,114,101,97,100,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"erl_drv_thread_exit\">erl_drv_thread_exit</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ETerminates the calling thread with the exit value passed as argument."}],
              0,false},
             {text,"\f*exit_value*"},
             {sep,[{text," is a pointer to an exit value or"}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "6You are only allowed to terminate threads created with"}],
              0,false},
             {text,"/[erl_drv_thread_create](#erl_drv_thread_create)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?The exit value can later be retrieved by another thread through"}],
              0,false},
             {text,"+[erl_drv_thread_join](#erl_drv_thread_join)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "D## erl_drv_thread_join(ErlDrvTid tid, void\n        **exit_value):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,74,111,105,110,32,119,105,116,104,32,97,110,111,116,104,101,
             114,32,116,104,114,101,97,100,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"erl_drv_thread_join\">erl_drv_thread_join</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "sJoins the calling thread with another thread, that is, the calling thread is blocked until the thread identified by"}],
              0,false},
             {text,[5,42,116,105,100,42]},
             {sep,
              [{text,
                [15,104,97,115,32,116,101,114,109,105,110,97,116,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,116,105,100,42]},
             {sep,
              [{text,"/is the thread identifier of the thread to join."}],
              0,false},
             {text,"\f*exit_value*"},
             {sep,
              [{text,".is a pointer to a pointer to an exit value, or"}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [24,111,110,32,115,117,99,99,101,115,115,44,32,111,116,104,
                 101,114,119,105,115,101,32,97,110]}],
              0,false},
             {text,[7,42,101,114,114,110,111,42]},
             {sep,
              [{text,"(value is returned to indicate the error."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "vA thread can only be joined once. The behavior of joining more than once is undefined, an emulator crash is likely. If"}],
              0,false},
             {text,
              [20,42,101,120,105,116,95,118,97,108,117,101,32,61,61,32,78,85,
               76,76,42]},
             {sep,
              [{text,
                "t, the exit value of the terminated thread is ignored, otherwise the exit value of the terminated thread is stored at"}],
              0,false},
             {text,"\r**exit_value*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"4## erl_drv_thread_name(ErlDrvTid\n        tid):char *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,71,101,116,32,110,97,109,101,32,111,102,32,100,114,105,118,
             101,114,32,109,117,116,101,120,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"erl_drv_rwlock_name\">erl_drv_rwlock_name</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,",Returns a pointer to the name of the thread."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,116,105,100,42]},
             {sep,
              [{text,
                [23,105,115,32,97,32,116,104,114,101,97,100,32,105,100,101,
                 110,116,105,102,105,101,114,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "6This function is intended for debugging purposes only."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"<## erl_drv_thread_opts_create(char *name):ErlDrvThreadOpts *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,67,114,101,97,116,101,32,116,104,114,101,97,100,32,111,112,
             116,105,111,110,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "C<a name=\"erl_drv_thread_opts_create\">erl_drv_thread_opts_create</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Allocates and initializes a thread option structure."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,110,97,109,101,42]},
             {sep,
              [{text,
                [132,105,115,32,97,32,115,116,114,105,110,103,32,105,100,101,
                 110,116,105,102,121,105,110,103,32,116,104,101,32,99,114,101,
                 97,116,101,100,32,116,104,114,101,97,100,32,111,112,116,105,
                 111,110,115,46,32,73,116,32,105,115,32,117,115,101,100,32,
                 116,111,32,105,100,101,110,116,105,102,121,32,116,104,101,32,
                 116,104,114,101,97,100,32,111,112,116,105,111,110,115,32,105,
                 110,32,112,108,97,110,110,101,100,32,102,117,116,117,114,101,
                 32,100,101,98,117,103,32,102,117,110,99,116,105,111,110,97,
                 108,105,116,121,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "Don failure. A thread option structure is used for passing options to"}],
              0,false},
             {text,"/[erl_drv_thread_create](#erl_drv_thread_create)"},
             {sep,
              [{text,
                "9. If the structure is not modified before it is passed to"}],
              0,false},
             {text,"/[erl_drv_thread_create](#erl_drv_thread_create)"},
             {sep,
              [{text,
                [30,44,32,116,104,101,32,100,101,102,97,117,108,116,32,118,97,
                 108,117,101,115,32,97,114,101,32,117,115,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"#You are not allowed to allocate the"}],
                         0,false},
                        {text,"%[ErlDrvThreadOpts](#ErlDrvThreadOpts)"},
                        {sep,
                         [{text,
                           ">structure by yourself. It must be allocated and initialized by"}],
                         0,false},
                        {text,
                         [28,42,101,114,108,95,100,114,118,95,116,104,114,101,
                          97,100,95,111,112,116,115,95,99,114,101,97,116,101,
                          42]},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,";## erl_drv_thread_opts_destroy(ErlDrvThreadOpts *opts):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [23,68,101,115,116,114,111,121,32,116,104,114,101,97,100,32,111,
             112,116,105,111,110,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "E<a name=\"erl_drv_thread_opts_destroy\">erl_drv_thread_opts_destroy</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"-Destroys thread options previously created by"}],
              0,false},
             {text,
              "9[erl_drv_thread_opts_create](#erl_drv_thread_opts_create)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,111,112,116,115,42]},
             {sep,
              [{text,"*is a pointer to thread options to destroy."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"&## erl_drv_thread_self(void):ErlDrvTid"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Get the thread identifier of the current thread."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"erl_drv_thread_self\">erl_drv_thread_self</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4Returns the thread identifier of the calling thread."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "C## erl_drv_time_offset(ErlDrvTimeUnit\n        time_unit):ErlDrvTime"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [24,71,101,116,32,99,117,114,114,101,110,116,32,116,105,109,101,
             32,111,102,102,115,101,116,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"erl_drv_time_offset\">erl_drv_time_offset</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'Returns the current time offset between"}],0,false},
             {text,
              "@[Erlang monotonic time](./time_correction#Erlang_Monotonic_Time)"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              ":[Erlang system time](./time_correction#Erlang_System_Time)"},
             {sep,
              [{text,
                [18,99,111,110,118,101,114,116,101,100,32,105,110,116,111,32,
                 116,104,101]}],
              0,false},
             {text,"\v*time_unit*"},
             {sep,
              [{text,
                [19,112,97,115,115,101,100,32,97,115,32,97,114,103,117,109,
                 101,110,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\v*time_unit*"},
             {sep,
              [{text,
                [31,105,115,32,116,105,109,101,32,117,110,105,116,32,111,102,
                 32,114,101,116,117,114,110,101,100,32,118,97,108,117,101,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,
              [20,42,69,82,76,95,68,82,86,95,84,73,77,69,95,69,82,82,79,82,
               42]},
             {sep,
              [{text,
                "hif called with an invalid time unit argument, or if called from a thread that is not a scheduler thread."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bSee also"}],0,false},
             {text,
              [25,91,69,114,108,68,114,118,84,105,109,101,93,40,35,69,114,108,
               68,114,118,84,105,109,101,41]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"![ErlDrvTimeUnit](#ErlDrvTimeUnit)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"3## erl_drv_tsd_get(ErlDrvTSDKey\n        key):void *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,71,101,116,32,116,104,114,101,97,100,45,115,112,101,99,105,
             102,105,99,32,100,97,116,97,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"erl_drv_tsd_get\">erl_drv_tsd_get</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"0Returns the thread-specific data associated with"}],
              0,false},
             {text,[5,42,107,101,121,42]},
             {sep,
              [{text,
                [23,102,111,114,32,116,104,101,32,99,97,108,108,105,110,103,
                 32,116,104,114,101,97,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,107,101,121,42]},
             {sep,
              [{text,
                [30,105,115,32,97,32,116,104,114,101,97,100,45,115,112,101,99,
                 105,102,105,99,32,100,97,116,97,32,107,101,121,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,[{text,"#if no data has been associated with"}],0,false},
             {text,[5,42,107,101,121,42]},
             {sep,
              [{text,
                [23,102,111,114,32,116,104,101,32,99,97,108,108,105,110,103,
                 32,116,104,114,101,97,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "D## erl_drv_tsd_key_create(char *name,\n        ErlDrvTSDKey *key):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Create a thread-specific data key."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"erl_drv_tsd_key_create\">erl_drv_tsd_key_create</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"#Creates a thread-specific data key."}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,110,97,109,101,42]},
             {sep,
              [{text,
                "nis a string identifying the created key. It is used to identify the key in planned future debug functionality."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,107,101,121,42]},
             {sep,
              [{text,"4is a pointer to a thread-specific data key variable."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [24,111,110,32,115,117,99,99,101,115,115,44,32,111,116,104,
                 101,114,119,105,115,101,32,97,110]}],
              0,false},
             {text,[7,42,101,114,114,110,111,42]},
             {sep,
              [{text,
                [132,118,97,108,117,101,32,105,115,32,114,101,116,117,114,110,
                 101,100,32,116,111,32,105,110,100,105,99,97,116,101,32,116,
                 104,101,32,101,114,114,111,114,46,32,84,104,101,32,100,114,
                 105,118,101,114,32,99,114,101,97,116,105,110,103,32,116,104,
                 101,32,107,101,121,32,105,115,32,114,101,115,112,111,110,115,
                 105,98,108,101,32,102,111,114,32,100,101,115,116,114,111,121,
                 105,110,103,32,105,116,32,98,101,102,111,114,101,32,116,104,
                 101,32,100,114,105,118,101,114,32,105,115,32,117,110,108,111,
                 97,100,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"9## erl_drv_tsd_key_destroy(ErlDrvTSDKey\n        key):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"#Destroy a thread-specific data key."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       "=<a name=\"erl_drv_tsd_key_destroy\">erl_drv_tsd_key_destroy</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "9Destroys a thread-specific data key previously created by"}],
              0,false},
             {text,"1[erl_drv_tsd_key_create](#erl_drv_tsd_key_create)"},
             {sep,
              [{text,
                "M. All thread-specific data using this key in all threads must be cleared (see"}],
              0,false},
             {text,"#[erl_drv_tsd_set](#erl_drv_tsd_set)"},
             {sep,
              [{text,
                [20,41,32,98,101,102,111,114,101,32,116,104,101,32,99,97,108,
                 108,32,116,111]}],
              0,false},
             {text,
              [25,42,101,114,108,95,100,114,118,95,116,115,100,95,107,101,121,
               95,100,101,115,116,114,111,121,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,107,101,121,42]},
             {sep,
              [{text,")is a thread-specific data key to destroy."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "©A destroyed key is very likely to be reused soon. Therefore, if you fail to clear the thread-specific data using this key in a thread before destroying the key, you will"}],
                         0,false},
                        {text,
                         [15,42,42,118,101,114,121,32,108,105,107,101,108,121,
                          42,42]},
                        {sep,
                         [{text,
                           "3get unexpected errors in other parts of the system."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "=## erl_drv_tsd_set(ErlDrvTSDKey key, void\n        *data):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,83,101,116,32,116,104,114,101,97,100,45,115,112,101,99,105,
             102,105,99,32,100,97,116,97,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"-<a name=\"erl_drv_tsd_set\">erl_drv_tsd_set</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")Sets thread-specific data associated with"}],
              0,false},
             {text,[5,42,107,101,121,42]},
             {sep,
              [{text,
                "þfor the calling thread. You are only allowed to set thread-specific data for threads while they are fully under your control. For example, if you set thread-specific data in a thread calling a driver callback function, it must be cleared, that is, set to"}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "5, before returning from the driver callback function."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[5,42,107,101,121,42]},
             {sep,
              [{text,
                [30,105,115,32,97,32,116,104,114,101,97,100,45,115,112,101,99,
                 105,102,105,99,32,100,97,116,97,32,107,101,121,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,100,97,116,97,42]},
             {sep,[{text,"&is a pointer to data to associate with"}],0,false},
             {text,[5,42,107,101,121,42]},
             {sep,
              [{text,
                [22,105,110,32,116,104,101,32,99,97,108,108,105,110,103,32,
                 116,104,114,101,97,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "ØIf you fail to clear thread-specific data in an emulator thread before letting it out of your control, you might never be able to clear this data with later unexpected errors in other parts of the system as a result."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [29,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
               32,116,104,114,101,97,100,45,115,97,102,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"!## erl_errno_id(int error):char *"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Get Erlang error atom name from error number."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"erl_errno_id\">erl_errno_id</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "DReturns the atom name of the Erlang error, given the error number in"}],
              0,false},
             {text,[7,42,101,114,114,111,114,42]},
             {sep,
              [{text,
                [21,46,32,84,104,101,32,101,114,114,111,114,32,97,116,111,109,
                 115,32,97,114,101]}],
              0,false},
             {text,"\b*einval*"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\b*enoent*"},
             {sep,
              [{text,
                "@, and so on. It can be used to make error terms from the driver."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"3## remove_driver_entry(ErlDrvEntry\n        *de):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,82,101,109,111,118,101,32,97,32,100,114,105,118,101,114,32,
             101,110,116,114,121,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"5<a name=\"remove_driver_entry\">remove_driver_entry</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,82,101,109,111,118,101,115,32,97,32,100,114,105,118,101,
                 114,32,101,110,116,114,121]}],
              0,false},
             {text,[4,42,100,101,42]},
             {sep,
              [{text,
                [21,112,114,101,118,105,111,117,115,108,121,32,97,100,100,101,
                 100,32,119,105,116,104]}],
              0,false},
             {text,"%[add_driver_entry](#add_driver_entry)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\eDriver entries added by the"}],0,false},
             {text,"\n*erl_ddll*"},
             {sep,
              [{text,
                ";Erlang interface cannot be removed by using this interface."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"6## set_busy_port(ErlDrvPort port, int\n        on):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text," Signal or unsignal port as busy."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,")<a name=\"set_busy_port\">set_busy_port</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,".Sets and unsets the busy state of the port. If"}],
              0,false},
             {text,[4,42,111,110,42]},
             {sep,
              [{text,
                [133,105,115,32,110,111,110,45,122,101,114,111,44,32,116,104,
                 101,32,112,111,114,116,32,105,115,32,115,101,116,32,116,111,
                 32,98,117,115,121,46,32,73,102,32,105,116,32,105,115,32,122,
                 101,114,111,44,32,116,104,101,32,112,111,114,116,32,105,115,
                 32,115,101,116,32,116,111,32,110,111,116,32,98,117,115,121,
                 46,32,89,111,117,32,116,121,112,105,99,97,108,108,121,32,119,
                 97,110,116,32,116,111,32,99,111,109,98,105,110,101,32,116,
                 104,105,115,32,102,101,97,116,117,114,101,32,119,105,116,104,
                 32,116,104,101]}],
              0,false},
             {text,"4[busy port message queue](#erl_drv_busy_msgq_limits)"},
             {sep,
              [{text,
                [14,102,117,110,99,116,105,111,110,97,108,105,116,121,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [268,80,114,111,99,101,115,115,101,115,32,115,101,110,100,105,
                 110,103,32,99,111,109,109,97,110,100,32,100,97,116,97,32,116,
                 111,32,116,104,101,32,112,111,114,116,32,97,114,101,32,115,
                 117,115,112,101,110,100,101,100,32,105,102,32,101,105,116,
                 104,101,114,32,116,104,101,32,112,111,114,116,32,111,114,32,
                 116,104,101,32,112,111,114,116,32,109,101,115,115,97,103,101,
                 32,113,117,101,117,101,32,105,115,32,98,117,115,121,46,32,83,
                 117,115,112,101,110,100,101,100,32,112,114,111,99,101,115,
                 115,101,115,32,97,114,101,32,114,101,115,117,109,101,100,32,
                 119,104,101,110,32,110,101,105,116,104,101,114,32,116,104,
                 101,32,112,111,114,116,32,111,114,32,116,104,101,32,112,111,
                 114,116,32,109,101,115,115,97,103,101,32,113,117,101,117,101,
                 32,105,115,32,98,117,115,121,46,32,67,111,109,109,97,110,100,
                 32,100,97,116,97,32,105,115,32,105,110,32,116,104,105,115,32,
                 99,111,110,116,101,120,116,32,100,97,116,97,32,112,97,115,
                 115,101,100,32,116,111,32,116,104,101,32,112,111,114,116,32,
                 117,115,105,110,103,32,101,105,116,104,101,114]}],
              0,false},
             {text,"!*Port ! {Owner, {command, Data}}*"},
             {sep,[{text,[2,111,114]}],0,false},
             {text,
              [20,42,112,111,114,116,95,99,111,109,109,97,110,100,47,91,50,44,
               51,93,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[6,73,102,32,116,104,101]}],0,false},
             {text,"5[ERL_DRV_FLAG_SOFT_BUSY](./driver_entry#driver_flags)"},
             {sep,
              [{text,
                [19,104,97,115,32,98,101,101,110,32,115,101,116,32,105,110,32,
                 116,104,101]}],
              0,false},
             {text,
              [28,91,100,114,105,118,101,114,95,101,110,116,114,121,93,40,100,
               114,105,118,101,114,95,101,110,116,114,121,41]},
             {sep,
              [{text,",, data can be forced into the driver through"}],
              0,false},
             {text,"0[erlang#port_command/3](./erlang#port_command/3)"},
             {sep,
              [{text,"0even if the driver has signaled that it is busy."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "@For information about busy port message queue functionality, see"}],
              0,false},
             {text,"5[erl_drv_busy_msgq_limits](#erl_drv_busy_msgq_limits)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "B## set_port_control_flags(ErlDrvPort port,\n        int flags):void"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Set flags on how to handle control entry function."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,";<a name=\"set_port_control_flags\">set_port_control_flags</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,83,101,116,115,32,102,108,97,103,115,32,102,111,114,32,
                 104,111,119,32,116,104,101]}],
              0,false},
             {text,".[driver_entry#control](./driver_entry#control)"},
             {sep,
              [{text,
                "Fdriver entry function will return data to the port owner process. (The"}],
              0,false},
             {text,"\t*control*"},
             {sep,
              [{text,
                [23,102,117,110,99,116,105,111,110,32,105,115,32,99,97,108,
                 108,101,100,32,102,114,111,109]}],
              0,false},
             {text,"0[erlang#port_control/3](./erlang#port_control/3)"},
             {sep,[{text,[2,46,41]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"2Currently there are only two meaningful values for"}],
              0,false},
             {text,[7,42,102,108,97,103,115,42]},
             {sep,[{text,[1,58]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,"*means that data is returned in a list, and"}],
              0,false},
             {text,
              [26,42,80,79,82,84,95,67,79,78,84,82,79,76,95,70,76,65,71,95,66,
               73,78,65,82,89,42]},
             {sep,[{text,"'means data is returned as a binary from"}],0,false},
             {text,"\t*control*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## See Also"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,91,100,114,105,118,101,114,95,101,110,116,114,121,93,40,100,
            114,105,118,101,114,95,101,110,116,114,121,41]},
          {sep,[{text,[1,44]}],0,false},
          {text,
           [16,91,101,114,108,97,110,103,93,40,101,114,108,97,110,103,41]},
          {sep,[{text,[1,44]}],0,false},
          {text,
           [29,91,107,101,114,110,101,108,47,101,114,108,95,100,100,108,108,
            93,40,46,47,101,114,108,95,100,100,108,108,41]},
          {sep,[{text,"\t, section"}],0,false},
          {text,
           "O[How to Implement an Alternative Carrier for the Erlang Distribution](alt_dist)"},
          {sep,
           [{text,
             [19,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
              105,100,101]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
