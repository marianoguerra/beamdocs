{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          "F# How to Implement an Alternative Carrier for the Erlang Distribution\n"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ÛThis section describes how to implement an alternative carrier protocol for the Erlang distribution. The distribution is normally carried by TCP/IP. Here is explained a method for replacing TCP/IP with another protocol."}],
            0,false}],
          0,true},
         null},
        null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"0The section is a step-by-step explanation of the"}],
             0,false},
            {text,"\n*uds_dist*"},
            {sep,
             [{text,".example application (in the Kernel application"}],
             0,false},
            {text,"\n*examples*"},
            {sep,
             [{text,
               [15,100,105,114,101,99,116,111,114,121,41,46,32,84,104,101]}],
             0,false},
            {text,"\n*uds_dist*"},
            {sep,
             [{text,
               [272,97,112,112,108,105,99,97,116,105,111,110,32,105,109,112,
                108,101,109,101,110,116,115,32,100,105,115,116,114,105,98,117,
                116,105,111,110,32,111,118,101,114,32,85,110,105,120,32,100,
                111,109,97,105,110,32,115,111,99,107,101,116,115,32,97,110,
                100,32,105,115,32,119,114,105,116,116,101,110,32,102,111,114,
                32,116,104,101,32,83,117,110,32,83,111,108,97,114,105,115,32,
                50,32,111,112,101,114,97,116,105,110,103,32,101,110,118,105,
                114,111,110,109,101,110,116,46,32,84,104,101,32,109,101,99,
                104,97,110,105,115,109,115,32,97,114,101,32,104,111,119,101,
                118,101,114,32,103,101,110,101,114,97,108,32,97,110,100,32,97,
                112,112,108,121,32,116,111,32,97,110,121,32,111,112,101,114,
                97,116,105,110,103,32,115,121,115,116,101,109,32,69,114,108,
                97,110,103,32,114,117,110,115,32,111,110,46,32,84,104,101,32,
                114,101,97,115,111,110,32,116,104,101,32,67,32,99,111,100,101,
                32,105,115,32,110,111,116,32,109,97,100,101,32,112,111,114,
                116,97,98,108,101,44,32,105,115,32,115,105,109,112,108,121,32,
                114,101,97,100,97,98,105,108,105,116,121,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[15,35,35,32,73,110,116,114,111,100,117,99,116,105,111,110]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "VTo implement a new carrier for the Erlang distribution, the main steps are as follows."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           [391,65,115,32,111,102,32,69,82,84,83,32,118,101,
                            114,115,105,111,110,32,49,48,46,48,32,115,117,112,
                            112,111,114,116,32,102,111,114,32,100,105,115,116,
                            114,105,98,117,116,105,111,110,32,99,111,110,116,
                            114,111,108,108,101,114,32,112,114,111,99,101,115,
                            115,101,115,32,104,97,115,32,98,101,101,110,32,
                            105,110,116,114,111,100,117,99,101,100,46,32,84,
                            104,97,116,32,105,115,44,32,116,104,101,32,116,
                            114,97,102,102,105,99,32,111,118,101,114,32,97,32,
                            100,105,115,116,114,105,98,117,116,105,111,110,32,
                            99,104,97,110,110,101,108,32,99,97,110,32,98,101,
                            32,109,97,110,97,103,101,100,32,98,121,32,97,32,
                            112,114,111,99,101,115,115,32,105,110,115,116,101,
                            97,100,32,111,102,32,111,110,108,121,32,98,121,32,
                            97,32,112,111,114,116,46,32,84,104,105,115,32,109,
                            97,107,101,115,32,105,116,32,112,111,115,115,105,
                            98,108,101,32,116,111,32,105,109,112,108,101,109,
                            101,110,116,32,108,97,114,103,101,32,112,97,114,
                            116,115,32,111,102,32,116,104,101,32,108,111,103,
                            105,99,32,105,110,32,69,114,108,97,110,103,32,99,
                            111,100,101,44,32,97,110,100,32,121,111,117,32,
                            112,101,114,104,97,112,115,32,100,111,32,110,111,
                            116,32,101,118,101,110,32,110,101,101,100,32,97,
                            32,110,101,119,32,100,114,105,118,101,114,32,102,
                            111,114,32,116,104,101,32,112,114,111,116,111,99,
                            111,108,46,32,79,110,101,32,101,120,97,109,112,
                            108,101,32,99,111,117,108,100,32,98,101,32,69,114,
                            108,97,110,103,32,100,105,115,116,114,105,98,117,
                            116,105,111,110,32,111,118,101,114,32,85,68,80,32,
                            117,115,105,110,103]}],
                         0,false},
                        {text,"\t*gen_udp*"},
                        {sep,
                         [{text,
                           "ô(your Erlang code will of course have to take care of retransmissions, etc in this example). That is, depending on what you want to do you perhaps do not need to implement a driver at all and can then skip the driver related sections below. The"}],
                         0,false},
                        {text,
                         [14,42,103,101,110,95,116,99,112,95,100,105,115,116,
                          42]},
                        {sep,
                         [{text,
                           [24,101,120,97,109,112,108,101,32,100,101,115,99,
                            114,105,98,101,100,32,105,110,32,116,104,101]}],
                         0,false},
                        {text,"+[Distribution Module](#distribution_module)"},
                        {sep,
                         [{text,
                           [137,115,101,99,116,105,111,110,32,117,116,105,108,
                            105,122,101,32,100,105,115,116,114,105,98,117,116,
                            105,111,110,32,99,111,110,116,114,111,108,108,101,
                            114,32,112,114,111,99,101,115,115,101,115,32,97,
                            110,100,32,99,97,110,32,98,101,32,119,111,114,116,
                            104,32,104,97,118,105,110,103,32,97,32,108,111,
                            111,107,32,97,116,32,105,102,32,121,111,117,32,
                            119,97,110,116,32,116,111,32,117,115,101,32,100,
                            105,115,116,114,105,98,117,116,105,111,110,32,99,
                            111,110,116,114,111,108,108,101,114,32,112,114,
                            111,99,101,115,115,101,115,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\e## Writing an Erlang Driver"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "¹First, the protocol must be available to the Erlang machine, which involves writing an Erlang driver. A port program cannot be used, an Erlang driver is required. Erlang drivers can be:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "tStatically linked to the emulator, which can be an alternative when using the open source distribution of Erlang, or"}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [137,68,121,110,97,109,105,99,97,108,108,121,32,108,111,97,100,
               101,100,32,105,110,116,111,32,116,104,101,32,69,114,108,97,110,
               103,32,109,97,99,104,105,110,101,115,32,97,100,100,114,101,115,
               115,32,115,112,97,99,101,44,32,119,104,105,99,104,32,105,115,
               32,116,104,101,32,111,110,108,121,32,97,108,116,101,114,110,97,
               116,105,118,101,32,105,102,32,97,32,112,114,101,99,111,109,112,
               105,108,101,100,32,118,101,114,115,105,111,110,32,111,102,32,
               69,114,108,97,110,103,32,105,115,32,116,111,32,98,101,32,117,
               115,101,100]}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [597,87,114,105,116,105,110,103,32,97,110,32,69,114,108,97,
                 110,103,32,100,114,105,118,101,114,32,105,115,32,110,111,116,
                 32,101,97,115,121,46,32,84,104,101,32,100,114,105,118,101,
                 114,32,105,115,32,119,114,105,116,116,101,110,32,97,115,32,
                 115,111,109,101,32,99,97,108,108,98,97,99,107,32,102,117,110,
                 99,116,105,111,110,115,32,99,97,108,108,101,100,32,98,121,32,
                 116,104,101,32,69,114,108,97,110,103,32,101,109,117,108,97,
                 116,111,114,32,119,104,101,110,32,100,97,116,97,32,105,115,
                 32,115,101,110,116,32,116,111,32,116,104,101,32,100,114,105,
                 118,101,114,44,32,111,114,32,116,104,101,32,100,114,105,118,
                 101,114,32,104,97,115,32,97,110,121,32,100,97,116,97,32,97,
                 118,97,105,108,97,98,108,101,32,111,110,32,97,32,102,105,108,
                 101,32,100,101,115,99,114,105,112,116,111,114,46,32,65,115,
                 32,116,104,101,32,100,114,105,118,101,114,32,99,97,108,108,
                 98,97,99,107,32,114,111,117,116,105,110,101,115,32,101,120,
                 101,99,117,116,101,32,105,110,32,116,104,101,32,109,97,105,
                 110,32,116,104,114,101,97,100,32,111,102,32,116,104,101,32,
                 69,114,108,97,110,103,32,109,97,99,104,105,110,101,44,32,116,
                 104,101,32,99,97,108,108,98,97,99,107,32,102,117,110,99,116,
                 105,111,110,115,32,99,97,110,32,112,101,114,102,111,114,109,
                 32,110,111,32,98,108,111,99,107,105,110,103,32,97,99,116,105,
                 118,105,116,121,32,119,104,97,116,115,111,101,118,101,114,46,
                 32,84,104,101,32,99,97,108,108,98,97,99,107,115,32,97,114,
                 101,32,111,110,108,121,32,116,111,32,115,101,116,32,117,112,
                 32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,
                 115,32,102,111,114,32,119,97,105,116,105,110,103,32,97,110,
                 100,47,111,114,32,114,101,97,100,47,119,114,105,116,101,32,
                 97,118,97,105,108,97,98,108,101,32,100,97,116,97,46,32,65,
                 108,108,32,73,47,79,32,109,117,115,116,32,98,101,32,110,111,
                 110,45,98,108,111,99,107,105,110,103,46,32,68,114,105,118,
                 101,114,32,99,97,108,108,98,97,99,107,115,32,97,114,101,32,
                 104,111,119,101,118,101,114,32,101,120,101,99,117,116,101,
                 100,32,105,110,32,115,101,113,117,101,110,99,101,44,32,119,
                 104,121,32,97,32,103,108,111,98,97,108,32,115,116,97,116,101,
                 32,99,97,110,32,115,97,102,101,108,121,32,98,101,32,117,112,
                 100,97,116,101,100,32,119,105,116,104,105,110,32,116,104,101,
                 32,114,111,117,116,105,110,101,115,46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"-## Writing an Erlang Interface for the Driver"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [270,87,104,101,110,32,116,104,101,32,100,114,105,118,101,
                   114,32,105,115,32,105,109,112,108,101,109,101,110,116,101,
                   100,44,32,111,110,101,32,119,111,117,108,100,32,112,114,
                   101,102,101,114,97,98,108,121,32,119,114,105,116,101,32,97,
                   110,32,69,114,108,97,110,103,32,105,110,116,101,114,102,97,
                   99,101,32,102,111,114,32,116,104,101,32,100,114,105,118,
                   101,114,32,116,111,32,98,101,32,97,98,108,101,32,116,111,
                   32,116,101,115,116,32,116,104,101,32,102,117,110,99,116,
                   105,111,110,97,108,105,116,121,32,111,102,32,116,104,101,
                   32,100,114,105,118,101,114,32,115,101,112,97,114,97,116,
                   101,108,121,46,32,84,104,105,115,32,105,110,116,101,114,
                   102,97,99,101,32,99,97,110,32,116,104,101,110,32,98,101,32,
                   117,115,101,100,32,98,121,32,116,104,101,32,100,105,115,
                   116,114,105,98,117,116,105,111,110,32,109,111,100,117,108,
                   101,44,32,119,104,105,99,104,32,119,105,108,108,32,99,111,
                   118,101,114,32,116,104,101,32,100,101,116,97,105,108,115,
                   32,111,102,32,116,104,101,32,112,114,111,116,111,99,111,
                   108,32,102,114,111,109,32,116,104,101]}],
                0,false},
               {text,"\f*net_kernel*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text," The easiest path is to mimic the"}],0,false},
               {text,[6,42,105,110,101,116,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\n*inet_tcp*"},
               {sep,
                [{text,
                  "¾interfaces, but not much functionality in those modules needs to be implemented. In the example application, only a few of the usual interfaces are implemented, and they are much simplified."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text," ## Writing a Distribution Module"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÌWhen the protocol is available to Erlang through a driver and an Erlang interface module, a distribution module can be written. The distribution module is a module with well-defined callbacks, much like a"}],
                0,false},
               {text,"\f*gen_server*"},
               {sep,
                [{text,
                  "Z(there is no compiler support for checking the callbacks, though). This module implements:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  "7The details of finding other nodes (that is, talking to"}],
                0,false},
               {text,[6,42,101,112,109,100,42]},
               {sep,
                [{text,
                  [21,111,114,32,115,111,109,101,116,104,105,110,103,32,115,
                   105,109,105,108,97,114,41]}],
                0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},{text,"#Creating a listen port (or similar)"}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {text,
             [25,67,111,110,110,101,99,116,105,110,103,32,116,111,32,111,116,
              104,101,114,32,110,111,100,101,115]}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {text,"-Performing the handshakes/cookie verification"}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\"There is however a utility module,"}],0,false},
               {text,"\v*dist_util*"},
               {sep,
                [{text,
                  "^, which does most of the hard work of handling handshakes, cookies, timers, and ticking. Using"}],
                0,false},
               {text,"\v*dist_util*"},
               {sep,
                [{text,
                  "amakes implementing a distribution module much easier and that is done in the example application."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,32,67,114,101,97,116,105,110,103,32,66,111,111,116,32,
             83,99,114,105,112,116,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [323,84,104,101,32,108,97,115,116,32,115,116,101,112,32,105,
                 115,32,116,111,32,99,114,101,97,116,101,32,98,111,111,116,32,
                 115,99,114,105,112,116,115,32,116,111,32,109,97,107,101,32,
                 116,104,101,32,112,114,111,116,111,99,111,108,32,105,109,112,
                 108,101,109,101,110,116,97,116,105,111,110,32,97,118,97,105,
                 108,97,98,108,101,32,97,116,32,98,111,111,116,32,116,105,109,
                 101,46,32,84,104,101,32,105,109,112,108,101,109,101,110,116,
                 97,116,105,111,110,32,99,97,110,32,98,101,32,100,101,98,117,
                 103,103,101,100,32,98,121,32,115,116,97,114,116,105,110,103,
                 32,116,104,101,32,100,105,115,116,114,105,98,117,116,105,111,
                 110,32,119,104,101,110,32,97,108,108,32,116,104,101,32,115,
                 121,115,116,101,109,32,105,115,32,114,117,110,110,105,110,
                 103,44,32,98,117,116,32,105,110,32,97,32,114,101,97,108,32,
                 115,121,115,116,101,109,32,116,104,101,32,100,105,115,116,
                 114,105,98,117,116,105,111,110,32,105,115,32,116,111,32,115,
                 116,97,114,116,32,118,101,114,121,32,101,97,114,108,121,44,
                 32,119,104,121,32,97,32,98,111,111,116,32,115,99,114,105,112,
                 116,32,97,110,100,32,115,111,109,101,32,99,111,109,109,97,
                 110,100,45,108,105,110,101,32,112,97,114,97,109,101,116,101,
                 114,115,32,97,114,101,32,110,101,99,101,115,115,97,114,121,
                 46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÃThis step also implies that the Erlang code in the interface and distribution modules is written in such a way that it can be run in the startup phase. In particular, there can be no calls to the"}],
                0,false},
               {text,"\r*application*"},
               {sep,
                [{text,
                  "?module or to any modules not loaded at boot time. That is, only"}],
                0,false},
               {text,"\b*Kernel*"},
               {sep,[{text,[1,44]}],0,false},
               {text,"\b*STDLIB*"},
               {sep,
                [{text,"), and the application itself can be used."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}},
   {sep,
    [{text,"5<a name=\"distribution_module\">distribution_module</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [22,35,35,32,68,105,115,116,114,105,98,117,116,105,111,110,32,77,111,
          100,117,108,101]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"*The distribution module expose an API that"}],
             0,false},
            {text,"\f*net_kernel*"},
            {sep,
             [{text,
               "Zcall in order to manage connections to other nodes. The module name should have the suffix"}],
             0,false},
            {text,[7,42,95,100,105,115,116,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [589,84,104,101,32,109,111,100,117,108,101,32,110,101,101,100,
              115,32,116,111,32,99,114,101,97,116,101,32,115,111,109,101,32,
              107,105,110,100,32,111,102,32,108,105,115,116,101,110,105,110,
              103,32,101,110,116,105,116,121,32,40,112,114,111,99,101,115,115,
              32,111,114,32,112,111,114,116,41,32,97,110,100,32,97,110,32,97,
              99,99,101,112,116,111,114,32,112,114,111,99,101,115,115,32,116,
              104,97,116,32,97,99,99,101,112,116,115,32,105,110,99,111,109,
              105,110,103,32,99,111,110,110,101,99,116,105,111,110,115,32,117,
              115,105,110,103,32,116,104,101,32,108,105,115,116,101,110,105,
              110,103,32,101,110,116,105,116,121,46,32,70,111,114,32,101,97,
              99,104,32,99,111,110,110,101,99,116,105,111,110,44,32,116,104,
              101,32,109,111,100,117,108,101,32,97,116,32,108,101,97,115,116,
              32,110,101,101,100,115,32,116,111,32,99,114,101,97,116,101,32,
              111,110,101,32,99,111,110,110,101,99,116,105,111,110,32,115,117,
              112,101,114,118,105,115,111,114,32,112,114,111,99,101,115,115,
              44,32,119,104,105,99,104,32,97,108,115,111,32,105,115,32,114,
              101,115,112,111,110,115,105,98,108,101,32,102,111,114,32,116,
              104,101,32,104,97,110,100,115,104,97,107,101,32,119,104,101,110,
              32,115,101,116,116,105,110,103,32,117,112,32,116,104,101,32,99,
              111,110,110,101,99,116,105,111,110,44,32,97,110,100,32,97,32,
              100,105,115,116,114,105,98,117,116,105,111,110,32,99,111,110,
              116,114,111,108,108,101,114,32,40,112,114,111,99,101,115,115,32,
              111,114,32,112,111,114,116,41,32,114,101,115,112,111,110,115,
              105,98,108,101,32,102,111,114,32,116,114,97,110,115,112,111,114,
              116,32,111,102,32,100,97,116,97,32,111,118,101,114,32,116,104,
              101,32,99,111,110,110,101,99,116,105,111,110,46,32,84,104,101,
              32,100,105,115,116,114,105,98,117,116,105,111,110,32,99,111,110,
              116,114,111,108,108,101,114,32,97,110,100,32,116,104,101,32,99,
              111,110,110,101,99,116,105,111,110,32,115,117,112,101,114,118,
              105,115,111,114,32,112,114,111,99,101,115,115,32,115,104,111,
              117,108,100,32,98,101,32,108,105,110,107,101,100,32,116,111,103,
              101,116,104,101,114,32,115,111,32,98,111,116,104,32,111,102,32,
              116,104,101,109,32,97,114,101,32,99,108,101,97,110,101,100,32,
              117,112,32,119,104,101,110,32,116,104,101,32,99,111,110,110,101,
              99,116,105,111,110,32,105,115,32,116,97,107,101,110,32,100,111,
              119,110,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [437,78,111,116,101,32,116,104,97,116,32,116,104,101,114,101,32,
              110,101,101,100,32,116,111,32,98,101,32,101,120,97,99,116,108,
              121,32,111,110,101,32,100,105,115,116,114,105,98,117,116,105,
              111,110,32,99,111,110,116,114,111,108,108,101,114,32,112,101,
              114,32,99,111,110,110,101,99,116,105,111,110,46,32,65,32,112,
              114,111,99,101,115,115,32,111,114,32,112,111,114,116,32,99,97,
              110,32,111,110,108,121,32,98,101,32,100,105,115,116,114,105,98,
              117,116,105,111,110,32,99,111,110,116,114,111,108,108,101,114,
              32,102,111,114,32,111,110,101,32,99,111,110,110,101,99,116,105,
              111,110,46,32,84,104,101,32,114,101,103,105,115,116,114,97,116,
              105,111,110,32,97,115,32,100,105,115,116,114,105,98,117,116,105,
              111,110,32,99,111,110,116,114,111,108,108,101,114,32,99,97,110,
              110,111,116,32,98,101,32,117,110,100,111,110,101,46,32,73,116,
              32,119,105,108,108,32,115,116,105,99,107,32,117,110,116,105,108,
              32,116,104,101,32,100,105,115,116,114,105,98,117,116,105,111,
              110,32,99,111,110,116,114,111,108,108,101,114,32,116,101,114,
              109,105,110,97,116,101,115,46,32,84,104,101,32,100,105,115,116,
              114,105,98,117,116,105,111,110,32,99,111,110,116,114,111,108,
              108,101,114,32,115,104,111,117,108,100,32,110,111,116,32,105,
              103,110,111,114,101,32,101,120,105,116,32,115,105,103,110,97,
              108,115,46,32,73,116,32,105,115,32,97,108,108,111,119,101,100,
              32,116,111,32,116,114,97,112,32,101,120,105,116,115,44,32,98,
              117,116,32,105,116,32,115,104,111,117,108,100,32,116,104,101,
              110,32,118,111,108,117,110,116,97,114,105,108,121,32,116,101,
              114,109,105,110,97,116,101,32,119,104,101,110,32,97,110,32,101,
              120,105,116,32,115,105,103,110,97,108,32,105,115,32,114,101,99,
              101,105,118,101,100,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BAn example implementation of a distribution module can be found in"}],
             0,false},
            {text,
             "R[$ERL_TOP/lib/kernel/examples/gen_tcp_dist/src/gen_tcp_dist.erl](gen_tcp_dist.erl)"},
            {sep,
             [{text,
               "6. It implements the distribution over TCP/IP using the"}],
             0,false},
            {text,"\t*gen_tcp*"},
            {sep,
             [{text,
               [153,65,80,73,32,119,105,116,104,32,100,105,115,116,114,105,98,
                117,116,105,111,110,32,99,111,110,116,114,111,108,108,101,114,
                115,32,105,109,112,108,101,109,101,110,116,101,100,32,98,121,
                32,112,114,111,99,101,115,115,101,115,46,32,84,104,105,115,32,
                105,110,115,116,101,97,100,32,111,102,32,117,115,105,110,103,
                32,112,111,114,116,32,100,105,115,116,114,105,98,117,116,105,
                111,110,32,99,111,110,116,114,111,108,108,101,114,115,32,97,
                115,32,116,104,101,32,111,114,100,105,110,97,114,121,32,84,67,
                80,47,73,80,32,100,105,115,116,114,105,98,117,116,105,111,110,
                32,117,115,101,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        "m<a name=\"distribution_module_exported_callback_functions\">distribution_module_exported_callback_functions</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [30,35,35,32,69,120,112,111,114,116,101,100,32,67,97,108,108,98,97,
            99,107,32,70,117,110,99,116,105,111,110,115]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,[{text,"&The following functions are mandatory:"}],0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {text,[4,60,100,108,62]},
         {nest,4,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{sep,
                             [{text,[6,108,105,115,116,101,110]},
                              {text,
                               [15,108,105,115,116,101,110,40,78,97,109,101,
                                41,32,45,62]},
                              {above,{above,null,null},null},
                              {sep,[{text,[2,194,160]}],0,false},
                              {sep,[{text,[2,194,160]}],0,false},
                              {text,
                               "2{ok, {Listen, Address, Creation}} | {error, Error}"}],
                             0,false}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {sep,
                           [{above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{text,"\blisten/1"},
                                   {sep,
                                    [{text,
                                      [134,105,115,32,99,97,108,108,101,100,
                                       32,111,110,99,101,32,105,110,32,111,
                                       114,100,101,114,32,116,111,32,108,105,
                                       115,116,101,110,32,102,111,114,32,105,
                                       110,99,111,109,105,110,103,32,99,111,
                                       110,110,101,99,116,105,111,110,32,114,
                                       101,113,117,101,115,116,115,46,32,84,
                                       104,101,32,99,97,108,108,32,105,115,32,
                                       109,97,100,101,32,119,104,101,110,32,
                                       116,104,101,32,100,105,115,116,114,105,
                                       98,117,116,105,111,110,32,105,115,32,
                                       98,114,111,117,103,104,116,32,117,112,
                                       46,32,84,104,101,32,97,114,103,117,109,
                                       101,110,116]}],
                                    0,false},
                                   {text,[4,78,97,109,101]},
                                   {sep,
                                    [{text,
                                      "'is the part of the node name before the"}],
                                    0,false},
                                   {text,[1,64]},
                                   {sep,
                                    [{text,
                                      "Asign in the full node name. It can be either an atom or a string."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      [30,84,104,101,32,114,101,116,117,114,
                                       110,32,118,97,108,117,101,32,99,111,
                                       110,115,105,115,116,115,32,111,102,32,
                                       97]}],
                                    0,false},
                                   {text,[6,76,105,115,116,101,110]},
                                   {sep,
                                    [{text,
                                      "$handle (which is later passed to the"}],
                                    0,false},
                                   {text,[6,97,99,99,101,112,116]},
                                   {sep,[{text,"\ncallback),"}],0,false},
                                   {text,[7,65,100,100,114,101,115,115]},
                                   {sep,[{text,"\nwhich is a"}],0,false},
                                   {text,
                                    [14,35,110,101,116,95,97,100,100,114,101,
                                     115,115,123,125]},
                                   {sep,
                                    [{text,
                                      ";record with information about the address for the node (the"}],
                                    0,false},
                                   {text,
                                    [14,35,110,101,116,95,97,100,100,114,101,
                                     115,115,123,125]},
                                   {sep,
                                    [{text,
                                      [20,114,101,99,111,114,100,32,105,115,
                                       32,100,101,102,105,110,101,100,32,105,
                                       110]}],
                                    0,false},
                                   {text,
                                    [30,107,101,114,110,101,108,47,105,110,99,
                                     108,117,100,101,47,110,101,116,95,97,100,
                                     100,114,101,115,115,46,104,114,108]},
                                   {sep,
                                    [{text,[6,41,44,32,97,110,100]}],
                                    0,false},
                                   {text,"\bCreation"},
                                   {sep,
                                    [{text,
                                      [31,119,104,105,99,104,32,40,99,117,114,
                                       114,101,110,116,108,121,41,32,105,115,
                                       32,97,110,32,105,110,116,101,103,101,
                                       114]}],
                                    0,false},
                                   {text,[1,49]},
                                   {sep,[{text,[1,44]}],0,false},
                                   {text,[1,50]},
                                   {sep,[{text,[4,44,32,111,114]}],0,false},
                                   {text,[1,51]},
                                   {sep,[{text,[1,46]}],0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,[{text,[2,73,102]}],0,false},
                                   {text,"\terts/epmd"},
                                   {sep,
                                    [{text,
                                      "\\is to be used for node discovery, you typically want to use the (unfortunately undocumented)"}],
                                    0,false},
                                   {text,"\berl_epmd"},
                                   {sep,
                                    [{text,
                                      [19,109,111,100,117,108,101,32,40,112,
                                       97,114,116,32,111,102,32,116,104,101]}],
                                    0,false},
                                   {text,[6,107,101,114,110,101,108]},
                                   {sep,
                                    [{text,
                                      "6application) in order to register the listen port with"}],
                                    0,false},
                                   {text,[4,101,112,109,100]},
                                   {sep,[{text,"\fand retrieve"}],0,false},
                                   {text,"\bCreation"},
                                   {sep,
                                    [{text,[7,116,111,32,117,115,101,46]}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}}],
                           0,false},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{sep,
                            [{text,[6,97,99,99,101,112,116]},
                             {text,
                              [17,97,99,99,101,112,116,40,76,105,115,116,101,
                               110,41,32,45,62]},
                             {above,{above,null,null},null},
                             {sep,[{text,[2,194,160]}],0,false},
                             {sep,[{text,[2,194,160]}],0,false},
                             {text,"\vAcceptorPid"}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {sep,
                         [{above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,"\baccept/1"},
                                 {sep,
                                  [{text,
                                    "Zshould spawn a process that accepts connections. This process should preferably execute on"}],
                                  0,false},
                                 {text,[3,109,97,120]},
                                 {sep,
                                  [{text,
                                    "Dpriority. The process identifier of this process should be returned."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,[{text,[3,84,104,101]}],0,false},
                                 {text,[6,76,105,115,116,101,110]},
                                 {sep,
                                  [{text," argument will be the same as the"}],
                                  0,false},
                                 {text,[6,76,105,115,116,101,110]},
                                 {sep,
                                  [{text,
                                    "&handle part of the return value of the"}],
                                  0,false},
                                 {text,[6,108,105,115,116,101,110]},
                                 {sep,
                                  [{text,
                                    [15,99,97,108,108,98,97,99,107,32,97,98,
                                     111,118,101,46]}],
                                  0,false},
                                 {text,"\baccept/1"},
                                 {sep,
                                  [{text,
                                    ">is called only once when the distribution protocol is started."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    "3The caller of this function is a representative for"}],
                                  0,false},
                                 {text,"\nnet_kernel"},
                                 {sep,
                                  [{text,
                                    "1(this may or may not be the process registered as"}],
                                  0,false},
                                 {text,"\nnet_kernel"},
                                 {sep,
                                  [{text,
                                    "') and is in this document identified as"}],
                                  0,false},
                                 {text,[6,75,101,114,110,101,108]},
                                 {sep,
                                  [{text,
                                    "Q. When a connection has been accepted by the acceptor process, it needs to inform"}],
                                  0,false},
                                 {text,[6,75,101,114,110,101,108]},
                                 {sep,
                                  [{text,
                                    "Mabout the accepted connection. This is done by passing a message on the form:"}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {above,
                              {above,
                               {text,[3,96,96,96]},
                               {sep,
                                [{text,
                                  "=Kernel ! {accept, AcceptorPid, DistController, Family, Proto}"}],
                                0,true}},
                              {text,[3,96,96,96]}},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  [14,68,105,115,116,67,111,110,116,114,111,
                                   108,108,101,114]},
                                 {sep,
                                  [{text,
                                    "øis either the process or port identifier of the distribution controller for the connection. The distribution controller should be created by the acceptor processes when a new connection is accepted. Its job is to dispatch traffic on the connection."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[6,75,101,114,110,101,108]},
                          {sep,
                           [{text,
                             ",responds with one of the following messages:"}],
                           0,false},
                          {above,
                           {above,
                            {text,[4,60,100,108,62]},
                            {nest,4,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,
                                      [{text,
                                        "#{Kernel, controller, SupervisorPid}"}],
                                      0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,100,62]},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{sep,
                                           [{sep,
                                             [{text,
                                               [28,84,104,101,32,114,101,113,
                                                117,101,115,116,32,119,97,115,
                                                32,97,99,99,101,112,116,101,
                                                100,32,97,110,100]}],
                                             0,false},
                                            {text,"\rSupervisorPid"},
                                            {sep,
                                             [{text,
                                               "Wis the process identifier of the connection supervisor process (which is created in the"}],
                                             0,false},
                                            {text,
                                             [17,97,99,99,101,112,116,95,99,
                                              111,110,110,101,99,116,105,111,
                                              110]},
                                            {sep,
                                             [{text,"\ncallback)."}],
                                             0,false}],
                                           0,false}],
                                         0,true},
                                        null},
                                       null}},
                                     {text,[5,60,47,100,100,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,
                                     [{text,
                                       [30,123,75,101,114,110,101,108,44,32,
                                        117,110,115,117,112,112,111,114,116,
                                        101,100,95,112,114,111,116,111,99,111,
                                        108,125]}],
                                     0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,100,62]},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{sep,
                                         [{text,
                                           "WThe request was rejected. This is a fatal error. The acceptor process should terminate."}],
                                         0,false}],
                                       0,true},
                                      null},
                                     null}},
                                   {text,[5,60,47,100,100,62]}],
                                  0,true},
                                 null},
                                null}}}}},
                           {text,[5,60,47,100,108,62]}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  "sWhen an accept sequence has been completed the acceptor process is expected to continue accepting further requests."}],
                                0,false}],
                              0,true},
                             null},
                            null}}],
                         0,false},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{sep,
                          [{text,
                            [17,97,99,99,101,112,116,95,99,111,110,110,101,99,
                             116,105,111,110]},
                           {text,
                            "Gaccept_connection(AcceptorPid, DistCtrl, MyNode, Allowed, SetupTime) ->"},
                           {above,{above,null,null},null},
                           {sep,[{text,[2,194,160]}],0,false},
                           {sep,[{text,[2,194,160]}],0,false},
                           {text,
                            [23,67,111,110,110,101,99,116,105,111,110,83,117,
                             112,101,114,118,105,115,111,114,80,105,100]}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {sep,
                       [{above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,
                                [19,97,99,99,101,112,116,95,99,111,110,110,
                                 101,99,116,105,111,110,47,53]},
                               {sep,
                                [{text,
                                  "ëshould spawn a process that will perform the Erlang distribution handshake for the connection. If the handshake successfully completes it should continue to function as a connection supervisor. This process should preferably execute on"}],
                                0,false},
                               {text,[3,109,97,120]},
                               {sep,[{text,"\tpriority."}],0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,
                                [14,84,104,101,32,97,114,103,117,109,101,110,
                                 116,115,58]}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,
                          {text,[4,60,100,108,62]},
                          {nest,4,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,116,62]},
                                         {sep,
                                          [{text,"\vAcceptorPid"}],
                                          0,false},
                                         {text,[5,60,47,100,116,62]}],
                                        0,true},
                                       null},
                                      null}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,100,62]},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{sep,
                                               [{sep,
                                                 [{text,
                                                   "0Process identifier of the process created by the"}],
                                                 0,false},
                                                {text,
                                                 [6,97,99,99,101,112,116]},
                                                {sep,
                                                 [{text,"\tcallback."}],
                                                 0,false}],
                                               0,false}],
                                             0,true},
                                            null},
                                           null}},
                                         {text,[5,60,47,100,100,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,116,62]},
                                        {sep,[{text,"\bDistCtrl"}],0,false},
                                        {text,[5,60,47,100,116,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,100,62]},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 "oThe identifier of the distribution controller identifier created by the acceptor process. To be passed along to"}],
                                               0,false},
                                              {text,
                                               ")dist_util:handshake_other_started(HsData)"},
                                              {sep,[{text,[1,46]}],0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {text,[5,60,47,100,100,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,116,62]},
                                      {sep,
                                       [{text,[6,77,121,78,111,100,101]}],
                                       0,false},
                                      {text,[5,60,47,100,116,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,100,62]},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{sep,
                                           [{sep,
                                             [{text,
                                               "-Node name of this node. To be passed along to"}],
                                             0,false},
                                            {text,
                                             ")dist_util:handshake_other_started(HsData)"},
                                            {sep,[{text,[1,46]}],0,false}],
                                           0,false}],
                                         0,true},
                                        null},
                                       null}},
                                     {text,[5,60,47,100,100,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,
                                     [{text,[7,65,108,108,111,119,101,100]}],
                                     0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,100,62]},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{sep,
                                         [{sep,
                                           [{text,
                                             [21,84,111,32,98,101,32,112,97,
                                              115,115,101,100,32,97,108,111,
                                              110,103,32,116,111]}],
                                           0,false},
                                          {text,
                                           ")dist_util:handshake_other_started(HsData)"},
                                          {sep,[{text,[1,46]}],0,false}],
                                         0,false}],
                                       0,true},
                                      null},
                                     null}},
                                   {text,[5,60,47,100,100,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,[{text,"\tSetupTime"}],0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{sep,
                                         [{text,
                                           "1Time used for creating a setup timer by a call to"}],
                                         0,false},
                                        {text,
                                         " dist_util:start_timer(SetupTime)"},
                                        {sep,
                                         [{text,
                                           "%. The timer should be passed along to"}],
                                         0,false},
                                        {text,
                                         ")dist_util:handshake_other_started(HsData)"},
                                        {sep,[{text,[1,46]}],0,false}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}}}},
                         {text,[5,60,47,100,108,62]}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  "`The created process should provide callbacks and other information needed for the handshake in a"}],
                                0,false},
                               {text,
                                [14,104,115,95,100,97,116,97,95,114,101,99,
                                 111,114,100]},
                               {sep,
                                [{text,
                                  [15,114,101,99,111,114,100,32,97,110,100,32,
                                   99,97,108,108]}],
                                0,false},
                               {text,
                                ")dist_util:handshake_other_started(HsData)"},
                               {sep,
                                [{text,
                                  [17,119,105,116,104,32,116,104,105,115,32,
                                   114,101,99,111,114,100,46]}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,
                                ")dist_util:handshake_other_started(HsData)"},
                               {sep,
                                [{text,
                                  "§will perform the handshake and if the handshake successfully completes this process will then continue in a connection supervisor loop as long as the connection is up."}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}}],
                       0,false},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{sep,
                        [{text,[5,115,101,116,117,112]},
                         {text,
                          "9setup(Node, Type, MyNode, LongOrShortNames, SetupTime) ->"},
                         {above,{above,null,null},null},
                         {sep,[{text,[2,194,160]}],0,false},
                         {sep,[{text,[2,194,160]}],0,false},
                         {text,
                          [23,67,111,110,110,101,99,116,105,111,110,83,117,
                           112,101,114,118,105,115,111,114,80,105,100]}],
                        0,false}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,[7,115,101,116,117,112,47,53]},
                             {sep,
                              [{text,
                                "'should spawn a process that connects to"}],
                              0,false},
                             {text,[4,78,111,100,101]},
                             {sep,
                              [{text,
                                "û. When connection has been established it should perform the Erlang distribution handshake for the connection. If the handshake successfully completes it should continue to function as a connection supervisor. This process should preferably execute on"}],
                              0,false},
                             {text,[3,109,97,120]},
                             {sep,[{text,"\tpriority."}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              [14,84,104,101,32,97,114,103,117,109,101,110,
                               116,115,58]}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,
                        {text,[4,60,100,108,62]},
                        {nest,4,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,
                                        [{text,[4,78,111,100,101]}],
                                        0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,100,62]},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 "/Node name of remote node. To be passed along to"}],
                                               0,false},
                                              {text,
                                               "&dist_util:handshake_we_started(HsData)"},
                                              {sep,[{text,[1,46]}],0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {text,[5,60,47,100,100,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,116,62]},
                                      {sep,
                                       [{text,[4,84,121,112,101]}],
                                       0,false},
                                      {text,[5,60,47,100,116,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,100,62]},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{sep,
                                           [{sep,
                                             [{text,
                                               "&Connection type. To be passed along to"}],
                                             0,false},
                                            {text,
                                             "&dist_util:handshake_we_started(HsData)"},
                                            {sep,[{text,[1,46]}],0,false}],
                                           0,false}],
                                         0,true},
                                        null},
                                       null}},
                                     {text,[5,60,47,100,100,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,
                                     [{text,[6,77,121,78,111,100,101]}],
                                     0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,100,62]},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{sep,
                                         [{sep,
                                           [{text,
                                             "-Node name of this node. To be passed along to"}],
                                           0,false},
                                          {text,
                                           "&dist_util:handshake_we_started(HsData)"},
                                          {sep,[{text,[1,46]}],0,false}],
                                         0,false}],
                                       0,true},
                                      null},
                                     null}},
                                   {text,[5,60,47,100,100,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,
                                   [{text,
                                     [16,76,111,110,103,79,114,83,104,111,114,
                                      116,78,97,109,101,115]}],
                                   0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{sep,
                                         [{text,
                                           [15,69,105,116,104,101,114,32,116,
                                            104,101,32,97,116,111,109]}],
                                         0,false},
                                        {text,"\tlongnames"},
                                        {sep,[{text,"\vor the atom"}],0,false},
                                        {text,"\nshortnames"},
                                        {sep,
                                         [{text,
                                           "/indicating whether long or short names is used."}],
                                         0,false}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,[{text,"\tSetupTime"}],0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{sep,
                                       [{text,
                                         "1Time used for creating a setup timer by a call to"}],
                                       0,false},
                                      {text,
                                       " dist_util:start_timer(SetupTime)"},
                                      {sep,
                                       [{text,
                                         "%. The timer should be passed along to"}],
                                       0,false},
                                      {text,
                                       "&dist_util:handshake_we_started(HsData)"},
                                      {sep,[{text,[1,46]}],0,false}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}}}},
                       {text,[5,60,47,100,108,62]}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "3The caller of this function is a representative for"}],
                              0,false},
                             {text,"\nnet_kernel"},
                             {sep,
                              [{text,
                                "1(this may or may not be the process registered as"}],
                              0,false},
                             {text,"\nnet_kernel"},
                             {sep,
                              [{text,
                                "') and is in this document identified as"}],
                              0,false},
                             {text,[6,75,101,114,110,101,108]},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              "ÐThis function should, besides spawning the connection supervisor, also create a distribution controller. The distribution controller is either a process or a port which is responsible for dispatching traffic."}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "`The created process should provide callbacks and other information needed for the handshake in a"}],
                              0,false},
                             {text,
                              [14,104,115,95,100,97,116,97,95,114,101,99,111,
                               114,100]},
                             {sep,
                              [{text,
                                [15,114,101,99,111,114,100,32,97,110,100,32,
                                 99,97,108,108]}],
                              0,false},
                             {text,"&dist_util:handshake_we_started(HsData)"},
                             {sep,
                              [{text,
                                [17,119,105,116,104,32,116,104,105,115,32,114,
                                 101,99,111,114,100,46]}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,"&dist_util:handshake_we_started(HsData)"},
                             {sep,
                              [{text,
                                "¤will perform the handshake and the handshake successfully completes this process will then continue in a connection supervisor loop as long as the connection is up."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{sep,
                      [{text,[5,99,108,111,115,101]},
                       {text,
                        [16,99,108,111,115,101,40,76,105,115,116,101,110,41,
                         32,45,62]},
                       {above,{above,null,null},null},
                       {sep,[{text,[2,194,160]}],0,false},
                       {sep,[{text,[2,194,160]}],0,false},
                       {text,[6,118,111,105,100,40,41]}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [28,67,97,108,108,101,100,32,105,110,32,111,114,
                             100,101,114,32,116,111,32,99,108,111,115,101,32,
                             116,104,101]}],
                          0,false},
                         {text,[6,76,105,115,116,101,110]},
                         {sep,
                          [{text,
                            "*handle that originally was passed from the"}],
                          0,false},
                         {text,[6,108,105,115,116,101,110]},
                         {sep,[{text,"\tcallback."}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{text,[6,115,101,108,101,99,116]},
                     {text,
                      [19,115,101,108,101,99,116,40,78,111,100,101,78,97,109,
                       101,41,32,45,62]},
                     {above,{above,null,null},null},
                     {sep,[{text,[2,194,160]}],0,false},
                     {sep,[{text,[2,194,160]}],0,false},
                     {text,"\tboolean()"}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,[{text,[6,82,101,116,117,114,110]}],0,false},
                       {text,[4,116,114,117,101]},
                       {sep,
                        [{text,
                          [28,105,102,32,116,104,101,32,104,111,115,116,32,
                           110,97,109,101,32,112,97,114,116,32,111,102,32,116,
                           104,101]}],
                        0,false},
                       {text,"\bNodeName"},
                       {sep,
                        [{text,
                          "/is valid for use with this protocol; otherwise,"}],
                        0,false},
                       {text,[5,102,97,108,115,101]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}}}},
        {text,[5,60,47,100,108,62]}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               ";There are also two optional functions that may be exported:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {text,[4,60,100,108,62]},
         {nest,4,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{text,[6,115,101,108,101,99,116]},
                      {text,
                       [24,115,101,116,111,112,116,115,40,76,105,115,116,101,
                        110,44,32,79,112,116,115,41,32,45,62]},
                      {above,{above,null,null},null},
                      {sep,[{text,[2,194,160]}],0,false},
                      {sep,[{text,[2,194,160]}],0,false},
                      {text,
                       [19,111,107,32,124,32,123,101,114,114,111,114,44,32,69,
                        114,114,111,114,125]}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,[{text,"\fThe argument"}],0,false},
                         {text,[6,76,105,115,116,101,110]},
                         {sep,
                          [{text,"(is the handle originally passed from the"}],
                          0,false},
                         {text,[6,108,105,115,116,101,110]},
                         {sep,
                          [{text,
                            [22,99,97,108,108,98,97,99,107,46,32,84,104,101,
                             32,97,114,103,117,109,101,110,116]}],
                          0,false},
                         {text,[4,79,112,116,115]},
                         {sep,
                          [{text,
                            "2is a list of options to set on future connections."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{text,[6,115,101,108,101,99,116]},
                     {text,
                      [24,103,101,116,111,112,116,115,40,76,105,115,116,101,
                       110,44,32,79,112,116,115,41,32,45,62]},
                     {above,{above,null,null},null},
                     {sep,[{text,[2,194,160]}],0,false},
                     {sep,[{text,[2,194,160]}],0,false},
                     {text,"#{ok, OptionValues} | {error, Error}"}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,[{text,"\fThe argument"}],0,false},
                       {text,[6,76,105,115,116,101,110]},
                       {sep,
                        [{text,"(is the handle originally passed from the"}],
                        0,false},
                       {text,[6,108,105,115,116,101,110]},
                       {sep,
                        [{text,
                          [22,99,97,108,108,98,97,99,107,46,32,84,104,101,32,
                           97,114,103,117,109,101,110,116]}],
                        0,false},
                       {text,[4,79,112,116,115]},
                       {sep,
                        [{text,
                          "4is a list of options to read for future connections."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}}}},
        {text,[5,60,47,100,108,62]}}],
      0,false},
     {sep,
      [{text,"+<a name=\"hs_data_record\">hs_data_record</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [24,35,35,32,84,104,101,32,35,104,115,95,100,97,116,97,123,125,32,
            82,101,99,111,114,100]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[3,84,104,101]}],0,false},
              {text,"\"*dist_util:handshake_we_started/1*"},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,"%*dist_util:handshake_other_started/1*"},
              {sep,
               [{text,
                 [17,102,117,110,99,116,105,111,110,115,32,116,97,107,101,115,
                  32,97]}],
               0,false},
              {text,"\f*#hs_data{}*"},
              {sep,
               [{text,
                 "qrecord as argument. There are quite a lot of fields in this record that you need to set. The record is defined in"}],
               0,false},
              {text,
               [30,42,107,101,114,110,101,108,47,105,110,99,108,117,100,101,
                47,100,105,115,116,95,117,116,105,108,46,104,114,108,42]},
              {sep,
               [{text,
                 "B. Not documented fields should not be set, i.e., should be left as"}],
               0,false},
              {text,"\v*undefined*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\rThe following"}],0,false},
              {text,"\f*#hs_data{}*"},
              {sep,
               [{text,
                 "5record fields need to be set unless otherwise stated:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {text,[4,60,100,108,62]},
         {nest,4,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {above,
                                             {above,
                                              {above,
                                               {above,
                                                {above,
                                                 {above,
                                                  {above,
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{text,
                                                         [4,60,100,116,62]},
                                                        {sep,
                                                         [{sep,
                                                           [{text,
                                                             [18,104,115,95,
                                                              100,97,116,97,
                                                              95,107,101,114,
                                                              110,101,108,95,
                                                              112,105,100]},
                                                            {text,
                                                             "\nkernel_pid"}],
                                                           0,false}],
                                                         0,false},
                                                        {text,
                                                         [5,60,47,100,116,
                                                          62]}],
                                                       0,true},
                                                      null},
                                                     null}},
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{text,
                                                         [4,60,100,100,62]},
                                                        {above,
                                                         {above,
                                                          {above,
                                                           {text,[0]},
                                                           null},
                                                          null},
                                                         {above,
                                                          {above,
                                                           {sep,
                                                            [{sep,
                                                              [{sep,
                                                                [{text,
                                                                  [25,80,114,
                                                                   111,99,101,
                                                                   115,115,32,
                                                                   105,100,
                                                                   101,110,
                                                                   116,105,
                                                                   102,105,
                                                                   101,114,32,
                                                                   111,102,32,
                                                                   116,104,
                                                                   101]}],
                                                                0,false},
                                                               {text,
                                                                [6,75,101,114,
                                                                 110,101,108]},
                                                               {sep,
                                                                [{text,
                                                                  "0process. That is, the process that called either"}],
                                                                0,false},
                                                               {text,
                                                                [5,115,101,
                                                                 116,117,112]},
                                                               {sep,
                                                                [{text,
                                                                  [2,111,
                                                                   114]}],
                                                                0,false},
                                                               {text,
                                                                [17,97,99,99,
                                                                 101,112,116,
                                                                 95,99,111,
                                                                 110,110,101,
                                                                 99,116,105,
                                                                 111,110]},
                                                               {sep,
                                                                [{text,
                                                                  [1,46]}],
                                                                0,false}],
                                                              0,false}],
                                                            0,true},
                                                           null},
                                                          null}},
                                                        {text,
                                                         [5,60,47,100,100,
                                                          62]}],
                                                       0,true},
                                                      null},
                                                     null}}},
                                                  {above,
                                                   {above,
                                                    {above,{text,[0]},null},
                                                    null},
                                                   {above,
                                                    {above,
                                                     {sep,
                                                      [{text,
                                                        [4,60,100,116,62]},
                                                       {sep,
                                                        [{sep,
                                                          [{text,
                                                            [18,104,115,95,
                                                             100,97,116,97,95,
                                                             111,116,104,101,
                                                             114,95,110,111,
                                                             100,101]},
                                                           {text,
                                                            "\nother_node"}],
                                                          0,false}],
                                                        0,false},
                                                       {text,
                                                        [5,60,47,100,116,62]}],
                                                      0,true},
                                                     null},
                                                    null}}},
                                                 {above,
                                                  {above,
                                                   {above,{text,[0]},null},
                                                   null},
                                                  {above,
                                                   {above,
                                                    {sep,
                                                     [{text,[4,60,100,100,62]},
                                                      {above,
                                                       {above,
                                                        {above,
                                                         {text,[0]},
                                                         null},
                                                        null},
                                                       {above,
                                                        {above,
                                                         {sep,
                                                          [{sep,
                                                            [{sep,
                                                              [{text,
                                                                [132,78,97,
                                                                 109,101,32,
                                                                 111,102,32,
                                                                 116,104,101,
                                                                 32,111,116,
                                                                 104,101,114,
                                                                 32,110,111,
                                                                 100,101,46,
                                                                 32,84,104,
                                                                 105,115,32,
                                                                 102,105,101,
                                                                 108,100,32,
                                                                 105,115,32,
                                                                 111,110,108,
                                                                 121,32,109,
                                                                 97,110,100,
                                                                 97,116,111,
                                                                 114,121,32,
                                                                 119,104,101,
                                                                 110,32,116,
                                                                 104,105,115,
                                                                 32,110,111,
                                                                 100,101,32,
                                                                 105,110,105,
                                                                 116,105,97,
                                                                 116,101,115,
                                                                 32,116,104,
                                                                 101,32,99,
                                                                 111,110,110,
                                                                 101,99,116,
                                                                 105,111,110,
                                                                 46,32,84,104,
                                                                 97,116,32,
                                                                 105,115,44,
                                                                 32,119,104,
                                                                 101,110,32,
                                                                 99,111,110,
                                                                 110,101,99,
                                                                 116,105,111,
                                                                 110,32,105,
                                                                 115,32,115,
                                                                 101,116,32,
                                                                 117,112,32,
                                                                 118,105,97]}],
                                                              0,false},
                                                             {text,
                                                              [5,115,101,116,
                                                               117,112]},
                                                             {sep,
                                                              [{text,[1,46]}],
                                                              0,false}],
                                                            0,false}],
                                                          0,true},
                                                         null},
                                                        null}},
                                                      {text,
                                                       [5,60,47,100,100,62]}],
                                                     0,true},
                                                    null},
                                                   null}}},
                                                {above,
                                                 {above,
                                                  {above,{text,[0]},null},
                                                  null},
                                                 {above,
                                                  {above,
                                                   {sep,
                                                    [{text,[4,60,100,116,62]},
                                                     {sep,
                                                      [{sep,
                                                        [{text,
                                                          [17,104,115,95,100,
                                                           97,116,97,95,116,
                                                           104,105,115,95,110,
                                                           111,100,101]},
                                                         {text,"\tthis_node"}],
                                                        0,false}],
                                                      0,false},
                                                     {text,
                                                      [5,60,47,100,116,62]}],
                                                    0,true},
                                                   null},
                                                  null}}},
                                               {above,
                                                {above,
                                                 {above,{text,[0]},null},
                                                 null},
                                                {above,
                                                 {above,
                                                  {sep,
                                                   [{text,[4,60,100,100,62]},
                                                    {above,
                                                     {above,
                                                      {above,{text,[0]},null},
                                                      null},
                                                     {above,
                                                      {above,
                                                       {sep,
                                                        [{sep,
                                                          [{text,
                                                            "\eThe node name of this node."}],
                                                          0,false}],
                                                        0,true},
                                                       null},
                                                      null}},
                                                    {text,
                                                     [5,60,47,100,100,62]}],
                                                   0,true},
                                                  null},
                                                 null}}},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{text,[4,60,100,116,62]},
                                                   {sep,
                                                    [{sep,
                                                      [{text,
                                                        [14,104,115,95,100,97,
                                                         116,97,95,115,111,99,
                                                         107,101,116]},
                                                       {text,
                                                        [6,115,111,99,107,101,
                                                         116]}],
                                                      0,false}],
                                                    0,false},
                                                   {text,
                                                    [5,60,47,100,116,62]}],
                                                  0,true},
                                                 null},
                                                null}}},
                                             {above,
                                              {above,
                                               {above,{text,[0]},null},
                                               null},
                                              {above,
                                               {above,
                                                {sep,
                                                 [{text,[4,60,100,100,62]},
                                                  {above,
                                                   {above,
                                                    {above,{text,[0]},null},
                                                    null},
                                                   {above,
                                                    {above,
                                                     {sep,
                                                      [{sep,
                                                        [{text,
                                                          ".The identifier of the distribution controller."}],
                                                        0,false}],
                                                      0,true},
                                                     null},
                                                    null}},
                                                  {text,[5,60,47,100,100,62]}],
                                                 0,true},
                                                null},
                                               null}}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{text,[4,60,100,116,62]},
                                                 {sep,
                                                  [{sep,
                                                    [{text,"\rhs_data_timer"},
                                                     {text,
                                                      [5,116,105,109,101,
                                                       114]}],
                                                    0,false}],
                                                  0,false},
                                                 {text,[5,60,47,100,116,62]}],
                                                0,true},
                                               null},
                                              null}}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{text,[4,60,100,100,62]},
                                                {above,
                                                 {above,
                                                  {above,{text,[0]},null},
                                                  null},
                                                 {above,
                                                  {above,
                                                   {sep,
                                                    [{sep,
                                                      [{sep,
                                                        [{text,
                                                          [23,84,104,101,32,
                                                           116,105,109,101,
                                                           114,32,99,114,101,
                                                           97,116,101,100,32,
                                                           117,115,105,110,
                                                           103]}],
                                                        0,false},
                                                       {text,
                                                        [23,100,105,115,116,
                                                         95,117,116,105,108,
                                                         58,115,116,97,114,
                                                         116,95,116,105,109,
                                                         101,114,47,49]},
                                                       {sep,
                                                        [{text,[1,46]}],
                                                        0,false}],
                                                      0,false}],
                                                    0,true},
                                                   null},
                                                  null}},
                                                {text,[5,60,47,100,100,62]}],
                                               0,true},
                                              null},
                                             null}}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{text,[4,60,100,116,62]},
                                               {sep,
                                                [{sep,
                                                  [{text,
                                                    [15,104,115,95,100,97,116,
                                                     97,95,97,108,108,111,119,
                                                     101,100]},
                                                   {text,
                                                    [7,97,108,108,111,119,101,
                                                     100]}],
                                                  0,false}],
                                                0,false},
                                               {text,[5,60,47,100,116,62]}],
                                              0,true},
                                             null},
                                            null}}},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{text,[4,60,100,100,62]},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{sep,
                                                    [{sep,
                                                      [{text,
                                                        [21,73,110,102,111,
                                                         114,109,97,116,105,
                                                         111,110,32,112,97,
                                                         115,115,101,100,32,
                                                         97,115]}],
                                                      0,false},
                                                     {text,
                                                      [7,65,108,108,111,119,
                                                       101,100]},
                                                     {sep,
                                                      [{text,[2,116,111]}],
                                                      0,false},
                                                     {text,
                                                      [19,97,99,99,101,112,
                                                       116,95,99,111,110,110,
                                                       101,99,116,105,111,110,
                                                       47,53]},
                                                     {sep,
                                                      [{text,
                                                        "x. This field is only mandatory when the remote node initiated the connection. That is, when the connection is set up via"}],
                                                      0,false},
                                                     {text,
                                                      [17,97,99,99,101,112,
                                                       116,95,99,111,110,110,
                                                       101,99,116,105,111,
                                                       110]},
                                                     {sep,
                                                      [{text,[1,46]}],
                                                      0,false}],
                                                    0,false}],
                                                  0,true},
                                                 null},
                                                null}},
                                              {text,[5,60,47,100,100,62]}],
                                             0,true},
                                            null},
                                           null}}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{text,[4,60,100,116,62]},
                                             {sep,
                                              [{sep,
                                                [{text,
                                                  [14,104,115,95,100,97,116,
                                                   97,95,102,95,115,101,110,
                                                   100]},
                                                 {text,
                                                  [6,102,95,115,101,110,100]}],
                                                0,false}],
                                              0,false},
                                             {text,[5,60,47,100,116,62]}],
                                            0,true},
                                           null},
                                          null}}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,100,62]},
                                            {sep,
                                             [{above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{sep,
                                                    [{text,
                                                      "#A fun with the following signature:"}],
                                                    0,false}],
                                                  0,true},
                                                 null},
                                                null}},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {above,
                                                  {above,
                                                   {text,[3,96,96,96]},
                                                   {sep,
                                                    [{text,
                                                      ",fun (DistCtrlr, Data) -> ok | {error, Error}"}],
                                                    0,true}},
                                                  {text,[3,96,96,96]}},
                                                 null},
                                                null}},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{sep,
                                                    [{sep,
                                                      [{text,
                                                        [5,119,104,101,114,
                                                         101]}],
                                                      0,false},
                                                     {text,"\tDistCtrlr"},
                                                     {sep,
                                                      [{text,
                                                        "4is the identifier of the distribution controller and"}],
                                                      0,false},
                                                     {text,[4,68,97,116,97]},
                                                     {sep,
                                                      [{text,
                                                        "%is io data to pass to the other side."}],
                                                      0,false}],
                                                    0,false}],
                                                  0,true},
                                                 null},
                                                null}},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{sep,
                                                    [{text,
                                                      "!Only used during handshake phase."}],
                                                    0,false}],
                                                  0,true},
                                                 null},
                                                null}}],
                                             0,false},
                                            {text,[5,60,47,100,100,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,116,62]},
                                           {sep,
                                            [{sep,
                                              [{text,
                                                [14,104,115,95,100,97,116,97,
                                                 95,102,95,114,101,99,118]},
                                               {text,
                                                [6,102,95,114,101,99,118]}],
                                              0,false}],
                                            0,false},
                                           {text,[5,60,47,100,116,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,100,62]},
                                          {sep,
                                           [{above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{text,
                                                    "#A fun with the following signature:"}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {above,
                                                {above,
                                                 {text,[3,96,96,96]},
                                                 {sep,
                                                  [{text,
                                                    "9fun (DistCtrlr, Length) -> {ok, Packet} | {error, Reason}"}],
                                                  0,true}},
                                                {text,[3,96,96,96]}},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      [5,119,104,101,114,
                                                       101]}],
                                                    0,false},
                                                   {text,"\tDistCtrlr"},
                                                   {sep,
                                                    [{text,
                                                      "4is the identifier of the distribution controller. If"}],
                                                    0,false},
                                                   {text,
                                                    [6,76,101,110,103,116,
                                                     104]},
                                                   {sep,
                                                    [{text,[2,105,115]}],
                                                    0,false},
                                                   {text,[1,48]},
                                                   {sep,
                                                    [{text,
                                                      ",, all available bytes should be returned. If"}],
                                                    0,false},
                                                   {text,"\nLength > 0"},
                                                   {sep,
                                                    [{text,"\t, exactly"}],
                                                    0,false},
                                                   {text,
                                                    [6,76,101,110,103,116,
                                                     104]},
                                                   {sep,
                                                    [{text,
                                                      "Dbytes should be returned, or an error; possibly discarding less than"}],
                                                    0,false},
                                                   {text,
                                                    [6,76,101,110,103,116,
                                                     104]},
                                                   {sep,
                                                    [{text,
                                                      "{bytes of data when the connection is closed from the other side. It is used for passive receive of data from the other end."}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{text,
                                                    "!Only used during handshake phase."}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}}],
                                           0,false},
                                          {text,[5,60,47,100,100,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,116,62]},
                                         {sep,
                                          [{sep,
                                            [{text,
                                              [28,104,115,95,100,97,116,97,95,
                                               102,95,115,101,116,111,112,116,
                                               115,95,112,114,101,95,110,111,
                                               100,101,117,112]},
                                             {text,
                                              [20,102,95,115,101,116,111,112,
                                               116,115,95,112,114,101,95,110,
                                               111,100,101,117,112]}],
                                            0,false}],
                                          0,false},
                                         {text,[5,60,47,100,116,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,100,62]},
                                        {sep,
                                         [{above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{sep,
                                                [{text,
                                                  "#A fun with the following signature:"}],
                                                0,false}],
                                              0,true},
                                             null},
                                            null}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {above,
                                              {above,
                                               {text,[3,96,96,96]},
                                               {sep,
                                                [{text,
                                                  "&fun (DistCtrlr) -> ok | {error, Error}"}],
                                                0,true}},
                                              {text,[3,96,96,96]}},
                                             null},
                                            null}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{sep,
                                                [{sep,
                                                  [{text,
                                                    [5,119,104,101,114,101]}],
                                                  0,false},
                                                 {text,"\tDistCtrlr"},
                                                 {sep,
                                                  [{text,
                                                    "}is the identifier of the distribution controller. Called just before the distribution channel is taken up for normal traffic."}],
                                                  0,false}],
                                                0,false}],
                                              0,true},
                                             null},
                                            null}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{sep,
                                                [{text,
                                                  "!Only used during handshake phase."}],
                                                0,false}],
                                              0,true},
                                             null},
                                            null}}],
                                         0,false},
                                        {text,[5,60,47,100,100,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,
                                        [{sep,
                                          [{text,
                                            [29,104,115,95,100,97,116,97,95,
                                             102,95,115,101,116,111,112,116,
                                             115,95,112,111,115,116,95,110,
                                             111,100,101,117,112]},
                                           {text,
                                            [21,102,95,115,101,116,111,112,
                                             116,115,95,112,111,115,116,95,
                                             110,111,100,101,117,112]}],
                                          0,false}],
                                        0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,100,62]},
                                      {sep,
                                       [{above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{text,
                                                "#A fun with the following signature:"}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {above,
                                            {above,
                                             {text,[3,96,96,96]},
                                             {sep,
                                              [{text,
                                                "&fun (DistCtrlr) -> ok | {error, Error}"}],
                                              0,true}},
                                            {text,[3,96,96,96]}},
                                           null},
                                          null}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{sep,
                                                [{text,
                                                  [5,119,104,101,114,101]}],
                                                0,false},
                                               {text,"\tDistCtrlr"},
                                               {sep,
                                                [{text,
                                                  "~is the identifier of the distribution controller. Called just after distribution channel has been taken up for normal traffic."}],
                                                0,false}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{text,
                                                "!Only used during handshake phase."}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}}],
                                       0,false},
                                      {text,[5,60,47,100,100,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,
                                      [{sep,
                                        [{text,
                                          [15,104,115,95,100,97,116,97,95,102,
                                           95,103,101,116,108,108]},
                                         {text,
                                          [7,102,95,103,101,116,108,108]}],
                                        0,false}],
                                      0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {sep,
                                     [{above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{text,
                                              "#A fun with the following signature:"}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {text,[3,96,96,96]},
                                           {sep,
                                            [{text,
                                              [21,102,117,110,32,40,68,105,
                                               115,116,67,116,114,108,114,41,
                                               32,45,62,32,73,68]}],
                                            0,true}},
                                          {text,[3,96,96,96]}},
                                         null},
                                        null}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{sep,
                                              [{text,[5,119,104,101,114,101]}],
                                              0,false},
                                             {text,"\tDistCtrlr"},
                                             {sep,
                                              [{text,
                                                "4is the identifier of the distribution controller and"}],
                                              0,false},
                                             {text,[2,73,68]},
                                             {sep,
                                              [{text,
                                                "Lis the identifier of the low level entity that handles the connection (often"}],
                                              0,false},
                                             {text,"\tDistCtrlr"},
                                             {sep,
                                              [{text,"\bitself)."}],
                                              0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{text,
                                              "!Only used during handshake phase."}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}}],
                                     0,false},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,
                                    [{sep,
                                      [{text,
                                        [17,104,115,95,100,97,116,97,95,102,
                                         95,97,100,100,114,101,115,115]},
                                       {text,"\tf_address"}],
                                      0,false}],
                                    0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {sep,
                                   [{above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{text,
                                            "#A fun with the following signature:"}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {text,[3,96,96,96]},
                                         {sep,
                                          [{text,
                                            "#fun (DistCtrlr, Node) -> NetAddress"}],
                                          0,true}},
                                        {text,[3,96,96,96]}},
                                       null},
                                      null}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,[5,119,104,101,114,101]}],
                                            0,false},
                                           {text,"\tDistCtrlr"},
                                           {sep,
                                            [{text,
                                              "1is the identifier of the distribution controller,"}],
                                            0,false},
                                           {text,[4,78,111,100,101]},
                                           {sep,
                                            [{text,
                                              "2is the node name of the node on the other end, and"}],
                                            0,false},
                                           {text,"\nNetAddress"},
                                           {sep,
                                            [{text,[4,105,115,32,97]}],
                                            0,false},
                                           {text,
                                            [14,35,110,101,116,95,97,100,100,
                                             114,101,115,115,123,125]},
                                           {sep,
                                            [{text,
                                              "1record with information about the address for the"}],
                                            0,false},
                                           {text,[4,78,111,100,101]},
                                           {sep,
                                            [{text,
                                              "'on the other end of the connection. The"}],
                                            0,false},
                                           {text,
                                            [14,35,110,101,116,95,97,100,100,
                                             114,101,115,115,123,125]},
                                           {sep,
                                            [{text,
                                              [20,114,101,99,111,114,100,32,
                                               105,115,32,100,101,102,105,110,
                                               101,100,32,105,110]}],
                                            0,false},
                                           {text,
                                            [30,107,101,114,110,101,108,47,
                                             105,110,99,108,117,100,101,47,
                                             110,101,116,95,97,100,100,114,
                                             101,115,115,46,104,114,108]},
                                           {sep,[{text,[1,46]}],0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{text,
                                            "!Only used during handshake phase."}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}}],
                                   0,false},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{sep,
                                    [{text,
                                      [15,104,115,95,100,97,116,97,95,109,102,
                                       95,116,105,99,107]},
                                     {text,[7,109,102,95,116,105,99,107]}],
                                    0,false}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {sep,
                                 [{above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{text,
                                          "#A fun with the following signature:"}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {text,[3,96,96,96]},
                                       {sep,
                                        [{text,
                                          [25,102,117,110,32,40,68,105,115,
                                           116,67,116,114,108,114,41,32,45,62,
                                           32,118,111,105,100,40,41]}],
                                        0,true}},
                                      {text,[3,96,96,96]}},
                                     null},
                                    null}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,[5,119,104,101,114,101]}],
                                          0,false},
                                         {text,"\tDistCtrlr"},
                                         {sep,
                                          [{text,
                                            [274,105,115,32,116,104,101,32,
                                             105,100,101,110,116,105,102,105,
                                             101,114,32,111,102,32,116,104,
                                             101,32,100,105,115,116,114,105,
                                             98,117,116,105,111,110,32,99,111,
                                             110,116,114,111,108,108,101,114,
                                             46,32,84,104,105,115,32,102,117,
                                             110,99,116,105,111,110,32,115,
                                             104,111,117,108,100,32,115,101,
                                             110,100,32,105,110,102,111,114,
                                             109,97,116,105,111,110,32,111,
                                             118,101,114,32,116,104,101,32,99,
                                             111,110,110,101,99,116,105,111,
                                             110,32,116,104,97,116,32,105,115,
                                             32,110,111,116,32,105,110,116,
                                             101,114,112,114,101,116,101,100,
                                             32,98,121,32,116,104,101,32,111,
                                             116,104,101,114,32,101,110,100,
                                             32,119,104,105,108,101,32,105,
                                             110,99,114,101,97,115,105,110,
                                             103,32,116,104,101,32,115,116,97,
                                             116,105,115,116,105,99,115,32,
                                             111,102,32,114,101,99,101,105,
                                             118,101,100,32,112,97,99,107,101,
                                             116,115,32,111,110,32,116,104,
                                             101,32,111,116,104,101,114,32,
                                             101,110,100,46,32,84,104,105,115,
                                             32,105,115,32,117,115,117,97,108,
                                             108,121,32,105,109,112,108,101,
                                             109,101,110,116,101,100,32,98,
                                             121,32,115,101,110,100,105,110,
                                             103,32,97,110,32,101,109,112,116,
                                             121,32,112,97,99,107,101,116,
                                             46]}],
                                          0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {sep,
                                   [{above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{text,
                                            [144,73,116,32,105,115,32,111,102,
                                             32,118,105,116,97,108,32,105,109,
                                             112,111,114,116,97,110,99,101,32,
                                             116,104,97,116,32,116,104,105,
                                             115,32,111,112,101,114,97,116,
                                             105,111,110,32,100,111,101,115,
                                             32,110,111,116,32,98,108,111,99,
                                             107,32,116,104,101,32,99,97,108,
                                             108,101,114,32,102,111,114,32,97,
                                             32,108,111,110,103,32,116,105,
                                             109,101,46,32,84,104,105,115,32,
                                             115,105,110,99,101,32,105,116,32,
                                             105,115,32,99,97,108,108,101,100,
                                             32,102,114,111,109,32,116,104,
                                             101,32,99,111,110,110,101,99,116,
                                             105,111,110,32,115,117,112,101,
                                             114,118,105,115,111,114,46]}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}}],
                                   0,false},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{text,
                                          "\eUsed when connection is up."}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}}],
                                 0,false},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{sep,
                                  [{text,
                                    [18,104,115,95,100,97,116,97,95,109,102,
                                     95,103,101,116,115,116,97,116]},
                                   {text,"\nmf_getstat"}],
                                  0,false}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {sep,
                               [{above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{text,
                                        "#A fun with the following signature:"}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {text,[3,96,96,96]},
                                     {sep,
                                      [{text,
                                        "1fun (DistCtrlr) -> {ok, Received, Sent, PendSend}"}],
                                      0,true}},
                                    {text,[3,96,96,96]}},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,[5,119,104,101,114,101]}],
                                        0,false},
                                       {text,"\tDistCtrlr"},
                                       {sep,
                                        [{text,
                                          "1is the identifier of the distribution controller,"}],
                                        0,false},
                                       {text,"\bReceived"},
                                       {sep,
                                        [{text,
                                          [20,105,115,32,114,101,99,101,105,
                                           118,101,100,32,112,97,99,107,101,
                                           116,115,44]}],
                                        0,false},
                                       {text,[4,83,101,110,116]},
                                       {sep,
                                        [{text,
                                          [20,105,115,32,115,101,110,116,32,
                                           112,97,99,107,101,116,115,44,32,97,
                                           110,100]}],
                                        0,false},
                                       {text,"\bPendSend"},
                                       {sep,
                                        [{text,
                                          "-is amount of packets in queue to be sent or a"}],
                                        0,false},
                                       {text,"\tboolean()"},
                                       {sep,
                                        [{text,
                                          "9indicating whether there are packets in queue to be sent."}],
                                        0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {sep,
                                 [{above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{text,
                                          [144,73,116,32,105,115,32,111,102,
                                           32,118,105,116,97,108,32,105,109,
                                           112,111,114,116,97,110,99,101,32,
                                           116,104,97,116,32,116,104,105,115,
                                           32,111,112,101,114,97,116,105,111,
                                           110,32,100,111,101,115,32,110,111,
                                           116,32,98,108,111,99,107,32,116,
                                           104,101,32,99,97,108,108,101,114,
                                           32,102,111,114,32,97,32,108,111,
                                           110,103,32,116,105,109,101,46,32,
                                           84,104,105,115,32,115,105,110,99,
                                           101,32,105,116,32,105,115,32,99,97,
                                           108,108,101,100,32,102,114,111,109,
                                           32,116,104,101,32,99,111,110,110,
                                           101,99,116,105,111,110,32,115,117,
                                           112,101,114,118,105,115,111,114,
                                           46]}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}}],
                                 0,false},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{text,"\eUsed when connection is up."}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}}],
                               0,false},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{sep,
                                [{text,
                                  [20,104,115,95,100,97,116,97,95,114,101,113,
                                   117,101,115,116,95,116,121,112,101]},
                                 {text,"\frequest_type"}],
                                0,false}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,[{text,"\vThe request"}],0,false},
                                   {text,[4,84,121,112,101]},
                                   {sep,[{text,"\fas passed to"}],0,false},
                                   {text,[5,115,101,116,117,112]},
                                   {sep,
                                    [{text,
                                      "s. This is only mandatory when the connection has been initiated by this node. That is, the connection is set up via"}],
                                    0,false},
                                   {text,[7,115,101,116,117,112,47,53]},
                                   {sep,[{text,[1,46]}],0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{sep,
                              [{text,
                                [18,104,115,95,100,97,116,97,95,109,102,95,
                                 115,101,116,111,112,116,115]},
                               {text,"\nmf_setopts"}],
                              0,false}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {sep,
                           [{above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{text,
                                    "#A fun with the following signature:"}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {above,
                                {above,
                                 {text,[3,96,96,96]},
                                 {sep,
                                  [{text,
                                    "+fun (DistCtrl, Opts) -> ok | {error, Error}"}],
                                  0,true}},
                                {text,[3,96,96,96]}},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,[5,119,104,101,114,101]}],
                                    0,false},
                                   {text,"\tDistCtrlr"},
                                   {sep,
                                    [{text,
                                      "4is the identifier of the distribution controller and"}],
                                    0,false},
                                   {text,[4,79,112,116,115]},
                                   {sep,
                                    [{text,
                                      ".is a list of options to set on the connection."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{text,
                                    "6This function is optional. Used when connection is up."}],
                                  0,false}],
                                0,true},
                               null},
                              null}}],
                           0,false},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{sep,
                            [{text,
                              [18,104,115,95,100,97,116,97,95,109,102,95,103,
                               101,116,111,112,116,115]},
                             {text,"\nmf_getopts"}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {sep,
                         [{above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  "#A fun with the following signature:"}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {above,
                              {above,
                               {text,[3,96,96,96]},
                               {sep,
                                [{text,
                                  ";fun (DistCtrl, Opts) -> {ok, OptionValues} | {error, Error}"}],
                                0,true}},
                              {text,[3,96,96,96]}},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,[5,119,104,101,114,101]}],
                                  0,false},
                                 {text,"\tDistCtrlr"},
                                 {sep,
                                  [{text,
                                    "4is the identifier of the distribution controller and"}],
                                  0,false},
                                 {text,[4,79,112,116,115]},
                                 {sep,
                                  [{text,
                                    "0is a list of options to read for the connection."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  "6This function is optional. Used when connection is up."}],
                                0,false}],
                              0,true},
                             null},
                            null}}],
                         0,false},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{sep,
                          [{text,
                            [28,104,115,95,100,97,116,97,95,102,95,104,97,110,
                             100,115,104,97,107,101,95,99,111,109,112,108,101,
                             116,101]},
                           {text,
                            [20,102,95,104,97,110,100,115,104,97,107,101,95,
                             99,111,109,112,108,101,116,101]}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {sep,
                       [{above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,"#A fun with the following signature:"}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {above,
                            {above,
                             {text,[3,96,96,96]},
                             {sep,
                              [{text,
                                "(fun (DistCtrlr, Node, DHandle) -> void()"}],
                              0,true}},
                            {text,[3,96,96,96]}},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,[{text,[5,119,104,101,114,101]}],0,false},
                               {text,"\tDistCtrlr"},
                               {sep,
                                [{text,
                                  "1is the identifier of the distribution controller,"}],
                                0,false},
                               {text,[4,78,111,100,101]},
                               {sep,
                                [{text,
                                  "<is the node name of the node connected at the other end, and"}],
                                0,false},
                               {text,[7,68,72,97,110,100,108,101]},
                               {sep,
                                [{text,
                                  "eis a distribution handle needed by a distribution controller process when calling the following BIFs:"}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,
                          {above,
                           {sep,
                            [{text,[1,42]},
                             {sep,
                              [{text," erts/erlang#dist_ctrl_get_data/1"}],
                              0,false}],
                            0,false},
                           {sep,
                            [{text,[1,42]},
                             {sep,
                              [{text,
                                "-erts/erlang#dist_ctrl_get_data_notification/1"}],
                              0,false}],
                            0,false}},
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{text,"%erts/erlang#dist_ctrl_input_handler/2"}],
                             0,false}],
                           0,false}},
                         {sep,
                          [{text,[1,42]},
                           {sep,
                            [{text," erts/erlang#dist_ctrl_put_data/2"}],
                            0,false}],
                          0,false}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,
                                "ÃThis function is called when the handshake has completed and the distribution channel is up. The distribution controller can begin dispatching traffic over the channel. This function is optional."}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,"!Only used during handshake phase."}],
                              0,false}],
                            0,true},
                           null},
                          null}}],
                       0,false},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{sep,
                        [{text,
                          [17,104,115,95,100,97,116,97,95,97,100,100,95,102,
                           108,97,103,115]},
                         {text,"\tadd_flags"}],
                        0,false}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              [18,68,105,115,116,114,105,98,117,116,105,111,
                               110,32,102,108,97,103,115]},
                             {sep,
                              [{text,
                                "[to add to the connection. Currently all (non obsolete) flags will automatically be enabled."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              [28,84,104,105,115,32,102,108,97,103,32,102,105,
                               101,108,100,32,105,115,32,111,112,116,105,111,
                               110,97,108,46]}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{sep,
                      [{text,
                        [20,104,115,95,100,97,116,97,95,114,101,106,101,99,
                         116,95,102,108,97,103,115]},
                       {text,"\freject_flags"}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            [18,68,105,115,116,114,105,98,117,116,105,111,110,
                             32,102,108,97,103,115]},
                           {sep,
                            [{text,
                              "Fto reject. Currently the following distribution flags can be rejected:"}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,
                      {text,[4,60,100,108,62]},
                      {nest,4,
                       {above,
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                [25,68,70,76,65,71,95,68,73,83,84,95,72,68,82,
                                 95,65,84,79,77,95,67,65,67,72,69]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {text,
                              "+Do not use atom cache over this connection."},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}}}},
                     {text,[5,60,47,100,108,62]}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,[{text,"\fUse function"}],0,false},
                           {text,
                            [30,100,105,115,116,95,117,116,105,108,58,115,116,
                             114,105,99,116,95,111,114,100,101,114,95,102,108,
                             97,103,115,47,48]},
                           {sep,
                            [{text,
                              "Ato get all flags for features that require strict order delivery."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            [28,84,104,105,115,32,102,108,97,103,32,102,105,
                             101,108,100,32,105,115,32,111,112,116,105,111,
                             110,97,108,46]}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{text,
                      [21,104,115,95,100,97,116,97,95,114,101,113,117,105,114,
                       101,95,102,108,97,103,115]},
                     {text,"\rrequire_flags"}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,[{text,"\rRequire these"}],0,false},
                         {text,
                          [18,100,105,115,116,114,105,98,117,116,105,111,110,
                           32,102,108,97,103,115]},
                         {sep,
                          [{text,
                            "cto be used. The connection will be aborted during the handshake if the other end does not use them."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          [28,84,104,105,115,32,102,108,97,103,32,102,105,101,
                           108,100,32,105,115,32,111,112,116,105,111,110,97,
                           108,46]}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}}}},
        {text,[5,60,47,100,108,62]}}],
      0,false},
     {sep,
      [{text,
        "C<a name=\"distribution_data_delivery\">distribution_data_delivery</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [29,35,35,32,68,105,115,116,114,105,98,117,116,105,111,110,32,68,
            97,116,97,32,68,101,108,105,118,101,114,121]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [140,87,104,101,110,32,117,115,105,110,103,32,116,104,101,32,
                  100,101,102,97,117,108,116,32,99,111,110,102,105,103,117,
                  114,97,116,105,111,110,44,32,116,104,101,32,100,97,116,97,
                  32,116,111,32,112,97,115,115,32,111,118,101,114,32,97,32,99,
                  111,110,110,101,99,116,105,111,110,32,110,101,101,100,115,
                  32,116,111,32,98,101,32,100,101,108,105,118,101,114,101,100,
                  32,97,115,32,105,115,32,116,111,32,116,104,101,32,110,111,
                  100,101,32,111,110,32,116,104,101,32,114,101,99,101,105,118,
                  105,110,103,32,101,110,100,32,105,110,32,116,104,101]}],
               0,false},
              {text,
               [20,42,42,101,120,97,99,116,32,115,97,109,101,32,111,114,100,
                101,114,42,42]},
              {sep,
               [{text,
                 "C, with no loss of data what so ever, as sent from the sending node."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "vThe data delivery order can be relaxed by disabling features that require strict ordering. This is done by passing the"}],
               0,false},
              {text,"0[distribution flags](./erl_dist_protocol#dflags)"},
              {sep,[{text,"\vreturned by"}],0,false},
              {text," *dist_util:strict_order_flags/0*"},
              {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
              {text,
               "@[alt_dist#hs_data_reject_flags](./alt_dist#hs_data_reject_flags)"},
              {sep,[{text,"\ffield of the"}],0,false},
              {text,"![hs_data_record](#hs_data_record)"},
              {sep,
               [{text,
                 [298,114,101,99,111,114,100,32,117,115,101,100,32,119,104,
                  101,110,32,115,101,116,116,105,110,103,32,117,112,32,116,
                  104,101,32,99,111,110,110,101,99,116,105,111,110,46,32,87,
                  104,101,110,32,114,101,108,97,120,101,100,32,111,114,100,
                  101,114,105,110,103,32,105,115,32,117,115,101,100,44,32,111,
                  110,108,121,32,116,104,101,32,111,114,100,101,114,32,111,
                  102,32,115,105,103,110,97,108,115,32,119,105,116,104,32,116,
                  104,101,32,115,97,109,101,32,115,101,110,100,101,114,47,114,
                  101,99,101,105,118,101,114,32,112,97,105,114,32,104,97,115,
                  32,116,111,32,98,101,32,112,114,101,115,101,114,118,101,100,
                  46,32,72,111,119,101,118,101,114,44,32,110,111,116,101,32,
                  116,104,97,116,32,100,105,115,97,98,108,105,110,103,32,116,
                  104,101,32,102,101,97,116,117,114,101,115,32,116,104,97,116,
                  32,114,101,113,117,105,114,101,32,115,116,114,105,99,116,32,
                  111,114,100,101,114,105,110,103,32,109,97,121,32,104,97,118,
                  101,32,97,32,110,101,103,97,116,105,118,101,32,105,109,112,
                  97,99,116,32,111,110,32,112,101,114,102,111,114,109,97,110,
                  99,101,44,32,116,104,114,111,117,103,104,112,117,116,44,32,
                  97,110,100,47,111,114,32,108,97,116,101,110,99,121,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {sep,
      [{text,
        "M<a name=\"enable_your_distribution_module\">enable_your_distribution_module</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,{text,"\"## Enable Your Distribution Module"},null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[3,70,111,114]}],0,false},
              {text,"\f*net_kernel*"},
              {sep,
               [{text,"1to find out which distribution module to use, the"}],
               0,false},
              {text,[5,42,101,114,108,42]},
              {sep,
               [{text,
                 [21,99,111,109,109,97,110,100,45,108,105,110,101,32,97,114,
                  103,117,109,101,110,116]}],
               0,false},
              {text,"\r*-proto_dist*"},
              {sep,
               [{text,
                 "gis used. It is followed by one or more distribution module names, with suffix \"_dist\" removed. That is,"}],
               0,false},
              {text,[14,42,103,101,110,95,116,99,112,95,100,105,115,116,42]},
              {sep,
               [{text,"(as a distribution module is specified as"}],
               0,false},
              {text,
               [21,42,45,112,114,111,116,111,95,100,105,115,116,32,103,101,
                110,95,116,99,112,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,73,102,32,110,111]}],0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,
                 ":(TCP port mapper daemon) is used, also command-line option"}],
               0,false},
              {text,"\n*-no_epmd*"},
              {sep,
               [{text,"/is to be specified, which makes Erlang skip the"}],
               0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,
                 "6startup, both as an OS process and as an Erlang ditto."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## The Driver"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
         {sep,
          [{text,[4,32,32,32,32]},
           {sep,
            [{sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         [277,84,104,105,115,32,115,101,99,116,105,111,110,32,
                          119,97,115,32,119,114,105,116,116,101,110,32,97,32,
                          108,111,110,103,32,116,105,109,101,32,97,103,111,46,
                          32,77,111,115,116,32,111,102,32,105,116,32,105,115,
                          32,115,116,105,108,108,32,118,97,108,105,100,44,32,
                          98,117,116,32,115,111,109,101,32,116,104,105,110,
                          103,115,32,104,97,118,101,32,99,104,97,110,103,101,
                          100,32,115,105,110,99,101,32,116,104,101,110,46,32,
                          83,111,109,101,32,117,112,100,97,116,101,115,32,104,
                          97,118,101,32,98,101,101,110,32,109,97,100,101,32,
                          116,111,32,116,104,101,32,100,111,99,117,109,101,
                          110,116,97,116,105,111,110,32,111,102,32,116,104,
                          101,32,100,114,105,118,101,114,32,112,114,101,115,
                          101,110,116,101,100,32,104,101,114,101,44,32,98,117,
                          116,32,109,111,114,101,32,99,97,110,32,98,101,32,
                          100,111,110,101,32,97,110,100,32,105,115,32,112,108,
                          97,110,110,101,100,32,102,111,114,32,116,104,101,32,
                          102,117,116,117,114,101,46,32,84,104,101,32,114,101,
                          97,100,101,114,32,105,115,32,101,110,99,111,117,114,
                          97,103,101,100,32,116,111,32,114,101,97,100,32,116,
                          104,101]}],
                       0,false},
                      {text,
                       [24,91,101,114,108,95,100,114,105,118,101,114,93,40,
                        101,114,108,95,100,114,105,118,101,114,41]},
                      {sep,[{text,[3,97,110,100]}],0,false},
                      {text,
                       [28,91,100,114,105,118,101,114,95,101,110,116,114,121,
                        93,40,100,114,105,118,101,114,95,101,110,116,114,121,
                        41]},
                      {sep,
                       [{text,
                         [19,100,111,99,117,109,101,110,116,97,116,105,111,
                          110,32,97,108,115,111,46]}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false}],
            0,true}],
          0,false}},
        {text,[0]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "vAlthough Erlang drivers in general can be beyond the scope of this section, a brief introduction seems to be in place."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [21,35,35,32,68,114,105,118,101,114,115,32,105,110,32,71,101,110,
           101,114,97,108]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [337,65,110,32,69,114,108,97,110,103,32,100,114,105,118,101,
                 114,32,105,115,32,97,32,110,97,116,105,118,101,32,99,111,100,
                 101,32,109,111,100,117,108,101,32,119,114,105,116,116,101,
                 110,32,105,110,32,67,32,40,111,114,32,97,115,115,101,109,98,
                 108,101,114,41,44,32,119,104,105,99,104,32,115,101,114,118,
                 101,115,32,97,115,32,97,110,32,105,110,116,101,114,102,97,99,
                 101,32,102,111,114,32,115,111,109,101,32,115,112,101,99,105,
                 97,108,32,111,112,101,114,97,116,105,110,103,32,115,121,115,
                 116,101,109,32,115,101,114,118,105,99,101,46,32,84,104,105,
                 115,32,105,115,32,97,32,103,101,110,101,114,97,108,32,109,
                 101,99,104,97,110,105,115,109,32,116,104,97,116,32,105,115,
                 32,117,115,101,100,32,116,104,114,111,117,103,104,111,117,
                 116,32,116,104,101,32,69,114,108,97,110,103,32,101,109,117,
                 108,97,116,111,114,32,102,111,114,32,97,108,108,32,107,105,
                 110,100,115,32,111,102,32,73,47,79,46,32,65,110,32,69,114,
                 108,97,110,103,32,100,114,105,118,101,114,32,99,97,110,32,98,
                 101,32,100,121,110,97,109,105,99,97,108,108,121,32,108,105,
                 110,107,101,100,32,40,111,114,32,108,111,97,100,101,100,41,
                 32,116,111,32,116,104,101,32,69,114,108,97,110,103,32,101,
                 109,117,108,97,116,111,114,32,97,116,32,114,117,110,116,105,
                 109,101,32,98,121,32,117,115,105,110,103,32,116,104,101]}],
              0,false},
             {text,"\n*erl_ddll*"},
             {sep,
              [{text,
                [145,69,114,108,97,110,103,32,109,111,100,117,108,101,46,32,
                 83,111,109,101,32,111,102,32,116,104,101,32,100,114,105,118,
                 101,114,115,32,105,110,32,79,84,80,32,97,114,101,32,104,111,
                 119,101,118,101,114,32,115,116,97,116,105,99,97,108,108,121,
                 32,108,105,110,107,101,100,32,116,111,32,116,104,101,32,114,
                 117,110,116,105,109,101,32,115,121,115,116,101,109,44,32,98,
                 117,116,32,116,104,97,116,32,105,115,32,109,111,114,101,32,
                 97,110,32,111,112,116,105,109,105,122,97,116,105,111,110,32,
                 116,104,97,110,32,97,32,110,101,99,101,115,115,105,116,121,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "aThe driver data types and the functions available to the driver writer are defined in header file"}],
              0,false},
             {text,[14,42,101,114,108,95,100,114,105,118,101,114,46,104,42]},
             {sep,
              [{text,"-seated in Erlang's include directory. See the"}],
              0,false},
             {text,
              [26,91,101,114,108,95,100,114,105,118,101,114,93,40,46,47,101,
               114,108,95,100,114,105,118,101,114,41]},
             {sep,
              [{text,
                ";documentation for details of which functions are available."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [340,87,104,101,110,32,119,114,105,116,105,110,103,32,97,32,100,
               114,105,118,101,114,32,116,111,32,109,97,107,101,32,97,32,99,
               111,109,109,117,110,105,99,97,116,105,111,110,115,32,112,114,
               111,116,111,99,111,108,32,97,118,97,105,108,97,98,108,101,32,
               116,111,32,69,114,108,97,110,103,44,32,111,110,101,32,115,104,
               111,117,108,100,32,107,110,111,119,32,106,117,115,116,32,97,98,
               111,117,116,32,101,118,101,114,121,116,104,105,110,103,32,119,
               111,114,116,104,32,107,110,111,119,105,110,103,32,97,98,111,
               117,116,32,116,104,97,116,32,112,97,114,116,105,99,117,108,97,
               114,32,112,114,111,116,111,99,111,108,46,32,65,108,108,32,111,
               112,101,114,97,116,105,111,110,32,109,117,115,116,32,98,101,32,
               110,111,110,45,98,108,111,99,107,105,110,103,32,97,110,100,32,
               97,108,108,32,112,111,115,115,105,98,108,101,32,115,105,116,
               117,97,116,105,111,110,115,32,97,114,101,32,116,111,32,98,101,
               32,97,99,99,111,117,110,116,101,100,32,102,111,114,32,105,110,
               32,116,104,101,32,100,114,105,118,101,114,46,32,65,32,110,111,
               110,45,115,116,97,98,108,101,32,100,114,105,118,101,114,32,119,
               105,108,108,32,97,102,102,101,99,116,32,97,110,100,47,111,114,
               32,99,114,97,115,104,32,116,104,101,32,119,104,111,108,101,32,
               69,114,108,97,110,103,32,114,117,110,116,105,109,101,32,115,
               121,115,116,101,109,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              ":The emulator calls the driver in the following situations:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{text,
                     [150,87,104,101,110,32,116,104,101,32,100,114,105,118,
                      101,114,32,105,115,32,108,111,97,100,101,100,46,32,84,
                      104,105,115,32,99,97,108,108,98,97,99,107,32,109,117,
                      115,116,32,104,97,118,101,32,97,32,115,112,101,99,105,
                      97,108,32,110,97,109,101,32,97,110,100,32,105,110,102,
                      111,114,109,32,116,104,101,32,101,109,117,108,97,116,
                      111,114,32,111,102,32,119,104,97,116,32,99,97,108,108,
                      98,97,99,107,115,32,97,114,101,32,116,111,32,98,101,32,
                      117,115,101,100,32,98,121,32,114,101,116,117,114,110,
                      105,110,103,32,97,32,112,111,105,110,116,101,114,32,116,
                      111,32,97]}],
                   0,false},
                  {text,"\r*ErlDrvEntry*"},
                  {sep,
                   [{text,
                     "6struct, which is to be properly filled in (see below)."}],
                   0,false}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{text,")When a port to the driver is opened (by a"}],
                   0,false},
                  {text,"\v*open_port*"},
                  {sep,
                   [{text,
                     "rcall from Erlang). This routine is to set up internal data structures and return an opaque data entity of the type"}],
                   0,false},
                  {text,"\f*ErlDrvData*"},
                  {sep,
                   [{text,
                     [521,44,32,119,104,105,99,104,32,105,115,32,97,32,100,97,
                      116,97,32,116,121,112,101,32,108,97,114,103,101,32,101,
                      110,111,117,103,104,32,116,111,32,104,111,108,100,32,97,
                      32,112,111,105,110,116,101,114,46,32,84,104,101,32,112,
                      111,105,110,116,101,114,32,114,101,116,117,114,110,101,
                      100,32,98,121,32,116,104,105,115,32,102,117,110,99,116,
                      105,111,110,32,105,115,32,116,104,101,32,102,105,114,
                      115,116,32,97,114,103,117,109,101,110,116,32,116,111,32,
                      97,108,108,32,111,116,104,101,114,32,99,97,108,108,98,
                      97,99,107,115,32,99,111,110,99,101,114,110,105,110,103,
                      32,116,104,105,115,32,112,97,114,116,105,99,117,108,97,
                      114,32,112,111,114,116,46,32,73,116,32,105,115,32,117,
                      115,117,97,108,108,121,32,99,97,108,108,101,100,32,116,
                      104,101,32,112,111,114,116,32,104,97,110,100,108,101,46,
                      32,84,104,101,32,101,109,117,108,97,116,111,114,32,111,
                      110,108,121,32,115,116,111,114,101,115,32,116,104,101,
                      32,104,97,110,100,108,101,32,97,110,100,32,100,111,101,
                      115,32,110,101,118,101,114,32,116,114,121,32,116,111,32,
                      105,110,116,101,114,112,114,101,116,32,105,116,44,32,
                      119,104,121,32,105,116,32,99,97,110,32,98,101,32,118,
                      105,114,116,117,97,108,108,121,32,97,110,121,116,104,
                      105,110,103,32,40,97,110,121,116,104,105,110,103,32,110,
                      111,116,32,108,97,114,103,101,114,32,116,104,97,110,32,
                      97,32,112,111,105,110,116,101,114,32,116,104,97,116,32,
                      105,115,41,32,97,110,100,32,99,97,110,32,112,111,105,
                      110,116,32,116,111,32,97,110,121,116,104,105,110,103,32,
                      105,102,32,105,116,32,105,115,32,97,32,112,111,105,110,
                      116,101,114,46,32,85,115,117,97,108,108,121,32,116,104,
                      105,115,32,112,111,105,110,116,101,114,32,114,101,102,
                      101,114,115,32,116,111,32,97,32,115,116,114,117,99,116,
                      117,114,101,32,104,111,108,100,105,110,103,32,105,110,
                      102,111,114,109,97,116,105,111,110,32,97,98,111,117,116,
                      32,116,104,101,32,112,97,114,116,105,99,117,108,97,114,
                      32,112,111,114,116,44,32,97,115,32,105,116,32,100,111,
                      101,115,32,105,110,32,116,104,101,32,101,120,97,109,112,
                      108,101,46]}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,
                    [262,87,104,101,110,32,97,110,32,69,114,108,97,110,103,32,
                     112,114,111,99,101,115,115,32,115,101,110,100,115,32,100,
                     97,116,97,32,116,111,32,116,104,101,32,112,111,114,116,
                     46,32,84,104,101,32,100,97,116,97,32,97,114,114,105,118,
                     101,115,32,97,115,32,97,32,98,117,102,102,101,114,32,111,
                     102,32,98,121,116,101,115,44,32,116,104,101,32,105,110,
                     116,101,114,112,114,101,116,97,116,105,111,110,32,105,
                     115,32,110,111,116,32,100,101,102,105,110,101,100,44,32,
                     98,117,116,32,105,115,32,117,112,32,116,111,32,116,104,
                     101,32,105,109,112,108,101,109,101,110,116,111,114,46,32,
                     84,104,105,115,32,99,97,108,108,98,97,99,107,32,114,101,
                     116,117,114,110,115,32,110,111,116,104,105,110,103,32,
                     116,111,32,116,104,101,32,99,97,108,108,101,114,44,32,97,
                     110,115,119,101,114,115,32,97,114,101,32,115,101,110,116,
                     32,116,111,32,116,104,101,32,99,97,108,108,101,114,32,97,
                     115,32,109,101,115,115,97,103,101,115,32,40,117,115,105,
                     110,103,32,97,32,114,111,117,116,105,110,101,32,99,97,
                     108,108,101,100]}],
                  0,false},
                 {text,
                  [15,42,100,114,105,118,101,114,95,111,117,116,112,117,116,
                   42]},
                 {sep,
                  [{text,
                    [269,97,118,97,105,108,97,98,108,101,32,116,111,32,97,108,
                     108,32,100,114,105,118,101,114,115,41,46,32,84,104,101,
                     114,101,32,105,115,32,97,108,115,111,32,97,32,119,97,121,
                     32,116,111,32,116,97,108,107,32,105,110,32,97,32,115,121,
                     110,99,104,114,111,110,111,117,115,32,119,97,121,32,116,
                     111,32,100,114,105,118,101,114,115,44,32,100,101,115,99,
                     114,105,98,101,100,32,98,101,108,111,119,46,32,84,104,
                     101,114,101,32,99,97,110,32,98,101,32,97,110,32,97,100,
                     100,105,116,105,111,110,97,108,32,99,97,108,108,98,97,99,
                     107,32,102,117,110,99,116,105,111,110,32,102,111,114,32,
                     104,97,110,100,108,105,110,103,32,100,97,116,97,32,116,
                     104,97,116,32,105,115,32,102,114,97,103,109,101,110,116,
                     101,100,32,40,115,101,110,116,32,105,110,32,97,32,100,
                     101,101,112,32,105,111,45,108,105,115,116,41,46,32,84,
                     104,97,116,32,105,110,116,101,114,102,97,99,101,32,103,
                     101,116,115,32,116,104,101,32,100,97,116,97,32,105,110,
                     32,97,32,102,111,114,109,32,115,117,105,116,97,98,108,
                     101,32,102,111,114,32,85,110,105,120]}],
                  0,false},
                 {text,"\b*writev*"},
                 {sep,
                  [{text,
                    "xrather than in a single buffer. There is no need for a distribution driver to implement such a callback, so we will not."}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   "»When a file descriptor is signaled for input. This callback is called when the emulator detects input on a file descriptor that the driver has marked for monitoring by using the interface"}],
                 0,false},
                {text,
                 [15,42,100,114,105,118,101,114,95,115,101,108,101,99,116,42]},
                {sep,
                 [{text,
                   "h. The mechanism of driver select makes it possible to read non-blocking from file descriptors by calling"}],
                 0,false},
                {text,
                 [15,42,100,114,105,118,101,114,95,115,101,108,101,99,116,42]},
                {sep,
                 [{text,
                   "ywhen reading is needed, and then do the reading in this callback (when reading is possible). The typical scenario is that"}],
                 0,false},
                {text,
                 [15,42,100,114,105,118,101,114,95,115,101,108,101,99,116,42]},
                {sep,
                 [{text,
                   [143,105,115,32,99,97,108,108,101,100,32,119,104,101,110,
                    32,97,110,32,69,114,108,97,110,103,32,112,114,111,99,101,
                    115,115,32,111,114,100,101,114,115,32,97,32,114,101,97,
                    100,32,111,112,101,114,97,116,105,111,110,44,32,97,110,
                    100,32,116,104,97,116,32,116,104,105,115,32,114,111,117,
                    116,105,110,101,32,115,101,110,100,115,32,116,104,101,32,
                    97,110,115,119,101,114,32,119,104,101,110,32,100,97,116,
                    97,32,105,115,32,97,118,97,105,108,97,98,108,101,32,111,
                    110,32,116,104,101,32,102,105,108,101,32,100,101,115,99,
                    114,105,112,116,111,114,46]}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  "ûWhen a file descriptor is signaled for output. This callback is called in a similar way as the previous, but when writing to a file descriptor is possible. The usual scenario is that Erlang orders writing on a file descriptor and that the driver calls"}],
                0,false},
               {text,
                [15,42,100,114,105,118,101,114,95,115,101,108,101,99,116,42]},
               {sep,
                [{text,
                  "è. When the descriptor is ready for output, this callback is called and the driver can try to send the output. Queuing can be involved in such operations, and there are convenient queue routines available to the driver writer to use."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 "VWhen a port is closed, either by an Erlang process or by the driver calling one of the"}],
               0,false},
              {text,
               [20,42,100,114,105,118,101,114,95,102,97,105,108,117,114,101,
                95,88,88,88,42]},
              {sep,
               [{text,
                 "nroutines. This routine is to clean up everything connected to one particular port. When other callbacks call a"}],
               0,false},
              {text,
               [20,42,100,114,105,118,101,114,95,102,97,105,108,117,114,101,
                95,88,88,88,42]},
              {sep,
               [{text,
                 [308,114,111,117,116,105,110,101,44,32,116,104,105,115,32,
                  114,111,117,116,105,110,101,32,105,115,32,105,109,109,101,
                  100,105,97,116,101,108,121,32,99,97,108,108,101,100,46,32,
                  84,104,101,32,99,97,108,108,98,97,99,107,32,114,111,117,116,
                  105,110,101,32,105,115,115,117,105,110,103,32,116,104,101,
                  32,101,114,114,111,114,32,99,97,110,32,109,97,107,101,32,
                  110,111,32,109,111,114,101,32,117,115,101,32,111,102,32,116,
                  104,101,32,100,97,116,97,32,115,116,114,117,99,116,117,114,
                  101,115,32,102,111,114,32,116,104,101,32,112,111,114,116,44,
                  32,97,115,32,116,104,105,115,32,114,111,117,116,105,110,101,
                  32,115,117,114,101,108,121,32,104,97,115,32,102,114,101,101,
                  100,32,97,108,108,32,97,115,115,111,99,105,97,116,101,100,
                  32,100,97,116,97,32,97,110,100,32,99,108,111,115,101,100,32,
                  97,108,108,32,102,105,108,101,32,100,101,115,99,114,105,112,
                  116,111,114,115,46,32,73,102,32,116,104,101,32,113,117,101,
                  117,101,32,117,116,105,108,105,116,121,32,97,118,97,105,108,
                  97,98,108,101,32,116,111,32,100,114,105,118,101,114,32,119,
                  114,105,116,101,114,32,105,115,32,117,115,101,100,44,32,116,
                  104,105,115,32,114,111,117,116,105,110,101,32,105,115,32,
                  104,111,119,101,118,101,114]}],
               0,false},
              {text,[7,42,42,110,111,116,42,42]},
              {sep,[{text," called until the queue is empty."}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                [28,87,104,101,110,32,97,110,32,69,114,108,97,110,103,32,112,
                 114,111,99,101,115,115,32,99,97,108,108,115]}],
              0,false},
             {text,"0[erlang#port_control/3](./erlang#port_control/3)"},
             {sep,
              [{text,
                "³, which is a synchronous interface to drivers. The control interface is used to set driver options, change states of ports, and so on. This interface is used a lot in the example."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               "AWhen a timer expires. The driver can set timers with the function"}],
             0,false},
            {text,
             [18,42,100,114,105,118,101,114,95,115,101,116,95,116,105,109,101,
              114,42]},
            {sep,
             [{text,
               "e. When such timers expire, a specific callback function is called. No timers are used in the example."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "YWhen the whole driver is unloaded. Every resource allocated by the driver is to be freed."}],
          0,false}],
        0,false}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,"1## The Data Structures of the Distribution Driver"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [861,84,104,101,32,100,114,105,118,101,114,32,117,115,101,100,
               32,102,111,114,32,69,114,108,97,110,103,32,100,105,115,116,114,
               105,98,117,116,105,111,110,32,105,115,32,116,111,32,105,109,
               112,108,101,109,101,110,116,32,97,32,114,101,108,105,97,98,108,
               101,44,32,111,114,100,101,114,32,109,97,105,110,116,97,105,110,
               105,110,103,44,32,118,97,114,105,97,98,108,101,32,108,101,110,
               103,116,104,32,112,97,99,107,101,116,45,111,114,105,101,110,
               116,101,100,32,112,114,111,116,111,99,111,108,46,32,65,108,108,
               32,101,114,114,111,114,32,99,111,114,114,101,99,116,105,111,
               110,44,32,114,101,115,101,110,100,105,110,103,32,97,110,100,32,
               115,117,99,104,32,110,101,101,100,32,116,111,32,98,101,32,105,
               109,112,108,101,109,101,110,116,101,100,32,105,110,32,116,104,
               101,32,100,114,105,118,101,114,32,111,114,32,98,121,32,116,104,
               101,32,117,110,100,101,114,108,121,105,110,103,32,99,111,109,
               109,117,110,105,99,97,116,105,111,110,115,32,112,114,111,116,
               111,99,111,108,46,32,73,102,32,116,104,101,32,112,114,111,116,
               111,99,111,108,32,105,115,32,115,116,114,101,97,109,45,111,114,
               105,101,110,116,101,100,32,40,97,115,32,105,115,32,116,104,101,
               32,99,97,115,101,32,119,105,116,104,32,98,111,116,104,32,84,67,
               80,47,73,80,32,97,110,100,32,111,117,114,32,115,116,114,101,97,
               109,101,100,32,85,110,105,120,32,100,111,109,97,105,110,32,115,
               111,99,107,101,116,115,41,44,32,115,111,109,101,32,109,101,99,
               104,97,110,105,115,109,32,102,111,114,32,112,97,99,107,97,103,
               105,110,103,32,105,115,32,110,101,101,100,101,100,46,32,87,101,
               32,119,105,108,108,32,117,115,101,32,116,104,101,32,115,105,
               109,112,108,101,32,109,101,116,104,111,100,32,111,102,32,104,
               97,118,105,110,103,32,97,32,104,101,97,100,101,114,32,111,102,
               32,102,111,117,114,32,98,121,116,101,115,32,99,111,110,116,97,
               105,110,105,110,103,32,116,104,101,32,108,101,110,103,116,104,
               32,111,102,32,116,104,101,32,112,97,99,107,97,103,101,32,105,
               110,32,97,32,98,105,103,45,101,110,100,105,97,110,32,51,50,45,
               98,105,116,32,105,110,116,101,103,101,114,46,32,65,115,32,85,
               110,105,120,32,100,111,109,97,105,110,32,115,111,99,107,101,
               116,115,32,111,110,108,121,32,99,97,110,32,98,101,32,117,115,
               101,100,32,98,101,116,119,101,101,110,32,112,114,111,99,101,
               115,115,101,115,32,111,110,32,116,104,101,32,115,97,109,101,32,
               109,97,99,104,105,110,101,44,32,119,101,32,100,111,32,110,111,
               116,32,110,101,101,100,32,116,111,32,99,111,100,101,32,116,104,
               101,32,105,110,116,101,103,101,114,32,105,110,32,115,111,109,
               101,32,115,112,101,99,105,97,108,32,101,110,100,105,97,110,101,
               115,115,44,32,98,117,116,32,119,101,32,119,105,108,108,32,100,
               111,32,105,116,32,97,110,121,119,97,121,32,98,101,99,97,117,
               115,101,32,105,110,32,109,111,115,116,32,115,105,116,117,97,
               116,105,111,110,32,121,111,117,32,110,101,101,100,32,116,111,
               32,100,111,32,105,116,46,32,85,110,105,120,32,100,111,109,97,
               105,110,32,115,111,99,107,101,116,115,32,97,114,101,32,114,101,
               108,105,97,98,108,101,32,97,110,100,32,111,114,100,101,114,32,
               109,97,105,110,116,97,105,110,105,110,103,44,32,115,111,32,119,
               101,32,100,111,32,110,111,116,32,110,101,101,100,32,116,111,32,
               105,109,112,108,101,109,101,110,116,32,114,101,115,101,110,100,
               115,32,97,110,100,32,115,117,99,104,32,105,110,32,116,104,101,
               32,100,114,105,118,101,114,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "gWe start writing the example Unix domain sockets driver by declaring prototypes and filling in a static"}],
              0,false},
             {text,"\r*ErlDrvEntry*"},
             {sep,[{text,"\nstructure:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [2901,10,40,32,49,41,32,35,105,110,99,108,117,100,101,32,60,115,
               116,100,105,111,46,104,62,10,40,32,50,41,32,35,105,110,99,108,
               117,100,101,32,60,115,116,100,108,105,98,46,104,62,10,40,32,51,
               41,32,35,105,110,99,108,117,100,101,32,60,115,116,114,105,110,
               103,46,104,62,10,40,32,52,41,32,35,105,110,99,108,117,100,101,
               32,60,117,110,105,115,116,100,46,104,62,10,40,32,53,41,32,35,
               105,110,99,108,117,100,101,32,60,101,114,114,110,111,46,104,62,
               10,40,32,54,41,32,35,105,110,99,108,117,100,101,32,60,115,121,
               115,47,116,121,112,101,115,46,104,62,10,40,32,55,41,32,35,105,
               110,99,108,117,100,101,32,60,115,121,115,47,115,116,97,116,46,
               104,62,10,40,32,56,41,32,35,105,110,99,108,117,100,101,32,60,
               115,121,115,47,115,111,99,107,101,116,46,104,62,10,40,32,57,41,
               32,35,105,110,99,108,117,100,101,32,60,115,121,115,47,117,110,
               46,104,62,10,40,49,48,41,32,35,105,110,99,108,117,100,101,32,
               60,102,99,110,116,108,46,104,62,10,10,40,49,49,41,32,35,100,
               101,102,105,110,101,32,72,65,86,69,95,85,73,79,95,72,10,40,49,
               50,41,32,35,105,110,99,108,117,100,101,32,34,101,114,108,95,
               100,114,105,118,101,114,46,104,34,10,10,40,49,51,41,32,47,42,
               10,40,49,52,41,32,42,42,32,73,110,116,101,114,102,97,99,101,32,
               114,111,117,116,105,110,101,115,10,40,49,53,41,32,42,47,10,40,
               49,54,41,32,115,116,97,116,105,99,32,69,114,108,68,114,118,68,
               97,116,97,32,117,100,115,95,115,116,97,114,116,40,69,114,108,
               68,114,118,80,111,114,116,32,112,111,114,116,44,32,99,104,97,
               114,32,42,98,117,102,102,41,59,10,40,49,55,41,32,115,116,97,
               116,105,99,32,118,111,105,100,32,117,100,115,95,115,116,111,
               112,40,69,114,108,68,114,118,68,97,116,97,32,104,97,110,100,
               108,101,41,59,10,40,49,56,41,32,115,116,97,116,105,99,32,118,
               111,105,100,32,117,100,115,95,99,111,109,109,97,110,100,40,69,
               114,108,68,114,118,68,97,116,97,32,104,97,110,100,108,101,44,
               32,99,104,97,114,32,42,98,117,102,102,44,32,105,110,116,32,98,
               117,102,102,108,101,110,41,59,10,40,49,57,41,32,115,116,97,116,
               105,99,32,118,111,105,100,32,117,100,115,95,105,110,112,117,
               116,40,69,114,108,68,114,118,68,97,116,97,32,104,97,110,100,
               108,101,44,32,69,114,108,68,114,118,69,118,101,110,116,32,101,
               118,101,110,116,41,59,10,40,50,48,41,32,115,116,97,116,105,99,
               32,118,111,105,100,32,117,100,115,95,111,117,116,112,117,116,
               40,69,114,108,68,114,118,68,97,116,97,32,104,97,110,100,108,
               101,44,32,69,114,108,68,114,118,69,118,101,110,116,32,101,118,
               101,110,116,41,59,10,40,50,49,41,32,115,116,97,116,105,99,32,
               118,111,105,100,32,117,100,115,95,102,105,110,105,115,104,40,
               118,111,105,100,41,59,10,40,50,50,41,32,115,116,97,116,105,99,
               32,105,110,116,32,117,100,115,95,99,111,110,116,114,111,108,40,
               69,114,108,68,114,118,68,97,116,97,32,104,97,110,100,108,101,
               44,32,117,110,115,105,103,110,101,100,32,105,110,116,32,99,111,
               109,109,97,110,100,44,32,10,40,50,51,41,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,99,104,97,
               114,42,32,98,117,102,44,32,105,110,116,32,99,111,117,110,116,
               44,32,99,104,97,114,42,42,32,114,101,115,44,32,105,110,116,32,
               114,101,115,95,115,105,122,101,41,59,10,10,40,50,52,41,32,47,
               42,32,84,104,101,32,100,114,105,118,101,114,32,101,110,116,114,
               121,32,42,47,10,40,50,53,41,32,115,116,97,116,105,99,32,69,114,
               108,68,114,118,69,110,116,114,121,32,117,100,115,95,100,114,
               105,118,101,114,95,101,110,116,114,121,32,61,32,123,10,40,50,
               54,41,32,32,32,32,32,78,85,76,76,44,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,
               32,105,110,105,116,44,32,78,47,65,32,42,47,10,40,50,55,41,32,
               32,32,32,32,117,100,115,95,115,116,97,114,116,44,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,
               32,115,116,97,114,116,44,32,99,97,108,108,101,100,32,119,104,
               101,110,32,112,111,114,116,32,105,115,32,111,112,101,110,101,
               100,32,42,47,10,40,50,56,41,32,32,32,32,32,117,100,115,95,115,
               116,111,112,44,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,47,42,32,115,116,111,112,44,32,99,97,
               108,108,101,100,32,119,104,101,110,32,112,111,114,116,32,105,
               115,32,99,108,111,115,101,100,32,42,47,10,40,50,57,41,32,32,32,
               32,32,117,100,115,95,99,111,109,109,97,110,100,44,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,
               111,117,116,112,117,116,44,32,99,97,108,108,101,100,32,119,104,
               101,110,32,101,114,108,97,110,103,32,104,97,115,32,115,101,110,
               116,32,42,47,10,40,51,48,41,32,32,32,32,32,117,100,115,95,105,
               110,112,117,116,44,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,47,42,32,114,101,97,100,121,95,105,
               110,112,117,116,44,32,99,97,108,108,101,100,32,119,104,101,110,
               32,105,110,112,117,116,10,40,51,49,41,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,100,101,115,99,114,105,112,
               116,111,114,32,114,101,97,100,121,32,42,47,10,40,51,50,41,32,
               32,32,32,32,117,100,115,95,111,117,116,112,117,116,44,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,
               32,114,101,97,100,121,95,111,117,116,112,117,116,44,32,99,97,
               108,108,101,100,32,119,104,101,110,32,111,117,116,112,117,116,
               32,10,40,51,51,41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,100,101,115,99,114,105,112,116,111,114,32,114,
               101,97,100,121,32,42,47,10,40,51,52,41,32,32,32,32,32,34,117,
               100,115,95,100,114,118,34,44,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,99,104,97,114,32,
               42,100,114,105,118,101,114,95,110,97,109,101,44,32,116,104,101,
               32,97,114,103,117,109,101,110,116,32,10,40,51,53,41,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,116,111,32,
               111,112,101,110,95,112,111,114,116,32,42,47,10,40,51,54,41,32,
               32,32,32,32,117,100,115,95,102,105,110,105,115,104,44,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,
               32,102,105,110,105,115,104,44,32,99,97,108,108,101,100,32,119,
               104,101,110,32,117,110,108,111,97,100,101,100,32,42,47,10,40,
               51,55,41,32,32,32,32,32,78,85,76,76,44,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,
               42,32,118,111,105,100,32,42,32,116,104,97,116,32,105,115,32,
               110,111,116,32,117,115,101,100,32,40,66,67,41,32,42,47,10,40,
               51,56,41,32,32,32,32,32,117,100,115,95,99,111,110,116,114,111,
               108,44,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,47,42,32,99,111,110,116,114,111,108,44,32,112,111,114,
               116,95,99,111,110,116,114,111,108,32,99,97,108,108,98,97,99,
               107,32,42,47,10,40,51,57,41,32,32,32,32,32,78,85,76,76,44,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,47,42,32,116,105,109,101,111,117,116,44,32,
               99,97,108,108,101,100,32,111,110,32,116,105,109,101,111,117,
               116,115,32,42,47,10,40,52,48,41,32,32,32,32,32,78,85,76,76,44,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,47,42,32,111,117,116,112,117,116,118,44,
               32,118,101,99,116,111,114,32,111,117,116,112,117,116,32,105,
               110,116,101,114,102,97,99,101,32,42,47,10,40,52,49,41,32,32,32,
               32,32,78,85,76,76,44,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,114,101,97,
               100,121,95,97,115,121,110,99,32,99,97,108,108,98,97,99,107,32,
               42,47,10,40,52,50,41,32,32,32,32,32,78,85,76,76,44,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,47,42,32,102,108,117,115,104,32,99,97,108,108,98,97,
               99,107,32,42,47,10,40,52,51,41,32,32,32,32,32,78,85,76,76,44,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,47,42,32,99,97,108,108,32,99,97,108,108,
               98,97,99,107,32,42,47,10,40,52,52,41,32,32,32,32,32,78,85,76,
               76,44,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,47,42,32,101,118,101,110,116,32,99,
               97,108,108,98,97,99,107,32,42,47,10,40,52,53,41,32,32,32,32,32,
               69,82,76,95,68,82,86,95,69,88,84,69,78,68,69,68,95,77,65,82,75,
               69,82,44,32,32,32,32,32,32,32,32,32,47,42,32,69,120,116,101,
               110,100,101,100,32,100,114,105,118,101,114,32,105,110,116,101,
               114,102,97,99,101,32,109,97,114,107,101,114,32,42,47,10,40,52,
               54,41,32,32,32,32,32,69,82,76,95,68,82,86,95,69,88,84,69,78,68,
               69,68,95,77,65,74,79,82,95,86,69,82,83,73,79,78,44,32,32,47,42,
               32,77,97,106,111,114,32,118,101,114,115,105,111,110,32,110,117,
               109,98,101,114,32,42,47,10,40,52,55,41,32,32,32,32,32,69,82,76,
               95,68,82,86,95,69,88,84,69,78,68,69,68,95,77,73,78,79,82,95,86,
               69,82,83,73,79,78,44,32,32,47,42,32,77,105,110,111,114,32,118,
               101,114,115,105,111,110,32,110,117,109,98,101,114,32,42,47,10,
               40,52,56,41,32,32,32,32,32,69,82,76,95,68,82,86,95,70,76,65,71,
               95,83,79,70,84,95,66,85,83,89,44,32,32,32,32,32,32,32,32,32,32,
               47,42,32,68,114,105,118,101,114,32,102,108,97,103,115,46,32,83,
               111,102,116,32,98,117,115,121,32,102,108,97,103,32,105,115,10,
               40,52,57,41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,114,101,113,117,105,114,101,100,32,102,111,114,32,100,
               105,115,116,114,105,98,117,116,105,111,110,32,100,114,105,118,
               101,114,115,32,42,47,10,40,53,48,41,32,32,32,32,32,78,85,76,76,
               44,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,47,42,32,82,101,115,101,114,118,101,
               100,32,102,111,114,32,105,110,116,101,114,110,97,108,32,117,
               115,101,32,42,47,10,40,53,49,41,32,32,32,32,32,78,85,76,76,44,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,47,42,32,112,114,111,99,101,115,115,95,
               101,120,105,116,32,99,97,108,108,98,97,99,107,32,42,47,10,40,
               53,50,41,32,32,32,32,32,78,85,76,76,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,
               42,32,115,116,111,112,95,115,101,108,101,99,116,32,99,97,108,
               108,98,97,99,107,32,42,47,10,40,53,51,41,32,125,59]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "~On line 1-10 the OS headers needed for the driver are included. As this driver is written for Solaris, we know that the header"}],
              0,false},
             {text,[7,42,117,105,111,46,104,42]},
             {sep,[{text,"$exists. So the preprocessor variable"}],0,false},
             {text,"\f*HAVE_UIO_H*"},
             {sep,
              [{text,
                [21,99,97,110,32,98,101,32,100,101,102,105,110,101,100,32,98,
                 101,102,111,114,101]}],
              0,false},
             {text,[14,42,101,114,108,95,100,114,105,118,101,114,46,104,42]},
             {sep,
              [{text,")is included on line 12. The definition of"}],
              0,false},
             {text,"\f*HAVE_UIO_H*"},
             {sep,
              [{text,
                [128,119,105,108,108,32,109,97,107,101,32,116,104,101,32,73,
                 47,79,32,118,101,99,116,111,114,115,32,117,115,101,100,32,
                 105,110,32,69,114,108,97,110,103,39,115,32,100,114,105,118,
                 101,114,32,113,117,101,117,101,115,32,116,111,32,99,111,114,
                 114,101,115,112,111,110,100,32,116,111,32,116,104,101,32,111,
                 112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,
                 115,32,100,105,116,116,111,44,32,119,104,105,99,104,32,105,
                 115,32,118,101,114,121,32,99,111,110,118,101,110,105,101,110,
                 116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "UOn line 16-23 the different callback functions are declared (\"forward declarations\")."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "àThe driver structure is similar for statically linked-in drivers and dynamically loaded. However, some of the fields are to be left empty (that is, initialized to NULL) in the different types of drivers. The first field (the"}],
              0,false},
             {text,[6,42,105,110,105,116,42]},
             {sep,
              [{text,
                "Sfunction pointer) is always left blank in a dynamically loaded driver, see line 26."}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "¶on line 37 is always to be there, the field is no longer used and is retained for backward compatibility. No timers are used in this driver, why no callback for timers is needed. The"}],
              0,false},
             {text,"\t*outputv*"},
             {sep,
              [{text,
                "Efield (line 40) can be used to implement an interface similar to Unix"}],
              0,false},
             {text,"\b*writev*"},
             {sep,
              [{text,
                ">for output. The Erlang runtime system could previously not use"}],
              0,false},
             {text,"\t*outputv*"},
             {sep,
              [{text,
                "ufor the distribution, but it can as from ERTS 5.7.2. As this driver was written before ERTS 5.7.2 it does not use the"}],
              0,false},
             {text,"\t*outputv*"},
             {sep,
              [{text,
                [19,99,97,108,108,98,97,99,107,46,32,85,115,105,110,103,32,
                 116,104,101]}],
              0,false},
             {text,"\t*outputv*"},
             {sep,
              [{text,
                "xcallback is preferred, as it reduces copying of data. (We will however use scatter/gather I/O internally in the driver.)"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "¾As from ERTS 5.5.3 the driver interface was extended with version control and the possibility to pass capability information. Capability flags are present on line 48. As from ERTS 5.7.4 flag"}],
              0,false},
             {text,
              "8[driver_entry#driver_flags](./driver_entry#driver_flags)"},
             {sep,
              [{text,
                [131,105,115,32,114,101,113,117,105,114,101,100,32,102,111,
                 114,32,100,114,105,118,101,114,115,32,116,104,97,116,32,97,
                 114,101,32,116,111,32,98,101,32,117,115,101,100,32,98,121,32,
                 116,104,101,32,100,105,115,116,114,105,98,117,116,105,111,
                 110,46,32,84,104,101,32,115,111,102,116,32,98,117,115,121,32,
                 102,108,97,103,32,105,109,112,108,105,101,115,32,116,104,97,
                 116,32,116,104,101,32,100,114,105,118,101,114,32,99,97,110,
                 32,104,97,110,100,108,101,32,99,97,108,108,115,32,116,111,32,
                 116,104,101]}],
              0,false},
             {text,"\b*output*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\t*outputv*"},
             {sep,
              [{text,
                "Úcallbacks although it has marked itself as busy. This has always been a requirement on drivers used by the distribution, but no capability information has been available about this previously. For more information. see"}],
              0,false},
             {text,"6[erl_driver#set_busy_port](./erl_driver#set_busy_port)"},
             {sep,[{text,[2,41,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [494,84,104,105,115,32,100,114,105,118,101,114,32,119,97,115,
                 32,119,114,105,116,116,101,110,32,98,101,102,111,114,101,32,
                 116,104,101,32,114,117,110,116,105,109,101,32,115,121,115,
                 116,101,109,32,104,97,100,32,83,77,80,32,115,117,112,112,111,
                 114,116,46,32,84,104,101,32,100,114,105,118,101,114,32,119,
                 105,108,108,32,115,116,105,108,108,32,102,117,110,99,116,105,
                 111,110,32,105,110,32,116,104,101,32,114,117,110,116,105,109,
                 101,32,115,121,115,116,101,109,32,119,105,116,104,32,83,77,
                 80,32,115,117,112,112,111,114,116,44,32,98,117,116,32,112,
                 101,114,102,111,114,109,97,110,99,101,32,119,105,108,108,32,
                 115,117,102,102,101,114,32,102,114,111,109,32,108,111,99,107,
                 32,99,111,110,116,101,110,116,105,111,110,32,111,110,32,116,
                 104,101,32,100,114,105,118,101,114,32,108,111,99,107,32,117,
                 115,101,100,32,102,111,114,32,116,104,101,32,100,114,105,118,
                 101,114,46,32,84,104,105,115,32,99,97,110,32,98,101,32,97,
                 108,108,101,118,105,97,116,101,100,32,98,121,32,114,101,118,
                 105,101,119,105,110,103,32,97,110,100,32,112,101,114,104,97,
                 112,115,32,114,101,119,114,105,116,105,110,103,32,116,104,
                 101,32,99,111,100,101,32,115,111,32,116,104,97,116,32,101,97,
                 99,104,32,105,110,115,116,97,110,99,101,32,111,102,32,116,
                 104,101,32,100,114,105,118,101,114,32,115,97,102,101,108,121,
                 32,99,97,110,32,101,120,101,99,117,116,101,32,105,110,32,112,
                 97,114,97,108,108,101,108,46,32,87,104,101,110,32,105,110,
                 115,116,97,110,99,101,115,32,115,97,102,101,108,121,32,99,97,
                 110,32,101,120,101,99,117,116,101,32,105,110,32,112,97,114,
                 97,108,108,101,108,44,32,105,116,32,105,115,32,115,97,102,
                 101,32,116,111,32,101,110,97,98,108,101,32,105,110,115,116,
                 97,110,99,101,45,115,112,101,99,105,102,105,99,32,108,111,99,
                 107,105,110,103,32,111,110,32,116,104,101,32,100,114,105,118,
                 101,114,46,32,84,104,105,115,32,105,115,32,100,111,110,101,
                 32,98,121,32,112,97,115,115,105,110,103]}],
              0,false},
             {text,
              "8[driver_entry#driver_flags](./driver_entry#driver_flags)"},
             {sep,
              [{text,
                "=as a driver flag. This is left as an exercise for the reader."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"+Thus, the defined callbacks are as follows:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,"\tuds_start"}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   "bMust initiate data for a port. We do not create any sockets here, only initialize data structures."}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,[{text,"\buds_stop"}],0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,
                                 [29,67,97,108,108,101,100,32,119,104,101,110,
                                  32,97,32,112,111,114,116,32,105,115,32,99,
                                  108,111,115,101,100,46]}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,"\vuds_command"}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               "¨Handles messages from Erlang. The messages can either be plain data to be sent or more subtle instructions to the driver. This function is here mostly for data pumping."}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,"\tuds_input"}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             "5Called when there is something to read from a socket."}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,"\nuds_output"}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "0Called when it is possible to write to a socket."}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\nuds_finish"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "´Called when the driver is unloaded. A distribution driver will never be unloaded, but we include this for completeness. To be able to clean up after oneself is always a good thing."}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,"\vuds_control"}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,[{text,[3,84,104,101]}],0,false},
                      {text,
                       [21,101,114,108,97,110,103,35,112,111,114,116,95,99,
                        111,110,116,114,111,108,47,51]},
                      {sep,
                       [{text,
                         "5callback, which is used a lot in this implementation."}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "FThe ports implemented by this driver operate in two major modes, named"}],
              0,false},
             {text,"\t*command*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[6,42,100,97,116,97,42]},
             {sep,[{text,[4,46,32,73,110]}],0,false},
             {text,"\t*command*"},
             {sep,
              [{text,",mode, only passive reading and writing (like"}],
              0,false},
             {text,[14,42,103,101,110,95,116,99,112,58,114,101,99,118,42]},
             {sep,[{text,[1,47]}],0,false},
             {text,[14,42,103,101,110,95,116,99,112,58,115,101,110,100,42]},
             {sep,
              [{text,
                "}) can be done. The port is in this mode during the distribution handshake. When the connection is up, the port is switched to"}],
              0,false},
             {text,[6,42,100,97,116,97,42]},
             {sep,
              [{text,
                "Smode and all data is immediately read and passed further to the Erlang emulator. In"}],
              0,false},
             {text,[6,42,100,97,116,97,42]},
             {sep,
              [{text,
                [25,109,111,100,101,44,32,110,111,32,100,97,116,97,32,97,114,
                 114,105,118,105,110,103,32,116,111]}],
              0,false},
             {text,"\r*uds_command*"},
             {sep,
              [{text,
                "=is interpreted, only packaged and sent out on the socket. The"}],
              0,false},
             {text,"\r*uds_control*"},
             {sep,
              [{text,"4callback does the switching between those two modes."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[5,87,104,105,108,101]}],0,false},
             {text,"\f*net_kernel*"},
             {sep,
              [{text,
                [266,105,110,102,111,114,109,115,32,100,105,102,102,101,114,
                 101,110,116,32,115,117,98,115,121,115,116,101,109,115,32,116,
                 104,97,116,32,116,104,101,32,99,111,110,110,101,99,116,105,
                 111,110,32,105,115,32,99,111,109,105,110,103,32,117,112,44,
                 32,116,104,101,32,112,111,114,116,32,105,115,32,116,111,32,
                 97,99,99,101,112,116,32,100,97,116,97,32,116,111,32,115,101,
                 110,100,46,32,72,111,119,101,118,101,114,44,32,116,104,101,
                 32,112,111,114,116,32,115,104,111,117,108,100,32,110,111,116,
                 32,114,101,99,101,105,118,101,32,97,110,121,32,100,97,116,97,
                 44,32,116,111,32,97,118,111,105,100,32,116,104,97,116,32,100,
                 97,116,97,32,97,114,114,105,118,101,115,32,102,114,111,109,
                 32,97,110,111,116,104,101,114,32,110,111,100,101,32,98,101,
                 102,111,114,101,32,101,118,101,114,121,32,107,101,114,110,
                 101,108,32,115,117,98,115,121,115,116,101,109,32,105,115,32,
                 112,114,101,112,97,114,101,100,32,116,111,32,104,97,110,100,
                 108,101,32,105,116,46,32,65,32,116,104,105,114,100,32,109,
                 111,100,101,44,32,110,97,109,101,100]}],
              0,false},
             {text,[14,42,105,110,116,101,114,109,101,100,105,97,116,101,42]},
             {sep,[{text,"&, is used for this intermediate stage."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4An enum is defined for the different types of ports:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [633,10,40,32,49,41,32,116,121,112,101,100,101,102,32,101,110,
               117,109,32,123,32,10,40,32,50,41,32,32,32,32,32,112,111,114,
               116,84,121,112,101,85,110,107,110,111,119,110,44,32,32,32,32,
               32,32,47,42,32,65,110,32,117,110,105,110,105,116,105,97,108,
               105,122,101,100,32,112,111,114,116,32,42,47,10,40,32,51,41,32,
               32,32,32,32,112,111,114,116,84,121,112,101,76,105,115,116,101,
               110,101,114,44,32,32,32,32,32,47,42,32,65,32,108,105,115,116,
               101,110,105,110,103,32,112,111,114,116,47,115,111,99,107,101,
               116,32,42,47,10,40,32,52,41,32,32,32,32,32,112,111,114,116,84,
               121,112,101,65,99,99,101,112,116,111,114,44,32,32,32,32,32,47,
               42,32,65,110,32,105,110,116,101,114,109,101,100,105,97,116,101,
               32,115,116,97,103,101,32,119,104,101,110,32,97,99,99,101,112,
               116,105,110,103,10,40,32,53,41,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               111,110,32,97,32,108,105,115,116,101,110,32,112,111,114,116,32,
               42,47,10,40,32,54,41,32,32,32,32,32,112,111,114,116,84,121,112,
               101,67,111,110,110,101,99,116,111,114,44,32,32,32,32,47,42,32,
               65,110,32,105,110,116,101,114,109,101,100,105,97,116,101,32,
               115,116,97,103,101,32,119,104,101,110,32,99,111,110,110,101,99,
               116,105,110,103,32,42,47,10,40,32,55,41,32,32,32,32,32,112,111,
               114,116,84,121,112,101,67,111,109,109,97,110,100,44,32,32,32,
               32,32,32,47,42,32,65,32,99,111,110,110,101,99,116,101,100,32,
               111,112,101,110,32,112,111,114,116,32,105,110,32,99,111,109,
               109,97,110,100,32,109,111,100,101,32,42,47,10,40,32,56,41,32,
               32,32,32,32,112,111,114,116,84,121,112,101,73,110,116,101,114,
               109,101,100,105,97,116,101,44,32,47,42,32,65,32,99,111,110,110,
               101,99,116,101,100,32,111,112,101,110,32,112,111,114,116,32,
               105,110,32,115,112,101,99,105,97,108,10,40,32,57,41,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,104,97,108,102,32,97,99,116,105,118,101,32,
               109,111,100,101,32,42,47,10,40,49,48,41,32,32,32,32,32,112,111,
               114,116,84,121,112,101,68,97,116,97,32,32,32,32,32,32,32,32,32,
               32,47,42,32,65,32,99,111,110,110,101,99,116,101,100,32,111,112,
               101,110,32,112,111,114,116,32,105,110,32,100,97,116,97,32,109,
               111,100,101,32,42,47,32,10,40,49,49,41,32,125,32,80,111,114,
               116,84,121,112,101,59,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"#The different types are as follows:"}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,
                              [15,112,111,114,116,84,121,112,101,85,110,107,
                               110,111,119,110]}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   "LThe type a port has when it is opened, but not bound to any file descriptor."}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,
                             [16,112,111,114,116,84,121,112,101,76,105,115,
                              116,101,110,101,114]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,
                                 "»A port that is connected to a listen socket. This port does not do much, no data pumping is done on this socket, but read data is available when one is trying to do an accept on the port."}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [16,112,111,114,116,84,121,112,101,65,99,99,101,
                            112,116,111,114]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 [146,84,104,105,115,32,112,111,114,116,32,
                                  105,115,32,116,111,32,114,101,112,114,101,
                                  115,101,110,116,32,116,104,101,32,114,101,
                                  115,117,108,116,32,111,102,32,97,110,32,97,
                                  99,99,101,112,116,32,111,112,101,114,97,116,
                                  105,111,110,46,32,73,116,32,105,115,32,99,
                                  114,101,97,116,101,100,32,119,104,101,110,
                                  32,111,110,101,32,119,97,110,116,115,32,116,
                                  111,32,97,99,99,101,112,116,32,102,114,111,
                                  109,32,97,32,108,105,115,116,101,110,32,115,
                                  111,99,107,101,116,44,32,97,110,100,32,105,
                                  116,32,105,115,32,99,111,110,118,101,114,
                                  116,101,100,32,116,111,32,97]}],
                               0,false},
                              {text,
                               [15,112,111,114,116,84,121,112,101,67,111,109,
                                109,97,110,100]},
                              {sep,
                               [{text,
                                 [25,119,104,101,110,32,116,104,101,32,97,99,
                                  99,101,112,116,32,115,117,99,99,101,101,100,
                                  115,46]}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         [17,112,111,114,116,84,121,112,101,67,111,110,110,
                          101,99,116,111,114]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               [15,86,101,114,121,32,115,105,109,105,108,97,
                                114,32,116,111]}],
                             0,false},
                            {text,
                             [16,112,111,114,116,84,121,112,101,65,99,99,101,
                              112,116,111,114]},
                            {sep,
                             [{text,
                               "Æ, an intermediate stage between the request for a connect operation and that the socket is connected to an accepting ditto in the other end. When the sockets are connected, the port switches type to"}],
                             0,false},
                            {text,
                             [15,112,111,114,116,84,121,112,101,67,111,109,
                              109,97,110,100]},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [15,112,111,114,116,84,121,112,101,67,111,109,109,97,
                        110,100]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "*A connected socket (or accepted socket) in"}],
                           0,false},
                          {text,[7,99,111,109,109,97,110,100]},
                          {sep,
                           [{text,
                             [23,109,111,100,101,32,109,101,110,116,105,111,
                              110,101,100,32,101,97,114,108,105,101,114,46]}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     [20,112,111,114,116,84,121,112,101,73,110,116,101,114,
                      109,101,100,105,97,116,101]}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "eThe intermediate stage for a connected socket. There is to be no processing of input for this socket."}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,"\fportTypeData"}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         "6The mode where data is pumped through the port and the"}],
                       0,false},
                      {text,"\vuds_command"},
                      {sep,
                       [{text,
                         "»routine regards every call as a call where sending is wanted. In this mode, all input available is read and sent to Erlang when it arrives on the socket, much like in the active mode of a"}],
                       0,false},
                      {text,[7,103,101,110,95,116,99,112]},
                      {sep,[{text,[7,115,111,99,107,101,116,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [279,87,101,32,115,116,117,100,121,32,116,104,101,32,115,116,97,
               116,101,32,116,104,97,116,32,105,115,32,110,101,101,100,101,
               100,32,102,111,114,32,116,104,101,32,112,111,114,116,115,46,32,
               78,111,116,105,99,101,32,116,104,97,116,32,110,111,116,32,97,
               108,108,32,102,105,101,108,100,115,32,97,114,101,32,117,115,
               101,100,32,102,111,114,32,97,108,108,32,116,121,112,101,115,32,
               111,102,32,112,111,114,116,115,46,32,83,111,109,101,32,115,112,
               97,99,101,32,99,111,117,108,100,32,98,101,32,115,97,118,101,
               100,32,98,121,32,117,115,105,110,103,32,117,110,105,111,110,
               115,44,32,98,117,116,32,116,104,97,116,32,119,111,117,108,100,
               32,99,108,117,116,116,101,114,32,116,104,101,32,99,111,100,101,
               32,119,105,116,104,32,109,117,108,116,105,112,108,101,32,105,
               110,100,105,114,101,99,116,105,111,110,115,44,32,115,111,32,
               104,101,114,101,32,105,115,32,117,115,101,100,32,111,110,101,
               32,115,116,114,117,99,116,32,102,111,114,32,97,108,108,32,116,
               121,112,101,115,32,111,102,32,112,111,114,116,115,44,32,102,
               111,114,32,114,101,97,100,97,98,105,108,105,116,121,58]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [1275,10,40,32,49,41,32,116,121,112,101,100,101,102,32,117,110,
               115,105,103,110,101,100,32,99,104,97,114,32,66,121,116,101,59,
               10,40,32,50,41,32,116,121,112,101,100,101,102,32,117,110,115,
               105,103,110,101,100,32,105,110,116,32,87,111,114,100,59,10,10,
               40,32,51,41,32,116,121,112,101,100,101,102,32,115,116,114,117,
               99,116,32,117,100,115,95,100,97,116,97,32,123,10,40,32,52,41,
               32,32,32,32,32,105,110,116,32,102,100,59,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,70,105,108,101,32,
               100,101,115,99,114,105,112,116,111,114,32,42,47,10,40,32,53,41,
               32,32,32,32,32,69,114,108,68,114,118,80,111,114,116,32,112,111,
               114,116,59,32,32,32,32,32,32,32,32,32,32,47,42,32,84,104,101,
               32,112,111,114,116,32,105,100,101,110,116,105,102,105,101,114,
               32,42,47,10,40,32,54,41,32,32,32,32,32,105,110,116,32,108,111,
               99,107,102,100,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               47,42,32,84,104,101,32,102,105,108,101,32,100,101,115,99,114,
               105,112,116,111,114,32,102,111,114,32,97,32,108,111,99,107,32,
               102,105,108,101,32,105,110,32,10,40,32,55,41,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,99,97,115,101,32,111,102,32,108,105,115,
               116,101,110,32,115,111,99,107,101,116,115,32,42,47,10,40,32,56,
               41,32,32,32,32,32,66,121,116,101,32,99,114,101,97,116,105,111,
               110,59,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,84,104,101,
               32,99,114,101,97,116,105,111,110,32,115,101,114,105,97,108,32,
               100,101,114,105,118,101,100,32,102,114,111,109,32,116,104,101,
               32,10,40,32,57,41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,
               111,99,107,32,102,105,108,101,32,42,47,10,40,49,48,41,32,32,32,
               32,32,80,111,114,116,84,121,112,101,32,116,121,112,101,59,32,
               32,32,32,32,32,32,32,32,32,32,32,47,42,32,84,121,112,101,32,
               111,102,32,112,111,114,116,32,42,47,10,40,49,49,41,32,32,32,32,
               32,99,104,97,114,32,42,110,97,109,101,59,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,47,42,32,83,104,111,114,116,32,110,97,
               109,101,32,111,102,32,115,111,99,107,101,116,32,102,111,114,32,
               117,110,108,105,110,107,32,42,47,10,40,49,50,41,32,32,32,32,32,
               87,111,114,100,32,115,101,110,116,59,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,47,42,32,66,121,116,101,115,32,115,101,
               110,116,32,42,47,10,40,49,51,41,32,32,32,32,32,87,111,114,100,
               32,114,101,99,101,105,118,101,100,59,32,32,32,32,32,32,32,32,
               32,32,32,32,47,42,32,66,121,116,101,115,32,114,101,99,101,105,
               118,101,100,32,42,47,10,40,49,52,41,32,32,32,32,32,115,116,114,
               117,99,116,32,117,100,115,95,100,97,116,97,32,42,112,97,114,
               116,110,101,114,59,32,47,42,32,84,104,101,32,112,97,114,116,
               110,101,114,32,105,110,32,97,110,32,97,99,99,101,112,116,47,
               108,105,115,116,101,110,32,112,97,105,114,32,42,47,10,40,49,53,
               41,32,32,32,32,32,115,116,114,117,99,116,32,117,100,115,95,100,
               97,116,97,32,42,110,101,120,116,59,32,32,32,32,47,42,32,78,101,
               120,116,32,115,116,114,117,99,116,117,114,101,32,105,110,32,
               108,105,115,116,32,42,47,10,40,49,54,41,32,32,32,32,32,47,42,
               32,84,104,101,32,105,110,112,117,116,32,98,117,102,102,101,114,
               32,97,110,100,32,105,116,115,32,100,97,116,97,32,42,47,10,40,
               49,55,41,32,32,32,32,32,105,110,116,32,98,117,102,102,101,114,
               95,115,105,122,101,59,32,32,32,32,32,32,32,32,32,32,47,42,32,
               84,104,101,32,97,108,108,111,99,97,116,101,100,32,115,105,122,
               101,32,111,102,32,116,104,101,32,105,110,112,117,116,32,98,117,
               102,102,101,114,32,42,47,10,40,49,56,41,32,32,32,32,32,105,110,
               116,32,98,117,102,102,101,114,95,112,111,115,59,32,32,32,32,32,
               32,32,32,32,32,32,47,42,32,67,117,114,114,101,110,116,32,112,
               111,115,105,116,105,111,110,32,105,110,32,105,110,112,117,116,
               32,98,117,102,102,101,114,32,42,47,10,40,49,57,41,32,32,32,32,
               32,105,110,116,32,104,101,97,100,101,114,95,112,111,115,59,32,
               32,32,32,32,32,32,32,32,32,32,47,42,32,87,104,101,114,101,32,
               116,104,101,32,99,117,114,114,101,110,116,32,104,101,97,100,
               101,114,32,105,115,32,105,110,32,116,104,101,32,10,40,50,48,41,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,105,110,112,117,116,32,
               98,117,102,102,101,114,32,42,47,10,40,50,49,41,32,32,32,32,32,
               66,121,116,101,32,42,98,117,102,102,101,114,59,32,32,32,32,32,
               32,32,32,32,32,32,32,32,47,42,32,84,104,101,32,97,99,116,117,
               97,108,32,105,110,112,117,116,32,98,117,102,102,101,114,32,42,
               47,10,40,50,50,41,32,125,32,85,100,115,68,97,116,97,59,32,32,
               32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [324,84,104,105,115,32,115,116,114,117,99,116,117,114,101,32,
               105,115,32,117,115,101,100,32,102,111,114,32,97,108,108,32,116,
               121,112,101,115,32,111,102,32,112,111,114,116,115,32,97,108,
               116,104,111,117,103,104,32,115,111,109,101,32,102,105,101,108,
               100,115,32,97,114,101,32,117,115,101,108,101,115,115,32,102,
               111,114,32,115,111,109,101,32,116,121,112,101,115,46,32,84,104,
               101,32,108,101,97,115,116,32,109,101,109,111,114,121,32,99,111,
               110,115,117,109,105,110,103,32,115,111,108,117,116,105,111,110,
               32,119,111,117,108,100,32,98,101,32,116,111,32,97,114,114,97,
               110,103,101,32,116,104,105,115,32,115,116,114,117,99,116,117,
               114,101,32,97,115,32,97,32,117,110,105,111,110,32,111,102,32,
               115,116,114,117,99,116,117,114,101,115,46,32,72,111,119,101,
               118,101,114,44,32,116,104,101,32,109,117,108,116,105,112,108,
               101,32,105,110,100,105,114,101,99,116,105,111,110,115,32,105,
               110,32,116,104,101,32,99,111,100,101,32,116,111,32,97,99,99,
               101,115,115,32,97,32,102,105,101,108,100,32,105,110,32,115,117,
               99,104,32,97,32,115,116,114,117,99,116,117,114,101,32,119,111,
               117,108,100,32,99,108,117,116,116,101,114,32,116,104,101,32,99,
               111,100,101,32,116,111,111,32,109,117,99,104,32,102,111,114,32,
               97,110,32,101,120,97,109,112,108,101,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"+The fields in the structure are as follows:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,[{text,[2,102,100]}],0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,100,62]},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{sep,
                                         [{text,
                                           ";The file descriptor of the socket associated with the port."}],
                                         0,false}],
                                       0,true},
                                      null},
                                     null}},
                                   {text,[5,60,47,100,100,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,[{text,[4,112,111,114,116]}],0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{sep,
                                         [{text,
                                           "ZThe port identifier for the port that this structure corresponds to. It is needed for most"}],
                                         0,false},
                                        {text,"\ndriver_XXX"},
                                        {sep,
                                         [{text,
                                           "+calls from the driver back to the emulator."}],
                                         0,false}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,
                                 [{text,[6,108,111,99,107,102,100]}],
                                 0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {sep,
                                [{above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{text,
                                         "TIf the socket is a listen socket, we use a separate (regular) file for two purposes:"}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {above,
                                  {sep,
                                   [{text,[1,42]},
                                    {sep,
                                     [{text,
                                       "ÈWe want a locking mechanism that gives no race conditions, to be sure if another Erlang node uses the listen socket name we require or if the file is only left there from a previous (crashed) session."}],
                                     0,false}],
                                   0,false},
                                  {sep,
                                   [{text,[1,42]},
                                    {sep,
                                     [{above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{sep,
                                              [{text,"\fWe store the"}],
                                              0,false},
                                             {text,"\bcreation"},
                                             {sep,
                                              [{text,
                                                [30,115,101,114,105,97,108,32,
                                                 110,117,109,98,101,114,32,
                                                 105,110,32,116,104,101,32,
                                                 102,105,108,101,46,32,84,104,
                                                 101]}],
                                              0,false},
                                             {text,"\bcreation"},
                                             {sep,
                                              [{text,
                                                [346,105,115,32,97,32,110,117,
                                                 109,98,101,114,32,116,104,97,
                                                 116,32,105,115,32,116,111,32,
                                                 99,104,97,110,103,101,32,98,
                                                 101,116,119,101,101,110,32,
                                                 100,105,102,102,101,114,101,
                                                 110,116,32,105,110,115,116,
                                                 97,110,99,101,115,32,111,102,
                                                 32,100,105,102,102,101,114,
                                                 101,110,116,32,69,114,108,97,
                                                 110,103,32,101,109,117,108,
                                                 97,116,111,114,115,32,119,
                                                 105,116,104,32,116,104,101,
                                                 32,115,97,109,101,32,110,97,
                                                 109,101,44,32,115,111,32,116,
                                                 104,97,116,32,112,114,111,99,
                                                 101,115,115,32,105,100,101,
                                                 110,116,105,102,105,101,114,
                                                 115,32,102,114,111,109,32,
                                                 111,110,101,32,101,109,117,
                                                 108,97,116,111,114,32,100,
                                                 111,32,110,111,116,32,98,101,
                                                 99,111,109,101,32,118,97,108,
                                                 105,100,32,119,104,101,110,
                                                 32,115,101,110,116,32,116,
                                                 111,32,97,32,110,101,119,32,
                                                 101,109,117,108,97,116,111,
                                                 114,32,119,105,116,104,32,
                                                 116,104,101,32,115,97,109,
                                                 101,32,100,105,115,116,114,
                                                 105,98,117,116,105,111,110,
                                                 32,110,97,109,101,46,32,84,
                                                 104,101,32,99,114,101,97,116,
                                                 105,111,110,32,99,97,110,32,
                                                 98,101,32,102,114,111,109,32,
                                                 48,32,116,104,114,111,117,
                                                 103,104,32,51,32,40,116,119,
                                                 111,32,98,105,116,115,41,32,
                                                 97,110,100,32,105,115,32,115,
                                                 116,111,114,101,100,32,105,
                                                 110,32,101,118,101,114,121,
                                                 32,112,114,111,99,101,115,
                                                 115,32,105,100,101,110,116,
                                                 105,102,105,101,114,32,115,
                                                 101,110,116,32,116,111,32,97,
                                                 110,111,116,104,101,114,32,
                                                 110,111,100,101,46]}],
                                              0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{sep,
                                              [{text,
                                                "AIn a system with TCP-based distribution, this data is kept in the"}],
                                              0,false},
                                             {text,
                                              [25,69,114,108,97,110,103,32,
                                               112,111,114,116,32,109,97,112,
                                               112,101,114,32,100,97,101,109,
                                               111,110]},
                                             {sep,[{text,[1,40]}],0,false},
                                             {text,[4,101,112,109,100]},
                                             {sep,
                                              [{text,
                                                [137,41,44,32,119,104,105,99,
                                                 104,32,105,115,32,99,111,110,
                                                 116,97,99,116,101,100,32,119,
                                                 104,101,110,32,97,32,100,105,
                                                 115,116,114,105,98,117,116,
                                                 101,100,32,110,111,100,101,
                                                 32,115,116,97,114,116,115,46,
                                                 32,84,104,101,32,108,111,99,
                                                 107,32,102,105,108,101,32,97,
                                                 110,100,32,97,32,99,111,110,
                                                 118,101,110,116,105,111,110,
                                                 32,102,111,114,32,116,104,
                                                 101,32,85,68,83,32,108,105,
                                                 115,116,101,110,32,115,111,
                                                 99,107,101,116,39,115,32,110,
                                                 97,109,101,32,114,101,109,
                                                 111,118,101,32,116,104,101,
                                                 32,110,101,101,100,32,102,
                                                 111,114]}],
                                              0,false},
                                             {text,[4,101,112,109,100]},
                                             {sep,
                                              [{text,
                                                "nwhen using this distribution module. UDS is always restricted to one host, why avoiding a port mapper is easy."}],
                                              0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}}],
                                     0,false}],
                                   0,false}}],
                                0,false},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,[{text,"\bcreation"}],0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,
                                     "óThe creation number for a listen socket, which is calculated as (the value found in the lock-file + 1) rem 4. This creation value is also written back into the lock file, so that the next invocation of the emulator finds our value in the file."}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,[{text,[4,116,121,112,101]}],0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   "RThe current type/state of the port, which can be one of the values declared above."}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,[{text,[4,110,97,109,101]}],0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,
                                 [{text,
                                   "RThe name of the socket file (the path prefix removed), which allows for deletion ("}],
                                 0,false},
                                {text,[6,117,110,108,105,110,107]},
                                {sep,
                                 [{text,
                                   [28,41,32,119,104,101,110,32,116,104,101,
                                    32,115,111,99,107,101,116,32,105,115,32,
                                    99,108,111,115,101,100,46]}],
                                 0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,[4,115,101,110,116]}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 "ÇHow many bytes that have been sent over the socket. This can wrap, but that is no problem for the distribution, as the Erlang distribution is only interested in if this value has changed. (The Erlang"}],
                               0,false},
                              {text,"\nnet_kernel"},
                              {text,[6,116,105,99,107,101,114]},
                              {sep,
                               [{text,
                                 "Luses this value by calling the driver to fetch it, which is done through the"}],
                               0,false},
                              {text,
                               [21,101,114,108,97,110,103,35,112,111,114,116,
                                95,99,111,110,116,114,111,108,47,51]},
                              {sep,[{text,"\troutine.)"}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,"\breceived"}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               "PHow many bytes that are read (received) from the socket, used in similar ways as"}],
                             0,false},
                            {text,[4,115,101,110,116]},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[7,112,97,114,116,110,101,114]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "²A pointer to another port structure, which is either the listen port from which this port is accepting a connection or conversely. The \"partner relation\" is always bidirectional."}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[4,110,101,120,116]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [144,80,111,105,110,116,101,114,32,116,111,32,110,
                          101,120,116,32,115,116,114,117,99,116,117,114,101,
                          32,105,110,32,97,32,108,105,110,107,101,100,32,108,
                          105,115,116,32,111,102,32,97,108,108,32,112,111,114,
                          116,32,115,116,114,117,99,116,117,114,101,115,46,32,
                          84,104,105,115,32,108,105,115,116,32,105,115,32,117,
                          115,101,100,32,119,104,101,110,32,97,99,99,101,112,
                          116,105,110,103,32,99,111,110,110,101,99,116,105,
                          111,110,115,32,97,110,100,32,119,104,101,110,32,116,
                          104,101,32,100,114,105,118,101,114,32,105,115,32,
                          117,110,108,111,97,100,101,100,46]}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{sep,
                   [{text,"\vbuffer_size"},
                    {sep,[{text,[1,44]}],0,false},
                    {text,"\nbuffer_pos"},
                    {sep,[{text,[1,44]}],0,false},
                    {text,"\nheader_pos"},
                    {sep,[{text,[1,44]}],0,false},
                    {text,[6,98,117,102,102,101,114]}],
                   0,false}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         "aData for input buffering. For details about the input buffering, see the source code in directory"}],
                       0,false},
                      {text,
                       [15,107,101,114,110,101,108,47,101,120,97,109,112,108,
                        101,115]},
                      {sep,
                       [{text,
                         "7. That certainly goes beyond the scope of this section."}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,";## Selected Parts of the Distribution Driver Implementation"},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [279,84,104,101,32,105,109,112,108,101,109,101,110,97,116,105,
               111,110,32,111,102,32,116,104,101,32,100,105,115,116,114,105,
               98,117,116,105,111,110,32,100,114,105,118,101,114,32,105,115,
               32,110,111,116,32,99,111,109,112,108,101,116,101,108,121,32,99,
               111,118,101,114,101,100,32,104,101,114,101,44,32,100,101,116,
               97,105,108,115,32,97,98,111,117,116,32,98,117,102,102,101,114,
               105,110,103,32,97,110,100,32,111,116,104,101,114,32,116,104,
               105,110,103,115,32,117,110,114,101,108,97,116,101,100,32,116,
               111,32,100,114,105,118,101,114,32,119,114,105,116,105,110,103,
               32,97,114,101,32,110,111,116,32,101,120,112,108,97,105,110,101,
               100,46,32,76,105,107,101,119,105,115,101,32,97,114,101,32,115,
               111,109,101,32,112,101,99,117,108,105,97,114,105,116,105,101,
               115,32,111,102,32,116,104,101,32,85,68,83,32,112,114,111,116,
               111,99,111,108,32,110,111,116,32,101,120,112,108,97,105,110,
               101,100,32,105,110,32,100,101,116,97,105,108,46,32,84,104,101,
               32,99,104,111,115,101,110,32,112,114,111,116,111,99,111,108,32,
               105,115,32,110,111,116,32,105,109,112,111,114,116,97,110,116,
               46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?Prototypes for the driver callback routines can be found in the"}],
              0,false},
             {text,[14,42,101,114,108,95,100,114,105,118,101,114,46,104,42]},
             {sep,[{text,"\fheader file."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [313,84,104,101,32,100,114,105,118,101,114,32,105,110,105,116,
                 105,97,108,105,122,97,116,105,111,110,32,114,111,117,116,105,
                 110,101,32,105,115,32,40,117,115,117,97,108,108,121,41,32,
                 100,101,99,108,97,114,101,100,32,119,105,116,104,32,97,32,
                 109,97,99,114,111,32,116,111,32,109,97,107,101,32,116,104,
                 101,32,100,114,105,118,101,114,32,101,97,115,105,101,114,32,
                 116,111,32,112,111,114,116,32,98,101,116,119,101,101,110,32,
                 100,105,102,102,101,114,101,110,116,32,111,112,101,114,97,
                 116,105,110,103,32,115,121,115,116,101,109,115,32,40,97,110,
                 100,32,102,108,97,118,111,114,115,32,111,102,32,115,121,115,
                 116,101,109,115,41,46,32,84,104,105,115,32,105,115,32,116,
                 104,101,32,111,110,108,121,32,114,111,117,116,105,110,101,32,
                 116,104,97,116,32,109,117,115,116,32,104,97,118,101,32,97,32,
                 119,101,108,108,45,100,101,102,105,110,101,100,32,110,97,109,
                 101,46,32,65,108,108,32,111,116,104,101,114,32,99,97,108,108,
                 98,97,99,107,115,32,97,114,101,32,114,101,97,99,104,101,100,
                 32,116,104,114,111,117,103,104,32,116,104,101,32,100,114,105,
                 118,101,114,32,115,116,114,117,99,116,117,114,101,46,32,84,
                 104,101,32,109,97,99,114,111,32,116,111,32,117,115,101,32,
                 105,115,32,110,97,109,101,100]}],
              0,false},
             {text,"\r*DRIVER_INIT*"},
             {sep,
              [{text,"'and takes the driver name as parameter:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "µ\n(1) /* Beginning of linked list of ports */\n(2) static UdsData *first_data;\n\n(3) DRIVER_INIT(uds_drv)\n(4) {\n(5)     first_data = NULL;\n(6)     return &uds_driver_entry;\n(7) }      "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "~The routine initializes the single global data structure and returns a pointer to the driver entry. The routine is called when"}],
              0,false},
             {text,
              [22,42,101,114,108,95,100,100,108,108,58,108,111,97,100,95,100,
               114,105,118,101,114,42]},
             {sep,
              [{text,
                [22,105,115,32,99,97,108,108,101,100,32,102,114,111,109,32,69,
                 114,108,97,110,103,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,"\v*uds_start*"},
             {sep,
              [{text,
                [156,114,111,117,116,105,110,101,32,105,115,32,99,97,108,108,
                 101,100,32,119,104,101,110,32,97,32,112,111,114,116,32,105,
                 115,32,111,112,101,110,101,100,32,102,114,111,109,32,69,114,
                 108,97,110,103,46,32,73,110,32,116,104,105,115,32,99,97,115,
                 101,44,32,119,101,32,111,110,108,121,32,97,108,108,111,99,97,
                 116,101,32,97,32,115,116,114,117,99,116,117,114,101,32,97,
                 110,100,32,105,110,105,116,105,97,108,105,122,101,32,105,116,
                 46,32,67,114,101,97,116,105,110,103,32,116,104,101,32,97,99,
                 116,117,97,108,32,115,111,99,107,101,116,32,105,115,32,108,
                 101,102,116,32,116,111,32,116,104,101]}],
              0,false},
             {text,"\r*uds_command*"},
             {sep,[{text,"\broutine."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [613,10,40,32,49,41,32,115,116,97,116,105,99,32,69,114,108,68,
               114,118,68,97,116,97,32,117,100,115,95,115,116,97,114,116,40,
               69,114,108,68,114,118,80,111,114,116,32,112,111,114,116,44,32,
               99,104,97,114,32,42,98,117,102,102,41,10,40,32,50,41,32,123,10,
               40,32,51,41,32,32,32,32,32,85,100,115,68,97,116,97,32,42,117,
               100,59,10,40,32,52,41,32,32,32,32,32,10,40,32,53,41,32,32,32,
               32,32,117,100,32,61,32,65,76,76,79,67,40,115,105,122,101,111,
               102,40,85,100,115,68,97,116,97,41,41,59,10,40,32,54,41,32,32,
               32,32,32,117,100,45,62,102,100,32,61,32,45,49,59,10,40,32,55,
               41,32,32,32,32,32,117,100,45,62,108,111,99,107,102,100,32,61,
               32,45,49,59,10,40,32,56,41,32,32,32,32,32,117,100,45,62,99,114,
               101,97,116,105,111,110,32,61,32,48,59,10,40,32,57,41,32,32,32,
               32,32,117,100,45,62,112,111,114,116,32,61,32,112,111,114,116,
               59,10,40,49,48,41,32,32,32,32,32,117,100,45,62,116,121,112,101,
               32,61,32,112,111,114,116,84,121,112,101,85,110,107,110,111,119,
               110,59,10,40,49,49,41,32,32,32,32,32,117,100,45,62,110,97,109,
               101,32,61,32,78,85,76,76,59,10,40,49,50,41,32,32,32,32,32,117,
               100,45,62,98,117,102,102,101,114,95,115,105,122,101,32,61,32,
               48,59,10,40,49,51,41,32,32,32,32,32,117,100,45,62,98,117,102,
               102,101,114,95,112,111,115,32,61,32,48,59,10,40,49,52,41,32,32,
               32,32,32,117,100,45,62,104,101,97,100,101,114,95,112,111,115,
               32,61,32,48,59,10,40,49,53,41,32,32,32,32,32,117,100,45,62,98,
               117,102,102,101,114,32,61,32,78,85,76,76,59,10,40,49,54,41,32,
               32,32,32,32,117,100,45,62,115,101,110,116,32,61,32,48,59,10,40,
               49,55,41,32,32,32,32,32,117,100,45,62,114,101,99,101,105,118,
               101,100,32,61,32,48,59,10,40,49,56,41,32,32,32,32,32,117,100,
               45,62,112,97,114,116,110,101,114,32,61,32,78,85,76,76,59,10,40,
               49,57,41,32,32,32,32,32,117,100,45,62,110,101,120,116,32,61,32,
               102,105,114,115,116,95,100,97,116,97,59,10,40,50,48,41,32,32,
               32,32,32,102,105,114,115,116,95,100,97,116,97,32,61,32,117,100,
               59,10,40,50,49,41,32,32,32,32,32,10,40,50,50,41,32,32,32,32,32,
               114,101,116,117,114,110,40,40,69,114,108,68,114,118,68,97,116,
               97,41,32,117,100,41,59,10,40,50,51,41,32,125,32,32,32,32,32,
               32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "©Every data item is initialized, so that no problems arise when a newly created port is closed (without there being any corresponding socket). This routine is called when"}],
              0,false},
             {text,"\"*open_port({spawn, \"uds_drv\"},[])*"},
             {sep,
              [{text,
                [22,105,115,32,99,97,108,108,101,100,32,102,114,111,109,32,69,
                 114,108,97,110,103,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,"\r*uds_command*"},
             {sep,
              [{text,
                [143,114,111,117,116,105,110,101,32,105,115,32,116,104,101,32,
                 114,111,117,116,105,110,101,32,99,97,108,108,101,100,32,119,
                 104,101,110,32,97,110,32,69,114,108,97,110,103,32,112,114,
                 111,99,101,115,115,32,115,101,110,100,115,32,100,97,116,97,
                 32,116,111,32,116,104,101,32,112,111,114,116,46,32,84,104,
                 105,115,32,114,111,117,116,105,110,101,32,104,97,110,100,108,
                 101,115,32,97,108,108,32,97,115,121,110,99,104,114,111,110,
                 111,117,115,32,99,111,109,109,97,110,100,115,32,119,104,101,
                 110,32,116,104,101,32,112,111,114,116,32,105,115,32,105,
                 110]}],
              0,false},
             {text,"\t*command*"},
             {sep,
              [{text,"4mode and the sending of all data when the port is in"}],
              0,false},
             {text,[6,42,100,97,116,97,42]},
             {sep,[{text,[5,109,111,100,101,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [1652,10,40,32,49,41,32,115,116,97,116,105,99,32,118,111,105,
               100,32,117,100,115,95,99,111,109,109,97,110,100,40,69,114,108,
               68,114,118,68,97,116,97,32,104,97,110,100,108,101,44,32,99,104,
               97,114,32,42,98,117,102,102,44,32,105,110,116,32,98,117,102,
               102,108,101,110,41,10,40,32,50,41,32,123,10,40,32,51,41,32,32,
               32,32,32,85,100,115,68,97,116,97,32,42,117,100,32,61,32,40,85,
               100,115,68,97,116,97,32,42,41,32,104,97,110,100,108,101,59,10,
               10,40,32,52,41,32,32,32,32,32,105,102,32,40,117,100,45,62,116,
               121,112,101,32,61,61,32,112,111,114,116,84,121,112,101,68,97,
               116,97,32,124,124,32,117,100,45,62,116,121,112,101,32,61,61,32,
               112,111,114,116,84,121,112,101,73,110,116,101,114,109,101,100,
               105,97,116,101,41,32,123,10,40,32,53,41,32,32,32,32,32,32,32,
               32,32,68,69,66,85,71,70,40,40,34,80,97,115,115,105,118,101,32,
               100,111,95,115,101,110,100,32,37,100,34,44,98,117,102,102,108,
               101,110,41,41,59,10,40,32,54,41,32,32,32,32,32,32,32,32,32,100,
               111,95,115,101,110,100,40,117,100,44,32,98,117,102,102,32,43,
               32,49,44,32,98,117,102,102,108,101,110,32,45,32,49,41,59,32,47,
               42,32,88,88,88,32,42,47,10,40,32,55,41,32,32,32,32,32,32,32,32,
               32,114,101,116,117,114,110,59,10,40,32,56,41,32,32,32,32,32,
               125,32,10,40,32,57,41,32,32,32,32,32,105,102,32,40,98,117,102,
               102,108,101,110,32,61,61,32,48,41,32,123,10,40,49,48,41,32,32,
               32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,40,49,49,41,
               32,32,32,32,32,125,10,40,49,50,41,32,32,32,32,32,115,119,105,
               116,99,104,32,40,42,98,117,102,102,41,32,123,10,40,49,51,41,32,
               32,32,32,32,99,97,115,101,32,39,76,39,58,10,40,49,52,41,32,32,
               32,32,32,32,32,32,32,105,102,32,40,117,100,45,62,116,121,112,
               101,32,33,61,32,112,111,114,116,84,121,112,101,85,110,107,110,
               111,119,110,41,32,123,10,40,49,53,41,32,32,32,32,32,32,32,32,
               32,32,32,32,32,100,114,105,118,101,114,95,102,97,105,108,117,
               114,101,95,112,111,115,105,120,40,117,100,45,62,112,111,114,
               116,44,32,69,78,79,84,83,85,80,41,59,10,40,49,54,41,32,32,32,
               32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,40,
               49,55,41,32,32,32,32,32,32,32,32,32,125,10,40,49,56,41,32,32,
               32,32,32,32,32,32,32,117,100,115,95,99,111,109,109,97,110,100,
               95,108,105,115,116,101,110,40,117,100,44,98,117,102,102,44,98,
               117,102,102,108,101,110,41,59,10,40,49,57,41,32,32,32,32,32,32,
               32,32,32,114,101,116,117,114,110,59,10,40,50,48,41,32,32,32,32,
               32,99,97,115,101,32,39,65,39,58,10,40,50,49,41,32,32,32,32,32,
               32,32,32,32,105,102,32,40,117,100,45,62,116,121,112,101,32,33,
               61,32,112,111,114,116,84,121,112,101,85,110,107,110,111,119,
               110,41,32,123,10,40,50,50,41,32,32,32,32,32,32,32,32,32,32,32,
               32,32,100,114,105,118,101,114,95,102,97,105,108,117,114,101,95,
               112,111,115,105,120,40,117,100,45,62,112,111,114,116,44,32,69,
               78,79,84,83,85,80,41,59,10,40,50,51,41,32,32,32,32,32,32,32,32,
               32,32,32,32,32,114,101,116,117,114,110,59,10,40,50,52,41,32,32,
               32,32,32,32,32,32,32,125,10,40,50,53,41,32,32,32,32,32,32,32,
               32,32,117,100,115,95,99,111,109,109,97,110,100,95,97,99,99,101,
               112,116,40,117,100,44,98,117,102,102,44,98,117,102,102,108,101,
               110,41,59,10,40,50,54,41,32,32,32,32,32,32,32,32,32,114,101,
               116,117,114,110,59,10,40,50,55,41,32,32,32,32,32,99,97,115,101,
               32,39,67,39,58,10,40,50,56,41,32,32,32,32,32,32,32,32,32,105,
               102,32,40,117,100,45,62,116,121,112,101,32,33,61,32,112,111,
               114,116,84,121,112,101,85,110,107,110,111,119,110,41,32,123,10,
               40,50,57,41,32,32,32,32,32,32,32,32,32,32,32,32,32,100,114,105,
               118,101,114,95,102,97,105,108,117,114,101,95,112,111,115,105,
               120,40,117,100,45,62,112,111,114,116,44,32,69,78,79,84,83,85,
               80,41,59,10,40,51,48,41,32,32,32,32,32,32,32,32,32,32,32,32,32,
               114,101,116,117,114,110,59,10,40,51,49,41,32,32,32,32,32,32,32,
               32,32,125,10,40,51,50,41,32,32,32,32,32,32,32,32,32,117,100,
               115,95,99,111,109,109,97,110,100,95,99,111,110,110,101,99,116,
               40,117,100,44,98,117,102,102,44,98,117,102,102,108,101,110,41,
               59,10,40,51,51,41,32,32,32,32,32,32,32,32,32,114,101,116,117,
               114,110,59,10,40,51,52,41,32,32,32,32,32,99,97,115,101,32,39,
               83,39,58,10,40,51,53,41,32,32,32,32,32,32,32,32,32,105,102,32,
               40,117,100,45,62,116,121,112,101,32,33,61,32,112,111,114,116,
               84,121,112,101,67,111,109,109,97,110,100,41,32,123,10,40,51,54,
               41,32,32,32,32,32,32,32,32,32,32,32,32,32,100,114,105,118,101,
               114,95,102,97,105,108,117,114,101,95,112,111,115,105,120,40,
               117,100,45,62,112,111,114,116,44,32,69,78,79,84,83,85,80,41,59,
               10,40,51,55,41,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,
               116,117,114,110,59,10,40,51,56,41,32,32,32,32,32,32,32,32,32,
               125,10,40,51,57,41,32,32,32,32,32,32,32,32,32,100,111,95,115,
               101,110,100,40,117,100,44,32,98,117,102,102,32,43,32,49,44,32,
               98,117,102,102,108,101,110,32,45,32,49,41,59,10,40,52,48,41,32,
               32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,40,52,49,
               41,32,32,32,32,32,99,97,115,101,32,39,82,39,58,10,40,52,50,41,
               32,32,32,32,32,32,32,32,32,105,102,32,40,117,100,45,62,116,121,
               112,101,32,33,61,32,112,111,114,116,84,121,112,101,67,111,109,
               109,97,110,100,41,32,123,10,40,52,51,41,32,32,32,32,32,32,32,
               32,32,32,32,32,32,100,114,105,118,101,114,95,102,97,105,108,
               117,114,101,95,112,111,115,105,120,40,117,100,45,62,112,111,
               114,116,44,32,69,78,79,84,83,85,80,41,59,10,40,52,52,41,32,32,
               32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,
               40,52,53,41,32,32,32,32,32,32,32,32,32,125,10,40,52,54,41,32,
               32,32,32,32,32,32,32,32,100,111,95,114,101,99,118,40,117,100,
               41,59,10,40,52,55,41,32,32,32,32,32,32,32,32,32,114,101,116,
               117,114,110,59,10,40,52,56,41,32,32,32,32,32,100,101,102,97,
               117,108,116,58,10,40,52,57,41,32,32,32,32,32,32,32,32,32,114,
               101,116,117,114,110,59,10,40,53,48,41,32,32,32,32,32,125,10,40,
               53,49,41,32,125,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "OThe command routine takes three parameters; the handle returned for the port by"}],
              0,false},
             {text,"\v*uds_start*"},
             {sep,
              [{text,
                "Æ, which is a pointer to the internal port structure, the data buffer, and the length of the data buffer. The buffer is the data sent from Erlang (a list of bytes) converted to an C array (of bytes)."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"&If Erlang sends, for example, the list"}],0,false},
             {text,"\f*[$a,$b,$c]*"},
             {sep,
              [{text,
                [16,116,111,32,116,104,101,32,112,111,114,116,44,32,116,104,
                 101]}],
              0,false},
             {text,"\t*bufflen*"},
             {sep,[{text,"\vvariable is"}],0,false},
             {text,[3,42,51,42]},
             {sep,[{text,[7,97,110,100,32,116,104,101]}],0,false},
             {text,[6,42,98,117,102,102,42]},
             {sep,
              [{text,
                [17,118,97,114,105,97,98,108,101,32,99,111,110,116,97,105,110,
                 115]}],
              0,false},
             {text,[15,42,123,39,97,39,44,39,98,39,44,39,99,39,125,42]},
             {sep,[{text,[3,40,110,111]}],0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "}termination). Usually the first byte is used as an opcode, which is the case in this driver too (at least when the port is in"}],
              0,false},
             {text,"\t*command*"},
             {sep,
              [{text,"*mode). The opcodes are defined as follows:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{text,
                          [16,39,76,39,60,115,111,99,107,101,116,32,110,97,
                           109,101,62]}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               "6Creates and listens on socket with the specified name."}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,"''A'<listen number as 32-bit big-endian>"}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               [129,65,99,99,101,112,116,115,32,102,114,111,
                                109,32,116,104,101,32,108,105,115,116,101,110,
                                32,115,111,99,107,101,116,32,105,100,101,110,
                                116,105,102,105,101,100,32,98,121,32,116,104,
                                101,32,115,112,101,99,105,102,105,101,100,32,
                                105,100,101,110,116,105,102,105,99,97,116,105,
                                111,110,32,110,117,109,98,101,114,46,32,84,
                                104,101,32,105,100,101,110,116,105,102,105,99,
                                97,116,105,111,110,32,110,117,109,98,101,114,
                                32,105,115,32,114,101,116,114,105,101,118,101,
                                100,32,119,105,116,104,32,116,104,101]}],
                             0,false},
                            {text,"\vuds_control"},
                            {sep,[{text,"\broutine."}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [16,39,67,39,60,115,111,99,107,101,116,32,110,97,109,
                        101,62]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "+Connects to the socket named <socket name>."}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\t'S'<data>"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           ":Sends the data <data> on the connected/accepted socket (in"}],
                         0,false},
                        {text,[7,99,111,109,109,97,110,100]},
                        {sep,
                         [{text,
                           "Gmode). The sending is acknowledged when the data has left this process."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,39,82,39]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       [28,82,101,99,101,105,118,101,115,32,111,110,101,32,
                        112,97,99,107,101,116,32,111,102,32,100,97,116,97,
                        46]}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [31,34,79,110,101,32,112,97,99,107,101,116,32,111,102,32,100,
                 97,116,97,34,32,105,110,32,99,111,109,109,97,110,100]}],
              0,false},
             {text,[5,42,39,82,39,42]},
             {sep,
              [{text,
                [516,99,97,110,32,98,101,32,101,120,112,108,97,105,110,101,
                 100,32,97,115,32,102,111,108,108,111,119,115,46,32,84,104,
                 105,115,32,100,114,105,118,101,114,32,97,108,119,97,121,115,
                 32,115,101,110,100,115,32,100,97,116,97,32,112,97,99,107,97,
                 103,101,100,32,119,105,116,104,32,97,32,52,32,98,121,116,101,
                 32,104,101,97,100,101,114,32,99,111,110,116,97,105,110,105,
                 110,103,32,97,32,98,105,103,45,101,110,100,105,97,110,32,51,
                 50,45,98,105,116,32,105,110,116,101,103,101,114,32,116,104,
                 97,116,32,114,101,112,114,101,115,101,110,116,115,32,116,104,
                 101,32,108,101,110,103,116,104,32,111,102,32,116,104,101,32,
                 100,97,116,97,32,105,110,32,116,104,101,32,112,97,99,107,101,
                 116,46,32,84,104,101,114,101,32,105,115,32,110,111,32,110,
                 101,101,100,32,102,111,114,32,100,105,102,102,101,114,101,
                 110,116,32,112,97,99,107,101,116,32,115,105,122,101,115,32,
                 111,114,32,115,111,109,101,32,107,105,110,100,32,111,102,32,
                 115,116,114,101,97,109,101,100,32,109,111,100,101,44,32,97,
                 115,32,116,104,105,115,32,100,114,105,118,101,114,32,105,115,
                 32,102,111,114,32,116,104,101,32,100,105,115,116,114,105,98,
                 117,116,105,111,110,32,111,110,108,121,46,32,87,104,121,32,
                 105,115,32,116,104,101,32,104,101,97,100,101,114,32,119,111,
                 114,100,32,99,111,100,101,100,32,101,120,112,108,105,99,105,
                 116,108,121,32,105,110,32,98,105,103,45,101,110,100,105,97,
                 110,32,119,104,101,110,32,97,32,85,68,83,32,115,111,99,107,
                 101,116,32,105,115,32,108,111,99,97,108,32,116,111,32,116,
                 104,101,32,104,111,115,116,63,32,73,116,32,105,115,32,103,
                 111,111,100,32,112,114,97,99,116,105,99,101,32,119,104,101,
                 110,32,119,114,105,116,105,110,103,32,97,32,100,105,115,116,
                 114,105,98,117,116,105,111,110,32,100,114,105,118,101,114,44,
                 32,97,115,32,100,105,115,116,114,105,98,117,116,105,111,110,
                 32,105,110,32,112,114,97,99,116,105,99,101,32,117,115,117,97,
                 108,108,121,32,99,114,111,115,115,101,115,32,116,104,101,32,
                 104,111,115,116,32,98,111,117,110,100,97,114,105,101,115,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"4On line 4-8 is handled the case where the port is in"}],
              0,false},
             {text,[6,42,100,97,116,97,42]},
             {sep,[{text,[7,109,111,100,101,32,111,114]}],0,false},
             {text,[14,42,105,110,116,101,114,109,101,100,105,97,116,101,42]},
             {sep,
              [{text,
                "Smode and the remaining routine handles the different commands. The routine uses the"}],
              0,false},
             {text,
              [24,42,100,114,105,118,101,114,95,102,97,105,108,117,114,101,95,
               112,111,115,105,120,40,41,42]},
             {sep,
              [{text,
                "iroutine to report errors (see, for example, line 15). Notice that the failure routines make a call to the"}],
              0,false},
             {text,"\n*uds_stop*"},
             {sep,
              [{text,
                "Troutine, which will remove the internal port data. The handle (and the casted handle"}],
              0,false},
             {text,[4,42,117,100,42]},
             {sep,
              [{text,
                [14,41,32,105,115,32,116,104,101,114,101,102,111,114,101]}],
              0,false},
             {text,
              [20,42,42,105,110,118,97,108,105,100,32,112,111,105,110,116,101,
               114,115,42,42]},
             {sep,[{text,[7,97,102,116,101,114,32,97]}],0,false},
             {text,
              [16,42,100,114,105,118,101,114,95,102,97,105,108,117,114,101,
               42]},
             {sep,
              [{text,
                [18,99,97,108,108,32,97,110,100,32,119,101,32,115,104,111,117,
                 108,100]}],
              0,false},
             {text,
              [22,42,42,114,101,116,117,114,110,32,105,109,109,101,100,105,97,
               116,101,108,121,42,42]},
             {sep,
              [{text,
                "D. The runtime system will send exit signals to all linked processes."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,"\v*uds_input*"},
             {sep,
              [{text,
                "Vroutine is called when data is available on a file descriptor previously passed to the"}],
              0,false},
             {text,
              [15,42,100,114,105,118,101,114,95,115,101,108,101,99,116,42]},
             {sep,
              [{text,
                "Zroutine. This occurs typically when a read command is issued and no data is available. The"}],
              0,false},
             {text,"\t*do_recv*"},
             {sep,
              [{text,
                [22,114,111,117,116,105,110,101,32,105,115,32,97,115,32,102,
                 111,108,108,111,119,115,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [1144,10,40,32,49,41,32,115,116,97,116,105,99,32,118,111,105,
               100,32,100,111,95,114,101,99,118,40,85,100,115,68,97,116,97,32,
               42,117,100,41,10,40,32,50,41,32,123,10,40,32,51,41,32,32,32,32,
               32,105,110,116,32,114,101,115,59,10,40,32,52,41,32,32,32,32,32,
               99,104,97,114,32,42,105,98,117,102,59,10,40,32,53,41,32,32,32,
               32,32,102,111,114,40,59,59,41,32,123,10,40,32,54,41,32,32,32,
               32,32,32,32,32,32,105,102,32,40,40,114,101,115,32,61,32,98,117,
               102,102,101,114,101,100,95,114,101,97,100,95,112,97,99,107,97,
               103,101,40,117,100,44,38,105,98,117,102,41,41,32,60,32,48,41,
               32,123,10,40,32,55,41,32,32,32,32,32,32,32,32,32,32,32,32,32,
               105,102,32,40,114,101,115,32,61,61,32,78,79,82,77,65,76,95,82,
               69,65,68,95,70,65,73,76,85,82,69,41,32,123,10,40,32,56,41,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,114,105,
               118,101,114,95,115,101,108,101,99,116,40,117,100,45,62,112,111,
               114,116,44,32,40,69,114,108,68,114,118,69,118,101,110,116,41,
               32,117,100,45,62,102,100,44,32,68,79,95,82,69,65,68,44,32,49,
               41,59,10,40,32,57,41,32,32,32,32,32,32,32,32,32,32,32,32,32,
               125,32,101,108,115,101,32,123,10,40,49,48,41,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,100,114,105,118,101,114,95,
               102,97,105,108,117,114,101,95,101,111,102,40,117,100,45,62,112,
               111,114,116,41,59,10,40,49,49,41,32,32,32,32,32,32,32,32,32,32,
               32,32,32,125,10,40,49,50,41,32,32,32,32,32,32,32,32,32,32,32,
               32,32,114,101,116,117,114,110,59,10,40,49,51,41,32,32,32,32,32,
               32,32,32,32,125,10,40,49,52,41,32,32,32,32,32,32,32,32,32,47,
               42,32,71,111,116,32,97,32,112,97,99,107,97,103,101,32,42,47,10,
               40,49,53,41,32,32,32,32,32,32,32,32,32,105,102,32,40,117,100,
               45,62,116,121,112,101,32,61,61,32,112,111,114,116,84,121,112,
               101,67,111,109,109,97,110,100,41,32,123,10,40,49,54,41,32,32,
               32,32,32,32,32,32,32,32,32,32,32,105,98,117,102,91,45,49,93,32,
               61,32,39,82,39,59,32,47,42,32,84,104,101,114,101,32,105,115,32,
               97,108,119,97,121,115,32,114,111,111,109,32,102,111,114,32,97,
               32,115,105,110,103,108,101,32,98,121,116,101,32,10,40,49,55,41,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,111,112,99,111,100,101,32,98,
               101,102,111,114,101,32,116,104,101,32,97,99,116,117,97,108,32,
               98,117,102,102,101,114,32,10,40,49,56,41,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,40,119,104,101,114,101,32,116,104,101,32,112,97,99,
               107,101,116,32,104,101,97,100,101,114,32,119,97,115,41,32,42,
               47,10,40,49,57,41,32,32,32,32,32,32,32,32,32,32,32,32,32,100,
               114,105,118,101,114,95,111,117,116,112,117,116,40,117,100,45,
               62,112,111,114,116,44,105,98,117,102,32,45,32,49,44,32,114,101,
               115,32,43,32,49,41,59,10,40,50,48,41,32,32,32,32,32,32,32,32,
               32,32,32,32,32,100,114,105,118,101,114,95,115,101,108,101,99,
               116,40,117,100,45,62,112,111,114,116,44,32,40,69,114,108,68,
               114,118,69,118,101,110,116,41,32,117,100,45,62,102,100,44,32,
               68,79,95,82,69,65,68,44,48,41,59,10,40,50,49,41,32,32,32,32,32,
               32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,40,50,50,
               41,32,32,32,32,32,32,32,32,32,125,32,101,108,115,101,32,123,10,
               40,50,51,41,32,32,32,32,32,32,32,32,32,32,32,32,32,105,98,117,
               102,91,45,49,93,32,61,32,68,73,83,84,95,77,65,71,73,67,95,82,
               69,67,86,95,84,65,71,59,32,47,42,32,88,88,88,32,42,47,10,40,50,
               52,41,32,32,32,32,32,32,32,32,32,32,32,32,32,100,114,105,118,
               101,114,95,111,117,116,112,117,116,40,117,100,45,62,112,111,
               114,116,44,105,98,117,102,32,45,32,49,44,32,114,101,115,32,43,
               32,49,41,59,10,40,50,53,41,32,32,32,32,32,32,32,32,32,32,32,32,
               32,100,114,105,118,101,114,95,115,101,108,101,99,116,40,117,
               100,45,62,112,111,114,116,44,32,40,69,114,108,68,114,118,69,
               118,101,110,116,41,32,117,100,45,62,102,100,44,32,68,79,95,82,
               69,65,68,44,49,41,59,10,40,50,54,41,32,32,32,32,32,32,32,32,32,
               125,10,40,50,55,41,32,32,32,32,32,125,10,40,50,56,41,32,125,32,
               32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "<The routine tries to read data until a packet is read or the"}],
              0,false},
             {text,
              [23,42,98,117,102,102,101,114,101,100,95,114,101,97,100,95,112,
               97,99,107,97,103,101,42]},
             {sep,
              [{text,
                [17,114,111,117,116,105,110,101,32,114,101,116,117,114,110,
                 115,32,97]}],
              0,false},
             {text,
              [21,42,78,79,82,77,65,76,95,82,69,65,68,95,70,65,73,76,85,82,69,
               42]},
             {sep,
              [{text,
                "b(an internally defined constant for the module, which means that the read operation resulted in an"}],
              0,false},
             {text,"\r*EWOULDBLOCK*"},
             {sep,
              [{text,
                [20,41,46,32,73,102,32,116,104,101,32,112,111,114,116,32,105,
                 115,32,105,110]}],
              0,false},
             {text,"\t*command*"},
             {sep,
              [{text,
                "Cmode, the reading stops when one package is read. If the port is in"}],
              0,false},
             {text,[6,42,100,97,116,97,42]},
             {sep,
              [{text,
                "«mode, the reading continues until the socket buffer is empty (read failure). If no more data can be read and more is wanted (which is always the case when the socket is in"}],
              0,false},
             {text,[6,42,100,97,116,97,42]},
             {sep,[{text,[6,109,111,100,101,41,44]}],0,false},
             {text,
              [15,42,100,114,105,118,101,114,95,115,101,108,101,99,116,42]},
             {sep,
              [{text,
                [21,105,115,32,99,97,108,108,101,100,32,116,111,32,109,97,107,
                 101,32,116,104,101]}],
              0,false},
             {text,"\v*uds_input*"},
             {sep,
              [{text,
                ";callback be called when more data is available for reading."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,87,104,101,110,32,116,104,101,32,112,111,114,116,32,105,
                 115,32,105,110]}],
              0,false},
             {text,[6,42,100,97,116,97,42]},
             {sep,
              [{text,
                [370,109,111,100,101,44,32,97,108,108,32,100,97,116,97,32,105,
                 115,32,115,101,110,116,32,116,111,32,69,114,108,97,110,103,
                 32,105,110,32,97,32,102,111,114,109,97,116,32,116,104,97,116,
                 32,115,117,105,116,115,32,116,104,101,32,100,105,115,116,114,
                 105,98,117,116,105,111,110,46,32,73,110,32,102,97,99,116,44,
                 32,116,104,101,32,114,97,119,32,100,97,116,97,32,119,105,108,
                 108,32,110,101,118,101,114,32,114,101,97,99,104,32,97,110,
                 121,32,69,114,108,97,110,103,32,112,114,111,99,101,115,115,
                 44,32,98,117,116,32,119,105,108,108,32,98,101,32,116,114,97,
                 110,115,108,97,116,101,100,47,105,110,116,101,114,112,114,
                 101,116,101,100,32,98,121,32,116,104,101,32,101,109,117,108,
                 97,116,111,114,32,105,116,115,101,108,102,32,97,110,100,32,
                 116,104,101,110,32,100,101,108,105,118,101,114,101,100,32,
                 105,110,32,116,104,101,32,99,111,114,114,101,99,116,32,102,
                 111,114,109,97,116,32,116,111,32,116,104,101,32,99,111,114,
                 114,101,99,116,32,112,114,111,99,101,115,115,101,115,46,32,
                 73,110,32,116,104,101,32,99,117,114,114,101,110,116,32,101,
                 109,117,108,97,116,111,114,32,118,101,114,115,105,111,110,44,
                 32,114,101,99,101,105,118,101,100,32,100,97,116,97,32,105,
                 115,32,116,111,32,98,101,32,116,97,103,103,101,100,32,119,
                 105,116,104,32,97,32,115,105,110,103,108,101,32,98,121,116,
                 101,32,111,102,32,49,48,48,46,32,84,104,97,116,32,105,115,32,
                 119,104,97,116,32,116,104,101,32,109,97,99,114,111]}],
              0,false},
             {text,
              [21,42,68,73,83,84,95,77,65,71,73,67,95,82,69,67,86,95,84,65,71,
               42]},
             {sep,
              [{text,
                "Tis defined to. The tagging of data in the distribution can be changed in the future."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,"\v*uds_input*"},
             {sep,
              [{text,
                "5routine handles other input events (like non-blocking"}],
              0,false},
             {text,"\b*accept*"},
             {sep,
              [{text,
                "E), but most importantly handle data arriving at the socket by calling"}],
              0,false},
             {text,"\t*do_recv*"},
             {sep,[{text,[1,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [935,10,40,32,49,41,32,115,116,97,116,105,99,32,118,111,105,100,
               32,117,100,115,95,105,110,112,117,116,40,69,114,108,68,114,118,
               68,97,116,97,32,104,97,110,100,108,101,44,32,69,114,108,68,114,
               118,69,118,101,110,116,32,101,118,101,110,116,41,10,40,32,50,
               41,32,123,10,40,32,51,41,32,32,32,32,32,85,100,115,68,97,116,
               97,32,42,117,100,32,61,32,40,85,100,115,68,97,116,97,32,42,41,
               32,104,97,110,100,108,101,59,10,10,40,32,52,41,32,32,32,32,32,
               105,102,32,40,117,100,45,62,116,121,112,101,32,61,61,32,112,
               111,114,116,84,121,112,101,76,105,115,116,101,110,101,114,41,
               32,123,10,40,32,53,41,32,32,32,32,32,32,32,32,32,85,100,115,68,
               97,116,97,32,42,97,100,32,61,32,117,100,45,62,112,97,114,116,
               110,101,114,59,10,40,32,54,41,32,32,32,32,32,32,32,32,32,115,
               116,114,117,99,116,32,115,111,99,107,97,100,100,114,95,117,110,
               32,112,101,101,114,59,10,40,32,55,41,32,32,32,32,32,32,32,32,
               32,105,110,116,32,112,108,32,61,32,115,105,122,101,111,102,40,
               115,116,114,117,99,116,32,115,111,99,107,97,100,100,114,95,117,
               110,41,59,10,40,32,56,41,32,32,32,32,32,32,32,32,32,105,110,
               116,32,102,100,59,10,10,40,32,57,41,32,32,32,32,32,32,32,32,32,
               105,102,32,40,40,102,100,32,61,32,97,99,99,101,112,116,40,117,
               100,45,62,102,100,44,32,40,115,116,114,117,99,116,32,115,111,
               99,107,97,100,100,114,32,42,41,32,38,112,101,101,114,44,32,38,
               112,108,41,41,32,60,32,48,41,32,123,10,40,49,48,41,32,32,32,32,
               32,32,32,32,32,32,32,32,32,105,102,32,40,101,114,114,110,111,
               32,33,61,32,69,87,79,85,76,68,66,76,79,67,75,41,32,123,10,40,
               49,49,41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               100,114,105,118,101,114,95,102,97,105,108,117,114,101,95,112,
               111,115,105,120,40,117,100,45,62,112,111,114,116,44,32,101,114,
               114,110,111,41,59,10,40,49,50,41,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,40,49,51,41,
               32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,40,49,52,41,32,
               32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,
               10,40,49,53,41,32,32,32,32,32,32,32,32,32,125,10,40,49,54,41,
               32,32,32,32,32,32,32,32,32,83,69,84,95,78,79,78,66,76,79,67,75,
               73,78,71,40,102,100,41,59,10,40,49,55,41,32,32,32,32,32,32,32,
               32,32,97,100,45,62,102,100,32,61,32,102,100,59,10,40,49,56,41,
               32,32,32,32,32,32,32,32,32,97,100,45,62,112,97,114,116,110,101,
               114,32,61,32,78,85,76,76,59,10,40,49,57,41,32,32,32,32,32,32,
               32,32,32,97,100,45,62,116,121,112,101,32,61,32,112,111,114,116,
               84,121,112,101,67,111,109,109,97,110,100,59,10,40,50,48,41,32,
               32,32,32,32,32,32,32,32,117,100,45,62,112,97,114,116,110,101,
               114,32,61,32,78,85,76,76,59,10,40,50,49,41,32,32,32,32,32,32,
               32,32,32,100,114,105,118,101,114,95,115,101,108,101,99,116,40,
               117,100,45,62,112,111,114,116,44,32,40,69,114,108,68,114,118,
               69,118,101,110,116,41,32,117,100,45,62,102,100,44,32,68,79,95,
               82,69,65,68,44,32,48,41,59,10,40,50,50,41,32,32,32,32,32,32,32,
               32,32,100,114,105,118,101,114,95,111,117,116,112,117,116,40,97,
               100,45,62,112,111,114,116,44,32,34,65,111,107,34,44,51,41,59,
               10,40,50,51,41,32,32,32,32,32,32,32,32,32,114,101,116,117,114,
               110,59,10,40,50,52,41,32,32,32,32,32,125,10,40,50,53,41,32,32,
               32,32,32,100,111,95,114,101,99,118,40,117,100,41,59,10,40,50,
               54,41,32,125,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "8The important line is the last line in the function: the"}],
              0,false},
             {text,"\t*do_read*"},
             {sep,
              [{text,
                "Îroutine is called to handle new input. The remaining function handles input on a listen socket, which means that it is to be possible to do an accept on the socket, which is also recognized as a read event."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"3The output mechanisms are similar to the input. The"}],
              0,false},
             {text,"\t*do_send*"},
             {sep,
              [{text,
                [22,114,111,117,116,105,110,101,32,105,115,32,97,115,32,102,
                 111,108,108,111,119,115,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [1284,10,40,32,49,41,32,115,116,97,116,105,99,32,118,111,105,
               100,32,100,111,95,115,101,110,100,40,85,100,115,68,97,116,97,
               32,42,117,100,44,32,99,104,97,114,32,42,98,117,102,102,44,32,
               105,110,116,32,98,117,102,102,108,101,110,41,32,10,40,32,50,41,
               32,123,10,40,32,51,41,32,32,32,32,32,99,104,97,114,32,104,101,
               97,100,101,114,91,52,93,59,10,40,32,52,41,32,32,32,32,32,105,
               110,116,32,119,114,105,116,116,101,110,59,10,40,32,53,41,32,32,
               32,32,32,83,121,115,73,79,86,101,99,32,105,111,118,91,50,93,59,
               10,40,32,54,41,32,32,32,32,32,69,114,108,73,79,86,101,99,32,
               101,105,111,59,10,40,32,55,41,32,32,32,32,32,69,114,108,68,114,
               118,66,105,110,97,114,121,32,42,98,105,110,118,91,93,32,61,32,
               123,78,85,76,76,44,78,85,76,76,125,59,10,10,40,32,56,41,32,32,
               32,32,32,112,117,116,95,112,97,99,107,101,116,95,108,101,110,
               103,116,104,40,104,101,97,100,101,114,44,32,98,117,102,102,108,
               101,110,41,59,10,40,32,57,41,32,32,32,32,32,105,111,118,91,48,
               93,46,105,111,118,95,98,97,115,101,32,61,32,40,99,104,97,114,
               32,42,41,32,104,101,97,100,101,114,59,10,40,49,48,41,32,32,32,
               32,32,105,111,118,91,48,93,46,105,111,118,95,108,101,110,32,61,
               32,52,59,10,40,49,49,41,32,32,32,32,32,105,111,118,91,49,93,46,
               105,111,118,95,98,97,115,101,32,61,32,98,117,102,102,59,10,40,
               49,50,41,32,32,32,32,32,105,111,118,91,49,93,46,105,111,118,95,
               108,101,110,32,61,32,98,117,102,102,108,101,110,59,10,40,49,51,
               41,32,32,32,32,32,101,105,111,46,105,111,118,32,61,32,105,111,
               118,59,10,40,49,52,41,32,32,32,32,32,101,105,111,46,98,105,110,
               118,32,61,32,98,105,110,118,59,10,40,49,53,41,32,32,32,32,32,
               101,105,111,46,118,115,105,122,101,32,61,32,50,59,10,40,49,54,
               41,32,32,32,32,32,101,105,111,46,115,105,122,101,32,61,32,98,
               117,102,102,108,101,110,32,43,32,52,59,10,40,49,55,41,32,32,32,
               32,32,119,114,105,116,116,101,110,32,61,32,48,59,10,40,49,56,
               41,32,32,32,32,32,105,102,32,40,100,114,105,118,101,114,95,115,
               105,122,101,113,40,117,100,45,62,112,111,114,116,41,32,61,61,
               32,48,41,32,123,10,40,49,57,41,32,32,32,32,32,32,32,32,32,105,
               102,32,40,40,119,114,105,116,116,101,110,32,61,32,119,114,105,
               116,101,118,40,117,100,45,62,102,100,44,32,105,111,118,44,32,
               50,41,41,32,61,61,32,101,105,111,46,115,105,122,101,41,32,123,
               10,40,50,48,41,32,32,32,32,32,32,32,32,32,32,32,32,32,117,100,
               45,62,115,101,110,116,32,43,61,32,119,114,105,116,116,101,110,
               59,10,40,50,49,41,32,32,32,32,32,32,32,32,32,32,32,32,32,105,
               102,32,40,117,100,45,62,116,121,112,101,32,61,61,32,112,111,
               114,116,84,121,112,101,67,111,109,109,97,110,100,41,32,123,10,
               40,50,50,41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               100,114,105,118,101,114,95,111,117,116,112,117,116,40,117,100,
               45,62,112,111,114,116,44,32,34,83,111,107,34,44,32,51,41,59,10,
               40,50,51,41,32,32,32,32,32,32,32,32,32,32,32,32,32,125,10,40,
               50,52,41,32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,
               117,114,110,59,10,40,50,53,41,32,32,32,32,32,32,32,32,32,125,
               32,101,108,115,101,32,105,102,32,40,119,114,105,116,116,101,
               110,32,60,32,48,41,32,123,10,40,50,54,41,32,32,32,32,32,32,32,
               32,32,32,32,32,32,105,102,32,40,101,114,114,110,111,32,33,61,
               32,69,87,79,85,76,68,66,76,79,67,75,41,32,123,10,40,50,55,41,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,114,105,
               118,101,114,95,102,97,105,108,117,114,101,95,101,111,102,40,
               117,100,45,62,112,111,114,116,41,59,10,40,50,56,41,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,117,114,110,
               59,10,40,50,57,41,32,32,32,32,32,32,32,32,32,32,32,32,32,125,
               32,101,108,115,101,32,123,10,40,51,48,41,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,119,114,105,116,116,101,110,32,
               61,32,48,59,10,40,51,49,41,32,32,32,32,32,32,32,32,32,32,32,32,
               32,125,10,40,51,50,41,32,32,32,32,32,32,32,32,32,125,32,101,
               108,115,101,32,123,10,40,51,51,41,32,32,32,32,32,32,32,32,32,
               32,32,32,32,117,100,45,62,115,101,110,116,32,43,61,32,119,114,
               105,116,116,101,110,59,10,40,51,52,41,32,32,32,32,32,32,32,32,
               32,125,10,40,51,53,41,32,32,32,32,32,32,32,32,32,47,42,32,69,
               110,113,117,101,117,101,32,114,101,109,97,105,110,105,110,103,
               32,42,47,10,40,51,54,41,32,32,32,32,32,125,10,40,51,55,41,32,
               32,32,32,32,100,114,105,118,101,114,95,101,110,113,118,40,117,
               100,45,62,112,111,114,116,44,32,38,101,105,111,44,32,119,114,
               105,116,116,101,110,41,59,10,40,51,56,41,32,32,32,32,32,115,
               101,110,100,95,111,117,116,95,113,117,101,117,101,40,117,100,
               41,59,10,40,51,57,41,32,125,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [20,84,104,105,115,32,100,114,105,118,101,114,32,117,115,101,
                 115,32,116,104,101]}],
              0,false},
             {text,"\b*writev*"},
             {sep,
              [{text,
                ":system call to send data onto the socket. A combination of"}],
              0,false},
             {text,"\b*writev*"},
             {sep,
              [{text,"3and the driver output queues is very convenient. An"}],
              0,false},
             {text,"\n*ErlIOVec*"},
             {sep,
              [{text,
                [20,115,116,114,117,99,116,117,114,101,32,99,111,110,116,97,
                 105,110,115,32,97]}],
              0,false},
             {text,"\n*SysIOVec*"},
             {sep,[{text,"\e(which is equivalent to the"}],0,false},
             {text,[14,42,115,116,114,117,99,116,32,105,111,118,101,99,42]},
             {sep,
              [{text,
                [20,115,116,114,117,99,116,117,114,101,32,100,101,102,105,110,
                 101,100,32,105,110]}],
              0,false},
             {text,[7,42,117,105,111,46,104,42]},
             {sep,[{text,[5,46,32,84,104,101]}],0,false},
             {text,"\n*ErlIOVec*"},
             {sep,
              [{text,
                [25,97,108,115,111,32,99,111,110,116,97,105,110,115,32,97,110,
                 32,97,114,114,97,121,32,111,102]}],
              0,false},
             {text,[14,42,69,114,108,68,114,118,66,105,110,97,114,121,42]},
             {sep,
              [{text,
                "Êpointers, of the same length as the number of buffers in the I/O vector itself. One can use this to allocate the binaries for the queue \"manually\" in the driver, but here the binary array is filled with"}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,
              [{text,
                "Gvalues (line 7). The runtime system then allocates its own buffers when"}],
              0,false},
             {text,"\r*driver_enqv*"},
             {sep,
              [{text,
                [20,105,115,32,99,97,108,108,101,100,32,40,108,105,110,101,32,
                 51,55,41,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [421,84,104,101,32,114,111,117,116,105,110,101,32,98,117,105,
                 108,100,115,32,97,110,32,73,47,79,32,118,101,99,116,111,114,
                 32,99,111,110,116,97,105,110,105,110,103,32,116,104,101,32,
                 104,101,97,100,101,114,32,98,121,116,101,115,32,97,110,100,
                 32,116,104,101,32,98,117,102,102,101,114,32,40,116,104,101,
                 32,111,112,99,111,100,101,32,104,97,115,32,98,101,101,110,32,
                 114,101,109,111,118,101,100,32,97,110,100,32,116,104,101,32,
                 98,117,102,102,101,114,32,108,101,110,103,116,104,32,100,101,
                 99,114,101,97,115,101,100,32,98,121,32,116,104,101,32,111,
                 117,116,112,117,116,32,114,111,117,116,105,110,101,41,46,32,
                 73,102,32,116,104,101,32,113,117,101,117,101,32,105,115,32,
                 101,109,112,116,121,44,32,119,101,32,119,114,105,116,101,32,
                 116,104,101,32,100,97,116,97,32,100,105,114,101,99,116,108,
                 121,32,116,111,32,116,104,101,32,115,111,99,107,101,116,32,
                 40,111,114,32,97,116,32,108,101,97,115,116,32,116,114,121,32,
                 116,111,41,46,32,73,102,32,97,110,121,32,100,97,116,97,32,
                 105,115,32,108,101,102,116,44,32,105,116,32,105,115,32,115,
                 116,111,114,101,100,32,105,110,32,116,104,101,32,113,117,101,
                 117,101,32,97,110,100,32,116,104,101,110,32,119,101,32,116,
                 114,121,32,116,111,32,115,101,110,100,32,116,104,101,32,113,
                 117,101,117,101,32,40,108,105,110,101,32,51,56,41,46,32,65,
                 110,32,97,99,107,110,111,119,108,101,100,103,101,109,101,110,
                 116,32,105,115,32,115,101,110,116,32,119,104,101,110,32,116,
                 104,101,32,109,101,115,115,97,103,101,32,105,115,32,100,101,
                 108,105,118,101,114,101,100,32,99,111,109,112,108,101,116,
                 101,108,121,32,40,108,105,110,101,32,50,50,41,46,32,84,104,
                 101]}],
              0,false},
             {text,
              [16,42,115,101,110,100,95,111,117,116,95,113,117,101,117,101,
               42]},
             {sep,
              [{text,
                "Ksends acknowledgements if the sending is completed there. If the port is in"}],
              0,false},
             {text,"\t*command*"},
             {sep,
              [{text,
                "ºmode, the Erlang code serializes the send operations so that only one packet can be waiting for delivery at a time. Therefore the acknowledgement can be sent whenever the queue is empty."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,
              [16,42,115,101,110,100,95,111,117,116,95,113,117,101,117,101,
               42]},
             {sep,
              [{text,
                [22,114,111,117,116,105,110,101,32,105,115,32,97,115,32,102,
                 111,108,108,111,119,115,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [1045,10,40,32,49,41,32,115,116,97,116,105,99,32,105,110,116,32,
               115,101,110,100,95,111,117,116,95,113,117,101,117,101,40,85,
               100,115,68,97,116,97,32,42,117,100,41,10,40,32,50,41,32,123,10,
               40,32,51,41,32,32,32,32,32,102,111,114,40,59,59,41,32,123,10,
               40,32,52,41,32,32,32,32,32,32,32,32,32,105,110,116,32,118,108,
               101,110,59,10,40,32,53,41,32,32,32,32,32,32,32,32,32,83,121,
               115,73,79,86,101,99,32,42,116,109,112,32,61,32,100,114,105,118,
               101,114,95,112,101,101,107,113,40,117,100,45,62,112,111,114,
               116,44,32,38,118,108,101,110,41,59,10,40,32,54,41,32,32,32,32,
               32,32,32,32,32,105,110,116,32,119,114,111,116,101,59,10,40,32,
               55,41,32,32,32,32,32,32,32,32,32,105,102,32,40,116,109,112,32,
               61,61,32,78,85,76,76,41,32,123,10,40,32,56,41,32,32,32,32,32,
               32,32,32,32,32,32,32,32,100,114,105,118,101,114,95,115,101,108,
               101,99,116,40,117,100,45,62,112,111,114,116,44,32,40,69,114,
               108,68,114,118,69,118,101,110,116,41,32,117,100,45,62,102,100,
               44,32,68,79,95,87,82,73,84,69,44,32,48,41,59,10,40,32,57,41,32,
               32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,117,100,45,
               62,116,121,112,101,32,61,61,32,112,111,114,116,84,121,112,101,
               67,111,109,109,97,110,100,41,32,123,10,40,49,48,41,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,100,114,105,118,101,114,
               95,111,117,116,112,117,116,40,117,100,45,62,112,111,114,116,44,
               32,34,83,111,107,34,44,32,51,41,59,10,40,49,49,41,32,32,32,32,
               32,32,32,32,32,32,32,32,32,125,10,40,49,50,41,32,32,32,32,32,
               32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,40,
               49,51,41,32,32,32,32,32,32,32,32,32,125,10,40,49,52,41,32,32,
               32,32,32,32,32,32,32,105,102,32,40,118,108,101,110,32,62,32,73,
               79,95,86,69,67,84,79,82,95,77,65,88,41,32,123,10,40,49,53,41,
               32,32,32,32,32,32,32,32,32,32,32,32,32,118,108,101,110,32,61,
               32,73,79,95,86,69,67,84,79,82,95,77,65,88,59,10,40,49,54,41,32,
               32,32,32,32,32,32,32,32,125,32,10,40,49,55,41,32,32,32,32,32,
               32,32,32,32,105,102,32,40,40,119,114,111,116,101,32,61,32,119,
               114,105,116,101,118,40,117,100,45,62,102,100,44,32,116,109,112,
               44,32,118,108,101,110,41,41,32,60,32,48,41,32,123,10,40,49,56,
               41,32,32,32,32,32,32,32,32,32,32,32,32,32,105,102,32,40,101,
               114,114,110,111,32,61,61,32,69,87,79,85,76,68,66,76,79,67,75,
               41,32,123,10,40,49,57,41,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,100,114,105,118,101,114,95,115,101,108,101,99,
               116,40,117,100,45,62,112,111,114,116,44,32,40,69,114,108,68,
               114,118,69,118,101,110,116,41,32,117,100,45,62,102,100,44,32,
               10,40,50,48,41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,68,79,95,87,82,73,
               84,69,44,32,49,41,59,10,40,50,49,41,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,48,59,10,40,
               50,50,41,32,32,32,32,32,32,32,32,32,32,32,32,32,125,32,101,108,
               115,101,32,123,10,40,50,51,41,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,100,114,105,118,101,114,95,102,97,105,108,
               117,114,101,95,101,111,102,40,117,100,45,62,112,111,114,116,41,
               59,10,40,50,52,41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,114,101,116,117,114,110,32,45,49,59,10,40,50,53,41,32,32,
               32,32,32,32,32,32,32,32,32,32,32,125,10,40,50,54,41,32,32,32,
               32,32,32,32,32,32,125,10,40,50,55,41,32,32,32,32,32,32,32,32,
               32,100,114,105,118,101,114,95,100,101,113,40,117,100,45,62,112,
               111,114,116,44,32,119,114,111,116,101,41,59,10,40,50,56,41,32,
               32,32,32,32,32,32,32,32,117,100,45,62,115,101,110,116,32,43,61,
               32,119,114,111,116,101,59,10,40,50,57,41,32,32,32,32,32,125,10,
               40,51,48,41,32,125,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "NWe simply pick out an I/O vector from the queue (which is the whole queue as a"}],
              0,false},
             {text,"\n*SysIOVec*"},
             {sep,[{text,"\"). If the I/O vector is too long ("}],0,false},
             {text,[15,42,73,79,95,86,69,67,84,79,82,95,77,65,88,42]},
             {sep,
              [{text,
                "Jis defined to 16), the vector length is decreased (line 15), otherwise the"}],
              0,false},
             {text,"\b*writev*"},
             {sep,
              [{text,
                "jcall (line 17) fails. Writing is tried and anything written is dequeued (line 27). If the write fails with"}],
              0,false},
             {text,"\r*EWOULDBLOCK*"},
             {sep,
              [{text,"3(notice that all sockets are in non-blocking mode),"}],
              0,false},
             {text,
              [15,42,100,114,105,118,101,114,95,115,101,108,101,99,116,42]},
             {sep,
              [{text,
                [21,105,115,32,99,97,108,108,101,100,32,116,111,32,109,97,107,
                 101,32,116,104,101]}],
              0,false},
             {text,"\f*uds_output*"},
             {sep,
              [{text,
                "5routine be called when there is space to write again."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "KWe continue trying to write until the queue is empty or the writing blocks."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"$The routine above is called from the"}],0,false},
             {text,"\f*uds_output*"},
             {sep,[{text,"\broutine:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [389,10,40,32,49,41,32,115,116,97,116,105,99,32,118,111,105,100,
               32,117,100,115,95,111,117,116,112,117,116,40,69,114,108,68,114,
               118,68,97,116,97,32,104,97,110,100,108,101,44,32,69,114,108,68,
               114,118,69,118,101,110,116,32,101,118,101,110,116,41,10,40,32,
               50,41,32,123,10,40,32,51,41,32,32,32,32,85,100,115,68,97,116,
               97,32,42,117,100,32,61,32,40,85,100,115,68,97,116,97,32,42,41,
               32,104,97,110,100,108,101,59,10,40,32,52,41,32,32,32,32,105,
               102,32,40,117,100,45,62,116,121,112,101,32,61,61,32,112,111,
               114,116,84,121,112,101,67,111,110,110,101,99,116,111,114,41,32,
               123,10,40,32,53,41,32,32,32,32,32,32,32,32,117,100,45,62,116,
               121,112,101,32,61,32,112,111,114,116,84,121,112,101,67,111,109,
               109,97,110,100,59,10,40,32,54,41,32,32,32,32,32,32,32,32,100,
               114,105,118,101,114,95,115,101,108,101,99,116,40,117,100,45,62,
               112,111,114,116,44,32,40,69,114,108,68,114,118,69,118,101,110,
               116,41,32,117,100,45,62,102,100,44,32,68,79,95,87,82,73,84,69,
               44,32,48,41,59,10,40,32,55,41,32,32,32,32,32,32,32,32,100,114,
               105,118,101,114,95,111,117,116,112,117,116,40,117,100,45,62,
               112,111,114,116,44,32,34,67,111,107,34,44,51,41,59,10,40,32,56,
               41,32,32,32,32,32,32,32,32,114,101,116,117,114,110,59,10,40,32,
               57,41,32,32,32,32,125,10,40,49,48,41,32,32,32,32,115,101,110,
               100,95,111,117,116,95,113,117,101,117,101,40,117,100,41,59,10,
               40,49,49,41,32,125,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [357,84,104,101,32,114,111,117,116,105,110,101,32,105,115,32,
               115,105,109,112,108,101,58,32,105,116,32,102,105,114,115,116,
               32,104,97,110,100,108,101,115,32,116,104,101,32,102,97,99,116,
               32,116,104,97,116,32,116,104,101,32,111,117,116,112,117,116,32,
               115,101,108,101,99,116,32,119,105,108,108,32,99,111,110,99,101,
               114,110,32,97,32,115,111,99,107,101,116,32,105,110,32,116,104,
               101,32,98,117,115,105,110,101,115,115,32,111,102,32,99,111,110,
               110,101,99,116,105,110,103,32,40,97,110,100,32,116,104,101,32,
               99,111,110,110,101,99,116,105,110,103,32,98,108,111,99,107,101,
               100,41,46,32,73,102,32,116,104,101,32,115,111,99,107,101,116,
               32,105,115,32,105,110,32,97,32,99,111,110,110,101,99,116,101,
               100,32,115,116,97,116,101,44,32,105,116,32,115,105,109,112,108,
               121,32,115,101,110,100,115,32,116,104,101,32,111,117,116,112,
               117,116,32,113,117,101,117,101,46,32,84,104,105,115,32,114,111,
               117,116,105,110,101,32,105,115,32,99,97,108,108,101,100,32,119,
               104,101,110,32,105,116,32,105,115,32,112,111,115,115,105,98,
               108,101,32,116,111,32,119,114,105,116,101,32,116,111,32,97,32,
               115,111,99,107,101,116,32,119,104,101,114,101,32,119,101,32,
               104,97,118,101,32,97,110,32,111,117,116,112,117,116,32,113,117,
               101,117,101,44,32,115,111,32,116,104,101,114,101,32,105,115,32,
               110,111,32,113,117,101,115,116,105,111,110,32,119,104,97,116,
               32,116,111,32,100,111,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "dThe driver implements a control interface, which is a synchronous interface called when Erlang calls"}],
              0,false},
             {text,"0[erlang#port_control/3](./erlang#port_control/3)"},
             {sep,
              [{text,
                ":. Only this interface can control the driver when it is in"}],
              0,false},
             {text,[6,42,100,97,116,97,42]},
             {sep,
              [{text,"2mode. It can be called with the following opcodes:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,[3,39,67,39]}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,[{text,"\fSets port in"}],0,false},
                                  {text,[7,99,111,109,109,97,110,100]},
                                  {sep,
                                   [{text,[5,109,111,100,101,46]}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,[{text,[3,39,73,39]}],0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,[{text,"\fSets port in"}],0,false},
                                {text,"\fintermediate"},
                                {sep,[{text,[5,109,111,100,101,46]}],0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,[3,39,68,39]}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,[{text,"\fSets port in"}],0,false},
                              {text,[4,100,97,116,97]},
                              {sep,[{text,[5,109,111,100,101,46]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[3,39,78,39]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             "ÕGets identification number for listen port. This identification number is used in an accept command to the driver. It is returned as a big-endian 32-bit integer, which is the file identifier for the listen socket."}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[3,39,83,39]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [283,71,101,116,115,32,115,116,97,116,105,115,116,
                            105,99,115,44,32,119,104,105,99,104,32,105,115,32,
                            116,104,101,32,110,117,109,98,101,114,32,111,102,
                            32,98,121,116,101,115,32,114,101,99,101,105,118,
                            101,100,44,32,116,104,101,32,110,117,109,98,101,
                            114,32,111,102,32,98,121,116,101,115,32,115,101,
                            110,116,44,32,97,110,100,32,116,104,101,32,110,
                            117,109,98,101,114,32,111,102,32,98,121,116,101,
                            115,32,112,101,110,100,105,110,103,32,105,110,32,
                            116,104,101,32,111,117,116,112,117,116,32,113,117,
                            101,117,101,46,32,84,104,105,115,32,100,97,116,97,
                            32,105,115,32,117,115,101,100,32,119,104,101,110,
                            32,116,104,101,32,100,105,115,116,114,105,98,117,
                            116,105,111,110,32,99,104,101,99,107,115,32,116,
                            104,97,116,32,97,32,99,111,110,110,101,99,116,105,
                            111,110,32,105,115,32,97,108,105,118,101,32,40,
                            116,105,99,107,105,110,103,41,46,32,84,104,101,32,
                            115,116,97,116,105,115,116,105,99,115,32,105,115,
                            32,114,101,116,117,114,110,101,100,32,97,115,32,
                            116,104,114,101,101,32,51,50,45,98,105,116,32,98,
                            105,103,45,101,110,100,105,97,110,32,105,110,116,
                            101,103,101,114,115,46]}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[3,39,84,39]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "XSends a tick message, which is a packet of length 0. Ticking is done when the port is in"}],
                           0,false},
                          {text,[4,100,97,116,97]},
                          {sep,
                           [{text,
                             "`mode, so the command for sending data cannot be used (besides it ignores zero length packages in"}],
                           0,false},
                          {text,[7,99,111,109,109,97,110,100]},
                          {sep,
                           [{text,
                             "Vmode). This is used by the ticker to send dummy data when no other traffic is present."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,[5,78,111,116,101,58]},
                          {sep,
                           [{text,
                             "^It is important that the interface for sending ticks is not blocking. This implementation uses"}],
                           0,false},
                          {text,
                           [21,101,114,108,97,110,103,35,112,111,114,116,95,
                            99,111,110,116,114,111,108,47,51]},
                          {sep,
                           [{text,"%, which does not block the caller. If"}],
                           0,false},
                          {text,
                           [19,101,114,108,97,110,103,58,112,111,114,116,95,
                            99,111,109,109,97,110,100]},
                          {sep,[{text,"\fis used, use"}],0,false},
                          {text,
                           [21,101,114,108,97,110,103,35,112,111,114,116,95,
                            99,111,109,109,97,110,100,47,51]},
                          {sep,[{text,"\band pass"}],0,false},
                          {text,[7,91,102,111,114,99,101,93]},
                          {sep,
                           [{text,
                             [157,97,115,32,111,112,116,105,111,110,32,108,
                              105,115,116,59,32,111,116,104,101,114,119,105,
                              115,101,32,116,104,101,32,99,97,108,108,101,114,
                              32,99,97,110,32,98,101,32,98,108,111,99,107,101,
                              100,32,105,110,100,101,102,105,110,105,116,101,
                              108,121,32,111,110,32,97,32,98,117,115,121,32,
                              112,111,114,116,32,97,110,100,32,112,114,101,
                              118,101,110,116,32,116,104,101,32,115,121,115,
                              116,101,109,32,102,114,111,109,32,116,97,107,
                              105,110,103,32,100,111,119,110,32,97,32,99,111,
                              110,110,101,99,116,105,111,110,32,116,104,97,
                              116,32,105,115,32,110,111,116,32,102,117,110,99,
                              116,105,111,110,105,110,103,46]}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,39,82,39]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "­Gets creation number of a listen socket, which is used to dig out the number stored in the lock file to differentiate between invocations of Erlang nodes with the same name."}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [136,84,104,101,32,99,111,110,116,114,111,108,32,105,110,116,
                 101,114,102,97,99,101,32,103,101,116,115,32,97,32,98,117,102,
                 102,101,114,32,116,111,32,114,101,116,117,114,110,32,105,116,
                 115,32,118,97,108,117,101,32,105,110,44,32,98,117,116,32,105,
                 115,32,102,114,101,101,32,116,111,32,97,108,108,111,99,97,
                 116,101,32,105,116,115,32,111,119,110,32,98,117,102,102,101,
                 114,32,105,102,32,116,104,101,32,112,114,111,118,105,100,101,
                 100,32,111,110,101,32,105,115,32,116,111,111,32,115,109,97,
                 108,108,46,32,84,104,101]}],
              0,false},
             {text,"\r*uds_control*"},
             {sep,
              [{text,
                [19,99,111,100,101,32,105,115,32,97,115,32,102,111,108,108,
                 111,119,115,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [2739,10,40,32,49,41,32,115,116,97,116,105,99,32,105,110,116,32,
               117,100,115,95,99,111,110,116,114,111,108,40,69,114,108,68,114,
               118,68,97,116,97,32,104,97,110,100,108,101,44,32,117,110,115,
               105,103,110,101,100,32,105,110,116,32,99,111,109,109,97,110,
               100,44,32,10,40,32,50,41,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,99,104,97,114,42,32,98,117,
               102,44,32,105,110,116,32,99,111,117,110,116,44,32,99,104,97,
               114,42,42,32,114,101,115,44,32,105,110,116,32,114,101,115,95,
               115,105,122,101,41,10,40,32,51,41,32,123,10,40,32,52,41,32,47,
               42,32,76,111,99,97,108,32,109,97,99,114,111,32,116,111,32,101,
               110,115,117,114,101,32,108,97,114,103,101,32,101,110,111,117,
               103,104,32,98,117,102,102,101,114,46,32,42,47,10,40,32,53,41,
               32,35,100,101,102,105,110,101,32,69,78,83,85,82,69,40,78,41,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,92,10,40,32,54,41,32,32,32,32,100,
               111,32,123,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,92,10,40,32,55,41,32,32,32,32,32,32,32,32,105,102,32,
               40,114,101,115,95,115,105,122,101,32,60,32,78,41,32,123,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,92,
               10,40,32,56,41,32,32,32,32,32,32,32,32,32,32,32,32,42,114,101,
               115,32,61,32,65,76,76,79,67,40,78,41,59,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,92,10,40,32,57,41,32,
               32,32,32,32,32,32,32,125,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,92,10,40,49,48,41,32,32,32,32,125,32,119,
               104,105,108,101,40,48,41,10,10,40,49,49,41,32,32,32,32,85,100,
               115,68,97,116,97,32,42,117,100,32,61,32,40,85,100,115,68,97,
               116,97,32,42,41,32,104,97,110,100,108,101,59,10,10,40,49,50,41,
               32,32,32,32,115,119,105,116,99,104,32,40,99,111,109,109,97,110,
               100,41,32,123,10,40,49,51,41,32,32,32,32,99,97,115,101,32,39,
               83,39,58,10,40,49,52,41,32,32,32,32,32,32,32,32,123,10,40,49,
               53,41,32,32,32,32,32,32,32,32,32,32,32,32,69,78,83,85,82,69,40,
               49,51,41,59,10,40,49,54,41,32,32,32,32,32,32,32,32,32,32,32,32,
               42,42,114,101,115,32,61,32,48,59,10,40,49,55,41,32,32,32,32,32,
               32,32,32,32,32,32,32,112,117,116,95,112,97,99,107,101,116,95,
               108,101,110,103,116,104,40,40,42,114,101,115,41,32,43,32,49,44,
               32,117,100,45,62,114,101,99,101,105,118,101,100,41,59,10,40,49,
               56,41,32,32,32,32,32,32,32,32,32,32,32,32,112,117,116,95,112,
               97,99,107,101,116,95,108,101,110,103,116,104,40,40,42,114,101,
               115,41,32,43,32,53,44,32,117,100,45,62,115,101,110,116,41,59,
               10,40,49,57,41,32,32,32,32,32,32,32,32,32,32,32,32,112,117,116,
               95,112,97,99,107,101,116,95,108,101,110,103,116,104,40,40,42,
               114,101,115,41,32,43,32,57,44,32,100,114,105,118,101,114,95,
               115,105,122,101,113,40,117,100,45,62,112,111,114,116,41,41,59,
               10,40,50,48,41,32,32,32,32,32,32,32,32,32,32,32,32,114,101,116,
               117,114,110,32,49,51,59,10,40,50,49,41,32,32,32,32,32,32,32,32,
               125,10,40,50,50,41,32,32,32,32,99,97,115,101,32,39,67,39,58,10,
               40,50,51,41,32,32,32,32,32,32,32,32,105,102,32,40,117,100,45,
               62,116,121,112,101,32,60,32,112,111,114,116,84,121,112,101,67,
               111,109,109,97,110,100,41,32,123,10,40,50,52,41,32,32,32,32,32,
               32,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,112,
               111,114,116,95,99,111,110,116,114,111,108,95,101,114,114,111,
               114,40,114,101,115,44,32,114,101,115,95,115,105,122,101,44,32,
               34,101,105,110,118,97,108,34,41,59,10,40,50,53,41,32,32,32,32,
               32,32,32,32,125,10,40,50,54,41,32,32,32,32,32,32,32,32,117,100,
               45,62,116,121,112,101,32,61,32,112,111,114,116,84,121,112,101,
               67,111,109,109,97,110,100,59,10,40,50,55,41,32,32,32,32,32,32,
               32,32,100,114,105,118,101,114,95,115,101,108,101,99,116,40,117,
               100,45,62,112,111,114,116,44,32,40,69,114,108,68,114,118,69,
               118,101,110,116,41,32,117,100,45,62,102,100,44,32,68,79,95,82,
               69,65,68,44,32,48,41,59,10,40,50,56,41,32,32,32,32,32,32,32,32,
               69,78,83,85,82,69,40,49,41,59,10,40,50,57,41,32,32,32,32,32,32,
               32,32,42,42,114,101,115,32,61,32,48,59,10,40,51,48,41,32,32,32,
               32,32,32,32,32,114,101,116,117,114,110,32,49,59,10,40,51,49,41,
               32,32,32,32,99,97,115,101,32,39,73,39,58,10,40,51,50,41,32,32,
               32,32,32,32,32,32,105,102,32,40,117,100,45,62,116,121,112,101,
               32,60,32,112,111,114,116,84,121,112,101,67,111,109,109,97,110,
               100,41,32,123,10,40,51,51,41,32,32,32,32,32,32,32,32,32,32,32,
               32,114,101,116,117,114,110,32,114,101,112,111,114,116,95,99,
               111,110,116,114,111,108,95,101,114,114,111,114,40,114,101,115,
               44,32,114,101,115,95,115,105,122,101,44,32,34,101,105,110,118,
               97,108,34,41,59,10,40,51,52,41,32,32,32,32,32,32,32,32,125,10,
               40,51,53,41,32,32,32,32,32,32,32,32,117,100,45,62,116,121,112,
               101,32,61,32,112,111,114,116,84,121,112,101,73,110,116,101,114,
               109,101,100,105,97,116,101,59,10,40,51,54,41,32,32,32,32,32,32,
               32,32,100,114,105,118,101,114,95,115,101,108,101,99,116,40,117,
               100,45,62,112,111,114,116,44,32,40,69,114,108,68,114,118,69,
               118,101,110,116,41,32,117,100,45,62,102,100,44,32,68,79,95,82,
               69,65,68,44,32,48,41,59,10,40,51,55,41,32,32,32,32,32,32,32,32,
               69,78,83,85,82,69,40,49,41,59,10,40,51,56,41,32,32,32,32,32,32,
               32,32,42,42,114,101,115,32,61,32,48,59,10,40,51,57,41,32,32,32,
               32,32,32,32,32,114,101,116,117,114,110,32,49,59,10,40,52,48,41,
               32,32,32,32,99,97,115,101,32,39,68,39,58,10,40,52,49,41,32,32,
               32,32,32,32,32,32,105,102,32,40,117,100,45,62,116,121,112,101,
               32,60,32,112,111,114,116,84,121,112,101,67,111,109,109,97,110,
               100,41,32,123,10,40,52,50,41,32,32,32,32,32,32,32,32,32,32,32,
               32,114,101,116,117,114,110,32,114,101,112,111,114,116,95,99,
               111,110,116,114,111,108,95,101,114,114,111,114,40,114,101,115,
               44,32,114,101,115,95,115,105,122,101,44,32,34,101,105,110,118,
               97,108,34,41,59,10,40,52,51,41,32,32,32,32,32,32,32,32,125,10,
               40,52,52,41,32,32,32,32,32,32,32,32,117,100,45,62,116,121,112,
               101,32,61,32,112,111,114,116,84,121,112,101,68,97,116,97,59,10,
               40,52,53,41,32,32,32,32,32,32,32,32,100,111,95,114,101,99,118,
               40,117,100,41,59,10,40,52,54,41,32,32,32,32,32,32,32,32,69,78,
               83,85,82,69,40,49,41,59,10,40,52,55,41,32,32,32,32,32,32,32,32,
               42,42,114,101,115,32,61,32,48,59,10,40,52,56,41,32,32,32,32,32,
               32,32,32,114,101,116,117,114,110,32,49,59,10,40,52,57,41,32,32,
               32,32,99,97,115,101,32,39,78,39,58,10,40,53,48,41,32,32,32,32,
               32,32,32,32,105,102,32,40,117,100,45,62,116,121,112,101,32,33,
               61,32,112,111,114,116,84,121,112,101,76,105,115,116,101,110,
               101,114,41,32,123,10,40,53,49,41,32,32,32,32,32,32,32,32,32,32,
               32,32,114,101,116,117,114,110,32,114,101,112,111,114,116,95,99,
               111,110,116,114,111,108,95,101,114,114,111,114,40,114,101,115,
               44,32,114,101,115,95,115,105,122,101,44,32,34,101,105,110,118,
               97,108,34,41,59,10,40,53,50,41,32,32,32,32,32,32,32,32,125,10,
               40,53,51,41,32,32,32,32,32,32,32,32,69,78,83,85,82,69,40,53,41,
               59,10,40,53,52,41,32,32,32,32,32,32,32,32,40,42,114,101,115,41,
               91,48,93,32,61,32,48,59,10,40,53,53,41,32,32,32,32,32,32,32,32,
               112,117,116,95,112,97,99,107,101,116,95,108,101,110,103,116,
               104,40,40,42,114,101,115,41,32,43,32,49,44,32,117,100,45,62,
               102,100,41,59,10,40,53,54,41,32,32,32,32,32,32,32,32,114,101,
               116,117,114,110,32,53,59,10,40,53,55,41,32,32,32,32,99,97,115,
               101,32,39,84,39,58,32,47,42,32,116,105,99,107,32,42,47,10,40,
               53,56,41,32,32,32,32,32,32,32,32,105,102,32,40,117,100,45,62,
               116,121,112,101,32,33,61,32,112,111,114,116,84,121,112,101,68,
               97,116,97,41,32,123,10,40,53,57,41,32,32,32,32,32,32,32,32,32,
               32,32,32,114,101,116,117,114,110,32,114,101,112,111,114,116,95,
               99,111,110,116,114,111,108,95,101,114,114,111,114,40,114,101,
               115,44,32,114,101,115,95,115,105,122,101,44,32,34,101,105,110,
               118,97,108,34,41,59,10,40,54,48,41,32,32,32,32,32,32,32,32,125,
               10,40,54,49,41,32,32,32,32,32,32,32,32,100,111,95,115,101,110,
               100,40,117,100,44,34,34,44,48,41,59,10,40,54,50,41,32,32,32,32,
               32,32,32,32,69,78,83,85,82,69,40,49,41,59,10,40,54,51,41,32,32,
               32,32,32,32,32,32,42,42,114,101,115,32,61,32,48,59,10,40,54,52,
               41,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,49,59,10,
               40,54,53,41,32,32,32,32,99,97,115,101,32,39,82,39,58,10,40,54,
               54,41,32,32,32,32,32,32,32,32,105,102,32,40,117,100,45,62,116,
               121,112,101,32,33,61,32,112,111,114,116,84,121,112,101,76,105,
               115,116,101,110,101,114,41,32,123,10,40,54,55,41,32,32,32,32,
               32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,112,
               111,114,116,95,99,111,110,116,114,111,108,95,101,114,114,111,
               114,40,114,101,115,44,32,114,101,115,95,115,105,122,101,44,32,
               34,101,105,110,118,97,108,34,41,59,10,40,54,56,41,32,32,32,32,
               32,32,32,32,125,10,40,54,57,41,32,32,32,32,32,32,32,32,69,78,
               83,85,82,69,40,50,41,59,10,40,55,48,41,32,32,32,32,32,32,32,32,
               40,42,114,101,115,41,91,48,93,32,61,32,48,59,10,40,55,49,41,32,
               32,32,32,32,32,32,32,40,42,114,101,115,41,91,49,93,32,61,32,
               117,100,45,62,99,114,101,97,116,105,111,110,59,10,40,55,50,41,
               32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,50,59,10,40,
               55,51,41,32,32,32,32,100,101,102,97,117,108,116,58,10,40,55,52,
               41,32,32,32,32,32,32,32,32,114,101,116,117,114,110,32,114,101,
               112,111,114,116,95,99,111,110,116,114,111,108,95,101,114,114,
               111,114,40,114,101,115,44,32,114,101,115,95,115,105,122,101,44,
               32,34,101,105,110,118,97,108,34,41,59,10,40,55,53,41,32,32,32,
               32,125,10,40,55,54,41,32,35,117,110,100,101,102,32,69,78,83,85,
               82,69,10,40,55,55,41,32,125,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\tThe macro"}],0,false},
             {text,"\b*ENSURE*"},
             {sep,
              [{text,
                "§(line 5-10) is used to ensure that the buffer is large enough for the answer. We switch on the command and take actions. We always have read select active on a port in"}],
              0,false},
             {text,[6,42,100,97,116,97,42]},
             {sep,
              [{text,
                [25,109,111,100,101,32,40,97,99,104,105,101,118,101,100,32,98,
                 121,32,99,97,108,108,105,110,103]}],
              0,false},
             {text,"\t*do_recv*"},
             {sep,
              [{text,".on line 45), but we turn off read selection in"}],
              0,false},
             {text,[14,42,105,110,116,101,114,109,101,100,105,97,116,101,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\t*command*"},
             {sep,
              [{text,
                [23,109,111,100,101,115,32,40,108,105,110,101,32,50,55,32,97,
                 110,100,32,51,54,41,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "PThe rest of the driver is more or less UDS-specific and not of general interest."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,80,117,116,116,105,110,103,32,73,116,32,65,108,108,32,84,
        111,103,101,116,104,101,114]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [29,84,111,32,116,101,115,116,32,116,104,101,32,100,105,115,116,
              114,105,98,117,116,105,111,110,44,32,116,104,101]}],
           0,false},
          {text,
           [20,42,110,101,116,95,107,101,114,110,101,108,58,115,116,97,114,
            116,47,49,42]},
          {sep,
           [{text,
             [132,102,117,110,99,116,105,111,110,32,99,97,110,32,98,101,32,
              117,115,101,100,46,32,73,116,32,105,115,32,117,115,101,102,117,
              108,44,32,97,115,32,105,116,32,115,116,97,114,116,115,32,116,
              104,101,32,100,105,115,116,114,105,98,117,116,105,111,110,32,
              111,110,32,97,32,114,117,110,110,105,110,103,32,115,121,115,116,
              101,109,44,32,119,104,101,114,101,32,116,114,97,99,105,110,103,
              47,100,101,98,117,103,103,105,110,103,32,99,97,110,32,98,101,32,
              112,101,114,102,111,114,109,101,100,46,32,84,104,101]}],
           0,false},
          {text,
           [20,42,110,101,116,95,107,101,114,110,101,108,58,115,116,97,114,
            116,47,49,42]},
          {sep,
           [{text,
             "Äroutine takes a list as its single argument. The list first element in the list is to be the node name (without the \"@hostname\") as an atom. The second (and last) element is to be one of the atoms"}],
           0,false},
          {text,"\f*shortnames*"},
          {sep,[{text,[2,111,114]}],0,false},
          {text,"\v*longnames*"},
          {sep,
           [{text,
             [22,46,32,73,110,32,116,104,101,32,101,120,97,109,112,108,101,32,
              99,97,115,101,44]}],
           0,false},
          {text,"\f*shortnames*"},
          {sep,[{text,"\ris preferred."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[3,70,111,114]}],0,false},
          {text,"\f*net_kernel*"},
          {sep,
           [{text,
             "Cto find out which distribution module to use, command-line argument"}],
           0,false},
          {text,"\r*-proto_dist*"},
          {sep,
           [{text,
             "gis used. It is followed by one or more distribution module names, with suffix \"_dist\" removed, that is,"}],
           0,false},
          {text,"\n*uds_dist*"},
          {sep,[{text,"(as a distribution module is specified as"}],0,false},
          {text,
           [17,42,45,112,114,111,116,111,95,100,105,115,116,32,117,100,115,
            42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[5,73,102,32,110,111]}],0,false},
          {text,[6,42,101,112,109,100,42]},
          {sep,
           [{text,
             ":(TCP port mapper daemon) is used, also command-line option"}],
           0,false},
          {text,"\n*-no_epmd*"},
          {sep,
           [{text,"/is to be specified, which makes Erlang skip the"}],
           0,false},
          {text,[6,42,101,112,109,100,42]},
          {sep,
           [{text,"6startup, both as an OS process and as an Erlang ditto."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [128,84,104,101,32,112,97,116,104,32,116,111,32,116,104,101,32,
              100,105,114,101,99,116,111,114,121,32,119,104,101,114,101,32,
              116,104,101,32,100,105,115,116,114,105,98,117,116,105,111,110,
              32,109,111,100,117,108,101,115,32,114,101,115,105,100,101,32,
              109,117,115,116,32,98,101,32,107,110,111,119,110,32,97,116,32,
              98,111,111,116,46,32,84,104,105,115,32,99,97,110,32,98,101,32,
              97,99,104,105,101,118,101,100,32,101,105,116,104,101,114,32,98,
              121,32,115,112,101,99,105,102,121,105,110,103]}],
           0,false},
          {text,"\f*-pa <path>*"},
          {sep,
           [{text,
             "yon the command line or by building a boot script containing the applications used for your distribution protocol. (In the"}],
           0,false},
          {text,"\n*uds_dist*"},
          {sep,
           [{text,
             [18,112,114,111,116,111,99,111,108,44,32,111,110,108,121,32,116,
              104,101]}],
           0,false},
          {text,"\n*uds_dist*"},
          {sep,
           [{text,"-application needs to be added to the script.)"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "DThe distribution starts at boot if all the above is specified and an"}],
           0,false},
          {text,[15,42,45,115,110,97,109,101,32,60,110,97,109,101,62,42]},
          {sep,[{text,"$flag is present at the command line."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,42,42,69,120,97,109,112,108,101,32,49,58,42,42]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[3,10,36,32]},
          {text,
           "Kerl -pa $ERL_TOP/lib/kernel/examples/uds_dist/ebin -proto_dist uds -no_epmd"},
          {text,
           "G\nErlang (BEAM) emulator version 5.0 \n \nEshell V5.0  (abort with ^G)\n1> "},
          {text,"$net_kernel:start([bing,shortnames])."},
          {text,[5,10,123,111,107,44]},
          {text,
           [24,60,48,46,51,48,46,48,62,125,10,40,98,105,110,103,64,104,97,100,
            111,114,41,50,62]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,42,42,69,120,97,109,112,108,101,32,50,58,42,42]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[3,10,36,32]},
          {text,
           "Eerl -pa $ERL_TOP/lib/kernel/examples/uds_dist/ebin -proto_dist uds \\ "},
          {text,[1,10]},
          {text,
           [26,32,32,32,32,32,32,45,110,111,95,101,112,109,100,32,45,115,110,
            97,109,101,32,98,111,110,103]},
          {text,
           "R\nErlang (BEAM) emulator version 5.0 \n \nEshell V5.0  (abort with ^G)\n(bong@hador)1>"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[3,84,104,101]}],0,false},
          {text,"\v*ERL_FLAGS*"},
          {sep,
           [{text,
             "Henvironment variable can be used to store the complicated parameters in:"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[3,10,36,32]},
          {text,
           ";ERL_FLAGS=-pa $ERL_TOP/lib/kernel/examples/uds_dist/ebin \\ "},
          {text,[1,10]},
          {text,
           [30,32,32,32,32,32,32,45,112,114,111,116,111,95,100,105,115,116,32,
            117,100,115,32,45,110,111,95,101,112,109,100]},
          {text,[3,10,36,32]},
          {text,[16,101,120,112,111,114,116,32,69,82,76,95,70,76,65,71,83]},
          {text,[3,10,36,32]},
          {text,[15,101,114,108,32,45,115,110,97,109,101,32,98,97,110,103]},
          {text,
           "R\nErlang (BEAM) emulator version 5.0 \n \nEshell V5.0  (abort with ^G)\n(bang@hador)1>"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"\v*ERL_FLAGS*"},
          {sep,[{text,"!should not include the node name."}],0,false}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
