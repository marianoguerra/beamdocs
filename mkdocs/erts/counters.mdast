{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\n# counters"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\n# counters"},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [17,67,111,117,110,116,101,114,32,70,117,110,99,116,105,111,110,
             115]}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [284,84,104,105,115,32,109,111,100,117,108,101,32,112,114,
                   111,118,105,100,101,115,32,97,32,115,101,116,32,111,102,32,
                   102,117,110,99,116,105,111,110,115,32,116,111,32,100,111,
                   32,111,112,101,114,97,116,105,111,110,115,32,116,111,119,
                   97,114,100,115,32,115,104,97,114,101,100,32,109,117,116,97,
                   98,108,101,32,99,111,117,110,116,101,114,32,118,97,114,105,
                   97,98,108,101,115,46,32,84,104,101,32,105,109,112,108,101,
                   109,101,110,116,97,116,105,111,110,32,100,111,101,115,32,
                   110,111,116,32,117,116,105,108,105,122,101,32,97,110,121,
                   32,115,111,102,116,119,97,114,101,32,108,101,118,101,108,
                   32,108,111,99,107,105,110,103,44,32,119,104,105,99,104,32,
                   109,97,107,101,115,32,105,116,32,118,101,114,121,32,101,
                   102,102,105,99,105,101,110,116,32,102,111,114,32,99,111,
                   110,99,117,114,114,101,110,116,32,97,99,99,101,115,115,46,
                   32,84,104,101,32,99,111,117,110,116,101,114,115,32,97,114,
                   101,32,111,114,103,97,110,105,122,101,100,32,105,110,116,
                   111,32,97,114,114,97,121,115,32,119,105,116,104,32,116,104,
                   101,32,102,111,108,108,111,119,105,110,103,32,115,101,109,
                   97,110,116,105,99,115,58]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {above,
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,"$Counters are 64 bit signed integers."}],
                  0,false}],
                0,false},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    ":Counters wrap around at overflow and underflow operations."}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   "ZCounters are initialized to zero and can then only be written to by adding or subtracting."}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  "hWrite operations guarantee atomicity. No intermediate results can be seen from a single write operation."}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   "7Two types of counter arrays can be created with options"}],
                 0,false},
                {text,"\t*atomics*"},
                {sep,[{text,[2,111,114]}],0,false},
                {text,
                 [19,42,119,114,105,116,101,95,99,111,110,99,117,114,114,101,
                  110,99,121,42]},
                {sep,[{text,[5,46,32,84,104,101]}],0,false},
                {text,"\t*atomics*"},
                {sep,
                 [{text,
                   "Lcounters have good allround performance with nice consistent semantics while"}],
                 0,false},
                {text,
                 [19,42,119,114,105,116,101,95,99,111,110,99,117,114,114,101,
                  110,99,121,42]},
                {sep,
                 [{text,
                   "scounters offers even better concurrent write performance at the expense of some potential read inconsistencies. See"}],
                 0,false},
                {text,[15,91,110,101,119,47,50,93,40,35,110,101,119,47,50,41]},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "pIndexes into counter arrays are one-based. A counter array of size N contains N counters with index from 1 to N."}],
              0,false}],
            0,false}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# Data Types"},null},null}},
    {sep,
     [{sep,[{text,"\fcounters_ref"}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(Identifies a counter array returned from"}],
                0,false},
               {text,[15,91,110,101,119,47,50,93,40,35,110,101,119,47,50,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## new/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,67,114,101,97,116,101,32,99,111,117,110,116,101,114,32,97,114,
            114,97,121]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,67,114,101,97,116,101,32,97,32,110,101,119,32,99,111,117,
                110,116,101,114,32,97,114,114,97,121,32,111,102]}],
             0,false},
            {text,[6,42,83,105,122,101,42]},
            {sep,[{text,"\tcounters."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bArgument"}],0,false},
            {text,[6,42,79,112,116,115,42]},
            {sep,
             [{text,",is a list of the following possible options:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{sep,
                   [{text,[7,97,116,111,109,105,99,115]},
                    {sep,[{text,"\t(Default)"}],0,false}],
                   0,false}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "Ã‹Counters will be sequentially consistent. If write operation A is done sequentially before write operation B, then a concurrent reader may see none of them, only A, or both A and B. It cannot see only B."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [17,119,114,105,116,101,95,99,111,110,99,117,114,114,101,
                   110,99,121]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "<This is an optimization to achieve very efficient concurrent"}],
                        0,false},
                       {text,[5,97,100,100,47,51]},
                       {sep,[{text,[3,97,110,100]}],0,false},
                       {text,[5,115,117,98,47,51]},
                       {sep,
                        [{text,
                          "]operations at the expense of potential read inconsistency and memory consumption per counter."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [395,82,101,97,100,32,111,112,101,114,97,116,105,111,
                         110,115,32,109,97,121,32,115,101,101,32,115,101,113,
                         117,101,110,116,105,97,108,108,121,32,105,110,99,111,
                         110,115,105,115,116,101,110,116,32,114,101,115,117,
                         108,116,115,32,119,105,116,104,32,114,101,103,97,114,
                         100,32,116,111,32,99,111,110,99,117,114,114,101,110,
                         116,32,119,114,105,116,101,32,111,112,101,114,97,116,
                         105,111,110,115,46,32,69,118,101,110,32,105,102,32,
                         119,114,105,116,101,32,111,112,101,114,97,116,105,
                         111,110,32,65,32,105,115,32,100,111,110,101,32,115,
                         101,113,117,101,110,116,105,97,108,108,121,32,98,101,
                         102,111,114,101,32,119,114,105,116,101,32,111,112,
                         101,114,97,116,105,111,110,32,66,44,32,97,32,99,111,
                         110,99,117,114,114,101,110,116,32,114,101,97,100,101,
                         114,32,109,97,121,32,115,101,101,32,97,110,121,32,99,
                         111,109,98,105,110,97,116,105,111,110,32,111,102,32,
                         65,32,97,110,100,32,66,44,32,105,110,99,108,117,100,
                         105,110,103,32,111,110,108,121,32,66,46,32,65,32,114,
                         101,97,100,32,111,112,101,114,97,116,105,111,110,32,
                         105,115,32,111,110,108,121,32,103,117,97,114,97,110,
                         116,101,101,100,32,116,111,32,115,101,101,32,97,108,
                         108,32,119,114,105,116,101,115,32,100,111,110,101,32,
                         115,101,113,117,101,110,116,105,97,108,108,121,32,98,
                         101,102,111,114,101,32,116,104,101,32,114,101,97,100,
                         46,32,78,111,32,119,114,105,116,101,115,32,97,114,
                         101,32,101,118,101,114,32,108,111,115,116,44,32,98,
                         117,116,32,119,105,108,108,32,101,118,101,110,116,
                         117,97,108,108,121,32,97,108,108,32,98,101,32,115,
                         101,101,110,46]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [24,84,104,101,32,116,121,112,105,99,97,108,32,117,
                           115,101,32,99,97,115,101,32,102,111,114]}],
                        0,false},
                       {text,
                        [17,119,114,105,116,101,95,99,111,110,99,117,114,114,
                         101,110,99,121]},
                       {sep,[{text,"\eis when concurrent calls to"}],0,false},
                       {text,[5,97,100,100,47,51]},
                       {sep,[{text,[3,97,110,100]}],0,false},
                       {text,[5,115,117,98,47,51]},
                       {sep,
                        [{text,
                          ":toward the same counters are very frequent, while calls to"}],
                        0,false},
                       {text,[5,103,101,116,47,50]},
                       {sep,[{text,[3,97,110,100]}],0,false},
                       {text,[5,112,117,116,47,51]},
                       {sep,
                        [{text,
                          "Vare much less frequent. The lack of absolute read consistency must also be acceptable."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "xCounters are not tied to the current process and are automatically garbage collected when they are no longer referenced."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## get/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [18,82,101,97,100,32,99,111,117,110,116,101,114,32,118,97,108,117,
            101]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [19,82,101,97,100,32,99,111,117,110,116,101,114,32,118,97,108,
              117,101,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## add/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,65,100,100,32,116,111,32,99,111,117,110,116,101,114]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,65,100,100]}],0,false},
            {text,[6,42,73,110,99,114,42]},
            {sep,
             [{text,
               [19,116,111,32,99,111,117,110,116,101,114,32,97,116,32,105,110,
                100,101,120]}],
             0,false},
            {text,[4,42,73,120,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## sub/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [21,83,117,98,116,114,97,99,116,32,102,114,111,109,32,99,111,117,
            110,116,101,114]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSubtract"}],0,false},
            {text,[6,42,68,101,99,114,42]},
            {sep,
             [{text,
               [21,102,114,111,109,32,99,111,117,110,116,101,114,32,97,116,32,
                105,110,100,101,120]}],
             0,false},
            {text,[4,42,73,120,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## put/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,83,101,116,32,99,111,117,110,116,101,114,32,116,111,32,118,97,
            108,117,101]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[5,87,114,105,116,101]}],0,false},
            {text,[7,42,86,97,108,117,101,42]},
            {sep,
             [{text,
               [19,116,111,32,99,111,117,110,116,101,114,32,97,116,32,105,110,
                100,101,120]}],
             0,false},
            {text,[4,42,73,120,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [21,68,101,115,112,105,116,101,32,105,116,115,32,
                           110,97,109,101,44,32,116,104,101]}],
                        0,false},
                       {text,
                        [19,42,119,114,105,116,101,95,99,111,110,99,117,114,
                         114,101,110,99,121,42]},
                       {sep,
                        [{text,
                          [29,111,112,116,105,109,105,122,97,116,105,111,110,
                           32,100,111,101,115,32,110,111,116,32,105,109,112,
                           114,111,118,101]}],
                        0,false},
                       {text,[5,42,112,117,116,42]},
                       {sep,[{text,"\v. A call to"}],0,false},
                       {text,[5,42,112,117,116,42]},
                       {sep,
                        [{text,
                          "Mis a relatively heavy operation compared to the very lightweight and scalable"}],
                        0,false},
                       {text,
                        [15,91,97,100,100,47,51,93,40,35,97,100,100,47,51,41]},
                       {sep,[{text,[3,97,110,100]}],0,false},
                       {text,
                        [15,91,115,117,98,47,51,93,40,35,115,117,98,47,51,41]},
                       {sep,
                        [{text,
                          [16,46,32,84,104,101,32,99,111,115,116,32,102,111,
                           114,32,97]}],
                        0,false},
                       {text,[5,42,112,117,116,42]},
                       {sep,[{text,[4,119,105,116,104]}],0,false},
                       {text,
                        [19,42,119,114,105,116,101,95,99,111,110,99,117,114,
                         114,101,110,99,121,42]},
                       {sep,[{text,"\tis like a"}],0,false},
                       {text,
                        [15,91,103,101,116,47,50,93,40,35,103,101,116,47,50,
                         41]},
                       {sep,[{text,[6,112,108,117,115,32,97]}],0,false},
                       {text,[5,42,112,117,116,42]},
                       {sep,[{text,[7,119,105,116,104,111,117,116]}],0,false},
                       {text,
                        [19,42,119,114,105,116,101,95,99,111,110,99,117,114,
                         114,101,110,99,121,42]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## info/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Get information about counter array."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "]Return information about a counter array in a map. The map has the following keys (at least):"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[4,115,105,122,101]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,"$The number of counters in the array."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,[6,109,101,109,111,114,121]}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "6Approximate memory consumption for the array in bytes."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false}],
  0,false}}
