{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [17,35,32,112,101,114,115,105,115,116,101,110,116,95,116,101,114,
             109]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [17,35,32,112,101,114,115,105,115,116,101,110,116,95,116,101,114,
             109]},
           null},
          null}}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [17,80,101,114,115,105,115,116,101,110,116,32,116,101,114,109,
                115,46]}],
             0,false}],
           0,true},
          null},
         null}}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [25,84,104,105,115,32,109,111,100,117,108,101,32,105,
                        115,32,115,105,109,105,108,97,114,32,116,111]}],
                     0,false},
                    {text,
                     [19,91,115,116,100,108,105,98,47,101,116,115,93,40,46,47,
                      101,116,115,41]},
                    {sep,
                     [{text,
                       "rin that it provides a storage for Erlang terms that can be accessed in constant time, but with the difference that"}],
                     0,false},
                    {text,
                     [17,42,112,101,114,115,105,115,116,101,110,116,95,116,
                      101,114,109,42]},
                    {sep,
                     [{text,
                       [283,104,97,115,32,98,101,101,110,32,104,105,103,104,
                        108,121,32,111,112,116,105,109,105,122,101,100,32,102,
                        111,114,32,114,101,97,100,105,110,103,32,116,101,114,
                        109,115,32,97,116,32,116,104,101,32,101,120,112,101,
                        110,115,101,32,111,102,32,119,114,105,116,105,110,103,
                        32,97,110,100,32,117,112,100,97,116,105,110,103,32,
                        116,101,114,109,115,46,32,87,104,101,110,32,97,32,112,
                        101,114,115,105,115,116,101,110,116,32,116,101,114,
                        109,32,105,115,32,117,112,100,97,116,101,100,32,111,
                        114,32,100,101,108,101,116,101,100,44,32,97,32,103,
                        108,111,98,97,108,32,103,97,114,98,97,103,101,32,99,
                        111,108,108,101,99,116,105,111,110,32,112,97,115,115,
                        32,105,115,32,114,117,110,32,116,111,32,115,99,97,110,
                        32,97,108,108,32,112,114,111,99,101,115,115,101,115,
                        32,102,111,114,32,116,104,101,32,100,101,108,101,116,
                        101,100,32,116,101,114,109,44,32,97,110,100,32,116,
                        111,32,99,111,112,121,32,105,116,32,105,110,116,111,
                        32,101,97,99,104,32,112,114,111,99,101,115,115,32,116,
                        104,97,116,32,115,116,105,108,108,32,117,115,101,115,
                        32,105,116,46,32,84,104,101,114,101,102,111,114,101,
                        44]}],
                     0,false},
                    {text,
                     [17,42,112,101,114,115,105,115,116,101,110,116,95,116,
                      101,114,109,42]},
                    {sep,
                     [{text,
                       "dis suitable for storing Erlang terms that are frequently accessed but never or infrequently updated."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "çPersistent terms is an advanced feature and is not a general replacement for ETS tables. Before using persistent terms, make sure to fully understand the consequence to system performance when updating or deleting persistent terms."}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [18,84,101,114,109,32,108,111,111,107,117,112,32,40,
                        117,115,105,110,103]}],
                     0,false},
                    {text,
                     [15,91,103,101,116,47,49,93,40,35,103,101,116,47,49,41]},
                    {sep,
                     [{text,
                       "I), is done in constant time and without taking any locks, and the term is"}],
                     0,false},
                    {sep,[{text,[3,110,111,116]}],0,false},
                    {sep,
                     [{text,
                       "Dcopied to the heap (as is the case with terms stored in ETS tables)."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,"!Storing or updating a term (using"}],
                     0,false},
                    {text,
                     [15,91,112,117,116,47,50,93,40,35,112,117,116,47,50,41]},
                    {sep,
                     [{text,
                       "¨) is proportional to the number of already created persistent terms because the hash table holding the keys will be copied. In addition, the term itself will be copied."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,"'When a (complex) term is deleted (using"}],
                     0,false},
                    {text,
                     [19,91,101,114,97,115,101,47,49,93,40,35,101,114,97,115,
                      101,47,49,41]},
                    {sep,
                     [{text,
                       [31,41,32,111,114,32,114,101,112,108,97,99,101,100,32,
                        98,121,32,97,110,111,116,104,101,114,32,40,117,115,
                        105,110,103]}],
                     0,false},
                    {text,
                     [15,91,112,117,116,47,50,93,40,35,112,117,116,47,50,41]},
                    {sep,
                     [{text,
                       "@), a global garbage collection is initiated. It works like this:"}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [265,65,108,108,32,112,114,111,99,101,115,115,101,115,32,
                    105,110,32,116,104,101,32,115,121,115,116,101,109,32,119,
                    105,108,108,32,98,101,32,115,99,104,101,100,117,108,101,
                    100,32,116,111,32,114,117,110,32,97,32,115,99,97,110,32,
                    111,102,32,116,104,101,105,114,32,104,101,97,112,115,32,
                    102,111,114,32,116,104,101,32,116,101,114,109,32,116,104,
                    97,116,32,104,97,115,32,98,101,101,110,32,100,101,108,101,
                    116,101,100,46,32,87,104,105,108,101,32,115,117,99,104,32,
                    115,99,97,110,32,105,115,32,114,101,108,97,116,105,118,
                    101,108,121,32,108,105,103,104,116,45,119,101,105,103,104,
                    116,44,32,105,102,32,116,104,101,114,101,32,97,114,101,32,
                    109,97,110,121,32,112,114,111,99,101,115,115,101,115,44,
                    32,116,104,101,32,115,121,115,116,101,109,32,99,97,110,32,
                    98,101,99,111,109,101,32,108,101,115,115,32,114,101,115,
                    112,111,110,115,105,118,101,32,117,110,116,105,108,32,97,
                    108,108,32,112,114,111,99,101,115,115,32,104,97,118,101,
                    32,115,99,97,110,110,101,100,32,116,104,101,105,114,32,
                    104,101,97,112,115,46]}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [261,73,102,32,116,104,101,32,100,101,108,101,116,101,100,
                    32,116,101,114,109,32,40,111,114,32,97,110,121,32,112,97,
                    114,116,32,111,102,32,105,116,41,32,105,115,32,115,116,
                    105,108,108,32,117,115,101,100,32,98,121,32,97,32,112,114,
                    111,99,101,115,115,44,32,116,104,97,116,32,112,114,111,99,
                    101,115,115,32,119,105,108,108,32,100,111,32,97,32,109,97,
                    106,111,114,32,40,102,117,108,108,115,119,101,101,112,41,
                    32,103,97,114,98,97,103,101,32,99,111,108,108,101,99,116,
                    105,111,110,32,97,110,100,32,99,111,112,121,32,116,104,
                    101,32,116,101,114,109,32,105,110,116,111,32,116,104,101,
                    32,112,114,111,99,101,115,115,46,32,72,111,119,101,118,
                    101,114,44,32,97,116,32,109,111,115,116,32,116,119,111,32,
                    112,114,111,99,101,115,115,101,115,32,97,116,32,97,32,116,
                    105,109,101,32,119,105,108,108,32,98,101,32,115,99,104,
                    101,100,117,108,101,100,32,116,111,32,100,111,32,116,104,
                    97,116,32,107,105,110,100,32,111,102,32,103,97,114,98,97,
                    103,101,32,99,111,108,108,101,99,116,105,111,110,46]}],
                 0,false}],
               0,false}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [291,68,101,108,101,116,105,111,110,32,111,102,32,97,116,
                      111,109,115,32,97,110,100,32,111,116,104,101,114,32,116,
                      101,114,109,115,32,116,104,97,116,32,102,105,116,32,105,
                      110,32,111,110,101,32,109,97,99,104,105,110,101,32,119,
                      111,114,100,32,105,115,32,115,112,101,99,105,97,108,108,
                      121,32,111,112,116,105,109,105,122,101,100,32,116,111,
                      32,97,118,111,105,100,32,100,111,105,110,103,32,97,32,
                      103,108,111,98,97,108,32,71,67,46,32,73,116,32,105,115,
                      32,115,116,105,108,108,32,110,111,116,32,114,101,99,111,
                      109,109,101,110,100,101,100,32,116,111,32,117,112,100,
                      97,116,101,32,112,101,114,115,105,115,116,101,110,116,
                      32,116,101,114,109,115,32,119,105,116,104,32,115,117,99,
                      104,32,118,97,108,117,101,115,32,116,111,111,32,102,114,
                      101,113,117,101,110,116,108,121,32,98,101,99,97,117,115,
                      101,32,116,104,101,32,104,97,115,104,32,116,97,98,108,
                      101,32,104,111,108,100,105,110,103,32,116,104,101,32,
                      107,101,121,115,32,105,115,32,99,111,112,105,101,100,32,
                      101,118,101,114,121,32,116,105,109,101,32,97,32,112,101,
                      114,115,105,115,116,101,110,116,32,116,101,114,109,32,
                      105,115,32,117,112,100,97,116,101,100,46]}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     "9Some examples are suitable uses for persistent terms are:"}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "NStoring of configuration data that must be easily accessible by all processes."}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,"(Storing of references for NIF resources."}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,"-Storing of references for efficient counters."}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   "NStoring an atom to indicate a logging level or whether debugging is turned on."}],
                 0,false}],
               0,false}}],
            0,false}],
          0,true},
         null},
        null}}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text," ## Storing Huge Persistent Terms"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "?The current implementation of persistent terms uses the literal"}],
               0,false},
              {text,
               [23,91,97,108,108,111,99,97,116,111,114,93,40,101,114,116,115,
                95,97,108,108,111,99,41]},
              {sep,
               [{text,
                 "ñalso used for literals (constant terms) in BEAM code. By default, 1 GB of virtual address space is reserved for literals in BEAM code and persistent terms. The amount of virtual address space reserved for literals can be changed by using the"}],
               0,false},
              {text,"&[erts_alloc#MIscs](./erts_alloc#MIscs)"},
              {sep,[{text,"\ewhen starting the emulator."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "gHere is an example how the reserved virtual address space for literals can be raised to 2 GB (2048 MB):"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [20,10,32,32,32,32,101,114,108,32,43,77,73,115,99,115,32,50,48,
                52,56]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,",## Best Practices for Using Persistent Terms"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"It is recommended to use keys like"}],0,false},
             {text,"\t*?MODULE*"},
             {sep,[{text,[2,111,114]}],0,false},
             {text,
              [18,42,123,63,77,79,68,85,76,69,44,83,117,98,75,101,121,125,42]},
             {sep,
              [{text,
                [25,116,111,32,97,118,111,105,100,32,110,97,109,101,32,99,111,
                 108,108,105,115,105,111,110,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "¿Prefer creating a few large persistent terms to creating many small persistent terms. The execution time for storing a persistent term is proportional to the number of already existing terms."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "¶Updating a persistent term with the same value as it already has is specially optimized to do nothing quickly; thus, there is no need compare the old and new values and avoid calling"}],
              0,false},
             {text,[15,91,112,117,116,47,50,93,40,35,112,117,116,47,50,41]},
             {sep,
              [{text,
                [24,105,102,32,116,104,101,32,118,97,108,117,101,115,32,97,
                 114,101,32,101,113,117,97,108,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [276,87,104,101,110,32,97,116,111,109,115,32,111,114,32,111,116,
               104,101,114,32,116,101,114,109,115,32,116,104,97,116,32,102,
               105,116,32,105,110,32,111,110,101,32,109,97,99,104,105,110,101,
               32,119,111,114,100,32,97,114,101,32,100,101,108,101,116,101,
               100,44,32,110,111,32,103,108,111,98,97,108,32,71,67,32,105,115,
               32,110,101,101,100,101,100,46,32,84,104,101,114,101,102,111,
               114,101,44,32,112,101,114,115,105,115,116,101,110,116,32,116,
               101,114,109,115,32,116,104,97,116,32,104,97,118,101,32,97,116,
               111,109,115,32,97,115,32,116,104,101,105,114,32,118,97,108,117,
               101,115,32,99,97,110,32,98,101,32,117,112,100,97,116,101,100,
               32,109,111,114,101,32,102,114,101,113,117,101,110,116,108,121,
               44,32,98,117,116,32,110,111,116,101,32,116,104,97,116,32,117,
               112,100,97,116,105,110,103,32,115,117,99,104,32,112,101,114,
               115,105,115,116,101,110,116,32,116,101,114,109,115,32,105,115,
               32,115,116,105,108,108,32,109,117,99,104,32,109,111,114,101,32,
               101,120,112,101,110,115,105,118,101,32,116,104,97,110,32,114,
               101,97,100,105,110,103,32,116,104,101,109,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [546,85,112,100,97,116,105,110,103,32,111,114,32,100,101,108,
               101,116,105,110,103,32,97,32,112,101,114,115,105,115,116,101,
               110,116,32,116,101,114,109,32,119,105,108,108,32,116,114,105,
               103,103,101,114,32,97,32,103,108,111,98,97,108,32,71,67,32,105,
               102,32,116,104,101,32,116,101,114,109,32,100,111,101,115,32,
               110,111,116,32,102,105,116,32,105,110,32,111,110,101,32,109,97,
               99,104,105,110,101,32,119,111,114,100,46,32,80,114,111,99,101,
               115,115,101,115,32,119,105,108,108,32,98,101,32,115,99,104,101,
               100,117,108,101,100,32,97,115,32,117,115,117,97,108,44,32,98,
               117,116,32,97,108,108,32,112,114,111,99,101,115,115,101,115,32,
               119,105,108,108,32,98,101,32,109,97,100,101,32,114,117,110,110,
               97,98,108,101,32,97,116,32,111,110,99,101,44,32,119,104,105,99,
               104,32,119,105,108,108,32,109,97,107,101,32,116,104,101,32,115,
               121,115,116,101,109,32,108,101,115,115,32,114,101,115,112,111,
               110,115,105,118,101,32,117,110,116,105,108,32,97,108,108,32,
               112,114,111,99,101,115,115,32,104,97,118,101,32,114,117,110,32,
               97,110,100,32,115,99,97,110,110,101,100,32,116,104,101,105,114,
               32,104,101,97,112,115,32,102,111,114,32,116,104,101,32,100,101,
               108,101,116,101,100,32,116,101,114,109,115,46,32,79,110,101,32,
               119,97,121,32,116,111,32,109,105,110,105,109,105,122,101,32,
               116,104,101,32,101,102,102,101,99,116,115,32,111,110,32,114,
               101,115,112,111,110,115,105,118,101,110,101,115,115,32,99,111,
               117,108,100,32,98,101,32,116,111,32,109,105,110,105,109,105,
               122,101,32,116,104,101,32,110,117,109,98,101,114,32,111,102,32,
               112,114,111,99,101,115,115,101,115,32,111,110,32,116,104,101,
               32,110,111,100,101,32,98,101,102,111,114,101,32,117,112,100,97,
               116,105,110,103,32,111,114,32,100,101,108,101,116,105,110,103,
               32,97,32,112,101,114,115,105,115,116,101,110,116,32,116,101,
               114,109,46,32,73,116,32,119,111,117,108,100,32,97,108,115,111,
               32,98,101,32,119,105,115,101,32,116,111,32,97,118,111,105,100,
               32,117,112,100,97,116,105,110,103,32,116,101,114,109,115,32,
               119,104,101,110,32,116,104,101,32,115,121,115,116,101,109,32,
               105,115,32,97,116,32,112,101,97,107,32,108,111,97,100,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [269,65,118,111,105,100,32,115,116,111,114,105,110,103,32,97,32,
               114,101,116,114,105,101,118,101,100,32,112,101,114,115,105,115,
               116,101,110,116,32,116,101,114,109,32,105,110,32,97,32,112,114,
               111,99,101,115,115,32,105,102,32,116,104,97,116,32,112,101,114,
               115,105,115,116,101,110,116,32,116,101,114,109,32,99,111,117,
               108,100,32,98,101,32,100,101,108,101,116,101,100,32,111,114,32,
               117,112,100,97,116,101,100,32,105,110,32,116,104,101,32,102,
               117,116,117,114,101,46,32,73,102,32,97,32,112,114,111,99,101,
               115,115,32,104,111,108,100,115,32,97,32,114,101,102,101,114,
               101,110,99,101,32,116,111,32,97,32,112,101,114,115,105,115,116,
               101,110,116,32,116,101,114,109,32,119,104,101,110,32,116,104,
               101,32,116,101,114,109,32,105,115,32,100,101,108,101,116,101,
               100,44,32,116,104,101,32,112,114,111,99,101,115,115,32,119,105,
               108,108,32,98,101,32,103,97,114,98,97,103,101,32,99,111,108,
               108,101,99,116,101,100,32,97,110,100,32,116,104,101,32,116,101,
               114,109,32,99,111,112,105,101,100,32,116,111,32,112,114,111,99,
               101,115,115,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [370,65,118,111,105,100,32,117,112,100,97,116,105,110,103,32,
               111,114,32,100,101,108,101,116,105,110,103,32,109,111,114,101,
               32,116,104,97,110,32,111,110,101,32,112,101,114,115,105,115,
               116,101,110,116,32,116,101,114,109,32,97,116,32,97,32,116,105,
               109,101,46,32,69,97,99,104,32,100,101,108,101,116,101,100,32,
               116,101,114,109,32,119,105,108,108,32,116,114,105,103,103,101,
               114,32,105,116,115,32,111,119,110,32,103,108,111,98,97,108,32,
               71,67,46,32,84,104,97,116,32,109,101,97,110,115,32,116,104,97,
               116,32,100,101,108,101,116,105,110,103,32,78,32,116,101,114,
               109,115,32,119,105,108,108,32,109,97,107,101,32,116,104,101,32,
               115,121,115,116,101,109,32,108,101,115,115,32,114,101,115,112,
               111,110,115,105,118,101,32,78,32,116,105,109,101,115,32,108,
               111,110,103,101,114,32,116,104,97,110,32,100,101,108,101,116,
               105,110,103,32,97,32,115,105,110,103,108,101,32,112,101,114,
               115,105,115,116,101,110,116,32,116,101,114,109,46,32,84,104,
               101,114,101,102,111,114,101,44,32,116,101,114,109,115,32,116,
               104,97,116,32,97,114,101,32,116,111,32,98,101,32,117,112,100,
               97,116,101,100,32,97,116,32,116,104,101,32,115,97,109,101,32,
               116,105,109,101,32,115,104,111,117,108,100,32,98,101,32,99,111,
               108,108,101,99,116,101,100,32,105,110,116,111,32,97,32,108,97,
               114,103,101,114,32,116,101,114,109,44,32,102,111,114,32,101,
               120,97,109,112,108,101,44,32,97,32,109,97,112,32,111,114,32,97,
               32,116,117,112,108,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\n## Example"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ÌThe following example shows how lock contention for ETS tables can be minimized by having one ETS table for each scheduler. The table identifiers for the ETS tables are stored as a single persistent term:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "¹\n    %% There is one ETS table for each scheduler.\n    Sid = erlang:system_info(scheduler_id),\n    Tid = element(Sid, persistent_term:get(?MODULE)),\n    ets:update_counter(Tid, Key, 1)."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# Data Types"},null},null}},
    {sep,
     [{sep,[{text,[3,107,101,121]}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [16,65,110,121,32,69,114,108,97,110,103,32,116,101,114,109,
                 46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,[{text,[5,118,97,108,117,101]}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [16,65,110,121,32,69,114,108,97,110,103,32,116,101,114,109,
                 46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## erase/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"%Erase the name for a persistent term."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"/Erase the name for the persistent term with key"}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,
             [{text,
               [26,46,32,84,104,101,32,114,101,116,117,114,110,32,118,97,108,
                117,101,32,119,105,108,108,32,98,101]}],
             0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,"+if there was a persistent term with the key"}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,
             [{text,
               "8if there was no persistent term associated with the key."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "?If there existed a previous persistent term associated with key"}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,[{text,"%, a global GC has been initiated when"}],0,false},
            {text,"\t*erase/1*"},
            {sep,[{text,"\freturns. See"}],0,false},
            {text,"\e[Description](#description)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## get/0"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [25,71,101,116,32,97,108,108,32,112,101,114,115,105,115,116,101,
            110,116,32,116,101,114,109,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "rRetrieve the keys and values for all persistent terms. The keys will be copied to the heap for the process calling"}],
             0,false},
            {text,[7,42,103,101,116,47,48,42]},
            {sep,
             [{text,
               [26,44,32,98,117,116,32,116,104,101,32,118,97,108,117,101,115,
                32,119,105,108,108,32,110,111,116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## get/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Get the value for a persistent term."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BRetrieve the value for the persistent term associated with the key"}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,
             [{text,
               "o. The lookup will be made in constant time and the value will not be copied to the heap of the calling process."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [26,84,104,105,115,32,102,117,110,99,116,105,111,110,32,102,97,
                105,108,115,32,119,105,116,104,32,97]}],
             0,false},
            {text,"\b*badarg*"},
            {sep,
             [{text,"1exception if no term has been stored with the key"}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [157,73,102,32,116,104,101,32,99,97,108,108,105,110,103,32,112,
              114,111,99,101,115,115,32,104,111,108,100,115,32,111,110,32,116,
              111,32,116,104,101,32,118,97,108,117,101,32,111,102,32,116,104,
              101,32,112,101,114,115,105,115,116,101,110,116,32,116,101,114,
              109,32,97,110,100,32,116,104,101,32,112,101,114,115,105,115,116,
              101,110,116,32,116,101,114,109,32,105,115,32,100,101,108,101,
              116,101,100,32,105,110,32,116,104,101,32,102,117,116,117,114,
              101,44,32,116,104,101,32,116,101,114,109,32,119,105,108,108,32,
              98,101,32,99,111,112,105,101,100,32,116,111,32,116,104,101,32,
              112,114,111,99,101,115,115,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## get/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Get the value for a persistent term."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BRetrieve the value for the persistent term associated with the key"}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,
             [{text,
               "o. The lookup will be made in constant time and the value will not be copied to the heap of the calling process."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [21,84,104,105,115,32,102,117,110,99,116,105,111,110,32,114,
                101,116,117,114,110,115]}],
             0,false},
            {text,"\t*Default*"},
            {sep,[{text,"'if no term has been stored with the key"}],0,false},
            {text,[5,42,75,101,121,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [157,73,102,32,116,104,101,32,99,97,108,108,105,110,103,32,112,
              114,111,99,101,115,115,32,104,111,108,100,115,32,111,110,32,116,
              111,32,116,104,101,32,118,97,108,117,101,32,111,102,32,116,104,
              101,32,112,101,114,115,105,115,116,101,110,116,32,116,101,114,
              109,32,97,110,100,32,116,104,101,32,112,101,114,115,105,115,116,
              101,110,116,32,116,101,114,109,32,105,115,32,100,101,108,101,
              116,101,100,32,105,110,32,116,104,101,32,102,117,116,117,114,
              101,44,32,116,104,101,32,116,101,114,109,32,119,105,108,108,32,
              98,101,32,99,111,112,105,101,100,32,116,111,32,116,104,101,32,
              112,114,111,99,101,115,115,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## info/0"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Get information about persistent terms."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "SReturn information about persistent terms in a map. The map has the following keys:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[5,99,111,117,110,116]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [31,84,104,101,32,110,117,109,98,101,114,32,111,102,
                         32,112,101,114,115,105,115,116,101,110,116,32,116,
                         101,114,109,115,46]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,[6,109,101,109,111,114,121]}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "LThe total amount of memory (measured in bytes) used by all persistent terms."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## put/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{sep,[{sep,[{text,"\rStore a term."}],0,false}],0,true},null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [15,83,116,111,114,101,32,116,104,101,32,118,97,108,117,101]}],
             0,false},
            {text,[7,42,86,97,108,117,101,42]},
            {sep,
             [{text,"2as a persistent term and associate it with the key"}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fIf the value"}],0,false},
            {text,[7,42,86,97,108,117,101,42]},
            {sep,
             [{text,"4is equal to the value previously stored for the key,"}],
             0,false},
            {text,[7,42,112,117,116,47,50,42]},
            {sep,[{text,"#will do nothing and return quickly."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "?If there existed a previous persistent term associated with key"}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,[{text,"%, a global GC has been initiated when"}],0,false},
            {text,[7,42,112,117,116,47,50,42]},
            {sep,[{text,"\freturns. See"}],0,false},
            {text,"\e[Description](#description)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
