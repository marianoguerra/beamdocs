{above,
 {above,
  {above,
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [17,35,32,84,104,114,101,97,100,32,80,114,111,103,114,101,115,115]},
      null},
     null}},
   {sep,
    [{text,
      [31,60,97,32,110,97,109,101,61,34,80,114,111,98,108,101,109,115,34,62,
       80,114,111,98,108,101,109,115,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\v## Problems"},null},null}},
     {sep,
      [{text,
        "ยก<a name=\"Problems_Knowing-When-Threads-Have-Completed-Accesses-to-a-Data-Structure\">Problems_Knowing-When-Threads-Have-Completed-Accesses-to-a-Data-Structure</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           "C## Knowing When Threads Have Completed Accesses to a Data Structure"},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [664,87,104,101,110,32,109,117,108,116,105,112,108,101,32,116,
                104,114,101,97,100,115,32,97,99,99,101,115,115,32,116,104,101,
                32,115,97,109,101,32,100,97,116,97,32,115,116,114,117,99,116,
                117,114,101,32,121,111,117,32,111,102,116,101,110,32,110,101,
                101,100,32,116,111,32,107,110,111,119,32,119,104,101,110,32,
                97,108,108,32,116,104,114,101,97,100,115,32,104,97,118,101,32,
                99,111,109,112,108,101,116,101,100,32,116,104,101,105,114,32,
                97,99,99,101,115,115,101,115,46,32,70,111,114,32,101,120,97,
                109,112,108,101,44,32,105,110,32,111,114,100,101,114,32,116,
                111,32,107,110,111,119,32,119,104,101,110,32,105,116,32,105,
                115,32,115,97,102,101,32,116,111,32,100,101,97,108,108,111,99,
                97,116,101,32,116,104,101,32,100,97,116,97,32,115,116,114,117,
                99,116,117,114,101,46,32,79,110,101,32,115,105,109,112,108,
                101,32,119,97,121,32,116,111,32,97,99,99,111,109,112,108,105,
                115,104,32,116,104,105,115,32,105,115,32,116,111,32,114,101,
                102,101,114,101,110,99,101,32,99,111,117,110,116,32,97,108,
                108,32,97,99,99,101,115,115,101,115,32,116,111,32,116,104,101,
                32,100,97,116,97,32,115,116,114,117,99,116,117,114,101,46,32,
                84,104,101,32,112,114,111,98,108,101,109,32,119,105,116,104,
                32,116,104,105,115,32,97,112,112,114,111,97,99,104,32,105,115,
                32,116,104,97,116,32,116,104,101,32,99,97,99,104,101,32,108,
                105,110,101,32,119,104,101,114,101,32,116,104,101,32,114,101,
                102,101,114,101,110,99,101,32,99,111,117,110,116,101,114,32,
                105,115,32,108,111,99,97,116,101,100,32,110,101,101,100,115,
                32,116,111,32,98,101,32,99,111,109,109,117,110,105,99,97,116,
                101,100,32,98,101,116,119,101,101,110,32,97,108,108,32,105,
                110,118,111,108,118,101,100,32,112,114,111,99,101,115,115,111,
                114,115,46,32,83,117,99,104,32,99,111,109,109,117,110,105,99,
                97,116,105,111,110,32,99,97,110,32,98,101,99,111,109,101,32,
                101,120,116,114,101,109,101,108,121,32,101,120,112,101,110,
                115,105,118,101,32,97,110,100,32,119,105,108,108,32,115,99,97,
                108,101,32,112,111,111,114,108,121,32,105,102,32,116,104,101,
                32,114,101,102,101,114,101,110,99,101,32,99,111,117,110,116,
                101,114,32,105,115,32,102,114,101,113,117,101,110,116,108,121,
                32,97,99,99,101,115,115,101,100,46,32,84,104,97,116,32,105,
                115,44,32,119,101,32,119,97,110,116,32,116,111,32,117,115,101,
                32,115,111,109,101,32,111,116,104,101,114,32,97,112,112,114,
                111,97,99,104,32,111,102,32,107,101,101,112,105,110,103,32,
                116,114,97,99,107,32,111,102,32,116,104,114,101,97,100,115,32,
                116,104,97,110,32,114,101,102,101,114,101,110,99,101,32,99,
                111,117,110,116,105,110,103,46]}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {sep,
      [{text,
        [155,60,97,32,110,97,109,101,61,34,80,114,111,98,108,101,109,115,95,
         75,110,111,119,105,110,103,45,84,104,97,116,45,77,111,100,105,102,
         105,99,97,116,105,111,110,115,45,111,102,45,77,101,109,111,114,121,
         45,105,115,45,67,111,110,115,105,115,116,101,110,116,108,121,45,79,
         98,115,101,114,118,101,100,34,62,80,114,111,98,108,101,109,115,95,75,
         110,111,119,105,110,103,45,84,104,97,116,45,77,111,100,105,102,105,
         99,97,116,105,111,110,115,45,111,102,45,77,101,109,111,114,121,45,
         105,115,45,67,111,110,115,105,115,116,101,110,116,108,121,45,79,98,
         115,101,114,118,101,100,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           "@## Knowing That Modifications of Memory is Consistently Observed"},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [580,68,105,102,102,101,114,101,110,116,32,104,97,114,100,119,
                97,114,101,32,97,114,99,104,105,116,101,99,116,117,114,101,
                115,32,104,97,118,101,32,100,105,102,102,101,114,101,110,116,
                32,109,101,109,111,114,121,32,109,111,100,101,108,115,46,32,
                83,111,109,101,32,97,114,99,104,105,116,101,99,116,117,114,
                101,115,32,97,108,108,111,119,115,32,118,101,114,121,32,97,
                103,103,114,101,115,115,105,118,101,32,114,101,111,114,100,
                101,114,105,110,103,32,111,102,32,109,101,109,111,114,121,32,
                97,99,99,101,115,115,101,115,32,119,104,105,108,101,32,111,
                116,104,101,114,32,97,114,99,104,105,116,101,99,116,117,114,
                101,115,32,111,110,108,121,32,114,101,111,114,100,101,114,32,
                97,32,102,101,119,32,115,112,101,99,105,102,105,99,32,99,97,
                115,101,115,46,32,67,111,109,109,111,110,32,116,111,32,97,108,
                108,32,109,111,100,101,114,110,32,104,97,114,100,119,97,114,
                101,32,105,115,44,32,104,111,119,101,118,101,114,44,32,116,
                104,97,116,32,115,111,109,101,32,116,121,112,101,32,111,102,
                32,114,101,111,114,100,101,114,105,110,103,32,119,105,108,108,
                32,111,99,99,117,114,46,32,87,104,101,110,32,117,115,105,110,
                103,32,108,111,99,107,115,32,116,111,32,112,114,111,116,101,
                99,116,32,97,108,108,32,109,101,109,111,114,121,32,97,99,99,
                101,115,115,101,115,32,109,97,100,101,32,102,114,111,109,32,
                109,117,108,116,105,112,108,101,32,116,104,114,101,97,100,115,
                32,115,117,99,104,32,114,101,111,114,100,101,114,105,110,103,
                115,32,119,105,108,108,32,110,111,116,32,98,101,32,118,105,
                115,105,98,108,101,46,32,84,104,101,32,108,111,99,107,105,110,
                103,32,112,114,105,109,105,116,105,118,101,115,32,119,105,108,
                108,32,101,110,115,117,114,101,32,116,104,97,116,32,116,104,
                101,32,109,101,109,111,114,121,32,97,99,99,101,115,115,101,
                115,32,119,105,108,108,32,98,101,32,111,114,100,101,114,101,
                100,46,32,87,104,101,110,32,117,115,105,110,103,32,108,111,99,
                107,32,102,114,101,101,32,97,108,103,111,114,105,116,104,109,
                115,32,111,110,101,32,100,111,32,104,111,119,101,118,101,114,
                32,104,97,118,101,32,116,111,32,116,97,107,101,32,116,104,105,
                115,32,114,101,111,114,100,101,114,105,110,103,32,109,97,100,
                101,32,98,121,32,116,104,101,32,104,97,114,100,119,97,114,101,
                32,105,110,116,111,32,97,99,99,111,117,110,116,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [451,72,97,114,100,119,97,114,101,32,109,101,109,111,114,121,
                32,98,97,114,114,105,101,114,115,32,111,114,32,109,101,109,
                111,114,121,32,102,101,110,99,101,115,32,97,114,101,32,105,
                110,115,116,114,117,99,116,105,111,110,115,32,116,104,97,116,
                32,99,97,110,32,98,101,32,117,115,101,100,32,116,111,32,101,
                110,102,111,114,99,101,32,111,114,100,101,114,32,98,101,116,
                119,101,101,110,32,109,101,109,111,114,121,32,97,99,99,101,
                115,115,101,115,46,32,68,105,102,102,101,114,101,110,116,32,
                104,97,114,100,119,97,114,101,32,97,114,99,104,105,116,101,99,
                116,117,114,101,115,32,112,114,111,118,105,100,101,32,100,105,
                102,102,101,114,101,110,116,32,109,101,109,111,114,121,32,98,
                97,114,114,105,101,114,115,46,32,76,111,99,107,32,102,114,101,
                101,32,97,108,103,111,114,105,116,104,109,115,32,110,101,101,
                100,32,116,111,32,117,115,101,32,109,101,109,111,114,121,32,
                98,97,114,114,105,101,114,115,32,105,110,32,111,114,100,101,
                114,32,116,111,32,101,110,115,117,114,101,32,116,104,97,116,
                32,109,101,109,111,114,121,32,97,99,99,101,115,115,101,115,32,
                97,114,101,32,110,111,116,32,114,101,111,114,100,101,114,101,
                100,32,105,110,32,115,117,99,104,32,119,97,121,115,32,116,104,
                97,116,32,116,104,101,32,97,108,103,111,114,105,116,104,109,
                32,98,114,101,97,107,115,32,100,111,119,110,46,32,77,101,109,
                111,114,121,32,98,97,114,114,105,101,114,115,32,97,114,101,32,
                97,108,115,111,32,101,120,112,101,110,115,105,118,101,32,105,
                110,115,116,114,117,99,116,105,111,110,115,44,32,115,111,32,
                121,111,117,32,116,121,112,105,99,97,108,108,121,32,119,97,
                110,116,32,116,111,32,109,105,110,105,109,105,122,101,32,116,
                104,101,32,117,115,101,32,111,102,32,116,104,101,115,101,32,
                105,110,115,116,114,117,99,116,105,111,110,115,46]}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false}],
    0,false}},
  {sep,
   [{text,
     "g<a name=\"Functionality-Used-to-Address-These-Problems\">Functionality-Used-to-Address-These-Problems</a>"},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"/## Functionality Used to Address These Problems"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [282,84,104,101,32,34,116,104,114,101,97,100,32,112,114,111,103,
             114,101,115,115,34,32,102,117,110,99,116,105,111,110,97,108,105,
             116,121,32,105,110,32,116,104,101,32,69,114,108,97,110,103,32,86,
             77,32,105,115,32,117,115,101,100,32,116,111,32,97,100,100,114,
             101,115,115,32,116,104,101,115,101,32,112,114,111,98,108,101,109,
             115,46,32,84,104,101,32,110,97,109,101,32,34,116,104,114,101,97,
             100,32,112,114,111,103,114,101,115,115,34,32,119,97,115,32,99,
             104,111,115,101,110,32,115,105,110,99,101,32,119,101,32,119,97,
             110,116,32,116,111,32,117,115,101,32,105,116,32,116,111,32,100,
             101,116,101,114,109,105,110,101,32,119,104,101,110,32,97,108,108,
             32,116,104,114,101,97,100,115,32,105,110,32,97,32,115,101,116,32,
             111,102,32,116,104,114,101,97,100,115,32,104,97,118,101,32,109,
             97,100,101,32,115,117,99,104,32,112,114,111,103,114,101,115,115,
             32,115,111,32,116,104,97,116,32,116,119,111,32,115,112,101,99,
             105,102,105,99,32,101,118,101,110,116,115,32,104,97,118,101,32,
             116,97,107,101,110,32,112,108,97,99,101,32,102,111,114,32,97,108,
             108,32,116,104,101,109,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [159,84,104,101,32,115,101,116,32,111,102,32,116,104,114,101,97,
               100,115,32,116,104,97,116,32,119,101,32,97,114,101,32,105,110,
               116,101,114,101,115,116,101,100,32,105,110,32,119,101,32,99,97,
               108,108,32,109,97,110,97,103,101,100,32,116,104,114,101,97,100,
               115,46,32,84,104,101,32,109,97,110,97,103,101,100,32,116,104,
               114,101,97,100,115,32,97,114,101,32,116,104,101,32,111,110,108,
               121,32,116,104,114,101,97,100,115,32,116,104,97,116,32,119,101,
               32,103,101,116,32,97,110,121,32,105,110,102,111,114,109,97,116,
               105,111,110,32,97,98,111,117,116,46,32,84,104,101,115,101,32,
               116,104,114,101,97,100,115]}],
            0,false},
           {text,"\b**have**"},
           {sep,
            [{text,
              [459,116,111,32,102,114,101,113,117,101,110,116,108,121,32,114,
               101,112,111,114,116,32,112,114,111,103,114,101,115,115,46,32,
               78,111,116,32,97,108,108,32,116,104,114,101,97,100,115,32,105,
               110,32,116,104,101,32,115,121,115,116,101,109,32,97,114,101,32,
               97,98,108,101,32,116,111,32,102,114,101,113,117,101,110,116,
               108,121,32,114,101,112,111,114,116,32,112,114,111,103,114,101,
               115,115,46,32,83,117,99,104,32,116,104,114,101,97,100,115,32,
               99,97,110,110,111,116,32,98,101,32,97,108,108,111,119,101,100,
               32,105,110,32,116,104,101,32,115,101,116,32,111,102,32,109,97,
               110,97,103,101,100,32,116,104,114,101,97,100,115,32,97,110,100,
               32,97,114,101,32,99,97,108,108,101,100,32,117,110,109,97,110,
               97,103,101,100,32,116,104,114,101,97,100,115,46,32,65,110,32,
               101,120,97,109,112,108,101,32,111,102,32,117,110,109,97,110,97,
               103,101,100,32,116,104,114,101,97,100,115,32,97,114,101,32,116,
               104,114,101,97,100,115,32,105,110,32,116,104,101,32,97,115,121,
               110,99,32,116,104,114,101,97,100,32,112,111,111,108,46,32,65,
               115,121,110,99,32,116,104,114,101,97,100,115,32,99,97,110,32,
               98,101,32,98,108,111,99,107,101,100,32,102,111,114,32,118,101,
               114,121,32,108,111,110,103,32,116,105,109,101,115,32,97,110,
               100,32,98,121,32,116,104,105,115,32,98,101,32,112,114,101,118,
               101,110,116,101,100,32,102,114,111,109,32,102,114,101,113,117,
               101,110,116,108,121,32,114,101,112,111,114,116,105,110,103,32,
               112,114,111,103,114,101,115,115,46,32,67,117,114,114,101,110,
               116,108,121,32,111,110,108,121,32,115,99,104,101,100,117,108,
               101,114,32,116,104,114,101,97,100,115,32,97,110,100,32,97,32,
               99,111,117,112,108,101,32,111,102,32,111,116,104,101,114,32,
               116,104,114,101,97,100,115,32,97,114,101,32,109,97,110,97,103,
               101,100,32,116,104,114,101,97,100,115,46]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,
       [149,60,97,32,110,97,109,101,61,34,70,117,110,99,116,105,111,110,97,
        108,105,116,121,45,85,115,101,100,45,116,111,45,65,100,100,114,101,
        115,115,45,84,104,101,115,101,45,80,114,111,98,108,101,109,115,95,84,
        104,114,101,97,100,45,80,114,111,103,114,101,115,115,45,69,118,101,
        110,116,115,34,62,70,117,110,99,116,105,111,110,97,108,105,116,121,45,
        85,115,101,100,45,116,111,45,65,100,100,114,101,115,115,45,84,104,101,
        115,101,45,80,114,111,98,108,101,109,115,95,84,104,114,101,97,100,45,
        80,114,111,103,114,101,115,115,45,69,118,101,110,116,115,60,47,97,62]},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [25,35,35,32,84,104,114,101,97,100,32,80,114,111,103,114,101,115,
           115,32,69,118,101,110,116,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ยฆAny thread in the system may use the thread progress functionality in order to determine when the following events have occurred at least once in all managed threads:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {text,
          [134,84,104,101,32,116,104,114,101,97,100,32,104,97,115,32,114,101,
           116,117,114,110,101,100,32,102,114,111,109,32,111,116,104,101,114,
           32,99,111,100,101,32,116,111,32,97,32,107,110,111,119,110,32,115,
           116,97,116,101,32,105,110,32,116,104,101,32,116,104,114,101,97,100,
           32,112,114,111,103,114,101,115,115,32,102,117,110,99,116,105,111,
           110,97,108,105,116,121,44,32,119,104,105,99,104,32,105,115,32,105,
           110,100,101,112,101,110,100,101,110,116,32,111,102,32,97,110,121,
           32,111,116,104,101,114,32,99,111,100,101,46]}],
        0,false},
       {sep,
        [{text,[1,42]},
         {text,".The thread has executed a full memory barrier."}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [315,84,104,101,115,101,32,101,118,101,110,116,115,44,32,111,
                 102,32,99,111,117,114,115,101,44,32,110,101,101,100,32,116,
                 111,32,111,99,99,117,114,32,111,114,100,101,114,101,100,32,
                 116,111,32,111,116,104,101,114,32,109,101,109,111,114,121,32,
                 111,112,101,114,97,116,105,111,110,115,46,32,84,104,101,32,
                 111,112,101,114,97,116,105,111,110,32,111,102,32,100,101,116,
                 101,114,109,105,110,105,110,103,32,116,104,105,115,32,98,101,
                 103,105,110,115,32,98,121,32,105,110,105,116,105,97,116,105,
                 110,103,32,116,104,101,32,116,104,114,101,97,100,32,112,114,
                 111,103,114,101,115,115,32,111,112,101,114,97,116,105,111,
                 110,46,32,84,104,101,32,116,104,114,101,97,100,32,116,104,97,
                 116,32,105,110,105,116,105,97,116,101,100,32,116,104,101,32,
                 116,104,114,101,97,100,32,112,114,111,103,114,101,115,115,32,
                 111,112,101,114,97,116,105,111,110,32,97,102,116,101,114,32,
                 116,104,105,115,32,112,111,108,108,32,102,111,114,32,116,104,
                 101,32,99,111,109,112,108,101,116,105,111,110,32,111,102,32,
                 116,104,101,32,111,112,101,114,97,116,105,111,110,46,32,66,
                 111,116,104,32,111,102,32,116,104,101,115,101,32,101,118,101,
                 110,116,115,32,109,117,115,116,32,111,99,99,117,114,32,97,
                 116,32,108,101,97,115,116,32,111,110,99,101]}],
              0,false},
             {text,"\t**after**"},
             {sep,
              [{text,
                "Cthe thread progress operation has been initiated, and at least once"}],
              0,false},
             {text,"\n**before**"},
             {sep,
              [{text,
                [295,116,104,101,32,111,112,101,114,97,116,105,111,110,32,104,
                 97,115,32,99,111,109,112,108,101,116,101,100,32,105,110,32,
                 101,97,99,104,32,109,97,110,97,103,101,100,32,116,104,114,
                 101,97,100,46,32,84,104,105,115,32,105,115,32,111,114,100,
                 101,114,101,100,32,117,115,105,110,103,32,99,111,109,109,117,
                 110,105,99,97,116,105,111,110,32,118,105,97,32,109,101,109,
                 111,114,121,32,119,104,105,99,104,32,109,97,107,101,115,32,
                 105,116,32,112,111,115,115,105,98,108,101,32,116,111,32,100,
                 114,97,119,32,99,111,110,99,108,117,115,105,111,110,32,97,98,
                 111,117,116,32,116,104,101,32,109,101,109,111,114,121,32,115,
                 116,97,116,101,32,97,102,116,101,114,32,116,104,101,32,116,
                 104,114,101,97,100,32,112,114,111,103,114,101,115,115,32,111,
                 112,101,114,97,116,105,111,110,32,104,97,115,32,99,111,109,
                 112,108,101,116,101,100,46,32,76,101,116,115,32,99,97,108,
                 108,32,116,104,101,32,112,114,111,103,114,101,115,115,32,109,
                 97,100,101,32,102,114,111,109,32,105,110,105,116,105,97,116,
                 105,111,110,32,116,111,32,99,111,109,108,101,116,105,111,110,
                 32,102,111,114,32,34,116,104,114,101,97,100,32,112,114,111,
                 103,114,101,115,115,34,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "รAssuming that the thread progress functionality is efficient, a lot of algorithms can both be simplified and made more efficient than using the first approach that comes to mind. A couple of examples follows."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "รตBy being able to determine when the first event above has occurred we can easily know when all managed threads have completed accesses to a data structure. This can be determined the following way. We have an implementation of some functionality"}],
              0,false},
             {text,[3,42,70,42]},
             {sep,
              [{text,
                [22,117,115,105,110,103,32,97,32,100,97,116,97,32,115,116,114,
                 117,99,116,117,114,101]}],
              0,false},
             {text,[3,42,68,42]},
             {sep,
              [{text,
                [18,46,32,84,104,101,32,114,101,102,101,114,101,110,99,101,32,
                 116,111]}],
              0,false},
             {text,[3,42,68,42]},
             {sep,
              [{text,
                [26,105,115,32,97,108,119,97,121,115,32,108,111,111,107,101,
                 100,32,117,112,32,98,101,102,111,114,101]}],
              0,false},
             {text,[3,42,68,42]},
             {sep,
              [{text,"(is being accessed, and the references to"}],
              0,false},
             {text,[3,42,68,42]},
             {sep,
              [{text,
                "7is always dropped before we leave the code implementing"}],
              0,false},
             {text,[3,42,70,42]},
             {sep,
              [{text,"). If we remove the possibility to look up"}],
              0,false},
             {text,[3,42,68,42]},
             {sep,
              [{text,
                [137,97,110,100,32,116,104,101,110,32,119,97,105,116,32,117,
                 110,116,105,108,32,116,104,101,32,102,105,114,115,116,32,101,
                 118,101,110,116,32,104,97,115,32,111,99,99,117,114,114,101,
                 100,32,105,110,32,97,108,108,32,109,97,110,97,103,101,100,32,
                 116,104,114,101,97,100,115,44,32,110,111,32,109,97,110,97,
                 103,101,100,32,116,104,114,101,97,100,115,32,99,97,110,32,
                 104,97,118,101,32,97,110,121,32,114,101,102,101,114,101,110,
                 99,101,115,32,116,111,32,116,104,101,32,100,97,116,97,32,115,
                 116,114,117,99,116,117,114,101]}],
              0,false},
             {text,[3,42,68,42]},
             {sep,
              [{text,
                "ยฟ. This could for example have been achieved by using reference counting, but the cache line containing the reference counter would in this case be ping ponged between all processors accessing"}],
              0,false},
             {text,[3,42,68,42]},
             {sep,
              [{text,
                [16,97,116,32,101,118,101,114,121,32,97,99,99,101,115,115,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [563,66,121,32,98,101,105,110,103,32,97,98,108,101,32,116,111,
               32,100,101,116,101,114,109,105,110,101,32,119,104,101,110,32,
               116,104,101,32,115,101,99,111,110,100,32,101,118,101,110,116,
               32,104,97,115,32,111,99,99,117,114,114,101,100,32,105,116,32,
               105,115,32,113,117,105,116,101,32,101,97,115,121,32,116,111,32,
               100,111,32,99,111,109,112,108,101,120,32,109,111,100,105,102,
               105,99,97,116,105,111,110,115,32,111,102,32,109,101,109,111,
               114,121,32,116,104,97,116,32,110,101,101,100,115,32,116,111,32,
               98,101,32,115,101,101,110,32,99,111,110,115,105,115,116,101,
               110,116,108,121,32,98,121,32,111,116,104,101,114,32,116,104,
               114,101,97,100,115,32,119,105,116,104,111,117,116,32,104,97,
               118,105,110,103,32,116,111,32,114,101,115,111,114,116,32,116,
               111,32,108,111,99,107,105,110,103,46,32,66,121,32,100,111,105,
               110,103,32,116,104,101,32,109,111,100,105,102,105,99,97,116,
               105,111,110,115,44,32,116,104,101,110,32,105,115,115,117,105,
               110,103,32,97,32,102,117,108,108,32,109,101,109,111,114,121,32,
               98,97,114,114,105,101,114,44,32,116,104,101,110,32,119,97,105,
               116,32,117,110,116,105,108,32,116,104,101,32,115,101,99,111,
               110,100,32,101,118,101,110,116,32,104,97,115,32,111,99,99,117,
               114,114,101,100,32,105,110,32,97,108,108,32,109,97,110,97,103,
               101,100,32,116,104,114,101,97,100,115,44,32,97,110,100,32,116,
               104,101,110,32,112,117,98,108,105,115,104,32,116,104,101,32,
               109,111,100,105,102,105,99,97,116,105,111,110,115,44,32,119,
               101,32,107,110,111,119,32,116,104,97,116,32,97,108,108,32,109,
               97,110,97,103,101,100,32,116,104,114,101,97,100,115,32,114,101,
               97,100,105,110,103,32,116,104,105,115,32,109,101,109,111,114,
               121,32,119,105,108,108,32,103,101,116,32,97,32,99,111,110,115,
               105,115,116,101,110,116,32,118,105,101,119,32,111,102,32,116,
               104,101,32,109,111,100,105,102,105,99,97,116,105,111,110,115,
               46,32,77,97,110,97,103,101,100,32,116,104,114,101,97,100,115,
               32,114,101,97,100,105,110,103,32,116,104,105,115,32,119,105,
               108,108,32,110,111,116,32,104,97,118,101,32,116,111,32,105,115,
               115,117,101,32,97,110,121,32,101,120,116,114,97,32,109,101,109,
               111,114,121,32,98,97,114,114,105,101,114,115,32,97,116,32,97,
               108,108,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{text,
    "u<a name=\"Implementation-of-the-Thread-Progress-Functionality\">Implementation-of-the-Thread-Progress-Functionality</a>"},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"6## Implementation of the Thread Progress Functionality"},
      null},
     null}},
   {sep,
    [{text,
      "ยน<a name=\"Implementation-of-the-Thread-Progress-Functionality_Requirement-on-the-Implementation\">Implementation-of-the-Thread-Progress-Functionality_Requirement-on-the-Implementation</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"$## Requirement on the Implementation"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "รIn order to be able to determine when all managed threads have reached the states that we are interested in we need to communicate between all involved threads. We of course want to minimize this communication."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "รWe also want threads to be able to determine when thread progress has been made relatively fast. That is we need to have some balance between comunication overhead and time to complete the operation."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {sep,
    [{text,
      "}<a name=\"Implementation-of-the-Thread-Progress-Functionality_API\">Implementation-of-the-Thread-Progress-Functionality_API</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[6,35,35,32,65,80,73]},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "AI will only present the most important functions in the API here."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,".*ErtsThrPrgrVal erts_thr_progress_later(void)*"},
          {sep,
           [{text,
             "v- Initiation of the operation. The thread progress value returned can be used testing for completion of the operation."}],
           0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"7*int erts_thr_progress_has_reached(ErtsThrPrgrVal val)*"},
          {sep,
           [{text,
             "ยฅ- Returns a non zero value when we have reached the thread progress value passed as argument. That is, when a non zero value is returned the operation has completed."}],
           0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [19,87,104,101,110,32,97,32,116,104,114,101,97,100,32,99,97,
                108,108,115]}],
             0,false},
            {text,"$*my_val = erts_thr_progress_later()*"},
            {sep,[{text,"\rand waits for"}],0,false},
            {text,"'*erts_thr_progress_has_reached(my_val)*"},
            {sep,
             [{text,
               "Gto return a non zero value it knows that thread progress has been made."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [17,87,104,105,108,101,32,119,97,105,116,105,110,103,32,102,
                111,114]}],
             0,false},
            {text,"!*erts_thr_progress_has_reached()*"},
            {sep,
             [{text,
               [409,116,111,32,114,101,116,117,114,110,32,97,32,110,111,110,
                32,122,101,114,111,32,118,97,108,117,101,32,119,101,32,116,
                121,112,105,99,97,108,108,121,32,100,111,32,110,111,116,32,
                119,97,110,116,32,116,111,32,98,108,111,99,107,32,119,97,105,
                116,105,110,103,44,32,98,117,116,32,105,110,115,116,101,97,
                100,32,119,97,110,116,32,116,111,32,99,111,110,116,105,110,
                117,101,32,119,111,114,107,105,110,103,32,119,105,116,104,32,
                111,116,104,101,114,32,115,116,117,102,102,46,32,73,102,32,
                119,101,32,114,117,110,32,111,117,116,32,111,102,32,111,116,
                104,101,114,32,115,116,117,102,102,32,116,111,32,119,111,114,
                107,32,111,110,32,119,101,32,116,121,112,105,99,97,108,108,
                121,32,100,111,32,119,97,110,116,32,116,111,32,98,108,111,99,
                107,32,119,97,105,116,105,110,103,32,117,110,116,105,108,32,
                119,101,32,104,97,118,101,32,114,101,97,99,104,101,100,32,116,
                104,101,32,116,104,114,101,97,100,32,112,114,111,103,114,101,
                115,115,32,118,97,108,117,101,32,116,104,97,116,32,119,101,32,
                97,114,101,32,119,97,105,116,105,110,103,32,102,111,114,46,32,
                73,110,32,111,114,100,101,114,32,116,111,32,98,101,32,97,98,
                108,101,32,116,111,32,100,111,32,116,104,105,115,32,119,101,
                32,112,114,111,118,105,100,101,32,102,117,110,99,116,105,111,
                110,97,108,105,116,121,32,102,111,114,32,119,97,107,105,110,
                103,32,117,112,32,97,32,116,104,114,101,97,100,32,119,104,101,
                110,32,97,32,99,101,114,116,97,105,110,32,116,104,114,101,97,
                100,32,112,114,111,103,114,101,115,115,32,118,97,108,117,101,
                32,104,97,115,32,98,101,101,110,32,114,101,97,99,104,101,100,
                58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "L*void erts_thr_progress_wakeup(ErtsSchedulerData *esdp, ErtsThrPrgrVal val)*"},
         {sep,
          [{text,
            "Y- Request wake up. The calling thread will be woken when thread progress has reached val."}],
          0,false}],
        0,false}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "cManaged threads frequently need to update their thread progress by calling the following functions:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"7*int erts_thr_progress_update(ErtsSchedulerData *esdp)*"},
          {sep,
           [{text,
             "9- Update thread progress. If a non zero value is returned"}],
           0,false},
          {text,"#*erts_thr_progress_leader_update()*"},
          {sep,[{text,"(has to be called without any locks held."}],0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           ">*int erts_thr_progress_leader_update(ErtsSchedulerData *esdp)*"},
          {sep,[{text," - Leader update thread progress."}],0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"7Unmanaged threads can delay thread progress being made:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           "@*ErtsThrPrgrDelayHandle erts_thr_progress_unmanaged_delay(void)*"},
          {sep,
           [{text,
             [24,45,32,68,101,108,97,121,32,116,104,114,101,97,100,32,112,114,
              111,103,114,101,115,115,46]}],
           0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           "J*void erts_thr_progress_unmanaged_continue(ErtsThrPrgrDelayHandle handle)*"},
          {sep,
           [{text,
             [31,45,32,76,101,116,32,116,104,114,101,97,100,32,112,114,111,
              103,114,101,115,115,32,99,111,110,116,105,110,117,101,46]}],
           0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "vScheduler threads can schedule an operation to be executed by the scheduler itself when thread progress has been made:"}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "c*void erts_schedule_thr_prgr_later_op(void (*funcp)(void *), void *argp, ErtsThrPrgrLaterOp *memp)*"},
         {sep,
          [{text,
            [20,45,32,83,99,104,101,100,117,108,101,32,97,32,99,97,108,108,32,
             116,111]}],
          0,false},
         {text,[7,42,102,117,110,99,112,42]},
         {sep,[{text,"\n. The call"}],0,false},
         {text,[16,42,40,42,102,117,110,99,112,41,40,97,114,103,112,41,42]},
         {sep,
          [{text,
            "Ewill be executed when thread progress has been made since the call to"}],
          0,false},
         {text,"#*erts_schedule_thr_prgr_later_op()*"},
         {sep,[{text,"\twas made."}],0,false}],
        0,false}],
      0,false}],
    0,false},
   {sep,
    [{text,
      [147,60,97,32,110,97,109,101,61,34,73,109,112,108,101,109,101,110,116,
       97,116,105,111,110,45,111,102,45,116,104,101,45,84,104,114,101,97,100,
       45,80,114,111,103,114,101,115,115,45,70,117,110,99,116,105,111,110,97,
       108,105,116,121,95,73,109,112,108,101,109,101,110,116,97,116,105,111,
       110,34,62,73,109,112,108,101,109,101,110,116,97,116,105,111,110,45,111,
       102,45,116,104,101,45,84,104,114,101,97,100,45,80,114,111,103,114,101,
       115,115,45,70,117,110,99,116,105,111,110,97,108,105,116,121,95,73,109,
       112,108,101,109,101,110,116,97,116,105,111,110,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [17,35,35,32,73,109,112,108,101,109,101,110,116,97,116,105,111,110]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [131,73,110,32,111,114,100,101,114,32,116,111,32,100,101,116,
                101,114,109,105,110,101,32,119,104,101,110,32,116,104,101,32,
                101,118,101,110,116,115,32,104,97,115,32,104,97,112,112,101,
                110,101,100,32,119,101,32,117,115,101,32,97,32,103,108,111,98,
                97,108,32,99,111,117,110,116,101,114,32,116,104,97,116,32,105,
                115,32,105,110,99,114,101,109,101,110,116,101,100,32,119,104,
                101,110,32,97,108,108,32,109,97,110,97,103,101,100,32,116,104,
                114,101,97,100,115,32,104,97,118,101,32,99,97,108,108,101,
                100]}],
             0,false},
            {text,
             [28,42,101,114,116,115,95,116,104,114,95,112,114,111,103,114,101,
              115,115,95,117,112,100,97,116,101,40,41,42]},
            {sep,[{text,[3,40,111,114]}],0,false},
            {text,"#*erts_thr_progress_leader_update()*"},
            {sep,
             [{text,
               "ร). This could naively be implemented using a \"thread confirmed\" counter. This would however cause an explosion of communication where all involved processors would need to communicate with each other at each update."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [560,73,110,115,116,101,97,100,32,111,102,32,99,111,110,102,
                105,114,109,105,110,103,32,97,116,32,97,32,103,108,111,98,97,
                108,32,108,111,99,97,116,105,111,110,32,101,97,99,104,32,116,
                104,114,101,97,100,32,99,111,110,102,105,114,109,115,32,116,
                104,97,116,32,105,116,32,97,99,99,101,112,116,115,32,105,110,
                32,105,110,99,114,101,109,101,110,116,32,111,102,32,116,104,
                101,32,103,108,111,98,97,108,32,99,111,117,110,116,101,114,32,
                105,110,32,105,116,115,32,111,119,110,32,99,97,99,104,101,32,
                108,105,110,101,46,32,84,104,101,115,101,32,99,111,110,102,
                105,114,109,97,116,105,111,110,32,99,97,99,104,101,32,108,105,
                110,101,115,32,97,114,101,32,108,111,99,97,116,101,100,32,105,
                110,32,115,101,113,117,101,110,99,101,32,105,110,32,97,110,32,
                97,114,114,97,121,44,32,97,110,100,32,101,97,99,104,32,99,111,
                110,102,105,114,109,97,116,105,111,110,32,99,97,99,104,101,32,
                108,105,110,101,32,119,105,108,108,32,111,110,108,121,32,98,
                101,32,119,114,105,116,116,101,110,32,98,121,32,111,110,101,
                32,97,110,100,32,111,110,108,121,32,111,110,101,32,116,104,
                114,101,97,100,46,32,79,110,101,32,111,102,32,116,104,101,32,
                109,97,110,97,103,101,100,32,116,104,114,101,97,100,115,32,97,
                108,119,97,121,115,32,104,97,118,101,32,116,104,101,32,108,
                101,97,100,101,114,32,114,101,115,112,111,110,115,105,98,105,
                108,105,116,121,46,32,84,104,105,115,32,114,101,115,112,111,
                110,115,105,98,105,108,105,116,121,32,109,97,121,32,106,117,
                109,112,32,98,101,116,119,101,101,110,32,116,104,114,101,97,
                100,115,44,32,98,117,116,32,97,115,32,108,111,110,103,32,97,
                115,32,116,104,101,114,101,32,97,114,101,32,115,111,109,101,
                32,97,99,116,105,118,105,116,121,32,105,110,32,116,104,101,32,
                115,121,115,116,101,109,32,97,108,119,97,121,115,32,111,110,
                101,32,111,102,32,116,104,101,109,32,119,105,108,108,32,104,
                97,118,101,32,116,104,101,32,108,101,97,100,101,114,32,114,
                101,115,112,111,110,115,105,98,105,108,105,116,121,46,32,84,
                104,101,32,116,104,114,101,97,100,32,119,105,116,104,32,116,
                104,101,32,108,101,97,100,101,114,32,114,101,115,112,111,110,
                115,105,98,105,108,105,116,121,32,119,105,108,108,32,99,97,
                108,108]}],
             0,false},
            {text,"#*erts_thr_progress_leader_update()*"},
            {sep,
             [{text,
               "รwhich will check that all other threads have confirmed an increment of the global counter before doing the increment of the global counter. The leader thread is the only thread reading the confirmation cache lines."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [589,68,111,105,110,103,32,105,116,32,116,104,105,115,32,119,97,
              121,32,119,101,32,119,105,108,108,32,103,101,116,32,97,32,99,
              111,109,109,117,110,105,99,97,116,105,111,110,32,112,97,116,116,
              101,114,110,32,111,102,32,105,110,102,111,114,109,97,116,105,
              111,110,32,103,111,105,110,103,32,102,114,111,109,32,116,104,
              101,32,108,101,97,100,101,114,32,116,104,114,101,97,100,32,111,
              117,116,32,116,111,32,97,108,108,32,111,116,104,101,114,32,109,
              97,110,97,103,101,100,32,116,104,114,101,97,100,115,32,97,110,
              100,32,116,104,101,110,32,98,97,99,107,32,102,114,111,109,32,
              116,104,101,32,111,116,104,101,114,32,116,104,114,101,97,100,
              115,32,116,111,32,116,104,101,32,108,101,97,100,101,114,32,116,
              104,114,101,97,100,46,32,84,104,105,115,32,115,105,110,99,101,
              32,111,110,108,121,32,116,104,101,32,108,101,97,100,101,114,32,
              116,104,114,101,97,100,32,119,105,108,108,32,119,114,105,116,
              101,32,116,111,32,116,104,101,32,103,108,111,98,97,108,32,99,
              111,117,110,116,101,114,32,97,110,100,32,97,108,108,32,111,116,
              104,101,114,32,116,104,114,101,97,100,115,32,119,105,108,108,32,
              111,110,108,121,32,114,101,97,100,32,105,116,44,32,97,110,100,
              32,115,105,110,99,101,32,101,97,99,104,32,99,111,110,102,105,
              114,109,97,116,105,111,110,32,99,97,99,104,101,32,108,105,110,
              101,115,32,119,105,108,108,32,111,110,108,121,32,98,101,32,119,
              114,105,116,116,101,110,32,98,121,32,111,110,101,32,115,112,101,
              99,105,102,105,99,32,116,104,114,101,97,100,32,97,110,100,32,
              111,110,108,121,32,114,101,97,100,32,98,121,32,116,104,101,32,
              108,101,97,100,101,114,32,116,104,114,101,97,100,46,32,87,104,
              101,110,32,101,97,99,104,32,109,97,110,97,103,101,100,32,116,
              104,114,101,97,100,32,105,115,32,100,105,115,116,114,105,98,117,
              116,101,100,32,111,118,101,114,32,100,105,102,102,101,114,101,
              110,116,32,112,114,111,99,101,115,115,111,114,115,44,32,116,104,
              101,32,99,111,109,109,117,110,105,99,97,116,105,111,110,32,98,
              101,116,119,101,101,110,32,112,114,111,99,101,115,115,111,114,
              115,32,119,105,108,108,32,98,101,32,97,32,114,101,102,108,101,
              99,116,105,111,110,32,111,102,32,116,104,105,115,32,99,111,109,
              109,117,110,105,99,97,116,105,111,110,32,112,97,116,116,101,114,
              110,32,98,101,116,119,101,101,110,32,116,104,114,101,97,100,115,
              46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,84,104,101,32,118,97,108,117,101,32,114,101,116,117,114,
                110,101,100,32,102,114,111,109]}],
             0,false},
            {text,"\e*erts_thr_progress_later()*"},
            {sep,
             [{text,
               "รequals the, by this thread, latest confirmed value plus two. The global value may be latest confirmed value or latest confirmed value minus one. In order to be certain that all other managed threads actually will call"}],
             0,false},
            {text,
             [28,42,101,114,116,115,95,116,104,114,95,112,114,111,103,114,101,
              115,115,95,117,112,100,97,116,101,40,41,42]},
            {sep,
             [{text,"5at least once before we reach the value returned from"}],
             0,false},
            {text,"\e*erts_thr_progress_later()*"},
            {sep,
             [{text,
               [155,44,32,116,104,101,32,103,108,111,98,97,108,32,99,111,117,
                110,116,101,114,32,112,108,117,115,32,111,110,101,32,105,115,
                32,110,111,116,32,101,110,111,117,103,104,46,32,84,104,105,
                115,32,115,105,110,99,101,32,97,108,108,32,111,116,104,101,
                114,32,116,104,114,101,97,100,115,32,109,97,121,32,97,108,114,
                101,97,100,121,32,104,97,118,101,32,99,111,110,102,105,114,
                109,101,100,32,99,117,114,114,101,110,116,32,103,108,111,98,
                97,108,32,118,97,108,117,101,32,112,108,117,115,32,111,110,
                101,32,97,116,32,116,104,101,32,116,105,109,101,32,119,104,
                101,110,32,119,101,32,99,97,108,108]}],
             0,false},
            {text,"\e*erts_thr_progress_later()*"},
            {sep,
             [{text,
               "W. They are however guaranteed not to have confirmed global value plus two at this time."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [277,84,104,101,32,97,98,111,118,101,32,100,101,115,99,114,105,
                98,101,100,32,105,109,112,108,101,109,101,110,116,97,116,105,
                111,110,32,109,111,114,101,32,111,114,32,108,101,115,115,32,
                109,105,110,105,109,105,122,101,115,32,116,104,101,32,99,111,
                109,117,110,105,99,97,116,105,111,110,32,110,101,101,100,101,
                100,32,98,101,102,111,114,101,32,119,101,32,99,97,110,32,105,
                110,99,114,101,109,101,110,116,32,116,104,101,32,103,108,111,
                98,97,108,32,99,111,117,110,116,101,114,46,32,84,104,101,32,
                97,109,111,117,110,116,32,111,102,32,99,111,109,109,117,110,
                105,99,97,116,105,111,110,32,105,110,32,116,104,101,32,115,
                121,115,116,101,109,32,100,117,101,32,116,111,32,116,104,101,
                32,116,104,114,101,97,100,32,112,114,111,103,114,101,115,115,
                32,102,117,110,99,116,105,111,110,97,108,105,116,121,32,104,
                111,119,101,118,101,114,32,97,108,115,111,32,100,101,112,101,
                110,100,32,111,110,32,116,104,101,32,102,114,101,113,117,101,
                110,99,121,32,119,105,116,104,32,119,104,105,99,104,32,109,97,
                110,97,103,101,100,32,116,104,114,101,97,100,115,32,99,97,108,
                108]}],
             0,false},
            {text,
             [28,42,101,114,116,115,95,116,104,114,95,112,114,111,103,114,101,
              115,115,95,117,112,100,97,116,101,40,41,42]},
            {sep,[{text,"#. Today each scheduler thread calls"}],0,false},
            {text,
             [28,42,101,114,116,115,95,116,104,114,95,112,114,111,103,114,101,
              115,115,95,117,112,100,97,116,101,40,41,42]},
            {sep,
             [{text,
               [157,109,111,114,101,32,111,114,32,108,101,115,115,32,101,97,
                99,104,32,116,105,109,101,32,97,110,32,69,114,108,97,110,103,
                32,112,114,111,99,101,115,115,32,105,115,32,115,99,104,101,
                100,117,108,101,100,32,111,117,116,46,32,79,110,101,32,119,97,
                121,32,111,102,32,102,117,114,116,104,101,114,32,114,101,100,
                117,99,105,110,103,32,99,111,109,109,117,110,105,99,97,116,
                105,111,110,32,100,117,101,32,116,111,32,116,104,101,32,116,
                104,114,101,97,100,32,112,114,111,103,114,101,115,115,32,102,
                117,110,99,116,105,111,110,97,108,105,116,121,32,105,115,32,
                116,111,32,111,110,108,121,32,99,97,108,108]}],
             0,false},
            {text,
             [28,42,101,114,116,115,95,116,104,114,95,112,114,111,103,114,101,
              115,115,95,117,112,100,97,116,101,40,41,42]},
            {sep,
             [{text,
               "รปevery second, or third time an Erlang process is scheduled out, or even less frequently than that. However, by doing updates of thread progress less frequently all operations depending on the thread progress functionality will also take a longer time."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        "รฏ<a name=\"Implementation-of-the-Thread-Progress-Functionality_Implementation_Delay-of-Thread-Progress-by-Unmanaged-Threads\">Implementation-of-the-Thread-Progress-Functionality_Implementation_Delay-of-Thread-Progress-by-Unmanaged-Threads</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,"0## Delay of Thread Progress by Unmanaged Threads"},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "nIn order to implement delay of thread progress from unmanaged threads we use two reference counters. One being"}],
               0,false},
              {text,"\t*current*"},
              {sep,[{text,"\rand one being"}],0,false},
              {text,"\t*waiting*"},
              {sep,
               [{text,
                 "G. When an unmanaged thread wants to delay thread progress it increments"}],
               0,false},
              {text,"\t*current*"},
              {sep,
               [{text,
                 "รand gets a handle back to the reference counter it incremented. When it later wants to enable continuation of thread progress it uses the handle to decrement the reference counter it previously incremented."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "eWhen the leader threads is about to increment the global thread progress counter it verifies that the"}],
               0,false},
              {text,"\t*waiting*"},
              {sep,
               [{text,
                 "ยฎcounter is zero before doing so. If not zero, the leader isn't allowed to increment the global counter, and needs to wait before it can do this. When it is zero, it swaps the"}],
               0,false},
              {text,"\t*waiting*"},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,"\t*current*"},
              {sep,
               [{text,
                 "Bcounters before increasing the global counter. From now on the new"}],
               0,false},
              {text,"\t*waiting*"},
              {sep,
               [{text,
                 "รถcounter will decrease, so that it eventually will reach zero, making it possible to increment the global counter the next time. If we only used one reference counter it would potentially be held above zero for ever by different unmanaged threads."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"&When an unmanaged thread increment the"}],0,false},
              {text,"\t*current*"},
              {sep,
               [{text,
                 [462,99,111,117,110,116,101,114,32,105,116,32,119,105,108,
                  108,32,110,111,116,32,112,114,101,118,101,110,116,32,116,
                  104,101,32,110,101,120,116,32,105,110,99,114,101,109,101,
                  110,116,32,111,102,32,116,104,101,32,103,108,111,98,97,108,
                  32,99,111,117,110,116,101,114,44,32,98,117,116,32,105,110,
                  115,116,101,97,100,32,116,104,101,32,105,110,99,114,101,109,
                  101,110,116,32,97,102,116,101,114,32,116,104,97,116,46,32,
                  84,104,105,115,32,105,115,32,115,117,102,102,105,99,105,101,
                  110,116,32,115,105,110,99,101,32,116,104,101,32,103,108,111,
                  98,97,108,32,99,111,117,110,116,101,114,32,110,101,101,100,
                  115,32,116,111,32,98,101,32,105,110,99,114,101,109,101,110,
                  116,101,100,32,116,119,111,32,116,105,109,101,115,32,98,101,
                  102,111,114,101,32,116,104,114,101,97,100,32,112,114,111,
                  103,114,101,115,115,32,104,97,115,32,98,101,101,110,32,109,
                  97,100,101,46,32,73,116,32,105,115,32,97,108,115,111,32,100,
                  101,115,105,114,97,98,108,101,32,110,111,116,32,116,111,32,
                  112,114,101,118,101,110,116,32,116,104,101,32,102,105,114,
                  115,116,32,105,110,99,114,101,109,101,110,116,44,32,115,105,
                  110,99,101,32,116,104,101,32,108,105,107,101,108,105,104,
                  111,111,100,32,105,110,99,114,101,97,115,101,115,32,116,104,
                  97,116,32,116,104,101,32,100,101,108,97,121,32,105,115,32,
                  119,105,116,104,100,114,97,119,110,32,98,101,102,111,114,
                  101,32,97,110,121,32,105,110,99,114,101,109,101,110,116,32,
                  111,102,32,116,104,101,32,103,108,111,98,97,108,32,99,111,
                  117,110,116,101,114,32,105,115,32,100,101,108,97,121,101,
                  100,46,32,84,104,97,116,32,105,115,44,32,116,104,101,32,111,
                  112,101,114,97,116,105,111,110,32,119,105,108,108,32,99,97,
                  117,115,101,32,97,115,32,108,105,116,116,108,101,32,100,105,
                  115,114,117,112,116,105,111,110,32,97,115,32,112,111,115,
                  115,105,98,108,101,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [381,72,111,119,101,118,101,114,44,32,116,104,105,115,32,102,
                101,97,116,117,114,101,32,111,102,32,100,101,108,97,121,105,
                110,103,32,116,104,114,101,97,100,32,112,114,111,103,114,101,
                115,115,32,102,114,111,109,32,117,110,109,97,110,97,103,101,
                100,32,116,104,114,101,97,100,115,32,115,104,111,117,108,100,
                32,112,114,101,102,101,114,97,98,108,121,32,98,101,32,117,115,
                101,100,32,97,115,32,108,105,116,116,108,101,32,97,115,32,112,
                111,115,115,105,98,108,101,44,32,115,105,110,99,101,32,104,
                101,97,118,121,32,117,115,101,32,111,102,32,105,116,32,119,
                105,108,108,32,99,97,117,115,101,32,99,111,110,116,101,110,
                116,105,111,110,32,111,110,32,116,104,101,32,114,101,102,101,
                114,101,110,99,101,32,99,111,117,110,116,101,114,32,99,97,99,
                104,101,32,108,105,110,101,115,46,32,84,104,101,32,102,117,
                110,99,116,105,111,110,97,108,105,116,121,32,105,115,32,104,
                111,119,101,118,101,114,32,118,101,114,121,32,117,115,101,102,
                117,108,32,105,110,32,99,111,100,101,32,119,104,105,99,104,32,
                110,111,114,109,97,108,108,121,32,111,110,108,121,32,101,120,
                101,99,117,116,101,115,32,105,110,32,109,97,110,97,103,101,
                100,32,116,104,114,101,97,100,115,44,32,98,117,116,32,119,104,
                105,99,104,32,109,97,121,32,117,110,100,101,114,32,115,111,
                109,101,32,105,110,102,114,101,113,117,101,110,116,32,99,105,
                114,99,117,109,115,116,97,110,99,101,115,32,98,101,32,101,120,
                101,99,117,116,101,100,32,105,110,32,111,116,104,101,114,32,
                116,104,114,101,97,100,115,46]}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {sep,
      [{text,
        "ยฅ<a name=\"Implementation-of-the-Thread-Progress-Functionality_Implementation_Overhead\">Implementation-of-the-Thread-Progress-Functionality_Implementation_Overhead</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\v## Overhead"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [666,84,104,101,32,111,118,101,114,104,101,97,100,32,99,97,117,
                115,101,100,32,98,121,32,116,104,101,32,116,104,114,101,97,
                100,32,112,114,111,103,114,101,115,115,32,102,117,110,99,116,
                105,111,110,97,108,105,116,121,32,105,115,32,109,111,114,101,
                32,111,114,32,108,101,115,115,32,102,105,120,101,100,32,117,
                115,105,110,103,32,116,104,101,32,115,97,109,101,32,97,109,
                111,117,110,116,32,111,102,32,115,99,104,101,100,117,108,101,
                114,115,32,114,101,103,97,114,100,108,101,115,115,32,111,102,
                32,116,104,101,32,110,117,109,98,101,114,32,111,102,32,117,
                115,101,115,32,111,102,32,116,104,101,32,102,117,110,99,116,
                105,111,110,97,108,105,116,121,46,32,65,108,114,101,97,100,
                121,32,116,111,100,97,121,32,113,117,105,116,101,32,97,32,108,
                111,116,32,111,102,32,102,117,110,99,116,105,111,110,97,108,
                105,116,121,32,117,115,101,32,105,116,44,32,97,110,100,32,119,
                101,32,112,108,97,110,32,116,111,32,117,115,101,32,105,116,32,
                101,118,101,110,32,109,111,114,101,46,32,87,104,101,110,32,
                114,101,119,114,105,116,105,110,103,32,111,108,100,32,105,109,
                112,108,101,109,101,110,116,97,116,105,111,110,115,32,111,102,
                32,69,82,84,83,32,105,110,116,101,114,110,97,108,32,102,117,
                110,99,116,105,111,110,97,108,105,116,121,32,116,111,32,117,
                115,101,32,116,104,101,32,116,104,114,101,97,100,32,112,114,
                111,103,114,101,115,115,32,102,117,110,99,116,105,111,110,97,
                108,105,116,121,44,32,116,104,105,115,32,105,109,112,108,105,
                101,115,32,114,101,109,111,118,105,110,103,32,99,111,109,109,
                117,110,105,99,97,116,105,111,110,32,105,110,32,116,104,101,
                32,111,108,100,32,105,109,112,108,101,109,101,110,116,97,116,
                105,111,110,46,32,79,116,104,101,114,119,105,115,101,32,105,
                116,32,105,115,32,115,105,109,112,108,121,32,110,111,32,112,
                111,105,110,116,32,114,101,119,114,105,116,105,110,103,32,116,
                104,101,32,111,108,100,32,105,109,112,108,101,109,101,110,116,
                97,116,105,111,110,32,116,111,32,117,115,101,32,116,104,101,
                32,116,104,114,101,97,100,32,112,114,111,103,114,101,115,115,
                32,102,117,110,99,116,105,111,110,97,108,105,116,121,46,32,83,
                105,110,99,101,32,116,104,101,32,116,104,114,101,97,100,32,
                112,114,111,103,114,101,115,115,32,111,118,101,114,104,101,97,
                100,32,105,115,32,109,111,114,101,32,111,114,32,108,101,115,
                115,32,102,105,120,101,100,44,32,116,104,101,32,114,101,119,
                114,105,116,101,32,119,105,108,108,32,99,97,117,115,101,32,97,
                32,114,101,100,117,99,116,105,111,110,32,111,102,32,116,104,
                101,32,116,111,116,97,108,32,99,111,109,109,117,110,105,99,97,
                116,105,111,110,32,105,110,32,116,104,101,32,115,121,115,116,
                101,109,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {sep,
        [{text,
          "ยป<a name=\"Implementation-of-the-Thread-Progress-Functionality_Implementation_Overhead_An-Example\">Implementation-of-the-Thread-Progress-Functionality_Implementation_Overhead_An-Example</a>"},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,{above,{text,"\r## An Example"},null},null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 [766,84,104,101,32,109,97,105,110,32,115,116,114,117,99,116,
                  117,114,101,32,111,102,32,97,110,32,69,84,83,32,116,97,98,
                  108,101,32,119,97,115,32,111,114,105,103,105,110,97,108,108,
                  121,32,109,97,110,97,103,101,100,32,117,115,105,110,103,32,
                  114,101,102,101,114,101,110,99,101,32,99,111,117,110,116,
                  105,110,103,46,32,65,108,114,101,97,100,121,32,97,32,108,
                  111,110,103,32,116,105,109,101,32,97,103,111,32,119,101,32,
                  114,101,112,108,97,99,101,100,32,116,104,105,115,32,115,116,
                  114,97,116,101,103,121,32,115,105,110,99,101,32,116,104,101,
                  32,114,101,102,101,114,101,110,99,101,32,99,111,117,110,116,
                  101,114,32,99,97,117,115,101,100,32,99,111,110,116,101,110,
                  116,105,111,110,32,111,110,32,101,97,99,104,32,97,99,99,101,
                  115,115,32,111,102,32,116,104,101,32,116,97,98,108,101,46,
                  32,84,104,101,32,115,111,108,117,116,105,111,110,32,117,115,
                  101,100,32,119,97,115,32,116,111,32,115,99,104,101,100,117,
                  108,101,32,34,99,111,110,102,105,114,109,32,100,101,108,101,
                  116,105,111,110,34,32,106,111,98,115,32,111,110,32,101,97,
                  99,104,32,115,99,104,101,100,117,108,101,114,32,105,110,32,
                  111,114,100,101,114,32,116,111,32,107,110,111,119,32,119,
                  104,101,110,32,105,116,32,119,97,115,32,115,97,102,101,32,
                  116,111,32,100,101,97,108,108,111,99,97,116,101,32,116,104,
                  101,32,116,97,98,108,101,32,115,116,114,117,99,116,117,114,
                  101,32,111,102,32,97,32,114,101,109,111,118,101,100,32,116,
                  97,98,108,101,46,32,84,104,101,115,101,32,99,111,110,102,
                  105,114,109,32,100,101,108,101,116,105,111,110,32,106,111,
                  98,115,32,110,101,101,100,101,100,32,116,111,32,98,101,32,
                  97,108,108,111,99,97,116,101,100,46,32,84,104,97,116,32,105,
                  115,44,32,119,101,32,104,97,100,32,116,111,32,97,108,108,
                  111,99,97,116,101,32,97,110,100,32,100,101,97,108,108,111,
                  99,97,116,101,32,97,115,32,109,97,110,121,32,98,108,111,99,
                  107,115,32,97,115,32,115,99,104,101,100,117,108,101,114,115,
                  32,105,110,32,111,114,100,101,114,32,116,111,32,100,101,97,
                  108,108,111,99,97,116,101,32,111,110,101,32,98,108,111,99,
                  107,46,32,84,104,105,115,32,111,102,32,99,111,117,114,115,
                  101,32,119,97,115,32,97,32,113,117,105,116,101,32,97,110,32,
                  101,120,112,101,110,115,105,118,101,32,111,112,101,114,97,
                  116,105,111,110,44,32,98,117,116,32,119,101,32,111,110,108,
                  121,32,110,101,101,100,101,100,32,116,111,32,100,111,32,116,
                  104,105,115,32,111,110,99,101,32,119,104,101,110,32,114,101,
                  109,111,118,105,110,103,32,97,32,116,97,98,108,101,46,32,73,
                  116,32,119,97,115,32,109,111,114,101,32,105,109,112,111,114,
                  116,97,110,116,32,116,111,32,103,101,116,32,114,105,100,32,
                  111,102,32,116,104,101,32,99,111,110,116,101,110,116,105,
                  111,110,32,111,110,32,116,104,101,32,114,101,102,101,114,
                  101,110,99,101,32,99,111,117,110,116,101,114,32,119,104,105,
                  99,104,32,119,97,115,32,112,114,101,115,101,110,116,32,111,
                  110,32,101,118,101,114,121,32,111,112,101,114,97,116,105,
                  111,110,32,111,110,32,116,104,101,32,116,97,98,108,101,46]}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 [398,87,104,101,110,32,116,104,101,32,116,104,114,101,97,100,
                  32,112,114,111,103,114,101,115,115,32,102,117,110,99,116,
                  105,111,110,97,108,105,116,121,32,104,97,100,32,98,101,101,
                  110,32,105,110,116,114,111,100,117,99,101,100,44,32,119,101,
                  32,99,111,117,108,100,32,114,101,109,111,118,101,32,116,104,
                  101,32,99,111,100,101,32,105,109,112,108,101,109,101,110,
                  116,105,110,103,32,116,104,101,32,34,99,111,110,102,105,114,
                  109,32,100,101,108,101,116,105,111,110,34,32,106,111,98,115,
                  44,32,97,110,100,32,116,104,101,110,32,106,117,115,116,32,
                  115,99,104,101,100,117,108,101,32,97,32,116,104,114,101,97,
                  100,32,112,114,111,103,114,101,115,115,32,108,97,116,101,
                  114,32,111,112,101,114,97,116,105,111,110,32,119,104,105,99,
                  104,32,100,101,97,108,108,111,99,97,116,101,115,32,116,104,
                  101,32,115,116,114,117,99,116,117,114,101,46,32,66,101,115,
                  105,100,101,115,32,115,105,109,112,108,105,102,121,105,110,
                  103,32,116,104,101,32,99,111,100,101,32,97,32,108,111,116,
                  44,32,119,101,32,103,111,116,32,97,110,32,105,110,99,114,
                  101,97,115,101,32,111,102,32,109,111,114,101,32,116,104,97,
                  110,32,49,48,37,32,111,102,32,116,104,101,32,110,117,109,98,
                  101,114,32,111,102,32,116,114,97,110,115,97,99,116,105,111,
                  110,115,32,112,101,114,32,115,101,99,111,110,100,32,104,97,
                  110,100,108,101,100,32,111,110,32,97,32,109,110,101,115,105,
                  97,32,116,112,99,98,32,98,101,110,99,104,109,97,114,107,32,
                  101,120,101,99,117,116,105,110,103,32,111,110,32,97,32,113,
                  117,97,100,32,99,111,114,101,32,109,97,99,104,105,110,101,
                  46]}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,false}],
    0,false}],
  0,false}}
