{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[6,35,32,122,108,105,98]},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[6,35,32,122,108,105,98]},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,[{sep,[{text,"\ezlib compression interface."}],0,false}],0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "2This module provides an API for the zlib library ("}],
                  0,false},
                 {text,"#[www.zlib.net](http://www.zlib.net)"},
                 {sep,
                  [{text,
                    "N). It is used to compress and decompress data. The data format is described by"}],
                  0,false},
                 {text,"0[RFC 1950](https://www.ietf.org/rfc/rfc1950.txt)"},
                 {sep,[{text,[1,44]}],0,false},
                 {text,"0[RFC 1951](https://www.ietf.org/rfc/rfc1951.txt)"},
                 {sep,[{text,[5,44,32,97,110,100]}],0,false},
                 {text,"0[RFC 1952](https://www.ietf.org/rfc/rfc1952.txt)"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,")A typical (compress) usage is as follows:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [349,10,90,32,61,32,122,108,105,98,58,111,112,101,110,40,41,
                   44,10,111,107,32,61,32,122,108,105,98,58,100,101,102,108,
                   97,116,101,73,110,105,116,40,90,44,100,101,102,97,117,108,
                   116,41,44,10,10,67,111,109,112,114,101,115,115,32,61,32,
                   102,117,110,40,101,110,100,95,111,102,95,100,97,116,97,44,
                   32,95,67,111,110,116,41,32,45,62,32,91,93,59,10,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,40,68,97,116,97,44,32,67,
                   111,110,116,41,32,45,62,10,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,91,122,108,105,98,58,100,101,102,108,
                   97,116,101,40,90,44,32,68,97,116,97,41,124,67,111,110,116,
                   40,82,101,97,100,40,41,44,67,111,110,116,41,93,10,32,32,32,
                   32,32,32,32,32,32,32,32,101,110,100,44,10,67,111,109,112,
                   114,101,115,115,101,100,32,61,32,67,111,109,112,114,101,
                   115,115,40,82,101,97,100,40,41,44,67,111,109,112,114,101,
                   115,115,41,44,10,76,97,115,116,32,61,32,122,108,105,98,58,
                   100,101,102,108,97,116,101,40,90,44,32,91,93,44,32,102,105,
                   110,105,115,104,41,44,10,111,107,32,61,32,122,108,105,98,
                   58,100,101,102,108,97,116,101,69,110,100,40,90,41,44,10,
                   122,108,105,98,58,99,108,111,115,101,40,90,41,44,10,108,
                   105,115,116,95,116,111,95,98,105,110,97,114,121,40,91,67,
                   111,109,112,114,101,115,115,101,100,124,76,97,115,116,93,
                   41]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [24,73,110,32,97,108,108,32,102,117,110,99,116,105,111,
                     110,115,32,101,114,114,111,114,115,44]}],
                  0,false},
                 {text,
                  [29,42,123,39,69,88,73,84,39,44,123,82,101,97,115,111,110,
                   44,66,97,99,107,116,114,97,99,101,125,125,42]},
                 {sep,
                  [{text,
                    [22,44,32,99,97,110,32,98,101,32,116,104,114,111,119,110,
                     44,32,119,104,101,114,101]}],
                  0,false},
                 {text,"\b*Reason*"},
                 {sep,
                  [{text,
                    [20,100,101,115,99,114,105,98,101,115,32,116,104,101,32,
                     101,114,114,111,114,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[7,84,121,112,105,99,97,108]}],0,false},
                 {text,"\t*Reasons*"},
                 {sep,[{text,[2,115,58]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {text,[4,60,100,108,62]},
            {nest,4,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,[{text,[6,98,97,100,97,114,103]}],0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {text,"\rBad argument."},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               [15,110,111,116,95,105,110,105,116,105,97,108,
                                105,122,101,100]}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {sep,
                            [{sep,
                              [{text,
                                "*The stream hasn't been initialized, eg. if"}],
                              0,false},
                             {text,"\rinflateInit/1"},
                             {sep,
                              [{text," wasn't called prior to a call to"}],
                              0,false},
                             {text,"\tinflate/2"},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,
                             [26,110,111,116,95,111,110,95,99,111,110,116,114,
                              111,108,108,105,110,103,95,112,114,111,99,101,
                              115,115]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {sep,
                          [{sep,
                            [{text,
                              "=The stream was used by a process that doesn't control it. Use"}],
                            0,false},
                           {text,
                            [25,115,101,116,95,99,111,110,116,114,111,108,108,
                             105,110,103,95,112,114,111,99,101,115,115,47,50]},
                           {sep,
                            [{text,
                              "8if you need to transfer a stream to a different process."}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,"\ndata_error"}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {text,
                        [25,84,104,101,32,100,97,116,97,32,99,111,110,116,97,
                         105,110,115,32,101,114,114,111,114,115,46]},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,"\fstream_error"}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {text,
                      [26,73,110,99,111,110,115,105,115,116,101,110,116,32,
                       115,116,114,101,97,109,32,115,116,97,116,101,46]},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [25,123,110,101,101,100,95,100,105,99,116,105,111,110,
                        97,114,121,44,65,100,108,101,114,51,50,125]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,[{text,[3,83,101,101]}],0,false},
                     {text,"\tinflate/2"},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}}}},
           {text,[5,60,47,100,108,62]}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# Data Types"},null},null}},
    {sep,
     [{sep,[{text,[7,122,115,116,114,101,97,109]}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [18,65,32,122,108,105,98,32,115,116,114,101,97,109,44,32,
                   115,101,101]}],
                0,false},
               {text,
                [17,91,111,112,101,110,47,48,93,40,35,111,112,101,110,47,48,
                 41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,[{sep,[{text,[6,122,108,101,118,101,108]}],0,false}],0,false},
    {sep,[{sep,[{text,[6,122,102,108,117,115,104]}],0,false}],0,false},
    {sep,[{sep,[{text,"\tzmemlevel"}],0,false}],0,false},
    {sep,[{sep,[{text,[7,122,109,101,116,104,111,100]}],0,false}],0,false},
    {sep,[{sep,[{text,"\tzstrategy"}],0,false}],0,false},
    {sep,
     [{sep,[{text,"\vzwindowbits"}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [21,78,111,114,109,97,108,108,121,32,105,110,32,116,104,101,
                   32,114,97,110,103,101]}],
                0,false},
               {text,[17,42,45,49,53,46,46,45,56,32,124,32,56,46,46,49,53,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## adler32/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [29,67,97,108,99,117,108,97,116,101,32,116,104,101,32,65,100,108,
            101,114,32,99,104,101,99,107,115,117,109,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"$Calculates the Adler-32 checksum for"}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "HThis function is deprecated and will be removed in a future release. Use"}],
                        0,false},
                       {text,
                        "1[erts/erlang#adler32/1](../erts/erlang#adler32/1)"},
                       {sep,[{text,"\binstead."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## adler32/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [29,67,97,108,99,117,108,97,116,101,32,116,104,101,32,65,100,108,
            101,114,32,99,104,101,99,107,115,117,109,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"'Updates a running Adler-32 checksum for"}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,[{text,[4,46,32,73,102]}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,
             [{text,
               "kis the empty binary or the empty iolist, this function returns the required initial value for the checksum."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bExample:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [140,10,67,114,99,32,61,32,108,105,115,116,115,58,102,111,108,
              100,108,40,102,117,110,40,68,97,116,97,44,67,114,99,48,41,32,45,
              62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,122,108,105,98,58,97,100,108,101,114,51,50,40,90,44,32,
              67,114,99,48,44,32,68,97,116,97,41,44,10,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,101,110,100,44,32,122,108,105,
              98,58,97,100,108,101,114,51,50,40,90,44,60,60,32,62,62,41,44,32,
              68,97,116,97,115,41]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "HThis function is deprecated and will be removed in a future release. Use"}],
                        0,false},
                       {text,
                        "1[erts/erlang#adler32/2](../erts/erlang#adler32/2)"},
                       {sep,[{text,"\binstead."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,97,100,108,101,114,51,50,95,99,111,109,98,105,110,101,47,
        52]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [31,67,111,109,98,105,110,101,32,116,119,111,32,65,100,108,101,114,
            45,51,50,32,99,104,101,99,107,115,117,109,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "FCombines two Adler-32 checksums into one. For two binaries or iolists,"}],
             0,false},
            {text,[7,42,68,97,116,97,49,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[7,42,68,97,116,97,50,42]},
            {sep,[{text,"\rwith sizes of"}],0,false},
            {text,[7,42,83,105,122,101,49,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[7,42,83,105,122,101,50,42]},
            {sep,
             [{text,
               [25,44,32,119,105,116,104,32,65,100,108,101,114,45,51,50,32,99,
                104,101,99,107,115,117,109,115]}],
             0,false},
            {text,"\b*Adler1*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\b*Adler2*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [25,84,104,105,115,32,102,117,110,99,116,105,111,110,32,114,
                101,116,117,114,110,115,32,116,104,101]}],
             0,false},
            {text,[7,42,65,100,108,101,114,42]},
            {sep,[{text,"\vchecksum of"}],0,false},
            {text,[15,42,91,68,97,116,97,49,44,68,97,116,97,50,93,42]},
            {sep,
             [{text,
               [16,44,32,114,101,113,117,105,114,105,110,103,32,111,110,108,
                121]}],
             0,false},
            {text,"\b*Adler1*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\b*Adler2*"},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,[7,42,83,105,122,101,50,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "HThis function is deprecated and will be removed in a future release. Use"}],
                        0,false},
                       {text,
                        "A[erts/erlang#adler32_combine/3](../erts/erlang#adler32_combine/3)"},
                       {sep,[{text,"\binstead."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## close/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[15,67,108,111,115,101,32,97,32,115,116,114,101,97,109,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [31,67,108,111,115,101,115,32,116,104,101,32,115,116,114,101,
                97,109,32,114,101,102,101,114,101,110,99,101,100,32,98,121]}],
             0,false},
            {text,[3,42,90,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## compress/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"/Compress data with standard zlib functionality."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"/Compresses data with zlib headers and checksum."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## crc32/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[16,71,101,116,32,99,117,114,114,101,110,116,32,67,82,67,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,")Gets the current calculated CRC checksum."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "HThis function is deprecated and will be removed in a future release. Use"}],
                        0,false},
                       {text,"-[erts/erlang#crc32/1](../erts/erlang#crc32/1)"},
                       {sep,
                        [{text,"!on the uncompressed data instead."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## crc32/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,67,97,108,99,117,108,97,116,101,32,67,82,67,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [31,67,97,108,99,117,108,97,116,101,115,32,116,104,101,32,67,
                82,67,32,99,104,101,99,107,115,117,109,32,102,111,114]}],
             0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "HThis function is deprecated and will be removed in a future release. Use"}],
                        0,false},
                       {text,"-[erts/erlang#crc32/1](../erts/erlang#crc32/1)"},
                       {sep,[{text,"\binstead."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## crc32/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,67,97,108,99,117,108,97,116,101,32,67,82,67,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\"Updates a running CRC checksum for"}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,[{text,[4,46,32,73,102]}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,
             [{text,
               "fis the empty binary or the empty iolist, this function returns the required initial value for the CRC."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bExample:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [136,10,67,114,99,32,61,32,108,105,115,116,115,58,102,111,108,
              100,108,40,102,117,110,40,68,97,116,97,44,67,114,99,48,41,32,45,
              62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,122,108,105,98,58,99,114,99,51,50,40,90,44,32,67,114,
              99,48,44,32,68,97,116,97,41,44,10,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,101,110,100,44,32,122,108,105,98,58,99,
              114,99,51,50,40,90,44,60,60,32,62,62,41,44,32,68,97,116,97,115,
              41]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "HThis function is deprecated and will be removed in a future release. Use"}],
                        0,false},
                       {text,"-[erts/erlang#crc32/2](../erts/erlang#crc32/2)"},
                       {sep,[{text,"\binstead."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[18,35,35,32,99,114,99,51,50,95,99,111,109,98,105,110,101,47,52]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [17,67,111,109,98,105,110,101,32,116,119,111,32,67,82,67,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ACombines two CRC checksums into one. For two binaries or iolists,"}],
             0,false},
            {text,[7,42,68,97,116,97,49,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[7,42,68,97,116,97,50,42]},
            {sep,[{text,"\rwith sizes of"}],0,false},
            {text,[7,42,83,105,122,101,49,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[7,42,83,105,122,101,50,42]},
            {sep,
             [{text,
               [20,44,32,119,105,116,104,32,67,82,67,32,99,104,101,99,107,115,
                117,109,115]}],
             0,false},
            {text,[6,42,67,82,67,49,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[6,42,67,82,67,50,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [25,84,104,105,115,32,102,117,110,99,116,105,111,110,32,114,
                101,116,117,114,110,115,32,116,104,101]}],
             0,false},
            {text,[5,42,67,82,67,42]},
            {sep,[{text,"\vchecksum of"}],0,false},
            {text,[15,42,91,68,97,116,97,49,44,68,97,116,97,50,93,42]},
            {sep,
             [{text,
               [16,44,32,114,101,113,117,105,114,105,110,103,32,111,110,108,
                121]}],
             0,false},
            {text,[6,42,67,82,67,49,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,[6,42,67,82,67,50,42]},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,[7,42,83,105,122,101,50,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "HThis function is deprecated and will be removed in a future release. Use"}],
                        0,false},
                       {text,
                        "=[erts/erlang#crc32_combine/3](../erts/erlang#crc32_combine/3)"},
                       {sep,[{text,"\binstead."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## deflate/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,67,111,109,112,114,101,115,115,32,100,97,116,97,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,83,97,109,101,32,97,115]}],0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,"\bdeflate("}],0,false},
                {sep,[{text,[1,90]}],0,false},
                {sep,[{text,[1,44]}],0,false},
                {sep,[{text,[4,68,97,116,97]}],0,false},
                {sep,[{text,[7,44,32,110,111,110,101,41]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## deflate/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,67,111,109,112,114,101,115,115,32,100,97,116,97,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ÂCompresses as much data as possible, and stops when the input buffer becomes empty. It can introduce some output latency (reading input without producing any output) except when forced to flush."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[7,42,70,108,117,115,104,42]},
            {sep,[{text,"\tis set to"}],0,false},
            {text,[6,42,115,121,110,99,42]},
            {sep,
             [{text,
               [264,44,32,97,108,108,32,112,101,110,100,105,110,103,32,111,
                117,116,112,117,116,32,105,115,32,102,108,117,115,104,101,100,
                32,116,111,32,116,104,101,32,111,117,116,112,117,116,32,98,
                117,102,102,101,114,32,97,110,100,32,116,104,101,32,111,117,
                116,112,117,116,32,105,115,32,97,108,105,103,110,101,100,32,
                111,110,32,97,32,98,121,116,101,32,98,111,117,110,100,97,114,
                121,44,32,115,111,32,116,104,97,116,32,116,104,101,32,100,101,
                99,111,109,112,114,101,115,115,111,114,32,99,97,110,32,103,
                101,116,32,97,108,108,32,105,110,112,117,116,32,100,97,116,97,
                32,97,118,97,105,108,97,98,108,101,32,115,111,32,102,97,114,
                46,32,70,108,117,115,104,105,110,103,32,99,97,110,32,100,101,
                103,114,97,100,101,32,99,111,109,112,114,101,115,115,105,111,
                110,32,102,111,114,32,115,111,109,101,32,99,111,109,112,114,
                101,115,115,105,111,110,32,97,108,103,111,114,105,116,104,109,
                115,59,32,116,104,117,115,44,32,117,115,101,32,105,116,32,111,
                110,108,121,32,119,104,101,110,32,110,101,99,101,115,115,97,
                114,121,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[7,42,70,108,117,115,104,42]},
            {sep,[{text,"\tis set to"}],0,false},
            {text,[6,42,102,117,108,108,42]},
            {sep,
             [{text,
               [31,44,32,97,108,108,32,111,117,116,112,117,116,32,105,115,32,
                102,108,117,115,104,101,100,32,97,115,32,119,105,116,104]}],
             0,false},
            {text,[6,42,115,121,110,99,42]},
            {sep,
             [{text,
               "©, and the compression state is reset so that decompression can restart from this point if previous compressed data has been damaged or if random access is desired. Using"}],
             0,false},
            {text,[6,42,102,117,108,108,42]},
            {sep,
             [{text,"0too often can seriously degrade the compression."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[7,42,70,108,117,115,104,42]},
            {sep,[{text,"\tis set to"}],0,false},
            {text,"\b*finish*"},
            {sep,
             [{text,
               "<, pending input is processed, pending output is flushed, and"}],
             0,false},
            {text,"\v*deflate/3*"},
            {sep,
             [{text,
               "Breturns. Afterwards the only possible operations on the stream are"}],
             0,false},
            {text,"![deflateReset/1](#deflateReset/1)"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,
             [29,91,100,101,102,108,97,116,101,69,110,100,47,49,93,40,35,100,
              101,102,108,97,116,101,69,110,100,47,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[7,42,70,108,117,115,104,42]},
            {sep,[{text,"\rcan be set to"}],0,false},
            {text,"\b*finish*"},
            {sep,
             [{text,
               [17,105,109,109,101,100,105,97,116,101,108,121,32,97,102,116,
                101,114]}],
             0,false},
            {text,
             [31,91,100,101,102,108,97,116,101,73,110,105,116,47,49,93,40,35,
              100,101,102,108,97,116,101,73,110,105,116,47,49,41]},
            {sep,
             [{text,"-if all compression is to be done in one step."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bExample:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [127,10,122,108,105,98,58,100,101,102,108,97,116,101,73,110,105,
              116,40,90,41,44,10,66,49,32,61,32,122,108,105,98,58,100,101,102,
              108,97,116,101,40,90,44,68,97,116,97,41,44,10,66,50,32,61,32,
              122,108,105,98,58,100,101,102,108,97,116,101,40,90,44,60,60,32,
              62,62,44,102,105,110,105,115,104,41,44,10,122,108,105,98,58,100,
              101,102,108,97,116,101,69,110,100,40,90,41,44,10,108,105,115,
              116,95,116,111,95,98,105,110,97,114,121,40,91,66,49,44,66,50,93,
              41]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,100,101,102,108,97,116,101,69,110,100,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,69,110,100,32,100,101,102,108,97,116,101,32,115,101,115,115,
            105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "UEnds the deflate session and cleans all data used. Notice that this function throws a"}],
             0,false},
            {text,"\f*data_error*"},
            {sep,
             [{text,
               [29,101,120,99,101,112,116,105,111,110,32,105,102,32,116,104,
                101,32,108,97,115,116,32,99,97,108,108,32,116,111]}],
             0,false},
            {text,
             [23,91,100,101,102,108,97,116,101,47,51,93,40,35,100,101,102,108,
              97,116,101,47,51,41]},
            {sep,
             [{text,
               [19,119,97,115,32,110,111,116,32,99,97,108,108,101,100,32,119,
                105,116,104]}],
             0,false},
            {text,[7,42,70,108,117,115,104,42]},
            {sep,[{text,[6,115,101,116,32,116,111]}],0,false},
            {text,"\b*finish*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,100,101,102,108,97,116,101,73,110,105,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"%Initialize a session for compression."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,83,97,109,101,32,97,115]}],0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   [17,122,108,105,98,58,100,101,102,108,97,116,101,73,110,
                    105,116,40]}],
                 0,false},
                {sep,[{text,[1,90]}],0,false},
                {sep,[{text,"\n, default)"}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,100,101,102,108,97,116,101,73,110,105,116,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"%Initialize a session for compression."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"*Initializes a zlib stream for compression."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[7,42,76,101,118,101,108,42]},
            {sep,
             [{text,")decides the compression level to be used:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,[3,48,32,40]}],0,false},
           {text,[6,42,110,111,110,101,42]},
           {sep,
            [{text,
              [23,41,44,32,103,105,118,101,115,32,110,111,32,99,111,109,112,
               114,101,115,115,105,111,110]}],
            0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,[3,49,32,40]}],0,false},
           {text,"\f*best_speed*"},
           {sep,
            [{text,
              [18,41,32,103,105,118,101,115,32,98,101,115,116,32,115,112,101,
               101,100]}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,[{text,[3,57,32,40]}],0,false},
          {text,
           [18,42,98,101,115,116,95,99,111,109,112,114,101,115,115,105,111,
            110,42]},
          {sep,
           [{text,
             [24,41,32,103,105,118,101,115,32,98,101,115,116,32,99,111,109,
              112,114,101,115,115,105,111,110]}],
           0,false}],
         0,false}],
       0,false}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,100,101,102,108,97,116,101,73,110,105,116,47,54]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"%Initialize a session for compression."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"(Initiates a zlib stream for compression."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{sep,[{text,[5,76,101,118,101,108]}],0,false}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {sep,
                       [{above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,
                                [25,67,111,109,112,114,101,115,115,105,111,
                                 110,32,108,101,118,101,108,32,116,111,32,117,
                                 115,101,58]}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{sep,[{text,[3,48,32,40]}],0,false},
                              {text,[4,110,111,110,101]},
                              {sep,
                               [{text,
                                 [23,41,44,32,103,105,118,101,115,32,110,111,
                                  32,99,111,109,112,114,101,115,115,105,111,
                                  110]}],
                               0,false}],
                             0,false}],
                           0,false},
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{sep,[{text,[3,49,32,40]}],0,false},
                              {text,"\nbest_speed"},
                              {sep,
                               [{text,
                                 [18,41,32,103,105,118,101,115,32,98,101,115,
                                  116,32,115,112,101,101,100]}],
                               0,false}],
                             0,false}],
                           0,false}},
                         {sep,
                          [{text,[1,42]},
                           {sep,
                            [{sep,[{text,[3,57,32,40]}],0,false},
                             {text,
                              [16,98,101,115,116,95,99,111,109,112,114,101,
                               115,115,105,111,110]},
                             {sep,
                              [{text,
                                [24,41,32,103,105,118,101,115,32,98,101,115,
                                 116,32,99,111,109,112,114,101,115,115,105,
                                 111,110]}],
                              0,false}],
                            0,false}],
                          0,false}}],
                       0,false},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{sep,[{text,[6,77,101,116,104,111,100]}],0,false}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "ACompression method to use, currently the only supported method is"}],
                            0,false},
                           {text,"\bdeflated"},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{sep,[{text,"\nWindowBits"}],0,false}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "ÏThe base two logarithm of the window size (the size of the history buffer). It is to be in the range 8 through 15. Larger values result in better compression at the expense of memory usage. Defaults to 15 if"}],
                            0,false},
                           {text,"\rdeflateInit/2"},
                           {sep,
                            [{text,
                              [19,105,115,32,117,115,101,100,46,32,65,32,110,
                               101,103,97,116,105,118,101]}],
                            0,false},
                           {sep,[{text,"\nWindowBits"}],0,false},
                           {sep,
                            [{text,
                              [138,118,97,108,117,101,32,115,117,112,112,114,
                               101,115,115,101,115,32,116,104,101,32,122,108,
                               105,98,32,104,101,97,100,101,114,32,40,97,110,
                               100,32,99,104,101,99,107,115,117,109,41,32,102,
                               114,111,109,32,116,104,101,32,115,116,114,101,
                               97,109,46,32,78,111,116,105,99,101,32,116,104,
                               97,116,32,116,104,101,32,122,108,105,98,32,115,
                               111,117,114,99,101,32,109,101,110,116,105,111,
                               110,115,32,116,104,105,115,32,111,110,108,121,
                               32,97,115,32,97,32,117,110,100,111,99,117,109,
                               101,110,116,101,100,32,102,101,97,116,117,114,
                               101,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "2Due to a known bug in the underlying zlib library,"}],
                              0,false},
                             {text,"\nWindowBits"},
                             {sep,
                              [{text,
                                "}values 8 and -8 do not work as expected. In zlib versions before 1.2.9 values 8 and -8 are automatically changed to 9 and -9."}],
                              0,false},
                             {text,
                              ",From zlib version 1.2.9 value -8 is rejected"},
                             {sep,
                              [{text,[7,99,97,117,115,105,110,103]}],
                              0,false},
                             {text,
                              [18,122,108,105,98,58,100,101,102,108,97,116,
                               101,73,110,105,116,47,54]},
                             {sep,
                              [{text,
                                [138,116,111,32,102,97,105,108,32,40,56,32,
                                 105,115,32,115,116,105,108,108,32,99,104,97,
                                 110,103,101,100,32,116,111,32,57,41,46,32,73,
                                 116,32,97,108,115,111,32,115,101,101,109,32,
                                 112,111,115,115,105,98,108,101,32,116,104,97,
                                 116,32,102,117,116,117,114,101,32,118,101,
                                 114,115,105,111,110,115,32,111,102,32,122,
                                 108,105,98,32,109,97,121,32,102,105,120,32,
                                 116,104,105,115,32,98,117,103,32,97,110,100,
                                 32,115,116,97,114,116,32,97,99,99,101,112,
                                 116,105,110,103,32,56,32,97,110,100,32,45,56,
                                 32,97,115,32,105,115,46]}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              "RConclusion: Avoid values 8 and -8 unless you know your zlib version supports them."}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{sep,[{text,"\bMemLevel"}],0,false}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "PSpecifies how much memory is to be allocated for the internal compression state:"}],
                        0,false},
                       {sep,[{text,"\bMemLevel"}],0,false},
                       {sep,
                        [{text,
                          "A=1 uses minimum memory but is slow and reduces compression ratio;"}],
                        0,false},
                       {sep,[{text,"\bMemLevel"}],0,false},
                       {sep,
                        [{text,
                          "8=9 uses maximum memory for optimal speed. Defaults to 8."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{sep,[{text,"\bStrategy"}],0,false}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        ":Tunes the compression algorithm. Use the following values:"}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,
                  {above,
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,[7,100,101,102,97,117,108,116]},
                       {sep,
                        [{text,
                          [15,102,111,114,32,110,111,114,109,97,108,32,100,97,
                           116,97]}],
                        0,false}],
                      0,false}],
                    0,false},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,"\bfiltered"},
                       {sep,
                        [{text,
                          ",for data produced by a filter (or predictor)"}],
                        0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,"\fhuffman_only"},
                      {sep,
                       [{text,
                         "0to force Huffman encoding only (no string match)"}],
                       0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,[3,114,108,101]},
                     {sep,
                      [{text,
                        "5to limit match distances to one (run-length encoding)"}],
                      0,false}],
                    0,false}],
                  0,false}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "ªFiltered data consists mostly of small values with a somewhat random distribution. In this case, the compression algorithm is tuned to compress them better. The effect of"}],
                        0,false},
                       {text,"\bfiltered"},
                       {sep,
                        [{text,
                          "]is to force more Huffman coding and less string matching; it is somewhat intermediate between"}],
                        0,false},
                       {text,[7,100,101,102,97,117,108,116]},
                       {sep,[{text,[3,97,110,100]}],0,false},
                       {text,"\fhuffman_only"},
                       {sep,[{text,[1,46]}],0,false},
                       {text,[3,114,108,101]},
                       {sep,
                        [{text,"#is designed to be almost as fast as"}],
                        0,false},
                       {text,"\fhuffman_only"},
                       {sep,
                        [{text,
                          "2, but gives better compression for PNG image data."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,[{text,"\bStrategy"}],0,false},
                       {sep,
                        [{text,
                          "yaffects only the compression ratio, but not the correctness of the compressed output even if it is not set appropriately."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [18,35,35,32,100,101,102,108,97,116,101,80,97,114,97,109,115,47,51]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Dynamicly update deflate parameters."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "YDynamically updates the compression level and compression strategy. The interpretation of"}],
             0,false},
            {text,[7,42,76,101,118,101,108,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\n*Strategy*"},
            {sep,[{text,"\bis as in"}],0,false},
            {text,
             [31,91,100,101,102,108,97,116,101,73,110,105,116,47,54,93,40,35,
              100,101,102,108,97,116,101,73,110,105,116,47,54,41]},
            {sep,
             [{text,
               [335,46,32,84,104,105,115,32,99,97,110,32,98,101,32,117,115,
                101,100,32,116,111,32,115,119,105,116,99,104,32,98,101,116,
                119,101,101,110,32,99,111,109,112,114,101,115,115,105,111,110,
                32,97,110,100,32,115,116,114,97,105,103,104,116,32,99,111,112,
                121,32,111,102,32,116,104,101,32,105,110,112,117,116,32,100,
                97,116,97,44,32,111,114,32,116,111,32,115,119,105,116,99,104,
                32,116,111,32,97,32,100,105,102,102,101,114,101,110,116,32,
                107,105,110,100,32,111,102,32,105,110,112,117,116,32,100,97,
                116,97,32,114,101,113,117,105,114,105,110,103,32,97,32,100,
                105,102,102,101,114,101,110,116,32,115,116,114,97,116,101,103,
                121,46,32,73,102,32,116,104,101,32,99,111,109,112,114,101,115,
                115,105,111,110,32,108,101,118,101,108,32,105,115,32,99,104,
                97,110,103,101,100,44,32,116,104,101,32,105,110,112,117,116,
                32,97,118,97,105,108,97,98,108,101,32,115,111,32,102,97,114,
                32,105,115,32,99,111,109,112,114,101,115,115,101,100,32,119,
                105,116,104,32,116,104,101,32,111,108,100,32,108,101,118,101,
                108,32,40,97,110,100,32,99,97,110,32,98,101,32,102,108,117,
                115,104,101,100,41,59,32,116,104,101,32,110,101,119,32,108,
                101,118,101,108,32,116,97,107,101,115,32,101,102,102,101,99,
                116,32,111,110,108,121,32,97,116,32,116,104,101,32,110,101,
                120,116,32,99,97,108,108,32,111,102]}],
             0,false},
            {text,
             [23,91,100,101,102,108,97,116,101,47,51,93,40,35,100,101,102,108,
              97,116,101,47,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [18,66,101,102,111,114,101,32,116,104,101,32,99,97,108,108,32,
                111,102]}],
             0,false},
            {text,[15,42,100,101,102,108,97,116,101,80,97,114,97,109,115,42]},
            {sep,
             [{text,"/, the stream state must be set as for a call of"}],
             0,false},
            {text,"\v*deflate/3*"},
            {sep,
             [{text,
               "I, as the currently available input may have to be compressed and flushed."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,100,101,102,108,97,116,101,82,101,115,101,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [26,82,101,115,101,116,32,116,104,101,32,100,101,102,108,97,116,
            101,32,115,101,115,115,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [29,91,100,101,102,108,97,116,101,69,110,100,47,49,93,40,35,100,
              101,102,108,97,116,101,69,110,100,47,49,41]},
            {sep,[{text,"\vfollowed by"}],0,false},
            {text,
             [31,91,100,101,102,108,97,116,101,73,110,105,116,47,49,93,40,35,
              100,101,102,108,97,116,101,73,110,105,116,47,49,41]},
            {sep,
             [{text,
               [140,44,32,98,117,116,32,100,111,101,115,32,110,111,116,32,102,
                114,101,101,32,97,110,100,32,114,101,97,108,108,111,99,97,116,
                101,32,97,108,108,32,116,104,101,32,105,110,116,101,114,110,
                97,108,32,99,111,109,112,114,101,115,115,105,111,110,32,115,
                116,97,116,101,46,32,84,104,101,32,115,116,114,101,97,109,32,
                107,101,101,112,115,32,116,104,101,32,115,97,109,101,32,99,
                111,109,112,114,101,115,115,105,111,110,32,108,101,118,101,
                108,32,97,110,100,32,97,110,121,32,111,116,104,101,114,32,97,
                116,116,114,105,98,117,116,101,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,100,101,102,108,97,116,101,83,101,116,68,105,99,116,105,
        111,110,97,114,121,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"&Initialize the compression dictionary."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "pInitializes the compression dictionary from the specified byte sequence without producing any compressed output."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".This function must be called immediately after"}],
             0,false},
            {text,
             [31,91,100,101,102,108,97,116,101,73,110,105,116,47,49,93,40,35,
              100,101,102,108,97,116,101,73,110,105,116,47,49,41]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"![deflateReset/1](#deflateReset/1)"},
            {sep,
             [{text,
               [20,44,32,98,101,102,111,114,101,32,97,110,121,32,99,97,108,
                108,32,111,102]}],
             0,false},
            {text,
             [23,91,100,101,102,108,97,116,101,47,51,93,40,35,100,101,102,108,
              97,116,101,47,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "AThe compressor and decompressor must use the same dictionary (see"}],
             0,false},
            {text,"1[inflateSetDictionary/2](#inflateSetDictionary/2)"},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"1The Adler checksum of the dictionary is returned."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,103,101,116,66,117,102,83,105,122,101,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [16,71,101,116,32,98,117,102,102,101,114,32,115,105,122,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,")Gets the size of the intermediate buffer."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "DThis function is deprecated and will be removed in a future release."}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## gunzip/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [31,85,110,99,111,109,112,114,101,115,115,32,100,97,116,97,32,119,
            105,116,104,32,103,122,32,104,101,97,100,101,114,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"/Uncompresses data with gz headers and checksum."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## gzip/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [29,67,111,109,112,114,101,115,115,32,100,97,116,97,32,119,105,116,
            104,32,103,122,32,104,101,97,100,101,114,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"-Compresses data with gz headers and checksum."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## inflate/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [16,68,101,99,111,109,112,114,101,115,115,32,100,97,116,97,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [23,91,105,110,102,108,97,116,101,47,51,93,40,35,105,110,102,108,
              97,116,101,47,51,41]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## inflate/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [16,68,101,99,111,109,112,114,101,115,115,32,100,97,116,97,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "yDecompresses as much data as possible. It can introduce some output latency (reading input without producing any output)."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"&Currently the only available option is"}],0,false},
            {text,"$*{exception_on_need_dict,boolean()}*"},
            {sep,
             [{text,
               [138,119,104,105,99,104,32,99,111,110,116,114,111,108,115,32,
                119,104,101,116,104,101,114,32,116,104,101,32,102,117,110,99,
                116,105,111,110,32,115,104,111,117,108,100,32,116,104,114,111,
                119,32,97,110,32,101,120,99,101,112,116,105,111,110,32,119,
                104,101,110,32,97,32,112,114,101,115,101,116,32,100,105,99,
                116,105,111,110,97,114,121,32,105,115,32,114,101,113,117,105,
                114,101,100,32,102,111,114,32,100,101,99,111,109,112,114,101,
                115,115,105,111,110,46,32,87,104,101,110,32,115,101,116,32,
                116,111,32,102,97,108,115,101,44,32,97]}],
             0,false},
            {text,
             [17,42,110,101,101,100,95,100,105,99,116,105,111,110,97,114,121,
              42]},
            {sep,[{text,"#tuple will be returned instead. See"}],0,false},
            {text,"1[inflateSetDictionary/2](#inflateSetDictionary/2)"},
            {sep,[{text,"\ffor details."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [23,84,104,105,115,32,111,112,116,105,111,110,32,
                           100,101,102,97,117,108,116,115,32,116,111]}],
                        0,false},
                       {text,[6,42,116,114,117,101,42]},
                       {sep,
                        [{text,
                          "©for backwards compatibility but we intend to remove the exception behavior in a future release. New code that needs to handle dictionaries manually should always specify"}],
                        0,false},
                       {text," *{exception_on_need_dict,false}*"},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,105,110,102,108,97,116,101,67,104,117,110,107,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [29,82,101,97,100,32,110,101,120,116,32,117,110,99,111,109,112,114,
            101,115,115,101,100,32,99,104,117,110,107,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "HThis function is deprecated and will be removed in a future release. Use"}],
                        0,false},
                       {text,
                        [31,91,115,97,102,101,73,110,102,108,97,116,101,47,50,
                         93,40,35,115,97,102,101,73,110,102,108,97,116,101,47,
                         50,41]},
                       {sep,[{text,"\binstead."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "9Reads the next chunk of uncompressed data, initialized by"}],
             0,false},
            {text,"![inflateChunk/2](#inflateChunk/2)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ":This function is to be repeatedly called, while it returns"}],
             0,false},
            {text,
             [22,42,123,109,111,114,101,44,32,68,101,99,111,109,112,114,101,
              115,115,101,100,125,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,105,110,102,108,97,116,101,67,104,117,110,107,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")Decompress data with limited output size."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "HThis function is deprecated and will be removed in a future release. Use"}],
                        0,false},
                       {text,
                        [31,91,115,97,102,101,73,110,102,108,97,116,101,47,50,
                         93,40,35,115,97,102,101,73,110,102,108,97,116,101,47,
                         50,41]},
                       {sep,[{text,"\binstead."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,76,105,107,101]}],0,false},
            {text,
             [23,91,105,110,102,108,97,116,101,47,50,93,40,35,105,110,102,108,
              97,116,101,47,50,41]},
            {sep,
             [{text,
               "N, but decompresses no more data than will fit in the buffer configured through"}],
             0,false},
            {text,
             [29,91,115,101,116,66,117,102,83,105,122,101,47,50,93,40,35,115,
              101,116,66,117,102,83,105,122,101,47,50,41]},
            {sep,
             [{text,
               [147,46,32,73,115,32,105,115,32,117,115,101,102,117,108,32,119,
                104,101,110,32,100,101,99,111,109,112,114,101,115,115,105,110,
                103,32,97,32,115,116,114,101,97,109,32,119,105,116,104,32,97,
                32,104,105,103,104,32,99,111,109,112,114,101,115,115,105,111,
                110,32,114,97,116,105,111,44,32,115,117,99,104,32,116,104,97,
                116,32,97,32,115,109,97,108,108,32,97,109,111,117,110,116,32,
                111,102,32,99,111,109,112,114,101,115,115,101,100,32,105,110,
                112,117,116,32,99,97,110,32,101,120,112,97,110,100,32,117,112,
                32,116,111,32,49,48,48,48,32,116,105,109,101,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [21,84,104,105,115,32,102,117,110,99,116,105,111,110,32,114,
                101,116,117,114,110,115]}],
             0,false},
            {text,
             [22,42,123,109,111,114,101,44,32,68,101,99,111,109,112,114,101,
              115,115,101,100,125,42]},
            {sep,
             [{text,"*, when there is more output available, and"}],
             0,false},
            {text,"![inflateChunk/1](#inflateChunk/1)"},
            {sep,
             [{text,
               [25,105,115,32,116,111,32,98,101,32,117,115,101,100,32,116,111,
                32,114,101,97,100,32,105,116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "]This function can introduce some output latency (reading input without producing any output)."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "]An exception will be thrown if a preset dictionary is required for further decompression. See"}],
             0,false},
            {text,"1[inflateSetDictionary/2](#inflateSetDictionary/2)"},
            {sep,[{text,"\ffor details."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bExample:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [437,10,119,97,108,107,40,67,111,109,112,114,101,115,115,101,100,
              44,32,72,97,110,100,108,101,114,41,32,45,62,10,32,32,32,32,90,
              32,61,32,122,108,105,98,58,111,112,101,110,40,41,44,10,32,32,32,
              32,122,108,105,98,58,105,110,102,108,97,116,101,73,110,105,116,
              40,90,41,44,10,32,32,32,32,37,32,76,105,109,105,116,32,115,105,
              110,103,108,101,32,117,110,99,111,109,112,114,101,115,115,101,
              100,32,99,104,117,110,107,32,115,105,122,101,32,116,111,32,53,
              49,50,107,98,10,32,32,32,32,122,108,105,98,58,115,101,116,66,
              117,102,83,105,122,101,40,90,44,32,53,49,50,32,42,32,49,48,50,
              52,41,44,10,32,32,32,32,108,111,111,112,40,90,44,32,72,97,110,
              100,108,101,114,44,32,122,108,105,98,58,105,110,102,108,97,116,
              101,67,104,117,110,107,40,90,44,32,67,111,109,112,114,101,115,
              115,101,100,41,41,44,10,32,32,32,32,122,108,105,98,58,105,110,
              102,108,97,116,101,69,110,100,40,90,41,44,10,32,32,32,32,122,
              108,105,98,58,99,108,111,115,101,40,90,41,46,10,10,108,111,111,
              112,40,90,44,32,72,97,110,100,108,101,114,44,32,123,109,111,114,
              101,44,32,85,110,99,111,109,112,114,101,115,115,101,100,125,41,
              32,45,62,10,32,32,32,32,72,97,110,100,108,101,114,40,85,110,99,
              111,109,112,114,101,115,115,101,100,41,44,10,32,32,32,32,108,
              111,111,112,40,90,44,32,72,97,110,100,108,101,114,44,32,122,108,
              105,98,58,105,110,102,108,97,116,101,67,104,117,110,107,40,90,
              41,41,59,10,108,111,111,112,40,90,44,32,72,97,110,100,108,101,
              114,44,32,85,110,99,111,109,112,114,101,115,115,101,100,41,32,
              45,62,10,32,32,32,32,72,97,110,100,108,101,114,40,85,110,99,111,
              109,112,114,101,115,115,101,100,41,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,105,110,102,108,97,116,101,69,110,100,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,69,110,100,32,105,110,102,108,97,116,101,32,115,101,115,115,
            105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "UEnds the inflate session and cleans all data used. Notice that this function throws a"}],
             0,false},
            {text,"\f*data_error*"},
            {sep,
             [{text,
               "Zexception if no end of stream was found (meaning that not all data has been uncompressed)."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,105,110,102,108,97,116,101,71,101,116,68,105,99,116,105,
        111,110,97,114,121,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Return the decompression dictionary."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "iReturns the decompression dictionary currently in use by the stream. This function must be called between"}],
             0,false},
            {text,
             [31,91,105,110,102,108,97,116,101,73,110,105,116,47,49,93,40,35,
              105,110,102,108,97,116,101,73,110,105,116,47,49,41]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [29,91,105,110,102,108,97,116,101,69,110,100,47,49,93,40,35,105,
              110,102,108,97,116,101,69,110,100,47,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"7Only supported if ERTS was compiled with zlib >= 1.2.8."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,105,110,102,108,97,116,101,73,110,105,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Initialize a session for decompression."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Initializes a zlib stream for decompression."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,105,110,102,108,97,116,101,73,110,105,116,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Initialize a session for decompression."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"3Initializes a decompression session on zlib stream."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\f*WindowBits*"},
            {sep,
             [{text,
               [142,105,115,32,116,104,101,32,98,97,115,101,32,116,119,111,32,
                108,111,103,97,114,105,116,104,109,32,111,102,32,116,104,101,
                32,109,97,120,105,109,117,109,32,119,105,110,100,111,119,32,
                115,105,122,101,32,40,116,104,101,32,115,105,122,101,32,111,
                102,32,116,104,101,32,104,105,115,116,111,114,121,32,98,117,
                102,102,101,114,41,46,32,73,116,32,105,115,32,116,111,32,98,
                101,32,105,110,32,116,104,101,32,114,97,110,103,101,32,56,32,
                116,104,114,111,117,103,104,32,49,53,46,32,68,101,102,97,117,
                108,116,32,116,111,32,49,53,32,105,102]}],
             0,false},
            {text,
             [31,91,105,110,102,108,97,116,101,73,110,105,116,47,49,93,40,35,
              105,110,102,108,97,116,101,73,110,105,116,47,49,41]},
            {sep,[{text,"\bis used."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "GIf a compressed stream with a larger window size is specified as input,"}],
             0,false},
            {text,
             [23,91,105,110,102,108,97,116,101,47,50,93,40,35,105,110,102,108,
              97,116,101,47,50,41]},
            {sep,[{text,"\nthrows the"}],0,false},
            {text,"\f*data_error*"},
            {sep,[{text,"\nexception."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\nA negative"}],0,false},
            {text,"\f*WindowBits*"},
            {sep,
             [{text,
               [145,118,97,108,117,101,32,109,97,107,101,115,32,122,108,105,
                98,32,105,103,110,111,114,101,32,116,104,101,32,122,108,105,
                98,32,104,101,97,100,101,114,32,40,97,110,100,32,99,104,101,
                99,107,115,117,109,41,32,102,114,111,109,32,116,104,101,32,
                115,116,114,101,97,109,46,32,78,111,116,105,99,101,32,116,104,
                97,116,32,116,104,101,32,122,108,105,98,32,115,111,117,114,99,
                101,32,109,101,110,116,105,111,110,115,32,116,104,105,115,32,
                111,110,108,121,32,97,115,32,97,32,117,110,100,111,99,117,109,
                101,110,116,101,100,32,102,101,97,116,117,114,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,105,110,102,108,97,116,101,82,101,115,101,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,[{sep,[{text,"\e>Reset the inflate session."}],0,false}],0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [29,91,105,110,102,108,97,116,101,69,110,100,47,49,93,40,35,105,
              110,102,108,97,116,101,69,110,100,47,49,41]},
            {sep,[{text,"\vfollowed by"}],0,false},
            {text,
             [31,91,105,110,102,108,97,116,101,73,110,105,116,47,49,93,40,35,
              105,110,102,108,97,116,101,73,110,105,116,47,49,41]},
            {sep,
             [{text,
               [132,44,32,98,117,116,32,100,111,101,115,32,110,111,116,32,102,
                114,101,101,32,97,110,100,32,114,101,97,108,108,111,99,97,116,
                101,32,97,108,108,32,116,104,101,32,105,110,116,101,114,110,
                97,108,32,100,101,99,111,109,112,114,101,115,115,105,111,110,
                32,115,116,97,116,101,46,32,84,104,101,32,115,116,114,101,97,
                109,32,119,105,108,108,32,107,101,101,112,32,97,116,116,114,
                105,98,117,116,101,115,32,116,104,97,116,32,99,111,117,108,
                100,32,104,97,118,101,32,98,101,101,110,32,115,101,116,32,98,
                121]}],
             0,false},
            {text,
             [17,42,105,110,102,108,97,116,101,73,110,105,116,47,49,44,50,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,105,110,102,108,97,116,101,83,101,116,68,105,99,116,105,
        111,110,97,114,121,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"(Initialize the decompression dictionary."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [159,73,110,105,116,105,97,108,105,122,101,115,32,116,104,101,
                32,100,101,99,111,109,112,114,101,115,115,105,111,110,32,100,
                105,99,116,105,111,110,97,114,121,32,102,114,111,109,32,116,
                104,101,32,115,112,101,99,105,102,105,101,100,32,117,110,99,
                111,109,112,114,101,115,115,101,100,32,98,121,116,101,32,115,
                101,113,117,101,110,99,101,46,32,84,104,105,115,32,102,117,
                110,99,116,105,111,110,32,109,117,115,116,32,98,101,32,99,97,
                108,108,101,100,32,97,115,32,97,32,114,101,115,112,111,110,
                115,101,32,116,111,32,97,110,32,105,110,102,108,97,116,101,32,
                111,112,101,114,97,116,105,111,110,32,40,101,103,46]}],
             0,false},
            {text,
             [31,91,115,97,102,101,73,110,102,108,97,116,101,47,50,93,40,35,
              115,97,102,101,73,110,102,108,97,116,101,47,50,41]},
            {sep,[{text,"\v) returning"}],0,false},
            {text," *{need_dictionary,Adler,Output}*"},
            {sep,
             [{text,"3or in the case of deprecated functions, throwing an"}],
             0,false},
            {text,"0*{'EXIT',{{need_dictionary,Adler},_StackTrace}}*"},
            {sep,[{text,"\nexception."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ÈThe dictionary chosen by the compressor can be determined from the Adler value returned or thrown by the call to the inflate function. The compressor and decompressor must use the same dictionary (See"}],
             0,false},
            {text,"1[deflateSetDictionary/2](#deflateSetDictionary/2)"},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "WAfter setting the dictionary the inflate operation should be retried without new input."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bExample:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [630,10,100,101,112,114,101,99,97,116,101,100,95,117,110,112,97,
              99,107,40,90,44,32,67,111,109,112,114,101,115,115,101,100,44,32,
              68,105,99,116,41,32,45,62,10,32,32,32,32,32,99,97,115,101,32,99,
              97,116,99,104,32,122,108,105,98,58,105,110,102,108,97,116,101,
              40,90,44,32,67,111,109,112,114,101,115,115,101,100,41,32,111,
              102,10,32,32,32,32,32,32,32,32,32,32,123,39,69,88,73,84,39,44,
              123,123,110,101,101,100,95,100,105,99,116,105,111,110,97,114,
              121,44,95,68,105,99,116,73,68,125,44,95,125,125,32,45,62,10,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,107,32,61,
              32,122,108,105,98,58,105,110,102,108,97,116,101,83,101,116,68,
              105,99,116,105,111,110,97,114,121,40,90,44,32,68,105,99,116,41,
              44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,85,110,
              99,111,109,112,114,101,115,115,101,100,32,61,32,122,108,105,98,
              58,105,110,102,108,97,116,101,40,90,44,32,91,93,41,59,10,32,32,
              32,32,32,32,32,32,32,32,85,110,99,111,109,112,114,101,115,115,
              101,100,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,85,110,99,111,109,112,114,101,115,115,101,100,10,32,32,
              32,32,32,101,110,100,46,10,10,110,101,119,95,117,110,112,97,99,
              107,40,90,44,32,67,111,109,112,114,101,115,115,101,100,44,32,68,
              105,99,116,41,32,45,62,10,32,32,32,32,99,97,115,101,32,122,108,
              105,98,58,105,110,102,108,97,116,101,40,90,44,32,67,111,109,112,
              114,101,115,115,101,100,44,32,91,123,101,120,99,101,112,116,105,
              111,110,95,111,110,95,110,101,101,100,95,100,105,99,116,44,32,
              102,97,108,115,101,125,93,41,32,111,102,10,32,32,32,32,32,32,32,
              32,123,110,101,101,100,95,100,105,99,116,105,111,110,97,114,121,
              44,32,95,68,105,99,116,73,100,44,32,79,117,116,112,117,116,125,
              32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,111,107,32,61,
              32,122,108,105,98,58,105,110,102,108,97,116,101,83,101,116,68,
              105,99,116,105,111,110,97,114,121,40,90,44,32,68,105,99,116,41,
              44,10,32,32,32,32,32,32,32,32,32,32,32,32,91,79,117,116,112,117,
              116,32,124,32,122,108,105,98,58,105,110,102,108,97,116,101,40,
              90,44,32,91,93,41,93,59,10,32,32,32,32,32,32,32,32,85,110,99,
              111,109,112,114,101,115,115,101,100,32,45,62,10,32,32,32,32,32,
              32,32,32,32,32,32,32,85,110,99,111,109,112,114,101,115,115,101,
              100,10,32,32,32,32,101,110,100,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## open/0"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,",Open a stream and return a stream reference."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [20,79,112,101,110,115,32,97,32,122,108,105,98,32,115,116,114,
              101,97,109,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,115,97,102,101,73,110,102,108,97,116,101,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")Decompress data with limited output size."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,76,105,107,101]}],0,false},
            {text,
             [23,91,105,110,102,108,97,116,101,47,50,93,40,35,105,110,102,108,
              97,116,101,47,50,41]},
            {sep,
             [{text,
               "Û, but returns once it has expanded beyond a small implementation-defined threshold. It's useful when decompressing untrusted input which could have been maliciously crafted to expand until the system runs out of memory."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [21,84,104,105,115,32,102,117,110,99,116,105,111,110,32,114,
                101,116,117,114,110,115]}],
             0,false},
            {text,
             [31,42,123,99,111,110,116,105,110,117,101,32,124,32,102,105,110,
              105,115,104,101,100,44,32,79,117,116,112,117,116,125,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {sep,[{text,[6,79,117,116,112,117,116]}],0,false},
            {sep,
             [{text,
               [128,105,115,32,116,104,101,32,100,97,116,97,32,116,104,97,116,
                32,119,97,115,32,100,101,99,111,109,112,114,101,115,115,101,
                100,32,105,110,32,116,104,105,115,32,99,97,108,108,46,32,78,
                101,119,32,105,110,112,117,116,32,99,97,110,32,98,101,32,113,
                117,101,117,101,100,32,117,112,32,111,110,32,101,97,99,104,32,
                99,97,108,108,32,105,102,32,100,101,115,105,114,101,100,44,32,
                97,110,100,32,116,104,101,32,102,117,110,99,116,105,111,110,
                32,119,105,108,108,32,114,101,116,117,114,110]}],
             0,false},
            {text,
             [20,42,123,102,105,110,105,115,104,101,100,44,32,79,117,116,112,
              117,116,125,42]},
            {sep,
             [{text,"+once all queued data has been decompressed."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "]This function can introduce some output latency (reading input without producing any output)."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "UIf a preset dictionary is required for further decompression, this function returns a"}],
             0,false},
            {text,
             [17,42,110,101,101,100,95,100,105,99,116,105,111,110,97,114,121,
              42]},
            {sep,[{text,"\ntuple. See"}],0,false},
            {text,"1[inflateSetDictionary/2](#inflateSetDictionary/2)"},
            {sep,
             [{text,[14,41,32,102,111,114,32,100,101,116,97,105,108,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bExample:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [343,10,119,97,108,107,40,67,111,109,112,114,101,115,115,101,100,
              44,32,72,97,110,100,108,101,114,41,32,45,62,10,32,32,32,32,90,
              32,61,32,122,108,105,98,58,111,112,101,110,40,41,44,10,32,32,32,
              32,122,108,105,98,58,105,110,102,108,97,116,101,73,110,105,116,
              40,90,41,44,10,32,32,32,32,108,111,111,112,40,90,44,32,72,97,
              110,100,108,101,114,44,32,122,108,105,98,58,115,97,102,101,73,
              110,102,108,97,116,101,40,90,44,32,67,111,109,112,114,101,115,
              115,101,100,41,41,44,10,32,32,32,32,122,108,105,98,58,105,110,
              102,108,97,116,101,69,110,100,40,90,41,44,10,32,32,32,32,122,
              108,105,98,58,99,108,111,115,101,40,90,41,46,10,10,108,111,111,
              112,40,90,44,32,72,97,110,100,108,101,114,44,32,123,99,111,110,
              116,105,110,117,101,44,32,79,117,116,112,117,116,125,41,32,45,
              62,10,32,32,32,32,72,97,110,100,108,101,114,40,79,117,116,112,
              117,116,41,44,10,32,32,32,32,108,111,111,112,40,90,44,32,72,97,
              110,100,108,101,114,44,32,122,108,105,98,58,115,97,102,101,73,
              110,102,108,97,116,101,40,90,44,32,91,93,41,41,59,10,108,111,
              111,112,40,90,44,32,72,97,110,100,108,101,114,44,32,123,102,105,
              110,105,115,104,101,100,44,32,79,117,116,112,117,116,125,41,32,
              45,62,10,32,32,32,32,72,97,110,100,108,101,114,40,79,117,116,
              112,117,116,41,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,115,101,116,66,117,102,83,105,122,101,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [16,83,101,116,32,98,117,102,102,101,114,32,115,105,122,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Sets the intermediate buffer size."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "DThis function is deprecated and will be removed in a future release."}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,115,101,116,95,99,111,110,116,114,111,108,108,105,110,103,
        95,112,114,111,99,101,115,115,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"%Transfers ownership of a zlib stream."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\"Changes the controlling process of"}],0,false},
            {text,[3,42,90,42]},
            {sep,[{text,[2,116,111]}],0,false},
            {text,[5,42,80,105,100,42]},
            {sep,[{text," , which must be a local process."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,117,110,99,111,109,112,114,101,115,115,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"1Uncompress data with standard zlib functionality."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"1Uncompresses data with zlib headers and checksum."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## unzip/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")Uncompress data without the zlib headers."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"4Uncompresses data without zlib headers and checksum."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## zip/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Compress data without the zlib headers."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"2Compresses data without zlib headers and checksum."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
