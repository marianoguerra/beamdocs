{above,
 {above,
  {above,
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e# Non-Blocking Code Loading"},null},null}},
   {sep,
    [{text,"'<a name=\"Introduction\">Introduction</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[15,35,35,32,73,110,116,114,111,100,117,99,116,105,111,110]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [531,66,101,102,111,114,101,32,79,84,80,32,82,49,54,32,119,104,
              101,110,32,97,110,32,69,114,108,97,110,103,32,99,111,100,101,32,
              109,111,100,117,108,101,32,119,97,115,32,108,111,97,100,101,100,
              44,32,97,108,108,32,111,116,104,101,114,32,101,120,101,99,117,
              116,105,111,110,32,105,110,32,116,104,101,32,86,77,32,119,101,
              114,101,32,104,97,108,116,101,100,32,119,104,105,108,101,32,116,
              104,101,32,108,111,97,100,32,111,112,101,114,97,116,105,111,110,
              32,119,97,115,32,99,97,114,114,105,101,100,32,111,117,116,32,
              105,110,32,115,105,110,103,108,101,32,116,104,114,101,97,100,
              101,100,32,109,111,100,101,46,32,84,104,105,115,32,109,105,103,
              104,116,32,110,111,116,32,98,101,32,97,32,98,105,103,32,112,114,
              111,98,108,101,109,32,102,111,114,32,105,110,105,116,105,97,108,
              32,108,111,97,100,105,110,103,32,111,102,32,109,111,100,117,108,
              101,115,32,100,117,114,105,110,103,32,86,77,32,98,111,111,116,
              44,32,98,117,116,32,105,116,32,99,97,110,32,98,101,32,97,32,115,
              101,118,101,114,101,32,112,114,111,98,108,101,109,32,102,111,
              114,32,97,118,97,105,108,97,98,105,108,105,116,121,32,119,104,
              101,110,32,117,112,103,114,97,100,105,110,103,32,109,111,100,
              117,108,101,115,32,111,114,32,97,100,100,105,110,103,32,110,101,
              119,32,99,111,100,101,32,111,110,32,97,32,86,77,32,119,105,116,
              104,32,114,117,110,110,105,110,103,32,112,97,121,108,111,97,100,
              46,32,84,104,105,115,32,112,114,111,98,108,101,109,32,103,114,
              111,119,115,32,119,105,116,104,32,116,104,101,32,110,117,109,98,
              101,114,32,111,102,32,99,111,114,101,115,32,97,115,32,98,111,
              116,104,32,116,104,101,32,116,105,109,101,32,105,116,32,116,97,
              107,101,115,32,116,111,32,119,97,105,116,32,102,111,114,32,97,
              108,108,32,115,99,104,101,100,117,108,101,114,115,32,116,111,32,
              115,116,111,112,32,105,110,99,114,101,97,115,101,115,32,97,115,
              32,119,101,108,108,32,97,115,32,116,104,101,32,112,111,116,101,
              110,116,105,97,108,32,97,109,111,117,110,116,32,111,102,32,104,
              97,108,116,101,100,32,111,110,103,111,105,110,103,32,119,111,
              114,107,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [513,73,110,32,79,84,80,32,82,49,54,44,32,109,111,100,117,108,
              101,115,32,97,114,101,32,108,111,97,100,101,100,32,119,105,116,
              104,111,117,116,32,98,108,111,99,107,105,110,103,32,116,104,101,
              32,86,77,46,32,69,114,108,97,110,103,32,112,114,111,99,101,115,
              115,101,115,32,109,97,121,32,99,111,110,116,105,110,117,101,32,
              101,120,101,99,117,116,105,110,103,32,117,110,100,105,115,116,
              117,114,98,101,100,32,105,110,32,112,97,114,97,108,108,101,108,
              32,100,117,114,105,110,103,32,116,104,101,32,101,110,116,105,
              114,101,32,108,111,97,100,32,111,112,101,114,97,116,105,111,110,
              46,32,84,104,101,32,99,111,100,101,32,108,111,97,100,105,110,
              103,32,105,115,32,99,97,114,114,105,101,100,32,111,117,116,32,
              98,121,32,97,32,110,111,114,109,97,108,32,69,114,108,97,110,103,
              32,112,114,111,99,101,115,115,32,116,104,97,116,32,105,115,32,
              115,99,104,101,100,117,108,101,100,32,108,105,107,101,32,97,108,
              108,32,116,104,101,32,111,116,104,101,114,115,46,32,84,104,101,
              32,108,111,97,100,32,111,112,101,114,97,116,105,111,110,32,105,
              115,32,99,111,109,112,108,101,116,101,100,32,98,121,32,109,97,
              107,105,110,103,32,116,104,101,32,108,111,97,100,101,100,32,99,
              111,100,101,32,118,105,115,105,98,108,101,32,116,111,32,97,108,
              108,32,112,114,111,99,101,115,115,101,115,32,105,110,32,97,32,
              99,111,110,115,105,115,116,101,110,116,32,119,97,121,32,119,105,
              116,104,32,111,110,101,32,115,105,110,103,108,101,32,97,116,111,
              109,105,99,32,105,110,115,116,114,117,99,116,105,111,110,46,32,
              78,111,110,45,98,108,111,99,107,105,110,103,32,99,111,100,101,
              32,108,111,97,100,105,110,103,32,119,105,108,108,32,105,109,112,
              114,111,118,101,32,114,101,97,108,45,116,105,109,101,32,99,104,
              97,114,97,99,116,101,114,105,115,116,105,99,115,32,119,104,101,
              110,32,109,111,100,117,108,101,115,32,97,114,101,32,108,111,97,
              100,101,100,47,117,112,103,114,97,100,101,100,32,111,110,32,97,
              32,114,117,110,110,105,110,103,32,83,77,80,32,115,121,115,116,
              101,109,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{text,"-<a name=\"The-Load-Phases\">The-Load-Phases</a>"},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [18,35,35,32,84,104,101,32,76,111,97,100,32,80,104,97,115,101,115]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"5The loading of a module is divided into two phases; a"}],
            0,false},
           {text,
            [17,42,42,112,114,101,112,97,114,101,32,112,104,97,115,101,42,42]},
           {sep,[{text,[5,97,110,100,32,97]}],0,false},
           {text,
            [19,42,42,102,105,110,105,115,104,105,110,103,32,112,104,97,115,
             101,42,42]},
           {sep,
            [{text,
              [361,46,32,84,104,101,32,112,114,101,112,97,114,101,32,112,104,
               97,115,101,32,99,111,110,116,97,105,110,115,32,114,101,97,100,
               105,110,103,32,116,104,101,32,66,69,65,77,32,102,105,108,101,
               32,102,111,114,109,97,116,32,97,110,100,32,97,108,108,32,116,
               104,101,32,112,114,101,112,97,114,97,116,105,111,110,115,32,
               111,102,32,116,104,101,32,108,111,97,100,101,100,32,99,111,100,
               101,32,116,104,97,116,32,99,97,110,32,101,97,115,105,108,121,
               32,98,101,32,100,111,110,101,32,119,105,116,104,111,117,116,32,
               105,110,116,101,114,102,101,114,101,110,99,101,32,119,105,116,
               104,32,116,104,101,32,114,117,110,110,105,110,103,32,99,111,
               100,101,46,32,84,104,101,32,102,105,110,105,115,104,105,110,
               103,32,112,104,97,115,101,32,119,105,108,108,32,109,97,107,101,
               32,116,104,101,32,108,111,97,100,101,100,32,40,97,110,100,32,
               112,114,101,112,97,114,101,100,41,32,99,111,100,101,32,97,99,
               99,101,115,115,105,98,108,101,32,102,114,111,109,32,116,104,
               101,32,114,117,110,110,105,110,103,32,99,111,100,101,46,32,79,
               108,100,32,109,111,100,117,108,101,32,118,101,114,115,105,111,
               110,115,32,40,114,101,112,108,97,99,101,100,32,111,114,32,100,
               101,108,101,116,101,100,41,32,119,105,108,108,32,97,108,115,
               111,32,98,101,32,109,97,100,101,32,105,110,97,99,99,101,115,
               115,105,98,108,101,32,98,121,32,116,104,101,32,102,105,110,105,
               115,104,105,110,103,32,112,104,97,115,101,46]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [407,84,104,101,32,112,114,101,112,97,114,101,32,112,104,97,115,
               101,32,105,115,32,100,101,115,105,103,110,101,100,32,116,111,
               32,97,108,108,111,119,32,115,101,118,101,114,97,108,32,34,108,
               111,97,100,101,114,34,32,112,114,111,99,101,115,115,101,115,32,
               116,111,32,112,114,101,112,97,114,101,32,115,101,112,97,114,97,
               116,101,32,109,111,100,117,108,101,115,32,105,110,32,112,97,
               114,97,108,108,101,108,32,119,104,105,108,101,32,116,104,101,
               32,102,105,110,105,115,104,105,110,103,32,112,104,97,115,101,
               32,99,97,110,32,111,110,108,121,32,98,101,32,100,111,110,101,
               32,98,121,32,111,110,101,32,108,111,97,100,101,114,32,112,114,
               111,99,101,115,115,32,97,116,32,97,32,116,105,109,101,46,32,65,
               32,115,101,99,111,110,100,32,108,111,97,100,101,114,32,112,114,
               111,99,101,115,115,32,116,114,121,105,110,103,32,116,111,32,
               101,110,116,101,114,32,102,105,110,105,115,104,105,110,103,32,
               112,104,97,115,101,32,119,105,108,108,32,98,101,32,115,117,115,
               112,101,110,100,101,100,32,117,110,116,105,108,32,116,104,101,
               32,102,105,114,115,116,32,108,111,97,100,101,114,32,105,115,32,
               100,111,110,101,46,32,84,104,105,115,32,119,105,108,108,32,111,
               110,108,121,32,98,108,111,99,107,32,116,104,101,32,112,114,111,
               99,101,115,115,44,32,116,104,101,32,115,99,104,101,100,117,108,
               101,114,32,105,115,32,102,114,101,101,32,116,111,32,115,99,104,
               101,100,117,108,101,32,111,116,104,101,114,32,119,111,114,107,
               32,119,104,105,108,101,32,116,104,101,32,115,101,99,111,110,
               100,32,108,111,97,100,101,114,32,105,115,32,119,97,105,116,105,
               110,103,46,32,40,83,101,101]}],
            0,false},
           {text,"&*erts_try_seize_code_write_permission*"},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,"$*erts_release_code_write_permission*"},
           {sep,[{text,[2,41,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "½The ability to prepare several modules in parallel is not currently used as almost all code loading is serialized by the code_server process. The BIF interface is however prepared for this."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "^\n  erlang:prepare_loading(Module, Code) -> LoaderState\n  erlang:finish_loading([LoaderState])\n"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [16,84,104,101,32,105,100,101,97,32,105,115,32,116,104,97,116]}],
            0,false},
           {text,
            [17,42,112,114,101,112,97,114,101,95,108,111,97,100,105,110,103,
             42]},
           {sep,
            [{text,
              [142,99,111,117,108,100,32,98,101,32,99,97,108,108,101,100,32,
               105,110,32,112,97,114,97,108,108,101,108,32,102,111,114,32,100,
               105,102,102,101,114,101,110,116,32,109,111,100,117,108,101,115,
               32,97,110,100,32,114,101,116,117,114,110,115,32,97,32,34,109,
               97,103,105,99,32,98,105,110,97,114,121,34,32,99,111,110,116,97,
               105,110,105,110,103,32,116,104,101,32,105,110,116,101,114,110,
               97,108,32,115,116,97,116,101,32,111,102,32,101,97,99,104,32,
               112,114,101,112,97,114,101,100,32,109,111,100,117,108,101,46,
               32,70,117,110,99,116,105,111,110]}],
            0,false},
           {text,
            [16,42,102,105,110,105,115,104,95,108,111,97,100,105,110,103,42]},
           {sep,
            [{text,
              "Ocould take a list of such states and do the finishing of all of them in one go."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [31,67,117,114,114,101,110,108,116,121,32,119,101,32,117,115,
               101,32,116,104,101,32,108,101,103,97,99,121,32,66,73,70]}],
            0,false},
           {text,
            [20,42,101,114,108,97,110,103,58,108,111,97,100,95,109,111,100,
             117,108,101,42]},
           {sep,
            [{text,
              "[which is now implemented in Erlang by calling the above two functions in sequence. Function"}],
            0,false},
           {text,
            [16,42,102,105,110,105,115,104,95,108,111,97,100,105,110,103,42]},
           {sep,
            [{text,
              "nis limited to only accepts a list with one module state as we do not yet use the multi module loading feature."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{text,";<a name=\"The-Finishing-Sequence\">The-Finishing-Sequence</a>"},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,84,104,101,32,70,105,110,105,115,104,105,110,103,32,83,
        101,113,117,101,110,99,101]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "PDuring VM execution, code is accessed through a number of data structures. These"}],
           0,false},
          {text,
           [26,42,42,99,111,100,101,32,97,99,99,101,115,115,32,115,116,114,
            117,99,116,117,114,101,115,42,42]},
          {sep,[{text,[3,97,114,101]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {text,"4Export table. One entry for every exported function."}],
       0,false},
      {sep,
       [{text,[1,42]},
        {text,"/Module table. One entry for each loaded module."}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {text,
        "D\"beam_catches\". Identifies jump destinations for catch instructions."}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {text,
       "D\"beam_ranges\". Map code address to function and line in source file."}],
     0,false}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [426,84,104,101,32,109,111,115,116,32,102,114,101,113,117,101,110,
            116,108,121,32,117,115,101,100,32,111,102,32,116,104,101,115,101,
            32,115,116,114,117,99,116,117,114,101,115,32,105,115,32,116,104,
            101,32,101,120,112,111,114,116,32,116,97,98,108,101,32,116,104,97,
            116,32,105,115,32,97,99,99,101,115,115,101,100,32,105,110,32,114,
            117,110,32,116,105,109,101,32,102,111,114,32,101,118,101,114,121,
            32,101,120,101,99,117,116,101,100,32,101,120,116,101,114,110,97,
            108,32,102,117,110,99,116,105,111,110,32,99,97,108,108,32,116,111,
            32,103,101,116,32,116,104,101,32,97,100,100,114,101,115,115,32,
            111,102,32,116,104,101,32,99,97,108,108,101,101,46,32,70,111,114,
            32,112,101,114,102,111,114,109,97,110,99,101,32,114,101,97,115,
            111,110,115,44,32,119,101,32,119,97,110,116,32,116,111,32,97,99,
            99,101,115,115,32,97,108,108,32,116,104,101,115,101,32,115,116,
            114,117,99,116,117,114,101,115,32,119,105,116,104,111,117,116,32,
            97,110,121,32,111,118,101,114,104,101,97,100,32,102,114,111,109,
            32,116,104,114,101,97,100,32,115,121,110,99,104,114,111,110,105,
            122,97,116,105,111,110,46,32,69,97,114,108,105,101,114,32,116,104,
            105,115,32,119,97,115,32,115,111,108,118,101,100,32,119,105,116,
            104,32,97,110,32,101,109,101,114,103,101,110,99,121,32,98,114,101,
            97,107,46,32,83,116,111,112,32,116,104,101,32,101,110,116,105,114,
            101,32,86,77,32,116,111,32,109,117,116,97,116,101,32,116,104,101,
            115,101,32,99,111,100,101,32,97,99,99,101,115,115,32,115,116,114,
            117,99,116,117,114,101,115,44,32,111,116,104,101,114,119,105,115,
            101,32,116,114,101,97,116,32,116,104,101,109,32,97,115,32,114,101,
            97,100,45,111,110,108,121,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"!The solution in R16 is instead to"}],0,false},
          {text,"\r**replicate**"},
          {sep,
           [{text,
             [338,116,104,101,32,99,111,100,101,32,97,99,99,101,115,115,32,
              115,116,114,117,99,116,117,114,101,115,46,32,87,101,32,104,97,
              118,101,32,111,110,101,32,115,101,116,32,111,102,32,97,99,116,
              105,118,101,32,115,116,114,117,99,116,117,114,101,115,32,114,
              101,97,100,32,98,121,32,116,104,101,32,114,117,110,110,105,110,
              103,32,99,111,100,101,46,32,87,104,101,110,32,110,101,119,32,99,
              111,100,101,32,105,115,32,108,111,97,100,101,100,32,116,104,101,
              32,97,99,116,105,118,101,32,115,116,114,117,99,116,117,114,101,
              115,32,97,114,101,32,99,111,112,105,101,100,44,32,116,104,101,
              32,99,111,112,121,32,105,115,32,117,112,100,97,116,101,100,32,
              116,111,32,105,110,99,108,117,100,101,32,116,104,101,32,110,101,
              119,108,121,32,108,111,97,100,101,100,32,109,111,100,117,108,
              101,32,97,110,100,32,116,104,101,110,32,97,32,115,119,105,116,
              99,104,32,105,115,32,109,97,100,101,32,116,111,32,109,97,107,
              101,32,116,104,101,32,117,112,100,97,116,101,100,32,99,111,112,
              121,32,116,104,101,32,110,101,119,32,97,99,116,105,118,101,32,
              115,101,116,46,32,84,104,101,32,97,99,116,105,118,101,32,115,
              101,116,32,105,115,32,105,100,101,110,116,105,102,105,101,100,
              32,98,121,32,97,32,115,105,110,103,108,101,32,103,108,111,98,97,
              108,32,97,116,111,109,105,99,32,118,97,114,105,97,98,108,101]}],
           0,false},
          {text,
           [23,42,116,104,101,95,97,99,116,105,118,101,95,99,111,100,101,95,
            105,110,100,101,120,42]},
          {sep,
           [{text,
             [544,46,32,84,104,101,32,115,119,105,116,99,104,32,99,97,110,32,
              116,104,117,115,32,98,101,32,109,97,100,101,32,98,121,32,97,32,
              115,105,110,103,108,101,32,97,116,111,109,105,99,32,119,114,105,
              116,101,32,111,112,101,114,97,116,105,111,110,46,32,84,104,101,
              32,114,117,110,110,105,110,103,32,99,111,100,101,32,104,97,118,
              101,32,116,111,32,114,101,97,100,32,116,104,105,115,32,97,116,
              111,109,105,99,32,118,97,114,105,97,98,108,101,32,119,104,101,
              110,32,117,115,105,110,103,32,116,104,101,32,97,99,116,105,118,
              101,32,97,99,99,101,115,115,32,115,116,114,117,99,116,117,114,
              101,115,44,32,119,104,105,99,104,32,109,101,97,110,115,32,111,
              110,101,32,97,116,111,109,105,99,32,114,101,97,100,32,111,112,
              101,114,97,116,105,111,110,32,112,101,114,32,101,120,116,101,
              114,110,97,108,32,102,117,110,99,116,105,111,110,32,99,97,108,
              108,32,102,111,114,32,101,120,97,109,112,108,101,46,32,84,104,
              101,32,112,101,114,102,111,114,109,97,110,99,101,32,112,101,110,
              97,108,116,121,32,102,114,111,109,32,116,104,105,115,32,101,120,
              116,114,97,32,97,116,111,109,105,99,32,114,101,97,100,32,105,
              115,32,104,111,119,101,118,101,114,32,118,101,114,121,32,115,
              109,97,108,108,32,97,115,32,105,116,32,99,97,110,32,98,101,32,
              100,111,110,101,32,119,105,116,104,111,117,116,32,97,110,121,32,
              109,101,109,111,114,121,32,98,97,114,114,105,101,114,115,32,97,
              116,32,97,108,108,32,40,97,115,32,100,101,115,99,114,105,98,101,
              100,32,98,101,108,111,119,41,46,32,87,105,116,104,32,116,104,
              105,115,32,115,111,108,117,116,105,111,110,32,119,101,32,97,108,
              115,111,32,112,114,101,115,101,114,118,101,32,116,104,101,32,
              116,114,97,110,115,97,99,116,105,111,110,97,108,32,102,101,97,
              116,117,114,101,32,111,102,32,97,32,108,111,97,100,32,111,112,
              101,114,97,116,105,111,110,46,32,82,117,110,110,105,110,103,32,
              99,111,100,101,32,119,105,108,108,32,110,101,118,101,114,32,115,
              101,101,32,116,104,101,32,105,110,116,101,114,109,101,100,105,
              97,116,101,32,114,101,115,117,108,116,32,111,102,32,97,32,104,
              97,108,102,32,108,111,97,100,101,100,32,109,111,100,117,108,101,
              46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "GThe finishing phase is carried out in the following sequence by the BIF"}],
           0,false},
          {text,
           [23,42,101,114,108,97,110,103,58,102,105,110,105,115,104,95,108,
            111,97,100,105,110,103,42]},
          {sep,[{text,[1,58]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "RSeize exclusive code write permission (suspend process if needed until we get it)."}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [138,77,97,107,101,32,97,32,102,117,108,108,32,99,111,112,
                  121,32,111,102,32,97,108,108,32,116,104,101,32,97,99,116,
                  105,118,101,32,97,99,99,101,115,115,32,115,116,114,117,99,
                  116,117,114,101,115,46,32,84,104,105,115,32,99,111,112,121,
                  32,105,115,32,99,97,108,108,101,100,32,116,104,101,32,115,
                  116,97,103,105,110,103,32,97,114,101,97,32,97,110,100,32,
                  105,115,32,105,100,101,110,116,105,102,105,101,100,32,98,
                  121,32,116,104,101,32,103,108,111,98,97,108,32,97,116,111,
                  109,105,99,32,118,97,114,105,97,98,108,101]}],
               0,false},
              {text,
               [24,42,116,104,101,95,115,116,97,103,105,110,103,95,99,111,100,
                101,95,105,110,100,101,120,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "VUpdate all access structures in the staging area to include the newly prepared module."}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [131,83,99,104,101,100,117,108,101,32,97,32,116,104,114,101,97,
              100,32,112,114,111,103,114,101,115,115,32,101,118,101,110,116,
              46,32,84,104,97,116,32,105,115,32,97,32,116,105,109,101,32,105,
              110,32,116,104,101,32,102,117,116,117,114,101,32,119,104,101,
              110,32,97,108,108,32,115,99,104,101,100,117,108,101,114,115,32,
              104,97,118,101,32,121,105,101,108,100,101,100,32,97,110,100,32,
              101,120,101,99,117,116,101,100,32,97,32,102,117,108,108,32,109,
              101,109,111,114,121,32,98,97,114,114,105,101,114,46]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},{sep,[{text,"\eSuspend the loader process."}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,
             ";After thread progress, commit the staging area by assigning"}],
           0,false},
          {text,
           [24,42,116,104,101,95,115,116,97,103,105,110,103,95,99,111,100,101,
            95,105,110,100,101,120,42]},
          {sep,[{text,[2,116,111]}],0,false},
          {text,
           [23,42,116,104,101,95,97,99,116,105,118,101,95,99,111,100,101,95,
            105,110,100,101,120,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "MRelease the code write permission allowing other processes to stage new code."}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{text,"4Resume the loader process allowing it to return from"}],
         0,false},
        {text,
         [23,42,101,114,108,97,110,103,58,102,105,110,105,115,104,95,108,111,
          97,100,105,110,103,42]},
        {sep,[{text,[1,46]}],0,false}],
       0,false}],
     0,false}},
   {sep,
    [{text,
      "[<a name=\"The-Finishing-Sequence_Thread-Progress\">The-Finishing-Sequence_Thread-Progress</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [18,35,35,32,84,104,114,101,97,100,32,80,114,111,103,114,101,115,
          115]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "RThe waiting for thread progress in 4-6 is necessary in order for processes to read"}],
             0,false},
            {text,
             [23,42,116,104,101,95,97,99,116,105,118,101,95,99,111,100,101,95,
              105,110,100,101,120,42]},
            {sep,
             [{text,
               "datomic during normal execution without any expensive memory barriers. When we write a new value into"}],
             0,false},
            {text,
             [23,42,116,104,101,95,97,99,116,105,118,101,95,99,111,100,101,95,
              105,110,100,101,120,42]},
            {sep,
             [{text,
               [153,105,110,32,115,116,101,112,32,54,44,32,119,101,32,107,110,
                111,119,32,116,104,97,116,32,97,108,108,32,115,99,104,101,100,
                117,108,101,114,115,32,119,105,108,108,32,115,101,101,32,97,
                110,32,117,112,100,97,116,101,100,32,97,110,100,32,99,111,110,
                115,105,115,116,101,110,116,32,118,105,101,119,32,111,102,32,
                97,108,108,32,116,104,101,32,110,101,119,32,97,99,116,105,118,
                101,32,97,99,99,101,115,115,32,115,116,114,117,99,116,117,114,
                101,115,32,111,110,99,101,32,116,104,101,121,32,98,101,99,111,
                109,101,32,114,101,97,99,104,97,98,108,101,32,116,104,114,111,
                117,103,104]}],
             0,false},
            {text,
             [23,42,116,104,101,95,97,99,116,105,118,101,95,99,111,100,101,95,
              105,110,100,101,120,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"-The total lack of memory barrier when reading"}],
             0,false},
            {text,
             [23,42,116,104,101,95,97,99,116,105,118,101,95,99,111,100,101,95,
              105,110,100,101,120,42]},
            {sep,
             [{text,
               [726,104,97,115,32,111,110,101,32,105,110,116,101,114,101,115,
                116,105,110,103,32,99,111,110,115,101,113,117,101,110,99,101,
                32,104,111,119,101,118,101,114,46,32,68,105,102,102,101,114,
                101,110,116,32,112,114,111,99,101,115,115,101,115,32,109,97,
                121,32,115,101,101,32,116,104,101,32,110,101,119,32,99,111,
                100,101,32,97,116,32,100,105,102,102,101,114,101,110,116,32,
                112,111,105,110,116,32,105,110,32,116,105,109,101,32,100,101,
                112,101,110,100,105,110,103,32,111,110,32,119,104,101,110,32,
                100,105,102,102,101,114,101,110,116,32,99,111,114,101,115,32,
                104,97,112,112,101,110,32,116,111,32,114,101,102,114,101,115,
                104,32,116,104,101,105,114,32,104,97,114,100,119,97,114,101,
                32,99,97,99,104,101,115,46,32,84,104,105,115,32,109,97,121,32,
                115,111,117,110,100,32,117,110,115,97,102,101,32,98,117,116,
                32,105,116,32,97,99,116,117,97,108,108,121,32,100,111,101,115,
                32,110,111,116,32,109,97,116,116,101,114,46,32,84,104,101,32,
                111,110,108,121,32,112,114,111,112,101,114,116,121,32,119,101,
                32,109,117,115,116,32,103,117,97,114,97,110,116,101,101,32,
                105,115,32,116,104,97,116,32,116,104,101,32,97,98,105,108,105,
                116,121,32,116,111,32,115,101,101,32,116,104,101,32,110,101,
                119,32,99,111,100,101,32,109,117,115,116,32,115,112,114,101,
                97,100,32,119,105,116,104,32,112,114,111,99,101,115,115,32,99,
                111,109,109,117,110,105,99,97,116,105,111,110,46,32,65,102,
                116,101,114,32,114,101,99,101,105,118,105,110,103,32,97,32,
                109,101,115,115,97,103,101,32,116,104,97,116,32,119,97,115,32,
                116,114,105,103,103,101,114,101,100,32,98,121,32,110,101,119,
                32,99,111,100,101,44,32,116,104,101,32,114,101,99,101,105,118,
                101,114,32,109,117,115,116,32,98,101,32,103,117,97,114,97,110,
                116,101,101,100,32,116,111,32,97,108,115,111,32,115,101,101,
                32,116,104,101,32,110,101,119,32,99,111,100,101,46,32,84,104,
                105,115,32,119,105,108,108,32,98,101,32,103,117,97,114,97,110,
                116,101,101,100,32,97,115,32,97,108,108,32,116,121,112,101,
                115,32,111,102,32,112,114,111,99,101,115,115,32,99,111,109,
                109,117,110,105,99,97,116,105,111,110,32,105,110,118,111,108,
                118,101,115,32,109,101,109,111,114,121,32,98,97,114,114,105,
                101,114,115,32,105,110,32,111,114,100,101,114,32,102,111,114,
                32,116,104,101,32,114,101,99,101,105,118,101,114,32,116,111,
                32,98,101,32,115,117,114,101,32,116,111,32,114,101,97,100,32,
                119,104,97,116,32,116,104,101,32,115,101,110,100,101,114,32,
                104,97,115,32,119,114,105,116,116,101,110,46,32,84,104,105,
                115,32,105,109,112,108,105,99,105,116,32,109,101,109,111,114,
                121,32,98,97,114,114,105,101,114,32,119,105,108,108,32,116,
                104,101,110,32,97,108,115,111,32,109,97,107,101,32,115,117,
                114,101,32,116,104,97,116,32,116,104,101,32,114,101,99,101,
                105,118,101,114,32,114,101,97,100,115,32,116,104,101,32,110,
                101,119,32,118,97,108,117,101,32,111,102]}],
             0,false},
            {text,
             [23,42,116,104,101,95,97,99,116,105,118,101,95,99,111,100,101,95,
              105,110,100,101,120,42]},
            {sep,
             [{text,
               "¹and thereby also sees the new code. This is true for all kinds of inter process communication (TCP, ETS, process name registering, tracing, drivers, NIFs, etc) not just Erlang messages."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {sep,
    [{text,
      "]<a name=\"The-Finishing-Sequence_Code-Index-Reuse\">The-Finishing-Sequence_Code-Index-Reuse</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [19,35,35,32,67,111,100,101,32,73,110,100,101,120,32,82,101,117,115,
          101]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [584,84,111,32,111,112,116,105,109,105,122,101,32,116,104,101,
                32,99,111,112,121,32,111,112,101,114,97,116,105,111,110,32,
                105,110,32,115,116,101,112,32,50,44,32,99,111,100,101,32,97,
                99,99,101,115,115,32,115,116,114,117,99,116,117,114,101,115,
                32,97,114,101,32,114,101,117,115,101,100,46,32,73,110,32,99,
                117,114,114,101,110,116,32,115,111,108,117,116,105,111,110,32,
                119,101,32,104,97,118,101,32,116,104,114,101,101,32,115,101,
                116,115,32,111,102,32,99,111,100,101,32,97,99,99,101,115,115,
                32,115,116,114,117,99,116,117,114,101,115,44,32,105,100,101,
                110,116,105,102,105,101,100,32,98,121,32,97,32,99,111,100,101,
                32,105,110,100,101,120,32,111,102,32,48,44,32,49,32,97,110,
                100,32,50,46,32,84,104,101,115,101,32,105,110,100,101,120,101,
                115,32,97,114,101,32,117,115,101,100,32,105,110,32,97,32,114,
                111,117,110,100,32,114,111,98,105,110,32,102,97,115,104,105,
                111,110,46,32,73,110,115,116,101,97,100,32,111,102,32,104,97,
                118,105,110,103,32,116,111,32,105,110,105,116,105,97,108,105,
                122,101,32,97,32,99,111,109,112,108,101,116,101,108,121,32,
                110,101,119,32,99,111,112,121,32,111,102,32,97,108,108,32,97,
                99,99,101,115,115,32,115,116,114,117,99,116,117,114,101,115,
                32,102,111,114,32,101,118,101,114,121,32,108,111,97,100,32,
                111,112,101,114,97,116,105,111,110,32,119,101,32,106,117,115,
                116,32,104,97,118,101,32,116,111,32,117,112,100,97,116,101,32,
                119,105,116,104,32,116,104,101,32,99,104,97,110,103,101,115,
                32,116,104,97,116,32,104,97,118,101,32,104,97,112,112,101,110,
                101,100,32,115,105,110,99,101,32,116,104,101,32,108,97,115,
                116,32,116,119,111,32,99,111,100,101,32,108,111,97,100,32,111,
                112,101,114,97,116,105,111,110,115,46,32,87,101,32,99,111,117,
                108,100,32,103,101,116,32,98,121,32,119,105,116,104,32,111,
                110,108,121,32,116,119,111,32,99,111,100,101,32,105,110,100,
                101,120,101,115,32,40,48,32,97,110,100,32,49,41,44,32,98,117,
                116,32,116,104,97,116,32,119,111,117,108,100,32,114,101,113,
                117,105,114,101,32,121,101,116,32,97,110,111,116,104,101,114,
                32,114,111,117,110,100,32,111,102,32,119,97,105,116,105,110,
                103,32,102,111,114,32,116,104,114,101,97,100,32,112,114,111,
                103,114,101,115,115,32,98,101,102,111,114,101,32,115,116,101,
                112,32,50,32,105,110,32,116,104,101]}],
             0,false},
            {text,
             [16,42,102,105,110,105,115,104,95,108,111,97,100,105,110,103,42]},
            {sep,
             [{text,
               [439,115,101,113,117,101,110,99,101,46,32,87,101,32,99,97,110,
                110,111,116,32,115,116,97,114,116,32,114,101,117,115,105,110,
                103,32,97,32,99,111,100,101,32,105,110,100,101,120,32,97,115,
                32,115,116,97,103,105,110,103,32,97,114,101,97,32,117,110,116,
                105,108,32,119,101,32,107,110,111,119,32,116,104,97,116,32,
                110,111,32,108,105,110,103,101,114,105,110,103,32,115,99,104,
                101,100,117,108,101,114,32,116,104,114,101,97,100,32,105,115,
                32,115,116,105,108,108,32,117,115,105,110,103,32,105,116,32,
                97,115,32,116,104,101,32,97,99,116,105,118,101,32,99,111,100,
                101,32,105,110,100,101,120,46,32,87,105,116,104,32,116,104,
                114,101,101,32,103,101,110,101,114,97,116,105,111,110,115,32,
                111,102,32,99,111,100,101,32,105,110,100,101,120,101,115,44,
                32,116,104,101,32,119,97,105,116,105,110,103,32,102,111,114,
                32,116,104,114,101,97,100,32,112,114,111,103,114,101,115,115,
                32,105,110,32,115,116,101,112,32,52,45,54,32,119,105,108,108,
                32,103,105,118,101,32,116,104,105,115,32,103,117,97,114,97,
                110,116,101,101,32,102,111,114,32,117,115,46,32,84,104,114,
                101,97,100,32,112,114,111,103,114,101,115,115,32,119,105,108,
                108,32,119,97,105,116,32,102,111,114,32,97,108,108,32,114,117,
                110,110,105,110,103,32,115,99,104,101,100,117,108,101,114,115,
                32,116,111,32,114,101,115,99,104,101,100,117,108,101,32,97,
                116,32,108,101,97,115,116,32,111,110,101,32,116,105,109,101,
                46,32,78,111,32,111,110,103,111,105,110,103,32,101,120,101,99,
                117,116,105,111,110,32,114,101,97,100,105,110,103,32,99,111,
                100,101,32,97,99,99,101,115,115,32,115,116,114,117,99,116,117,
                114,101,115,32,114,101,97,99,104,101,100,32,102,114,111,109,
                32,97,110,32,111,108,100,32,118,97,108,117,101,32,111,102]}],
             0,false},
            {text,
             [23,42,116,104,101,95,97,99,116,105,118,101,95,99,111,100,101,95,
              105,110,100,101,120,42]},
            {sep,
             [{text,"2can exist after a second round of thread progress."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [144,84,104,101,32,100,101,115,105,103,110,32,99,104,111,105,99,
              101,32,98,101,116,119,101,101,110,32,116,119,111,32,111,114,32,
              116,104,114,101,101,32,103,101,110,101,114,97,116,105,111,110,
              115,32,111,102,32,99,111,100,101,32,97,99,99,101,115,115,32,115,
              116,114,117,99,116,117,114,101,115,32,105,115,32,97,32,116,114,
              97,100,101,45,111,102,102,32,98,101,116,119,101,101,110,32,109,
              101,109,111,114,121,32,99,111,110,115,117,109,112,116,105,111,
              110,32,97,110,100,32,99,111,100,101,32,108,111,97,100,105,110,
              103,32,108,97,116,101,110,99,121,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {sep,
    [{text,
      "i<a name=\"The-Finishing-Sequence_A-Consistent-Code-View\">The-Finishing-Sequence_A-Consistent-Code-View</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [25,35,35,32,65,32,67,111,110,115,105,115,116,101,110,116,32,67,111,
          100,101,32,86,105,101,119]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "wSome native BIFs may need to get a consistent snapshot view of the active code. To do this it is important to only read"}],
             0,false},
            {text,
             [23,42,116,104,101,95,97,99,116,105,118,101,95,99,111,100,101,95,
              105,110,100,101,120,42]},
            {sep,
             [{text,
               [130,111,110,101,32,116,105,109,101,32,97,110,100,32,116,104,
                101,110,32,117,115,101,32,116,104,97,116,32,105,110,100,101,
                120,32,118,97,108,117,101,32,102,111,114,32,97,108,108,32,99,
                111,100,101,32,97,99,99,101,115,115,105,110,103,32,100,117,
                114,105,110,103,32,116,104,101,32,66,73,70,46,32,73,102,32,97,
                32,108,111,97,100,32,111,112,101,114,97,116,105,111,110,32,
                105,115,32,101,120,101,99,117,116,101,100,32,105,110,32,112,
                97,114,97,108,108,101,108,44,32,114,101,97,100,105,110,103]}],
             0,false},
            {text,
             [23,42,116,104,101,95,97,99,116,105,118,101,95,99,111,100,101,95,
              105,110,100,101,120,42]},
            {sep,
             [{text,
               "Za second time might result in a different value, and thereby a different view of the code."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
