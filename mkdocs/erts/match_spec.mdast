{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,{text," # Match Specifications in Erlang"},null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [25,65,32,34,109,97,116,99,104,32,115,112,101,99,105,102,
                      105,99,97,116,105,111,110,34,32,40]}],
                   0,false},
                  {text,"\f*match_spec*"},
                  {sep,
                   [{text,
                     "}) is an Erlang term describing a small \"program\" that tries to match something. It can be used to either control tracing with"}],
                   0,false},
                  {text,"2[erlang:trace_pattern/3](./erlang#trace_pattern/3)"},
                  {sep,
                   [{text,
                     "9or to search for objects in an ETS table with for example"}],
                   0,false},
                  {text,"&[ets:select/2](../stdlib/ets#select/2)"},
                  {sep,
                   [{text,
                     [302,46,32,84,104,101,32,109,97,116,99,104,32,115,112,
                      101,99,105,102,105,99,97,116,105,111,110,32,105,110,32,
                      109,97,110,121,32,119,97,121,115,32,119,111,114,107,115,
                      32,108,105,107,101,32,97,32,115,109,97,108,108,32,102,
                      117,110,99,116,105,111,110,32,105,110,32,69,114,108,97,
                      110,103,44,32,98,117,116,32,105,115,32,105,110,116,101,
                      114,112,114,101,116,101,100,47,99,111,109,112,105,108,
                      101,100,32,98,121,32,116,104,101,32,69,114,108,97,110,
                      103,32,114,117,110,116,105,109,101,32,115,121,115,116,
                      101,109,32,116,111,32,115,111,109,101,116,104,105,110,
                      103,32,109,117,99,104,32,109,111,114,101,32,101,102,102,
                      105,99,105,101,110,116,32,116,104,97,110,32,99,97,108,
                      108,105,110,103,32,97,110,32,69,114,108,97,110,103,32,
                      102,117,110,99,116,105,111,110,46,32,84,104,101,32,109,
                      97,116,99,104,32,115,112,101,99,105,102,105,99,97,116,
                      105,111,110,32,105,115,32,97,108,115,111,32,118,101,114,
                      121,32,108,105,109,105,116,101,100,32,99,111,109,112,97,
                      114,101,100,32,116,111,32,116,104,101,32,101,120,112,
                      114,101,115,115,105,118,101,110,101,115,115,32,111,102,
                      32,114,101,97,108,32,69,114,108,97,110,103,32,102,117,
                      110,99,116,105,111,110,115,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "ÓThe most notable difference between a match specification and an Erlang fun is the syntax. Match specifications are Erlang terms, not Erlang code. Also, a match specification has a strange concept of exceptions:"}],
                0,false}],
              0,true},
             null},
            null}}},
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [21,65,110,32,101,120,99,101,112,116,105,111,110,32,40,115,
                  117,99,104,32,97,115]}],
               0,false},
              {text,"\b*badarg*"},
              {sep,[{text,"\b) in the"}],0,false},
              {text,
               [16,42,77,97,116,99,104,67,111,110,100,105,116,105,111,110,42]},
              {sep,
               [{text,
                 "Cpart, which resembles an Erlang guard, generates immediate failure."}],
               0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [19,65,110,32,101,120,99,101,112,116,105,111,110,32,105,110,
                  32,116,104,101]}],
               0,false},
              {text,"\v*MatchBody*"},
              {sep,
               [{text,
                 "ipart, which resembles the body of an Erlang function, is implicitly caught and results in the single atom"}],
               0,false},
              {text,"\b*'EXIT'*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,{above,{text,"\n## Grammar"},null},null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "GA match specification used in tracing can be described in the following"}],
                  0,false},
                 {text,"\f**informal**"},
                 {sep,[{text,"\bgrammar:"}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {sep,
                            [{text,[1,42]},
                             {text,
                              "*MatchExpression ::= [ MatchFunction, ... ]"}],
                            0,false},
                           {sep,
                            [{text,[1,42]},
                             {text,
                              ";MatchFunction ::= { MatchHead, MatchConditions, MatchBody }"}],
                            0,false}},
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{sep,
                               [{text,
                                 [29,77,97,116,99,104,72,101,97,100,32,58,58,
                                  61,32,77,97,116,99,104,86,97,114,105,97,98,
                                  108,101,32,124]}],
                               0,false},
                              {text,[5,42,39,95,39,42]},
                              {sep,
                               [{text,
                                 [24,124,32,91,32,77,97,116,99,104,72,101,97,
                                  100,80,97,114,116,44,32,46,46,46,32,93]}],
                               0,false}],
                             0,false}],
                           0,false}},
                         {sep,
                          [{text,[1,42]},
                           {sep,
                            [{sep,
                              [{text,
                                "*MatchHeadPart ::= term() | MatchVariable |"}],
                              0,false},
                             {text,[5,42,39,95,39,42]}],
                            0,false}],
                          0,false}},
                        {sep,
                         [{text,[1,42]},
                          {text,
                           [29,77,97,116,99,104,86,97,114,105,97,98,108,101,
                            32,58,58,61,32,39,36,60,110,117,109,98,101,114,62,
                            39]}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{sep,
                            [{text,
                              ",MatchConditions ::= [ MatchCondition, ...] |"}],
                            0,false},
                           {text,[4,42,91,93,42]}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {text,
                         "RMatchCondition ::= { GuardFunction } | { GuardFunction, ConditionExpression, ... }"}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{sep,
                          [{text,
                            [16,66,111,111,108,70,117,110,99,116,105,111,110,
                             32,58,58,61]}],
                          0,false},
                         {text,"\t*is_atom*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\n*is_float*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\f*is_integer*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\t*is_list*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\v*is_number*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\b*is_pid*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\t*is_port*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,
                          [14,42,105,115,95,114,101,102,101,114,101,110,99,
                           101,42]},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\n*is_tuple*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\b*is_map*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\f*is_map_key*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\v*is_binary*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\r*is_function*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\v*is_record*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,
                          [14,42,105,115,95,115,101,113,95,116,114,97,99,101,
                           42]},
                         {sep,[{text,[1,124]}],0,false},
                         {text,[7,42,39,97,110,100,39,42]},
                         {sep,[{text,[1,124]}],0,false},
                         {text,[6,42,39,111,114,39,42]},
                         {sep,[{text,[1,124]}],0,false},
                         {text,[7,42,39,110,111,116,39,42]},
                         {sep,[{text,[1,124]}],0,false},
                         {text,[7,42,39,120,111,114,39,42]},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\v*'andalso'*"},
                         {sep,[{text,[1,124]}],0,false},
                         {text,"\n*'orelse'*"}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {text,
                       "{ConditionExpression ::= ExprMatchVariable | { GuardFunction } | { GuardFunction, ConditionExpression, ... } | TermConstruct"}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,
                        [{text,
                          ">ExprMatchVariable ::= MatchVariable (bound in the MatchHead) |"}],
                        0,false},
                       {text,[6,42,39,36,95,39,42]},
                       {sep,[{text,[1,124]}],0,false},
                       {text,[6,42,39,36,36,39,42]}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{sep,
                       [{text,
                         "7TermConstruct = {{}} | {{ ConditionExpression, ... }} |"}],
                       0,false},
                      {text,[4,42,91,93,42]},
                      {sep,
                       [{text,
                         [30,124,32,91,67,111,110,100,105,116,105,111,110,69,
                          120,112,114,101,115,115,105,111,110,44,32,46,46,46,
                          93,32,124]}],
                       0,false},
                      {text,[5,42,35,123,125,42]},
                      {sep,
                       [{text,
                         "E| #{term() => ConditionExpression, ...} | NonCompositeTerm | Constant"}],
                       0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {text,
                    "6NonCompositeTerm ::= term() (not list or tuple or map)"}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,
                     [{text,
                       [14,67,111,110,115,116,97,110,116,32,58,58,61,32,123]}],
                     0,false},
                    {text,[7,42,99,111,110,115,116,42]},
                    {sep,[{text,"\t, term()}"}],0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,[{text," GuardFunction ::= BoolFunction |"}],0,false},
                   {text,[5,42,97,98,115,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,"\t*element*"},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[4,42,104,100,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,"\b*length*"},
                   {sep,[{text,[1,124]}],0,false},
                   {text,"\t*map_get*"},
                   {sep,[{text,[1,124]}],0,false},
                   {text,"\n*map_size*"},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[6,42,110,111,100,101,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[7,42,114,111,117,110,100,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[6,42,115,105,122,101,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,"\n*bit_size*"},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[4,42,116,108,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[7,42,116,114,117,110,99,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[5,42,39,43,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[5,42,39,45,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[5,42,39,42,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[7,42,39,100,105,118,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[7,42,39,114,101,109,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,"\b*'band'*"},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[7,42,39,98,111,114,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,"\b*'bxor'*"},
                   {sep,[{text,[1,124]}],0,false},
                   {text,"\b*'bnot'*"},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[7,42,39,98,115,108,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[7,42,39,98,115,114,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[5,42,39,62,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[6,42,39,62,61,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[5,42,39,60,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[6,42,39,61,60,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[7,42,39,61,58,61,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[6,42,39,61,61,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[7,42,39,61,47,61,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[6,42,39,47,61,39,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,[6,42,115,101,108,102,42]},
                   {sep,[{text,[1,124]}],0,false},
                   {text,"\t*get_tcw*"}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {text,
                 [28,77,97,116,99,104,66,111,100,121,32,58,58,61,32,91,32,65,
                  99,116,105,111,110,84,101,114,109,32,93]}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {text,"/ActionTerm ::= ConditionExpression | ActionCall"}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {text,
               "CActionCall ::= {ActionFunction} | {ActionFunction, ActionTerm, ...}"}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [18,65,99,116,105,111,110,70,117,110,99,116,105,111,110,32,
                   58,58,61]}],
                0,false},
               {text,
                [15,42,115,101,116,95,115,101,113,95,116,111,107,101,110,42]},
               {sep,[{text,[1,124]}],0,false},
               {text,
                [15,42,103,101,116,95,115,101,113,95,116,111,107,101,110,42]},
               {sep,[{text,[1,124]}],0,false},
               {text,"\t*message*"},
               {sep,[{text,[1,124]}],0,false},
               {text,[14,42,114,101,116,117,114,110,95,116,114,97,99,101,42]},
               {sep,[{text,[1,124]}],0,false},
               {text,
                [17,42,101,120,99,101,112,116,105,111,110,95,116,114,97,99,
                 101,42]},
               {sep,[{text,[1,124]}],0,false},
               {text,[14,42,112,114,111,99,101,115,115,95,100,117,109,112,42]},
               {sep,[{text,[1,124]}],0,false},
               {text,[14,42,101,110,97,98,108,101,95,116,114,97,99,101,42]},
               {sep,[{text,[1,124]}],0,false},
               {text,
                [15,42,100,105,115,97,98,108,101,95,116,114,97,99,101,42]},
               {sep,[{text,[1,124]}],0,false},
               {text,[7,42,116,114,97,99,101,42]},
               {sep,[{text,[1,124]}],0,false},
               {text,"\t*display*"},
               {sep,[{text,[1,124]}],0,false},
               {text,"\b*caller*"},
               {sep,[{text,[1,124]}],0,false},
               {text,"\t*set_tcw*"},
               {sep,[{text,[1,124]}],0,false},
               {text,"\b*silent*"}],
              0,false}],
            0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [29,65,32,109,97,116,99,104,32,115,112,101,99,105,102,105,
                     99,97,116,105,111,110,32,117,115,101,100,32,105,110]}],
                  0,false},
                 {text,
                  [19,91,115,116,100,108,105,98,47,101,116,115,93,40,46,47,
                   101,116,115,41]},
                 {sep,[{text,"!can be described in the following"}],0,false},
                 {text,"\f**informal**"},
                 {sep,[{text,"\bgrammar:"}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {sep,
                         [{text,[1,42]},
                          {text,
                           "*MatchExpression ::= [ MatchFunction, ... ]"}],
                         0,false},
                        {sep,
                         [{text,[1,42]},
                          {text,
                           ";MatchFunction ::= { MatchHead, MatchConditions, MatchBody }"}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{sep,
                            [{text,
                              [29,77,97,116,99,104,72,101,97,100,32,58,58,61,
                               32,77,97,116,99,104,86,97,114,105,97,98,108,
                               101,32,124]}],
                            0,false},
                           {text,[5,42,39,95,39,42]},
                           {sep,
                            [{text,
                              [24,124,32,123,32,77,97,116,99,104,72,101,97,
                               100,80,97,114,116,44,32,46,46,46,32,125]}],
                            0,false}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{sep,
                           [{text,
                             "*MatchHeadPart ::= term() | MatchVariable |"}],
                           0,false},
                          {text,[5,42,39,95,39,42]}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {text,
                        [29,77,97,116,99,104,86,97,114,105,97,98,108,101,32,
                         58,58,61,32,39,36,60,110,117,109,98,101,114,62,39]}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{sep,
                         [{text,
                           ",MatchConditions ::= [ MatchCondition, ...] |"}],
                         0,false},
                        {text,[4,42,91,93,42]}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {text,
                      "RMatchCondition ::= { GuardFunction } | { GuardFunction, ConditionExpression, ... }"}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{sep,
                       [{text,
                         [16,66,111,111,108,70,117,110,99,116,105,111,110,32,
                          58,58,61]}],
                       0,false},
                      {text,"\t*is_atom*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\n*is_float*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\f*is_integer*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\t*is_list*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\v*is_number*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\b*is_pid*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\t*is_port*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,
                       [14,42,105,115,95,114,101,102,101,114,101,110,99,101,
                        42]},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\n*is_tuple*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\b*is_map*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\f*map_is_key*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\v*is_binary*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\r*is_function*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\v*is_record*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,[7,42,39,97,110,100,39,42]},
                      {sep,[{text,[1,124]}],0,false},
                      {text,[6,42,39,111,114,39,42]},
                      {sep,[{text,[1,124]}],0,false},
                      {text,[7,42,39,110,111,116,39,42]},
                      {sep,[{text,[1,124]}],0,false},
                      {text,[7,42,39,120,111,114,39,42]},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\v*'andalso'*"},
                      {sep,[{text,[1,124]}],0,false},
                      {text,"\n*'orelse'*"}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {text,
                    "{ConditionExpression ::= ExprMatchVariable | { GuardFunction } | { GuardFunction, ConditionExpression, ... } | TermConstruct"}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,
                     [{text,
                       ">ExprMatchVariable ::= MatchVariable (bound in the MatchHead) |"}],
                     0,false},
                    {text,[6,42,39,36,95,39,42]},
                    {sep,[{text,[1,124]}],0,false},
                    {text,[6,42,39,36,36,39,42]}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,
                    [{text,
                      "7TermConstruct = {{}} | {{ ConditionExpression, ... }} |"}],
                    0,false},
                   {text,[4,42,91,93,42]},
                   {sep,
                    [{text,
                      "h| [ConditionExpression, ...] | #{} | #{term() => ConditionExpression, ...} | NonCompositeTerm | Constant"}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {text,
                 "6NonCompositeTerm ::= term() (not list or tuple or map)"}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,
                    [14,67,111,110,115,116,97,110,116,32,58,58,61,32,123]}],
                  0,false},
                 {text,[7,42,99,111,110,115,116,42]},
                 {sep,[{text,"\t, term()}"}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text," GuardFunction ::= BoolFunction |"}],0,false},
                {text,[5,42,97,98,115,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,"\t*element*"},
                {sep,[{text,[1,124]}],0,false},
                {text,[4,42,104,100,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,"\b*length*"},
                {sep,[{text,[1,124]}],0,false},
                {text,"\t*map_get*"},
                {sep,[{text,[1,124]}],0,false},
                {text,"\n*map_size*"},
                {sep,[{text,[1,124]}],0,false},
                {text,[6,42,110,111,100,101,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[7,42,114,111,117,110,100,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[6,42,115,105,122,101,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,"\n*bit_size*"},
                {sep,[{text,[1,124]}],0,false},
                {text,[4,42,116,108,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[7,42,116,114,117,110,99,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[5,42,39,43,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[5,42,39,45,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[5,42,39,42,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[7,42,39,100,105,118,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[7,42,39,114,101,109,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,"\b*'band'*"},
                {sep,[{text,[1,124]}],0,false},
                {text,[7,42,39,98,111,114,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,"\b*'bxor'*"},
                {sep,[{text,[1,124]}],0,false},
                {text,"\b*'bnot'*"},
                {sep,[{text,[1,124]}],0,false},
                {text,[7,42,39,98,115,108,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[7,42,39,98,115,114,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[5,42,39,62,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[6,42,39,62,61,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[5,42,39,60,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[6,42,39,61,60,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[7,42,39,61,58,61,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[6,42,39,61,61,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[7,42,39,61,47,61,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[6,42,39,47,61,39,42]},
                {sep,[{text,[1,124]}],0,false},
                {text,[6,42,115,101,108,102,42]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {text,"*MatchBody ::= [ ConditionExpression, ... ]"}],
            0,false}}],
         0,false}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [24,35,35,32,70,117,110,99,116,105,111,110,32,68,101,115,99,114,
              105,112,116,105,111,110,115]},
            null},
           null}},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {text,
               "9## Functions Allowed in All Types of Match Specifications"},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [24,84,104,101,32,102,117,110,99,116,105,111,110,115,32,
                      97,108,108,111,119,101,100,32,105,110]}],
                   0,false},
                  {text,"\f*match_spec*"},
                  {sep,
                   [{text,
                     [16,119,111,114,107,32,97,115,32,102,111,108,108,111,119,
                      115,58]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,
             {text,[4,60,100,108,62]},
             {nest,4,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,
                                     [{sep,
                                       [{text,[7,105,115,95,97,116,111,109]},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,"\bis_float"},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,"\nis_integer"},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,[7,105,115,95,108,105,115,116]},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,"\tis_number"},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,[6,105,115,95,112,105,100]},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,[7,105,115,95,112,111,114,116]},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,"\fis_reference"},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,"\bis_tuple"},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,[6,105,115,95,109,97,112]},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,"\tis_binary"},
                                        {sep,[{text,[1,44]}],0,false},
                                        {text,"\vis_function"}],
                                       0,false}],
                                     0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,
                                              "7Same as the corresponding guard tests in Erlang, return"}],
                                            0,false},
                                           {text,[4,116,114,117,101]},
                                           {sep,[{text,[2,111,114]}],0,false},
                                           {text,[5,102,97,108,115,101]},
                                           {sep,[{text,[1,46]}],0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,[{text,"\tis_record"}],0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            "$Takes an additional parameter, which"}],
                                          0,false},
                                         {text,[4,109,117,115,116]},
                                         {sep,
                                          [{text,
                                            [16,98,101,32,116,104,101,32,114,
                                             101,115,117,108,116,32,111,102]}],
                                          0,false},
                                         {text,
                                          " record_info(size, <record_type>)"},
                                         {sep,[{text,"\t, like in"}],0,false},
                                         {text,
                                          "6{is_record, '$1', rectype, record_info(size, rectype)}"},
                                         {sep,[{text,[1,46]}],0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,[{text,[5,39,110,111,116,39]}],0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          "0Negates its single argument (anything other than"}],
                                        0,false},
                                       {text,[5,102,97,108,115,101]},
                                       {sep,
                                        [{text,[5,103,105,118,101,115]}],
                                        0,false},
                                       {text,[5,102,97,108,115,101]},
                                       {sep,[{text,[2,41,46]}],0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,[5,39,97,110,100,39]}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,[7,82,101,116,117,114,110,115]}],
                                      0,false},
                                     {text,[4,116,114,117,101]},
                                     {sep,
                                      [{text,
                                        "@if all its arguments (variable length argument list) evaluate to"}],
                                      0,false},
                                     {text,[4,116,114,117,101]},
                                     {sep,[{text,"\v, otherwise"}],0,false},
                                     {text,[5,102,97,108,115,101]},
                                     {sep,
                                      [{text,
                                        " . Evaluation order is undefined."}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,[{text,[4,39,111,114,39]}],0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,[7,82,101,116,117,114,110,115]}],
                                    0,false},
                                   {text,[4,116,114,117,101]},
                                   {sep,
                                    [{text,
                                      "$if any of its arguments evaluates to"}],
                                    0,false},
                                   {text,[4,116,114,117,101]},
                                   {sep,
                                    [{text,
                                      "?. Variable length argument list. Evaluation order is undefined."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,"\t'andalso'"}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,[{text,"\bWorks as"}],0,false},
                                 {text,[5,39,97,110,100,39]},
                                 {sep,
                                  [{text,
                                    "W, but quits evaluating its arguments when one argument evaluates to something else than"}],
                                  0,false},
                                 {text,[4,116,114,117,101]},
                                 {sep,
                                  [{text,
                                    "(. Arguments are evaluated left to right."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,[{text,"\b'orelse'"}],0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,[{text,"\bWorks as"}],0,false},
                               {text,[4,39,111,114,39]},
                               {sep,
                                [{text,
                                  "C, but quits evaluating as soon as one of its arguments evaluates to"}],
                                0,false},
                               {text,[4,116,114,117,101]},
                               {sep,
                                [{text,
                                  "(. Arguments are evaluated left to right."}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,[{text,[5,39,120,111,114,39]}],0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "(Only two arguments, of which one must be"}],
                              0,false},
                             {text,[4,116,114,117,101]},
                             {sep,[{text,"\rand the other"}],0,false},
                             {text,[5,102,97,108,115,101]},
                             {sep,[{text,"\tto return"}],0,false},
                             {text,[4,116,114,117,101]},
                             {sep,[{text,"\v; otherwise"}],0,false},
                             {text,[5,39,120,111,114,39]},
                             {sep,
                              [{text,
                                [14,114,101,116,117,114,110,115,32,102,97,108,
                                 115,101,46]}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{sep,
                        [{text,[3,97,98,115]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[7,101,108,101,109,101,110,116]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[2,104,100]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[6,108,101,110,103,116,104]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[7,109,97,112,95,103,101,116]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,"\bmap_size"},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[4,110,111,100,101]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[5,114,111,117,110,100]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[4,115,105,122,101]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,"\bbit_size"},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[2,116,108]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[5,116,114,117,110,99]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[3,39,43,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[3,39,45,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[3,39,42,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[5,39,100,105,118,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[5,39,114,101,109,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[6,39,98,97,110,100,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[5,39,98,111,114,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[6,39,98,120,111,114,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[6,39,98,110,111,116,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[5,39,98,115,108,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[5,39,98,115,114,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[3,39,62,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[4,39,62,61,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[3,39,60,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[4,39,61,60,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[5,39,61,58,61,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[4,39,61,61,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[5,39,61,47,61,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[4,39,47,61,39]},
                         {sep,[{text,[1,44]}],0,false},
                         {text,[4,115,101,108,102]}],
                        0,false}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "ySame as the corresponding Erlang BIFs (or operators). In case of bad arguments, the result depends on the context. In the"}],
                            0,false},
                           {text,
                            [15,77,97,116,99,104,67,111,110,100,105,116,105,
                             111,110,115]},
                           {sep,
                            [{text,
                              "Tpart of the expression, the test fails immediately (like in an Erlang guard). In the"}],
                            0,false},
                           {text,"\tMatchBody"},
                           {sep,
                            [{text,
                              "Gpart, exceptions are implicitly caught and the call results in the atom"}],
                            0,false},
                           {text,[6,39,69,88,73,84,39]},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}}}},
            {text,[5,60,47,100,108,62]}}],
          0,false},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,{text,"%## Functions Allowed Only for Tracing"},null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "7The functions allowed only for tracing work as follows:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,
             {text,[4,60,100,108,62]},
             {nest,4,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{text,[4,60,100,116,62]},
                                                {sep,
                                                 [{text,"\fis_seq_trace"}],
                                                 0,false},
                                                {text,[5,60,47,100,116,62]}],
                                               0,true},
                                              null},
                                             null}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{text,[4,60,100,100,62]},
                                                {above,
                                                 {above,
                                                  {above,{text,[0]},null},
                                                  null},
                                                 {above,
                                                  {above,
                                                   {sep,
                                                    [{sep,
                                                      [{sep,
                                                        [{text,
                                                          [7,82,101,116,117,
                                                           114,110,115]}],
                                                        0,false},
                                                       {text,
                                                        [4,116,114,117,101]},
                                                       {sep,
                                                        [{text,
                                                          "Eif a sequential trace token is set for the current process, otherwise"}],
                                                        0,false},
                                                       {text,
                                                        [5,102,97,108,115,
                                                         101]},
                                                       {sep,
                                                        [{text,[1,46]}],
                                                        0,false}],
                                                      0,false}],
                                                    0,true},
                                                   null},
                                                  null}},
                                                {text,[5,60,47,100,100,62]}],
                                               0,true},
                                              null},
                                             null}}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{text,[4,60,100,116,62]},
                                               {sep,
                                                [{text,"\rset_seq_token"}],
                                                0,false},
                                               {text,[5,60,47,100,116,62]}],
                                              0,true},
                                             null},
                                            null}}},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{text,[4,60,100,100,62]},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{sep,
                                                    [{sep,
                                                      [{text,"\bWorks as"}],
                                                      0,false},
                                                     {text,
                                                      [21,115,101,113,95,116,
                                                       114,97,99,101,58,115,
                                                       101,116,95,116,111,107,
                                                       101,110,47,50]},
                                                     {sep,
                                                      [{text,
                                                        "\r, but returns"}],
                                                      0,false},
                                                     {text,
                                                      [4,116,114,117,101]},
                                                     {sep,
                                                      [{text,
                                                        [15,111,110,32,115,
                                                         117,99,99,101,115,
                                                         115,44,32,97,110,
                                                         100]}],
                                                      0,false},
                                                     {text,
                                                      [6,39,69,88,73,84,39]},
                                                     {sep,
                                                      [{text,
                                                        "-on error or bad argument. Only allowed in the"}],
                                                      0,false},
                                                     {text,"\tMatchBody"},
                                                     {sep,
                                                      [{text,
                                                        "#part and only allowed when tracing."}],
                                                      0,false}],
                                                    0,false}],
                                                  0,true},
                                                 null},
                                                null}},
                                              {text,[5,60,47,100,100,62]}],
                                             0,true},
                                            null},
                                           null}}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{text,[4,60,100,116,62]},
                                             {sep,
                                              [{text,"\rget_seq_token"}],
                                              0,false},
                                             {text,[5,60,47,100,116,62]}],
                                            0,true},
                                           null},
                                          null}}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,100,62]},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      [7,83,97,109,101,32,97,
                                                       115]}],
                                                    0,false},
                                                   {text,
                                                    [21,115,101,113,95,116,
                                                     114,97,99,101,58,103,101,
                                                     116,95,116,111,107,101,
                                                     110,47,48]},
                                                   {sep,
                                                    [{text,
                                                      [23,97,110,100,32,111,
                                                       110,108,121,32,97,108,
                                                       108,111,119,101,100,32,
                                                       105,110,32,116,104,
                                                       101]}],
                                                    0,false},
                                                   {text,"\tMatchBody"},
                                                   {sep,
                                                    [{text,
                                                      [18,112,97,114,116,32,
                                                       119,104,101,110,32,116,
                                                       114,97,99,105,110,103,
                                                       46]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {text,[5,60,47,100,100,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,116,62]},
                                           {sep,
                                            [{text,
                                              [7,109,101,115,115,97,103,101]}],
                                            0,false},
                                           {text,[5,60,47,100,116,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,100,62]},
                                          {sep,
                                           [{above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{text,
                                                    [157,83,101,116,115,32,97,
                                                     110,32,97,100,100,105,
                                                     116,105,111,110,97,108,
                                                     32,109,101,115,115,97,
                                                     103,101,32,97,112,112,
                                                     101,110,100,101,100,32,
                                                     116,111,32,116,104,101,
                                                     32,116,114,97,99,101,32,
                                                     109,101,115,115,97,103,
                                                     101,32,115,101,110,116,
                                                     46,32,79,110,101,32,99,
                                                     97,110,32,111,110,108,
                                                     121,32,115,101,116,32,
                                                     111,110,101,32,97,100,
                                                     100,105,116,105,111,110,
                                                     97,108,32,109,101,115,
                                                     115,97,103,101,32,105,
                                                     110,32,116,104,101,32,98,
                                                     111,100,121,46,32,76,97,
                                                     116,101,114,32,99,97,108,
                                                     108,115,32,114,101,112,
                                                     108,97,99,101,32,116,104,
                                                     101,32,97,112,112,101,
                                                     110,100,101,100,32,109,
                                                     101,115,115,97,103,101,
                                                     46]}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      [18,65,115,32,97,32,115,
                                                       112,101,99,105,97,108,
                                                       32,99,97,115,101,44]}],
                                                    0,false},
                                                   {text,
                                                    [16,123,109,101,115,115,
                                                     97,103,101,44,32,102,97,
                                                     108,115,101,125]},
                                                   {sep,
                                                    [{text,
                                                      "¼disables sending of trace messages ('call' and 'return_to') for this function call, just like if the match specification had not matched. This can be useful if only the side effects of the"}],
                                                    0,false},
                                                   {text,"\tMatchBody"},
                                                   {sep,
                                                    [{text,
                                                      [17,112,97,114,116,32,
                                                       97,114,101,32,100,101,
                                                       115,105,114,101,100,
                                                       46]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      [23,65,110,111,116,104,
                                                       101,114,32,115,112,101,
                                                       99,105,97,108,32,99,97,
                                                       115,101,32,105,115]}],
                                                    0,false},
                                                   {text,
                                                    [15,123,109,101,115,115,
                                                     97,103,101,44,32,116,114,
                                                     117,101,125]},
                                                   {sep,
                                                    [{text,
                                                      [151,44,32,119,104,105,
                                                       99,104,32,115,101,116,
                                                       115,32,116,104,101,32,
                                                       100,101,102,97,117,108,
                                                       116,32,98,101,104,97,
                                                       118,105,111,114,44,32,
                                                       97,115,32,105,102,32,
                                                       116,104,101,32,102,117,
                                                       110,99,116,105,111,110,
                                                       32,104,97,100,32,110,
                                                       111,32,109,97,116,99,
                                                       104,32,115,112,101,99,
                                                       105,102,105,99,97,116,
                                                       105,111,110,59,32,116,
                                                       114,97,99,101,32,109,
                                                       101,115,115,97,103,101,
                                                       32,105,115,32,115,101,
                                                       110,116,32,119,105,116,
                                                       104,32,110,111,32,101,
                                                       120,116,114,97,32,105,
                                                       110,102,111,114,109,97,
                                                       116,105,111,110,32,40,
                                                       105,102,32,110,111,32,
                                                       111,116,104,101,114,32,
                                                       99,97,108,108,115,32,
                                                       116,111]}],
                                                    0,false},
                                                   {text,
                                                    [7,109,101,115,115,97,103,
                                                     101]},
                                                   {sep,
                                                    [{text,
                                                      [17,97,114,101,32,112,
                                                       108,97,99,101,100,32,
                                                       98,101,102,111,114,
                                                       101]}],
                                                    0,false},
                                                   {text,
                                                    [15,123,109,101,115,115,
                                                     97,103,101,44,32,116,114,
                                                     117,101,125]},
                                                   {sep,
                                                    [{text,
                                                      [26,44,32,105,116,32,
                                                       105,115,32,105,110,32,
                                                       102,97,99,116,32,97,32,
                                                       34,110,111,111,112,34,
                                                       41,46]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{sep,
                                                  [{sep,
                                                    [{text,
                                                      "(Takes one argument: the message. Returns"}],
                                                    0,false},
                                                   {text,[4,116,114,117,101]},
                                                   {sep,
                                                    [{text,
                                                      "\eand can only be used in the"}],
                                                    0,false},
                                                   {text,"\tMatchBody"},
                                                   {sep,
                                                    [{text,
                                                      [22,112,97,114,116,32,
                                                       97,110,100,32,119,104,
                                                       101,110,32,116,114,97,
                                                       99,105,110,103,46]}],
                                                    0,false}],
                                                  0,false}],
                                                0,true},
                                               null},
                                              null}}],
                                           0,false},
                                          {text,[5,60,47,100,100,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,116,62]},
                                         {sep,
                                          [{text,"\freturn_trace"}],
                                          0,false},
                                         {text,[5,60,47,100,116,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,100,62]},
                                        {sep,
                                         [{above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{sep,
                                                [{sep,
                                                  [{text,"\bCauses a"}],
                                                  0,false},
                                                 {text,"\vreturn_from"},
                                                 {sep,
                                                  [{text,
                                                    "[trace message to be sent upon return from the current function. Takes no arguments, returns"}],
                                                  0,false},
                                                 {text,[4,116,114,117,101]},
                                                 {sep,
                                                  [{text,
                                                    "\eand can only be used in the"}],
                                                  0,false},
                                                 {text,"\tMatchBody"},
                                                 {sep,
                                                  [{text,
                                                    ",part when tracing. If the process trace flag"}],
                                                  0,false},
                                                 {text,
                                                  [6,115,105,108,101,110,116]},
                                                 {sep,
                                                  [{text,
                                                    [14,105,115,32,97,99,116,
                                                     105,118,101,44,32,116,
                                                     104,101]}],
                                                  0,false},
                                                 {text,"\vreturn_from"},
                                                 {sep,
                                                  [{text,
                                                    "\etrace message is inhibited."}],
                                                  0,false}],
                                                0,false}],
                                              0,true},
                                             null},
                                            null}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{sep,
                                                [{text,"\bWarning:"},
                                                 {sep,
                                                  [{text,
                                                    [399,73,102,32,116,104,
                                                     101,32,116,114,97,99,101,
                                                     100,32,102,117,110,99,
                                                     116,105,111,110,32,105,
                                                     115,32,116,97,105,108,45,
                                                     114,101,99,117,114,115,
                                                     105,118,101,44,32,116,
                                                     104,105,115,32,109,97,
                                                     116,99,104,32,115,112,
                                                     101,99,105,102,105,99,97,
                                                     116,105,111,110,32,102,
                                                     117,110,99,116,105,111,
                                                     110,32,100,101,115,116,
                                                     114,111,121,115,32,116,
                                                     104,97,116,32,112,114,
                                                     111,112,101,114,116,121,
                                                     46,32,72,101,110,99,101,
                                                     44,32,105,102,32,97,32,
                                                     109,97,116,99,104,32,115,
                                                     112,101,99,105,102,105,
                                                     99,97,116,105,111,110,32,
                                                     101,120,101,99,117,116,
                                                     105,110,103,32,116,104,
                                                     105,115,32,102,117,110,
                                                     99,116,105,111,110,32,
                                                     105,115,32,117,115,101,
                                                     100,32,111,110,32,97,32,
                                                     112,101,114,112,101,116,
                                                     117,97,108,32,115,101,
                                                     114,118,101,114,32,112,
                                                     114,111,99,101,115,115,
                                                     44,32,105,116,32,99,97,
                                                     110,32,111,110,108,121,
                                                     32,98,101,32,97,99,116,
                                                     105,118,101,32,102,111,
                                                     114,32,97,32,108,105,109,
                                                     105,116,101,100,32,112,
                                                     101,114,105,111,100,32,
                                                     111,102,32,116,105,109,
                                                     101,44,32,111,114,32,116,
                                                     104,101,32,101,109,117,
                                                     108,97,116,111,114,32,
                                                     119,105,108,108,32,101,
                                                     118,101,110,116,117,97,
                                                     108,108,121,32,117,115,
                                                     101,32,97,108,108,32,109,
                                                     101,109,111,114,121,32,
                                                     105,110,32,116,104,101,
                                                     32,104,111,115,116,32,
                                                     109,97,99,104,105,110,
                                                     101,32,97,110,100,32,99,
                                                     114,97,115,104,46,32,73,
                                                     102,32,116,104,105,115,
                                                     32,109,97,116,99,104,32,
                                                     115,112,101,99,105,102,
                                                     105,99,97,116,105,111,
                                                     110,32,102,117,110,99,
                                                     116,105,111,110,32,105,
                                                     115,32,105,110,104,105,
                                                     98,105,116,101,100,32,
                                                     117,115,105,110,103,32,
                                                     112,114,111,99,101,115,
                                                     115,32,116,114,97,99,101,
                                                     32,102,108,97,103]}],
                                                  0,false},
                                                 {text,
                                                  [6,115,105,108,101,110,116]},
                                                 {sep,
                                                  [{text,
                                                    "#, tail-recursiveness still remains."}],
                                                  0,false}],
                                                0,false}],
                                              0,true},
                                             null},
                                            null}}],
                                         0,false},
                                        {text,[5,60,47,100,100,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,
                                        [{text,
                                          [15,101,120,99,101,112,116,105,111,
                                           110,95,116,114,97,99,101]}],
                                        0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,100,62]},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{sep,
                                              [{text,"\bWorks as"}],
                                              0,false},
                                             {text,"\freturn_trace"},
                                             {sep,
                                              [{text,
                                                ">plus; if the traced function exits because of an exception, an"}],
                                              0,false},
                                             {text,
                                              [14,101,120,99,101,112,116,105,
                                               111,110,95,102,114,111,109]},
                                             {sep,
                                              [{text,
                                                "Itrace message is generated, regardless of the exception is caught or not."}],
                                              0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {text,[5,60,47,100,100,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,[{text,"\fprocess_dump"}],0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,
                                              "uReturns some textual information about the current process as a binary. Takes no arguments and is only allowed in the"}],
                                            0,false},
                                           {text,"\tMatchBody"},
                                           {sep,
                                            [{text,
                                              [18,112,97,114,116,32,119,104,
                                               101,110,32,116,114,97,99,105,
                                               110,103,46]}],
                                            0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,[{text,"\fenable_trace"}],0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {sep,
                                   [{above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,
                                              "FWith one parameter this function turns on tracing like the Erlang call"}],
                                            0,false},
                                           {text,
                                            " erlang:trace(self(), true, [P2])"},
                                           {sep,
                                            [{text,
                                              [7,44,32,119,104,101,114,101]}],
                                            0,false},
                                           {text,[2,80,50]},
                                           {sep,
                                            [{text,
                                              [19,105,115,32,116,104,101,32,
                                               112,97,114,97,109,101,116,101,
                                               114,32,116,111]}],
                                            0,false},
                                           {text,"\fenable_trace"},
                                           {sep,[{text,[1,46]}],0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,
                                              "ÕWith two parameters, the first parameter is to be either a process identifier or the registered name of a process. In this case tracing is turned on for the designated process in the same way as in the Erlang call"}],
                                            0,false},
                                           {text,
                                            [28,101,114,108,97,110,103,58,116,
                                             114,97,99,101,40,80,49,44,32,116,
                                             114,117,101,44,32,91,80,50,93,
                                             41]},
                                           {sep,
                                            [{text,
                                              [7,44,32,119,104,101,114,101]}],
                                            0,false},
                                           {text,[2,80,49]},
                                           {sep,
                                            [{text,
                                              [16,105,115,32,116,104,101,32,
                                               102,105,114,115,116,32,97,110,
                                               100]}],
                                            0,false},
                                           {text,[2,80,50]},
                                           {sep,
                                            [{text,
                                              "#is the second argument. The process"}],
                                            0,false},
                                           {text,[2,80,49]},
                                           {sep,
                                            [{text,
                                              "\\gets its trace messages sent to the same tracer as the process executing the statement uses."}],
                                            0,false},
                                           {text,[2,80,49]},
                                           {text,[6,99,97,110,110,111,116]},
                                           {sep,
                                            [{text,
                                              [19,98,101,32,111,110,101,32,
                                               111,102,32,116,104,101,32,97,
                                               116,111,109,115]}],
                                            0,false},
                                           {text,[3,97,108,108]},
                                           {sep,[{text,[1,44]}],0,false},
                                           {text,[3,110,101,119]},
                                           {sep,[{text,[2,111,114]}],0,false},
                                           {text,"\bexisting"},
                                           {sep,
                                            [{text,
                                              "#(unless they are registered names)."}],
                                            0,false},
                                           {text,[2,80,50]},
                                           {text,[6,99,97,110,110,111,116]},
                                           {sep,[{text,[2,98,101]}],0,false},
                                           {text,"\rcpu_timestamp"},
                                           {sep,[{text,[2,111,114]}],0,false},
                                           {text,[6,116,114,97,99,101,114]},
                                           {sep,[{text,[1,46]}],0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,
                                              [7,82,101,116,117,114,110,115]}],
                                            0,false},
                                           {text,[4,116,114,117,101]},
                                           {sep,
                                            [{text,
                                              "\eand can only be used in the"}],
                                            0,false},
                                           {text,"\tMatchBody"},
                                           {sep,
                                            [{text,
                                              [18,112,97,114,116,32,119,104,
                                               101,110,32,116,114,97,99,105,
                                               110,103,46]}],
                                            0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}}],
                                   0,false},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,[{text,"\rdisable_trace"}],0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {sep,
                                 [{above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            "FWith one parameter this function disables tracing like the Erlang call"}],
                                          0,false},
                                         {text,
                                          "!erlang:trace(self(), false, [P2])"},
                                         {sep,
                                          [{text,
                                            [7,44,32,119,104,101,114,101]}],
                                          0,false},
                                         {text,[2,80,50]},
                                         {sep,
                                          [{text,
                                            [19,105,115,32,116,104,101,32,112,
                                             97,114,97,109,101,116,101,114,32,
                                             116,111]}],
                                          0,false},
                                         {text,"\rdisable_trace"},
                                         {sep,[{text,[1,46]}],0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            ":With two parameters this function works as the Erlang call"}],
                                          0,false},
                                         {text,
                                          [29,101,114,108,97,110,103,58,116,
                                           114,97,99,101,40,80,49,44,32,102,
                                           97,108,115,101,44,32,91,80,50,93,
                                           41]},
                                         {sep,
                                          [{text,
                                            [7,44,32,119,104,101,114,101]}],
                                          0,false},
                                         {text,[2,80,49]},
                                         {sep,
                                          [{text,
                                            [131,99,97,110,32,98,101,32,101,
                                             105,116,104,101,114,32,97,32,112,
                                             114,111,99,101,115,115,32,105,
                                             100,101,110,116,105,102,105,101,
                                             114,32,111,114,32,97,32,114,101,
                                             103,105,115,116,101,114,101,100,
                                             32,110,97,109,101,32,97,110,100,
                                             32,105,115,32,115,112,101,99,105,
                                             102,105,101,100,32,97,115,32,116,
                                             104,101,32,102,105,114,115,116,
                                             32,97,114,103,117,109,101,110,
                                             116,32,116,111,32,116,104,101,32,
                                             109,97,116,99,104,32,115,112,101,
                                             99,105,102,105,99,97,116,105,111,
                                             110,32,102,117,110,99,116,105,
                                             111,110,46]}],
                                          0,false},
                                         {text,[2,80,50]},
                                         {text,[6,99,97,110,110,111,116]},
                                         {sep,[{text,[2,98,101]}],0,false},
                                         {text,"\rcpu_timestamp"},
                                         {sep,[{text,[2,111,114]}],0,false},
                                         {text,[6,116,114,97,99,101,114]},
                                         {sep,[{text,[1,46]}],0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            [7,82,101,116,117,114,110,115]}],
                                          0,false},
                                         {text,[4,116,114,117,101]},
                                         {sep,
                                          [{text,
                                            "\eand can only be used in the"}],
                                          0,false},
                                         {text,"\tMatchBody"},
                                         {sep,
                                          [{text,
                                            [18,112,97,114,116,32,119,104,101,
                                             110,32,116,114,97,99,105,110,103,
                                             46]}],
                                          0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}}],
                                 0,false},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,[5,116,114,97,99,101]}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {sep,
                               [{above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          [282,87,105,116,104,32,116,119,111,
                                           32,112,97,114,97,109,101,116,101,
                                           114,115,32,116,104,105,115,32,102,
                                           117,110,99,116,105,111,110,32,116,
                                           97,107,101,115,32,97,32,108,105,
                                           115,116,32,111,102,32,116,114,97,
                                           99,101,32,102,108,97,103,115,32,
                                           116,111,32,100,105,115,97,98,108,
                                           101,32,97,115,32,102,105,114,115,
                                           116,32,112,97,114,97,109,101,116,
                                           101,114,32,97,110,100,32,97,32,108,
                                           105,115,116,32,111,102,32,116,114,
                                           97,99,101,32,102,108,97,103,115,32,
                                           116,111,32,101,110,97,98,108,101,
                                           32,97,115,32,115,101,99,111,110,
                                           100,32,112,97,114,97,109,101,116,
                                           101,114,46,32,76,111,103,105,99,97,
                                           108,108,121,44,32,116,104,101,32,
                                           100,105,115,97,98,108,101,32,108,
                                           105,115,116,32,105,115,32,97,112,
                                           112,108,105,101,100,32,102,105,114,
                                           115,116,44,32,98,117,116,32,101,
                                           102,102,101,99,116,105,118,101,108,
                                           121,32,97,108,108,32,99,104,97,110,
                                           103,101,115,32,97,114,101,32,97,
                                           112,112,108,105,101,100,32,97,116,
                                           111,109,105,99,97,108,108,121,46,
                                           32,84,104,101,32,116,114,97,99,101,
                                           32,102,108,97,103,115,32,97,114,
                                           101,32,116,104,101,32,115,97,109,
                                           101,32,97,115,32,102,111,114]}],
                                        0,false},
                                       {text,
                                        [14,101,114,108,97,110,103,58,116,114,
                                         97,99,101,47,51]},
                                       {sep,
                                        [{text,
                                          [15,44,32,110,111,116,32,105,110,99,
                                           108,117,100,105,110,103]}],
                                        0,false},
                                       {text,"\rcpu_timestamp"},
                                       {sep,
                                        [{text,
                                          [15,44,32,98,117,116,32,105,110,99,
                                           108,117,100,105,110,103]}],
                                        0,false},
                                       {text,[6,116,114,97,99,101,114]},
                                       {sep,[{text,[1,46]}],0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{text,
                                        [284,73,102,32,97,32,116,114,97,99,
                                         101,114,32,105,115,32,115,112,101,99,
                                         105,102,105,101,100,32,105,110,32,98,
                                         111,116,104,32,108,105,115,116,115,
                                         44,32,116,104,101,32,116,114,97,99,
                                         101,114,32,105,110,32,116,104,101,32,
                                         101,110,97,98,108,101,32,108,105,115,
                                         116,32,116,97,107,101,115,32,112,114,
                                         101,99,101,100,101,110,99,101,46,32,
                                         73,102,32,110,111,32,116,114,97,99,
                                         101,114,32,105,115,32,115,112,101,99,
                                         105,102,105,101,100,44,32,116,104,
                                         101,32,115,97,109,101,32,116,114,97,
                                         99,101,114,32,97,115,32,116,104,101,
                                         32,112,114,111,99,101,115,115,32,101,
                                         120,101,99,117,116,105,110,103,32,
                                         116,104,101,32,109,97,116,99,104,32,
                                         115,112,101,99,105,102,105,99,97,116,
                                         105,111,110,32,105,115,32,117,115,
                                         101,100,32,40,110,111,116,32,116,104,
                                         101,32,109,101,116,97,32,116,114,97,
                                         99,101,114,41,46,32,73,102,32,116,
                                         104,97,116,32,112,114,111,99,101,115,
                                         115,32,100,111,101,115,110,39,116,32,
                                         104,97,118,101,32,116,114,97,99,101,
                                         114,32,101,105,116,104,101,114,44,32,
                                         116,104,101,110,32,116,114,97,99,101,
                                         32,102,108,97,103,115,32,97,114,101,
                                         32,105,103,110,111,114,101,100,46]}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,[{text,"\fWhen using a"}],0,false},
                                       {text,"\rtracer module"},
                                       {sep,
                                        [{text,
                                          "m, the module must be loaded before the match specification is executed. If it is not loaded, the match fails."}],
                                        0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{text,
                                        "ÍWith three parameters to this function, the first is either a process identifier or the registered name of a process to set trace flags on, the second is the disable list, and the third is the enable list."}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          [7,82,101,116,117,114,110,115]}],
                                        0,false},
                                       {text,[4,116,114,117,101]},
                                       {sep,
                                        [{text,
                                          "Iif any trace property was changed for the trace target process, otherwise"}],
                                        0,false},
                                       {text,[5,102,97,108,115,101]},
                                       {sep,
                                        [{text,
                                          [25,46,32,67,97,110,32,111,110,108,
                                           121,32,98,101,32,117,115,101,100,
                                           32,105,110,32,116,104,101]}],
                                        0,false},
                                       {text,"\tMatchBody"},
                                       {sep,
                                        [{text,
                                          [18,112,97,114,116,32,119,104,101,
                                           110,32,116,114,97,99,105,110,103,
                                           46]}],
                                        0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}}],
                               0,false},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,[{text,[6,99,97,108,108,101,114]}],0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {sep,
                             [{above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        "'Returns the calling function as a tuple"}],
                                      0,false},
                                     {text,
                                      [25,123,77,111,100,117,108,101,44,32,70,
                                       117,110,99,116,105,111,110,44,32,65,
                                       114,105,116,121,125]},
                                     {sep,[{text,"\vor the atom"}],0,false},
                                     {text,"\tundefined"},
                                     {sep,
                                      [{text,
                                        "Eif the calling function cannot be determined. Can only be used in the"}],
                                      0,false},
                                     {text,"\tMatchBody"},
                                     {sep,
                                      [{text,
                                        [18,112,97,114,116,32,119,104,101,110,
                                         32,116,114,97,99,105,110,103,46]}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        "kNotice that if a \"technically built in function\" (that is, a function not written in Erlang) is traced, the"}],
                                      0,false},
                                     {text,[6,99,97,108,108,101,114]},
                                     {sep,
                                      [{text,
                                        "#function sometimes returns the atom"}],
                                      0,false},
                                     {text,"\tundefined"},
                                     {sep,
                                      [{text,
                                        "A. The calling Erlang function is not available during such calls."}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}}],
                             0,false},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,[7,100,105,115,112,108,97,121]}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    "NFor debugging purposes only. Displays the single argument as an Erlang term on"}],
                                  0,false},
                                 {text,[6,115,116,100,111,117,116]},
                                 {sep,
                                  [{text,
                                    "), which is seldom what is wanted. Returns"}],
                                  0,false},
                                 {text,[4,116,114,117,101]},
                                 {sep,
                                  [{text,"\eand can only be used in the"}],
                                  0,false},
                                 {text,"\tMatchBody"},
                                 {sep,
                                  [{text,
                                    [18,112,97,114,116,32,119,104,101,110,32,
                                     116,114,97,99,105,110,103,46]}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{sep,
                            [{text,[7,103,101,116,95,116,99,119]},
                             {text,[7,103,101,116,95,116,99,119]}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {sep,
                         [{above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    "]Takes no argument and returns the value of the node's trace control word. The same is done by"}],
                                  0,false},
                                 {text,
                                  "&erlang:system_info(trace_control_word)"},
                                 {sep,[{text,[1,46]}],0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  "çThe trace control word is a 32-bit unsigned integer intended for generic trace control. The trace control word can be tested and set both from within trace match specifications and with BIFs. This call is only allowed when tracing."}],
                                0,false}],
                              0,true},
                             null},
                            null}}],
                         0,false},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{sep,
                          [{text,[7,115,101,116,95,116,99,119]},
                           {text,[7,115,101,116,95,116,99,119]}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "¦Takes one unsigned integer argument, sets the value of the node's trace control word to the value of the argument, and returns the previous value. The same is done by"}],
                              0,false},
                             {text,
                              "-erlang:system_flag(trace_control_word, Value)"},
                             {sep,
                              [{text,"\e. It is only allowed to use"}],
                              0,false},
                             {text,[7,115,101,116,95,116,99,119]},
                             {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
                             {text,"\tMatchBody"},
                             {sep,
                              [{text,
                                [18,112,97,114,116,32,119,104,101,110,32,116,
                                 114,97,99,105,110,103,46]}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,[6,115,105,108,101,110,116]}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "&Takes one argument. If the argument is"}],
                              0,false},
                             {text,[4,116,114,117,101]},
                             {sep,
                              [{text,
                                [156,44,32,116,104,101,32,99,97,108,108,32,
                                 116,114,97,99,101,32,109,101,115,115,97,103,
                                 101,32,109,111,100,101,32,102,111,114,32,116,
                                 104,101,32,99,117,114,114,101,110,116,32,112,
                                 114,111,99,101,115,115,32,105,115,32,115,101,
                                 116,32,116,111,32,115,105,108,101,110,116,32,
                                 102,111,114,32,116,104,105,115,32,99,97,108,
                                 108,32,97,110,100,32,97,108,108,32,108,97,
                                 116,101,114,32,99,97,108,108,115,44,32,116,
                                 104,97,116,32,105,115,44,32,99,97,108,108,32,
                                 116,114,97,99,101,32,109,101,115,115,97,103,
                                 101,115,32,97,114,101,32,105,110,104,105,98,
                                 105,116,101,100,32,101,118,101,110,32,105,
                                 102]}],
                              0,false},
                             {text,
                              [15,123,109,101,115,115,97,103,101,44,32,116,
                               114,117,101,125]},
                             {sep,
                              [{text,
                                [16,105,115,32,99,97,108,108,101,100,32,105,
                                 110,32,116,104,101]}],
                              0,false},
                             {text,"\tMatchBody"},
                             {sep,
                              [{text,"\epart for a traced function."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                ")This mode can also be activated with flag"}],
                              0,false},
                             {text,[6,115,105,108,101,110,116]},
                             {sep,[{text,[2,116,111]}],0,false},
                             {text,
                              [14,101,114,108,97,110,103,58,116,114,97,99,101,
                               47,51]},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                [18,73,102,32,116,104,101,32,97,114,103,117,
                                 109,101,110,116,32,105,115]}],
                              0,false},
                             {text,[5,102,97,108,115,101]},
                             {sep,
                              [{text,
                                "v, the call trace message mode for the current process is set to normal (non-silent) for this call and all later calls."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                [22,73,102,32,116,104,101,32,97,114,103,117,
                                 109,101,110,116,32,105,115,32,110,111,116]}],
                              0,false},
                             {text,[4,116,114,117,101]},
                             {sep,[{text,[2,111,114]}],0,false},
                             {text,[5,102,97,108,115,101]},
                             {sep,
                              [{text,
                                ",, the call trace message mode is unaffected."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}}}},
            {text,[5,60,47,100,108,62]}}],
          0,false},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
              {sep,
               [{text,[4,32,32,32,32]},
                {sep,
                 [{sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "QAll \"function calls\" must be tuples, even if they take no arguments. The value of"}],
                            0,false},
                           {text,[6,42,115,101,108,102,42]},
                           {sep,[{text,"\ris the atom()"}],0,false},
                           {text,[6,42,115,101,108,102,42]},
                           {sep,
                            [{text,
                              [18,44,32,98,117,116,32,116,104,101,32,118,97,
                               108,117,101,32,111,102]}],
                            0,false},
                           {text,"\b*{self}*"},
                           {sep,
                            [{text,"$is the pid() of the current process."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false}],
                 0,true}],
               0,false}},
             {text,[0]}},
            null},
           null}}],
        0,false}},
      {sep,
       [{text,"'<a name=\"match_target\">match_target</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[15,35,35,32,77,97,116,99,104,32,116,97,114,103,101,116]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [377,69,97,99,104,32,101,120,101,99,117,116,105,111,110,32,
                 111,102,32,97,32,109,97,116,99,104,32,115,112,101,99,105,102,
                 105,99,97,116,105,111,110,32,105,115,32,100,111,110,101,32,
                 97,103,97,105,110,115,116,32,97,32,109,97,116,99,104,32,116,
                 97,114,103,101,116,32,116,101,114,109,46,32,84,104,101,32,
                 102,111,114,109,97,116,32,97,110,100,32,99,111,110,116,101,
                 110,116,32,111,102,32,116,104,101,32,116,97,114,103,101,116,
                 32,116,101,114,109,32,100,101,112,101,110,100,115,32,111,110,
                 32,116,104,101,32,99,111,110,116,101,120,116,32,105,110,32,
                 119,104,105,99,104,32,116,104,101,32,109,97,116,99,104,32,
                 105,115,32,100,111,110,101,46,32,84,104,101,32,109,97,116,99,
                 104,32,116,97,114,103,101,116,32,102,111,114,32,69,84,83,32,
                 105,115,32,97,108,119,97,121,115,32,97,32,102,117,108,108,32,
                 116,97,98,108,101,32,116,117,112,108,101,46,32,84,104,101,32,
                 109,97,116,99,104,32,116,97,114,103,101,116,32,102,111,114,
                 32,99,97,108,108,32,116,114,97,99,101,32,105,115,32,97,108,
                 119,97,121,115,32,97,32,108,105,115,116,32,111,102,32,97,108,
                 108,32,102,117,110,99,116,105,111,110,32,97,114,103,117,109,
                 101,110,116,115,46,32,84,104,101,32,109,97,116,99,104,32,116,
                 97,114,103,101,116,32,102,111,114,32,101,118,101,110,116,32,
                 116,114,97,99,101,32,100,101,112,101,110,100,115,32,111,110,
                 32,116,104,101,32,101,118,101,110,116,32,116,121,112,101,44,
                 32,115,101,101,32,116,97,98,108,101,32,98,101,108,111,119,
                 46]}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [25,35,35,32,86,97,114,105,97,98,108,101,115,32,97,110,100,32,76,
            105,116,101,114,97,108,115]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [23,86,97,114,105,97,98,108,101,115,32,116,97,107,101,32,116,
                  104,101,32,102,111,114,109]}],
               0,false},
              {text,"\r*'$<number>'*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,"\n*<number>*"},
              {sep,
               [{text,
                 "eis an integer between 0 and 100,000,000 (1e+8). The behavior if the number is outside these limits is"}],
               0,false},
              {text,"\r**undefined**"},
              {sep,[{text,"\b. In the"}],0,false},
              {text,"\v*MatchHead*"},
              {sep,
               [{text,
                 [26,112,97,114,116,44,32,116,104,101,32,115,112,101,99,105,
                  97,108,32,118,97,114,105,97,98,108,101]}],
               0,false},
              {text,[5,42,39,95,39,42]},
              {sep,
               [{text,",matches anything, and never gets bound (like"}],
               0,false},
              {text,[3,42,95,42]},
              {sep,[{text,"\vin Erlang)."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,[6,73,110,32,116,104,101]}],0,false},
             {text,
              [26,42,77,97,116,99,104,67,111,110,100,105,116,105,111,110,47,
               77,97,116,99,104,66,111,100,121,42]},
             {sep,
              [{text,"+parts, no unbound variables are allowed, so"}],
              0,false},
             {text,[5,42,39,95,39,42]},
             {sep,
              [{text,
                "Fis interpreted as itself (an atom). Variables can only be bound in the"}],
              0,false},
             {text,"\v*MatchHead*"},
             {sep,[{text,[5,112,97,114,116,46]}],0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,[6,73,110,32,116,104,101]}],0,false},
             {text,"\v*MatchBody*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [16,42,77,97,116,99,104,67,111,110,100,105,116,105,111,110,42]},
             {sep,
              [{text,"3parts, only variables bound previously can be used."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,"-As a special case, the following apply in the"}],
                    0,false},
                   {text,
                    [26,42,77,97,116,99,104,67,111,110,100,105,116,105,111,
                     110,47,77,97,116,99,104,66,111,100,121,42]},
                   {sep,[{text,[6,112,97,114,116,115,58]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,"\fThe variable"}],0,false},
                 {text,[6,42,39,36,95,39,42]},
                 {sep,
                  [{text,
                    [20,101,120,112,97,110,100,115,32,116,111,32,116,104,101,
                     32,119,104,111,108,101]}],
                  0,false},
                 {text,
                  [29,91,109,97,116,99,104,32,116,97,114,103,101,116,93,40,35,
                   109,97,116,99,104,95,116,97,114,103,101,116,41]},
                 {sep,[{text,[5,116,101,114,109,46]}],0,false}],
                0,false}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,"\fThe variable"}],0,false},
                 {text,[6,42,39,36,36,39,42]},
                 {sep,
                  [{text,
                    "Iexpands to a list of the values of all bound variables in order (that is,"}],
                  0,false},
                 {text,
                  [18,42,91,39,36,49,39,44,39,36,50,39,44,32,46,46,46,93,42]},
                 {sep,[{text,[2,41,46]}],0,false}],
                0,false}],
              0,false}}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[6,73,110,32,116,104,101]}],0,false},
              {text,"\v*MatchHead*"},
              {sep,
               [{text,
                 "Hpart, all literals (except the variables above) are interpreted \"as is\"."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[6,73,110,32,116,104,101]}],0,false},
              {text,
               [26,42,77,97,116,99,104,67,111,110,100,105,116,105,111,110,47,
                77,97,116,99,104,66,111,100,121,42]},
              {sep,
               [{text,
                 "´parts, the interpretation is in some ways different. Literals in these parts can either be written \"as is\", which works for all literals except tuples, or by using the special form"}],
               0,false},
              {text,"\f*{const, T}*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[3,42,84,42]},
              {sep,
               [{text,
                 [19,105,115,32,97,110,121,32,69,114,108,97,110,103,32,116,
                  101,114,109,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [306,70,111,114,32,116,117,112,108,101,32,108,105,116,101,
                  114,97,108,115,32,105,110,32,116,104,101,32,109,97,116,99,
                  104,32,115,112,101,99,105,102,105,99,97,116,105,111,110,44,
                  32,100,111,117,98,108,101,32,116,117,112,108,101,32,112,97,
                  114,101,110,116,104,101,115,101,115,32,99,97,110,32,97,108,
                  115,111,32,98,101,32,117,115,101,100,44,32,116,104,97,116,
                  32,105,115,44,32,99,111,110,115,116,114,117,99,116,32,116,
                  104,101,109,32,97,115,32,97,32,116,117,112,108,101,32,111,
                  102,32,97,114,105,116,121,32,111,110,101,32,99,111,110,116,
                  97,105,110,105,110,103,32,97,32,115,105,110,103,108,101,32,
                  116,117,112,108,101,44,32,119,104,105,99,104,32,105,115,32,
                  116,104,101,32,111,110,101,32,116,111,32,98,101,32,99,111,
                  110,115,116,114,117,99,116,101,100,46,32,84,104,101,32,34,
                  100,111,117,98,108,101,32,116,117,112,108,101,32,112,97,114,
                  101,110,116,104,101,115,105,115,34,32,115,121,110,116,97,
                  120,32,105,115,32,117,115,101,102,117,108,32,116,111,32,99,
                  111,110,115,116,114,117,99,116,32,116,117,112,108,101,115,
                  32,102,114,111,109,32,97,108,114,101,97,100,121,32,98,111,
                  117,110,100,32,118,97,114,105,97,98,108,101,115,44,32,108,
                  105,107,101,32,105,110]}],
               0,false},
              {text,
               [22,42,123,123,39,36,49,39,44,32,91,97,44,98,44,39,36,50,39,93,
                125,125,42]},
              {sep,[{text,"\v. Examples:"}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {text,"\vTODO: TABLE"}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [25,35,35,32,69,120,101,99,117,116,105,111,110,32,111,102,32,116,
           104,101,32,77,97,116,99,104]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "|The execution of the match expression, when the runtime system decides whether a trace message is to be sent, is as follows:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,70,111,114,32,101,97,99,104,32,116,117,112,108,101,32,105,
                 110,32,116,104,101]}],
              0,false},
             {text,
              [17,42,77,97,116,99,104,69,120,112,114,101,115,115,105,111,110,
               42]},
             {sep,[{text,"&list and while no match has succeeded:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,"\tMatch the"}],0,false},
            {text,"\v*MatchHead*"},
            {sep,
             [{text,"/part against the match target term, binding the"}],
             0,false},
            {text,"\r*'$<number>'*"},
            {sep,
             [{text,
               [23,118,97,114,105,97,98,108,101,115,32,40,109,117,99,104,32,
                108,105,107,101,32,105,110]}],
             0,false},
            {text,"\r*ets:match/2*"},
            {sep,[{text,"\t). If the"}],0,false},
            {text,"\v*MatchHead*"},
            {sep,
             [{text,"1part cannot match the arguments, the match fails."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,"\rEvaluate each"}],0,false},
            {text,
             [16,42,77,97,116,99,104,67,111,110,100,105,116,105,111,110,42]},
            {sep,[{text,"\v(where only"}],0,false},
            {text,"\r*'$<number>'*"},
            {sep,[{text,"!variables previously bound in the"}],0,false},
            {text,"\v*MatchHead*"},
            {sep,
             [{text,"0part can occur) and expect it to return the atom"}],
             0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,"'. When a condition does not evaluate to"}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,
               "P, the match fails. If any BIF call generates an exception, the match also fails."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   [20,84,119,111,32,99,97,115,101,115,32,99,97,110,32,111,99,
                    99,117,114,58]}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {sep,
             [{text,[1,42]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "5If the match specification is executing when tracing:"}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,[{text,"\rEvaluate each"}],0,false},
                       {text,"\f*ActionTerm*"},
                       {sep,
                        [{text,
                          [22,105,110,32,116,104,101,32,115,97,109,101,32,119,
                           97,121,32,97,115,32,116,104,101]}],
                        0,false},
                       {text,
                        [17,42,77,97,116,99,104,67,111,110,100,105,116,105,
                         111,110,115,42]},
                       {sep,
                        [{text,
                          "a, but ignore the return values. Regardless of what happens in this part, the match has succeeded."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "PIf the match specification is executed when selecting objects from an ETS table:"}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [135,69,118,97,108,117,97,116,101,32,116,104,101,32,
                         101,120,112,114,101,115,115,105,111,110,115,32,105,
                         110,32,111,114,100,101,114,32,97,110,100,32,114,101,
                         116,117,114,110,32,116,104,101,32,118,97,108,117,101,
                         32,111,102,32,116,104,101,32,108,97,115,116,32,101,
                         120,112,114,101,115,115,105,111,110,32,40,116,121,
                         112,105,99,97,108,108,121,32,116,104,101,114,101,32,
                         105,115,32,111,110,108,121,32,111,110,101,32,101,120,
                         112,114,101,115,115,105,111,110,32,105,110,32,116,
                         104,105,115,32,99,111,110,116,101,120,116,41,46]}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,false}}],
          0,false}],
        0,false}}],
     0,false}},
   {sep,
    [{text,"=<a name=\"differences_ets_tracing\">differences_ets_tracing</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         ">## Differences between Match Specifications in ETS and Tracing"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "<ETS match specifications produce a return value. Usually the"}],
             0,false},
            {text,"\v*MatchBody*"},
            {sep,
             [{text,
               [19,99,111,110,116,97,105,110,115,32,111,110,101,32,115,105,
                110,103,108,101]}],
             0,false},
            {text,
             [21,42,67,111,110,100,105,116,105,111,110,69,120,112,114,101,115,
              115,105,111,110,42]},
            {sep,
             [{text,
               "sthat defines the return value without any side effects. Calls with side effects are not allowed in the ETS context."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ÀWhen tracing there is no return value to produce, the match specification either matches or does not. The effect when the expression matches is a trace message rather than a returned term. The"}],
             0,false},
            {text,"\f*ActionTerm*"},
            {sep,
             [{text,
               [136,115,32,97,114,101,32,101,120,101,99,117,116,101,100,32,97,
                115,32,105,110,32,97,110,32,105,109,112,101,114,97,116,105,
                118,101,32,108,97,110,103,117,97,103,101,44,32,116,104,97,116,
                32,105,115,44,32,102,111,114,32,116,104,101,105,114,32,115,
                105,100,101,32,101,102,102,101,99,116,115,46,32,70,117,110,99,
                116,105,111,110,115,32,119,105,116,104,32,115,105,100,101,32,
                101,102,102,101,99,116,115,32,97,114,101,32,97,108,115,111,32,
                97,108,108,111,119,101,100,32,119,104,101,110,32,116,114,97,
                99,105,110,103,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [19,35,35,32,84,114,97,99,105,110,103,32,69,120,97,109,112,108,101,
         115]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "OMatch an argument list of three, where the first and third arguments are equal:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,[{text,"'\n[{['$1', '_', '$1'],\n  [],\n  []}]\n    "}],0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "KMatch an argument list of three, where the second argument is a number > 3:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "5\n[{['_', '$1', '_'],\n  [{ '>', '$1', 3}],\n  []}]\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "lMatch an argument list of three, where the third argument is either a tuple containing argument one and two,"}],
            0,false},
           {text,[6,42,42,111,114,42,42]},
           {sep,
            [{text,"4a list beginning with argument one and two (that is,"}],
            0,false},
           {text,[15,42,91,97,44,98,44,91,97,44,98,44,99,93,93,42]},
           {sep,[{text,[2,111,114]}],0,false},
           {text,"\r*[a,b,{a,b}]*"},
           {sep,[{text,[2,41,58]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "³\n[{['$1', '$2', '$3'],\n  [{'orelse', \n      {'=:=', '$3', {{'$1','$2'}}},\n      {'and', \n        {'=:=', '$1', {hd, '$3'}},\n        {'=:=', '$2', {hd, {tl, '$3'}}}}}],\n  []}]\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0The above problem can also be solved as follows:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "X\n[{['$1', '$2', {'$1', '$2}], [], []},\n {['$1', '$2', ['$1', '$2' | '_']], [], []}]\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [134,77,97,116,99,104,32,116,119,111,32,97,114,103,117,109,101,
               110,116,115,44,32,119,104,101,114,101,32,116,104,101,32,102,
               105,114,115,116,32,105,115,32,97,32,116,117,112,108,101,32,98,
               101,103,105,110,110,105,110,103,32,119,105,116,104,32,97,32,
               108,105,115,116,32,116,104,97,116,32,105,110,32,116,117,114,
               110,32,98,101,103,105,110,115,32,119,105,116,104,32,116,104,
               101,32,115,101,99,111,110,100,32,97,114,103,117,109,101,110,
               116,32,116,105,109,101,115,32,116,119,111,32,40,116,104,97,116,
               32,105,115,44]}],
            0,false},
           {text,[15,42,91,123,91,52,44,120,93,44,121,125,44,50,93,42]},
           {sep,[{text,[2,111,114]}],0,false},
           {text,
            [18,42,91,123,91,56,93,44,32,121,44,32,122,125,44,52,93,41,42]},
           {sep,[{text,[1,58]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "P\n[{['$1', '$2'],[{'=:=', {'*', 2, '$2'}, {hd, {element, 1, '$1'}}}],\n  []}]\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "ÌMatch three arguments. When all three are equal and are numbers, append the process dump to the trace message, otherwise let the trace message be \"as is\", but set the sequential trace token label to 4711:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "~\n[{['$1', '$1', '$1'],\n  [{is_number, '$1'}],\n  [{message, {process_dump}}]},\n {'_', [], [{set_seq_token, label, 4711}]}]\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "IAs can be noted above, the parameter list can be matched against a single"}],
            0,false},
           {text,[15,42,77,97,116,99,104,86,97,114,105,97,98,108,101,42]},
           {sep,[{text,[5,111,114,32,97,110]}],0,false},
           {text,[5,42,39,95,39,42]},
           {sep,
            [{text,
              "f. To replace the whole parameter list with a single variable is a special case. In all other cases the"}],
            0,false},
           {text,"\v*MatchHead*"},
           {sep,[{text,"\tmust be a"}],0,false},
           {text,"\n**proper**"},
           {sep,[{text,[5,108,105,115,116,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "DGenerate a trace message only if the trace control word is set to 1:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,"4\n[{'_',\n  [{'==',{get_tcw},{const, 1}}],\n  []}]\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"+Generate a trace message only if there is a"}],
            0,false},
           {text,"\v*seq_trace*"},
           {sep,[{text,[6,116,111,107,101,110,58]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "9\n[{'_',\n  [{'==',{is_seq_trace},{const, 1}}],\n  []}]\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"\nRemove the"}],0,false},
           {text,"\n*'silent'*"},
           {sep,[{text,"%trace flag when the first argument is"}],0,false},
           {text,"\v*'verbose'*"},
           {sep,
            [{text,
              [23,44,32,97,110,100,32,97,100,100,32,105,116,32,119,104,101,
               110,32,105,116,32,105,115]}],
            0,false},
           {text,"\v*'silent':*"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [136,10,91,123,39,36,49,39,44,10,32,32,91,123,39,61,61,39,44,123,
             104,100,44,32,39,36,49,39,125,44,118,101,114,98,111,115,101,125,
             93,44,10,32,32,91,123,116,114,97,99,101,44,32,91,115,105,108,101,
             110,116,93,44,91,93,125,93,125,44,10,32,123,39,36,49,39,44,10,32,
             32,91,123,39,61,61,39,44,123,104,100,44,32,39,36,49,39,125,44,
             115,105,108,101,110,116,125,93,44,10,32,32,91,123,116,114,97,99,
             101,44,32,91,93,44,91,115,105,108,101,110,116,93,125,93,125,93,
             10,32,32,32,32]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,[5,65,100,100,32,97]}],0,false},
           {text,[14,42,114,101,116,117,114,110,95,116,114,97,99,101,42]},
           {sep,[{text,"&message if the function is of arity 3:"}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "M\n[{'$1',\n  [{'==',{length, '$1'},3}],\n  [{return_trace}]},\n {'_',[],[]}]\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "UGenerate a trace message only if the function is of arity 3 and the first argument is"}],
            0,false},
           {text,"\t*'trace'*"},
           {sep,[{text,[1,58]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "7\n[{['trace','$2','$3'],\n  [],\n  []},\n {'_',[],[]}]\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,69,84,83,32,69,120,97,109,112,108,101,115]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "FMatch all objects in an ETS table, where the first element is the atom"}],
           0,false},
          {text,"\v*'strider'*"},
          {sep,
           [{text,"6and the tuple arity is 3, and return the whole object:"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,"+\n[{{strider,'_','_'},\n  [],\n  ['$_']}]\n    "}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "jMatch all objects in an ETS table with arity > 1 and the first element is 'gandalf', and return element 2:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "c\n[{'$1',\n  [{'==', gandalf, {element, 1, '$1'}},{'>=',{size, '$1'},2}],\n  [{element,2,'$1'}]}]\n    "}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "jIn this example, if the first element had been the key, it is much more efficient to match that key in the"}],
           0,false},
          {text,"\v*MatchHead*"},
          {sep,
           [{text,
             [16,112,97,114,116,32,116,104,97,110,32,105,110,32,116,104,101]}],
           0,false},
          {text,
           [17,42,77,97,116,99,104,67,111,110,100,105,116,105,111,110,115,42]},
          {sep,
           [{text,
             "Fpart. The search space of the tables is restricted with regards to the"}],
           0,false},
          {text,"\v*MatchHead*"},
          {sep,
           [{text,
             "8so that only objects with the matching key are searched."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "BMatch tuples of three elements, where the second element is either"}],
           0,false},
          {text,"\t*'merry'*"},
          {sep,[{text,[2,111,114]}],0,false},
          {text,"\n*'pippin'*"},
          {sep,
           [{text,
             [31,44,32,97,110,100,32,114,101,116,117,114,110,32,116,104,101,
              32,119,104,111,108,101,32,111,98,106,101,99,116,115,58]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "N\n[{{'_',merry,'_'},\n  [],\n  ['$_']},\n {{'_',pippin,'_'},\n  [],\n  ['$_']}]\n    "}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\bFunction"}],0,false},
          {text,"/[stdlib/ets#test_ms/2](../stdlib/ets#test_ms/2)"},
          {sep,
           [{text,"2can be useful for testing complicated ETS matches."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
