{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# erl_format"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# erl_format"},null},null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [30,67,114,101,97,116,101,32,97,110,100,32,109,97,116,99,104,32,69,
            114,108,97,110,103,32,116,101,114,109,115,46]}],
         0,false}],
       0,true},
      null},
     null}}},
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {sep,
      [{sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "|This module contains two routines: one general function for creating Erlang terms and one for pattern matching Erlang terms."}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,true},
     null},
    null}}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"%## erl_format(FormatStr, ...):ETERM *"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [22,67,114,101,97,116,101,32,97,110,32,69,114,108,97,110,103,32,
            116,101,114,109,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,[17,99,104,97,114,32,92,42,70,111,114,109,97,116,83,116,114,59]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "{A general function for creating Erlang terms using a format specifier and a corresponding set of arguments, much in the way"}],
             0,false},
            {text,"\n*printf()*"},
            {sep,[{text,[6,119,111,114,107,115,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\v*FormatStr*"},
            {sep,
             [{text,
               "Mis a format specification string. The valid format specifiers are as follows:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[4,42,126,105,42]},{sep,[{text,"\t- Integer"}],0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[4,42,126,102,42]},
             {sep,
              [{text,
                [16,45,32,70,108,111,97,116,105,110,103,32,112,111,105,110,
                 116]}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[4,42,126,97,42]},
            {sep,[{text,[6,45,32,65,116,111,109]}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[4,42,126,115,42]},{sep,[{text,"\b- String"}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[4,42,126,119,42]},
          {sep,
           [{text,
             [23,45,32,65,114,98,105,116,114,97,114,121,32,69,114,108,97,110,
              103,32,116,101,114,109]}],
           0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"%For each format specifier included in"}],0,false},
            {text,"\v*FormatStr*"},
            {sep,
             [{text,"2, there must be a corresponding argument following"}],
             0,false},
            {text,"\v*FormatStr*"},
            {sep,[{text,"&. An Erlang term is built according to"}],0,false},
            {text,"\v*FormatStr*"},
            {sep,
             [{text,
               [138,119,105,116,104,32,118,97,108,117,101,115,32,97,110,100,
                32,69,114,108,97,110,103,32,116,101,114,109,115,32,115,117,98,
                115,116,105,116,117,116,101,100,32,102,114,111,109,32,116,104,
                101,32,99,111,114,114,101,115,112,111,110,100,105,110,103,32,
                97,114,103,117,109,101,110,116,115,44,32,97,110,100,32,97,99,
                99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,105,
                110,100,105,118,105,100,117,97,108,32,102,111,114,109,97,116,
                32,115,112,101,99,105,102,105,101,114,115,46,32,70,111,114,32,
                101,120,97,109,112,108,101,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [146,10,101,114,108,95,102,111,114,109,97,116,40,34,91,123,110,
              97,109,101,44,126,97,125,44,123,97,103,101,44,126,105,125,44,
              123,100,97,116,97,44,126,119,125,93,34,44,10,32,32,32,32,32,32,
              32,32,32,32,32,34,109,97,100,111,110,110,97,34,44,10,32,32,32,
              32,32,32,32,32,32,32,32,50,49,44,10,32,32,32,32,32,32,32,32,32,
              32,32,101,114,108,95,102,111,114,109,97,116,40,34,91,123,97,100,
              114,44,126,115,44,126,105,125,93,34,44,34,69,45,115,116,114,101,
              101,116,34,44,52,50,41,41,59,10,32,32,32,32,32,32,32,32]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [15,84,104,105,115,32,99,114,101,97,116,101,115,32,97,110]}],
             0,false},
            {text,"\v*(ETERM *)*"},
            {sep,
             [{text,"*structure corresponding to the Erlang term"}],
             0,false},
            {text,
             "8*[{name,madonna},{age,21},{data,[{adr,\"E-street\",42}]}]*"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"'The function returns an Erlang term, or"}],0,false},
            {text,[6,42,78,85,76,76,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,"\v*FormatStr*"},
            {sep,[{text,"&does not describe a valid Erlang term."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,101,114,108,95,109,97,116,99,104,40,80,97,116,116,101,114,
        110,44,32,84,101,114,109,41,58,105,110,116]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [25,80,101,114,102,111,114,109,32,112,97,116,116,101,114,110,32,
            109,97,116,99,104,105,110,103,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [23,69,84,69,82,77,32,92,42,80,97,116,116,101,114,110,44,92,42,84,101,
         114,109,59]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [131,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,
                115,32,117,115,101,100,32,116,111,32,112,101,114,102,111,114,
                109,32,112,97,116,116,101,114,110,32,109,97,116,99,104,105,
                110,103,32,115,105,109,105,108,97,114,32,116,111,32,116,104,
                97,116,32,100,111,110,101,32,105,110,32,69,114,108,97,110,103,
                46,32,70,111,114,32,109,97,116,99,104,105,110,103,32,114,117,
                108,101,115,32,97,110,100,32,109,111,114,101,32,101,120,97,
                109,112,108,101,115,44,32,115,101,101,32,115,101,99,116,105,
                111,110]}],
             0,false},
            {text,
             [30,91,80,97,116,116,101,114,110,32,77,97,116,99,104,105,110,103,
              93,40,46,47,112,97,116,116,101,114,110,115,41]},
            {sep,
             [{text,
               [31,105,110,32,116,104,101,32,69,114,108,97,110,103,32,82,101,
                102,101,114,101,110,99,101,32,77,97,110,117,97,108,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"\t*Pattern*"},
          {sep,
           [{text,
             "9is an Erlang term, possibly containing unbound variables."}],
           0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[6,42,84,101,114,109,42]},
          {sep,
           [{text,"/is an Erlang term that we wish to match against"}],
           0,false},
          {text,"\t*Pattern*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[6,42,84,101,114,109,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\t*Pattern*"},
            {sep,
             [{text,")are compared and any unbound variables in"}],
             0,false},
            {text,"\t*Pattern*"},
            {sep,[{text,"$are bound to corresponding values in"}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\t*Pattern*"},
            {sep,
             [{text,
               "Xcan be matched, the function returns a non-zero value and binds any unbound variables in"}],
             0,false},
            {text,"\t*Pattern*"},
            {sep,[{text,[4,46,32,73,102]}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\t*Pattern*"},
            {sep,[{text,"\rdo not match,"}],0,false},
            {text,[3,42,48,42]},
            {sep,
             [{text,
               [25,105,115,32,114,101,116,117,114,110,101,100,46,32,70,111,
                114,32,101,120,97,109,112,108,101,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [516,10,69,84,69,82,77,32,42,116,101,114,109,44,32,42,112,97,116,
              116,101,114,110,44,32,42,112,97,116,116,101,114,110,50,59,10,
              116,101,114,109,49,32,32,32,32,61,32,101,114,108,95,102,111,114,
              109,97,116,40,34,123,49,52,44,50,49,125,34,41,59,10,116,101,114,
              109,50,32,32,32,32,61,32,101,114,108,95,102,111,114,109,97,116,
              40,34,123,49,57,44,49,57,125,34,41,59,10,112,97,116,116,101,114,
              110,49,32,61,32,101,114,108,95,102,111,114,109,97,116,40,34,123,
              65,44,66,125,34,41,59,10,112,97,116,116,101,114,110,50,32,61,32,
              101,114,108,95,102,111,114,109,97,116,40,34,123,70,44,70,125,34,
              41,59,10,105,102,32,40,101,114,108,95,109,97,116,99,104,40,112,
              97,116,116,101,114,110,49,44,32,116,101,114,109,49,41,41,32,123,
              10,32,32,47,42,32,109,97,116,99,104,32,115,117,99,99,101,101,
              100,115,58,10,32,32,32,42,32,65,32,103,101,116,115,32,98,111,
              117,110,100,32,116,111,32,49,52,44,32,10,32,32,32,42,32,66,32,
              103,101,116,115,32,98,111,117,110,100,32,116,111,32,50,49,32,10,
              32,32,32,42,47,10,32,32,46,46,46,32,32,10,125,10,105,102,32,40,
              101,114,108,95,109,97,116,99,104,40,112,97,116,116,101,114,110,
              50,44,32,116,101,114,109,49,41,41,32,123,10,32,32,47,42,32,109,
              97,116,99,104,32,102,97,105,108,115,32,98,101,99,97,117,115,101,
              32,70,32,99,97,110,110,111,116,32,98,101,32,10,32,32,32,42,32,
              98,111,117,110,100,32,116,111,32,116,119,111,32,115,101,112,97,
              114,97,116,101,32,118,97,108,117,101,115,44,32,49,52,32,97,110,
              100,32,50,49,10,32,32,32,42,47,10,32,32,46,46,46,10,125,10,105,
              102,32,40,101,114,108,95,109,97,116,99,104,40,112,97,116,116,
              101,114,110,50,44,32,116,101,114,109,50,41,41,32,123,10,32,32,
              47,42,32,109,97,116,99,104,32,115,117,99,99,101,101,100,115,32,
              97,110,100,32,70,32,103,101,116,115,32,98,111,117,110,100,32,
              116,111,32,49,57,32,42,47,10,32,32,46,46,46,10,125,10,32,32,32,
              32,32,32,32,32]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [19,42,101,114,108,95,118,97,114,95,99,111,110,116,101,110,116,
              40,41,42]},
            {sep,
             [{text,
               "Scan be used to retrieve the content of any variables bound as a result of a call to"}],
             0,false},
            {text,"\r*erl_match()*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
