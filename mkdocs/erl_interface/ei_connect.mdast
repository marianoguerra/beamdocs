{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\f# ei_connect"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\f# ei_connect"},null},null}}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"$Communicate with distributed Erlang."}],0,false}],
          0,true},
         null},
        null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "RThe support for VxWorks is deprecated as of OTP 22, and will be removed in OTP 23."}],
                    0,false}],
                  0,true},
                 null},
                null}}],
             0,false},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "kThis module enables C-programs to communicate with Erlang nodes, using the Erlang distribution over TCP/IP."}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      [31,65,32,67,45,110,111,100,101,32,97,112,112,101,97,
                       114,115,32,116,111,32,69,114,108,97,110,103,32,97,115,
                       32,97]}],
                    0,false},
                   {text,
                    [15,42,42,104,105,100,100,101,110,32,110,111,100,101,42,
                     42]},
                   {sep,
                    [{text,
                      "¢. That is, Erlang processes that know the name of the C-node can communicate with it in a normal manner, but the node name is not shown in the listing provided by"}],
                    0,false},
                   {text,"-[erts/erlang#nodes/0](../erts/erlang#nodes/0)"},
                   {sep,[{text,[2,105,110]}],0,false},
                   {text,[6,42,69,82,84,83,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      [24,84,104,101,32,101,110,118,105,114,111,110,109,101,
                       110,116,32,118,97,114,105,97,98,108,101]}],
                    0,false},
                   {text,[15,42,69,82,76,95,69,80,77,68,95,80,79,82,84,42]},
                   {sep,
                    [{text,
                      "Bcan be used to indicate which logical cluster a C-node belongs to."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,true},
        null},
       null}}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [21,35,35,32,84,105,109,101,45,79,117,116,32,70,117,110,99,116,105,
           111,110,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"2Most functions appear in a version with the suffix"}],
              0,false},
             {text,[6,42,95,116,109,111,42]},
             {sep,
              [{text,
                "Tappended to the function name. Those functions take an extra argument, a time-out in"}],
              0,false},
             {text,
              [16,42,42,109,105,108,108,105,115,101,99,111,110,100,115,42,42]},
             {sep,
              [{text,
                "´. The semantics is this: for each communication primitive involved in the operation, if the primitive does not complete within the time specified, the function returns an error and"}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,"\v*ETIMEDOUT*"},
             {sep,
              [{text,
                "H. With communication primitive is meant an operation on the socket, like"}],
              0,false},
             {text,"\t*connect*"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\b*accept*"},
             {sep,[{text,[1,44]}],0,false},
             {text,[6,42,114,101,99,118,42]},
             {sep,[{text,[4,44,32,111,114]}],0,false},
             {text,[6,42,115,101,110,100,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "dClearly the time-outs are for implementing fault tolerance, not to keep hard real-time promises. The"}],
              0,false},
             {text,[6,42,95,116,109,111,42]},
             {sep,
              [{text,
                "\\functions are for detecting non-responsive peers and to avoid blocking on socket operations."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,65,32,116,105,109,101,45,111,117,116,32,118,97,108,117,
                 101,32,111,102]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,"3(zero) means that time-outs are disabled. Calling a"}],
              0,false},
             {text,[6,42,95,116,109,111,42]},
             {sep,[{text,"\"function with the last argument as"}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                "?is therefore the same thing as calling the function without the"}],
              0,false},
             {text,[6,42,95,116,109,111,42]},
             {sep,[{text,[7,115,117,102,102,105,120,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")As with all other functions starting with"}],
              0,false},
             {text,[5,42,101,105,95,42]},
             {sep,[{text,"\t, you are"}],0,false},
             {text,[7,42,42,110,111,116,42,42]},
             {sep,
              [{text,
                [308,101,120,112,101,99,116,101,100,32,116,111,32,112,117,116,
                 32,116,104,101,32,115,111,99,107,101,116,32,105,110,32,110,
                 111,110,45,98,108,111,99,107,105,110,103,32,109,111,100,101,
                 32,121,111,117,114,115,101,108,102,32,105,110,32,116,104,101,
                 32,112,114,111,103,114,97,109,46,32,69,118,101,114,121,32,
                 117,115,101,32,111,102,32,110,111,110,45,98,108,111,99,107,
                 105,110,103,32,109,111,100,101,32,105,115,32,101,109,98,101,
                 100,100,101,100,32,105,110,115,105,100,101,32,116,104,101,32,
                 116,105,109,101,45,111,117,116,32,102,117,110,99,116,105,111,
                 110,115,46,32,84,104,101,32,115,111,99,107,101,116,32,119,
                 105,108,108,32,97,108,119,97,121,115,32,98,101,32,98,97,99,
                 107,32,105,110,32,98,108,111,99,107,105,110,103,32,109,111,
                 100,101,32,97,102,116,101,114,32,116,104,101,32,111,112,101,
                 114,97,116,105,111,110,115,32,97,114,101,32,99,111,109,112,
                 108,101,116,101,100,32,40,114,101,103,97,114,100,108,101,115,
                 115,32,111,102,32,116,104,101,32,114,101,115,117,108,116,41,
                 46,32,84,111,32,97,118,111,105,100,32,112,114,111,98,108,101,
                 109,115,44,32,108,101,97,118,101,32,116,104,101,32,115,111,
                 99,107,101,116,32,111,112,116,105,111,110,115,32,97,108,111,
                 110,101,46]}],
              0,false},
             {text,[4,42,101,105,42]},
             {sep,
              [{text,"2handles any socket options that need modification."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [24,73,110,32,97,108,108,32,111,116,104,101,114,32,115,101,
                 110,115,101,115,44,32,116,104,101]}],
              0,false},
             {text,[6,42,95,116,109,111,42]},
             {sep,
              [{text,
                "Xfunctions inherit all the return values and the semantics from the functions without the"}],
              0,false},
             {text,[6,42,95,116,109,111,42]},
             {sep,[{text,[7,115,117,102,102,105,120,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}},
   {sep,
    [{text,
      [23,60,97,32,110,97,109,101,61,34,117,115,115,105,34,62,117,115,115,105,
       60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"&## User Supplied Socket Implementation"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\nBy default"}],0,false},
            {text,[4,42,101,105,42]},
            {sep,
             [{text,
               [256,115,117,112,112,108,105,101,115,32,97,32,84,67,80,47,73,
                80,118,52,32,115,111,99,107,101,116,32,105,110,116,101,114,
                102,97,99,101,32,116,104,97,116,32,105,115,32,117,115,101,100,
                32,119,104,101,110,32,99,111,109,109,117,110,105,99,97,116,
                105,110,103,46,32,84,104,101,32,117,115,101,114,32,99,97,110,
                32,104,111,119,101,118,101,114,32,112,108,117,103,32,105,110,
                32,104,105,115,47,104,101,114,32,111,119,110,32,73,80,118,52,
                32,115,111,99,107,101,116,32,105,109,112,108,101,109,101,110,
                116,97,116,105,111,110,46,32,84,104,105,115,44,32,102,111,114,
                32,101,120,97,109,112,108,101,44,32,105,110,32,111,114,100,
                101,114,32,116,111,32,99,111,109,109,117,110,105,99,97,116,
                101,32,111,118,101,114,32,84,76,83,46,32,65,32,117,115,101,
                114,32,115,117,112,112,108,105,101,100,32,115,111,99,107,101,
                116,32,105,109,112,108,101,109,101,110,116,97,116,105,111,110,
                32,105,115,32,112,108,117,103,103,101,100,32,105,110,32,98,
                121,32,112,97,115,115,105,110,103,32,97]}],
             0,false},
            {text,"*[callback structure](#ei_socket_callbacks)"},
            {sep,[{text,"\tto either"}],0,false},
            {text,"#[ei_connect_init](#ei_connect_init)"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"#[ei_connect_init](#ei_connect_init)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [20,65,108,108,32,99,97,108,108,98,97,99,107,115,32,105,110,32,
                116,104,101]}],
             0,false},
            {text,
             [21,42,101,105,95,115,111,99,107,101,116,95,99,97,108,108,98,97,
              99,107,115,42]},
            {sep,[{text,"\tstructure"}],0,false},
            {text,"\n**should**"},
            {sep,
             [{text,
               ":return zero on success; and a posix error code on failure."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,[6,42,97,100,100,114,42]},
            {sep,
             [{text,
               [15,97,114,103,117,109,101,110,116,32,111,102,32,116,104,101]}],
             0,false},
            {text,"\b*listen*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\b*accept*"},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,"\t*connect*"},
            {sep,
             [{text,
               "Wcallbacks refer to appropriate address structure for currently used protocol. Currently"}],
             0,false},
            {text,[4,42,101,105,42]},
            {sep,
             [{text,")only supports IPv4. That is, at this time"}],
             0,false},
            {text,[6,42,97,100,100,114,42]},
            {sep,
             [{text,
               [18,97,108,119,97,121,115,32,112,111,105,110,116,115,32,116,
                111,32,97]}],
             0,false},
            {text,
             [20,42,115,116,114,117,99,116,32,115,111,99,107,97,100,100,114,
              95,105,110,42]},
            {sep,[{text,"\nstructure."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,
             [21,42,101,105,95,115,111,99,107,101,116,95,99,97,108,108,98,97,
              99,107,115,42]},
            {sep,
             [{text,
               "<structure may be enlarged in the future. All fields not set,"}],
             0,false},
            {text,"\t**needs**"},
            {sep,
             [{text,
               [17,116,111,32,98,101,32,122,101,114,111,101,100,32,111,117,
                116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,"5<a name=\"ei_socket_callbacks\">ei_socket_callbacks</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [773,10,116,121,112,101,100,101,102,32,115,116,114,117,99,116,32,
              123,10,32,32,32,32,105,110,116,32,102,108,97,103,115,59,10,32,
              32,32,32,105,110,116,32,40,42,115,111,99,107,101,116,41,40,118,
              111,105,100,32,42,42,99,116,120,44,32,118,111,105,100,32,42,115,
              101,116,117,112,95,99,116,120,41,59,10,32,32,32,32,105,110,116,
              9,40,42,99,108,111,115,101,41,40,118,111,105,100,32,42,99,116,
              120,41,59,10,32,32,32,32,105,110,116,32,40,42,108,105,115,116,
              101,110,41,40,118,111,105,100,32,42,99,116,120,44,32,118,111,
              105,100,32,42,97,100,100,114,44,32,105,110,116,32,42,108,101,
              110,44,32,105,110,116,32,98,97,99,107,108,111,103,41,59,10,32,
              32,32,32,105,110,116,32,40,42,97,99,99,101,112,116,41,40,118,
              111,105,100,32,42,42,99,116,120,44,32,118,111,105,100,32,42,97,
              100,100,114,44,32,105,110,116,32,42,108,101,110,44,32,117,110,
              115,105,103,110,101,100,32,116,109,111,41,59,10,32,32,32,32,105,
              110,116,32,40,42,99,111,110,110,101,99,116,41,40,118,111,105,
              100,32,42,99,116,120,44,32,118,111,105,100,32,42,97,100,100,114,
              44,32,105,110,116,32,108,101,110,44,32,117,110,115,105,103,110,
              101,100,32,116,109,111,41,59,10,32,32,32,32,105,110,116,32,40,
              42,119,114,105,116,101,118,41,40,118,111,105,100,32,42,99,116,
              120,44,32,99,111,110,115,116,32,118,111,105,100,32,42,105,111,
              118,44,32,105,110,116,32,105,111,118,99,110,116,44,32,115,115,
              105,122,101,95,116,32,42,108,101,110,44,32,117,110,115,105,103,
              110,101,100,32,116,109,111,41,59,10,32,32,32,32,105,110,116,32,
              40,42,119,114,105,116,101,41,40,118,111,105,100,32,42,99,116,
              120,44,32,99,111,110,115,116,32,99,104,97,114,32,42,98,117,102,
              44,32,115,115,105,122,101,95,116,32,42,108,101,110,44,32,117,
              110,115,105,103,110,101,100,32,116,109,111,41,59,10,32,32,32,32,
              105,110,116,32,40,42,114,101,97,100,41,40,118,111,105,100,32,42,
              99,116,120,44,32,99,104,97,114,32,42,98,117,102,44,32,115,115,
              105,122,101,95,116,32,42,108,101,110,44,32,117,110,115,105,103,
              110,101,100,32,116,109,111,41,59,10,32,32,32,32,105,110,116,32,
              40,42,104,97,110,100,115,104,97,107,101,95,112,97,99,107,101,
              116,95,104,101,97,100,101,114,95,115,105,122,101,41,40,118,111,
              105,100,32,42,99,116,120,44,32,105,110,116,32,42,115,122,41,59,
              10,32,32,32,32,105,110,116,32,40,42,99,111,110,110,101,99,116,
              95,104,97,110,100,115,104,97,107,101,95,99,111,109,112,108,101,
              116,101,41,40,118,111,105,100,32,42,99,116,120,41,59,10,32,32,
              32,32,105,110,116,32,40,42,97,99,99,101,112,116,95,104,97,110,
              100,115,104,97,107,101,95,99,111,109,112,108,101,116,101,41,40,
              118,111,105,100,32,42,99,116,120,41,59,10,32,32,32,32,105,110,
              116,32,40,42,103,101,116,95,102,100,41,40,118,111,105,100,32,42,
              99,116,120,44,32,105,110,116,32,42,102,100,41,59,10,125,32,101,
              105,95,115,111,99,107,101,116,95,99,97,108,108,98,97,99,107,115,
              59,10,32,32,32,32,32,32,32,32]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,116,62]},
                                      {sep,
                                       [{text,[5,102,108,97,103,115]}],
                                       0,false},
                                      {text,[5,60,47,100,116,62]}],
                                     0,true},
                                    null},
                                   null}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,100,62]},
                                      {sep,
                                       [{above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{sep,
                                                [{text,
                                                  [15,70,108,97,103,115,32,
                                                   105,110,102,111,114,109,
                                                   105,110,103]}],
                                                0,false},
                                               {text,[2,101,105]},
                                               {sep,
                                                [{text,
                                                  "eabout the behaviour of the callbacks. Flags should be bitwise or:ed together. If no flag, is set, the"}],
                                                0,false},
                                               {text,[5,102,108,97,103,115]},
                                               {sep,
                                                [{text,
                                                  [20,102,105,101,108,100,32,
                                                   115,104,111,117,108,100,32,
                                                   99,111,110,116,97,105,
                                                   110]}],
                                                0,false},
                                               {text,[1,48]},
                                               {sep,
                                                [{text,
                                                  [29,46,32,67,117,114,114,
                                                   101,110,116,108,121,44,32,
                                                   115,117,112,112,111,114,
                                                   116,101,100,32,102,108,97,
                                                   103,115,58]}],
                                                0,false}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}},
                                        {above,
                                         {above,
                                          {text,[4,60,100,108,62]},
                                          {nest,4,
                                           {above,
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{text,[4,60,100,116,62]},
                                                 {sep,
                                                  [{text,
                                                    [22,69,73,95,83,67,76,66,
                                                     75,95,70,76,71,95,70,85,
                                                     76,76,95,73,77,80,76]}],
                                                  0,false},
                                                 {text,[5,60,47,100,116,62]}],
                                                0,true},
                                               null},
                                              null}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{text,[4,60,100,100,62]},
                                                 {sep,
                                                  [{above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{sep,
                                                         [{sep,
                                                           [{text,
                                                             "\vIf set, the"}],
                                                           0,false},
                                                          {text,"\baccept()"},
                                                          {sep,
                                                           [{text,[1,44]}],
                                                           0,false},
                                                          {text,"\tconnect()"},
                                                          {sep,
                                                           [{text,[1,44]}],
                                                           0,false},
                                                          {text,"\bwritev()"},
                                                          {sep,
                                                           [{text,[1,44]}],
                                                           0,false},
                                                          {text,
                                                           [7,119,114,105,116,
                                                            101,40,41]},
                                                          {sep,
                                                           [{text,
                                                             [5,44,32,97,110,
                                                              100]}],
                                                           0,false},
                                                          {text,
                                                           [6,114,101,97,100,
                                                            40,41]},
                                                          {sep,
                                                           [{text,
                                                             ";callbacks implements timeouts. The timeout is passed in the"}],
                                                           0,false},
                                                          {text,
                                                           [3,116,109,111]},
                                                          {sep,
                                                           [{text,
                                                             "5argument and is given in milli seconds. Note that the"}],
                                                           0,false},
                                                          {text,
                                                           [3,116,109,111]},
                                                          {sep,
                                                           [{text,
                                                             "Dargument to these callbacks differ from the timeout arguments in the"}],
                                                           0,false},
                                                          {text,[2,101,105]},
                                                          {sep,
                                                           [{text,
                                                             "iAPI. Zero means a zero timeout. That is, poll and timeout immediately unless the operation is successful."}],
                                                           0,false},
                                                          {text,
                                                           [16,69,73,95,83,67,
                                                            76,66,75,95,73,78,
                                                            70,95,84,77,79]},
                                                          {sep,
                                                           [{text,
                                                             [4,40,109,97,
                                                              120]}],
                                                           0,false},
                                                          {text,"\bunsigned"},
                                                          {sep,
                                                           [{text,
                                                             [151,41,32,109,
                                                              101,97,110,115,
                                                              32,105,110,102,
                                                              105,110,105,116,
                                                              101,32,116,105,
                                                              109,101,111,117,
                                                              116,46,32,84,
                                                              104,101,32,102,
                                                              105,108,101,32,
                                                              100,101,115,99,
                                                              114,105,112,116,
                                                              111,114,32,105,
                                                              115,32,105,110,
                                                              32,98,108,111,
                                                              99,107,105,110,
                                                              103,32,109,111,
                                                              100,101,32,119,
                                                              104,101,110,32,
                                                              97,32,99,97,108,
                                                              108,98,97,99,
                                                              107,32,105,115,
                                                              32,99,97,108,
                                                              108,101,100,44,
                                                              32,97,110,100,
                                                              32,105,116,32,
                                                              109,117,115,116,
                                                              32,98,101,32,
                                                              105,110,32,98,
                                                              108,111,99,107,
                                                              105,110,103,32,
                                                              109,111,100,101,
                                                              32,119,104,101,
                                                              110,32,116,104,
                                                              101,32,99,97,
                                                              108,108,98,97,
                                                              99,107,32,114,
                                                              101,116,117,114,
                                                              110,115,46]}],
                                                           0,false}],
                                                         0,false}],
                                                       0,true},
                                                      null},
                                                     null}},
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{sep,
                                                         [{sep,
                                                           [{text,
                                                             "\vIf not set,"}],
                                                           0,false},
                                                          {text,[2,101,105]},
                                                          {sep,
                                                           [{text,
                                                             " will implement the timeout using"}],
                                                           0,false},
                                                          {text,"\bselect()"},
                                                          {sep,
                                                           [{text,
                                                             "Jin order to determine when to call the callbacks and when to time out. The"}],
                                                           0,false},
                                                          {text,
                                                           [3,116,109,111]},
                                                          {sep,
                                                           [{text,
                                                             [16,97,114,103,
                                                              117,109,101,110,
                                                              116,115,32,111,
                                                              102,32,116,104,
                                                              101]}],
                                                           0,false},
                                                          {text,"\baccept()"},
                                                          {sep,
                                                           [{text,[1,44]}],
                                                           0,false},
                                                          {text,"\tconnect()"},
                                                          {sep,
                                                           [{text,[1,44]}],
                                                           0,false},
                                                          {text,"\bwritev()"},
                                                          {sep,
                                                           [{text,[1,44]}],
                                                           0,false},
                                                          {text,
                                                           [7,119,114,105,116,
                                                            101,40,41]},
                                                          {sep,
                                                           [{text,
                                                             [5,44,32,97,110,
                                                              100]}],
                                                           0,false},
                                                          {text,
                                                           [6,114,101,97,100,
                                                            40,41]},
                                                          {sep,
                                                           [{text,
                                                             "¹callbacks should be ignored. The callbacks may be called in non-blocking mode. The callbacks are not allowed to change between blocking and non-blocking mode. In order for this to work,"}],
                                                           0,false},
                                                          {text,"\bselect()"},
                                                          {sep,
                                                           [{text,
                                                             [154,110,101,101,
                                                              100,115,32,116,
                                                              111,32,105,110,
                                                              116,101,114,97,
                                                              99,116,32,119,
                                                              105,116,104,32,
                                                              116,104,101,32,
                                                              115,111,99,107,
                                                              101,116,32,112,
                                                              114,105,109,105,
                                                              116,105,118,101,
                                                              115,32,117,115,
                                                              101,100,32,116,
                                                              104,101,32,115,
                                                              97,109,101,32,
                                                              119,97,121,32,
                                                              97,115,32,105,
                                                              116,32,105,110,
                                                              116,101,114,97,
                                                              99,116,115,32,
                                                              119,105,116,104,
                                                              32,116,104,101,
                                                              32,111,114,100,
                                                              105,110,97,114,
                                                              121,32,115,111,
                                                              99,107,101,116,
                                                              32,112,114,105,
                                                              109,105,116,105,
                                                              118,101,115,46,
                                                              32,73,102,32,
                                                              116,104,105,115,
                                                              32,105,115,32,
                                                              110,111,116,32,
                                                              116,104,101,32,
                                                              99,97,115,101,
                                                              44,32,116,104,
                                                              101,32,99,97,
                                                              108,108,98,97,
                                                              99,107,115]}],
                                                           0,false},
                                                          {text,
                                                           [4,110,101,101,
                                                            100]},
                                                          {sep,
                                                           [{text,
                                                             "2to implement timeouts and this flag should be set."}],
                                                           0,false}],
                                                         0,false}],
                                                       0,true},
                                                      null},
                                                     null}}],
                                                  0,false},
                                                 {text,[5,60,47,100,100,62]}],
                                                0,true},
                                               null},
                                              null}}}}},
                                         {text,[5,60,47,100,108,62]}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{text,
                                                "+More flags may be introduced in the future."}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}}],
                                       0,false},
                                      {text,[5,60,47,100,100,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,
                                      [{text,
                                        "*int (*socket)(void **ctx, void *setup_ctx)"}],
                                      0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {sep,
                                     [{above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{text,
                                              "-Create a socket and a context for the socket."}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{sep,
                                              [{text,
                                                [24,79,110,32,115,117,99,99,
                                                 101,115,115,32,105,116,32,
                                                 115,104,111,117,108,100,32,
                                                 115,101,116]}],
                                              0,false},
                                             {text,[4,42,99,116,120]},
                                             {sep,
                                              [{text,
                                                [142,116,111,32,112,111,105,
                                                 110,116,32,116,111,32,97,32,
                                                 99,111,110,116,101,120,116,
                                                 32,102,111,114,32,116,104,
                                                 101,32,99,114,101,97,116,101,
                                                 100,32,115,111,99,107,101,
                                                 116,46,32,84,104,105,115,32,
                                                 99,111,110,116,101,120,116,
                                                 32,119,105,108,108,32,98,101,
                                                 32,112,97,115,115,101,100,32,
                                                 116,111,32,97,108,108,32,111,
                                                 116,104,101,114,32,115,111,
                                                 99,107,101,116,32,99,97,108,
                                                 108,98,97,99,107,115,46,32,
                                                 84,104,105,115,32,102,117,
                                                 110,99,116,105,111,110,32,
                                                 119,105,108,108,32,98,101,32,
                                                 112,97,115,115,101,100,32,
                                                 116,104,101,32,115,97,109,
                                                 101]}],
                                              0,false},
                                             {text,"\rsetup_context"},
                                             {sep,
                                              [{text,
                                                "\eas passed to the preceeding"}],
                                              0,false},
                                             {text,
                                              [15,101,105,95,99,111,110,110,
                                               101,99,116,95,105,110,105,116]},
                                             {sep,
                                              [{text,[2,111,114]}],
                                              0,false},
                                             {text,
                                              [15,101,105,95,99,111,110,110,
                                               101,99,116,95,105,110,105,116]},
                                             {sep,
                                              [{text,[5,99,97,108,108,46]}],
                                              0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {sep,
                                       [{above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{sep,
                                                [{text,
                                                  ",During the lifetime of a socket, the pointer"}],
                                                0,false},
                                               {text,[4,42,99,116,120]},
                                               {text,[3,104,97,115]},
                                               {sep,
                                                [{text,
                                                  ":to remain the same. That is, it cannot later be relocated."}],
                                                0,false}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}}],
                                       0,false},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{text,
                                              "\eThis callback is mandatory."}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}}],
                                     0,false},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,
                                    [{text,
                                      [23,105,110,116,32,40,42,99,108,111,115,
                                       101,41,40,118,111,105,100,32,42,99,116,
                                       120,41]}],
                                    0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {sep,
                                   [{above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{sep,
                                            [{text,
                                              [30,67,108,111,115,101,32,116,
                                               104,101,32,115,111,99,107,101,
                                               116,32,105,100,101,110,116,105,
                                               102,105,101,100,32,98,121]}],
                                            0,false},
                                           {text,[3,99,116,120]},
                                           {sep,
                                            [{text,
                                              [24,97,110,100,32,100,101,115,
                                               116,114,111,121,32,116,104,101,
                                               32,99,111,110,116,101,120,116,
                                               46]}],
                                            0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{text,
                                            "\eThis callback is mandatory."}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}}],
                                   0,false},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{text,
                                    ";int (*listen)(void *ctx, void *addr, int *len, int backlog)"}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {sep,
                                 [{above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            [29,66,105,110,100,32,116,104,101,
                                             32,115,111,99,107,101,116,32,105,
                                             100,101,110,116,105,102,105,101,
                                             100,32,98,121]}],
                                          0,false},
                                         {text,[3,99,116,120]},
                                         {sep,
                                          [{text,
                                            "+to a local interface and then listen on it."}],
                                          0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,[{text,[3,84,104,101]}],0,false},
                                         {text,[4,97,100,100,114]},
                                         {sep,[{text,[3,97,110,100]}],0,false},
                                         {text,[3,108,101,110]},
                                         {sep,
                                          [{text,
                                            ":arguments are both input and output arguments. When called"}],
                                          0,false},
                                         {text,[4,97,100,100,114]},
                                         {sep,
                                          [{text,
                                            "(points to an address structure of lenght"}],
                                          0,false},
                                         {text,[4,42,108,101,110]},
                                         {sep,
                                          [{text,
                                            "zcontaining information on how to bind the socket. Uppon return this callback should have updated the structure referred by"}],
                                          0,false},
                                         {text,[4,97,100,100,114]},
                                         {sep,
                                          [{text,
                                            "6with information on how the socket actually was bound."}],
                                          0,false},
                                         {text,[4,42,108,101,110]},
                                         {sep,
                                          [{text,
                                            "(should be updated to reflect the size of"}],
                                          0,false},
                                         {text,[5,42,97,100,100,114]},
                                         {sep,[{text,"\bupdated."}],0,false},
                                         {text,[7,98,97,99,107,108,111,103]},
                                         {sep,
                                          [{text,
                                            "9identifies the size of the backlog for the listen socket."}],
                                          0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{text,
                                          "\eThis callback is mandatory."}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}}],
                                 0,false},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{text,
                                  "=int (*accept)(void **ctx, void *addr, int *len, unsigned tmo)"}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {sep,
                               [{above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          "5Accept connections on the listen socket identified by"}],
                                        0,false},
                                       {text,[4,42,99,116,120]},
                                       {sep,[{text,[1,46]}],0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          "^When a connection is accepted, a new context for the accepted connection should be created and"}],
                                        0,false},
                                       {text,[4,42,99,116,120]},
                                       {sep,
                                        [{text,
                                          "Vshould be updated to point to the new context for the accepted connection. When called"}],
                                        0,false},
                                       {text,[4,97,100,100,114]},
                                       {sep,
                                        [{text,
                                          "6points to an uninitialized address structure of lenght"}],
                                        0,false},
                                       {text,[4,42,108,101,110]},
                                       {sep,
                                        [{text,
                                          "j. Uppon return this callback should have updated this structure with information about the client address."}],
                                        0,false},
                                       {text,[4,42,108,101,110]},
                                       {sep,
                                        [{text,
                                          "(should be updated to reflect the size of"}],
                                        0,false},
                                       {text,[5,42,97,100,100,114]},
                                       {sep,[{text,"\bupdated."}],0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,[6,73,102,32,116,104,101]}],
                                        0,false},
                                       {text,
                                        [22,69,73,95,83,67,76,66,75,95,70,76,
                                         71,95,70,85,76,76,95,73,77,80,76]},
                                       {sep,
                                        [{text,
                                          [18,102,108,97,103,32,104,97,115,32,
                                           98,101,101,110,32,115,101,116,44]}],
                                        0,false},
                                       {text,[3,116,109,111]},
                                       {sep,
                                        [{text,
                                          "&contains timeout time in milliseconds."}],
                                        0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {sep,
                                 [{above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            ",During the lifetime of a socket, the pointer"}],
                                          0,false},
                                         {text,[4,42,99,116,120]},
                                         {text,[3,104,97,115]},
                                         {sep,
                                          [{text,
                                            ":to remain the same. That is, it cannot later be relocated."}],
                                          0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}}],
                                 0,false},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{text,"\eThis callback is mandatory."}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}}],
                               0,false},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                "<int (*connect)(void *ctx, void *addr, int len, unsigned tmo)"}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {sep,
                             [{above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        " Connect the socket identified by"}],
                                      0,false},
                                     {text,[3,99,116,120]},
                                     {sep,
                                      [{text,
                                        [28,116,111,32,116,104,101,32,97,100,
                                         100,114,101,115,115,32,105,100,101,
                                         110,116,105,102,105,101,100,32,98,
                                         121]}],
                                      0,false},
                                     {text,[4,97,100,100,114]},
                                     {sep,[{text,[1,46]}],0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,[{text,"\vWhen called"}],0,false},
                                     {text,[4,97,100,100,114]},
                                     {sep,
                                      [{text,
                                        "(points to an address structure of lenght"}],
                                      0,false},
                                     {text,[3,108,101,110]},
                                     {sep,
                                      [{text,
                                        "+containing information on where to connect."}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,[6,73,102,32,116,104,101]}],
                                      0,false},
                                     {text,
                                      [22,69,73,95,83,67,76,66,75,95,70,76,71,
                                       95,70,85,76,76,95,73,77,80,76]},
                                     {sep,
                                      [{text,
                                        [18,102,108,97,103,32,104,97,115,32,
                                         98,101,101,110,32,115,101,116,44]}],
                                      0,false},
                                     {text,[3,116,109,111]},
                                     {sep,
                                      [{text,
                                        "&contains timeout time in milliseconds."}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{text,"\eThis callback is mandatory."}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}}],
                             0,false},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,
                              "Rint (*writev)(void *ctx, const void *iov, long iovcnt, ssize_t *len, unsigned tmo)"}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {sep,
                           [{above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      "0Write data on the connected socket identified by"}],
                                    0,false},
                                   {text,[3,99,116,120]},
                                   {sep,[{text,[1,46]}],0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{text,[3,105,111,118]},
                                   {sep,
                                    [{text,
                                      [21,112,111,105,110,116,115,32,116,111,
                                       32,97,110,32,97,114,114,97,121,32,111,
                                       102]}],
                                    0,false},
                                   {text,"\fstruct iovec"},
                                   {sep,
                                    [{text,
                                      [20,115,116,114,117,99,116,117,114,101,
                                       115,32,111,102,32,108,101,110,103,116,
                                       104]}],
                                    0,false},
                                   {text,[6,105,111,118,99,110,116]},
                                   {sep,
                                    [{text,
                                      "Lcontaining data to write to the socket. On success, this callback should set"}],
                                    0,false},
                                   {text,[4,42,108,101,110]},
                                   {sep,
                                    [{text,
                                      ":to the amount of bytes successfully written on the socket."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,[6,73,102,32,116,104,101]}],
                                    0,false},
                                   {text,
                                    [22,69,73,95,83,67,76,66,75,95,70,76,71,
                                     95,70,85,76,76,95,73,77,80,76]},
                                   {sep,
                                    [{text,
                                      [18,102,108,97,103,32,104,97,115,32,98,
                                       101,101,110,32,115,101,116,44]}],
                                    0,false},
                                   {text,[3,116,109,111]},
                                   {sep,
                                    [{text,
                                      "&contains timeout time in milliseconds."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      "\"This callback is optional. Set the"}],
                                    0,false},
                                   {text,[6,119,114,105,116,101,118]},
                                   {sep,
                                    [{text,
                                      [16,102,105,101,108,100,32,105,110,32,
                                       116,104,101,32,116,104,101]}],
                                    0,false},
                                   {text,
                                    [19,101,105,95,115,111,99,107,101,116,95,
                                     99,97,108,108,98,97,99,107,115]},
                                   {sep,[{text,"\fstructure to"}],0,false},
                                   {text,[4,78,85,76,76]},
                                   {sep,
                                    [{text,
                                      [19,105,102,32,110,111,116,32,105,109,
                                       112,108,101,109,101,110,116,101,100,
                                       46]}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}}],
                           0,false},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,
                            "Dint (*write)(void *ctx, const char *buf, ssize_t *len, unsigned tmo)"}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {sep,
                         [{above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    "0Write data on the connected socket identified by"}],
                                  0,false},
                                 {text,[3,99,116,120]},
                                 {sep,[{text,[1,46]}],0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,[{text,"\vWhen called"}],0,false},
                                 {text,[3,98,117,102]},
                                 {sep,
                                  [{text,
                                    [28,112,111,105,110,116,115,32,116,111,32,
                                     97,32,98,117,102,102,101,114,32,111,102,
                                     32,108,101,110,103,116,104]}],
                                  0,false},
                                 {text,[4,42,108,101,110]},
                                 {sep,
                                  [{text,
                                    "Pcontaining the data to write on the socket. On success, this callback should set"}],
                                  0,false},
                                 {text,[4,42,108,101,110]},
                                 {sep,
                                  [{text,
                                    ":to the amount of bytes successfully written on the socket."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,[6,73,102,32,116,104,101]}],
                                  0,false},
                                 {text,
                                  [22,69,73,95,83,67,76,66,75,95,70,76,71,95,
                                   70,85,76,76,95,73,77,80,76]},
                                 {sep,
                                  [{text,
                                    [18,102,108,97,103,32,104,97,115,32,98,
                                     101,101,110,32,115,101,116,44]}],
                                  0,false},
                                 {text,[3,116,109,111]},
                                 {sep,
                                  [{text,
                                    "&contains timeout time in milliseconds."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,"\eThis callback is mandatory."}],
                                0,false}],
                              0,true},
                             null},
                            null}}],
                         0,false},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{text,
                          "=int (*read)(void *ctx, char *buf, ssize_t *len, unsigned tmo)"}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {sep,
                       [{above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  "/Read data on the connected socket identified by"}],
                                0,false},
                               {text,[3,99,116,120]},
                               {sep,[{text,[1,46]}],0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,[3,98,117,102]},
                               {sep,
                                [{text,
                                  [28,112,111,105,110,116,115,32,116,111,32,
                                   97,32,98,117,102,102,101,114,32,111,102,32,
                                   108,101,110,103,116,104]}],
                                0,false},
                               {text,[4,42,108,101,110]},
                               {sep,
                                [{text,
                                  "Mwhere the read data should be placed. On success, this callback should update"}],
                                0,false},
                               {text,[4,42,108,101,110]},
                               {sep,
                                [{text,
                                  "7to the amount of bytes successfully read on the socket."}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,[6,73,102,32,116,104,101]}],
                                0,false},
                               {text,
                                [22,69,73,95,83,67,76,66,75,95,70,76,71,95,70,
                                 85,76,76,95,73,77,80,76]},
                               {sep,
                                [{text,
                                  [18,102,108,97,103,32,104,97,115,32,98,101,
                                   101,110,32,115,101,116,44]}],
                                0,false},
                               {text,[3,116,109,111]},
                               {sep,
                                [{text,
                                  "&contains timeout time in milliseconds."}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,"\eThis callback is mandatory."}],
                              0,false}],
                            0,true},
                           null},
                          null}}],
                       0,false},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{text,
                        "7int (*handshake_packet_header_size)(void *ctx, int *sz)"}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              "ZInform about handshake packet header size to use during the Erlang distribution handshake."}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,[{text,"\vOn success,"}],0,false},
                             {text,[3,42,115,122]},
                             {sep,
                              [{text,
                                "Jshould be set to the handshake packet header size to use. Valid values are"}],
                              0,false},
                             {text,[1,50]},
                             {sep,[{text,[3,97,110,100]}],0,false},
                             {text,[1,52]},
                             {sep,
                              [{text,
                                "8. Erlang TCP distribution use a handshake packet size of"}],
                              0,false},
                             {text,[1,50]},
                             {sep,
                              [{text,
                                ":and Erlang TLS distribution use a handshake packet size of"}],
                              0,false},
                             {text,[1,52]},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,"\eThis callback is mandatory."}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{text,",int (*connect_handshake_complete)(void *ctx)"}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "CCalled when a locally started handshake has completed successfully."}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,"\"This callback is optional. Set the"}],
                            0,false},
                           {text,
                            [26,99,111,110,110,101,99,116,95,104,97,110,100,
                             115,104,97,107,101,95,99,111,109,112,108,101,116,
                             101]},
                           {sep,[{text,"\ffield in the"}],0,false},
                           {text,
                            [19,101,105,95,115,111,99,107,101,116,95,99,97,
                             108,108,98,97,99,107,115]},
                           {sep,[{text,"\fstructure to"}],0,false},
                           {text,[4,78,85,76,76]},
                           {sep,
                            [{text,
                              [19,105,102,32,110,111,116,32,105,109,112,108,
                               101,109,101,110,116,101,100,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{text,"+int (*accept_handshake_complete)(void *ctx)"}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "DCalled when a remotely started handshake has completed successfully."}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,"\"This callback is optional. Set the"}],
                          0,false},
                         {text,
                          [25,97,99,99,101,112,116,95,104,97,110,100,115,104,
                           97,107,101,95,99,111,109,112,108,101,116,101]},
                         {sep,[{text,"\ffield in the"}],0,false},
                         {text,
                          [19,101,105,95,115,111,99,107,101,116,95,99,97,108,
                           108,98,97,99,107,115]},
                         {sep,[{text,"\fstructure to"}],0,false},
                         {text,[4,78,85,76,76]},
                         {sep,
                          [{text,
                            [19,105,102,32,110,111,116,32,105,109,112,108,101,
                             109,101,110,116,101,100,46]}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,"!int (*get_fd)(void *ctx, int *fd)"}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "FInform about file descriptor used by the socket which is identified by"}],
                        0,false},
                       {text,[3,99,116,120]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            "4During the lifetime of a socket, the file descriptor"}],
                          0,false},
                         {text,[3,104,97,115]},
                         {sep,
                          [{text,
                            "Rto remain the same. That is, repeated calls to this callback with the same context"}],
                          0,false},
                         {text,[6,115,104,111,117,108,100]},
                         {sep,
                          [{text,"'always report the same file descriptor."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [19,84,104,101,32,102,105,108,101,32,100,101,115,
                             99,114,105,112,116,111,114]}],
                          0,false},
                         {text,[3,104,97,115]},
                         {sep,
                          [{text,
                            [138,116,111,32,98,101,32,97,32,114,101,97,108,32,
                             102,105,108,101,32,100,101,115,99,114,105,112,
                             116,111,114,46,32,84,104,97,116,32,105,115,44,32,
                             110,111,32,111,116,104,101,114,32,111,112,101,
                             114,97,116,105,111,110,32,115,104,111,117,108,
                             100,32,98,101,32,97,98,108,101,32,116,111,32,103,
                             101,116,32,116,104,101,32,115,97,109,101,32,102,
                             105,108,101,32,100,101,115,99,114,105,112,116,
                             111,114,32,117,110,116,105,108,32,105,116,32,104,
                             97,115,32,98,101,101,110,32,114,101,108,101,97,
                             115,101,100,32,98,121,32,116,104,101]}],
                          0,false},
                         {text,[7,99,108,111,115,101,40,41]},
                         {sep,[{text,"\tcallback."}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,[{text,"\eThis callback is mandatory."}],0,false}],
                    0,true},
                   null},
                  null}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "I## ei_gethostbyaddr(const char *addr, int len, int type):struct hostent *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [147,35,35,32,101,105,95,103,101,116,104,111,115,116,98,121,97,100,
         100,114,95,114,40,99,111,110,115,116,32,99,104,97,114,32,42,97,100,
         100,114,44,32,105,110,116,32,108,101,110,103,116,104,44,32,32,105,
         110,116,32,116,121,112,101,44,32,32,115,116,114,117,99,116,32,104,
         111,115,116,101,110,116,32,42,104,111,115,116,112,44,32,99,104,97,
         114,32,42,98,117,102,102,101,114,44,32,32,32,105,110,116,32,98,117,
         102,108,101,110,44,32,32,105,110,116,32,42,104,95,101,114,114,110,
         111,112,41,58,115,116,114,117,99,116,32,104,111,115,116,101,110,116,
         32,42]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"6## ei_gethostbyname(const char *name):struct hostent *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "|## ei_gethostbyname_r(const char *name,  struct hostent *hostp,  char *buffer,  int buflen,  int *h_errnop):struct hostent *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,78,97,109,101,32,108,111,111,107,117,112,32,102,117,110,99,
             116,105,111,110,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "<Convenience functions for some common name lookup functions."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "@## ei_accept(ei_cnode *ec, int listensock, ErlConnect *conp):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Accept a connection from another node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "FUsed by a server process to accept a connection from a client process."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[4,42,101,99,42]},
            {sep,
             [{text,
               [24,105,115,32,116,104,101,32,67,45,110,111,100,101,32,115,116,
                114,117,99,116,117,114,101,46]}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\f*listensock*"},
            {sep,[{text,"%is an open socket descriptor on which"}],0,false},
            {text,"\n*listen()*"},
            {sep,[{text,"\ehas previously been called."}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,[6,42,99,111,110,112,42]},
                  {sep,
                   [{text,
                     [18,105,115,32,97,32,112,111,105,110,116,101,114,32,116,
                      111,32,97,110]}],
                   0,false},
                  {text,"\f*ErlConnect*"},
                  {sep,
                   [{text,
                     [29,115,116,114,117,99,116,44,32,100,101,115,99,114,105,
                      98,101,100,32,97,115,32,102,111,108,108,111,119,115,
                      58]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "c\ntypedef struct {\n  char ipadr[4];             \n  char nodename[MAXNODELEN];\n} ErlConnect;\n        "}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\vOn success,"}],0,false},
             {text,[6,42,99,111,110,112,42]},
             {sep,
              [{text,
                "sis filled in with the address and node name of the connecting client and a file descriptor is returned. On failure,"}],
              0,false},
             {text,"\v*ERL_ERROR*"},
             {sep,
              [{text,
                [15,105,115,32,114,101,116,117,114,110,101,100,32,97,110,
                 100]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,[5,42,69,73,79,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "Y## ei_accept_tmo(ei_cnode *ec, int listensock, ErlConnect *conp, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "=Accept a connection from another node with optional time-out."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"\v*ei_accept*"},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\"## ei_close_connection(int fd):int"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [19,67,108,111,115,101,32,97,32,99,111,110,110,101,99,116,105,111,
             110,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "7Closes a previously opened connection or listen socket."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"/## ei_connect(ei_cnode* ec, char *nodename):int"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "A## ei_xconnect(ei_cnode* ec, Erl_IpAddr adr, char *alivename):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Establish a connection to an Erlang node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"'Sets up a connection to an Erlang node."}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[15,42,101,105,95,120,99,111,110,110,101,99,116,40,41,42]},
             {sep,
              [{text,
                "arequires the IP address of the remote host and the alive name of the remote node to be specified."}],
              0,false},
             {text,[14,42,101,105,95,99,111,110,110,101,99,116,40,41,42]},
             {sep,
              [{text,
                "]provides an alternative interface and determines the information from the node name provided."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[6,42,97,100,100,114,42]},
            {sep,
             [{text,",is the 32-bit IP address of the remote host."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[7,42,97,108,105,118,101,42]},
            {sep,[{text,"$is the alivename of the remote node."}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[6,42,110,111,100,101,42]},
           {sep,
            [{text,
              [31,105,115,32,116,104,101,32,110,97,109,101,32,111,102,32,116,
               104,101,32,114,101,109,111,116,101,32,110,111,100,101,46]}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [141,84,104,101,115,101,32,102,117,110,99,116,105,111,110,115,
                 32,114,101,116,117,114,110,32,97,110,32,111,112,101,110,32,
                 102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,
                 111,110,32,115,117,99,99,101,115,115,44,32,111,114,32,97,32,
                 110,101,103,97,116,105,118,101,32,118,97,108,117,101,32,105,
                 110,100,105,99,97,116,105,110,103,32,116,104,97,116,32,97,
                 110,32,101,114,114,111,114,32,111,99,99,117,114,114,101,100,
                 46,32,73,110,32,116,104,101,32,108,97,116,116,101,114,32,99,
                 97,115,101,32,116,104,101,121,32,115,101,116]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,
              [{text,
                [24,116,111,32,111,110,101,32,111,102,32,116,104,101,32,102,
                 111,108,108,111,119,105,110,103,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\fEHOSTUNREACH"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,
                      [{text,
                        [15,84,104,101,32,114,101,109,111,116,101,32,104,111,
                         115,116]}],
                      0,false},
                     {text,[4,110,111,100,101]},
                     {sep,
                      [{text,
                        [15,105,115,32,117,110,114,101,97,99,104,97,98,108,
                         101,46]}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[6,69,78,79,77,69,77]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [28,78,111,32,109,111,114,101,32,109,101,109,111,114,121,32,
                   105,115,32,97,118,97,105,108,97,98,108,101,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,69,73,79]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\nI/O error."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[5,65,108,115,111,44]}],0,false},
             {text,[7,42,101,114,114,110,111,42]},
             {sep,[{text,"\vvalues from"}],0,false},
             {text,"\b*socket*"},
             {text,[7,42,42,40,50,41,42,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\t*connect*"},
             {text,[7,42,42,40,50,41,42,42]},
             {sep,[{text,"#system calls may be propagated into"}],0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [283,10,35,100,101,102,105,110,101,32,78,79,68,69,32,32,32,34,
               109,97,100,111,110,110,97,64,99,104,105,118,97,115,46,100,117,
               46,101,116,120,46,101,114,105,99,115,115,111,110,46,115,101,34,
               10,35,100,101,102,105,110,101,32,65,76,73,86,69,32,32,34,109,
               97,100,111,110,110,97,34,10,35,100,101,102,105,110,101,32,73,
               80,95,65,68,68,82,32,34,49,53,48,46,50,51,54,46,49,52,46,55,53,
               34,10,10,47,42,42,42,32,86,97,114,105,97,110,116,32,49,32,42,
               42,42,47,10,105,110,116,32,102,100,32,61,32,101,105,95,99,111,
               110,110,101,99,116,40,38,101,99,44,32,78,79,68,69,41,59,10,10,
               47,42,42,42,32,86,97,114,105,97,110,116,32,50,32,42,42,42,47,
               10,115,116,114,117,99,116,32,105,110,95,97,100,100,114,32,97,
               100,100,114,59,10,97,100,100,114,46,115,95,97,100,100,114,32,
               61,32,105,110,101,116,95,97,100,100,114,40,73,80,95,65,68,68,
               82,41,59,10,102,100,32,61,32,101,105,95,120,99,111,110,110,101,
               99,116,40,38,101,99,44,32,38,97,100,100,114,44,32,65,76,73,86,
               69,41,59,10,32,32,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "d## ei_connect_init(ei_cnode* ec, const char* this_node_name, const char *cookie, short creation):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "¤## ei_connect_init_ussi(ei_cnode* ec, const char* this_node_name, const char *cookie, short creation, ei_socket_callbacks *cbs, int cbs_sz, void *setup_context):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "¯## ei_connect_xinit(ei_cnode* ec, const char *thishostname, const char *thisalivename, const char *thisnodename, Erl_IpAddr thisipaddr, const char *cookie, short creation):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "ï## ei_connect_xinit_ussi(ei_cnode* ec, const char *thishostname, const char *thisalivename, const char *thisnodename, Erl_IpAddr thisipaddr, const char *cookie, short creation, ei_socket_callbacks *cbs, int cbs_sz, void *setup_context):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [28,73,110,105,116,105,97,108,105,122,101,32,102,111,114,32,97,32,
             99,111,110,110,101,99,116,105,111,110,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [15,73,110,105,116,105,97,108,105,122,101,115,32,116,104,
                 101]}],
              0,false},
             {text,[4,42,101,99,42]},
             {sep,
              [{text,
                [130,115,116,114,117,99,116,117,114,101,44,32,116,111,32,105,
                 100,101,110,116,105,102,121,32,116,104,101,32,110,111,100,
                 101,32,110,97,109,101,32,97,110,100,32,99,111,111,107,105,
                 101,32,111,102,32,116,104,101,32,115,101,114,118,101,114,46,
                 32,79,110,101,32,111,102,32,116,104,101,109,32,109,117,115,
                 116,32,98,101,32,99,97,108,108,101,100,32,98,101,102,111,114,
                 101,32,111,116,104,101,114,32,102,117,110,99,116,105,111,110,
                 115,32,116,104,97,116,32,119,111,114,107,115,32,111,110,32,
                 116,104,101]}],
              0,false},
             {text,"\n*ei_cnode*"},
             {sep,
              [{text,
                "Otype or a file descriptor associated with a connection to another node is used."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,[4,42,101,99,42]},
                    {sep,
                     [{text,
                       "Kis a structure containing information about the C-node. It is used in other"}],
                     0,false},
                    {text,[4,42,101,105,42]},
                    {sep,
                     [{text,",functions for connecting and receiving data."}],
                     0,false}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [16,42,116,104,105,115,95,110,111,100,101,95,110,97,109,
                      101,42]},
                    {sep,
                     [{text,
                       "<is the registered name of the process (the name before '@')."}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,"\b*cookie*"},
                   {sep,[{text,"\eis the cookie for the node."}],0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\n*creation*"},
                  {sep,
                   [{text,
                     [154,105,100,101,110,116,105,102,105,101,115,32,97,32,
                      115,112,101,99,105,102,105,99,32,105,110,115,116,97,110,
                      99,101,32,111,102,32,97,32,67,45,110,111,100,101,46,32,
                      73,116,32,99,97,110,32,104,101,108,112,32,112,114,101,
                      118,101,110,116,32,116,104,101,32,110,111,100,101,32,
                      102,114,111,109,32,114,101,99,101,105,118,105,110,103,
                      32,109,101,115,115,97,103,101,115,32,115,101,110,116,32,
                      116,111,32,97,110,32,101,97,114,108,105,101,114,32,112,
                      114,111,99,101,115,115,32,119,105,116,104,32,116,104,
                      101,32,115,97,109,101,32,114,101,103,105,115,116,101,
                      114,101,100,32,110,97,109,101,46]}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [14,42,116,104,105,115,104,111,115,116,110,97,109,101,42]},
                 {sep,
                  [{text,
                    "tis the name of the machine we are running on. If long names are to be used, they are to be fully qualified (that is,"}],
                  0,false},
                 {text,
                  [24,42,100,117,114,105,110,46,101,114,105,120,46,101,114,
                   105,99,115,115,111,110,46,115,101,42]},
                 {sep,[{text,"\ninstead of"}],0,false},
                 {text,[7,42,100,117,114,105,110,42]},
                 {sep,[{text,[2,41,46]}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [15,42,116,104,105,115,97,108,105,118,101,110,97,109,101,42]},
                {sep,
                 [{text,"&is the registered name of the process."}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [14,42,116,104,105,115,110,111,100,101,110,97,109,101,42]},
               {sep,
                [{text,"&is the full name of the node, that is,"}],
                0,false},
               {text,
                [14,42,101,105,110,111,100,101,64,100,117,114,105,110,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"\v*thispaddr*"},
              {sep,
               [{text,
                 [30,105,102,32,116,104,101,32,73,80,32,97,100,100,114,101,
                  115,115,32,111,102,32,116,104,101,32,104,111,115,116,46]}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[5,42,99,98,115,42]},
             {sep,
              [{text,
                [17,105,115,32,97,32,112,111,105,110,116,101,114,32,116,111,
                 32,97]}],
              0,false},
             {text,"*[callback structure](#ei_socket_callbacks)"},
             {sep,
              [{text,".implementing and alternative socket interface."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\b*cbs_sz*"},
            {sep,
             [{text,"*is the size of the structure pointed to by"}],
             0,false},
            {text,[5,42,99,98,115,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,42,115,101,116,117,112,95,99,111,110,116,101,120,116,42]},
           {sep,
            [{text,
              "Iis a pointer to a structure that will be passed as second argument to the"}],
            0,false},
           {text,"\b*socket*"},
           {sep,
            [{text,[15,99,97,108,108,98,97,99,107,32,105,110,32,116,104,101]}],
            0,false},
           {text,[5,42,99,98,115,42]},
           {sep,[{text,"\nstructure."}],0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GA C-node acting as a server is assigned a creation number when it calls"}],
              0,false},
             {text,[14,42,101,105,95,112,117,98,108,105,115,104,40,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ÄA connection is closed by simply closing the socket. For information about how to close the socket gracefully (when there are outgoing packets before close), see the relevant system documentation."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "JThese functions return a negative value indicating that an error occurred."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[14,42,42,69,120,97,109,112,108,101,32,49,58,42,42]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [415,10,105,110,116,32,110,32,61,32,48,59,10,115,116,114,117,99,
               116,32,105,110,95,97,100,100,114,32,97,100,100,114,59,10,101,
               105,95,99,110,111,100,101,32,101,99,59,10,97,100,100,114,46,
               115,95,97,100,100,114,32,61,32,105,110,101,116,95,97,100,100,
               114,40,34,49,53,48,46,50,51,54,46,49,52,46,55,53,34,41,59,10,
               105,102,32,40,101,105,95,99,111,110,110,101,99,116,95,120,105,
               110,105,116,40,38,101,99,44,10,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,34,99,104,105,118,97,115,34,
               44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,34,109,97,100,111,110,110,97,34,44,10,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,109,97,100,111,
               110,110,97,64,99,104,105,118,97,115,46,100,117,46,101,116,120,
               46,101,114,105,99,115,115,111,110,46,115,101,34,44,10,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,38,97,
               100,100,114,59,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,34,99,111,111,107,105,101,46,46,46,34,44,10,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               110,43,43,41,32,60,32,48,41,32,123,10,32,32,32,32,102,112,114,
               105,110,116,102,40,115,116,100,101,114,114,44,34,69,82,82,79,
               82,32,119,104,101,110,32,105,110,105,116,105,97,108,105,122,
               105,110,103,58,32,37,100,34,44,101,114,108,95,101,114,114,110,
               111,41,59,10,32,32,32,32,101,120,105,116,40,45,49,41,59,10,125,
               10,32,32,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[14,42,42,69,120,97,109,112,108,101,32,50,58,42,42]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [147,10,105,102,32,40,101,105,95,99,111,110,110,101,99,116,95,
               105,110,105,116,40,38,101,99,44,32,34,109,97,100,111,110,110,
               97,34,44,32,34,99,111,111,107,105,101,46,46,46,34,44,32,110,43,
               43,41,32,60,32,48,41,32,123,10,32,32,32,32,102,112,114,105,110,
               116,102,40,115,116,100,101,114,114,44,34,69,82,82,79,82,32,119,
               104,101,110,32,105,110,105,116,105,97,108,105,122,105,110,103,
               58,32,37,100,34,44,101,114,108,95,101,114,114,110,111,41,59,10,
               32,32,32,32,101,120,105,116,40,45,49,41,59,10,125,10,32,32,32,
               32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "H## ei_connect_tmo(ei_cnode* ec, char *nodename, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "Z## ei_xconnect_tmo(ei_cnode* ec, Erl_IpAddr adr, char *alivename, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "@Establish a connection to an Erlang node with optional time-out."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"\f*ei_connect*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\r*ei_xconnect*"},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [30,35,35,32,101,105,95,103,101,116,95,116,114,97,99,101,108,101,118,
         101,108,40,118,111,105,100,41,58,105,110,116]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"$## ei_set_tracelevel(int level):void"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Get and set functions for tracing."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [139,85,115,101,100,32,116,111,32,115,101,116,32,116,114,97,
                 99,105,110,103,32,111,110,32,116,104,101,32,100,105,115,116,
                 114,105,98,117,116,105,111,110,46,32,84,104,101,32,108,101,
                 118,101,108,115,32,97,114,101,32,100,105,102,102,101,114,101,
                 110,116,32,118,101,114,98,111,115,105,116,121,32,108,101,118,
                 101,108,115,46,32,65,32,104,105,103,104,101,114,32,108,101,
                 118,101,108,32,109,101,97,110,115,32,109,111,114,101,32,105,
                 110,102,111,114,109,97,116,105,111,110,46,32,83,101,101,32,
                 97,108,115,111,32,115,101,99,116,105,111,110]}],
              0,false},
             {text,"'[Debug Information](#debug_information)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"$These functions are not thread safe."}],0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"6## ei_listen(ei_cnode *ec, int *port, int backlog):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "G## ei_xlisten(ei_cnode *ec, Erl_IpAddr adr, int *port, int backlog):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [23,67,114,101,97,116,101,32,97,32,108,105,115,116,101,110,32,115,
             111,99,107,101,116,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "zUsed by a server process to setup a listen socket which later can be used for accepting connections from client processes."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[4,42,101,99,42]},
             {sep,
              [{text,
                [24,105,115,32,116,104,101,32,67,45,110,111,100,101,32,115,
                 116,114,117,99,116,117,114,101,46]}],
              0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[5,42,97,100,114,42]},
             {sep,
              [{text,
                [30,105,115,32,108,111,99,97,108,32,105,110,116,101,114,102,
                 97,99,101,32,116,111,32,98,105,110,100,32,116,111,46]}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[6,42,112,111,114,116,42]},
            {sep,
             [{text,
               "Dis a pointer to an integer containing the port number to bind to. If"}],
             0,false},
            {text,[7,42,42,112,111,114,116,42]},
            {sep,[{text,[6,101,113,117,97,108,115]}],0,false},
            {text,[3,42,48,42]},
            {sep,[{text,"\fwhen calling"}],0,false},
            {text,"\r*ei_listen()*"},
            {sep,
             [{text,
               "<, the socket will be bound to an ephemeral port. On success,"}],
             0,false},
            {text,"\r*ei_listen()*"},
            {sep,
             [{text,
               [24,119,105,108,108,32,117,112,100,97,116,101,32,116,104,101,
                32,118,97,108,117,101,32,111,102]}],
             0,false},
            {text,[7,42,42,112,111,114,116,42]},
            {sep,
             [{text,
               [30,116,111,32,116,104,101,32,112,111,114,116,32,97,99,116,117,
                97,108,108,121,32,98,111,117,110,100,32,116,111,46]}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\t*backlog*"},
           {sep,
            [{text,"*is maximum backlog of pending connections."}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\v*ei_listen*"},
             {sep,
              [{text,
                "Iwill create a socket, bind to a port on the local interface identified by"}],
              0,false},
             {text,[5,42,97,100,114,42]},
             {sep,[{text,"\e(or all local interfaces if"}],0,false},
             {text,"\r*ei_listen()*"},
             {sep,
              [{text,
                "}is called), and mark the socket as a passive socket (that is, a socket that will be used for accepting incoming connections)."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "HOn success, a file descriptor is returned which can be used in a call to"}],
              0,false},
             {text,"\r*ei_accept()*"},
             {sep,[{text,"\r. On failure,"}],0,false},
             {text,"\v*ERL_ERROR*"},
             {sep,
              [{text,
                [15,105,115,32,114,101,116,117,114,110,101,100,32,97,110,
                 100]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,[5,42,69,73,79,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,")## ei_publish(ei_cnode *ec, int port):int"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [20,80,117,98,108,105,115,104,32,97,32,110,111,100,101,32,110,97,
             109,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ÞUsed by a server process to register with the local name server EPMD, thereby allowing other processes to send messages by using the registered name. Before calling either of these functions, the process should have called"}],
              0,false},
             {text,"\b*bind()*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\n*listen()*"},
             {sep,
              [{text,
                [18,111,110,32,97,110,32,111,112,101,110,32,115,111,99,107,
                 101,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[4,42,101,99,42]},
            {sep,
             [{text,
               [24,105,115,32,116,104,101,32,67,45,110,111,100,101,32,115,116,
                114,117,99,116,117,114,101,46]}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[6,42,112,111,114,116,42]},
            {sep,
             [{text,
               "pis the local name to register, and is to be the same as the port number that was previously bound to the socket."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[6,42,97,100,100,114,42]},
           {sep,
            [{text,"+is the 32-bit IP address of the local host."}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ITo unregister with EPMD, simply close the returned descriptor. Do not use"}],
              0,false},
             {text,
              [16,42,101,105,95,117,110,112,117,98,108,105,115,104,40,41,42]},
             {sep,
              [{text,
                [29,44,32,119,104,105,99,104,32,105,115,32,100,101,112,114,
                 101,99,97,116,101,100,32,97,110,121,119,97,121,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "aOn success, the function returns a descriptor connecting the calling process to EPMD. On failure,"}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,
              [{text,
                [15,105,115,32,114,101,116,117,114,110,101,100,32,97,110,
                 100]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,[5,42,69,73,79,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[5,65,108,115,111,44]}],0,false},
             {text,[7,42,101,114,114,110,111,42]},
             {sep,[{text,"\vvalues from"}],0,false},
             {text,"\b*socket*"},
             {text,[7,42,42,40,50,41,42,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\t*connect*"},
             {text,[7,42,42,40,50,41,42,42]},
             {sep,[{text,"#system calls may be propagated into"}],0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "B## ei_publish_tmo(ei_cnode *ec, int port, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Publish a node name with optional time-out."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"\f*ei_publish*"},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,";## ei_receive(int fd, unsigned char* bufp, int bufsize):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [18,82,101,99,101,105,118,101,32,97,32,109,101,115,115,97,103,101,
             46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "SReceives a message consisting of a sequence of bytes in the Erlang external format."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[4,42,102,100,42]},
            {sep,
             [{text,
               "Mis an open descriptor to an Erlang connection. It is obtained from a previous"}],
             0,false},
            {text,"\f*ei_connect*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\v*ei_accept*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[6,42,98,117,102,112,42]},
            {sep,
             [{text,
               "6is a buffer large enough to hold the expected message."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\t*bufsize*"},
           {sep,
            [{text,
              [21,105,110,100,105,99,97,116,101,115,32,116,104,101,32,115,105,
               122,101,32,111,102]}],
            0,false},
           {text,[6,42,98,117,102,112,42]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[4,73,102,32,97]}],0,false},
             {text,"\b**tick**"},
             {sep,
              [{text,
                [138,111,99,99,117,114,115,44,32,116,104,97,116,32,105,115,44,
                 32,116,104,101,32,69,114,108,97,110,103,32,110,111,100,101,
                 32,111,110,32,116,104,101,32,111,116,104,101,114,32,101,110,
                 100,32,111,102,32,116,104,101,32,99,111,110,110,101,99,116,
                 105,111,110,32,104,97,115,32,112,111,108,108,101,100,32,116,
                 104,105,115,32,110,111,100,101,32,116,111,32,115,101,101,32,
                 105,102,32,105,116,32,105,115,32,115,116,105,108,108,32,97,
                 108,105,118,101,44,32,116,104,101,32,102,117,110,99,116,105,
                 111,110,32,114,101,116,117,114,110,115]}],
              0,false},
             {text,"\n*ERL_TICK*"},
             {sep,
              [{text,"-and no message is placed in the buffer. Also,"}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,"\b*EAGAIN*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [150,79,110,32,115,117,99,99,101,115,115,44,32,116,104,101,32,
                 109,101,115,115,97,103,101,32,105,115,32,112,108,97,99,101,
                 100,32,105,110,32,116,104,101,32,115,112,101,99,105,102,105,
                 101,100,32,98,117,102,102,101,114,32,97,110,100,32,116,104,
                 101,32,102,117,110,99,116,105,111,110,32,114,101,116,117,114,
                 110,115,32,116,104,101,32,110,117,109,98,101,114,32,111,102,
                 32,98,121,116,101,115,32,97,99,116,117,97,108,108,121,32,114,
                 101,97,100,46,32,79,110,32,102,97,105,108,117,114,101,44,32,
                 116,104,101,32,102,117,110,99,116,105,111,110,32,114,101,116,
                 117,114,110,115]}],
              0,false},
             {text,"\v*ERL_ERROR*"},
             {sep,[{text,"\band sets"}],0,false},
             {text,"\v*erl_errno*"},
             {sep,
              [{text,
                [24,116,111,32,111,110,101,32,111,102,32,116,104,101,32,102,
                 111,108,108,111,119,105,110,103,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,[6,69,65,71,65,73,78]}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,"\eTemporary error: Try again."},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\bEMSGSIZE"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [20,66,117,102,102,101,114,32,105,115,32,116,111,111,32,115,
                   109,97,108,108,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,69,73,79]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\nI/O error."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "Z## ei_receive_encoded(int fd, char **mbufp, int *bufsz,  erlang_msg *msg, int *msglen):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Obsolete function for receiving a message."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [147,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,
               115,32,114,101,116,97,105,110,101,100,32,102,111,114,32,99,111,
               109,112,97,116,105,98,105,108,105,116,121,32,119,105,116,104,
               32,99,111,100,101,32,103,101,110,101,114,97,116,101,100,32,98,
               121,32,116,104,101,32,105,110,116,101,114,102,97,99,101,32,99,
               111,109,112,105,108,101,114,32,97,110,100,32,119,105,116,104,
               32,99,111,100,101,32,102,111,108,108,111,119,105,110,103,32,
               101,120,97,109,112,108,101,115,32,105,110,32,116,104,101,32,
               115,97,109,101,32,97,112,112,108,105,99,97,116,105,111,110,
               46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7In essence, the function performs the same operation as"}],
              0,false},
             {text,
              [17,42,101,105,95,120,114,101,99,101,105,118,101,95,109,115,103,
               42]},
             {sep,
              [{text,
                [25,44,32,98,117,116,32,105,110,115,116,101,97,100,32,111,102,
                 32,117,115,105,110,103,32,97,110]}],
              0,false},
             {text,"\v*ei_x_buff*"},
             {sep,
              [{text,
                "9, the function expects a pointer to a character pointer ("}],
              0,false},
             {text,[7,42,109,98,117,102,112,42]},
             {sep,
              [{text,
                "H), where the character pointer is to point to a memory area allocated by"}],
              0,false},
             {text,"\b*malloc*"},
             {sep,[{text,"\n. Argument"}],0,false},
             {text,[7,42,98,117,102,115,122,42]},
             {sep,
              [{text,
                "°is to be a pointer to an integer containing the exact size (in bytes) of the memory area. The function may reallocate the memory area and will in such cases put the new size in"}],
              0,false},
             {text,"\b**bufsz*"},
             {sep,[{text,"\nand update"}],0,false},
             {text,"\b**mbufp*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [14,82,101,116,117,114,110,115,32,101,105,116,104,101,114]}],
              0,false},
             {text,"\n*ERL_TICK*"},
             {sep,[{text,[6,111,114,32,116,104,101]}],0,false},
             {text,"\t*msgtype*"},
             {sep,[{text,"\ffield of the"}],0,false},
             {text,
              [17,42,101,114,108,97,110,103,95,109,115,103,32,42,109,115,103,
               42]},
             {sep,[{text,"%. The length of the message is put in"}],0,false},
             {text,"\t**msglen*"},
             {sep,
              [{text,
                [18,46,32,79,110,32,101,114,114,111,114,32,97,32,118,97,108,
                 117,101]}],
              0,false},
             {text,[5,42,60,32,48,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [24,73,116,32,105,115,32,114,101,99,111,109,109,101,110,100,
                 101,100,32,116,111,32,117,115,101]}],
              0,false},
             {text,
              [17,42,101,105,95,120,114,101,99,101,105,118,101,95,109,115,103,
               42]},
             {sep,
              [{text,
                [134,105,110,115,116,101,97,100,32,119,104,101,110,32,112,111,
                 115,115,105,98,108,101,44,32,102,111,114,32,116,104,101,32,
                 115,97,107,101,32,111,102,32,114,101,97,100,97,98,105,108,
                 105,116,121,46,32,72,111,119,101,118,101,114,44,32,116,104,
                 101,32,102,117,110,99,116,105,111,110,32,119,105,108,108,32,
                 98,101,32,114,101,116,97,105,110,101,100,32,105,110,32,116,
                 104,101,32,105,110,116,101,114,102,97,99,101,32,102,111,114,
                 32,99,111,109,112,97,116,105,98,105,108,105,116,121,32,97,
                 110,100,32,119,105,108,108]}],
              0,false},
             {text,[7,42,42,110,111,116,42,42]},
             {sep,
              [{text,"3be removed in future releases without prior notice."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "s## ei_receive_encoded_tmo(int fd, char **mbufp, int *bufsz,  erlang_msg *msg, int *msglen, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"8Obsolete function for receiving a message with time-out."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [20,42,101,105,95,114,101,99,101,105,118,101,95,101,110,99,111,
               100,101,100,42]},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"<## ei_receive_msg(int fd, erlang_msg* msg, ei_x_buff* x):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"=## ei_xreceive_msg(int fd, erlang_msg* msg, ei_x_buff* x):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [18,82,101,99,101,105,118,101,32,97,32,109,101,115,115,97,103,101,
             46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#Receives a message to the buffer in"}],0,false},
             {text,[3,42,120,42]},
             {sep,[{text,[1,46]}],0,false},
             {text,
              [17,42,101,105,95,120,114,101,99,101,105,118,101,95,109,115,103,
               42]},
             {sep,
              [{text,
                [20,97,108,108,111,119,115,32,116,104,101,32,98,117,102,102,
                 101,114,32,105,110]}],
              0,false},
             {text,[3,42,120,42]},
             {sep,[{text,"\fto grow, but"}],0,false},
             {text,
              [16,42,101,105,95,114,101,99,101,105,118,101,95,109,115,103,42]},
             {sep,
              [{text,
                "?fails if the message is larger than the pre-allocated buffer in"}],
              0,false},
             {text,[3,42,120,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[4,42,102,100,42]},
            {sep,
             [{text,".is an open descriptor to an Erlang connection."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[5,42,109,115,103,42]},
            {sep,
             [{text,
               [18,105,115,32,97,32,112,111,105,110,116,101,114,32,116,111,32,
                97,110]}],
             0,false},
            {text,"\f*erlang_msg*"},
            {sep,
             [{text,
               ";structure and contains information on the message received."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[3,42,120,42]},
           {sep,
            [{text,
              [23,105,115,32,98,117,102,102,101,114,32,111,98,116,97,105,110,
               101,100,32,102,114,111,109]}],
            0,false},
           {text,"\n*ei_x_new*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," On success, the functions return"}],0,false},
             {text,"\t*ERL_MSG*"},
             {sep,[{text,[7,97,110,100,32,116,104,101]}],0,false},
             {text,[5,42,109,115,103,42]},
             {sep,
              [{text,
                [22,115,116,114,117,99,116,32,105,115,32,105,110,105,116,105,
                 97,108,105,122,101,100,46]}],
              0,false},
             {text,"\f*erlang_msg*"},
             {sep,
              [{text,
                [22,105,115,32,100,101,102,105,110,101,100,32,97,115,32,102,
                 111,108,108,111,119,115,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "¸\ntypedef struct {\n    long msgtype;\n    erlang_pid from;\n    erlang_pid to;\n    char toname[MAXATOMLEN+1];\n    char cookie[MAXATOMLEN+1];\n    erlang_trace token;\n} erlang_msg;\n        "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\t*msgtype*"},
             {sep,
              [{text,
                "<identifies the type of message, and is one of the following:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,"\bERL_SEND"}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               "7Indicates that an ordinary send operation has occurred."}],
                             0,false},
                            {text,[7,109,115,103,45,62,116,111]},
                            {sep,
                             [{text,
                               "/contains the pid of the recipient (the C-node)."}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,"\fERL_REG_SEND"}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,"%A registered send operation occurred."}],
                           0,false},
                          {text,"\tmsg->from"},
                          {sep,
                           [{text,
                             [31,99,111,110,116,97,105,110,115,32,116,104,101,
                              32,112,105,100,32,111,102,32,116,104,101,32,115,
                              101,110,100,101,114,46]}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{text,"\bERL_LINK"},
                      {sep,[{text,[2,111,114]}],0,false},
                      {text,"\nERL_UNLINK"}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,[7,109,115,103,45,62,116,111]},
                        {sep,[{text,[3,97,110,100]}],0,false},
                        {text,"\tmsg->from"},
                        {sep,
                         [{text,
                           "Ccontain the pids of the sender and recipient of the link or unlink."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,"\bERL_EXIT"}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         [24,73,110,100,105,99,97,116,101,115,32,97,32,98,114,
                          111,107,101,110,32,108,105,110,107,46]}],
                       0,false},
                      {text,[7,109,115,103,45,62,116,111]},
                      {sep,[{text,[3,97,110,100]}],0,false},
                      {text,"\tmsg->from"},
                      {sep,
                       [{text,")contain the pids of the linked processes."}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"#The return value is the same as for"}],0,false},
             {text,
              [25,91,101,105,95,114,101,99,101,105,118,101,93,40,35,101,105,
               95,114,101,99,101,105,118,101,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "T## ei_receive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned imeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "V## ei_xreceive_msg_tmo(int fd, erlang_msg* msg, ei_x_buff* x, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Receive a message with optional time-out."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [16,42,101,105,95,114,101,99,101,105,118,101,95,109,115,103,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [17,42,101,105,95,120,114,101,99,101,105,118,101,95,109,115,103,
               42]},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "T## ei_receive_tmo(int fd, unsigned char* bufp, int bufsize, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Receive a message with optional time-out."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"\f*ei_receive*"},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "O## ei_reg_send(ei_cnode* ec, int fd, char* server_name, char* buf, int len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Send a message to a registered name."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"-Sends an Erlang term to a registered process."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[4,42,102,100,42]},
             {sep,
              [{text,".is an open descriptor to an Erlang connection."}],
              0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"\r*server_name*"},
             {sep,
              [{text,"1is the registered name of the intended recipient."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[5,42,98,117,102,42]},
            {sep,
             [{text,"3is the buffer containing the term in binary format."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[5,42,108,101,110,42]},
           {sep,[{text,"&is the length of the message in bytes."}],0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [24,105,102,32,115,117,99,99,101,115,115,102,117,108,44,32,
                 111,116,104,101,114,119,105,115,101]}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,
              [{text,
                [28,46,32,73,110,32,116,104,101,32,108,97,116,116,101,114,32,
                 99,97,115,101,32,105,116,32,115,101,116,115]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,[2,116,111]}],0,false},
             {text,[5,42,69,73,79,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"+Send the atom \"ok\" to the process \"worker\":"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [144,10,101,105,95,120,95,98,117,102,102,32,120,59,10,101,105,
               95,120,95,110,101,119,95,119,105,116,104,95,118,101,114,115,
               105,111,110,40,38,120,41,59,10,101,105,95,120,95,101,110,99,
               111,100,101,95,97,116,111,109,40,38,120,44,32,34,111,107,34,41,
               59,10,105,102,32,40,101,105,95,114,101,103,95,115,101,110,100,
               40,38,101,99,44,32,102,100,44,32,120,46,98,117,102,102,44,32,
               120,46,105,110,100,101,120,41,32,60,32,48,41,10,32,32,32,32,
               104,97,110,100,108,101,95,101,114,114,111,114,40,41,59,10,32,
               32,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "h## ei_reg_send_tmo(ei_cnode* ec, int fd, char* server_name, char* buf, int len, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Send a message to a registered name with optional time-out"}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"\r*ei_reg_send*"},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "j## ei_rpc(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen, ei_x_buff *x):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "_## ei_rpc_to(ei_cnode *ec, int fd, char *mod, char *fun, const char *argbuf, int argbuflen):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "T## ei_rpc_from(ei_cnode *ec, int fd, int timeout, erlang_msg *msg, ei_x_buff *x):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"'Remote Procedure Call from C to Erlang."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"2Supports calling Erlang functions on remote nodes."}],
              0,false},
             {text,"\r*ei_rpc_to()*"},
             {sep,
              [{text,")sends an RPC request to a remote node and"}],
              0,false},
             {text,[15,42,101,105,95,114,112,99,95,102,114,111,109,40,41,42]},
             {sep,[{text,"$receives the results of such a call."}],0,false},
             {text,"\n*ei_rpc()*"},
             {sep,
              [{text,
                "qcombines the functionality of these two functions by sending an RPC request and waiting for the results. See also"}],
              0,false},
             {text,")[kernel/rpc#call/4](../kernel/rpc#call/4)"},
             {sep,[{text,"\nin Kernel."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,[4,42,101,99,42]},
                  {sep,
                   [{text,
                     "9is the C-node structure previously initiated by a call to"}],
                   0,false},
                  {text,
                   [19,42,101,105,95,99,111,110,110,101,99,116,95,105,110,105,
                    116,40,41,42]},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,
                   [20,42,101,105,95,99,111,110,110,101,99,116,95,120,105,110,
                    105,116,40,41,42]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,[4,42,102,100,42]},
                  {sep,
                   [{text,".is an open descriptor to an Erlang connection."}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,"\t*timeout*"},
                 {sep,
                  [{text,
                    "Bis the maximum time (in milliseconds) to wait for results. Specify"}],
                  0,false},
                 {text,[16,42,69,82,76,95,78,79,95,84,73,77,69,79,85,84,42]},
                 {sep,
                  [{text,
                    [16,116,111,32,119,97,105,116,32,102,111,114,101,118,101,
                     114,46]}],
                  0,false},
                 {text,"\n*ei_rpc()*"},
                 {sep,
                  [{text,
                    "Gwaits infinitely for the answer, that is, the call will never time out."}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,[5,42,109,111,100,42]},
                {sep,
                 [{text,
                   "Ois the name of the module containing the function to be run on the remote node."}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,[5,42,102,117,110,42]},
               {sep,[{text,"#is the name of the function to run."}],0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"\b*argbuf*"},
              {sep,
               [{text,
                 [140,105,115,32,97,32,112,111,105,110,116,101,114,32,116,111,
                  32,97,32,98,117,102,102,101,114,32,119,105,116,104,32,97,
                  110,32,101,110,99,111,100,101,100,32,69,114,108,97,110,103,
                  32,108,105,115,116,44,32,119,105,116,104,111,117,116,32,97,
                  32,118,101,114,115,105,111,110,32,109,97,103,105,99,32,110,
                  117,109,98,101,114,44,32,99,111,110,116,97,105,110,105,110,
                  103,32,116,104,101,32,97,114,103,117,109,101,110,116,115,32,
                  116,111,32,98,101,32,112,97,115,115,101,100,32,116,111,32,
                  116,104,101,32,102,117,110,99,116,105,111,110,46]}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"\v*argbuflen*"},
             {sep,
              [{text,
                "?is the length of the buffer containing the encoded Erlang list."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[5,42,109,115,103,42]},
            {sep,
             [{text,
               [20,105,115,32,115,116,114,117,99,116,117,114,101,32,111,102,
                32,116,121,112,101]}],
             0,false},
            {text,"\f*erlang_msg*"},
            {sep,
             [{text,
               "Jand contains information on the message received. For a description of the"}],
             0,false},
            {text,"\f*erlang_msg*"},
            {sep,[{text,"\vformat, see"}],0,false},
            {text,"![ei_receive_msg](#ei_receive_msg)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[3,42,120,42]},
           {sep,
            [{text,
              ":points to the dynamic buffer that receives the result. For"}],
            0,false},
           {text,"\n*ei_rpc()*"},
           {sep,
            [{text,
              "8this is the result without the version magic number. For"}],
            0,false},
           {text,[15,42,101,105,95,114,112,99,95,102,114,111,109,40,41,42]},
           {sep,
            [{text,
              "7the result returns a version magic number and a 2-tuple"}],
            0,false},
           {text,"\r*{rex,Reply}*"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\n*ei_rpc()*"},
             {sep,
              [{text,
                "8returns the number of bytes in the result on success and"}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,[{text,"\von failure."}],0,false},
             {text,[15,42,101,105,95,114,112,99,95,102,114,111,109,40,41,42]},
             {sep,
              [{text,"-returns the number of bytes, otherwise one of"}],
              0,false},
             {text,"\n*ERL_TICK*"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\r*ERL_TIMEOUT*"},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,"\v*ERL_ERROR*"},
             {sep,[{text,"'. When failing, all three functions set"}],0,false},
             {text,"\v*erl_errno*"},
             {sep,
              [{text,
                [24,116,111,32,111,110,101,32,111,102,32,116,104,101,32,102,
                 111,108,108,111,119,105,110,103,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,[3,69,73,79]}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,"\nI/O error."},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\tETIMEDOUT"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [17,84,105,109,101,45,111,117,116,32,101,120,112,105,114,
                   101,100,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[6,69,65,71,65,73,78]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\eTemporary error: Try again."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"+Check to see if an Erlang process is alive:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [443,10,105,110,116,32,105,110,100,101,120,32,61,32,48,44,32,
               105,115,95,97,108,105,118,101,59,10,101,105,95,120,95,98,117,
               102,102,32,97,114,103,115,44,32,114,101,115,117,108,116,59,10,
               10,101,105,95,120,95,110,101,119,40,38,114,101,115,117,108,116,
               41,59,10,101,105,95,120,95,110,101,119,40,38,97,114,103,115,41,
               59,10,101,105,95,120,95,101,110,99,111,100,101,95,108,105,115,
               116,95,104,101,97,100,101,114,40,38,97,114,103,115,44,32,49,41,
               59,10,101,105,95,120,95,101,110,99,111,100,101,95,112,105,100,
               40,38,97,114,103,115,44,32,38,99,104,101,99,107,95,112,105,100,
               41,59,10,101,105,95,120,95,101,110,99,111,100,101,95,101,109,
               112,116,121,95,108,105,115,116,40,38,97,114,103,115,41,59,10,
               10,105,102,32,40,101,105,95,114,112,99,40,38,101,99,44,32,102,
               100,44,32,34,101,114,108,97,110,103,34,44,32,34,105,115,95,112,
               114,111,99,101,115,115,95,97,108,105,118,101,34,44,10,32,32,32,
               32,32,32,32,32,32,32,32,97,114,103,115,46,98,117,102,102,44,32,
               97,114,103,115,46,105,110,100,101,120,44,32,38,114,101,115,117,
               108,116,41,32,60,32,48,41,10,32,32,32,32,104,97,110,100,108,
               101,95,101,114,114,111,114,40,41,59,10,10,105,102,32,40,101,
               105,95,100,101,99,111,100,101,95,118,101,114,115,105,111,110,
               40,114,101,115,117,108,116,46,98,117,102,102,44,32,38,105,110,
               100,101,120,41,32,60,32,48,10,32,32,32,32,124,124,32,101,105,
               95,100,101,99,111,100,101,95,98,111,111,108,40,114,101,115,117,
               108,116,46,98,117,102,102,44,32,38,105,110,100,101,120,44,32,
               38,105,115,95,97,108,105,118,101,41,32,60,32,48,41,10,32,32,32,
               32,104,97,110,100,108,101,95,101,114,114,111,114,40,41,59,10,
               32,32,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"%## ei_self(ei_cnode *ec):erlang_pid *"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,82,101,116,114,105,101,118,101,32,116,104,101,32,112,105,100,
             32,111,102,32,116,104,101,32,67,45,110,111,100,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "HRetrieves the pid of the C-node. Every C-node has a (pseudo) pid used in"}],
              0,false},
             {text,"\r*ei_send_reg*"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\b*ei_rpc*"},
             {sep,
              [{text,"1, and others. This is contained in a field in the"}],
              0,false},
             {text,[4,42,101,99,42]},
             {sep,
              [{text,
                "Pstructure. It will be safe for a long time to fetch this field directly from the"}],
              0,false},
             {text,"\n*ei_cnode*"},
             {sep,[{text,"\nstructure."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,":## ei_send(int fd, erlang_pid* to, char* buf, int len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,[15,83,101,110,100,32,97,32,109,101,115,115,97,103,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"\"Sends an Erlang term to a process."}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[4,42,102,100,42]},
             {sep,
              [{text,".is an open descriptor to an Erlang connection."}],
              0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[4,42,116,111,42]},
             {sep,
              [{text,"4is the pid of the intended recipient of the message."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[5,42,98,117,102,42]},
            {sep,
             [{text,"3is the buffer containing the term in binary format."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[5,42,108,101,110,42]},
           {sep,[{text,"&is the length of the message in bytes."}],0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [24,105,102,32,115,117,99,99,101,115,115,102,117,108,44,32,
                 111,116,104,101,114,119,105,115,101]}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,
              [{text,
                [28,46,32,73,110,32,116,104,101,32,108,97,116,116,101,114,32,
                 99,97,115,101,32,105,116,32,115,101,116,115]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,[2,116,111]}],0,false},
             {text,[5,42,69,73,79,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "B## ei_send_encoded(int fd, erlang_pid* to, char* buf, int len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Obsolete function to send a message."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,87,111,114,107,115,32,101,120,97,99,116,108,121,32,97,
                 115]}],
              0,false},
             {text,"\t*ei_send*"},
             {sep,
              [{text,
                "P, the alternative name is retained for backward compatibility. The function will"}],
              0,false},
             {text,[7,42,42,110,111,116,42,42]},
             {sep,[{text," be removed without prior notice."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "[## ei_send_encoded_tmo(int fd, erlang_pid* to, char* buf, int len, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ";Obsolete function to send a message with optional time-out."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [17,42,101,105,95,115,101,110,100,95,101,110,99,111,100,101,100,
               42]},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "d## ei_send_reg_encoded(int fd, const erlang_pid *from, const char *to, const char *buf, int len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Obsolete function to send a message to a registered name."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [147,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,
               115,32,114,101,116,97,105,110,101,100,32,102,111,114,32,99,111,
               109,112,97,116,105,98,105,108,105,116,121,32,119,105,116,104,
               32,99,111,100,101,32,103,101,110,101,114,97,116,101,100,32,98,
               121,32,116,104,101,32,105,110,116,101,114,102,97,99,101,32,99,
               111,109,112,105,108,101,114,32,97,110,100,32,119,105,116,104,
               32,99,111,100,101,32,102,111,108,108,111,119,105,110,103,32,
               101,120,97,109,112,108,101,115,32,105,110,32,116,104,101,32,
               115,97,109,101,32,97,112,112,108,105,99,97,116,105,111,110,
               46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,104,101,32,102,117,110,99,116,105,111,110,32,119,111,
                 114,107,115,32,97,115]}],
              0,false},
             {text,"\r*ei_reg_send*"},
             {sep,[{text,"%with one exception. Instead of taking"}],0,false},
             {text,"\n*ei_cnode*"},
             {sep,
              [{text,"1as first argument, it takes a second argument, an"}],
              0,false},
             {text,"\f*erlang_pid*"},
             {sep,
              [{text,
                "e, which is to be the process identifier of the sending process (in the Erlang distribution protocol)."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nA suitable"}],0,false},
             {text,"\f*erlang_pid*"},
             {sep,[{text,"\ecan be constructed from the"}],0,false},
             {text,"\n*ei_cnode*"},
             {sep,
              [{text,"(structure by the following example code:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "q\nei_cnode ec;\nerlang_pid *self;\nint fd; /* the connection fd */\n...\nself = ei_self(&ec);\nself->num = fd;\n        "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "h## ei_send_reg_encoded_tmo(int fd, const erlang_pid *from, const char *to, const char *buf, int len):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "GObsolete function to send a message to a registered name with time-out."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [21,42,101,105,95,115,101,110,100,95,114,101,103,95,101,110,99,
               111,100,101,100,42]},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "S## ei_send_tmo(int fd, erlang_pid* to, char* buf, int len, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Send a message with optional time-out."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"\t*ei_send*"},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"-## ei_thisnodename(ei_cnode *ec):const char *"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"-## ei_thishostname(ei_cnode *ec):const char *"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,".## ei_thisalivename(ei_cnode *ec):const char *"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [21,82,101,116,114,105,101,118,101,32,115,111,109,101,32,118,97,
             108,117,101,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "YCan be used to retrieve information about the C-node. These values are initially set with"}],
              0,false},
             {text,
              [19,42,101,105,95,99,111,110,110,101,99,116,95,105,110,105,116,
               40,41,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,
              [20,42,101,105,95,99,111,110,110,101,99,116,95,120,105,110,105,
               116,40,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ":These function simply fetch the appropriate field from the"}],
              0,false},
             {text,[4,42,101,99,42]},
             {sep,
              [{text,
                "sstructure. Read the field directly will probably be safe for a long time, so these functions are not really needed."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"!## ei_unpublish(ei_cnode *ec):int"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Forcefully unpublish a node name."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [159,67,97,110,32,98,101,32,99,97,108,108,101,100,32,98,121,
                 32,97,32,112,114,111,99,101,115,115,32,116,111,32,117,110,
                 114,101,103,105,115,116,101,114,32,97,32,115,112,101,99,105,
                 102,105,101,100,32,110,111,100,101,32,102,114,111,109,32,69,
                 80,77,68,32,111,110,32,116,104,101,32,108,111,99,97,108,32,
                 104,111,115,116,46,32,84,104,105,115,32,105,115,44,32,104,
                 111,119,101,118,101,114,44,32,117,115,117,97,108,108,121,32,
                 110,111,116,32,97,108,108,111,119,101,100,44,32,117,110,108,
                 101,115,115,32,69,80,77,68,32,119,97,115,32,115,116,97,114,
                 116,101,100,32,119,105,116,104,32,102,108,97,103]}],
              0,false},
             {text,
              [24,42,45,114,101,108,97,120,101,100,95,99,111,109,109,97,110,
               100,95,99,104,101,99,107,42]},
             {sep,[{text,"\e, which it normally is not."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "]To unregister a node you have published, you should close the descriptor that was returned by"}],
              0,false},
             {text,[14,42,101,105,95,112,117,98,108,105,115,104,40,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "DThis function is deprecated and will be removed in a future release."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[4,42,101,99,42]},
             {sep,
              [{text,"0is the node structure of the node to unregister."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "IIf the node was successfully unregistered from EPMD, the function returns"}],
              0,false},
             {text,[3,42,48,42]},
             {sep,[{text,"\f. Otherwise,"}],0,false},
             {text,[4,42,45,49,42]},
             {sep,
              [{text,
                [15,105,115,32,114,101,116,117,114,110,101,100,32,97,110,
                 100]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,[5,42,69,73,79,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,":## ei_unpublish_tmo(ei_cnode *ec, unsigned timeout_ms):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Unpublish a node name with optional time-out."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,[14,42,101,105,95,117,110,112,117,98,108,105,115,104,42]},
             {sep,
              [{text,
                "]with an optional time-out argument, see the description at the beginning of this manual page."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{text,"1<a name=\"debug_information\">debug_information</a>"},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,68,101,98,117,103,32,73,110,102,111,114,109,97,116,105,
        111,110]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "<If a connection attempt fails, the following can be checked:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,[{text,"\v*erl_errno*"},{sep,[{text,[1,46]}],0,false}],0,false}],
        0,false},
       {sep,
        [{text,[1,42]},{text," That the correct cookie was used"}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {text,
         [20,84,104,97,116,32,69,80,77,68,32,105,115,32,114,117,110,110,105,
          110,103]}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{text,
            "ZThat the remote Erlang node on the other side is running the same version of Erlang as the"}],
          0,false},
         {text,[4,42,101,105,42]},
         {sep,[{text,[7,108,105,98,114,97,114,121]}],0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{text,
           [25,84,104,97,116,32,101,110,118,105,114,111,110,109,101,110,116,
            32,118,97,114,105,97,98,108,101]}],
         0,false},
        {text,[15,42,69,82,76,95,69,80,77,68,95,80,79,82,84,42]},
        {sep,
         [{text,
           [16,105,115,32,115,101,116,32,99,111,114,114,101,99,116,108,121]}],
         0,false}],
       0,false}],
     0,false}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "MThe connection attempt can be traced by setting a trace level by either using"}],
           0,false},
          {text,
           [19,42,101,105,95,115,101,116,95,116,114,97,99,101,108,101,118,101,
            108,42]},
          {sep,[{text,"\"or by setting environment variable"}],0,false},
          {text,[15,42,69,73,95,84,82,65,67,69,76,69,86,69,76,42]},
          {sep,
           [{text,"/. The trace levels have the following messages:"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {text,
          [25,49,58,32,86,101,114,98,111,115,101,32,101,114,114,111,114,32,
           109,101,115,115,97,103,101,115]}],
        0,false},
       {sep,
        [{text,[1,42]},
         {text,".2: Above messages and verbose warning messages"}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {text,
         ">3: Above messages and progress reports for connection handling"}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {text,"84: Above messages and progress reports for communication"}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {text,":5: Above messages and progress reports for data conversion"}],
     0,false}}],
  0,false}}
