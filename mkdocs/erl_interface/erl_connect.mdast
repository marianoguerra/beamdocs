{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r# erl_connect"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r# erl_connect"},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Communicate with distributed Erlang."}],0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "RThe support for VxWorks is deprecated as of OTP 22, and will be removed in OTP 23."}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      [14,84,104,101,32,111,108,100,32,108,101,103,97,99,
                       121]}],
                    0,false},
                   {text,
                    [15,42,101,114,108,95,105,110,116,101,114,102,97,99,101,
                     42]},
                   {sep,
                    [{text,
                      [30,108,105,98,114,97,114,121,32,40,102,117,110,99,116,
                       105,111,110,115,32,119,105,116,104,32,112,114,101,102,
                       105,120]}],
                    0,false},
                   {text,[6,42,101,114,108,95,42]},
                   {sep,
                    [{text,
                      "W) is deprecated as of OTP 22, and will be removed in OTP 23. This does not apply to the"}],
                    0,false},
                   {text,[4,42,101,105,42]},
                   {sep,
                    [{text,
                      [23,108,105,98,114,97,114,121,46,32,82,101,97,115,111,
                       110,97,98,108,121,32,110,101,119]}],
                    0,false},
                   {text,[5,42,103,99,99,42]},
                   {sep,
                    [{text,
                      "_compilers will issue deprecation warnings. In order to disable these warnings, define the macro"}],
                    0,false},
                   {text,
                    [17,42,69,73,95,78,79,95,68,69,80,82,95,87,65,82,78,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [145,84,104,105,115,32,109,111,100,117,108,101,32,112,114,
                   111,118,105,100,101,115,32,115,117,112,112,111,114,116,32,
                   102,111,114,32,99,111,109,109,117,110,105,99,97,116,105,
                   111,110,32,98,101,116,119,101,101,110,32,100,105,115,116,
                   114,105,98,117,116,101,100,32,69,114,108,97,110,103,32,110,
                   111,100,101,115,32,97,110,100,32,67,45,110,111,100,101,115,
                   44,32,105,110,32,97,32,109,97,110,110,101,114,32,116,104,
                   97,116,32,105,115,32,116,114,97,110,115,112,97,114,101,110,
                   116,32,116,111,32,69,114,108,97,110,103,32,112,114,111,99,
                   101,115,115,101,115,46]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [31,65,32,67,45,110,111,100,101,32,97,112,112,101,97,114,
                     115,32,116,111,32,69,114,108,97,110,103,32,97,115,32,
                     97]}],
                  0,false},
                 {text,
                  [15,42,42,104,105,100,100,101,110,32,110,111,100,101,42,42]},
                 {sep,
                  [{text,
                    "Â¥. That is, Erlang processes that know the name of the C-node can communicate with it in a normal manner, but the node name does not appear in the listing provided by"}],
                  0,false},
                 {text,"-[erts/erlang#nodes/0](../erts/erlang#nodes/0)"},
                 {sep,[{text,[2,105,110]}],0,false},
                 {text,[6,42,69,82,84,83,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"### erl_accept(listensock, conp):int"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [20,65,99,99,101,112,116,32,97,32,99,111,110,110,101,99,116,105,
             111,110,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,105,110,116,32,108,105,115,116,101,110,115,111,99,107,59]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,69,114,108,67,111,110,110,101,99,116,32,92,42,99,111,110,112,
           59]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "WThis function is used by a server process to accept a connection from a client process."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\f*listensock*"},
           {sep,[{text,"%is an open socket descriptor on which"}],0,false},
           {text,"\n*listen()*"},
           {sep,[{text,"\ehas previously been called."}],0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[6,42,99,111,110,112,42]},
           {sep,
            [{text,
              [18,105,115,32,97,32,112,111,105,110,116,101,114,32,116,111,32,
               97,110]}],
            0,false},
           {text,"\f*ErlConnect*"},
           {sep,
            [{text,
              [29,115,116,114,117,99,116,44,32,100,101,115,99,114,105,98,101,
               100,32,97,115,32,102,111,108,108,111,119,115,58]}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "V\ntypedef struct {\n  char ipadr[4];\n  char nodename[MAXNODELEN];\n} ErlConnect;\n        "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\vOn success,"}],0,false},
             {text,[6,42,99,111,110,112,42]},
             {sep,
              [{text,
                "sis filled in with the address and node name of the connecting client and a file descriptor is returned. On failure,"}],
              0,false},
             {text,"\v*ERL_ERROR*"},
             {sep,
              [{text,
                [15,105,115,32,114,101,116,117,114,110,101,100,32,97,110,
                 100]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,[5,42,69,73,79,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [31,35,35,32,101,114,108,95,99,108,111,115,101,95,99,111,110,110,101,
         99,116,105,111,110,40,102,100,41,58,105,110,116]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Close a connection to an Erlang node."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},{sep,[{text,[7,105,110,116,32,102,100,59]}],0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,",Closes an open connection to an Erlang node."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[4,42,70,100,42]},
             {sep,[{text,"\"is a file descriptor obtained from"}],0,false},
             {text,[15,42,101,114,108,95,99,111,110,110,101,99,116,40,41,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,
              [16,42,101,114,108,95,120,99,111,110,110,101,99,116,40,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [151,111,110,32,115,117,99,99,101,115,115,46,32,73,102,32,116,
                 104,101,32,99,97,108,108,32,102,97,105,108,115,44,32,97,32,
                 110,111,110,45,122,101,114,111,32,118,97,108,117,101,32,105,
                 115,32,114,101,116,117,114,110,101,100,44,32,97,110,100,32,
                 116,104,101,32,114,101,97,115,111,110,32,102,111,114,32,116,
                 104,101,32,101,114,114,111,114,32,99,97,110,32,98,101,32,111,
                 98,116,97,105,110,101,100,32,119,105,116,104,32,116,104,101,
                 32,97,112,112,114,111,112,114,105,97,116,101,32,112,108,97,
                 116,102,111,114,109,45,100,101,112,101,110,100,101,110,116,
                 32,99,97,108,108,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [24,35,35,32,101,114,108,95,99,111,110,110,101,99,116,40,110,111,100,
         101,41,58,105,110,116]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text," ## erl_xconnect(addr, alive):int"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Establish a connection to an Erlang node."}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [21,99,104,97,114,32,92,42,110,111,100,101,44,32,92,42,97,108,105,
           118,101,59]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [22,115,116,114,117,99,116,32,105,110,95,97,100,100,114,32,92,42,97,
           100,100,114,59]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"'Sets up a connection to an Erlang node."}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [16,42,101,114,108,95,120,99,111,110,110,101,99,116,40,41,42]},
             {sep,
              [{text,
                "`requires the IP address of the remote host and the alivename of the remote node to be specified."}],
              0,false},
             {text,[15,42,101,114,108,95,99,111,110,110,101,99,116,40,41,42]},
             {sep,
              [{text,
                "^provides an alternative interface, and determines the information from the node name provided."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[6,42,97,100,100,114,42]},
            {sep,
             [{text,",is the 32-bit IP address of the remote host."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[7,42,97,108,105,118,101,42]},
            {sep,[{text,"$is the alivename of the remote node."}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[6,42,110,111,100,101,42]},
           {sep,
            [{text,
              [31,105,115,32,116,104,101,32,110,97,109,101,32,111,102,32,116,
               104,101,32,114,101,109,111,116,101,32,110,111,100,101,46]}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ZReturns an open file descriptor on success, otherwise a negative value. In the latter case"}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,
              [{text,
                [17,105,115,32,115,101,116,32,116,111,32,111,110,101,32,111,
                 102,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\fEHOSTUNREACH"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,
                      [{text,
                        [15,84,104,101,32,114,101,109,111,116,101,32,104,111,
                         115,116]}],
                      0,false},
                     {text,[4,110,111,100,101]},
                     {sep,
                      [{text,
                        [15,105,115,32,117,110,114,101,97,99,104,97,98,108,
                         101,46]}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[6,69,78,79,77,69,77]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [28,78,111,32,109,111,114,101,32,109,101,109,111,114,121,32,
                   105,115,32,97,118,97,105,108,97,98,108,101,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,69,73,79]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\nI/O error."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[5,65,108,115,111,44]}],0,false},
             {text,[7,42,101,114,114,110,111,42]},
             {sep,[{text,"\vvalues from"}],0,false},
             {text,"\b*socket*"},
             {text,[7,42,42,40,50,41,42,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\t*connect*"},
             {text,[7,42,42,40,50,41,42,42]},
             {sep,[{text,"#system calls can be propagated into"}],0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [259,10,35,100,101,102,105,110,101,32,78,79,68,69,32,32,32,34,
               109,97,100,111,110,110,97,64,99,104,105,118,97,115,46,100,117,
               46,101,116,120,46,101,114,105,99,115,115,111,110,46,115,101,34,
               10,35,100,101,102,105,110,101,32,65,76,73,86,69,32,32,34,109,
               97,100,111,110,110,97,34,10,35,100,101,102,105,110,101,32,73,
               80,95,65,68,68,82,32,34,49,53,48,46,50,51,54,46,49,52,46,55,53,
               34,10,10,47,42,42,42,32,86,97,114,105,97,110,116,32,49,32,42,
               42,42,47,10,101,114,108,95,99,111,110,110,101,99,116,40,32,78,
               79,68,69,32,41,59,10,10,47,42,42,42,32,86,97,114,105,97,110,
               116,32,50,32,42,42,42,47,10,115,116,114,117,99,116,32,105,110,
               95,97,100,100,114,32,97,100,100,114,59,10,97,100,100,114,32,61,
               32,105,110,101,116,95,97,100,100,114,40,73,80,95,65,68,68,82,
               41,59,10,101,114,108,95,120,99,111,110,110,101,99,116,40,32,38,
               97,100,100,114,32,44,32,65,76,73,86,69,32,41,59,10,32,32,32,32,
               32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"1## erl_connect_init(number, cookie, creation):int"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "C## erl_connect_xinit(host, alive, node, addr, cookie, creation):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [25,73,110,105,116,105,97,108,105,122,101,32,99,111,109,109,117,
             110,105,99,97,116,105,111,110,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {sep,[{text,[1,42]},{sep,[{text,"\vint number;"}],0,false}],0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[14,99,104,97,114,32,92,42,99,111,111,107,105,101,59]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [15,115,104,111,114,116,32,99,114,101,97,116,105,111,110,59]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"\echar \\*host,\\*alive,\\*node;"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [22,115,116,114,117,99,116,32,105,110,95,97,100,100,114,32,92,42,97,
           100,100,114,59]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [15,73,110,105,116,105,97,108,105,122,101,115,32,116,104,
                 101]}],
              0,false},
             {text,"\r*erl_connect*"},
             {sep,
              [{text,
                "Â½module. In particular, these functions are used to identify the name of the C-node from which they are called. One of these functions must be called before any of the other functions in the"}],
              0,false},
             {text,"\r*erl_connect*"},
             {sep,
              [{text,
                [16,109,111,100,117,108,101,32,97,114,101,32,117,115,101,100,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [21,42,101,114,108,95,99,111,110,110,101,99,116,95,120,105,110,
               105,116,40,41,42]},
             {sep,
              [{text,"'stores for later use information about:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [21,72,111,115,116,110,97,109,101,32,111,102,32,116,104,101,
                   32,110,111,100,101,44]}],
                0,false},
               {text,[6,42,104,111,115,116,42]}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,[{text,"\nAlivename,"}],0,false},
               {text,[7,42,97,108,105,118,101,42]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,"\nNode name,"}],0,false},
              {text,[6,42,110,111,100,101,42]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,"\vIP address,"}],0,false},
             {text,[6,42,97,100,100,114,42]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,[7,67,111,111,107,105,101,44]}],0,false},
            {text,"\b*cookie*"}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,
              [16,67,114,101,97,116,105,111,110,32,110,117,109,98,101,114,
               44]}],
            0,false},
           {text,"\n*creation*"}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [20,42,101,114,108,95,99,111,110,110,101,99,116,95,105,110,105,
               116,40,41,42]},
             {sep,
              [{text,
                "eprovides an alternative interface that does not require as much information from the caller. Instead,"}],
              0,false},
             {text,
              [20,42,101,114,108,95,99,111,110,110,101,99,116,95,105,110,105,
               116,40,41,42]},
             {sep,[{text,[4,117,115,101,115]}],0,false},
             {text,
              [17,42,103,101,116,104,111,115,116,98,121,110,97,109,101,40,41,
               42]},
             {sep,
              [{text,
                [25,116,111,32,111,98,116,97,105,110,32,100,101,102,97,117,
                 108,116,32,118,97,108,117,101,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nIf you use"}],0,false},
             {text,
              [20,42,101,114,108,95,99,111,110,110,101,99,116,95,105,110,105,
               116,40,41,42]},
             {sep,
              [{text,
                [129,44,32,121,111,117,114,32,110,111,100,101,32,119,105,108,
                 108,32,104,97,118,101,32,97,32,115,104,111,114,116,32,110,97,
                 109,101,44,32,116,104,97,116,32,105,115,44,32,105,116,32,119,
                 105,108,108,32,110,111,116,32,98,101,32,102,117,108,108,121,
                 32,113,117,97,108,105,102,105,101,100,46,32,73,102,32,121,
                 111,117,32,110,101,101,100,32,116,111,32,117,115,101,32,102,
                 117,108,108,121,32,113,117,97,108,105,102,105,101,100,32,40,
                 108,111,110,103,41,32,110,97,109,101,115,44,32,117,115,101]}],
              0,false},
             {text,
              [21,42,101,114,108,95,99,111,110,110,101,99,116,95,120,105,110,
               105,116,40,41,42]},
             {sep,[{text,"\binstead."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,[6,42,104,111,115,116,42]},
               {sep,
                [{text,
                  "5is the name of the host on which the node is running."}],
                0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,[7,42,97,108,105,118,101,42]},
               {sep,
                [{text,
                  [29,105,115,32,116,104,101,32,97,108,105,118,101,110,97,109,
                   101,32,111,102,32,116,104,101,32,110,111,100,101,46]}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,[6,42,110,111,100,101,42]},
              {sep,
               [{text,")is the node name. It is to be of the form"}],
               0,false},
              {text,
               [22,42,42,97,108,105,118,101,110,97,109,101,64,104,111,115,116,
                110,97,109,101,42,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[6,42,97,100,100,114,42]},
             {sep,[{text,"\eis the 32-bit IP address of"}],0,false},
             {text,[6,42,104,111,115,116,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\b*cookie*"},
            {sep,
             [{text,
               "Fis the authorization string required for access to the remote node. If"}],
             0,false},
            {text,[6,42,78,85,76,76,42]},
            {sep,[{text,"\n, the user"}],0,false},
            {text,[6,42,72,79,77,69,42]},
            {sep,[{text,"'directory is searched for a cookie file"}],0,false},
            {text,
             [16,42,46,101,114,108,97,110,103,46,99,111,111,107,105,101,42]},
            {sep,
             [{text,
               "G. The path to the home directory is retrieved from environment variable"}],
             0,false},
            {text,[6,42,72,79,77,69,42]},
            {sep,
             [{text,
               [20,111,110,32,85,110,105,120,32,97,110,100,32,102,114,111,109,
                32,116,104,101]}],
             0,false},
            {text,"\v*HOMEDRIVE*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\n*HOMEPATH*"},
            {sep,
             [{text,"/variables on Windows. For more details, see the"}],
             0,false},
            {text,
             [21,91,107,101,114,110,101,108,47,97,117,116,104,93,40,46,47,97,
              117,116,104,41]},
            {sep,
             [{text,
               [17,109,111,100,117,108,101,32,105,110,32,75,101,114,110,101,
                108,46]}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\n*creation*"},
           {sep,
            [{text,
              "Â¬helps identifying a particular instance of a C-node. In particular, it can help prevent us from receiving messages sent to an earlier process with the same registered name."}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GA C-node acting as a server is assigned a creation number when it calls"}],
              0,false},
             {text,[15,42,101,114,108,95,112,117,98,108,105,115,104,40,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\b*number*"},
             {sep,[{text,"\nis used by"}],0,false},
             {text,
              [20,42,101,114,108,95,99,111,110,110,101,99,116,95,105,110,105,
               116,40,41,42]},
             {sep,
              [{text,
                "6to construct the actual node name. In Example 2 below,"}],
              0,false},
             {text,
              [20,42,42,34,99,49,55,64,97,46,68,78,83,46,110,97,109,101,34,42,
               42]},
             {sep,[{text,"\eis the resulting node name."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[14,42,42,69,120,97,109,112,108,101,32,49,58,42,42]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [344,10,115,116,114,117,99,116,32,105,110,95,97,100,100,114,32,
               97,100,100,114,59,10,97,100,100,114,32,61,32,105,110,101,116,
               95,97,100,100,114,40,34,49,53,48,46,50,51,54,46,49,52,46,55,53,
               34,41,59,10,105,102,32,40,33,101,114,108,95,99,111,110,110,101,
               99,116,95,120,105,110,105,116,40,34,99,104,105,118,97,115,34,
               44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,34,109,97,100,111,110,110,97,34,44,10,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,
               109,97,100,111,110,110,97,64,99,104,105,118,97,115,46,100,117,
               46,101,116,120,46,101,114,105,99,115,115,111,110,46,115,101,34,
               44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,38,97,100,100,114,59,10,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,34,115,97,109,112,
               108,101,99,111,111,107,105,101,115,116,114,105,110,103,46,46,
               46,34,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,48,41,10,32,32,101,114,108,95,101,114,114,
               95,113,117,105,116,40,34,60,69,82,82,79,82,62,32,119,104,101,
               110,32,105,110,105,116,105,97,108,105,122,105,110,103,32,33,34,
               41,59,10,32,32,32,32,32,32,32,32]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[14,42,42,69,120,97,109,112,108,101,32,50,58,42,42]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "o\nif (!erl_connect_init(17, \"samplecookiestring...\", 0))\n  erl_err_quit(\"<ERROR> when initializing !\");\n        "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [24,35,35,32,101,114,108,95,112,117,98,108,105,115,104,40,112,111,114,
         116,41,58,105,110,116]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [20,80,117,98,108,105,115,104,32,97,32,110,111,100,101,32,110,97,
             109,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,[{text,[1,42]},{sep,[{text,"\tint port;"}],0,false}],0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "Ã£This function is used by a server process to register with the local name server EPMD, thereby allowing other processes to send messages by using the registered name. Before calling this function, the process should have called"}],
              0,false},
             {text,"\b*bind()*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\n*listen()*"},
             {sep,
              [{text,
                [18,111,110,32,97,110,32,111,112,101,110,32,115,111,99,107,
                 101,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,
                "pis the local name to register, and is to be the same as the port number that was previously bound to the socket."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              ">To unregister with EPMD, simply close the returned descriptor."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "XOn success, a descriptor connecting the calling process to EPMD is returned. On failure,"}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,
              [{text,
                [15,105,115,32,114,101,116,117,114,110,101,100,32,97,110,
                 100]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\nis set to:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,[3,69,73,79]}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\nI/O error."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[5,65,108,115,111,44]}],0,false},
             {text,[7,42,101,114,114,110,111,42]},
             {sep,[{text,"\vvalues from"}],0,false},
             {text,"\b*socket*"},
             {text,[7,42,42,40,50,41,42,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\t*connect*"},
             {text,[7,42,42,40,50,41,42,42]},
             {sep,[{text,"#system calls can be propagated into"}],0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"%## erl_receive(fd, bufp, bufsize):int"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [18,82,101,99,101,105,118,101,32,97,32,109,101,115,115,97,103,101,
             46]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},{sep,[{text,[7,105,110,116,32,102,100,59]}],0,false}],
       0,false},
      {sep,[{text,[1,42]},{sep,[{text,"\fchar \\*bufp;"}],0,false}],0,false}},
     {sep,[{text,[1,42]},{sep,[{text,"\fint bufsize;"}],0,false}],0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "SReceives a message consisting of a sequence of bytes in the Erlang external format."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[4,42,102,100,42]},
            {sep,
             [{text,".is an open descriptor to an Erlang connection."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[6,42,98,117,102,112,42]},
            {sep,
             [{text,
               "6is a buffer large enough to hold the expected message."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\t*bufsize*"},
           {sep,
            [{text,
              [21,105,110,100,105,99,97,116,101,115,32,116,104,101,32,115,105,
               122,101,32,111,102]}],
            0,false},
           {text,[6,42,98,117,102,112,42]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[4,73,102,32,97]}],0,false},
             {text,"\b**tick**"},
             {sep,
              [{text,
                [138,111,99,99,117,114,115,44,32,116,104,97,116,32,105,115,44,
                 32,116,104,101,32,69,114,108,97,110,103,32,110,111,100,101,
                 32,111,110,32,116,104,101,32,111,116,104,101,114,32,101,110,
                 100,32,111,102,32,116,104,101,32,99,111,110,110,101,99,116,
                 105,111,110,32,104,97,115,32,112,111,108,108,101,100,32,116,
                 104,105,115,32,110,111,100,101,32,116,111,32,115,101,101,32,
                 105,102,32,105,116,32,105,115,32,115,116,105,108,108,32,97,
                 108,105,118,101,44,32,116,104,101,32,102,117,110,99,116,105,
                 111,110,32,114,101,116,117,114,110,115]}],
              0,false},
             {text,"\n*ERL_TICK*"},
             {sep,
              [{text,"-and no message is placed in the buffer. Also,"}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,"\b*EAGAIN*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "Â°On success, the message is placed in the specified buffer and the function returns the number of bytes actually read. On failure, the function returns a negative value and sets"}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\nto one of:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,[6,69,65,71,65,73,78]}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,"\eTemporary error: Try again."},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\bEMSGSIZE"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [20,66,117,102,102,101,114,32,105,115,32,116,111,111,32,115,
                   109,97,108,108,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,69,73,79]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\nI/O error."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"/## erl_receive_msg(fd, bufp, bufsize, emsg):int"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [29,82,101,99,101,105,118,101,32,97,110,100,32,100,101,99,111,100,
             101,32,97,32,109,101,115,115,97,103,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},{sep,[{text,[7,105,110,116,32,102,100,59]}],0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [21,117,110,115,105,103,110,101,100,32,99,104,97,114,32,92,42,98,
             117,102,112,59]}],
          0,false}],
        0,false}},
      {sep,[{text,[1,42]},{sep,[{text,"\fint bufsize;"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,69,114,108,77,101,115,115,97,103,101,32,92,42,101,109,115,103,
           59]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?Receives the message into the specified buffer and decodes into"}],
              0,false},
             {text,
              [21,42,40,69,114,108,77,101,115,115,97,103,101,32,42,41,32,101,
               109,115,103,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[4,42,102,100,42]},
             {sep,
              [{text,".is an open descriptor to an Erlang connection."}],
              0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[6,42,98,117,102,112,42]},
             {sep,
              [{text,
                "6is a buffer large enough to hold the expected message."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\t*bufsize*"},
            {sep,
             [{text,
               [21,105,110,100,105,99,97,116,101,115,32,116,104,101,32,115,
                105,122,101,32,111,102]}],
             0,false},
            {text,[6,42,98,117,102,112,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,[1,62]}],0,false},
           {text,[6,42,101,109,115,103,42]},
           {sep,
            [{text,
              [18,105,115,32,97,32,112,111,105,110,116,101,114,32,116,111,32,
               97,110]}],
            0,false},
           {text,"\f*ErlMessage*"},
           {sep,
            [{text,"1structure into which the message will be decoded."}],
            0,false},
           {text,"\f*ErlMessage*"},
           {sep,
            [{text,
              [22,105,115,32,100,101,102,105,110,101,100,32,97,115,32,102,111,
               108,108,111,119,115,58]}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "y\ntypedef struct {\n  int type;\n  ETERM *msg;\n  ETERM *to;\n  ETERM *from;\n  char to_name[MAXREGLEN];\n} ErlMessage;\n        "}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           [17,84,104,101,32,100,101,102,105,110,105,116,105,
                            111,110,32,111,102]}],
                         0,false},
                        {text,"\f*ErlMessage*"},
                        {sep,
                         [{text,"%has changed since earlier versions of"}],
                         0,false},
                        {text,
                         [15,42,69,114,108,95,73,110,116,101,114,102,97,99,
                          101,42]},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[6,42,116,121,112,101,42]},
             {sep,
              [{text,
                "5identifies the type of message, one of the following:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,"\bERL_SEND"}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               "+An ordinary send operation has occurred and"}],
                             0,false},
                            {text,"\bemsg->to"},
                            {sep,
                             [{text,
                               "4contains the pid of the recipient. The message is in"}],
                             0,false},
                            {text,"\temsg->msg"},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,"\fERL_REG_SEND"}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             ",A registered send operation has occurred and"}],
                           0,false},
                          {text,"\nemsg->from"},
                          {sep,
                           [{text,
                             "1contains the pid of the sender. The message is in"}],
                           0,false},
                          {text,"\temsg->msg"},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{text,"\bERL_LINK"},
                      {sep,[{text,[2,111,114]}],0,false},
                      {text,"\nERL_UNLINK"}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,"\bemsg->to"},
                        {sep,[{text,[3,97,110,100]}],0,false},
                        {text,"\nemsg->from"},
                        {sep,
                         [{text,
                           "Ccontain the pids of the sender and recipient of the link or unlink."}],
                         0,false},
                        {text,"\temsg->msg"},
                        {sep,[{text,"\fis not used."}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,"\bERL_EXIT"}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         [17,65,32,108,105,110,107,32,105,115,32,98,114,111,
                          107,101,110,46]}],
                       0,false},
                      {text,"\bemsg->to"},
                      {sep,[{text,[3,97,110,100]}],0,false},
                      {text,"\nemsg->from"},
                      {sep,
                       [{text,
                         "-contain the pids of the linked processes, and"}],
                       0,false},
                      {text,"\temsg->msg"},
                      {sep,
                       [{text,"!contains the reason for the exit."}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "EIt is the caller's responsibility to release the memory pointed to by"}],
                         0,false},
                        {text,"\v*emsg->msg*"},
                        {sep,[{text,[1,44]}],0,false},
                        {text,"\n*emsg->to*"},
                        {sep,[{text,[5,44,32,97,110,100]}],0,false},
                        {text,"\f*emsg->from*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[4,73,102,32,97]}],0,false},
             {text,"\b**tick**"},
             {sep,
              [{text,
                [138,111,99,99,117,114,115,44,32,116,104,97,116,32,105,115,44,
                 32,116,104,101,32,69,114,108,97,110,103,32,110,111,100,101,
                 32,111,110,32,116,104,101,32,111,116,104,101,114,32,101,110,
                 100,32,111,102,32,116,104,101,32,99,111,110,110,101,99,116,
                 105,111,110,32,104,97,115,32,112,111,108,108,101,100,32,116,
                 104,105,115,32,110,111,100,101,32,116,111,32,115,101,101,32,
                 105,102,32,105,116,32,105,115,32,115,116,105,108,108,32,97,
                 108,105,118,101,44,32,116,104,101,32,102,117,110,99,116,105,
                 111,110,32,114,101,116,117,114,110,115]}],
              0,false},
             {text,"\n*ERL_TICK*"},
             {sep,
              [{text,
                [129,105,110,100,105,99,97,116,105,110,103,32,116,104,97,116,
                 32,116,104,101,32,116,105,99,107,32,104,97,115,32,98,101,101,
                 110,32,114,101,99,101,105,118,101,100,32,97,110,100,32,114,
                 101,115,112,111,110,100,101,100,32,116,111,44,32,98,117,116,
                 32,110,111,32,109,101,115,115,97,103,101,32,105,115,32,112,
                 108,97,99,101,100,32,105,110,32,116,104,101,32,98,117,102,
                 102,101,114,46,32,73,110,32,116,104,105,115,32,99,97,115,101,
                 32,121,111,117,32,97,114,101,32,116,111,32,99,97,108,108]}],
              0,false},
             {text,
              [19,42,101,114,108,95,114,101,99,101,105,118,101,95,109,115,103,
               40,41,42]},
             {sep,[{text,[6,97,103,97,105,110,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," On success, the function returns"}],0,false},
             {text,"\t*ERL_MSG*"},
             {sep,[{text,[7,97,110,100,32,116,104,101]}],0,false},
             {text,[6,42,69,109,115,103,42]},
             {sep,
              [{text,",struct is initialized as described above, or"}],
              0,false},
             {text,"\n*ERL_TICK*"},
             {sep,
              [{text,
                "H, in which case no message is returned. On failure, the function returns"}],
              0,false},
             {text,"\v*ERL_ERROR*"},
             {sep,[{text,"\band sets"}],0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\nto one of:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\bEMSGSIZE"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,
                    [20,66,117,102,102,101,114,32,105,115,32,116,111,111,32,
                     115,109,97,108,108,46]},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[6,69,78,79,77,69,77]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [28,78,111,32,109,111,114,101,32,109,101,109,111,114,121,32,
                   105,115,32,97,118,97,105,108,97,98,108,101,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,69,73,79]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\nI/O error."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text," ## erl_reg_send(fd, to, msg):int"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Send a message to a registered name."}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},{sep,[{text,[7,105,110,116,32,102,100,59]}],0,false}],
       0,false},
      {sep,[{text,[1,42]},{sep,[{text,"\nchar \\*to;"}],0,false}],0,false}},
     {sep,[{text,[1,42]},{sep,[{text,"\fETERM \\*msg;"}],0,false}],0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"-Sends an Erlang term to a registered process."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[4,42,102,100,42]},
            {sep,
             [{text,".is an open descriptor to an Erlang connection."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[4,42,116,111,42]},
            {sep,
             [{text,
               "Tis a string containing the registered name of the intended recipient of the message."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[5,42,109,115,103,42]},
           {sep,
            [{text,
              [30,105,115,32,116,104,101,32,69,114,108,97,110,103,32,116,101,
               114,109,32,116,111,32,98,101,32,115,101,110,116,46]}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,49,42]},
             {sep,
              [{text,
                [21,111,110,32,115,117,99,99,101,115,115,44,32,111,116,104,
                 101,114,119,105,115,101]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [20,46,32,73,110,32,116,104,101,32,108,97,116,116,101,114,32,
                 99,97,115,101]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,
              [{text,
                [17,105,115,32,115,101,116,32,116,111,32,111,110,101,32,111,
                 102,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[6,69,78,79,77,69,77]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [28,78,111,32,109,111,114,101,32,109,101,109,111,114,121,32,
                   105,115,32,97,118,97,105,108,97,98,108,101,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,69,73,79]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\nI/O error."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"&## erl_rpc(fd, mod, fun, args):ETERM *"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"&## erl_rpc_from(fd, timeout, emsg):int"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"%## erl_rpc_to(fd, mod, fun, args):int"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,82,101,109,111,116,101,32,80,114,111,99,101,100,117,114,101,
             32,67,97,108,108,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [16,105,110,116,32,102,100,44,32,116,105,109,101,111,117,116,59]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,99,104,97,114,32,92,42,109,111,100,44,32,92,42,102,117,110,
             59]}],
          0,false}],
        0,false}},
      {sep,[{text,[1,42]},{sep,[{text,"\rETERM \\*args;"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,69,114,108,77,101,115,115,97,103,101,32,92,42,101,109,115,103,
           59]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"2Supports calling Erlang functions on remote nodes."}],
              0,false},
             {text,[14,42,101,114,108,95,114,112,99,95,116,111,40,41,42]},
             {sep,
              [{text,")sends an RPC request to a remote node and"}],
              0,false},
             {text,
              [16,42,101,114,108,95,114,112,99,95,102,114,111,109,40,41,42]},
             {sep,[{text,"$receives the results of such a call."}],0,false},
             {text,"\v*erl_rpc()*"},
             {sep,
              [{text,
                "qcombines the functionality of these two functions by sending an RPC request and waiting for the results. See also"}],
              0,false},
             {text,")[kernel/rpc#call/4](../kernel/rpc#call/4)"},
             {sep,[{text,[2,105,110]}],0,false},
             {text,"\b*Kernel*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,[4,42,102,100,42]},
               {sep,
                [{text,".is an open descriptor to an Erlang connection."}],
                0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\t*timeout*"},
               {sep,
                [{text,
                  "Sis the maximum time (in milliseconds) to wait for results. To wait forever, specify"}],
                0,false},
               {text,[16,42,69,82,76,95,78,79,95,84,73,77,69,79,85,84,42]},
               {sep,[{text,[6,46,32,87,104,101,110]}],0,false},
               {text,"\v*erl_rpc()*"},
               {sep,[{text,[5,99,97,108,108,115]}],0,false},
               {text,
                [16,42,101,114,108,95,114,112,99,95,102,114,111,109,40,41,42]},
               {sep,
                [{text,
                  [30,44,32,116,104,101,32,99,97,108,108,32,119,105,108,108,
                   32,110,101,118,101,114,32,116,105,109,101,111,117,116,46]}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,[5,42,109,111,100,42]},
              {sep,
               [{text,
                 "Ois the name of the module containing the function to be run on the remote node."}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[5,42,102,117,110,42]},
             {sep,[{text,"#is the name of the function to run."}],0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[6,42,97,114,103,115,42]},
            {sep,
             [{text,
               "Iis an Erlang list, containing the arguments to be passed to the function."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[6,42,101,109,115,103,42]},
           {sep,
            [{text,
              "8is a message containing the result of the function call."}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ":The actual message returned by the RPC server is a 2-tuple"}],
              0,false},
             {text,"\r*{rex,Reply}*"},
             {sep,[{text,"\f. If you use"}],0,false},
             {text,
              [16,42,101,114,108,95,114,112,99,95,102,114,111,109,40,41,42]},
             {sep,
              [{text,
                "Din your code, this is the message you will need to parse. If you use"}],
              0,false},
             {text,"\v*erl_rpc()*"},
             {sep,
              [{text,
                "l, the tuple itself is parsed for you, and the message returned to your program is the Erlang term containing"}],
              0,false},
             {text,[7,42,82,101,112,108,121,42]},
             {sep,
              [{text,"(only. Replies to RPC requests are always"}],
              0,false},
             {text,"\n*ERL_SEND*"},
             {sep,[{text,"\tmessages."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "6It is the caller's responsibility to free the returned"}],
                         0,false},
                        {text,[7,42,69,84,69,82,77,42]},
                        {sep,
                         [{text,"&structure and the memory pointed to by"}],
                         0,false},
                        {text,"\v*emsg->msg*"},
                        {sep,[{text,[3,97,110,100]}],0,false},
                        {text,"\n*emsg->to*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\v*erl_rpc()*"},
             {sep,
              [{text,
                "@returns the remote function's return value on success, otherwise"}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[14,42,101,114,108,95,114,112,99,95,116,111,40,41,42]},
             {sep,[{text,[7,114,101,116,117,114,110,115]}],0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,"(on success, otherwise a negative number."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [16,42,101,114,108,95,114,99,112,95,102,114,111,109,40,41,42]},
             {sep,[{text,[7,114,101,116,117,114,110,115]}],0,false},
             {text,"\t*ERL_MSG*"},
             {sep,
              [{text,
                [16,111,110,32,115,117,99,99,101,115,115,32,40,119,105,116,
                 104]}],
              0,false},
             {text,[6,42,69,109,115,103,42]},
             {sep,
              [{text,"1now containing the reply tuple), otherwise one of"}],
              0,false},
             {text,"\n*ERL_TICK*"},
             {sep,[{text,[1,44]}],0,false},
             {text,"\r*ERL_TIMEOUT*"},
             {sep,[{text,[4,44,32,111,114]}],0,false},
             {text,"\v*ERL_ERROR*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"%When failing, all three functions set"}],0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\nto one of:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,[6,69,78,79,77,69,77]}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {text,
                      [28,78,111,32,109,111,114,101,32,109,101,109,111,114,
                       121,32,105,115,32,97,118,97,105,108,97,98,108,101,46]},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[3,69,73,79]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,"\nI/O error."},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\tETIMEDOUT"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [20,84,105,109,101,111,117,116,32,104,97,115,32,101,120,112,
                   105,114,101,100,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[6,69,65,71,65,73,78]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\eTemporary error: Try again."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [28,35,35,32,101,114,108,95,115,101,110,100,40,102,100,44,32,116,111,
         44,32,109,115,103,41,58,105,110,116]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,[15,83,101,110,100,32,97,32,109,101,115,115,97,103,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},{sep,[{text,[7,105,110,116,32,102,100,59]}],0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,69,84,69,82,77,32,92,42,116,111,44,32,92,42,109,115,103,59]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"\"Sends an Erlang term to a process."}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[4,42,102,100,42]},
            {sep,
             [{text,".is an open descriptor to an Erlang connection."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[4,42,116,111,42]},
            {sep,
             [{text,
               "Nis an Erlang term containing the pid of the intended recipient of the message."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,[1,62]}],0,false},
           {text,[5,42,109,115,103,42]},
           {sep,
            [{text,
              [30,105,115,32,116,104,101,32,69,114,108,97,110,103,32,116,101,
               114,109,32,116,111,32,98,101,32,115,101,110,116,46]}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[3,42,49,42]},
             {sep,
              [{text,
                [21,111,110,32,115,117,99,99,101,115,115,44,32,111,116,104,
                 101,114,119,105,115,101]}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [20,46,32,73,110,32,116,104,101,32,108,97,116,116,101,114,32,
                 99,97,115,101]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,
              [{text,
                [17,105,115,32,115,101,116,32,116,111,32,111,110,101,32,111,
                 102,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,[6,69,73,78,86,65,76]}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,
                      [{text,
                        [17,73,110,118,97,108,105,100,32,97,114,103,117,109,
                         101,110,116,58]}],
                      0,false},
                     {text,[2,116,111]},
                     {sep,
                      [{text,
                        [26,105,115,32,110,111,116,32,97,32,118,97,108,105,
                         100,32,69,114,108,97,110,103,32,112,105,100,46]}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[6,69,78,79,77,69,77]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [28,78,111,32,109,111,114,101,32,109,101,109,111,114,121,32,
                   105,115,32,97,118,97,105,108,97,98,108,101,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,69,73,79]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\nI/O error."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"### erl_thisalivename():const char *"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text," ## erl_thiscookie():const char *"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\e## erl_thiscreation():short"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\"## erl_thishostname():const char *"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\"## erl_thisnodename():const char *"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [21,82,101,116,114,105,101,118,101,32,115,111,109,101,32,118,97,
             108,117,101,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "KRetrieves information about the C-node. These values are initially set with"}],
              0,false},
             {text,
              [20,42,101,114,108,95,99,111,110,110,101,99,116,95,105,110,105,
               116,40,41,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,
              [21,42,101,114,108,95,99,111,110,110,101,99,116,95,120,105,110,
               105,116,40,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\e## erl_unpublish(alive):int"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Forcefully unpublish a node name."}],0,false}],
        0,true},
       null},
      null}},
    {sep,[{text,[1,42]},{sep,[{text,"\rchar \\*alive;"}],0,false}],0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "Â­This function can be called by a process to unregister a specified node from EPMD on the local host. This is, however, usually not allowed, unless EPMD was started with flag"}],
              0,false},
             {text,
              [24,42,45,114,101,108,97,120,101,100,95,99,111,109,109,97,110,
               100,95,99,104,101,99,107,42]},
             {sep,[{text,"\e, which it normally is not."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "eTo unregister a node you have published, you should instead close the descriptor that was returned by"}],
              0,false},
             {text,[14,42,101,105,95,112,117,98,108,105,115,104,40,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "DThis function is deprecated and will be removed in a future release."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,97,108,105,118,101,42]},
             {sep,
              [{text,
                "]is the name of the node to unregister, that is, the first component of the node name, without"}],
              0,false},
             {text,"\v*@hostname*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"4If the node was successfully unregistered from EPMD,"}],
              0,false},
             {text,[3,42,48,42]},
             {sep,
              [{text,
                [22,105,115,32,114,101,116,117,114,110,101,100,44,32,111,116,
                 104,101,114,119,105,115,101]}],
              0,false},
             {text,[4,42,45,49,42]},
             {sep,
              [{text,
                [15,105,115,32,114,101,116,117,114,110,101,100,32,97,110,
                 100]}],
              0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,[5,42,69,73,79,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"2## erl_xreceive_msg(fd, bufpp, bufsizep, emsg):int"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [29,82,101,99,101,105,118,101,32,97,110,100,32,100,101,99,111,100,
             101,32,97,32,109,101,115,115,97,103,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},{sep,[{text,[7,105,110,116,32,102,100,59]}],0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [24,117,110,115,105,103,110,101,100,32,99,104,97,114,32,92,42,92,
             42,98,117,102,112,112,59]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,105,110,116,32,92,42,98,117,102,115,105,122,101,112,59]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,69,114,108,77,101,115,115,97,103,101,32,92,42,101,109,115,103,
           59]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nSimilar to"}],0,false},
             {text,
              [17,42,101,114,108,95,114,101,99,101,105,118,101,95,109,115,103,
               42]},
             {sep,
              [{text,
                [24,46,32,84,104,101,32,100,105,102,102,101,114,101,110,99,
                 101,32,105,115,32,116,104,97,116]}],
              0,false},
             {text,
              [18,42,101,114,108,95,120,114,101,99,101,105,118,101,95,109,115,
               103,42]},
             {sep,
              [{text,",expects the buffer to have been allocated by"}],
              0,false},
             {text,"\b*malloc*"},
             {sep,
              [{text,
                "Â·, and reallocates it if the received message does not fit into the original buffer. Therefore both buffer and buffer length are given as pointers; their values can change by the call."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," On success, the function returns"}],0,false},
             {text,"\t*ERL_MSG*"},
             {sep,[{text,[7,97,110,100,32,116,104,101]}],0,false},
             {text,[6,42,69,109,115,103,42]},
             {sep,
              [{text,",struct is initialized as described above, or"}],
              0,false},
             {text,"\n*ERL_TICK*"},
             {sep,
              [{text,
                "H, in which case no message is returned. On failure, the function returns"}],
              0,false},
             {text,"\v*ERL_ERROR*"},
             {sep,[{text,"\band sets"}],0,false},
             {text,"\v*erl_errno*"},
             {sep,[{text,"\nto one of:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\bEMSGSIZE"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,
                    [20,66,117,102,102,101,114,32,105,115,32,116,111,111,32,
                     115,109,97,108,108,46]},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[6,69,78,79,77,69,77]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [28,78,111,32,109,111,114,101,32,109,101,109,111,114,121,32,
                   105,115,32,97,118,97,105,108,97,98,108,101,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[3,69,73,79]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,"\nI/O error."},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"9## erl_gethostbyaddr(addr, length, type):struct hostent *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "\\## erl_gethostbyaddr_r(addr, length, type, hostp, buffer, buflen, h_errnop):struct hostent *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"+## erl_gethostbyname(name):struct hostent *"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "N## erl_gethostbyname_r(name, hostp, buffer, buflen, h_errnop):struct hostent *"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,78,97,109,101,32,108,111,111,107,117,112,32,102,117,110,99,
             116,105,111,110,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [18,99,111,110,115,116,32,99,104,97,114,32,92,42,110,97,109,
                 101,59]}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [18,99,111,110,115,116,32,99,104,97,114,32,92,42,97,100,100,
                 114,59]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},{sep,[{text,"\vint length;"}],0,false}],
           0,false}},
         {sep,[{text,[1,42]},{sep,[{text,"\tint type;"}],0,false}],0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [23,115,116,114,117,99,116,32,104,111,115,116,101,110,116,32,92,
              42,104,111,115,116,112,59]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[14,99,104,97,114,32,92,42,98,117,102,102,101,114,59]}],
          0,false}],
        0,false}},
      {sep,[{text,[1,42]},{sep,[{text,"\vint buflen;"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,105,110,116,32,92,42,104,95,101,114,114,110,111,112,59]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "<Convenience functions for some common name lookup functions."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,68,101,98,117,103,32,73,110,102,111,114,109,97,116,105,
        111,110]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "<If a connection attempt fails, the following can be checked:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,[{text,[1,42]},{text,"\v*erl_errno*"}],0,false},
      {sep,
       [{text,[1,42]},{text," That the correct cookie was used"}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {text,
        [20,84,104,97,116,32,69,80,77,68,32,105,115,32,114,117,110,110,105,
         110,103]}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{text,
           "ZThat the remote Erlang node on the other side is running the same version of Erlang as the"}],
         0,false},
        {text,[15,42,101,114,108,95,105,110,116,101,114,102,97,99,101,42]},
        {sep,[{text,[7,108,105,98,114,97,114,121]}],0,false}],
       0,false}],
     0,false}}],
  0,false}}
