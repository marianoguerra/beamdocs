{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# erl_malloc"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# erl_malloc"},null},null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,77,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,
            32,102,117,110,99,116,105,111,110,115,46]}],
         0,false}],
       0,true},
      null},
     null}}},
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {sep,
      [{sep,
        [{sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "RThe support for VxWorks is deprecated as of OTP 22, and will be removed in OTP 23."}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [14,84,104,101,32,111,108,100,32,108,101,103,97,99,121]}],
                   0,false},
                  {text,
                   [15,42,101,114,108,95,105,110,116,101,114,102,97,99,101,
                    42]},
                  {sep,
                   [{text,
                     [30,108,105,98,114,97,114,121,32,40,102,117,110,99,116,
                      105,111,110,115,32,119,105,116,104,32,112,114,101,102,
                      105,120]}],
                   0,false},
                  {text,[6,42,101,114,108,95,42]},
                  {sep,
                   [{text,
                     "W) is deprecated as of OTP 22, and will be removed in OTP 23. This does not apply to the"}],
                   0,false},
                  {text,[4,42,101,105,42]},
                  {sep,
                   [{text,
                     [23,108,105,98,114,97,114,121,46,32,82,101,97,115,111,
                      110,97,98,108,121,32,110,101,119]}],
                   0,false},
                  {text,[5,42,103,99,99,42]},
                  {sep,
                   [{text,
                     "_compilers will issue deprecation warnings. In order to disable these warnings, define the macro"}],
                   0,false},
                  {text,
                   [17,42,69,73,95,78,79,95,68,69,80,82,95,87,65,82,78,42]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "FThis module provides functions for allocating and deallocating memory."}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,true},
     null},
    null}}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"!## erl_alloc_eterm(etype):ETERM *"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,65,108,108,111,99,97,116,101,32,97,110,32,69,84,69,82,77,32,
            115,116,114,117,99,116,117,114,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [20,117,110,115,105,103,110,101,100,32,99,104,97,114,32,101,116,121,
         112,101,59]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fAllocates an"}],0,false},
            {text,"\t*(ETERM)*"},
            {sep,[{text,"\nstructure."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,83,112,101,99,105,102,121]}],0,false},
            {text,[7,42,101,116,121,112,101,42]},
            {sep,[{text,"\"as one of the following constants:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {sep,[{text,[1,42]},{text,"\r*ERL_INTEGER*"}],0,false},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,[15,42,69,82,76,95,85,95,73,78,84,69,71,69,82,42]},
                      {sep,
                       [{text,
                         [18,40,117,110,115,105,103,110,101,100,32,105,110,
                          116,101,103,101,114,41]}],
                       0,false}],
                     0,false}],
                   0,false}},
                 {sep,[{text,[1,42]},{text,"\n*ERL_ATOM*"}],0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,"\t*ERL_PID*"},
                    {sep,[{text,"\e(Erlang process identifier)"}],0,false}],
                   0,false}],
                 0,false}},
               {sep,[{text,[1,42]},{text,"\n*ERL_PORT*"}],0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\t*ERL_REF*"},
                  {sep,
                   [{text,
                     [18,40,69,114,108,97,110,103,32,114,101,102,101,114,101,
                      110,99,101,41]}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,[{text,[1,42]},{text,"\n*ERL_LIST*"}],0,false}},
            {sep,
             [{text,[1,42]},
              {text,[16,42,69,82,76,95,69,77,80,84,89,95,76,73,83,84,42]}],
             0,false}},
           {sep,[{text,[1,42]},{text,"\v*ERL_TUPLE*"}],0,false}},
          {sep,[{text,[1,42]},{text,"\f*ERL_BINARY*"}],0,false}},
         {sep,[{text,[1,42]},{text,"\v*ERL_FLOAT*"}],0,false}},
        {sep,
         [{text,[1,42]},{text,[14,42,69,82,76,95,86,65,82,73,65,66,76,69,42]}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,42,69,82,76,95,83,77,65,76,76,95,66,73,71,42]},
           {sep,[{text,"\b(bignum)"}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[17,42,69,82,76,95,85,95,83,77,65,76,76,95,66,73,71,42]},
          {sep,[{text,"\b(bignum)"}],0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[15,42,69,82,76,95,83,77,65,76,76,95,66,73,71,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[17,42,69,82,76,95,85,95,83,77,65,76,76,95,66,73,71,42]},
            {sep,
             [{text,
               [23,97,114,101,32,102,111,114,32,99,114,101,97,116,105,110,103,
                32,69,114,108,97,110,103]}],
             0,false},
            {text,"\t*bignums*"},
            {sep,
             [{text,
               "p, which can contain integers of any size. The size of an integer in Erlang is machine-dependent, but any integer"}],
             0,false},
            {sep,
             [{text,
               [25,62,32,50,94,50,56,32,114,101,113,117,105,114,101,115,32,97,
                32,98,105,103,110,117,109,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,101,114,108,95,101,116,101,114,109,95,114,101,108,101,97,
        115,101,40,118,111,105,100,41,58,118,111,105,100]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [25,67,108,101,97,114,32,116,104,101,32,69,84,69,82,77,32,102,114,
            101,101,108,105,115,116,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "FClears the freelist, where blocks are placed when they are released by"}],
             0,false},
            {text,
             [17,42,101,114,108,95,102,114,101,101,95,116,101,114,109,40,41,
              42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [21,42,101,114,108,95,102,114,101,101,95,99,111,109,112,111,117,
              110,100,40,41,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,".## erl_eterm_statistics(allocated, freed):void"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"\"Report term allocation statistics."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,108,111,110,103,32,92,42,97,108,108,111,99,97,116,101,100,59]}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\rlong \\*freed;"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"#Reports term allocation statistics."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\v*allocated*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[7,42,102,114,101,101,100,42]},
            {sep,
             [{text,
               "Oare initialized to contain information about the fix-allocator used to allocate"}],
             0,false},
            {text,[7,42,69,84,69,82,77,42]},
            {sep,[{text,"\vcomponents."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"\v*allocated*"},
          {sep,
           [{text,".is the number of blocks currently allocated to"}],
           0,false},
          {text,[7,42,69,84,69,82,77,42]},
          {sep,[{text,"\bobjects."}],0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[7,42,102,114,101,101,100,42]},
          {sep,
           [{text,
             "Pis the length of the freelist, where blocks are placed when they are released by"}],
           0,false},
          {text,
           [17,42,101,114,108,95,102,114,101,101,95,116,101,114,109,40,41,42]},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,
           [21,42,101,114,108,95,102,114,101,101,95,99,111,109,112,111,117,
            110,100,40,41,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [21,35,35,32,101,114,108,95,102,114,101,101,40,112,116,114,41,58,118,
        111,105,100]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [17,70,114,101,101,32,115,111,109,101,32,109,101,109,111,114,121,
            46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,[{text,[1,42]},{sep,[{text,"\vvoid \\*ptr;"}],0,false}],0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [18,67,97,108,108,115,32,116,104,101,32,115,116,97,110,100,97,
                114,100]}],
             0,false},
            {text,"\b*free()*"},
            {sep,[{text,"\tfunction."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"### erl_free_array(array, size):void"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"\"Free an array of ETERM structures."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[16,69,84,69,82,77,32,92,42,92,42,97,114,114,97,121,59]}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\tint size;"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [31,70,114,101,101,115,32,97,110,32,97,114,114,97,121,32,111,102,
              32,69,114,108,97,110,103,32,116,101,114,109,115,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[7,42,97,114,114,97,121,42]},
          {sep,
           [{text,
             [31,105,115,32,97,110,32,97,114,114,97,121,32,111,102,32,69,84,
              69,82,77,92,42,32,111,98,106,101,99,116,115,46]}],
           0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[6,42,115,105,122,101,42]},
          {sep,[{text,"$is the number of terms in the array."}],0,false}],
         0,false}],
       0,false}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,101,114,108,95,102,114,101,101,95,99,111,109,112,111,117,
        110,100,40,116,41,58,118,111,105,100]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"\"Free an array of ETERM structures."}],0,false}],
       0,true},
      null},
     null}},
   {sep,[{text,[1,42]},{sep,[{text,"\nETERM \\*t;"}],0,false}],0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "nNormally it is the programmer's responsibility to free each Erlang term that has been returned from any of the"}],
             0,false},
            {text,[15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,42]},
            {sep,
             [{text,
               "âfunctions. However, as many of the functions that build new Erlang terms in fact share objects with other existing terms, it can be difficult for the programmer to maintain pointers to all such terms to free them individually."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [21,42,101,114,108,95,102,114,101,101,95,99,111,109,112,111,117,
              110,100,40,41,42]},
            {sep,
             [{text,
               [147,114,101,99,117,114,115,105,118,101,108,121,32,102,114,101,
                101,115,32,97,108,108,32,111,102,32,116,104,101,32,115,117,98,
                116,101,114,109,115,32,97,115,115,111,99,105,97,116,101,100,
                32,119,105,116,104,32,97,32,115,112,101,99,105,102,105,101,
                100,32,69,114,108,97,110,103,32,116,101,114,109,44,32,114,101,
                103,97,114,100,108,101,115,115,32,111,102,32,119,104,101,116,
                104,101,114,32,119,101,32,97,114,101,32,115,116,105,108,108,
                32,104,111,108,100,105,110,103,32,112,111,105,110,116,101,114,
                115,32,116,111,32,116,104,101,32,115,117,98,116,101,114,109,
                115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\eFor an example, see section"}],0,false},
            {text,
             "K[Building Terms and Patterns](./ei_users_guide#building_terms_and_patterns)"},
            {sep,
             [{text,
               [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,71,117,
                105,100,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [24,35,35,32,101,114,108,95,102,114,101,101,95,116,101,114,109,40,116,
        41,58,118,111,105,100]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [24,70,114,101,101,32,97,110,32,69,84,69,82,77,32,115,116,114,117,
            99,116,117,114,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,[{text,[1,42]},{sep,[{text,"\nETERM \\*t;"}],0,false}],0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [21,70,114,101,101,115,32,97,110,32,69,114,108,97,110,103,32,116,
              101,114,109,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [24,35,35,32,101,114,108,95,109,97,108,108,111,99,40,115,105,122,101,
        41,58,118,111,105,100]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [21,65,108,108,111,99,97,116,101,32,115,111,109,101,32,109,101,109,
            111,114,121,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,[{text,[1,42]},{sep,[{text,"\nlong size;"}],0,false}],0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [18,67,97,108,108,115,32,116,104,101,32,115,116,97,110,100,97,
                114,100]}],
             0,false},
            {text,"\n*malloc()*"},
            {sep,[{text,"\tfunction."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
