{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {text,
                 [28,35,32,69,114,108,95,73,110,116,101,114,102,97,99,101,32,
                  85,115,101,114,39,115,32,71,117,105,100,101]},
                null},
               null}},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {text,
                   [26,35,35,32,68,101,112,114,101,99,97,116,105,111,110,32,
                    97,110,100,32,82,101,109,111,118,97,108]},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {above,
                   {above,
                    {text,
                     [15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
                    {sep,
                     [{text,[4,32,32,32,32]},
                      {sep,
                       [{sep,
                         [{above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  "RThe support for VxWorks is deprecated as of OTP 22, and will be removed in OTP 23."}],
                                0,false}],
                              0,true},
                             null},
                            null}}],
                         0,false}],
                       0,true}],
                     0,false}},
                   {text,[0]}},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {above,
                   {above,
                    {text,
                     [15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
                    {sep,
                     [{text,[4,32,32,32,32]},
                      {sep,
                       [{sep,
                         [{above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    [14,84,104,101,32,111,108,100,32,108,101,
                                     103,97,99,121]}],
                                  0,false},
                                 {text,
                                  [15,42,101,114,108,95,105,110,116,101,114,
                                   102,97,99,101,42]},
                                 {sep,
                                  [{text,
                                    [30,108,105,98,114,97,114,121,32,40,102,
                                     117,110,99,116,105,111,110,115,32,119,
                                     105,116,104,32,112,114,101,102,105,120]}],
                                  0,false},
                                 {text,[6,42,101,114,108,95,42]},
                                 {sep,
                                  [{text,
                                    "W) is deprecated as of OTP 22, and will be removed in OTP 23. This does not apply to the"}],
                                  0,false},
                                 {text,[4,42,101,105,42]},
                                 {sep,
                                  [{text,
                                    [23,108,105,98,114,97,114,121,46,32,82,
                                     101,97,115,111,110,97,98,108,121,32,110,
                                     101,119]}],
                                  0,false},
                                 {text,[5,42,103,99,99,42]},
                                 {sep,
                                  [{text,
                                    "_compilers will issue deprecation warnings. In order to disable these warnings, define the macro"}],
                                  0,false},
                                 {text,
                                  [17,42,69,73,95,78,79,95,68,69,80,82,95,87,
                                   65,82,78,42]},
                                 {sep,[{text,[1,46]}],0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}}],
                         0,false}],
                       0,true}],
                     0,false}},
                   {text,[0]}},
                  null},
                 null}}],
              0,false}},
            {sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {text,
                  [15,35,35,32,73,110,116,114,111,100,117,99,116,105,111,110]},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,[{text,[3,84,104,101]}],0,false},
                     {text,
                      [15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,
                       42]},
                     {sep,
                      [{text,
                        "elibrary contains functions that help you integrate programs written in C and Erlang. The functions in"}],
                      0,false},
                     {text,
                      [15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,
                       42]},
                     {sep,
                      [{text,
                        [22,115,117,112,112,111,114,116,32,116,104,101,32,102,
                         111,108,108,111,119,105,110,103,58]}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,
                {above,
                 {above,
                  {sep,
                   [{text,[1,42]},
                    {text,
                     "5Manipulation of data represented as Erlang data types"}],
                   0,false},
                  {sep,
                   [{text,[1,42]},
                    {text,"/Conversion of data between C and Erlang formats"}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {text,
                    "FEncoding and decoding of Erlang data types for transmission or storage"}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {text,
                   "2Communication between C nodes and Erlang processes"}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,
                    [{text,".Backup and restore of C node state to and from"}],
                    0,false},
                   {text,
                    [18,91,77,110,101,115,105,97,93,40,46,47,109,110,101,115,
                     105,97,41]}],
                  0,false}],
                0,false}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,
                    [15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
                   {sep,
                    [{text,[4,32,32,32,32]},
                     {sep,
                      [{sep,
                        [{above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,
                                 [{text,
                                   [15,66,121,32,100,101,102,97,117,108,116,
                                    44,32,116,104,101]}],
                                 0,false},
                                {text,
                                 [15,42,69,114,108,95,73,110,116,101,114,102,
                                  97,99,101,42]},
                                {sep,
                                 [{text,
                                   "Ãªlibraries are only guaranteed to be compatible with other Erlang/OTP components from the same release as the libraries themselves. For information about how to communicate with Erlang/OTP components from earlier releases, see function"}],
                                 0,false},
                                {text,
                                 ".[ei#ei_set_compat_rel](./ei#ei_set_compat_rel)"},
                                {sep,[{text,[3,97,110,100]}],0,false},
                                {text,
                                 ">[erl_eterm#erl_set_compat_rel](./erl_eterm#erl_set_compat_rel)"},
                                {sep,[{text,[1,46]}],0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}}],
                        0,false}],
                      0,true}],
                    0,false}},
                  {text,[0]}},
                 null},
                null}},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,{above,{text,"\b## Scope"},null},null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "6In the following sections, these topics are described:"}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{sep,
                               [{text," Compiling your code for use with"}],
                               0,false},
                              {text,
                               [15,42,69,114,108,95,73,110,116,101,114,102,97,
                                99,101,42]}],
                             0,false}],
                           0,false},
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{sep,[{text,"\fInitializing"}],0,false},
                              {text,
                               [15,42,69,114,108,95,73,110,116,101,114,102,97,
                                99,101,42]}],
                             0,false}],
                           0,false}},
                         {sep,
                          [{text,[1,42]},
                           {text,
                            ",Encoding, decoding, and sending Erlang terms"}],
                          0,false}},
                        {sep,
                         [{text,[1,42]},
                          {text,"\eBuilding terms and patterns"}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {text,
                          [16,80,97,116,116,101,114,110,32,109,97,116,99,104,
                           105,110,103]}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {text,"'Connecting to a distributed Erlang node"}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {text,"*Using the Erlang Port Mapper Daemon (EPMD)"}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {text,"%Sending and receiving Erlang messages"}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {text,
                      [22,82,101,109,111,116,101,32,112,114,111,99,101,100,
                       117,114,101,32,99,97,108,108,115]}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {text,
                     [18,85,115,105,110,103,32,103,108,111,98,97,108,32,110,
                      97,109,101,115]}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {text,
                    [18,85,115,105,110,103,32,116,104,101,32,114,101,103,105,
                     115,116,114,121]}],
                  0,false}}],
               0,false},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {text,
                    [16,35,35,32,80,114,101,114,101,113,117,105,115,105,116,
                     101,115]},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "OIt is assumed that the reader is familiar with the Erlang programming language."}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,false}},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,{text,"\"## Compiling and Linking Your Code"},null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [17,84,111,32,117,115,101,32,97,110,121,32,111,102,32,
                        116,104,101]}],
                     0,false},
                    {text,
                     [15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,
                      42]},
                    {sep,
                     [{text,
                       "4functions, include the following lines in your code:"}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {above,
                 {above,
                  {text,[3,96,96,96]},
                  {sep,
                   [{text,
                     "/\n#include \"erl_interface.h\"\n#include \"ei.h\"    "}],
                   0,true}},
                 {text,[3,96,96,96]}},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [143,68,101,116,101,114,109,105,110,101,32,119,104,101,
                      114,101,32,116,104,101,32,116,111,112,32,100,105,114,
                      101,99,116,111,114,121,32,111,102,32,121,111,117,114,32,
                      79,84,80,32,105,110,115,116,97,108,108,97,116,105,111,
                      110,32,105,115,46,32,84,111,32,102,105,110,100,32,116,
                      104,105,115,44,32,115,116,97,114,116,32,69,114,108,97,
                      110,103,32,97,110,100,32,101,110,116,101,114,32,116,104,
                      101,32,102,111,108,108,111,119,105,110,103,32,99,111,
                      109,109,97,110,100,32,97,116,32,116,104,101,32,69,115,
                      104,101,108,108,32,112,114,111,109,112,116,58]}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {above,
                 {above,
                  {text,[3,96,96,96]},
                  {sep,
                   [{text,
                     "F\nEshell V4.7.4  (abort with ^G)\n1> code:root_dir().\n/usr/local/otp    "}],
                   0,true}},
                 {text,[3,96,96,96]}},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "ETo compile your code, ensure that your C compiler knows where to find"}],
                     0,false},
                    {text,
                     [17,42,101,114,108,95,105,110,116,101,114,102,97,99,101,
                      46,104,42]},
                    {sep,
                     [{text,
                       [28,98,121,32,115,112,101,99,105,102,121,105,110,103,
                        32,97,110,32,97,112,112,114,111,112,114,105,97,116,
                        101]}],
                     0,false},
                    {text,[4,42,45,73,42]},
                    {sep,
                     [{text,
                       ".argument on the command line, or add it to the"}],
                     0,false},
                    {text,"\b*CFLAGS*"},
                    {sep,
                     [{text,
                       [18,100,101,102,105,110,105,116,105,111,110,32,105,110,
                        32,121,111,117,114]}],
                     0,false},
                    {text,"\n*Makefile*"},
                    {sep,
                     [{text,"$. The correct value for this path is"}],
                     0,false},
                    {text,"+*$OTPROOT/lib/erl_interface-$EIVSN/include*"},
                    {sep,[{text,"\b, where:"}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\n*$OTPROOT*"},
                  {sep,
                   [{text,
                     [23,105,115,32,116,104,101,32,112,97,116,104,32,114,101,
                      112,111,114,116,101,100,32,98,121]}],
                   0,false},
                  {text,
                   [17,42,99,111,100,101,58,114,111,111,116,95,100,105,114,47,
                    48,42]},
                  {sep,
                   [{text,
                     [21,105,110,32,116,104,101,32,101,120,97,109,112,108,101,
                      32,97,98,111,118,101,46]}],
                   0,false}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\b*$EIVSN*"},
                  {sep,
                   [{text,
                     [21,105,115,32,116,104,101,32,118,101,114,115,105,111,
                      110,32,111,102,32,116,104,101]}],
                   0,false},
                  {text,
                   [15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,42]},
                  {sep,
                   [{text,
                     [25,97,112,112,108,105,99,97,116,105,111,110,44,32,102,
                      111,114,32,101,120,97,109,112,108,101,44]}],
                   0,false},
                  {text,
                   [21,42,101,114,108,95,105,110,116,101,114,102,97,99,101,45,
                    51,46,50,46,51,42]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,false}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [19,67,111,109,112,105,108,105,110,103,32,116,104,101,32,
                      99,111,100,101,58]}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {above,
                 {above,
                  {text,[3,96,96,96]},
                  {sep,
                   [{text,
                     "F\n$ cc -c -I/usr/local/otp/lib/erl_interface-3.2.3/include myprog.c    "}],
                   0,true}},
                 {text,[3,96,96,96]}},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,[{sep,[{text,"\rWhen linking:"}],0,false}],0,true},
                null},
               null}},
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{text,
                     [19,83,112,101,99,105,102,121,32,116,104,101,32,112,97,
                      116,104,32,116,111]}],
                   0,false},
                  {text,
                   [20,42,108,105,98,101,114,108,95,105,110,116,101,114,102,
                    97,99,101,46,97,42]},
                  {sep,[{text,[3,97,110,100]}],0,false},
                  {text,"\t*libei.a*"},
                  {sep,[{text,[4,119,105,116,104]}],0,false},
                  {text,"(*-L$OTPROOT/lib/erl_interface-3.2.3/lib*"},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{text,"&Specify the name of the libraries with"}],
                   0,false},
                  {text,
                   [22,42,45,108,101,114,108,95,105,110,116,101,114,102,97,99,
                    101,32,45,108,101,105,42]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,false}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "3Do this on the command line or add the flags to the"}],
                     0,false},
                    {text,"\t*LDFLAGS*"},
                    {sep,
                     [{text,
                       [18,100,101,102,105,110,105,116,105,111,110,32,105,110,
                        32,121,111,117,114]}],
                     0,false},
                    {text,"\n*Makefile*"},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [17,76,105,110,107,105,110,103,32,116,104,101,32,99,111,
                      100,101,58]}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {above,
                 {above,
                  {text,[3,96,96,96]},
                  {sep,
                   [{text,
                     "{\n$ ld -L/usr/local/otp/lib/erl_interface-3.2.3/\n                            lib myprog.o -lerl_interface -lei -o myprog    "}],
                   0,true}},
                 {text,[3,96,96,96]}},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "ROn some systems it can be necessary to link with some more libraries (for example,"}],
                     0,false},
                    {text,"\n*libnsl.a*"},
                    {sep,[{text,[3,97,110,100]}],0,false},
                    {text,"\r*libsocket.a*"},
                    {sep,
                     [{text,
                       [14,111,110,32,83,111,108,97,114,105,115,44,32,111,
                        114]}],
                     0,false},
                    {text,"\r*wsock32.lib*"},
                    {sep,
                     [{text,
                       "2on Windows) to use the communication facilities of"}],
                     0,false},
                    {text,
                     [15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,
                      42]},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [14,73,102,32,121,111,117,32,117,115,101,32,116,104,
                        101]}],
                     0,false},
                    {text,
                     [15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,
                      42]},
                    {sep,
                     [{text,
                       "Sfunctions in a threaded application based on POSIX threads or Solaris threads, then"}],
                     0,false},
                    {text,
                     [15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,
                      42]},
                    {sep,
                     [{text,
                       "Â§needs access to some of the synchronization facilities in your threads package. You must specify extra compiler flags to indicate which of the packages you use. Define"}],
                     0,false},
                    {text,"\f*_REENTRANT*"},
                    {sep,[{text,"\nand either"}],0,false},
                    {text,"\n*STHREADS*"},
                    {sep,[{text,[2,111,114]}],0,false},
                    {text,"\n*PTHREADS*"},
                    {sep,
                     [{text,"(. The default is to use POSIX threads if"}],
                     0,false},
                    {text,"\f*_REENTRANT*"},
                    {sep,[{text,"\ris specified."}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {text,
                [29,35,35,32,73,110,105,116,105,97,108,105,122,105,110,103,32,
                 116,104,101,32,76,105,98,114,97,114,105,101,115]},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "0Before calling any of the other functions in the"}],
                    0,false},
                   {text,
                    [15,42,101,114,108,95,105,110,116,101,114,102,97,99,101,
                     42]},
                   {sep,[{text,[3,97,110,100]}],0,false},
                   {text,[4,42,101,105,42]},
                   {sep,
                    [{text,
                      [15,108,105,98,114,97,114,105,101,115,44,32,99,97,108,
                       108]}],
                    0,false},
                   {text,"\f*erl_init()*"},
                   {sep,
                    [{text,"*exactly once to initialize both libraries."}],
                    0,false},
                   {text,"\f*erl_init()*"},
                   {sep,
                    [{text,
                      "Atakes two arguments. However, the arguments are no longer used by"}],
                    0,false},
                   {text,
                    [15,42,101,114,108,95,105,110,116,101,114,102,97,99,101,
                     42]},
                   {sep,
                    [{text,"$and are therefore to be specified as"}],
                    0,false},
                   {text,
                    [18,42,101,114,108,95,105,110,105,116,40,78,85,76,76,44,
                     48,41,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      [19,73,102,32,121,111,117,32,111,110,108,121,32,117,115,
                       101,32,116,104,101]}],
                    0,false},
                   {text,[4,42,101,105,42]},
                   {sep,
                    [{text,")library, instead initialize it by calling"}],
                    0,false},
                   {text,"\v*ei_init()*"},
                   {sep,
                    [{text,
                      "6exactly once before calling any other functions in the"}],
                    0,false},
                   {text,[4,42,101,105,42]},
                   {sep,[{text,"\blibrary."}],0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {text,"/## Encoding, Decoding, and Sending Erlang Terms"},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "Ã´Data sent between distributed Erlang nodes is encoded in the Erlang external format. You must therefore encode and decode Erlang terms into byte streams if you want to use the distribution protocol to communicate between a C program and Erlang."}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,[3,84,104,101]}],0,false},
                  {text,
                   [15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,42]},
                  {sep,
                   [{text,
                     "Ã­library supports this activity. It has several C functions that create and manipulate Erlang data structures. The library also contains an encode and a decode function. The following example shows how to create and encode an Erlang tuple"}],
                   0,false},
                  {text,[14,42,123,116,111,98,98,101,44,51,57,50,56,125,42]},
                  {sep,[{text,[1,58]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   "Â°\nETERM *arr[2], *tuple;\nchar buf[BUFSIZ];\nint i;\n  \narr[0] = erl_mk_atom(\"tobbe\");\narr[1] = erl_mk_integer(3928);\ntuple  = erl_mk_tuple(arr, 2);\ni = erl_encode(tuple, buf);    "}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [26,65,108,116,101,114,110,97,116,105,118,101,108,121,44,
                      32,121,111,117,32,99,97,110,32,117,115,101]}],
                   0,false},
                  {text,"\f*erl_send()*"},
                  {sep,[{text,[3,97,110,100]}],0,false},
                  {text,
                   [17,42,101,114,108,95,114,101,99,101,105,118,101,95,109,
                    115,103,42]},
                  {sep,
                   [{text,
                     "C, which handle the encoding and decoding of messages transparently."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "6For a complete description, see the following modules:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [22,91,101,114,108,95,101,116,101,114,109,93,40,101,114,108,
                  95,101,116,101,114,109,41]},
                {sep,
                 [{text,
                   [25,102,111,114,32,99,114,101,97,116,105,110,103,32,69,114,
                    108,97,110,103,32,116,101,114,109,115]}],
                 0,false}],
               0,false}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [26,91,101,114,108,95,109,97,114,115,104,97,108,93,40,101,
                  114,108,95,109,97,114,115,104,97,108,41]},
                {sep,[{text,"\"for encoding and decoding routines"}],0,false}],
               0,false}],
             0,false}}],
          0,false}},
        {sep,
         [{text,
           "E<a name=\"building_terms_and_patterns\">building_terms_and_patterns</a>"},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [30,35,35,32,66,117,105,108,100,105,110,103,32,84,101,114,109,
               115,32,97,110,100,32,80,97,116,116,101,114,110,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "3The previous example can be simplified by using the"}],
                  0,false},
                 {text,
                  [24,91,101,114,108,95,102,111,114,109,97,116,93,40,101,114,
                   108,95,102,111,114,109,97,116,41]},
                 {sep,[{text," module to create an Erlang term:"}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  ":\nETERM *ep;\nep = erl_format(\"{~a,~i}\", \"tobbe\", 3928);    "}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "FFor a complete description of the different format directives, see the"}],
                  0,false},
                 {text,
                  [24,91,101,114,108,95,102,111,114,109,97,116,93,40,101,114,
                   108,95,102,111,114,109,97,116,41]},
                 {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,"&The following example is more complex:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "Ã\nETERM *ep;\nep = erl_format(\"[{name,~a},{age,~i},{data,~w}]\",\n                 \"madonna\", \n                 21, \n                 erl_format(\"[{adr,~s,~i}]\", \"E-street\", 42));\nerl_free_compound(ep);      "}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "vAs in the previous examples, it is your responsibility to free the memory allocated for Erlang terms. In this example,"}],
                  0,false},
                 {text,
                  [21,42,101,114,108,95,102,114,101,101,95,99,111,109,112,111,
                   117,110,100,40,41,42]},
                 {sep,
                  [{text,",ensures that the complete term pointed to by"}],
                  0,false},
                 {text,[4,42,101,112,42]},
                 {sep,
                  [{text,
                    "Jis released. This is necessary because the pointer from the second call to"}],
                  0,false},
                 {text,"\f*erl_format*"},
                 {sep,[{text,"\bis lost."}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  ":The following example shows a slightly different solution:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "Ã\nETERM *ep,*ep2;\nep2 = erl_format(\"[{adr,~s,~i}]\",\"E-street\",42);\nep  = erl_format(\"[{name,~a},{age,~i},{data,~w}]\",\n                 \"madonna\", 21, ep2);\nerl_free_term(ep);  \nerl_free_term(ep2);      "}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "YIn this case, you free the two terms independently. The order in which you free the terms"}],
                  0,false},
                 {text,[4,42,101,112,42]},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,[5,42,101,112,50,42]},
                 {sep,
                  [{text,
                    [29,105,115,32,110,111,116,32,105,109,112,111,114,116,97,
                     110,116,44,32,98,101,99,97,117,115,101,32,116,104,101]}],
                  0,false},
                 {text,
                  [15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,42]},
                 {sep,
                  [{text,
                    "Olibrary uses reference counting to determine when it is safe to remove objects."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [142,73,102,32,121,111,117,32,97,114,101,32,117,110,115,117,
                   114,101,32,119,104,101,116,104,101,114,32,121,111,117,32,
                   104,97,118,101,32,102,114,101,101,100,32,116,104,101,32,
                   116,101,114,109,115,32,112,114,111,112,101,114,108,121,44,
                   32,121,111,117,32,99,97,110,32,117,115,101,32,116,104,101,
                   32,102,111,108,108,111,119,105,110,103,32,102,117,110,99,
                   116,105,111,110,32,116,111,32,115,101,101,32,116,104,101,
                   32,115,116,97,116,117,115,32,111,102,32,116,104,101,32,102,
                   105,120,101,100,32,116,101,114,109,32,97,108,108,111,99,97,
                   116,111,114,58]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "Ã\nlong allocated, freed;\n\nerl_eterm_statistics(&allocated,&freed);\nprintf(\"currently allocated blocks: %ld\\n\",allocated);\nprintf(\"length of freelist: %ld\\n\",freed);\n\n/* really free the freelist */\nerl_eterm_release();\n    "}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [29,70,111,114,32,109,111,114,101,32,105,110,102,111,114,
                     109,97,116,105,111,110,44,32,115,101,101,32,116,104,
                     101]}],
                  0,false},
                 {text,
                  [24,91,101,114,108,95,109,97,108,108,111,99,93,40,101,114,
                   108,95,109,97,108,108,111,99,41]},
                 {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [19,35,35,32,80,97,116,116,101,114,110,32,77,97,116,99,104,105,
              110,103]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "AAn Erlang pattern is a term that can contain unbound variables or"}],
                 0,false},
                {text,
                 [15,42,34,100,111,32,110,111,116,32,99,97,114,101,34,42]},
                {sep,
                 [{text,
                   "Ãsymbols. Such a pattern can be matched against a term and, if the match is successful, any unbound variables in the pattern will be bound as a side effect. The content of a bound variable can then be retrieved:"}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 "=\nETERM *pattern;\npattern = erl_format(\"{madonna,Age,_}\");    "}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,[{text,[3,84,104,101]}],0,false},
                {text,".[erl_format#erl_match](./erl_format#erl_match)"},
                {sep,
                 [{text,
                   "Ãfunction performs pattern matching. It takes a pattern and a term and tries to match them. As a side effect any unbound variables in the pattern will be bound. In the following example, a pattern is created with a variable"}],
                 0,false},
                {text,[5,42,65,103,101,42]},
                {sep,
                 [{text,
                   "], which is included at two positions in the tuple. The pattern match is performed as follows:"}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\v*erl_match*"},
               {sep,
                [{text,
                  [21,98,105,110,100,115,32,116,104,101,32,99,111,110,116,101,
                   110,116,115,32,111,102]}],
                0,false},
               {text,[5,42,65,103,101,42]},
               {sep,[{text,[2,116,111]}],0,false},
               {text,[4,42,50,49,42]},
               {sep,
                [{text,"'the first time it reaches the variable."}],
                0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{sep,
                [{text,
                  [24,84,104,101,32,115,101,99,111,110,100,32,111,99,99,117,
                   114,114,101,110,99,101,32,111,102]}],
                0,false},
               {text,[5,42,65,103,101,42]},
               {sep,
                [{text,"0causes a test for equality between the terms, as"}],
                0,false},
               {text,[5,42,65,103,101,42]},
               {sep,
                [{text,
                  [19,105,115,32,97,108,114,101,97,100,121,32,98,111,117,110,
                   100,32,116,111]}],
                0,false},
               {text,[4,42,50,49,42]},
               {sep,[{text,[4,46,32,65,115]}],0,false},
               {text,[5,42,65,103,101,42]},
               {sep,[{text,"\vis bound to"}],0,false},
               {text,[4,42,50,49,42]},
               {sep,
                [{text,
                  "R, the equality test succeeds and the match continues until the end of the pattern."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "kIf the end of the pattern is reached, the match succeeds and you can retrieve the contents of the variable."}],
             0,false}],
           0,false}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [353,10,69,84,69,82,77,32,42,112,97,116,116,101,114,110,44,
                  42,116,101,114,109,59,10,112,97,116,116,101,114,110,32,61,
                  32,101,114,108,95,102,111,114,109,97,116,40,34,123,109,97,
                  100,111,110,110,97,44,65,103,101,44,65,103,101,125,34,41,59,
                  10,116,101,114,109,32,32,32,32,61,32,101,114,108,95,102,111,
                  114,109,97,116,40,34,123,109,97,100,111,110,110,97,44,50,49,
                  44,50,49,125,34,41,59,10,105,102,32,40,101,114,108,95,109,
                  97,116,99,104,40,112,97,116,116,101,114,110,44,32,116,101,
                  114,109,41,41,32,123,10,32,32,102,112,114,105,110,116,102,
                  40,115,116,100,101,114,114,44,32,34,89,101,115,44,32,116,
                  104,101,121,32,109,97,116,99,104,101,100,58,32,65,103,101,
                  32,61,32,34,41,59,10,32,32,101,112,32,61,32,101,114,108,95,
                  118,97,114,95,99,111,110,116,101,110,116,40,112,97,116,116,
                  101,114,110,44,32,34,65,103,101,34,41,59,32,10,32,32,101,
                  114,108,95,112,114,105,110,116,95,116,101,114,109,40,115,
                  116,100,101,114,114,44,32,101,112,41,59,10,32,32,102,112,
                  114,105,110,116,102,40,115,116,100,101,114,114,44,34,92,110,
                  34,41,59,10,32,32,101,114,108,95,102,114,101,101,95,116,101,
                  114,109,40,101,112,41,59,10,125,10,101,114,108,95,102,114,
                  101,101,95,116,101,114,109,40,112,97,116,116,101,114,110,41,
                  59,10,101,114,108,95,102,114,101,101,95,116,101,114,109,40,
                  116,101,114,109,41,59,32,32,32,32]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [29,70,111,114,32,109,111,114,101,32,105,110,102,111,114,
                    109,97,116,105,111,110,44,32,115,101,101,32,116,104,101]}],
                 0,false},
                {text,".[erl_format#erl_match](./erl_format#erl_match)"},
                {sep,[{text,"\tfunction."}],0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"*## Connecting to a Distributed Erlang Node"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "^To connect to a distributed Erlang node, you must first initialize the connection routine with"}],
                0,false},
               {text,
                ">[erl_connect#erl_connect_init](./erl_connect#erl_connect_init)"},
               {sep,
                [{text,
                  "Z, which stores information, such as the hostname, node name, and IP address for later use:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Â§\nint identification_number = 99;\nint creation=1;\nchar *cookie=\"a secret cookie string\"; /* An example */\nerl_connect_init(identification_number, cookie, creation);    "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,70,111,114,32,109,111,114,101,32,105,110,102,111,114,
                   109,97,116,105,111,110,44,32,115,101,101,32,116,104,101]}],
                0,false},
               {text,
                [26,91,101,114,108,95,99,111,110,110,101,99,116,93,40,101,114,
                 108,95,99,111,110,110,101,99,116,41]},
               {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "zAfter initialization, you set up the connection to the Erlang node. To specify the Erlang node you want to connect to, use"}],
                0,false},
               {text,
                [15,42,101,114,108,95,99,111,110,110,101,99,116,40,41,42]},
               {sep,
                [{text,
                  "b. The following example sets up the connection and is to result in a valid socket file descriptor:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Â¨\nint sockfd;\nchar *nodename=\"xyz@chivas.du.etx.ericsson.se\"; /* An example */\nif ((sockfd = erl_connect(nodename)) < 0)\n  erl_err_quit(\"ERROR: erl_connect failed\");    "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [16,42,101,114,108,95,101,114,114,95,113,117,105,116,40,41,
                 42]},
               {sep,
                [{text,
                  "Uprints the specified string and terminates the program. For more information, see the"}],
                0,false},
               {text,
                [22,91,101,114,108,95,101,114,114,111,114,93,40,101,114,108,
                 95,101,114,114,111,114,41]},
               {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\r## Using EPMD"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [19,91,101,114,116,115,47,101,112,109,100,93,40,46,47,101,112,
                109,100,41]},
              {sep,
               [{text,
                 "His the Erlang Port Mapper Daemon. Distributed Erlang nodes register with"}],
               0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,
                 "Xon the local host to indicate to other nodes that they exist and can accept connections."}],
               0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,
                 "~maintains a register of node and port number information, and when a node wishes to connect to another node, it first contacts"}],
               0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,".to find the correct port number to connect to."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\fWhen you use"}],0,false},
              {text,
               [26,91,101,114,108,95,99,111,110,110,101,99,116,93,40,101,114,
                108,95,99,111,110,110,101,99,116,41]},
              {sep,
               [{text,
                 ";to connect to an Erlang node, a connection is first made to"}],
               0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,
                 "Hand, if the node is known, a connection is then made to the Erlang node."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,")C nodes can also register themselves with"}],
               0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,
                 "Nif they want other nodes in the system to be able to find and connect to them."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [23,66,101,102,111,114,101,32,114,101,103,105,115,116,101,
                  114,105,110,103,32,119,105,116,104]}],
               0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,
                 "D, you must first create a listen socket and bind it to a port. Then:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,"'\nint pub;\n\npub = erl_publish(port);    "}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,[5,42,112,117,98,42]},
              {sep,[{text,"%is a file descriptor now connected to"}],0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,[{text,[1,46]}],0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,
                 "Ãmonitors the other end of the connection. If it detects that the connection has been closed, the node becomes unregistered. So, if you explicitly close the descriptor or if your node fails, it becomes unregistered from"}],
               0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "Ã¬Notice that on some systems (such as VxWorks), a failed node is not detected by this mechanism, as the operating system does not automatically close descriptors that were left open when the node failed. If a node has failed in this way,"}],
               0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,
                 "Â¢prevents you from registering a new node with the old name, as it thinks that the old name is still in use. In this case, you must unregister the name explicitly:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [25,10,101,114,108,95,117,110,112,117,98,108,105,115,104,40,
                110,111,100,101,41,59,32,32,32,32]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\vThis causes"}],0,false},
              {text,[6,42,101,112,109,100,42]},
              {sep,
               [{text,
                 "Ã¾to close the connection from the far end. Notice that if the name was in fact still in use by a node, the results of this operation are unpredictable. Also, doing this does not cause the local end of the connection to close, so resources can be consumed."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"(## Sending and Receiving Erlang Messages"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "8Use one of the following two functions to send messages:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {text,".[erl_connect#erl_send](./erl_connect#erl_send)"}],
        0,false},
       {sep,
        [{text,[1,42]},
         {text,"6[erl_connect#erl_reg_send](./erl_connect#erl_reg_send)"}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "Â­As in Erlang, messages can be sent to a pid or to a registered name. It is easier to send a message to a registered name, as it avoids the problem of finding a suitable pid."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              ";Use one of the following two functions to receive messages:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {text,"4[erl_connect#erl_receive](./erl_connect#erl_receive)"}],
        0,false},
       {sep,
        [{text,[1,42]},
         {text,
          "<[erl_connect#erl_receive_msg](./erl_connect#erl_receive_msg)"}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[15,42,101,114,108,95,114,101,99,101,105,118,101,40,41,42]},
             {sep,
              [{text,")receives the message into a buffer, while"}],
              0,false},
             {text,
              [19,42,101,114,108,95,114,101,99,101,105,118,101,95,109,115,103,
               40,41,42]},
             {sep,
              [{text,"(decodes the message into an Erlang term."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [30,35,35,32,69,120,97,109,112,108,101,32,111,102,32,83,101,110,
             100,105,110,103,32,77,101,115,115,97,103,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [25,73,110,32,116,104,101,32,102,111,108,108,111,119,105,
                   110,103,32,101,120,97,109,112,108,101,44]}],
                0,false},
               {text,
                [20,42,123,80,105,100,44,32,104,101,108,108,111,95,119,111,
                 114,108,100,125,42]},
               {sep,
                [{text,
                  [31,105,115,32,115,101,110,116,32,116,111,32,97,32,114,101,
                   103,105,115,116,101,114,101,100,32,112,114,111,99,101,115,
                   115]}],
                0,false},
               {text,"\v*my_server*"},
               {sep,[{text,"\e. The message is encoded by"}],0,false},
               {text,"\f*erl_send()*"},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [363,10,101,120,116,101,114,110,32,99,111,110,115,116,32,99,
                 104,97,114,32,42,101,114,108,95,116,104,105,115,110,111,100,
                 101,110,97,109,101,40,118,111,105,100,41,59,10,101,120,116,
                 101,114,110,32,115,104,111,114,116,32,101,114,108,95,116,104,
                 105,115,99,114,101,97,116,105,111,110,40,118,111,105,100,41,
                 59,10,35,100,101,102,105,110,101,32,83,69,76,70,40,102,100,
                 41,32,101,114,108,95,109,107,95,112,105,100,40,101,114,108,
                 95,116,104,105,115,110,111,100,101,110,97,109,101,40,41,44,
                 102,100,44,48,44,101,114,108,95,116,104,105,115,99,114,101,
                 97,116,105,111,110,40,41,41,10,69,84,69,82,77,32,42,97,114,
                 114,91,50,93,44,32,42,101,109,115,103,59,10,105,110,116,32,
                 115,111,99,107,102,100,44,32,99,114,101,97,116,105,111,110,
                 61,49,59,10,32,32,10,97,114,114,91,48,93,32,61,32,83,69,76,
                 70,40,115,111,99,107,102,100,41,59,10,97,114,114,91,49,93,32,
                 61,32,101,114,108,95,109,107,95,97,116,111,109,40,34,72,101,
                 108,108,111,32,119,111,114,108,100,34,41,59,10,101,109,115,
                 103,32,32,32,61,32,101,114,108,95,109,107,95,116,117,112,108,
                 101,40,97,114,114,44,32,50,41,59,10,32,32,10,101,114,108,95,
                 114,101,103,95,115,101,110,100,40,115,111,99,107,102,100,44,
                 32,34,109,121,95,115,101,114,118,101,114,34,44,32,101,109,
                 115,103,41,59,10,101,114,108,95,102,114,101,101,95,116,101,
                 114,109,40,101,109,115,103,41,59,32,32,32,32,32,32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "IThe first element of the tuple that is sent is your own pid. This enables"}],
                0,false},
               {text,"\v*my_server*"},
               {sep,
                [{text,
                  "<to reply. For more information about the primitives, see the"}],
                0,false},
               {text,
                [26,91,101,114,108,95,99,111,110,110,101,99,116,93,40,101,114,
                 108,95,99,111,110,110,101,99,116,41]},
               {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text," ## Example of Receiving Messages"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [16,73,110,32,116,104,105,115,32,101,120,97,109,112,108,101,
                   44]}],
                0,false},
               {text,
                [18,42,123,80,105,100,44,32,83,111,109,101,116,104,105,110,
                 103,125,42]},
               {sep,
                [{text,
                  "4is received. The received pid is then used to return"}],
                0,false},
               {text,
                [15,42,123,103,111,111,100,98,121,101,44,80,105,100,125,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [384,10,69,84,69,82,77,32,42,97,114,114,91,50,93,44,32,42,97,
                 110,115,119,101,114,59,10,105,110,116,32,115,111,99,107,102,
                 100,44,114,99,59,10,99,104,97,114,32,98,117,102,91,66,85,70,
                 83,73,90,69,93,59,10,69,114,108,77,101,115,115,97,103,101,32,
                 101,109,115,103,59,10,32,32,10,105,102,32,40,40,114,99,32,61,
                 32,101,114,108,95,114,101,99,101,105,118,101,95,109,115,103,
                 40,115,111,99,107,102,100,32,44,32,98,117,102,44,32,66,85,70,
                 83,73,90,69,44,32,38,101,109,115,103,41,41,32,61,61,32,69,82,
                 76,95,77,83,71,41,32,123,10,32,32,32,97,114,114,91,48,93,32,
                 61,32,101,114,108,95,109,107,95,97,116,111,109,40,34,103,111,
                 111,100,98,121,101,34,41,59,10,32,32,32,97,114,114,91,49,93,
                 32,61,32,101,114,108,95,101,108,101,109,101,110,116,40,49,44,
                 32,101,109,115,103,46,109,115,103,41,59,32,10,32,32,32,97,
                 110,115,119,101,114,32,61,32,101,114,108,95,109,107,95,116,
                 117,112,108,101,40,97,114,114,44,32,50,41,59,10,32,32,32,101,
                 114,108,95,115,101,110,100,40,115,111,99,107,102,100,44,32,
                 97,114,114,91,49,93,44,32,97,110,115,119,101,114,41,59,10,32,
                 32,32,101,114,108,95,102,114,101,101,95,116,101,114,109,40,
                 97,110,115,119,101,114,41,59,10,32,32,32,101,114,108,95,102,
                 114,101,101,95,116,101,114,109,40,101,109,115,103,46,109,115,
                 103,41,59,10,32,32,32,101,114,108,95,102,114,101,101,95,116,
                 101,114,109,40,101,109,115,103,46,116,111,41,59,10,125,32,32,
                 32,32,32,32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "Ã«To provide robustness, a distributed Erlang node occasionally polls all its connected neighbors in an attempt to detect failed nodes or communication links. A node that receives such a message is expected to respond immediately with an"}],
                0,false},
               {text,"\n*ERL_TICK*"},
               {sep,
                [{text,"&message. This is done automatically by"}],
                0,false},
               {text,
                [15,42,101,114,108,95,114,101,99,101,105,118,101,40,41,42]},
               {sep,[{text,"\". However, when this has occurred,"}],0,false},
               {text,"\r*erl_receive*"},
               {sep,[{text,[7,114,101,116,117,114,110,115]}],0,false},
               {text,"\n*ERL_TICK*"},
               {sep,
                [{text,"0to the caller without storing a message into the"}],
                0,false},
               {text,"\f*ErlMessage*"},
               {sep,[{text,"\nstructure."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "`When a message has been received, it is the caller's responsibility to free the received message"}],
                0,false},
               {text,"\n*emsg.msg*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\t*emsg.to*"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"\v*emsg.from*"},
               {sep,
                [{text,",, depending on the type of message received."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,70,111,114,32,109,111,114,101,32,105,110,102,111,114,
                   109,97,116,105,111,110,44,32,115,101,101,32,116,104,101]}],
                0,false},
               {text,
                [26,91,101,114,108,95,99,111,110,110,101,99,116,93,40,101,114,
                 108,95,99,111,110,110,101,99,116,41]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,
                [22,91,101,114,108,95,101,116,101,114,109,93,40,101,114,108,
                 95,101,116,101,114,109,41]},
               {sep,[{text,"\bmodules."}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [25,35,35,32,82,101,109,111,116,101,32,80,114,111,99,101,100,117,114,
          101,32,67,97,108,108,115]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ÃAn Erlang node acting as a client to another Erlang node typically sends a request and waits for a reply. Such a request is included in a function call at a remote node and is called a remote procedure call."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"#The following example shows how the"}],0,false},
            {text,[15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,42]},
            {sep,
             [{text,"(library supports remote procedure calls:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [356,10,99,104,97,114,32,109,111,100,110,97,109,101,91,93,61,84,
              72,69,95,77,79,68,78,65,77,69,59,10,69,84,69,82,77,32,42,114,
              101,112,108,121,44,42,101,112,59,10,101,112,32,61,32,101,114,
              108,95,102,111,114,109,97,116,40,34,91,126,97,44,91,93,93,34,44,
              32,109,111,100,110,97,109,101,41,59,10,105,102,32,40,33,40,114,
              101,112,108,121,32,61,32,101,114,108,95,114,112,99,40,102,100,
              44,32,34,99,34,44,32,34,99,34,44,32,101,112,41,41,41,10,32,32,
              101,114,108,95,101,114,114,95,109,115,103,40,34,60,69,82,82,79,
              82,62,32,119,104,101,110,32,99,111,109,112,105,108,105,110,103,
              32,102,105,108,101,58,32,37,115,46,101,114,108,32,33,92,110,34,
              44,32,109,111,100,110,97,109,101,41,59,10,101,114,108,95,102,
              114,101,101,95,116,101,114,109,40,101,112,41,59,10,101,112,32,
              61,32,101,114,108,95,102,111,114,109,97,116,40,34,123,111,107,
              44,95,125,34,41,59,10,105,102,32,40,33,101,114,108,95,109,97,
              116,99,104,40,101,112,44,32,114,101,112,108,121,41,41,10,32,32,
              101,114,108,95,101,114,114,95,109,115,103,40,34,60,69,82,82,79,
              82,62,32,99,111,109,112,105,108,101,114,32,101,114,114,111,114,
              115,32,33,92,110,34,41,59,10,101,114,108,95,102,114,101,101,95,
              116,101,114,109,40,101,112,41,59,10,101,114,108,95,102,114,101,
              101,95,116,101,114,109,40,114,101,112,108,121,41,59,32,32,32,
              32]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[7,42,99,58,99,47,49,42]},
            {sep,
             [{text,
               "=is called to compile the specified module on the remote node."}],
             0,false},
            {text,"\r*erl_match()*"},
            {sep,
             [{text,
               "Fchecks that the compilation was successful by testing for the expected"}],
             0,false},
            {text,[4,42,111,107,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [26,70,111,114,32,109,111,114,101,32,105,110,102,111,114,109,
                97,116,105,111,110,32,97,98,111,117,116]}],
             0,false},
            {text,"\v*erl_rpc()*"},
            {sep,
             [{text,
               [18,97,110,100,32,105,116,115,32,99,111,109,112,97,110,105,111,
                110,115]}],
             0,false},
            {text,[14,42,101,114,108,95,114,112,99,95,116,111,40,41,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [16,42,101,114,108,95,114,112,99,95,102,114,111,109,40,41,42]},
            {sep,[{text,"\t, see the"}],0,false},
            {text,
             [26,91,101,114,108,95,99,111,110,110,101,99,116,93,40,101,114,
              108,95,99,111,110,110,101,99,116,41]},
            {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [21,35,35,32,85,115,105,110,103,32,71,108,111,98,97,108,32,78,97,109,
         101,115]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"3A C node has access to names registered through the"}],
            0,false},
           {text,
            [25,91,107,101,114,110,101,108,47,103,108,111,98,97,108,93,40,46,
             47,103,108,111,98,97,108,41]},
           {sep,
            [{text,
              "Ãmodule in Kernel. Names can be looked up, allowing the C node to send messages to named Erlang services. C nodes can also register global names, allowing them to provide named services to Erlang processes or other C nodes."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,[15,42,69,114,108,95,73,110,116,101,114,102,97,99,101,42]},
           {sep,
            [{text,
              "Ã´does not provide a native implementation of the global service. Instead it uses the global services provided by a \"nearby\" Erlang node. To use the services described in this section, it is necessary to first open a connection to an Erlang node."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [28,84,111,32,115,101,101,32,119,104,97,116,32,110,97,109,101,115,
             32,116,104,101,114,101,32,97,114,101,58]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [157,10,99,104,97,114,32,42,42,110,97,109,101,115,59,10,105,110,
             116,32,99,111,117,110,116,59,10,105,110,116,32,105,59,10,10,110,
             97,109,101,115,32,61,32,101,114,108,95,103,108,111,98,97,108,95,
             110,97,109,101,115,40,102,100,44,38,99,111,117,110,116,41,59,10,
             10,105,102,32,40,110,97,109,101,115,41,32,10,32,32,102,111,114,
             32,40,105,61,48,59,32,105,60,99,111,117,110,116,59,32,105,43,43,
             41,32,10,32,32,32,32,112,114,105,110,116,102,40,34,37,115,92,110,
             34,44,110,97,109,101,115,91,105,93,41,59,10,10,102,114,101,101,
             40,110,97,109,101,115,41,59,32,32,32,32]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "<[erl_global#erl_global_names](./erl_global#erl_global_names)"},
           {sep,
            [{text,
              "Dallocates and returns a buffer containing all the names known to the"}],
            0,false},
           {text,"\b*global*"},
           {sep,[{text,"\tmodule in"}],0,false},
           {text,"\b*Kernel*"},
           {sep,[{text,[1,46]}],0,false},
           {text,[7,42,99,111,117,110,116,42]},
           {sep,
            [{text,
              "mis initialized to indicate the number of names in the array. The array of strings in names is terminated by a"}],
            0,false},
           {text,[6,42,78,85,76,76,42]},
           {sep,[{text,"&pointer, so it is not necessary to use"}],0,false},
           {text,[7,42,99,111,117,110,116,42]},
           {sep,
            [{text,"+to determine when the last name is reached."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"4It is the caller's responsibility to free the array."}],
            0,false},
           {text,
            [18,42,101,114,108,95,103,108,111,98,97,108,95,110,97,109,101,115,
             42]},
           {sep,
            [{text,
              ">allocates the array and all the strings using a single call to"}],
            0,false},
           {text,"\n*malloc()*"},
           {sep,[{text,[4,44,32,115,111]}],0,false},
           {text,"\r*free(names)*"},
           {sep,
            [{text,
              [25,105,115,32,97,108,108,32,116,104,97,116,32,105,115,32,110,
               101,99,101,115,115,97,114,121,46]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [28,84,111,32,108,111,111,107,32,117,112,32,111,110,101,32,111,
             102,32,116,104,101,32,110,97,109,101,115,58]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "O\nETERM *pid;\nchar node[256];\n\npid = erl_global_whereis(fd,\"schedule\",node);    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,[2,73,102]}],0,false},
           {text,"\f*\"schedule\"*"},
           {sep,
            [{text,
              [15,105,115,32,107,110,111,119,110,32,116,111,32,116,104,101]}],
            0,false},
           {text,"\b*global*"},
           {sep,[{text,"\tmodule in"}],0,false},
           {text,"\b*Kernel*"},
           {sep,
            [{text,
              "\\, an Erlang pid is returned that can be used to send messages to the schedule service. Also,"}],
            0,false},
           {text,[6,42,110,111,100,101,42]},
           {sep,
            [{text,
              [153,105,115,32,105,110,105,116,105,97,108,105,122,101,100,32,
               116,111,32,99,111,110,116,97,105,110,32,116,104,101,32,110,97,
               109,101,32,111,102,32,116,104,101,32,110,111,100,101,32,119,
               104,101,114,101,32,116,104,101,32,115,101,114,118,105,99,101,
               32,105,115,32,114,101,103,105,115,116,101,114,101,100,44,32,
               115,111,32,116,104,97,116,32,121,111,117,32,99,97,110,32,109,
               97,107,101,32,97,32,99,111,110,110,101,99,116,105,111,110,32,
               116,111,32,105,116,32,98,121,32,115,105,109,112,108,121,32,112,
               97,115,115,105,110,103,32,116,104,101,32,118,97,114,105,97,98,
               108,101,32,116,111]}],
            0,false},
           {text,
            [26,91,101,114,108,95,99,111,110,110,101,99,116,93,40,101,114,108,
             95,99,111,110,110,101,99,116,41]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "SBefore registering a name, you should already have registered your port number with"}],
            0,false},
           {text,[6,42,101,112,109,100,42]},
           {sep,
            [{text,
              "Â . This is not strictly necessary, but if you neglect to do so, then other nodes wishing to communicate with your service cannot find or connect to your process."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "LCreate a pid that Erlang processes can use to communicate with your service:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "]\nETERM *pid;\n\npid = erl_mk_pid(thisnode,14,0,0);\nerl_global_register(fd,servicename,pid);    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [31,65,102,116,101,114,32,114,101,103,105,115,116,101,114,105,
               110,103,32,116,104,101,32,110,97,109,101,44,32,117,115,101]}],
            0,false},
           {text,"2[erl_connect#erl_accept](./erl_connect#erl_accept)"},
           {sep,[{text,"!to wait for incoming connections."}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
         {sep,
          [{text,[4,32,32,32,32]},
           {sep,
            [{sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         [16,82,101,109,101,109,98,101,114,32,116,111,32,102,
                          114,101,101]}],
                       0,false},
                      {text,[5,42,112,105,100,42]},
                      {sep,[{text,"\nlater with"}],0,false},
                      {text,
                       "6[erl_malloc#erl_free_term](./erl_malloc#erl_free_term)"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false}],
            0,true}],
          0,false}},
        {text,[0]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [21,84,111,32,117,110,114,101,103,105,115,116,101,114,32,97,32,
             110,97,109,101,58]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,"+\nerl_global_unregister(fd,servicename);    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [21,35,35,32,85,115,105,110,103,32,116,104,101,32,82,101,103,105,115,
        116,114,121]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "Â This section describes the use of the registry, a simple mechanism for storing key-value pairs in a C-node, as well as backing them up or restoring them from an"}],
           0,false},
          {text,"\b*Mnesia*"},
          {sep,
           [{text,
             "btable on an Erlang node. For more detailed information about the individual API functions, see the"}],
           0,false},
          {text,
           [20,91,114,101,103,105,115,116,114,121,93,40,114,101,103,105,115,
            116,114,121,41]},
          {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [26,75,101,121,115,32,97,114,101,32,115,116,114,105,110,103,115,
              44,32,116,104,97,116,32,105,115,44]}],
           0,false},
          {text,[6,42,78,85,76,76,42]},
          {sep,
           [{text,
             "Ã-terminated arrays of characters, and values are arbitrary objects. Although integers and floating point numbers are treated specially by the registry, you can store strings or binary objects of any type as pointers."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [26,84,111,32,115,116,97,114,116,44,32,111,112,101,110,32,97,32,
            114,101,103,105,115,116,114,121,58]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,[{text,")\nei_reg *reg;\n\nreg = ei_reg_open(45);    "}],0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\nThe number"}],0,false},
          {text,[4,42,52,53,42]},
          {sep,
           [{text,
             [387,105,110,32,116,104,101,32,101,120,97,109,112,108,101,32,105,
              110,100,105,99,97,116,101,115,32,116,104,101,32,97,112,112,114,
              111,120,105,109,97,116,101,32,110,117,109,98,101,114,32,111,102,
              32,111,98,106,101,99,116,115,32,116,104,97,116,32,121,111,117,
              32,101,120,112,101,99,116,32,116,111,32,115,116,111,114,101,32,
              105,110,32,116,104,101,32,114,101,103,105,115,116,114,121,46,32,
              73,110,116,101,114,110,97,108,108,121,32,116,104,101,32,114,101,
              103,105,115,116,114,121,32,117,115,101,115,32,104,97,115,104,32,
              116,97,98,108,101,115,32,119,105,116,104,32,99,111,108,108,105,
              115,105,111,110,32,99,104,97,105,110,105,110,103,44,32,115,111,
              32,116,104,101,114,101,32,105,115,32,110,111,32,97,98,115,111,
              108,117,116,101,32,117,112,112,101,114,32,108,105,109,105,116,
              32,111,110,32,116,104,101,32,110,117,109,98,101,114,32,111,102,
              32,111,98,106,101,99,116,115,32,116,104,97,116,32,116,104,101,
              32,114,101,103,105,115,116,114,121,32,99,97,110,32,99,111,110,
              116,97,105,110,44,32,98,117,116,32,105,102,32,112,101,114,102,
              111,114,109,97,110,99,101,32,111,114,32,109,101,109,111,114,121,
              32,117,115,97,103,101,32,105,115,32,105,109,112,111,114,116,97,
              110,116,44,32,116,104,101,110,32,121,111,117,32,97,114,101,32,
              116,111,32,99,104,111,111,115,101,32,97,32,110,117,109,98,101,
              114,32,97,99,99,111,114,100,105,110,103,108,121,46,32,84,104,
              101,32,114,101,103,105,115,116,114,121,32,99,97,110,32,98,101,
              32,114,101,115,105,122,101,100,32,108,97,116,101,114,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "@You can open as many registries as you like (if memory permits)."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "Â¡Objects are stored and retrieved through set and get functions. The following example shows how to store integers, floats, strings, and arbitrary binary objects:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "Ã½\nstruct bonk *b = malloc(sizeof(*b));\nchar *name = malloc(7);\n\nei_reg_setival(reg,\"age\",29); \nei_reg_setfval(reg,\"height\",1.85);\n\nstrcpy(name,\"Martin\");\nei_reg_setsval(reg,\"name\",name); \n\nb->l = 42;\nb->m = 12;\nei_reg_setpval(reg,\"jox\",b,sizeof(*b));    "}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [368,73,102,32,121,111,117,32,116,114,121,32,116,111,32,115,116,
            111,114,101,32,97,110,32,111,98,106,101,99,116,32,105,110,32,116,
            104,101,32,114,101,103,105,115,116,114,121,32,97,110,100,32,116,
            104,101,114,101,32,105,115,32,97,110,32,101,120,105,115,116,105,
            110,103,32,111,98,106,101,99,116,32,119,105,116,104,32,116,104,
            101,32,115,97,109,101,32,107,101,121,44,32,116,104,101,32,110,101,
            119,32,118,97,108,117,101,32,114,101,112,108,97,99,101,115,32,116,
            104,101,32,111,108,100,32,111,110,101,46,32,84,104,105,115,32,105,
            115,32,100,111,110,101,32,114,101,103,97,114,100,108,101,115,115,
            32,111,102,32,119,104,101,116,104,101,114,32,116,104,101,32,110,
            101,119,32,111,98,106,101,99,116,32,97,110,100,32,116,104,101,32,
            111,108,100,32,111,110,101,32,104,97,118,101,32,116,104,101,32,
            115,97,109,101,32,116,121,112,101,44,32,115,111,32,121,111,117,32,
            99,97,110,44,32,102,111,114,32,101,120,97,109,112,108,101,44,32,
            114,101,112,108,97,99,101,32,97,32,115,116,114,105,110,103,32,119,
            105,116,104,32,97,110,32,105,110,116,101,103,101,114,46,32,73,102,
            32,116,104,101,32,101,120,105,115,116,105,110,103,32,118,97,108,
            117,101,32,105,115,32,97,32,115,116,114,105,110,103,32,111,114,32,
            98,105,110,97,114,121,44,32,105,116,32,105,115,32,102,114,101,101,
            100,32,98,101,102,111,114,101,32,116,104,101,32,110,101,119,32,
            118,97,108,117,101,32,105,115,32,97,115,115,105,103,110,101,100,
            46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"9Stored values are retrieved from the registry as follows:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "Ã\nlong i;\ndouble f;\nchar *s;\nstruct bonk *b;\nint size;\n\ni = ei_reg_getival(reg,\"age\");\nf = ei_reg_getfval(reg,\"height\");\ns = ei_reg_getsval(reg,\"name\");\nb = ei_reg_getpval(reg,\"jox\",&size);    "}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "Â¥In all the above examples, the object must exist and it must be of the right type for the specified operation. If you do not know the type of an object, you can ask:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           ";\nstruct ei_reg_stat buf;\n\nei_reg_stat(reg,\"name\",&buf);    "}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0Buf is initialized to contain object attributes."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")Objects can be removed from the registry:"}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           [31,10,101,105,95,114,101,103,95,100,101,108,101,116,101,40,114,
            101,103,44,34,110,97,109,101,34,41,59,32,32,32,32]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "qWhen you are finished with a registry, close it to remove all the objects and free the memory back to the system:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           [23,10,101,105,95,114,101,103,95,99,108,111,115,101,40,114,101,103,
            41,59,32,32,32,32]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"$## Backing Up the Registry to Mnesia"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".The contents of a registry can be backed up to"}],
             0,false},
            {text,
             [25,91,109,110,101,115,105,97,47,109,110,101,115,105,97,93,40,46,
              47,109,110,101,115,105,97,41]},
            {sep,
             [{text,
               "Von a \"nearby\" Erlang node. You must provide an open connection to the Erlang node (see"}],
             0,false},
            {text,
             [26,91,101,114,108,95,99,111,110,110,101,99,116,93,40,101,114,
              108,95,99,111,110,110,101,99,116,41]},
            {sep,[{text,"\b). Also,"}],0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,
               "O3.0 or later must be running on the Erlang node before the backup is initiated:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"/\nei_reg_dump(fd, reg, \"mtab\", dumpflags);      "}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BThis example back up the contents of the registry to the specified"}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,[{text,[5,116,97,98,108,101]}],0,false},
            {text,"\b*\"mtab\"*"},
            {sep,[{text,"'. Once a registry has been backed up to"}],0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,
               [281,108,105,107,101,32,116,104,105,115,44,32,109,111,114,101,
                32,98,97,99,107,117,112,115,32,111,110,108,121,32,97,102,102,
                101,99,116,32,111,98,106,101,99,116,115,32,116,104,97,116,32,
                104,97,118,101,32,98,101,101,110,32,109,111,100,105,102,105,
                101,100,32,115,105,110,99,101,32,116,104,101,32,109,111,115,
                116,32,114,101,99,101,110,116,32,98,97,99,107,117,112,44,32,
                116,104,97,116,32,105,115,44,32,111,98,106,101,99,116,115,32,
                116,104,97,116,32,104,97,118,101,32,98,101,101,110,32,99,114,
                101,97,116,101,100,44,32,99,104,97,110,103,101,100,44,32,111,
                114,32,100,101,108,101,116,101,100,46,32,84,104,101,32,98,97,
                99,107,117,112,32,111,112,101,114,97,116,105,111,110,32,105,
                115,32,100,111,110,101,32,97,115,32,97,32,115,105,110,103,108,
                101,32,97,116,111,109,105,99,32,116,114,97,110,115,97,99,116,
                105,111,110,44,32,115,111,32,116,104,97,116,32,101,105,116,
                104,101,114,32,116,104,101,32,101,110,116,105,114,101,32,98,
                97,99,107,117,112,32,105,115,32,112,101,114,102,111,114,109,
                101,100,32,111,114,32,110,111,110,101,32,111,102,32,105,116,
                46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+Likewise, a registry can be restored from a"}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,[{text,[6,116,97,98,108,101,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"'\nei_reg_restore(fd, reg, \"mtab\");      "}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"!This reads the entire contents of"}],0,false},
            {text,"\b*\"mtab\"*"},
            {sep,
             [{text,
               "Âºinto the specified registry. After the restore, all the objects in the registry are marked as unmodified, so a later backup only affects objects that you have modified since the restore."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [136,78,111,116,105,99,101,32,116,104,97,116,32,105,102,32,121,
                111,117,32,114,101,115,116,111,114,101,32,116,111,32,97,32,
                110,111,110,45,101,109,112,116,121,32,114,101,103,105,115,116,
                114,121,44,32,111,98,106,101,99,116,115,32,105,110,32,116,104,
                101,32,116,97,98,108,101,32,111,118,101,114,119,114,105,116,
                101,32,111,98,106,101,99,116,115,32,105,110,32,116,104,101,32,
                114,101,103,105,115,116,114,121,32,119,105,116,104,32,116,104,
                101,32,115,97,109,101,32,107,101,121,115,46,32,65,108,115,111,
                44,32,116,104,101]}],
             0,false},
            {text,"\n**entire**"},
            {sep,
             [{text,
               "Â¶contents of the registry is marked as unmodified after the restore, including any modified objects that were not overwritten by the restore operation. This may not be your intention."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [31,35,35,32,83,116,111,114,105,110,103,32,83,116,114,105,110,103,
          115,32,97,110,100,32,66,105,110,97,114,105,101,115]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "rWhen string or binary objects are stored in the registry it is important that some simple guidelines are followed."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "IMost importantly, the object must have been created with a single call to"}],
             0,false},
            {text,"\n*malloc()*"},
            {sep,
             [{text,
               "A(or similar), so that it can later be removed by a single call to"}],
             0,false},
            {text,"\b*free()*"},
            {sep,
             [{text,
               [144,46,32,79,98,106,101,99,116,115,32,97,114,101,32,102,114,
                101,101,100,32,98,121,32,116,104,101,32,114,101,103,105,115,
                116,114,121,32,119,104,101,110,32,105,116,32,105,115,32,99,
                108,111,115,101,100,44,32,111,114,32,119,104,101,110,32,121,
                111,117,32,97,115,115,105,103,110,32,97,32,110,101,119,32,118,
                97,108,117,101,32,116,111,32,97,110,32,111,98,106,101,99,116,
                32,116,104,97,116,32,112,114,101,118,105,111,117,115,108,121,
                32,99,111,110,116,97,105,110,101,100,32,97,32,115,116,114,105,
                110,103,32,111,114,32,98,105,110,97,114,121,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "Â²Notice that if you store binary objects that are context-dependent (for example, containing pointers or open file descriptors), they lose their meaning if they are backed up to a"}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,"0table and later restored in a different context."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [331,87,104,101,110,32,121,111,117,32,114,101,116,114,105,101,
              118,101,32,97,32,115,116,111,114,101,100,32,115,116,114,105,110,
              103,32,111,114,32,98,105,110,97,114,121,32,118,97,108,117,101,
              32,102,114,111,109,32,116,104,101,32,114,101,103,105,115,116,
              114,121,44,32,116,104,101,32,114,101,103,105,115,116,114,121,32,
              109,97,105,110,116,97,105,110,115,32,97,32,112,111,105,110,116,
              101,114,32,116,111,32,116,104,101,32,111,98,106,101,99,116,32,
              97,110,100,32,121,111,117,32,97,114,101,32,112,97,115,115,101,
              100,32,97,32,99,111,112,121,32,111,102,32,116,104,97,116,32,112,
              111,105,110,116,101,114,46,32,89,111,117,32,115,104,111,117,108,
              100,32,110,101,118,101,114,32,102,114,101,101,32,97,110,32,111,
              98,106,101,99,116,32,114,101,116,114,105,101,118,101,100,32,105,
              110,32,116,104,105,115,32,109,97,110,110,101,114,32,98,101,99,
              97,117,115,101,32,119,104,101,110,32,116,104,101,32,114,101,103,
              105,115,116,114,121,32,108,97,116,101,114,32,97,116,116,101,109,
              112,116,115,32,116,111,32,102,114,101,101,32,105,116,44,32,97,
              32,114,117,110,116,105,109,101,32,101,114,114,111,114,32,111,99,
              99,117,114,115,32,116,104,97,116,32,108,105,107,101,108,121,32,
              99,97,117,115,101,115,32,116,104,101,32,67,45,110,111,100,101,
              32,116,111,32,99,114,97,115,104,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ÃYou are free to modify the contents of an object retrieved this way. However, when you do so, the registry is not aware of your changes, possibly causing it to be missed the next time you make an"}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,
               "pbackup of the registry contents. This can be avoided if you mark the object as dirty after any such changes with"}],
             0,false},
            {text,"8[registry#ei_reg_markdirty](./registry#ei_reg_markdirty)"},
            {sep,
             [{text,
               [30,44,32,111,114,32,112,97,115,115,32,97,112,112,114,111,112,
                114,105,97,116,101,32,102,108,97,103,115,32,116,111]}],
             0,false},
            {text,".[registry#ei_reg_dump](./registry#ei_reg_dump)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
