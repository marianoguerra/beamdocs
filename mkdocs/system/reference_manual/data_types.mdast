{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,{above,{text,"\f# Data Types"},null},null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "IErlang provides a number of data types, which are listed in this section."}],
                       0,false}],
                     0,true},
                    null},
                   null}}},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,{above,{text,"\b## Terms"},null},null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            ",A piece of data of any data type is called a"}],
                          0,false},
                         {text,"\b**term**"},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false}},
               {sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,{above,{text,"\t## Number"},null},null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"(There are two types of numeric literals,"}],
                         0,false},
                        {text,"\f**integers**"},
                        {sep,[{text,[3,97,110,100]}],0,false},
                        {text,"\n**floats**"},
                        {sep,
                         [{text,
                           "M. Besides the conventional notation, there are two Erlang-specific notations:"}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,[3,42,36,42]},
                      {sep,
                       [{text,[2,42,42]},
                        {text,[6,42,99,104,97,114,42]},
                        {text,[2,42,42]}],
                       0,false},
                      {above,{above,null,null},null},
                      {sep,
                       [{text,
                         "2ASCII value or unicode code-point of the character"}],
                       0,false},
                      {sep,
                       [{text,[2,42,42]},
                        {text,[6,42,99,104,97,114,42]},
                        {text,[2,42,42]}],
                       0,false},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,false},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{sep,
                       [{text,[2,42,42]},
                        {text,[6,42,98,97,115,101,42]},
                        {text,[2,42,42]}],
                       0,false},
                      {text,[3,42,35,42]},
                      {sep,
                       [{text,[2,42,42]},
                        {text,[7,42,118,97,108,117,101,42]},
                        {text,[2,42,42]}],
                       0,false},
                      {above,{above,null,null},null},
                      {sep,
                       [{text,
                         [21,73,110,116,101,103,101,114,32,119,105,116,104,32,
                          116,104,101,32,98,97,115,101]}],
                       0,false},
                      {sep,
                       [{text,[2,42,42]},
                        {text,[6,42,98,97,115,101,42]},
                        {text,[2,42,42]}],
                       0,false},
                      {sep,
                       [{text,
                         "-, that must be an integer in the range 2..36."}],
                       0,false}],
                     0,false}],
                   0,false}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {above,
                     {above,
                      {text,[3,96,96,96]},
                      {sep,
                       [{text,[4,10,49,62,32]},
                        {text,[3,52,50,46]},
                        {text,[7,10,52,50,10,50,62,32]},
                        {text,[3,36,65,46]},
                        {text,[7,10,54,53,10,51,62,32]},
                        {text,[4,36,92,110,46]},
                        {text,[7,10,49,48,10,52,62,32]},
                        {text,[6,50,35,49,48,49,46]},
                        {text,[6,10,53,10,53,62,32]},
                        {text,[6,49,54,35,49,102,46]},
                        {text,[7,10,51,49,10,54,62,32]},
                        {text,[4,50,46,51,46]},
                        {text,"\b\n2.3\n7> "},
                        {text,[6,50,46,51,101,51,46]},
                        {text,"\n\n2.3e3\n8> "},
                        {text,[7,50,46,51,101,45,51,46]},
                        {text,[7,10,48,46,48,48,50,51]}],
                       0,true}},
                     {text,[3,96,96,96]}},
                    null},
                   null}}],
                0,false}},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,{above,{text,[7,35,35,32,65,116,111,109]},null},null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "ÃŸAn atom is a literal, a constant with name. An atom is to be enclosed in single quotes (') if it does not begin with a lower-case letter or if it contains other characters than alphanumeric characters, underscore (_), or @."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {above,
                    {above,
                     {text,[3,96,96,96]},
                     {sep,
                      [{text,
                        "+\nhello\nphone_number\n'Monday'\n'phone number'"}],
                      0,true}},
                    {text,[3,96,96,96]}},
                   null},
                  null}}],
               0,false}},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,{text,"\e## Bit Strings and Binaries"},null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "8A bit string is used to store an area of untyped memory."}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,"#Bit strings are expressed using the"}],
                       0,false},
                      {text,"&[bit syntax](./expressions#bit_syntax)"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         "[Bit strings that consist of a number of bits that are evenly divisible by eight, are called"}],
                       0,false},
                      {text,"\f**binaries**"}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {above,
                   {above,
                    {text,[3,96,96,96]},
                    {sep,
                     [{text,[4,10,49,62,32]},
                      {text,"\n<<10,20>>."},
                      {text,[1,10]},
                      {text,[1,60]},
                      {text,"\f<10,20>>\n2> "},
                      {text,"\n<<\"ABC\">>."},
                      {text,[1,10]},
                      {text,[1,60]},
                      {text,"\f<\"ABC\">>\n1> "},
                      {text,"\f<<1:1,0:1>>."},
                      {text,[1,10]},
                      {text,[1,60]},
                      {text,[6,60,50,58,50,62,62]}],
                     0,true}},
                   {text,[3,96,96,96]}},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         [22,70,111,114,32,109,111,114,101,32,101,120,97,109,
                          112,108,101,115,44,32,115,101,101]}],
                       0,false},
                      {text,"$[Programming Examples](./bit_syntax)"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false}},
            {sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,{above,{text,"\f## Reference"},null},null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "TA reference is a term that is unique in an Erlang runtime system, created by calling"}],
                      0,false},
                     {text,"\f*make_ref/0*"},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}}],
             0,false}},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,{above,{text,[6,35,35,32,70,117,110]},null},null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     "Â£A fun is a functional object. Funs make it possible to create an anonymous function and pass the function itself -- not its name -- as argument to other functions."}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {above,
                 {above,
                  {text,[3,96,96,96]},
                  {sep,
                   [{text,[4,10,49,62,32]},
                    {text,
                     [26,70,117,110,49,32,61,32,102,117,110,32,40,88,41,32,45,
                      62,32,88,43,49,32,101,110,100,46]},
                    {text,[5,10,35,70,117,110]},
                    {text,
                     [20,60,101,114,108,95,101,118,97,108,46,54,46,51,57,48,
                      55,52,53,52,54]},
                    {text,[5,62,10,50,62,32]},
                    {text,"\bFun1(2)."},
                    {text,[2,10,51]}],
                   0,true}},
                 {text,[3,96,96,96]}},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [23,82,101,97,100,32,109,111,114,101,32,97,98,111,117,
                        116,32,102,117,110,115,32,105,110]}],
                     0,false},
                    {text,"%[Fun Expressions](./expressions#funs)"},
                    {sep,
                     [{text,
                       [24,46,32,70,111,114,32,109,111,114,101,32,101,120,97,
                        109,112,108,101,115,44,32,115,101,101]}],
                     0,false},
                    {text,
                     [30,91,80,114,111,103,114,97,109,109,105,110,103,32,69,
                      120,97,109,112,108,101,115,93,40,46,47,102,117,110,115,
                      41]},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {text,
                [18,35,35,32,80,111,114,116,32,73,100,101,110,116,105,102,105,
                 101,114]},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,",A port identifier identifies an Erlang port."}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,"\r*open_port/2*"},
                   {sep,
                    [{text,
                      "C, which is used to create ports, returns a value of this data type."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      [24,82,101,97,100,32,109,111,114,101,32,97,98,111,117,
                       116,32,112,111,114,116,115,32,105,110]}],
                    0,false},
                   {text,
                    [31,91,80,111,114,116,115,32,97,110,100,32,80,111,114,116,
                     32,68,114,105,118,101,114,115,93,40,112,111,114,116,115,
                     41]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,{above,{text,[6,35,35,32,80,105,100]},null},null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,"0A process identifier, pid, identifies a process."}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "XThe following BIFs, which are used to create processes, return values of this data type:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,
             {sep,
              [{text,[1,42]},
               {text,[15,42,115,112,97,119,110,47,49,44,50,44,51,44,52,42]}],
              0,false},
             {sep,
              [{text,[1,42]},
               {text,
                [20,42,115,112,97,119,110,95,108,105,110,107,47,49,44,50,44,
                 51,44,52,42]}],
              0,false}},
            {sep,[{text,[1,42]},{text,"\r*spawn_opt/4*"}],0,false}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,[4,10,49,62,32]},
                  {text,
                   [16,115,112,97,119,110,40,109,44,32,102,44,32,91,93,41,46]},
                  {text,[1,10]},
                  {text,"\b<0.51.0>"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,"!In the following example, the BIF"}],0,false},
                  {text,"\b*self()*"},
                  {sep,
                   [{text,"'returns the pid of the calling process:"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [156,10,45,109,111,100,117,108,101,40,109,41,46,10,45,101,
                    120,112,111,114,116,40,91,108,111,111,112,47,48,93,41,46,
                    10,10,108,111,111,112,40,41,32,45,62,10,32,32,32,32,114,
                    101,99,101,105,118,101,10,32,32,32,32,32,32,32,32,119,104,
                    111,95,97,114,101,95,121,111,117,32,45,62,10,32,32,32,32,
                    32,32,32,32,32,32,32,32,105,111,58,102,111,114,109,97,116,
                    40,34,73,32,97,109,32,126,112,126,110,34,44,32,91,115,101,
                    108,102,40,41,93,41,44,10,32,32,32,32,32,32,32,32,32,32,
                    32,32,108,111,111,112,40,41,10,32,32,32,32,101,110,100,46,
                    10,10,49,62,32]},
                  {text,
                   [23,80,32,61,32,115,112,97,119,110,40,109,44,32,108,111,
                    111,112,44,32,91,93,41,46]},
                  {text,[1,10]},
                  {text,"\f<0.58.0>\n2> "},
                  {text,
                   [16,80,32,33,32,119,104,111,95,97,114,101,95,121,111,117,
                    46]},
                  {text,[6,10,73,32,97,109,32]},
                  {text,
                   [20,60,48,46,53,56,46,48,62,10,119,104,111,95,97,114,101,
                    95,121,111,117]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [28,82,101,97,100,32,109,111,114,101,32,97,98,111,117,
                      116,32,112,114,111,99,101,115,115,101,115,32,105,110]}],
                   0,false},
                  {text,
                   [22,91,80,114,111,99,101,115,115,101,115,93,40,112,114,111,
                    99,101,115,115,101,115,41]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,{above,{text,"\b## Tuple"},null},null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "=A tuple is a compound data type with a fixed number of terms:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [18,10,123,84,101,114,109,49,44,46,46,46,44,84,101,114,109,
                   78,125]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\tEach term"}],0,false},
                 {text,[6,42,84,101,114,109,42]},
                 {sep,
                  [{text,
                    [25,105,110,32,116,104,101,32,116,117,112,108,101,32,105,
                     115,32,99,97,108,108,101,100,32,97,110]}],
                  0,false},
                 {text,"\v**element**"},
                 {sep,
                  [{text,"*. The number of elements is said to be the"}],
                  0,false},
                 {text,"\b**size**"},
                 {sep,[{text,"\rof the tuple."}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "3There exists a number of BIFs to manipulate tuples."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,[4,10,49,62,32]},
                 {text,
                  [24,80,32,61,32,123,97,100,97,109,44,50,52,44,123,106,117,
                   108,121,44,50,57,125,125,46]},
                 {text,
                  [24,10,123,97,100,97,109,44,50,52,44,123,106,117,108,121,44,
                   50,57,125,125,10,50,62,32]},
                 {text,"\relement(1,P)."},
                 {text,"\t\nadam\n3> "},
                 {text,"\relement(3,P)."},
                 {text,[14,10,123,106,117,108,121,44,50,57,125,10,52,62,32]},
                 {text,
                  [24,80,50,32,61,32,115,101,116,101,108,101,109,101,110,116,
                   40,50,44,80,44,50,53,41,46]},
                 {text,
                  [24,10,123,97,100,97,109,44,50,53,44,123,106,117,108,121,44,
                   50,57,125,125,10,53,62,32]},
                 {text,
                  [14,116,117,112,108,101,95,115,105,122,101,40,80,41,46]},
                 {text,[6,10,51,10,54,62,32]},
                 {text,
                  [15,116,117,112,108,101,95,115,105,122,101,40,123,125,41,
                   46]},
                 {text,[2,10,48]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}}],
         0,false}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,{above,{text,[6,35,35,32,77,97,112]},null},null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "OA map is a compound data type with a variable number of key-value associations:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,[{text,"!\n#{Key1=>Value1,...,KeyN=>ValueN}"}],0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "2Each key-value association in the map is called an"}],
                 0,false},
                {text,
                 [20,42,42,97,115,115,111,99,105,97,116,105,111,110,32,112,97,
                  105,114,42,42]},
                {sep,
                 [{text,"0. The key and value parts of the pair are called"}],
                 0,false},
                {text,"\f**elements**"},
                {sep,
                 [{text,
                   "3. The number of association pairs is said to be the"}],
                 0,false},
                {text,"\b**size**"},
                {sep,[{text,"\vof the map."}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,"1There exists a number of BIFs to manipulate maps."}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,[4,10,49,62,32]},
                {text,"+M1 = #{name=>adam,age=>24,date=>{july,29}}."},
                {text,"0\n#{age => 24,date => {july,29},name => adam}\n2> "},
                {text,
                 [18,109,97,112,115,58,103,101,116,40,110,97,109,101,44,77,49,
                  41,46]},
                {text,"\t\nadam\n3> "},
                {text,
                 [18,109,97,112,115,58,103,101,116,40,100,97,116,101,44,77,49,
                  41,46]},
                {text,[14,10,123,106,117,108,121,44,50,57,125,10,52,62,32]},
                {text,
                 [28,77,50,32,61,32,109,97,112,115,58,117,112,100,97,116,101,
                  40,97,103,101,44,50,53,44,77,49,41,46]},
                {text,"0\n#{age => 25,date => {july,29},name => adam}\n5> "},
                {text,"\fmap_size(M)."},
                {text,[6,10,51,10,54,62,32]},
                {text,[14,109,97,112,95,115,105,122,101,40,35,123,125,41,46]},
                {text,[2,10,48]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "9A collection of maps processing functions can be found in"}],
                 0,false},
                {text,
                 [21,91,115,116,100,108,105,98,47,109,97,112,115,93,40,46,47,
                  109,97,112,115,41]},
                {sep,
                 [{text,
                   [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                    83,84,68,76,73,66,46]}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [23,82,101,97,100,32,109,111,114,101,32,97,98,111,117,116,
                    32,109,97,112,115,32,105,110]}],
                 0,false},
                {text,"0[Map Expressions](./expressions#map_expressions)"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
              {sep,
               [{text,[4,32,32,32,32]},
                {sep,
                 [{sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "=Maps are considered to be experimental during Erlang/OTP R17."}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false}],
                 0,true}],
               0,false}},
             {text,[0]}},
            null},
           null}}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,[7,35,35,32,76,105,115,116]},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "?A list is a compound data type with a variable number of terms."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [18,10,91,84,101,114,109,49,44,46,46,46,44,84,101,114,109,78,
                 93]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\tEach term"}],0,false},
               {text,[6,42,84,101,114,109,42]},
               {sep,
                [{text,
                  [24,105,110,32,116,104,101,32,108,105,115,116,32,105,115,32,
                   99,97,108,108,101,100,32,97,110]}],
                0,false},
               {text,"\v**element**"},
               {sep,
                [{text,"*. The number of elements is said to be the"}],
                0,false},
               {text,"\n**length**"},
               {sep,[{text,"\fof the list."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,")Formally, a list is either the empty list"}],
                0,false},
               {text,[4,42,91,93,42]},
               {sep,
                [{text,
                  [16,111,114,32,99,111,110,115,105,115,116,115,32,111,102,32,
                   97]}],
                0,false},
               {text,"\b**head**"},
               {sep,
                [{text,
                  [21,40,102,105,114,115,116,32,101,108,101,109,101,110,116,
                   41,32,97,110,100,32,97]}],
                0,false},
               {text,"\b**tail**"},
               {sep,
                [{text,
                  [28,40,114,101,109,97,105,110,100,101,114,32,111,102,32,116,
                   104,101,32,108,105,115,116,41,46,32,84,104,101]}],
                0,false},
               {text,"\b**tail**"},
               {sep,
                [{text,".is also a list. The latter can be expressed as"}],
                0,false},
               {text,[7,42,91,72,124,84,93,42]},
               {sep,
                [{text,
                  [14,46,32,84,104,101,32,110,111,116,97,116,105,111,110]}],
                0,false},
               {text,
                [19,42,91,84,101,114,109,49,44,46,46,46,44,84,101,114,109,78,
                 93,42]},
               {sep,[{text,"!above is equivalent with the list"}],0,false},
               {text,
                [26,42,91,84,101,114,109,49,124,91,46,46,46,124,91,84,101,114,
                 109,78,124,91,93,93,93,93,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[4,42,91,93,42]},
               {sep,
                [{text,
                  [15,105,115,32,97,32,108,105,115,116,44,32,116,104,117,
                   115]}],
                0,false},
               {above,{above,null,null},null},
               {text,"\b*[c|[]]*"},
               {sep,
                [{text,
                  [15,105,115,32,97,32,108,105,115,116,44,32,116,104,117,
                   115]}],
                0,false},
               {above,{above,null,null},null},
               {text,"\f*[b|[c|[]]]*"},
               {sep,
                [{text,
                  [15,105,115,32,97,32,108,105,115,116,44,32,116,104,117,
                   115]}],
                0,false},
               {above,{above,null,null},null},
               {text,[16,42,91,97,124,91,98,124,91,99,124,91,93,93,93,93,42]},
               {sep,
                [{text,
                  [22,105,115,32,97,32,108,105,115,116,44,32,111,114,32,105,
                   110,32,115,104,111,114,116]}],
                0,false},
               {text,"\t*[a,b,c]*"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "5A list where the tail is a list is sometimes called a"}],
                0,false},
               {text,
                [15,42,42,112,114,111,112,101,114,32,108,105,115,116,42,42]},
               {sep,
                [{text,
                  "I. It is allowed to have a list where the tail is not a list, for example,"}],
                0,false},
               {text,[7,42,91,97,124,98,93,42]},
               {sep,
                [{text,
                  "8. However, this type of list is of little practical use."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [17,76,49,32,61,32,91,97,44,50,44,123,99,44,52,125,93,46]},
               {text,[16,10,91,97,44,50,44,123,99,44,52,125,93,10,50,62,32]},
               {text,"\v[H|T] = L1."},
               {text,[16,10,91,97,44,50,44,123,99,44,52,125,93,10,51,62,32]},
               {text,[2,72,46]},
               {text,[6,10,97,10,52,62,32]},
               {text,[2,84,46]},
               {text,[14,10,91,50,44,123,99,44,52,125,93,10,53,62,32]},
               {text,"\vL2 = [d|T]."},
               {text,[16,10,91,100,44,50,44,123,99,44,52,125,93,10,54,62,32]},
               {text,"\vlength(L1)."},
               {text,[6,10,51,10,55,62,32]},
               {text,"\vlength([])."},
               {text,[2,10,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "=A collection of list processing functions can be found in the"}],
                0,false},
               {text,
                [16,91,108,105,115,116,115,93,40,46,47,108,105,115,116,115,
                 41]},
               {sep,
                [{text,
                  [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   83,84,68,76,73,66,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\t## String"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "^Strings are enclosed in double quotes (\"), but is not a data type in Erlang. Instead, a string"}],
               0,false},
              {text,"\t*\"hello\"*"},
              {sep,
               [{text,
                 [25,105,115,32,115,104,111,114,116,104,97,110,100,32,102,111,
                  114,32,116,104,101,32,108,105,115,116]}],
               0,false},
              {text,
               [18,42,91,36,104,44,36,101,44,36,108,44,36,108,44,36,111,93,
                42]},
              {sep,[{text,"\n, that is,"}],0,false},
              {text,
               [23,42,91,49,48,52,44,49,48,49,44,49,48,56,44,49,48,56,44,49,
                49,49,93,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [131,84,119,111,32,97,100,106,97,99,101,110,116,32,115,116,114,
                105,110,103,32,108,105,116,101,114,97,108,115,32,97,114,101,
                32,99,111,110,99,97,116,101,110,97,116,101,100,32,105,110,116,
                111,32,111,110,101,46,32,84,104,105,115,32,105,115,32,100,111,
                110,101,32,105,110,32,116,104,101,32,99,111,109,112,105,108,
                97,116,105,111,110,44,32,116,104,117,115,44,32,100,111,101,
                115,32,110,111,116,32,105,110,99,117,114,32,97,110,121,32,114,
                117,110,116,105,109,101,32,111,118,101,114,104,101,97,100,
                46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[14,10,34,115,116,114,105,110,103,34,32,34,52,50,34]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [16,105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,
                111]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,[{text,"\v\n\"string42\""}],0,true}},
           {text,[3,96,96,96]}},
          null},
         null}}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\t## Record"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [365,65,32,114,101,99,111,114,100,32,105,115,32,97,32,100,97,
                 116,97,32,115,116,114,117,99,116,117,114,101,32,102,111,114,
                 32,115,116,111,114,105,110,103,32,97,32,102,105,120,101,100,
                 32,110,117,109,98,101,114,32,111,102,32,101,108,101,109,101,
                 110,116,115,46,32,73,116,32,104,97,115,32,110,97,109,101,100,
                 32,102,105,101,108,100,115,32,97,110,100,32,105,115,32,115,
                 105,109,105,108,97,114,32,116,111,32,97,32,115,116,114,117,
                 99,116,32,105,110,32,67,46,32,72,111,119,101,118,101,114,44,
                 32,97,32,114,101,99,111,114,100,32,105,115,32,110,111,116,32,
                 97,32,116,114,117,101,32,100,97,116,97,32,116,121,112,101,46,
                 32,73,110,115,116,101,97,100,44,32,114,101,99,111,114,100,32,
                 101,120,112,114,101,115,115,105,111,110,115,32,97,114,101,32,
                 116,114,97,110,115,108,97,116,101,100,32,116,111,32,116,117,
                 112,108,101,32,101,120,112,114,101,115,115,105,111,110,115,
                 32,100,117,114,105,110,103,32,99,111,109,112,105,108,97,116,
                 105,111,110,46,32,84,104,101,114,101,102,111,114,101,44,32,
                 114,101,99,111,114,100,32,101,120,112,114,101,115,115,105,
                 111,110,115,32,97,114,101,32,110,111,116,32,117,110,100,101,
                 114,115,116,111,111,100,32,98,121,32,116,104,101,32,115,104,
                 101,108,108,32,117,110,108,101,115,115,32,115,112,101,99,105,
                 97,108,32,97,99,116,105,111,110,115,32,97,114,101,32,116,97,
                 107,101,110,46,32,70,111,114,32,100,101,116,97,105,108,115,
                 44,32,115,101,101,32,116,104,101]}],
              0,false},
             {text,
              [19,91,115,104,101,108,108,40,51,41,93,40,46,47,115,104,101,108,
               108,41]},
             {sep,
              [{text,
                [23,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,83,
                 84,68,76,73,66,41,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "{\n-module(person).\n-export([new/2]).\n\n-record(person, {name, age}).\n\nnew(Name, Age) ->\n    #person{name=Name, age=Age}.\n\n1> "},
             {text,
              [22,112,101,114,115,111,110,58,110,101,119,40,101,114,110,105,
               101,44,32,52,52,41,46]},
             {text,
              [18,10,123,112,101,114,115,111,110,44,101,114,110,105,101,44,52,
               52,125]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [26,82,101,97,100,32,109,111,114,101,32,97,98,111,117,116,32,
                 114,101,99,111,114,100,115,32,105,110]}],
              0,false},
             {text,
              [18,91,82,101,99,111,114,100,115,93,40,114,101,99,111,114,100,
               115,41]},
             {sep,
              [{text,
                [31,46,32,77,111,114,101,32,101,120,97,109,112,108,101,115,32,
                 99,97,110,32,98,101,32,102,111,117,110,100,32,105,110]}],
              0,false},
             {text,"![Programming Examples](./records)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\n## Boolean"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ":There is no Boolean data type in Erlang. Instead the atoms"}],
             0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,"\"are used to denote Boolean values."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,49,62,32]},
            {text,[6,50,32,61,60,32,51]},
            {text,"\n.\ntrue\n2> "},
            {text,"\rtrue or false"},
            {text,[6,46,10,116,114,117,101]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [19,35,35,32,69,115,99,97,112,101,32,83,101,113,117,101,110,99,101,
         115]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "OWithin strings and quoted atoms, the following escape sequences are recognized:"}],
          0,false}],
        0,true},
       null},
      null}},
    {text,"\vTODO: TABLE"}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [19,35,35,32,84,121,112,101,32,67,111,110,118,101,114,115,105,111,110,
        115]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0There are a number of BIFs for type conversions."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[4,10,49,62,32]},
          {text,
           [20,97,116,111,109,95,116,111,95,108,105,115,116,40,104,101,108,
            108,111,41,46]},
          {text,"\f\n\"hello\"\n2> "},
          {text,
           [22,108,105,115,116,95,116,111,95,97,116,111,109,40,34,104,101,108,
            108,111,34,41,46]},
          {text,"\n\nhello\n3> "},
          {text,
           [28,98,105,110,97,114,121,95,116,111,95,108,105,115,116,40,60,60,
            34,104,101,108,108,111,34,62,62,41,46]},
          {text,"\f\n\"hello\"\n4> "},
          {text,"(binary_to_list(<<104,101,108,108,111>>)."},
          {text,"\f\n\"hello\"\n5> "},
          {text,
           [24,108,105,115,116,95,116,111,95,98,105,110,97,114,121,40,34,104,
            101,108,108,111,34,41,46]},
          {text,[1,10]},
          {text,[1,60]},
          {text,
           [26,60,49,48,52,44,49,48,49,44,49,48,56,44,49,48,56,44,49,49,49,62,
            62,10,54,62,32]},
          {text,
           [19,102,108,111,97,116,95,116,111,95,108,105,115,116,40,55,46,48,
            41,46]},
          {text,"!\n\"7.00000000000000000000e+00\"\n7> "},
          {text,"\elist_to_float(\"7.000e+00\")."},
          {text,"\b\n7.0\n8> "},
          {text,
           [20,105,110,116,101,103,101,114,95,116,111,95,108,105,115,116,40,
            55,55,41,46]},
          {text,"\t\n\"77\"\n9> "},
          {text,
           [22,108,105,115,116,95,116,111,95,105,110,116,101,103,101,114,40,
            34,55,55,34,41,46]},
          {text,"\b\n77\n10> "},
          {text,
           [23,116,117,112,108,101,95,116,111,95,108,105,115,116,40,123,97,44,
            98,44,99,125,41,46]},
          {text,"\r\n[a,b,c]\n11> "},
          {text,
           [23,108,105,115,116,95,116,111,95,116,117,112,108,101,40,91,97,44,
            98,44,99,93,41,46]},
          {text,"\r\n{a,b,c}\n12> "},
          {text,
           [24,116,101,114,109,95,116,111,95,98,105,110,97,114,121,40,123,97,
            44,98,44,99,125,41,46]},
          {text,[1,10]},
          {text,[1,60]},
          {text,"2<131,104,3,100,0,1,97,100,0,1,98,100,0,1,99>>\n13> "},
          {text,
           "?binary_to_term(<<131,104,3,100,0,1,97,100,0,1,98,100,0,1,99>>)."},
          {text,"\r\n{a,b,c}\n14> "},
          {text,
           [28,98,105,110,97,114,121,95,116,111,95,105,110,116,101,103,101,
            114,40,60,60,34,55,55,34,62,62,41,46]},
          {text,"\b\n77\n15> "},
          {text,
           [22,105,110,116,101,103,101,114,95,116,111,95,98,105,110,97,114,
            121,40,55,55,41,46]},
          {text,[1,10]},
          {text,[1,60]},
          {text,"\f<\"77\">>\n16> "},
          {text,
           [21,102,108,111,97,116,95,116,111,95,98,105,110,97,114,121,40,55,
            46,48,41,46]},
          {text,[1,10]},
          {text,[1,60]},
          {text,"$<\"7.00000000000000000000e+00\">>\n17> "},
          {text,"!binary_to_float(<<\"7.000e+00\">>)."},
          {text,[4,10,55,46,48]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}}],
  0,false}}
