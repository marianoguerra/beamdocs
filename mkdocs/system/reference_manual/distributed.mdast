{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [20,35,32,68,105,115,116,114,105,98,117,116,101,100,32,69,114,
               108,97,110,103]},
             null},
            null}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {text,
                [28,35,35,32,68,105,115,116,114,105,98,117,116,101,100,32,69,
                 114,108,97,110,103,32,83,121,115,116,101,109]},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,[{text,[1,65]}],0,false},
                   {text,
                    [29,42,42,100,105,115,116,114,105,98,117,116,101,100,32,
                     69,114,108,97,110,103,32,115,121,115,116,101,109,42,42]},
                   {sep,
                    [{text,
                      "rconsists of a number of Erlang runtime systems communicating with each other. Each such runtime system is called a"}],
                    0,false},
                   {text,"\b**node**"},
                   {sep,
                    [{text,
                      [282,46,32,77,101,115,115,97,103,101,32,112,97,115,115,
                       105,110,103,32,98,101,116,119,101,101,110,32,112,114,
                       111,99,101,115,115,101,115,32,97,116,32,100,105,102,
                       102,101,114,101,110,116,32,110,111,100,101,115,44,32,
                       97,115,32,119,101,108,108,32,97,115,32,108,105,110,107,
                       115,32,97,110,100,32,109,111,110,105,116,111,114,115,
                       44,32,97,114,101,32,116,114,97,110,115,112,97,114,101,
                       110,116,32,119,104,101,110,32,112,105,100,115,32,97,
                       114,101,32,117,115,101,100,46,32,82,101,103,105,115,
                       116,101,114,101,100,32,110,97,109,101,115,44,32,104,
                       111,119,101,118,101,114,44,32,97,114,101,32,108,111,99,
                       97,108,32,116,111,32,101,97,99,104,32,110,111,100,101,
                       46,32,84,104,105,115,32,109,101,97,110,115,32,116,104,
                       97,116,32,116,104,101,32,110,111,100,101,32,109,117,
                       115,116,32,98,101,32,115,112,101,99,105,102,105,101,
                       100,32,97,115,32,119,101,108,108,32,119,104,101,110,32,
                       115,101,110,100,105,110,103,32,109,101,115,115,97,103,
                       101,115,44,32,97,110,100,32,115,111,32,111,110,44,32,
                       117,115,105,110,103,32,114,101,103,105,115,116,101,114,
                       101,100,32,110,97,109,101,115,46]}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "{The distribution mechanism is implemented using TCP/IP sockets. How to implement an alternative carrier is described in the"}],
                    0,false},
                   {text,
                    [31,91,69,82,84,83,32,85,115,101,114,39,115,32,71,117,105,
                     100,101,93,40,46,47,97,108,116,95,100,105,115,116,41]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {above,
                {above,
                 {text,
                  [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,
                   110,105,110,103,34]},
                 {sep,
                  [{text,[4,32,32,32,32]},
                   {sep,
                    [{sep,
                      [{above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 "3Starting a distributed node without also specifying"}],
                               0,false},
                              {text,
                               "-[erts/erl#proto_dist](../erts/erl#proto_dist)"},
                              {sep,
                               [{text,
                                 "Ã®will expose the node to attacks that may give the attacker complete access to the node and in extension the cluster. When using un-secure distributed nodes, make sure that the network is configured to keep potential attackers out. See the"}],
                               0,false},
                              {text,
                               "7[Using SSL for Erlang Distribution](./ssl_distribution)"},
                              {sep,
                               [{text,
                                 "CUser's Guide for details on how to setup a secure distributed node."}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}}],
                      0,false}],
                    0,true}],
                  0,false}},
                {text,[0]}},
               null},
              null}}],
           0,false}},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,{above,{text,"\b## Nodes"},null},null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,[1,65]}],0,false},
                  {text,"\b**node**"},
                  {sep,
                   [{text,
                     "]is an executing Erlang runtime system that has been given a name, using the command-line flag"}],
                   0,false},
                  {text,[7,42,45,110,97,109,101,42]},
                  {sep,
                   [{text,
                     [15,40,108,111,110,103,32,110,97,109,101,115,41,32,111,
                      114]}],
                   0,false},
                  {text,"\b*-sname*"},
                  {sep,
                   [{text,
                     [14,40,115,104,111,114,116,32,110,97,109,101,115,41,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,"&The format of the node name is an atom"}],
                   0,false},
                  {text,"\v*name@host*"},
                  {sep,[{text,[1,46]}],0,false},
                  {text,[6,42,110,97,109,101,42]},
                  {sep,
                   [{text,
                     [30,105,115,32,116,104,101,32,110,97,109,101,32,103,105,
                      118,101,110,32,98,121,32,116,104,101,32,117,115,101,114,
                      46]}],
                   0,false},
                  {text,[6,42,104,111,115,116,42]},
                  {sep,
                   [{text,
                     "iis the full host name if long names are used, or the first part of the host name if short names are used."}],
                   0,false},
                  {text,"\b*node()*"},
                  {sep,
                   [{text,
                     [29,114,101,116,117,114,110,115,32,116,104,101,32,110,97,
                      109,101,32,111,102,32,116,104,101,32,110,111,100,101,
                      46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,[3,10,37,32]},
                  {text,
                   [17,101,114,108,32,45,110,97,109,101,32,100,105,108,98,101,
                    114,116]},
                  {text,
                   [29,10,40,100,105,108,98,101,114,116,64,117,97,98,46,101,
                    114,105,99,115,115,111,110,46,115,101,41,49,62,32]},
                  {text,[7,110,111,100,101,40,41,46]},
                  {text,
                   [30,10,39,100,105,108,98,101,114,116,64,117,97,98,46,101,
                    114,105,99,115,115,111,110,46,115,101,39,10,10,37,32]},
                  {text,
                   [18,101,114,108,32,45,115,110,97,109,101,32,100,105,108,98,
                    101,114,116]},
                  {text,
                   [17,10,40,100,105,108,98,101,114,116,64,117,97,98,41,49,62,
                    32]},
                  {text,[7,110,111,100,101,40,41,46]},
                  {text,"\f\ndilbert@uab"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,
                 [15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
                {sep,
                 [{text,[4,32,32,32,32]},
                  {sep,
                   [{sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              "SA node with a long node name cannot communicate with a node with a short node name."}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false}],
                   0,true}],
                 0,false}},
               {text,[0]}},
              null},
             null}}],
          0,false}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [19,35,35,32,78,111,100,101,32,67,111,110,110,101,99,116,105,
               111,110,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [128,84,104,101,32,110,111,100,101,115,32,105,110,32,97,
                     32,100,105,115,116,114,105,98,117,116,101,100,32,69,114,
                     108,97,110,103,32,115,121,115,116,101,109,32,97,114,101,
                     32,108,111,111,115,101,108,121,32,99,111,110,110,101,99,
                     116,101,100,46,32,84,104,101,32,102,105,114,115,116,32,
                     116,105,109,101,32,116,104,101,32,110,97,109,101,32,111,
                     102,32,97,110,111,116,104,101,114,32,110,111,100,101,32,
                     105,115,32,117,115,101,100,44,32,102,111,114,32,101,120,
                     97,109,112,108,101,44,32,105,102]}],
                  0,false},
                 {text,
                  [19,42,115,112,97,119,110,40,78,111,100,101,44,77,44,70,44,
                   65,41,42]},
                 {sep,[{text,[2,111,114]}],0,false},
                 {text,
                  [20,42,110,101,116,95,97,100,109,58,112,105,110,103,40,78,
                   111,100,101,41,42]},
                 {sep,
                  [{text,
                    "5is called, a connection attempt to that node is made."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "ÃConnections are by default transitive. If a node A connects to node B, and node B has a connection to node C, then node A also tries to connect to node C. This feature can be turned off by using the command-line flag"}],
                  0,false},
                 {text,
                  [20,42,45,99,111,110,110,101,99,116,95,97,108,108,32,102,97,
                   108,115,101,42]},
                 {sep,[{text,"\t, see the"}],0,false},
                 {text,
                  [15,91,101,114,108,40,49,41,93,40,46,47,101,114,108,41]},
                 {sep,
                  [{text,
                    [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                     69,82,84,83,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "FIf a node goes down, all connections to that node are removed. Calling"}],
                  0,false},
                 {text,
                  [30,42,101,114,108,97,110,103,58,100,105,115,99,111,110,110,
                   101,99,116,95,110,111,100,101,40,78,111,100,101,41,42]},
                 {sep,
                  [{text,
                    [31,102,111,114,99,101,115,32,100,105,115,99,111,110,110,
                     101,99,116,105,111,110,32,111,102,32,97,32,110,111,100,
                     101,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "AThe list of (visible) nodes currently connected to is returned by"}],
                  0,false},
                 {text,"\t*nodes()*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,{above,{text,[7,35,35,32,101,112,109,100]},null},null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [29,84,104,101,32,69,114,108,97,110,103,32,80,111,114,116,
                    32,77,97,112,112,101,114,32,68,97,101,109,111,110]}],
                 0,false},
                {text,"\b**epmd**"},
                {sep,
                 [{text,
                   [155,105,115,32,97,117,116,111,109,97,116,105,99,97,108,
                    108,121,32,115,116,97,114,116,101,100,32,97,116,32,101,
                    118,101,114,121,32,104,111,115,116,32,119,104,101,114,101,
                    32,97,110,32,69,114,108,97,110,103,32,110,111,100,101,32,
                    105,115,32,115,116,97,114,116,101,100,46,32,73,116,32,105,
                    115,32,114,101,115,112,111,110,115,105,98,108,101,32,102,
                    111,114,32,109,97,112,112,105,110,103,32,116,104,101,32,
                    115,121,109,98,111,108,105,99,32,110,111,100,101,32,110,
                    97,109,101,115,32,116,111,32,109,97,99,104,105,110,101,32,
                    97,100,100,114,101,115,115,101,115,46,32,83,101,101,32,
                    116,104,101]}],
                 0,false},
                {text,
                 [17,91,101,112,109,100,40,49,41,93,40,46,47,101,112,109,100,
                  41]},
                {sep,
                 [{text,
                   [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                    69,82,84,83,46]}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[15,35,35,32,72,105,100,100,101,110,32,78,111,100,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "Ã·In a distributed Erlang system, it is sometimes useful to connect to a node without also connecting to all other nodes. An example is some kind of O&M functionality used to inspect the status of a system, without disturbing it. For this purpose, a"}],
                0,false},
               {text,
                [15,42,42,104,105,100,100,101,110,32,110,111,100,101,42,42]},
               {sep,[{text,"\fcan be used."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ":A hidden node is a node started with the command-line flag"}],
                0,false},
               {text,"\t*-hidden*"},
               {sep,
                [{text,
                  "Â«. Connections between hidden nodes and other nodes are not transitive, they must be set up explicitly. Also, hidden nodes does not show up in the list of nodes returned by"}],
                0,false},
               {text,"\t*nodes()*"},
               {sep,[{text,"\n. Instead,"}],0,false},
               {text,
                [15,42,110,111,100,101,115,40,104,105,100,100,101,110,41,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [18,42,110,111,100,101,115,40,99,111,110,110,101,99,116,101,
                 100,41,42]},
               {sep,
                [{text,
                  "amust be used. This means, for example, that the hidden node is not added to the set of nodes that"}],
                0,false},
               {text,"\b*global*"},
               {sep,
                [{text,
                  [20,105,115,32,107,101,101,112,105,110,103,32,116,114,97,99,
                   107,32,111,102,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,",This feature was added in Erlang 5.0/OTP R7."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\n## C Nodes"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[1,65]}],0,false},
              {text,"\n**C node**"},
              {sep,
               [{text,
                 "Zis a C program written to act as a hidden node in a distributed Erlang system. The library"}],
               0,false},
              {text,
               [17,42,42,69,114,108,95,73,110,116,101,114,102,97,99,101,42,
                42]},
              {sep,
               [{text,
                 "Pcontains functions for this purpose. For more information about C nodes, see the"}],
               0,false},
              {text,"![Erl_Interface](./ei_users_guide)"},
              {sep,
               [{text,
                 [15,97,112,112,108,105,99,97,116,105,111,110,32,97,110,100]}],
               0,false},
              {text,
               "T[Interoperability Tutorial.](../doc/tutorial/introduction#interoperability tutorial)"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v## Security"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ÃAuthentication determines which nodes are allowed to communicate with each other. In a network of different Erlang nodes, it is built into the system at the lowest possible level. Each node has its own"}],
              0,false},
             {text,
              [16,42,42,109,97,103,105,99,32,99,111,111,107,105,101,42,42]},
             {sep,
              [{text,
                [26,44,32,119,104,105,99,104,32,105,115,32,97,110,32,69,114,
                 108,97,110,103,32,97,116,111,109,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [142,87,104,101,110,32,97,32,110,111,100,101,32,116,114,105,101,
               115,32,116,111,32,99,111,110,110,101,99,116,32,116,111,32,97,
               110,111,116,104,101,114,32,110,111,100,101,44,32,116,104,101,
               32,109,97,103,105,99,32,99,111,111,107,105,101,115,32,97,114,
               101,32,99,111,109,112,97,114,101,100,46,32,73,102,32,116,104,
               101,121,32,100,111,32,110,111,116,32,109,97,116,99,104,44,32,
               116,104,101,32,99,111,110,110,101,99,116,101,100,32,110,111,
               100,101,32,114,101,106,101,99,116,115,32,116,104,101,32,99,111,
               110,110,101,99,116,105,111,110,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "qAt start-up, a node has a random atom assigned as its magic cookie and the cookie of other nodes is assumed to be"}],
              0,false},
             {text,"\n*nocookie*"},
             {sep,
              [{text,
                "@. The first action of the Erlang network authentication server ("}],
              0,false},
             {text,[6,42,97,117,116,104,42]},
             {sep,
              [{text,
                [30,41,32,105,115,32,116,104,101,110,32,116,111,32,114,101,97,
                 100,32,97,32,102,105,108,101,32,110,97,109,101,100]}],
              0,false},
             {text,
              [22,42,36,72,79,77,69,47,46,101,114,108,97,110,103,46,99,111,
               111,107,105,101,42]},
             {sep,
              [{text,
                "Â¨. If the file does not exist, it is created. The UNIX permissions mode of the file is set to octal 400 (read-only by user) and its contents are a random string. An atom"}],
              0,false},
             {text,"\b*Cookie*"},
             {sep,
              [{text,
                "^is created from the contents of the file and the cookie of the local node is set to this using"}],
              0,false},
             {text,"#*erlang:set_cookie(node(), Cookie)*"},
             {sep,
              [{text,
                "Q. This also makes the local node assume that all other nodes have the same cookie"}],
              0,false},
             {text,"\b*Cookie*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [289,84,104,117,115,44,32,103,114,111,117,112,115,32,111,102,32,
               117,115,101,114,115,32,119,105,116,104,32,105,100,101,110,116,
               105,99,97,108,32,99,111,111,107,105,101,32,102,105,108,101,115,
               32,103,101,116,32,69,114,108,97,110,103,32,110,111,100,101,115,
               32,116,104,97,116,32,99,97,110,32,99,111,109,109,117,110,105,
               99,97,116,101,32,102,114,101,101,108,121,32,97,110,100,32,119,
               105,116,104,111,117,116,32,105,110,116,101,114,102,101,114,101,
               110,99,101,32,102,114,111,109,32,116,104,101,32,109,97,103,105,
               99,32,99,111,111,107,105,101,32,115,121,115,116,101,109,46,32,
               85,115,101,114,115,32,119,104,111,32,119,97,110,116,32,116,111,
               32,114,117,110,32,110,111,100,101,115,32,111,110,32,115,101,
               112,97,114,97,116,101,32,102,105,108,101,32,115,121,115,116,
               101,109,115,32,109,117,115,116,32,109,97,107,101,32,99,101,114,
               116,97,105,110,32,116,104,97,116,32,116,104,101,105,114,32,99,
               111,111,107,105,101,32,102,105,108,101,115,32,97,114,101,32,
               105,100,101,110,116,105,99,97,108,32,111,110,32,116,104,101,32,
               100,105,102,102,101,114,101,110,116,32,102,105,108,101,32,115,
               121,115,116,101,109,115,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nFor a node"}],0,false},
             {text,[7,42,78,111,100,101,49,42]},
             {sep,
              [{text,
                [17,119,105,116,104,32,109,97,103,105,99,32,99,111,111,107,
                 105,101]}],
              0,false},
             {text,"\b*Cookie*"},
             {sep,
              [{text,
                "Cto be able to connect to, or accept a connection from, another node"}],
              0,false},
             {text,[7,42,78,111,100,101,50,42]},
             {sep,
              [{text,
                [23,119,105,116,104,32,97,32,100,105,102,102,101,114,101,110,
                 116,32,99,111,111,107,105,101]}],
              0,false},
             {text,"\f*DiffCookie*"},
             {sep,
              [{text,
                [14,44,32,116,104,101,32,102,117,110,99,116,105,111,110]}],
              0,false},
             {text,"&*erlang:set_cookie(Node2, DiffCookie)*"},
             {sep,
              [{text,
                [23,109,117,115,116,32,102,105,114,115,116,32,98,101,32,99,97,
                 108,108,101,100,32,97,116]}],
              0,false},
             {text,[7,42,78,111,100,101,49,42]},
             {sep,
              [{text,
                "H. Distributed systems with multiple user IDs can be handled in this way."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [277,84,104,101,32,100,101,102,97,117,108,116,32,119,104,101,
                 110,32,97,32,99,111,110,110,101,99,116,105,111,110,32,105,
                 115,32,101,115,116,97,98,108,105,115,104,101,100,32,98,101,
                 116,119,101,101,110,32,116,119,111,32,110,111,100,101,115,44,
                 32,105,115,32,116,111,32,105,109,109,101,100,105,97,116,101,
                 108,121,32,99,111,110,110,101,99,116,32,97,108,108,32,111,
                 116,104,101,114,32,118,105,115,105,98,108,101,32,110,111,100,
                 101,115,32,97,115,32,119,101,108,108,46,32,84,104,105,115,32,
                 119,97,121,44,32,116,104,101,114,101,32,105,115,32,97,108,
                 119,97,121,115,32,97,32,102,117,108,108,121,32,99,111,110,
                 110,101,99,116,101,100,32,110,101,116,119,111,114,107,46,32,
                 73,102,32,116,104,101,114,101,32,97,114,101,32,110,111,100,
                 101,115,32,119,105,116,104,32,100,105,102,102,101,114,101,
                 110,116,32,99,111,111,107,105,101,115,44,32,116,104,105,115,
                 32,109,101,116,104,111,100,32,99,97,110,32,98,101,32,105,110,
                 97,112,112,114,111,112,114,105,97,116,101,32,97,110,100,32,
                 116,104,101,32,99,111,109,109,97,110,100,45,108,105,110,101,
                 32,102,108,97,103]}],
              0,false},
             {text,
              [20,42,45,99,111,110,110,101,99,116,95,97,108,108,32,102,97,108,
               115,101,42]},
             {sep,
              [{text,
                [20,109,117,115,116,32,98,101,32,115,101,116,44,32,115,101,
                 101,32,116,104,101]}],
              0,false},
             {text,[15,91,101,114,108,40,49,41,93,40,46,47,101,114,108,41]},
             {sep,
              [{text,
                [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,69,
                 82,84,83,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ":The magic cookie of the local node is retrieved by calling"}],
              0,false},
             {text,
              [21,42,101,114,108,97,110,103,58,103,101,116,95,99,111,111,107,
               105,101,40,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [20,35,35,32,68,105,115,116,114,105,98,117,116,105,111,110,32,66,73,
          70,115]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "KSome useful BIFs for distributed programming (for more information, see the"}],
             0,false},
            {text,
             [21,91,101,114,108,97,110,103,40,51,41,93,40,46,47,101,114,108,
              97,110,103,41]},
            {sep,
             [{text,
               [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,69,
                82,84,83,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,"\vTODO: TABLE"}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\"## Distribution Command-Line Flags"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "^Examples of command-line flags used for distributed programming (for more information, see the"}],
            0,false},
           {text,[15,91,101,114,108,40,49,41,93,40,46,47,101,114,108,41]},
           {sep,
            [{text,
              [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,69,82,
               84,83,58]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {text,"\vTODO: TABLE"}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [23,35,35,32,68,105,115,116,114,105,98,117,116,105,111,110,32,77,111,
        100,117,108,101,115]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"7Examples of modules useful for distributed programming:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [26,73,110,32,116,104,101,32,75,101,114,110,101,108,32,97,112,112,
            108,105,99,97,116,105,111,110,58]}],
         0,false}],
       0,true},
      null},
     null}},
   {text,"\vTODO: TABLE"},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [26,73,110,32,116,104,101,32,83,84,68,76,73,66,32,97,112,112,108,
            105,99,97,116,105,111,110,58]}],
         0,false}],
       0,true},
      null},
     null}},
   {text,"\vTODO: TABLE"}],
  0,false}}
