{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,{above,{text,[0]},null},null},
           {above,{above,{text,"\t# Records"},null},null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [313,65,32,114,101,99,111,114,100,32,105,115,32,97,32,100,
                     97,116,97,32,115,116,114,117,99,116,117,114,101,32,102,
                     111,114,32,115,116,111,114,105,110,103,32,97,32,102,105,
                     120,101,100,32,110,117,109,98,101,114,32,111,102,32,101,
                     108,101,109,101,110,116,115,46,32,73,116,32,104,97,115,
                     32,110,97,109,101,100,32,102,105,101,108,100,115,32,97,
                     110,100,32,105,115,32,115,105,109,105,108,97,114,32,116,
                     111,32,97,32,115,116,114,117,99,116,32,105,110,32,67,46,
                     32,82,101,99,111,114,100,32,101,120,112,114,101,115,115,
                     105,111,110,115,32,97,114,101,32,116,114,97,110,115,108,
                     97,116,101,100,32,116,111,32,116,117,112,108,101,32,101,
                     120,112,114,101,115,115,105,111,110,115,32,100,117,114,
                     105,110,103,32,99,111,109,112,105,108,97,116,105,111,110,
                     46,32,84,104,101,114,101,102,111,114,101,44,32,114,101,
                     99,111,114,100,32,101,120,112,114,101,115,115,105,111,
                     110,115,32,97,114,101,32,110,111,116,32,117,110,100,101,
                     114,115,116,111,111,100,32,98,121,32,116,104,101,32,115,
                     104,101,108,108,32,117,110,108,101,115,115,32,115,112,
                     101,99,105,97,108,32,97,99,116,105,111,110,115,32,97,114,
                     101,32,116,97,107,101,110,46,32,70,111,114,32,100,101,
                     116,97,105,108,115,44,32,115,101,101,32,116,104,101]}],
                  0,false},
                 {text,
                  [19,91,115,104,101,108,108,40,51,41,93,40,46,47,115,104,101,
                   108,108,41]},
                 {sep,
                  [{text,
                    [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                     83,84,68,76,73,66,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [29,77,111,114,101,32,101,120,97,109,112,108,101,115,32,97,
                    114,101,32,112,114,111,118,105,100,101,100,32,105,110]}],
                 0,false},
                {text,"![Programming Examples](./records)"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [19,35,35,32,68,101,102,105,110,105,110,103,32,82,101,99,111,
               114,100,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "ÜA record definition consists of the name of the record, followed by the field names of the record. Record and field names must be atoms. Each field can be given an optional default value. If no default value is supplied,"}],
                  0,false},
                 {text,"\v*undefined*"},
                 {sep,[{text,"\bis used."}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "Y\n-record(Name, {Field1 [= Value1],\n               ...\n               FieldN [= ValueN]})."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "£A record definition can be placed anywhere among the attributes and function declarations of a module, but the definition must come before any usage of the record."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "rIf a record is used in several modules, it is recommended that the record definition is placed in an include file."}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [19,35,35,32,67,114,101,97,116,105,110,103,32,82,101,99,111,114,
              100,115]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,"&The following expression creates a new"}],
                 0,false},
                {text,[6,42,78,97,109,101,42]},
                {sep,[{text,"$record where the value of each field"}],0,false},
                {text,"\b*FieldI*"},
                {sep,
                 [{text,
                   "7is the value of evaluating the corresponding expression"}],
                 0,false},
                {text,[7,42,69,120,112,114,73,42]},
                {sep,[{text,[1,58]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,[{text,"%\n#Name{Field1=Expr1,...,FieldK=ExprK}"}],0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "±The fields can be in any order, not necessarily the same order as in the record definition, and fields can be omitted. Omitted fields get their respective default value instead."}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "\\If several fields are to be assigned the same value, the following construction can be used:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,".\n#Name{Field1=Expr1,...,FieldK=ExprK, _=ExprL}"}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,"/Omitted fields then get the value of evaluating"}],
                 0,false},
                {text,[7,42,69,120,112,114,76,42]},
                {sep,
                 [{text,
                   [133,105,110,115,116,101,97,100,32,111,102,32,116,104,101,
                    105,114,32,100,101,102,97,117,108,116,32,118,97,108,117,
                    101,115,46,32,84,104,105,115,32,102,101,97,116,117,114,
                    101,32,105,115,32,112,114,105,109,97,114,105,108,121,32,
                    105,110,116,101,110,100,101,100,32,116,111,32,98,101,32,
                    117,115,101,100,32,116,111,32,99,114,101,97,116,101,32,
                    112,97,116,116,101,114,110,115,32,102,111,114,32,69,84,83,
                    32,97,110,100,32,77,110,101,115,105,97,32,109,97,116,99,
                    104,32,102,117,110,99,116,105,111,110,115,46]}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 "z\n-record(person, {name, phone, address}).\n\n...\n\nlookup(Name, Tab) ->\n    ets:match_object(Tab, #person{name=Name, _='_'})."}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [26,35,35,32,65,99,99,101,115,115,105,110,103,32,82,101,99,111,
             114,100,32,70,105,101,108,100,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [16,10,69,120,112,114,35,78,97,109,101,46,70,105,101,108,
                 100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,")Returns the value of the specified field."}],
                0,false},
               {text,[6,42,69,120,112,114,42]},
               {sep,
                [{text,
                  [19,105,115,32,116,111,32,101,118,97,108,117,97,116,101,32,
                   116,111,32,97]}],
                0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,[{text,[7,114,101,99,111,114,100,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "oThe following expression returns the position of the specified field in the tuple representation of the record:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"\f\n#Name.Field"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "t\n-record(person, {name, phone, address}).\n\n...\n\nlookup(Name, List) ->\n    lists:keysearch(Name, #person.name, List)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [19,35,35,32,85,112,100,97,116,105,110,103,32,82,101,99,111,114,
            100,115]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,")\nExpr#Name{Field1=Expr1,...,FieldK=ExprK}"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,[6,42,69,120,112,114,42]},
              {sep,
               [{text,
                 [19,105,115,32,116,111,32,101,118,97,108,117,97,116,101,32,
                  116,111,32,97]}],
               0,false},
              {text,[6,42,78,97,109,101,42]},
              {sep,
               [{text,
                 "Qrecord. A copy of this record is returned, with the value of each specified field"}],
               0,false},
              {text,"\b*FieldI*"},
              {sep,
               [{text,
                 "?changed to the value of evaluating the corresponding expression"}],
               0,false},
              {text,[7,42,69,120,112,114,73,42]},
              {sep,
               [{text,"+. All other fields retain their old values."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       null],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [20,35,35,32,82,101,99,111,114,100,115,32,105,110,32,71,117,97,114,
           100,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "èSince record expressions are expanded to tuple expressions, creating records and accessing record fields are allowed in guards. However all subexpressions, for example, for field initiations, must be valid guard expressions as well."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "z\nhandle(Msg, State) when Msg==#msg{to=void, no=3} ->\n    ...\n\nhandle(Msg, State) when State#state.running==true ->\n    ..."}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,84,104,101,114,101,32,105,115,32,97,108,115,111,32,97,32,
                 116,121,112,101,32,116,101,115,116,32,66,73,70]}],
              0,false},
             {text,
              [28,42,105,115,95,114,101,99,111,114,100,40,84,101,114,109,44,
               32,82,101,99,111,114,100,84,97,103,41,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "P\nis_person(P) when is_record(P, person) ->\n    true;\nis_person(_P) ->\n    false."}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [22,35,35,32,82,101,99,111,114,100,115,32,105,110,32,80,97,116,116,
          101,114,110,115]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ZA pattern that matches a certain record is created in the same way as a record is created:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"%\n#Name{Field1=Expr1,...,FieldK=ExprK}"}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [28,73,110,32,116,104,105,115,32,99,97,115,101,44,32,111,110,
                101,32,111,114,32,109,111,114,101,32,111,102]}],
             0,false},
            {text,[7,42,69,120,112,114,49,42]},
            {sep,[{text,[3,46,46,46]}],0,false},
            {text,[7,42,69,120,112,114,75,42]},
            {sep,
             [{text,
               [25,99,97,110,32,98,101,32,117,110,98,111,117,110,100,32,118,
                97,114,105,97,98,108,101,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [17,35,35,32,78,101,115,116,101,100,32,82,101,99,111,114,100,115]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [141,66,101,103,105,110,110,105,110,103,32,119,105,116,104,32,69,
             114,108,97,110,103,47,79,84,80,32,82,49,52,44,32,112,97,114,101,
             110,116,104,101,115,101,115,32,119,104,101,110,32,97,99,99,101,
             115,115,105,110,103,32,111,114,32,117,112,100,97,116,105,110,103,
             32,110,101,115,116,101,100,32,114,101,99,111,114,100,115,32,99,
             97,110,32,98,101,32,111,109,105,116,116,101,100,46,32,65,115,115,
             117,109,101,32,116,104,101,32,102,111,108,108,111,119,105,110,
             103,32,114,101,99,111,114,100,32,100,101,102,105,110,105,116,105,
             111,110,115,58]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "¡\n-record(nrec0, {name = \"nested0\"}).\n-record(nrec1, {name = \"nested1\", nrec0=#nrec0{}}).\n-record(nrec2, {name = \"nested2\", nrec1=#nrec1{}}).\n\nN2 = #nrec2{},\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"/Before R14, parentheses were needed as follows:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "{\n\"nested0\" = ((N2#nrec2.nrec1)#nrec1.nrec0)#nrec0.name,\nN0n = ((N2#nrec2.nrec1)#nrec1.nrec0)#nrec0{name = \"nested0a\"},\n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"-Since R14, the following can also be written:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "n\n\"nested0\" = N2#nrec2.nrec1#nrec1.nrec0#nrec0.name,\nN0n = N2#nrec2.nrec1#nrec1.nrec0#nrec0{name = \"nested0a\"},"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"%## Internal Representation of Records"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "_Record expressions are translated to tuple expressions during compilation. A record defined as:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,[{text,"$\n-record(Name, {Field1,...,FieldN})."}],0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'is internally represented by the tuple:"}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           [25,10,123,78,97,109,101,44,86,97,108,117,101,49,44,46,46,46,44,86,
            97,108,117,101,78,125]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\tHere each"}],0,false},
          {text,"\b*ValueI*"},
          {sep,
           [{text,
             [24,105,115,32,116,104,101,32,100,101,102,97,117,108,116,32,118,
              97,108,117,101,32,102,111,114]}],
           0,false},
          {text,"\b*FieldI*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "pTo each module using records, a pseudo function is added during compilation to obtain information about records:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "I\nrecord_info(fields, Record) -> [Field]\nrecord_info(size, Record) -> Size"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[6,42,83,105,122,101,42]},
          {sep,
           [{text,
             "Uis the size of the tuple representation, that is, one more than the number of fields."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\fIn addition,"}],0,false},
          {text,[14,42,35,82,101,99,111,114,100,46,78,97,109,101,42]},
          {sep,
           [{text,"0returns the index in the tuple representation of"}],
           0,false},
          {text,[6,42,78,97,109,101,42]},
          {sep,[{text,"\rof the record"}],0,false},
          {text,"\b*Record*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[6,42,78,97,109,101,42]},
          {sep,
           [{text,
             [16,109,117,115,116,32,98,101,32,97,110,32,97,116,111,109,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
