{sep,
 [{above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {text,
      [25,35,32,69,114,108,97,110,103,32,82,101,102,101,114,101,110,99,101,32,
       77,97,110,117,97,108]},
     null},
    null}},
  null,
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {text,
      [25,35,32,69,114,108,97,110,103,32,82,101,102,101,114,101,110,99,101,32,
       77,97,110,117,97,108]},
     null},
    null}},
  null,
  {sep,
   [{sep,
     [{text,"1<a name=\"erlang ref manual\">erlang ref manual</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ZThis section is the Erlang reference manual. It describes the Erlang programming language."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\f#### Purpose"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [294,84,104,101,32,102,111,99,117,115,32,111,102,32,116,104,
                 101,32,69,114,108,97,110,103,32,114,101,102,101,114,101,110,
                 99,101,32,109,97,110,117,97,108,32,105,115,32,111,110,32,116,
                 104,101,32,108,97,110,103,117,97,103,101,32,105,116,115,101,
                 108,102,44,32,110,111,116,32,116,104,101,32,105,109,112,108,
                 101,109,101,110,116,97,116,105,111,110,32,111,102,32,105,116,
                 46,32,84,104,101,32,108,97,110,103,117,97,103,101,32,99,111,
                 110,115,116,114,117,99,116,115,32,97,114,101,32,100,101,115,
                 99,114,105,98,101,100,32,105,110,32,116,101,120,116,32,97,
                 110,100,32,119,105,116,104,32,101,120,97,109,112,108,101,115,
                 32,114,97,116,104,101,114,32,116,104,97,110,32,102,111,114,
                 109,97,108,108,121,32,115,112,101,99,105,102,105,101,100,46,
                 32,84,104,105,115,32,105,115,32,116,111,32,109,97,107,101,32,
                 116,104,101,32,109,97,110,117,97,108,32,109,111,114,101,32,
                 114,101,97,100,97,98,108,101,46,32,84,104,101,32,69,114,108,
                 97,110,103,32,114,101,102,101,114,101,110,99,101,32,109,97,
                 110,117,97,108,32,105,115,32,110,111,116,32,105,110,116,101,
                 110,100,101,100,32,97,115,32,97,32,116,117,116,111,114,105,
                 97,108,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "XInformation about implementation of Erlang can, for example, be found, in the following:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,"([System Principles](./system_principles)"}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "2Starting and stopping, boot scripts, code loading,"}],
                      0,false},
                     {text,
                      [26,91,108,111,103,103,105,110,103,93,40,46,47,101,114,
                       114,111,114,95,108,111,103,103,105,110,103,41]},
                     {sep,[{text,[1,44]}],0,false},
                     {text,"*[creating target systems](./create_target)"}],
                    0,false}],
                  0,true},
                 null},
                null}}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      [30,91,69,102,102,105,99,105,101,110,99,121,32,71,117,
                       105,100,101,93,40,46,47,97,100,118,97,110,99,101,100,
                       41]}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,"!Memory consumption, system limits"}],
                    0,false}],
                  0,true},
                 null},
                null}}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [17,69,82,84,83,32,85,115,101,114,39,115,32,71,117,105,
                      100,101]}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,"\e[Crash dumps](./crash_dump)"},
                    {sep,[{text,[1,44]}],0,false},
                    {text,
                     [19,91,100,114,105,118,101,114,115,93,40,46,47,100,114,
                      105,118,101,114,41]}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}],
          0,false}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [18,35,35,35,35,32,80,114,101,114,101,113,117,105,115,105,116,101,
             115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [137,73,116,32,105,115,32,97,115,115,117,109,101,100,32,116,
                 104,97,116,32,116,104,101,32,114,101,97,100,101,114,32,104,
                 97,115,32,100,111,110,101,32,115,111,109,101,32,112,114,111,
                 103,114,97,109,109,105,110,103,32,97,110,100,32,105,115,32,
                 102,97,109,105,108,105,97,114,32,119,105,116,104,32,99,111,
                 110,99,101,112,116,115,32,115,117,99,104,32,97,115,32,100,97,
                 116,97,32,116,121,112,101,115,32,97,110,100,32,112,114,111,
                 103,114,97,109,109,105,110,103,32,108,97,110,103,117,97,103,
                 101,32,115,121,110,116,97,120,46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [25,35,35,35,35,32,68,111,99,117,109,101,110,116,32,67,111,110,
             118,101,110,116,105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"3In this section, the following terminology is used:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,[1,65]}],0,false},
             {text,"\f**sequence**"},
             {sep,
              [{text,
                [142,105,115,32,111,110,101,32,111,114,32,109,111,114,101,32,
                 105,116,101,109,115,46,32,70,111,114,32,101,120,97,109,112,
                 108,101,44,32,97,32,99,108,97,117,115,101,32,98,111,100,121,
                 32,99,111,110,115,105,115,116,115,32,111,102,32,97,32,115,
                 101,113,117,101,110,99,101,32,111,102,32,101,120,112,114,101,
                 115,115,105,111,110,115,46,32,84,104,105,115,32,109,101,97,
                 110,115,32,116,104,97,116,32,116,104,101,114,101,32,109,117,
                 115,116,32,98,101,32,97,116,32,108,101,97,115,116,32,111,110,
                 101,32,101,120,112,114,101,115,115,105,111,110,46]}],
              0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,[1,65]}],0,false},
             {text,"\b**list**"},
             {sep,
              [{text,
                "bis any number of items. For example, an argument list can consist of zero, one, or more arguments."}],
              0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "LIf a feature has been added in R13A or later, this is mentioned in the text."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [26,35,35,35,35,32,67,111,109,112,108,101,116,101,32,76,105,115,
             116,32,111,102,32,66,73,70,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "CFor a complete list of BIFs, their arguments and return values, see"}],
                0,false},
               {text,
                [21,91,101,114,108,97,110,103,40,51,41,93,40,46,47,101,114,
                 108,97,110,103,41]},
               {sep,
                [{text,
                  [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,82,101,115,101,114,118,101,100,32,87,111,114,
             100,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"+The following are reserved words in Erlang:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [129,42,97,102,116,101,114,32,97,110,100,32,97,110,100,97,108,
                 115,111,32,98,97,110,100,32,98,101,103,105,110,32,98,110,111,
                 116,32,98,111,114,32,98,115,108,32,98,115,114,32,98,120,111,
                 114,32,99,97,115,101,32,99,97,116,99,104,32,99,111,110,100,
                 32,100,105,118,32,101,110,100,32,102,117,110,32,105,102,32,
                 108,101,116,32,110,111,116,32,111,102,32,111,114,32,111,114,
                 101,108,115,101,32,114,101,99,101,105,118,101,32,114,101,109,
                 32,116,114,121,32,119,104,101,110,32,120,111,114,42]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [18,35,35,35,35,32,67,104,97,114,97,99,116,101,114,32,83,101,116]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [131,84,104,101,32,115,121,110,116,97,120,32,111,102,32,69,
                 114,108,97,110,103,32,116,111,107,101,110,115,32,97,108,108,
                 111,119,32,116,104,101,32,117,115,101,32,111,102,32,116,104,
                 101,32,102,117,108,108,32,73,83,79,45,56,56,53,57,45,49,32,
                 40,76,97,116,105,110,45,49,41,32,99,104,97,114,97,99,116,101,
                 114,32,115,101,116,46,32,84,104,105,115,32,105,115,32,110,
                 111,116,105,99,101,97,98,108,101,32,105,110,32,116,104,101,
                 32,102,111,108,108,111,119,105,110,103,32,119,97,121,115,
                 58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "gAll the Latin-1 printable characters can be used and are shown without the escape backslash convention."}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"0Atoms and variables can use all Latin-1 letters."}],
            0,false}],
          0,false}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÎIn Erlang/OTP R16B the syntax of Erlang tokens was extended to handle Unicode. The support was limited to string literals and comments. More about the usage of Unicode in Erlang source files can be found in"}],
                0,false},
               {text,
                "B[STDLIB's User's Guide](../stdlib/unicode_usage#unicode_in_erlang)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÙFrom Erlang/OTP 20, atoms and function names are also allowed to contain Unicode characters outside the ISO-Latin-1 range. Module names, application names, and node names are still restricted to the ISO-Latin-1 range."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [25,35,35,35,35,32,83,111,117,114,99,101,32,70,105,108,101,32,69,
             110,99,111,100,105,110,103]},
           null},
          null}},
        {text,
         [31,60,97,32,110,97,109,101,61,34,101,110,99,111,100,105,110,103,34,
          62,101,110,99,111,100,105,110,103,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [22,84,104,101,32,69,114,108,97,110,103,32,115,111,117,114,
                   99,101,32,102,105,108,101]}],
                0,false},
               {text,"\n*encoding*"},
               {sep,
                [{text,
                  [127,105,115,32,115,101,108,101,99,116,101,100,32,98,121,32,
                   97,32,99,111,109,109,101,110,116,32,105,110,32,111,110,101,
                   32,111,102,32,116,104,101,32,102,105,114,115,116,32,116,
                   119,111,32,108,105,110,101,115,32,111,102,32,116,104,101,
                   32,115,111,117,114,99,101,32,102,105,108,101,46,32,84,104,
                   101,32,102,105,114,115,116,32,115,116,114,105,110,103,32,
                   116,104,97,116,32,109,97,116,99,104,101,115,32,116,104,101,
                   32,114,101,103,117,108,97,114,32,101,120,112,114,101,115,
                   115,105,111,110]}],
                0,false},
               {text,"!*coding\\s*[:=]\\s*([-a-zA-Z0-9])+*"},
               {sep,
                [{text,
                  "kselects the encoding. If the matching string is an invalid encoding, it is ignored. The valid encodings are"}],
                0,false},
               {text,"\t*Latin-1*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[7,42,85,84,70,45,56,42]},
               {sep,
                [{text,
                  "8, where the case of the characters can be chosen freely."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "8The following example selects UTF-8 as default encoding:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [17,10,37,37,32,99,111,100,105,110,103,58,32,117,116,102,45,
                 56]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                ">Two more examples, both selecting Latin-1 as default encoding:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"3\n%% For this file we have chosen encoding = Latin-1"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"\e\n%% -*- coding: latin-1 -*-"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "dThe default encoding for Erlang source files is changed from Latin-1 to UTF-8 since Erlang/OTP 17.0."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "IErlang provides a number of data types, which are listed in this section."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\n#### Terms"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,",A piece of data of any data type is called a"}],
                0,false},
               {text,"\b**term**"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\v#### Number"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(There are two types of numeric literals,"}],
                0,false},
               {text,"\f**integers**"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\n**floats**"},
               {sep,
                [{text,
                  "M. Besides the conventional notation, there are two Erlang-specific notations:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[3,42,36,42]},
             {sep,
              [{text,[2,42,42]},
               {text,[6,42,99,104,97,114,42]},
               {text,[2,42,42]}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,"2ASCII value or unicode code-point of the character"}],
              0,false},
             {sep,
              [{text,[2,42,42]},
               {text,[6,42,99,104,97,114,42]},
               {text,[2,42,42]}],
              0,false},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,[2,42,42]},
               {text,[6,42,98,97,115,101,42]},
               {text,[2,42,42]}],
              0,false},
             {text,[3,42,35,42]},
             {sep,
              [{text,[2,42,42]},
               {text,[7,42,118,97,108,117,101,42]},
               {text,[2,42,42]}],
              0,false},
             {above,{above,null,null},null},
             {sep,
              [{text,
                [21,73,110,116,101,103,101,114,32,119,105,116,104,32,116,104,
                 101,32,98,97,115,101]}],
              0,false},
             {sep,
              [{text,[2,42,42]},
               {text,[6,42,98,97,115,101,42]},
               {text,[2,42,42]}],
              0,false},
             {sep,
              [{text,"-, that must be an integer in the range 2..36."}],
              0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,[3,52,50,46]},
               {text,[7,10,52,50,10,50,62,32]},
               {text,[3,36,65,46]},
               {text,[7,10,54,53,10,51,62,32]},
               {text,[4,36,92,110,46]},
               {text,[7,10,49,48,10,52,62,32]},
               {text,[6,50,35,49,48,49,46]},
               {text,[6,10,53,10,53,62,32]},
               {text,[6,49,54,35,49,102,46]},
               {text,[7,10,51,49,10,54,62,32]},
               {text,[4,50,46,51,46]},
               {text,"\b\n2.3\n7> "},
               {text,[6,50,46,51,101,51,46]},
               {text,"\n\n2.3e3\n8> "},
               {text,[7,50,46,51,101,45,51,46]},
               {text,[7,10,48,46,48,48,50,51]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\t#### Atom"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ßAn atom is a literal, a constant with name. An atom is to be enclosed in single quotes (') if it does not begin with a lower-case letter or if it contains other characters than alphanumeric characters, underscore (_), or @."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"+\nhello\nphone_number\n'Monday'\n'phone number'"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [29,35,35,35,35,32,66,105,116,32,83,116,114,105,110,103,115,32,97,
             110,100,32,66,105,110,97,114,105,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "8A bit string is used to store an area of untyped memory."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#Bit strings are expressed using the"}],0,false},
               {text,"&[bit syntax](./expressions#bit_syntax)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "[Bit strings that consist of a number of bits that are evenly divisible by eight, are called"}],
                0,false},
               {text,"\f**binaries**"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,"\n<<10,20>>."},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\f<10,20>>\n2> "},
               {text,"\n<<\"ABC\">>."},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\f<\"ABC\">>\n1> "},
               {text,"\f<<1:1,0:1>>."},
               {text,[1,10]},
               {text,[1,60]},
               {text,[6,60,50,58,50,62,62]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [22,70,111,114,32,109,111,114,101,32,101,120,97,109,112,108,
                   101,115,44,32,115,101,101]}],
                0,false},
               {text,"$[Programming Examples](./bit_syntax)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[14,35,35,35,35,32,82,101,102,101,114,101,110,99,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "TA reference is a term that is unique in an Erlang runtime system, created by calling"}],
                0,false},
               {text,"\f*make_ref/0*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\b#### Fun"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "£A fun is a functional object. Funs make it possible to create an anonymous function and pass the function itself -- not its name -- as argument to other functions."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [26,70,117,110,49,32,61,32,102,117,110,32,40,88,41,32,45,62,
                 32,88,43,49,32,101,110,100,46]},
               {text,[5,10,35,70,117,110]},
               {text,
                [20,60,101,114,108,95,101,118,97,108,46,54,46,51,57,48,55,52,
                 53,52,54]},
               {text,[5,62,10,50,62,32]},
               {text,"\bFun1(2)."},
               {text,[2,10,51]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,82,101,97,100,32,109,111,114,101,32,97,98,111,117,116,
                   32,102,117,110,115,32,105,110]}],
                0,false},
               {text,"%[Fun Expressions](./expressions#funs)"},
               {sep,
                [{text,
                  [24,46,32,70,111,114,32,109,111,114,101,32,101,120,97,109,
                   112,108,101,115,44,32,115,101,101]}],
                0,false},
               {text,
                [30,91,80,114,111,103,114,97,109,109,105,110,103,32,69,120,97,
                 109,112,108,101,115,93,40,46,47,102,117,110,115,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [20,35,35,35,35,32,80,111,114,116,32,73,100,101,110,116,105,102,
             105,101,114]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,",A port identifier identifies an Erlang port."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\r*open_port/2*"},
               {sep,
                [{text,
                  "C, which is used to create ports, returns a value of this data type."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,82,101,97,100,32,109,111,114,101,32,97,98,111,117,116,
                   32,112,111,114,116,115,32,105,110]}],
                0,false},
               {text,
                [31,91,80,111,114,116,115,32,97,110,100,32,80,111,114,116,32,
                 68,114,105,118,101,114,115,93,40,112,111,114,116,115,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\b#### Pid"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"0A process identifier, pid, identifies a process."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "XThe following BIFs, which are used to create processes, return values of this data type:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {text,[15,42,115,112,97,119,110,47,49,44,50,44,51,44,52,42]}],
           0,false},
          {sep,
           [{text,[1,42]},
            {text,
             [20,42,115,112,97,119,110,95,108,105,110,107,47,49,44,50,44,51,
              44,52,42]}],
           0,false}},
         {sep,[{text,[1,42]},{text,"\r*spawn_opt/4*"}],0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [16,115,112,97,119,110,40,109,44,32,102,44,32,91,93,41,46]},
               {text,[1,10]},
               {text,"\b<0.51.0>"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"!In the following example, the BIF"}],0,false},
               {text,"\b*self()*"},
               {sep,
                [{text,"'returns the pid of the calling process:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [156,10,45,109,111,100,117,108,101,40,109,41,46,10,45,101,120,
                 112,111,114,116,40,91,108,111,111,112,47,48,93,41,46,10,10,
                 108,111,111,112,40,41,32,45,62,10,32,32,32,32,114,101,99,101,
                 105,118,101,10,32,32,32,32,32,32,32,32,119,104,111,95,97,114,
                 101,95,121,111,117,32,45,62,10,32,32,32,32,32,32,32,32,32,32,
                 32,32,105,111,58,102,111,114,109,97,116,40,34,73,32,97,109,
                 32,126,112,126,110,34,44,32,91,115,101,108,102,40,41,93,41,
                 44,10,32,32,32,32,32,32,32,32,32,32,32,32,108,111,111,112,40,
                 41,10,32,32,32,32,101,110,100,46,10,10,49,62,32]},
               {text,
                [23,80,32,61,32,115,112,97,119,110,40,109,44,32,108,111,111,
                 112,44,32,91,93,41,46]},
               {text,[1,10]},
               {text,"\f<0.58.0>\n2> "},
               {text,
                [16,80,32,33,32,119,104,111,95,97,114,101,95,121,111,117,46]},
               {text,[6,10,73,32,97,109,32]},
               {text,
                [20,60,48,46,53,56,46,48,62,10,119,104,111,95,97,114,101,95,
                 121,111,117]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [28,82,101,97,100,32,109,111,114,101,32,97,98,111,117,116,
                   32,112,114,111,99,101,115,115,101,115,32,105,110]}],
                0,false},
               {text,
                [22,91,80,114,111,99,101,115,115,101,115,93,40,112,114,111,99,
                 101,115,115,101,115,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\n#### Tuple"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "=A tuple is a compound data type with a fixed number of terms:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [18,10,123,84,101,114,109,49,44,46,46,46,44,84,101,114,109,78,
                 125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\tEach term"}],0,false},
               {text,[6,42,84,101,114,109,42]},
               {sep,
                [{text,
                  [25,105,110,32,116,104,101,32,116,117,112,108,101,32,105,
                   115,32,99,97,108,108,101,100,32,97,110]}],
                0,false},
               {text,"\v**element**"},
               {sep,
                [{text,"*. The number of elements is said to be the"}],
                0,false},
               {text,"\b**size**"},
               {sep,[{text,"\rof the tuple."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"3There exists a number of BIFs to manipulate tuples."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [24,80,32,61,32,123,97,100,97,109,44,50,52,44,123,106,117,108,
                 121,44,50,57,125,125,46]},
               {text,
                [24,10,123,97,100,97,109,44,50,52,44,123,106,117,108,121,44,
                 50,57,125,125,10,50,62,32]},
               {text,"\relement(1,P)."},
               {text,"\t\nadam\n3> "},
               {text,"\relement(3,P)."},
               {text,[14,10,123,106,117,108,121,44,50,57,125,10,52,62,32]},
               {text,
                [24,80,50,32,61,32,115,101,116,101,108,101,109,101,110,116,40,
                 50,44,80,44,50,53,41,46]},
               {text,
                [24,10,123,97,100,97,109,44,50,53,44,123,106,117,108,121,44,
                 50,57,125,125,10,53,62,32]},
               {text,[14,116,117,112,108,101,95,115,105,122,101,40,80,41,46]},
               {text,[6,10,51,10,54,62,32]},
               {text,
                [15,116,117,112,108,101,95,115,105,122,101,40,123,125,41,46]},
               {text,[2,10,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\b#### Map"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "OA map is a compound data type with a variable number of key-value associations:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"!\n#{Key1=>Value1,...,KeyN=>ValueN}"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"2Each key-value association in the map is called an"}],
                0,false},
               {text,
                [20,42,42,97,115,115,111,99,105,97,116,105,111,110,32,112,97,
                 105,114,42,42]},
               {sep,
                [{text,"0. The key and value parts of the pair are called"}],
                0,false},
               {text,"\f**elements**"},
               {sep,
                [{text,
                  "3. The number of association pairs is said to be the"}],
                0,false},
               {text,"\b**size**"},
               {sep,[{text,"\vof the map."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"1There exists a number of BIFs to manipulate maps."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,"+M1 = #{name=>adam,age=>24,date=>{july,29}}."},
               {text,"0\n#{age => 24,date => {july,29},name => adam}\n2> "},
               {text,
                [18,109,97,112,115,58,103,101,116,40,110,97,109,101,44,77,49,
                 41,46]},
               {text,"\t\nadam\n3> "},
               {text,
                [18,109,97,112,115,58,103,101,116,40,100,97,116,101,44,77,49,
                 41,46]},
               {text,[14,10,123,106,117,108,121,44,50,57,125,10,52,62,32]},
               {text,
                [28,77,50,32,61,32,109,97,112,115,58,117,112,100,97,116,101,
                 40,97,103,101,44,50,53,44,77,49,41,46]},
               {text,"0\n#{age => 25,date => {july,29},name => adam}\n5> "},
               {text,"\fmap_size(M)."},
               {text,[6,10,51,10,54,62,32]},
               {text,[14,109,97,112,95,115,105,122,101,40,35,123,125,41,46]},
               {text,[2,10,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "9A collection of maps processing functions can be found in"}],
                0,false},
               {text,
                [21,91,115,116,100,108,105,98,47,109,97,112,115,93,40,46,47,
                 109,97,112,115,41]},
               {sep,
                [{text,
                  [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   83,84,68,76,73,66,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,82,101,97,100,32,109,111,114,101,32,97,98,111,117,116,
                   32,109,97,112,115,32,105,110]}],
                0,false},
               {text,"0[Map Expressions](./expressions#map_expressions)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "=Maps are considered to be experimental during Erlang/OTP R17."}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\t#### List"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "?A list is a compound data type with a variable number of terms."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [18,10,91,84,101,114,109,49,44,46,46,46,44,84,101,114,109,78,
                 93]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\tEach term"}],0,false},
               {text,[6,42,84,101,114,109,42]},
               {sep,
                [{text,
                  [24,105,110,32,116,104,101,32,108,105,115,116,32,105,115,32,
                   99,97,108,108,101,100,32,97,110]}],
                0,false},
               {text,"\v**element**"},
               {sep,
                [{text,"*. The number of elements is said to be the"}],
                0,false},
               {text,"\n**length**"},
               {sep,[{text,"\fof the list."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,")Formally, a list is either the empty list"}],
                0,false},
               {text,[4,42,91,93,42]},
               {sep,
                [{text,
                  [16,111,114,32,99,111,110,115,105,115,116,115,32,111,102,32,
                   97]}],
                0,false},
               {text,"\b**head**"},
               {sep,
                [{text,
                  [21,40,102,105,114,115,116,32,101,108,101,109,101,110,116,
                   41,32,97,110,100,32,97]}],
                0,false},
               {text,"\b**tail**"},
               {sep,
                [{text,
                  [28,40,114,101,109,97,105,110,100,101,114,32,111,102,32,116,
                   104,101,32,108,105,115,116,41,46,32,84,104,101]}],
                0,false},
               {text,"\b**tail**"},
               {sep,
                [{text,".is also a list. The latter can be expressed as"}],
                0,false},
               {text,[7,42,91,72,124,84,93,42]},
               {sep,
                [{text,
                  [14,46,32,84,104,101,32,110,111,116,97,116,105,111,110]}],
                0,false},
               {text,
                [19,42,91,84,101,114,109,49,44,46,46,46,44,84,101,114,109,78,
                 93,42]},
               {sep,[{text,"!above is equivalent with the list"}],0,false},
               {text,
                [26,42,91,84,101,114,109,49,124,91,46,46,46,124,91,84,101,114,
                 109,78,124,91,93,93,93,93,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[4,42,91,93,42]},
               {sep,
                [{text,
                  [15,105,115,32,97,32,108,105,115,116,44,32,116,104,117,
                   115]}],
                0,false},
               {above,{above,null,null},null},
               {text,"\b*[c|[]]*"},
               {sep,
                [{text,
                  [15,105,115,32,97,32,108,105,115,116,44,32,116,104,117,
                   115]}],
                0,false},
               {above,{above,null,null},null},
               {text,"\f*[b|[c|[]]]*"},
               {sep,
                [{text,
                  [15,105,115,32,97,32,108,105,115,116,44,32,116,104,117,
                   115]}],
                0,false},
               {above,{above,null,null},null},
               {text,[16,42,91,97,124,91,98,124,91,99,124,91,93,93,93,93,42]},
               {sep,
                [{text,
                  [22,105,115,32,97,32,108,105,115,116,44,32,111,114,32,105,
                   110,32,115,104,111,114,116]}],
                0,false},
               {text,"\t*[a,b,c]*"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "5A list where the tail is a list is sometimes called a"}],
                0,false},
               {text,
                [15,42,42,112,114,111,112,101,114,32,108,105,115,116,42,42]},
               {sep,
                [{text,
                  "I. It is allowed to have a list where the tail is not a list, for example,"}],
                0,false},
               {text,[7,42,91,97,124,98,93,42]},
               {sep,
                [{text,
                  "8. However, this type of list is of little practical use."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [17,76,49,32,61,32,91,97,44,50,44,123,99,44,52,125,93,46]},
               {text,[16,10,91,97,44,50,44,123,99,44,52,125,93,10,50,62,32]},
               {text,"\v[H|T] = L1."},
               {text,[16,10,91,97,44,50,44,123,99,44,52,125,93,10,51,62,32]},
               {text,[2,72,46]},
               {text,[6,10,97,10,52,62,32]},
               {text,[2,84,46]},
               {text,[14,10,91,50,44,123,99,44,52,125,93,10,53,62,32]},
               {text,"\vL2 = [d|T]."},
               {text,[16,10,91,100,44,50,44,123,99,44,52,125,93,10,54,62,32]},
               {text,"\vlength(L1)."},
               {text,[6,10,51,10,55,62,32]},
               {text,"\vlength([])."},
               {text,[2,10,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "=A collection of list processing functions can be found in the"}],
                0,false},
               {text,
                [16,91,108,105,115,116,115,93,40,46,47,108,105,115,116,115,
                 41]},
               {sep,
                [{text,
                  [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   83,84,68,76,73,66,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\v#### String"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "^Strings are enclosed in double quotes (\"), but is not a data type in Erlang. Instead, a string"}],
                0,false},
               {text,"\t*\"hello\"*"},
               {sep,
                [{text,
                  [25,105,115,32,115,104,111,114,116,104,97,110,100,32,102,
                   111,114,32,116,104,101,32,108,105,115,116]}],
                0,false},
               {text,
                [18,42,91,36,104,44,36,101,44,36,108,44,36,108,44,36,111,93,
                 42]},
               {sep,[{text,"\n, that is,"}],0,false},
               {text,
                [23,42,91,49,48,52,44,49,48,49,44,49,48,56,44,49,48,56,44,49,
                 49,49,93,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [131,84,119,111,32,97,100,106,97,99,101,110,116,32,115,116,
                 114,105,110,103,32,108,105,116,101,114,97,108,115,32,97,114,
                 101,32,99,111,110,99,97,116,101,110,97,116,101,100,32,105,
                 110,116,111,32,111,110,101,46,32,84,104,105,115,32,105,115,
                 32,100,111,110,101,32,105,110,32,116,104,101,32,99,111,109,
                 112,105,108,97,116,105,111,110,44,32,116,104,117,115,44,32,
                 100,111,101,115,32,110,111,116,32,105,110,99,117,114,32,97,
                 110,121,32,114,117,110,116,105,109,101,32,111,118,101,114,
                 104,101,97,100,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[14,10,34,115,116,114,105,110,103,34,32,34,52,50,34]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [16,105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,
                 111]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"\v\n\"string42\""}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\v#### Record"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [365,65,32,114,101,99,111,114,100,32,105,115,32,97,32,100,
                   97,116,97,32,115,116,114,117,99,116,117,114,101,32,102,111,
                   114,32,115,116,111,114,105,110,103,32,97,32,102,105,120,
                   101,100,32,110,117,109,98,101,114,32,111,102,32,101,108,
                   101,109,101,110,116,115,46,32,73,116,32,104,97,115,32,110,
                   97,109,101,100,32,102,105,101,108,100,115,32,97,110,100,32,
                   105,115,32,115,105,109,105,108,97,114,32,116,111,32,97,32,
                   115,116,114,117,99,116,32,105,110,32,67,46,32,72,111,119,
                   101,118,101,114,44,32,97,32,114,101,99,111,114,100,32,105,
                   115,32,110,111,116,32,97,32,116,114,117,101,32,100,97,116,
                   97,32,116,121,112,101,46,32,73,110,115,116,101,97,100,44,
                   32,114,101,99,111,114,100,32,101,120,112,114,101,115,115,
                   105,111,110,115,32,97,114,101,32,116,114,97,110,115,108,97,
                   116,101,100,32,116,111,32,116,117,112,108,101,32,101,120,
                   112,114,101,115,115,105,111,110,115,32,100,117,114,105,110,
                   103,32,99,111,109,112,105,108,97,116,105,111,110,46,32,84,
                   104,101,114,101,102,111,114,101,44,32,114,101,99,111,114,
                   100,32,101,120,112,114,101,115,115,105,111,110,115,32,97,
                   114,101,32,110,111,116,32,117,110,100,101,114,115,116,111,
                   111,100,32,98,121,32,116,104,101,32,115,104,101,108,108,32,
                   117,110,108,101,115,115,32,115,112,101,99,105,97,108,32,97,
                   99,116,105,111,110,115,32,97,114,101,32,116,97,107,101,110,
                   46,32,70,111,114,32,100,101,116,97,105,108,115,44,32,115,
                   101,101,32,116,104,101]}],
                0,false},
               {text,
                [19,91,115,104,101,108,108,40,51,41,93,40,46,47,115,104,101,
                 108,108,41]},
               {sep,
                [{text,
                  [23,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   83,84,68,76,73,66,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "{\n-module(person).\n-export([new/2]).\n\n-record(person, {name, age}).\n\nnew(Name, Age) ->\n    #person{name=Name, age=Age}.\n\n1> "},
               {text,
                [22,112,101,114,115,111,110,58,110,101,119,40,101,114,110,105,
                 101,44,32,52,52,41,46]},
               {text,
                [18,10,123,112,101,114,115,111,110,44,101,114,110,105,101,44,
                 52,52,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [26,82,101,97,100,32,109,111,114,101,32,97,98,111,117,116,
                   32,114,101,99,111,114,100,115,32,105,110]}],
                0,false},
               {text,
                [18,91,82,101,99,111,114,100,115,93,40,114,101,99,111,114,100,
                 115,41]},
               {sep,
                [{text,
                  [31,46,32,77,111,114,101,32,101,120,97,109,112,108,101,115,
                   32,99,97,110,32,98,101,32,102,111,117,110,100,32,105,110]}],
                0,false},
               {text,"![Programming Examples](./records)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\f#### Boolean"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ":There is no Boolean data type in Erlang. Instead the atoms"}],
                0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[7,42,102,97,108,115,101,42]},
               {sep,[{text,"\"are used to denote Boolean values."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,[6,50,32,61,60,32,51]},
               {text,"\n.\ntrue\n2> "},
               {text,"\rtrue or false"},
               {text,[6,46,10,116,114,117,101]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,69,115,99,97,112,101,32,83,101,113,117,101,110,
             99,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "OWithin strings and quoted atoms, the following escape sequences are recognized:"}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,84,121,112,101,32,67,111,110,118,101,114,115,
             105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"0There are a number of BIFs for type conversions."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [20,97,116,111,109,95,116,111,95,108,105,115,116,40,104,101,
                 108,108,111,41,46]},
               {text,"\f\n\"hello\"\n2> "},
               {text,
                [22,108,105,115,116,95,116,111,95,97,116,111,109,40,34,104,
                 101,108,108,111,34,41,46]},
               {text,"\n\nhello\n3> "},
               {text,
                [28,98,105,110,97,114,121,95,116,111,95,108,105,115,116,40,60,
                 60,34,104,101,108,108,111,34,62,62,41,46]},
               {text,"\f\n\"hello\"\n4> "},
               {text,"(binary_to_list(<<104,101,108,108,111>>)."},
               {text,"\f\n\"hello\"\n5> "},
               {text,
                [24,108,105,115,116,95,116,111,95,98,105,110,97,114,121,40,34,
                 104,101,108,108,111,34,41,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,
                [26,60,49,48,52,44,49,48,49,44,49,48,56,44,49,48,56,44,49,49,
                 49,62,62,10,54,62,32]},
               {text,
                [19,102,108,111,97,116,95,116,111,95,108,105,115,116,40,55,46,
                 48,41,46]},
               {text,"!\n\"7.00000000000000000000e+00\"\n7> "},
               {text,"\elist_to_float(\"7.000e+00\")."},
               {text,"\b\n7.0\n8> "},
               {text,
                [20,105,110,116,101,103,101,114,95,116,111,95,108,105,115,116,
                 40,55,55,41,46]},
               {text,"\t\n\"77\"\n9> "},
               {text,
                [22,108,105,115,116,95,116,111,95,105,110,116,101,103,101,114,
                 40,34,55,55,34,41,46]},
               {text,"\b\n77\n10> "},
               {text,
                [23,116,117,112,108,101,95,116,111,95,108,105,115,116,40,123,
                 97,44,98,44,99,125,41,46]},
               {text,"\r\n[a,b,c]\n11> "},
               {text,
                [23,108,105,115,116,95,116,111,95,116,117,112,108,101,40,91,
                 97,44,98,44,99,93,41,46]},
               {text,"\r\n{a,b,c}\n12> "},
               {text,
                [24,116,101,114,109,95,116,111,95,98,105,110,97,114,121,40,
                 123,97,44,98,44,99,125,41,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"2<131,104,3,100,0,1,97,100,0,1,98,100,0,1,99>>\n13> "},
               {text,
                "?binary_to_term(<<131,104,3,100,0,1,97,100,0,1,98,100,0,1,99>>)."},
               {text,"\r\n{a,b,c}\n14> "},
               {text,
                [28,98,105,110,97,114,121,95,116,111,95,105,110,116,101,103,
                 101,114,40,60,60,34,55,55,34,62,62,41,46]},
               {text,"\b\n77\n15> "},
               {text,
                [22,105,110,116,101,103,101,114,95,116,111,95,98,105,110,97,
                 114,121,40,55,55,41,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\f<\"77\">>\n16> "},
               {text,
                [21,102,108,111,97,116,95,116,111,95,98,105,110,97,114,121,40,
                 55,46,48,41,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"$<\"7.00000000000000000000e+00\">>\n17> "},
               {text,"!binary_to_float(<<\"7.000e+00\">>)."},
               {text,[4,10,55,46,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [21,35,35,35,35,32,80,97,116,116,101,114,110,32,77,97,116,99,104,
           105,110,103]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,")Variables are bound to values through the"}],
              0,false},
             {text,
              [20,42,42,112,97,116,116,101,114,110,32,109,97,116,99,104,105,
               110,103,42,42]},
             {sep,
              [{text,
                "Cmechanism. Pattern matching occurs when evaluating a function call,"}],
              0,false},
             {text,[6,42,99,97,115,101,42]},
             {sep,[{text,[1,45]}],0,false},
             {text,"\t*receive*"},
             {sep,[{text,[1,45]}],0,false},
             {text,[5,42,116,114,121,42]},
             {sep,
              [{text,"1- expressions and match operator (=) expressions."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"'In a pattern matching, a left-hand side"}],0,false},
             {text," [pattern](./expressions#pattern)"},
             {sep,[{text,"$is matched against a right-hand side"}],0,false},
             {text,
              [26,91,116,101,114,109,93,40,46,47,101,120,112,114,101,115,115,
               105,111,110,115,35,116,101,114,109,41]},
             {sep,
              [{text,
                "~. If the matching succeeds, any unbound variables in the pattern become bound. If the matching fails, a run-time error occurs."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,49,62,32]},
             {text,[2,88,46]},
             {text,"%\n** 1: variable 'X' is unbound **\n2> "},
             {text,[6,88,32,61,32,50,46]},
             {text,[6,10,50,10,51,62,32]},
             {text,[6,88,32,43,32,49,46]},
             {text,[6,10,51,10,52,62,32]},
             {text,[16,123,88,44,32,89,125,32,61,32,123,49,44,32,50,125,46]},
             {text,
              "@\n** exception error: no match of right hand side value {1,2}\n5> "},
             {text,[16,123,88,44,32,89,125,32,61,32,123,50,44,32,51,125,46]},
             {text,"\n\n{2,3}\n6> "},
             {text,[2,89,46]},
             {text,[2,10,51]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {sep,
     [{sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [18,35,35,35,35,32,77,111,100,117,108,101,32,83,121,110,116,97,
             120]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\eErlang code is divided into"}],0,false},
               {text,"\v**modules**"},
               {sep,
                [{text,
                  "i. A module consists of a sequence of attributes and function declarations, each terminated by period (.)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "ñ\n-module(m).          % module attribute\n-export([fact/1]).   % module attribute\n\nfact(N) when N>0 ->  % beginning of function declaration\n    N * fact(N-1);   %  |\nfact(0) ->           %  |\n    1.               % end of function declaration"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"/For a description of function declarations, see"}],
                0,false},
               {text,"([Function Declaration Syntax](functions)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [22,35,35,35,35,32,77,111,100,117,108,101,32,65,116,116,114,105,
             98,117,116,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[1,65]}],0,false},
               {text,
                [20,42,42,109,111,100,117,108,101,32,97,116,116,114,105,98,
                 117,116,101,42,42]},
               {sep,
                [{text,"'defines a certain property of a module."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"1A module attribute consists of a tag and a value:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"\r\n-Tag(Value)."}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[5,42,84,97,103,42]},
               {sep,
                [{text,
                  [22,109,117,115,116,32,98,101,32,97,110,32,97,116,111,109,
                   44,32,119,104,105,108,101]}],
                0,false},
               {text,[7,42,86,97,108,117,101,42]},
               {sep,
                [{text,
                  "Xmust be a literal term. As a convenience in user-defined attributes, if the literal term"}],
                0,false},
               {text,[7,42,86,97,108,117,101,42]},
               {sep,
                [{text,
                  [14,104,97,115,32,116,104,101,32,115,121,110,116,97,120]}],
                0,false},
               {text,"\f*Name/Arity*"},
               {sep,[{text,[6,40,119,104,101,114,101]}],0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,
                [{text,
                  [14,105,115,32,97,110,32,97,116,111,109,32,97,110,100]}],
                0,false},
               {text,[7,42,65,114,105,116,121,42]},
               {sep,
                [{text,
                  [29,97,32,112,111,115,105,116,105,118,101,32,105,110,116,
                   101,103,101,114,41,44,32,116,104,101,32,116,101,114,109]}],
                0,false},
               {text,"\f*Name/Arity*"},
               {sep,
                [{text,
                  [16,105,115,32,116,114,97,110,115,108,97,116,101,100,32,116,
                   111]}],
                0,false},
               {text,[14,42,123,78,97,109,101,44,65,114,105,116,121,125,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "uAny module attribute can be specified. The attributes are stored in the compiled code and can be retrieved by calling"}],
                0,false},
               {text," *Module:module_info(attributes)*"},
               {sep,
                [{text,
                  [24,44,32,111,114,32,98,121,32,117,115,105,110,103,32,116,
                   104,101,32,109,111,100,117,108,101]}],
                0,false},
               {text,"*[beam_lib(3)](../stdlib/beam_lib#chunks/2)"},
               {sep,[{text,"\nin STDLIB."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [136,83,101,118,101,114,97,108,32,109,111,100,117,108,101,32,
                 97,116,116,114,105,98,117,116,101,115,32,104,97,118,101,32,
                 112,114,101,100,101,102,105,110,101,100,32,109,101,97,110,
                 105,110,103,115,46,32,83,111,109,101,32,111,102,32,116,104,
                 101,109,32,104,97,118,101,32,97,114,105,116,121,32,116,119,
                 111,44,32,98,117,116,32,117,115,101,114,45,100,101,102,105,
                 110,101,100,32,109,111,100,117,108,101,32,97,116,116,114,105,
                 98,117,116,101,115,32,109,117,115,116,32,104,97,118,101,32,
                 97,114,105,116,121,32,111,110,101,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text,"\"#### Pre-Defined Module Attributes"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "NPre-defined module attributes is to be placed before any function declaration."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {text,[4,60,100,108,62]},
            {nest,4,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                [16,45,109,111,100,117,108,101,40,77,111,100,
                                 117,108,101,41,46]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {sep,
                              [{above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{sep,
                                       [{text,
                                         "=Module declaration, defining the name of the module. The name"}],
                                       0,false},
                                      {text,[6,77,111,100,117,108,101]},
                                      {sep,
                                       [{text,
                                         "=, an atom, is to be same as the file name minus the extension"}],
                                       0,false},
                                      {text,[4,46,101,114,108]},
                                      {sep,[{text,"\v. Otherwise"}],0,false},
                                      {text,"\fcode loading"},
                                      {sep,
                                       [{text,
                                         [26,100,111,101,115,32,110,111,116,
                                          32,119,111,114,107,32,97,115,32,105,
                                          110,116,101,110,100,101,100,46]}],
                                       0,false}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{text,
                                       "LThis attribute is to be specified first and is the only mandatory attribute."}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}}],
                              0,false},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               [19,45,101,120,112,111,114,116,40,70,117,110,
                                99,116,105,111,110,115,41,46]}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {sep,
                            [{above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,
                                     "zExported functions. Specifies which of the functions, defined within the module, that are visible from outside the module."}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,"\tFunctions"},
                                    {sep,[{text,"\tis a list"}],0,false},
                                    {text,
                                     "![Name1/Arity1, ..., NameN/ArityN]"},
                                    {sep,[{text,"\f, where each"}],0,false},
                                    {text,[5,78,97,109,101,73]},
                                    {sep,
                                     [{text,
                                       [14,105,115,32,97,110,32,97,116,111,
                                        109,32,97,110,100]}],
                                     0,false},
                                    {text,[6,65,114,105,116,121,73]},
                                    {sep,[{text,"\van integer."}],0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}}],
                            0,false},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,
                             [26,45,105,109,112,111,114,116,40,77,111,100,117,
                              108,101,44,70,117,110,99,116,105,111,110,115,41,
                              46]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {sep,
                          [{above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   "fImported functions. Can be called the same way as local functions, that is, without any module prefix."}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,[6,77,111,100,117,108,101]},
                                  {sep,
                                   [{text,
                                     ";, an atom, specifies which module to import functions from."}],
                                   0,false},
                                  {text,"\tFunctions"},
                                  {sep,
                                   [{text,
                                     [24,105,115,32,97,32,108,105,115,116,32,
                                      115,105,109,105,108,97,114,32,97,115,32,
                                      102,111,114]}],
                                   0,false},
                                  {text,[6,101,120,112,111,114,116]},
                                  {sep,[{text,[1,46]}],0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}}],
                          0,false},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [18,45,99,111,109,112,105,108,101,40,79,112,116,
                            105,111,110,115,41,46]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 [17,67,111,109,112,105,108,101,114,32,111,
                                  112,116,105,111,110,115,46]}],
                               0,false},
                              {text,[7,79,112,116,105,111,110,115]},
                              {sep,
                               [{text,
                                 "vis a single option or a list of options. This attribute is added to the option list when compiling the module. See the"}],
                               0,false},
                              {text,"\ncompile(3)"},
                              {sep,
                               [{text,
                                 [24,109,97,110,117,97,108,32,112,97,103,101,
                                  32,105,110,32,67,111,109,112,105,108,101,
                                  114,46]}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,"\n-vsn(Vsn)."}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {sep,
                      [{above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 [15,77,111,100,117,108,101,32,118,101,114,
                                  115,105,111,110,46]}],
                               0,false},
                              {text,[3,86,115,110]},
                              {sep,
                               [{text,
                                 ".is any literal term and can be retrieved using"}],
                               0,false},
                              {text,
                               [18,98,101,97,109,95,108,105,98,58,118,101,114,
                                115,105,111,110,47,49]},
                              {sep,[{text,"\t, see the"}],0,false},
                              {text,"\vbeam_lib(3)"},
                              {sep,
                               [{text,
                                 [22,109,97,110,117,97,108,32,112,97,103,101,
                                  32,105,110,32,83,84,68,76,73,66,46]}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               "[If this attribute is not specified, the version defaults to the MD5 checksum of the module."}],
                             0,false}],
                           0,true},
                          null},
                         null}}],
                      0,false},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [19,45,111,110,95,108,111,97,100,40,70,117,110,99,116,
                        105,111,110,41,46]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "rThis attribute names a function that is to be run automatically when a module is loaded. For more information, see"}],
                           0,false},
                          {text,"*Running a Function When a Module is Loaded"},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}}}},
           {text,[5,60,47,100,108,62]}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [31,35,35,35,35,32,66,101,104,97,118,105,111,117,114,32,77,111,
               100,117,108,101,32,65,116,116,114,105,98,117,116,101]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "FIt is possible to specify that the module is the callback module for a"}],
                  0,false},
                 {text,"\r**behaviour**"},
                 {sep,[{text,[1,58]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [23,10,45,98,101,104,97,118,105,111,117,114,40,66,101,104,
                   97,118,105,111,117,114,41,46]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\bThe atom"}],0,false},
                 {text,"\v*Behaviour*"},
                 {sep,
                  [{text,
                    "wgives the name of the behaviour, which can be a user-defined behaviour or one of the following OTP standard behaviours:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {sep,[{text,[1,42]},{text,"\f*gen_server*"}],0,false},
             {sep,[{text,[1,42]},{text,"\f*gen_statem*"}],0,false}},
            {sep,[{text,[1,42]},{text,"\v*gen_event*"}],0,false}},
           {sep,[{text,[1,42]},{text,"\f*supervisor*"}],0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\fThe spelling"}],0,false},
                 {text,"\n*behavior*"},
                 {sep,
                  [{text,
                    [17,105,115,32,97,108,115,111,32,97,99,99,101,112,116,101,
                     100,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "^The callback functions of the module can be specified either directly by the exported function"}],
                  0,false},
                 {text,
                  [18,42,98,101,104,97,118,105,111,117,114,95,105,110,102,111,
                   47,49,42]},
                 {sep,[{text,[1,58]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,"(\nbehaviour_info(callbacks) -> Callbacks."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[7,111,114,32,98,121,32,97]}],0,false},
                 {text,"\v*-callback*"},
                 {sep,
                  [{text,"%attribute for each callback function:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,"%\n-callback Name(Arguments) -> Result."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[5,72,101,114,101,44]}],0,false},
                 {text,"\v*Arguments*"},
                 {sep,
                  [{text,"(is a list of zero or more arguments. The"}],
                  0,false},
                 {text,"\v*-callback*"},
                 {sep,
                  [{text,
                    [130,97,116,116,114,105,98,117,116,101,32,105,115,32,116,
                     111,32,98,101,32,112,114,101,102,101,114,114,101,100,32,
                     115,105,110,99,101,32,116,104,101,32,101,120,116,114,97,
                     32,116,121,112,101,32,105,110,102,111,114,109,97,116,105,
                     111,110,32,99,97,110,32,98,101,32,117,115,101,100,32,98,
                     121,32,116,111,111,108,115,32,116,111,32,112,114,111,100,
                     117,99,101,32,100,111,99,117,109,101,110,116,97,116,105,
                     111,110,32,111,114,32,102,105,110,100,32,100,105,115,99,
                     114,101,112,97,110,99,105,101,115,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "2Read more about behaviours and callback modules in"}],
                  0,false},
                 {text,
                  "F[OTP Design Principles](../doc/design_principles/spec_proc#behaviours)"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [23,35,35,35,35,32,82,101,99,111,114,100,32,68,101,102,105,110,
               105,116,105,111,110,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "HThe same syntax as for module attributes is used for record definitions:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [24,10,45,114,101,99,111,114,100,40,82,101,99,111,114,100,
                   44,70,105,101,108,100,115,41,46]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "gRecord definitions are allowed anywhere in a module, also among the function declarations. Read more in"}],
                  0,false},
                 {text,
                  [18,91,82,101,99,111,114,100,115,93,40,114,101,99,111,114,
                   100,115,41]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [17,35,35,35,35,32,80,114,101,112,114,111,99,101,115,115,111,
               114]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [137,84,104,101,32,115,97,109,101,32,115,121,110,116,97,120,
                   32,97,115,32,102,111,114,32,109,111,100,117,108,101,32,97,
                   116,116,114,105,98,117,116,101,115,32,105,115,32,117,115,
                   101,100,32,98,121,32,116,104,101,32,112,114,101,112,114,
                   111,99,101,115,115,111,114,44,32,119,104,105,99,104,32,115,
                   117,112,112,111,114,116,115,32,102,105,108,101,32,105,110,
                   99,108,117,115,105,111,110,44,32,109,97,99,114,111,115,44,
                   32,97,110,100,32,99,111,110,100,105,116,105,111,110,97,108,
                   32,99,111,109,112,105,108,97,116,105,111,110,58]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "6\n-include(\"SomeFile.hrl\").\n-define(Macro,Replacement)."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\fRead more in"}],0,false},
                 {text,
                  [22,91,80,114,101,112,114,111,99,101,115,115,111,114,93,40,
                   109,97,99,114,111,115,41]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [26,35,35,35,35,32,83,101,116,116,105,110,103,32,70,105,108,101,
               32,97,110,100,32,76,105,110,101]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "TThe same syntax as for module attributes is used for changing the pre-defined macros"}],
                  0,false},
                 {text,[7,42,63,70,73,76,69,42]},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,[7,42,63,76,73,78,69,42]},
                 {sep,[{text,[1,58]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [19,10,45,102,105,108,101,40,70,105,108,101,44,32,76,105,
                   110,101,41,46]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [263,84,104,105,115,32,97,116,116,114,105,98,117,116,101,32,
                   105,115,32,117,115,101,100,32,98,121,32,116,111,111,108,
                   115,44,32,115,117,99,104,32,97,115,32,89,101,99,99,44,32,
                   116,111,32,105,110,102,111,114,109,32,116,104,101,32,99,
                   111,109,112,105,108,101,114,32,116,104,97,116,32,116,104,
                   101,32,115,111,117,114,99,101,32,112,114,111,103,114,97,
                   109,32,105,115,32,103,101,110,101,114,97,116,101,100,32,98,
                   121,32,97,110,111,116,104,101,114,32,116,111,111,108,46,32,
                   73,116,32,97,108,115,111,32,105,110,100,105,99,97,116,101,
                   115,32,116,104,101,32,99,111,114,114,101,115,112,111,110,
                   100,101,110,99,101,32,111,102,32,115,111,117,114,99,101,32,
                   102,105,108,101,115,32,116,111,32,108,105,110,101,115,32,
                   111,102,32,116,104,101,32,111,114,105,103,105,110,97,108,
                   32,117,115,101,114,45,119,114,105,116,116,101,110,32,102,
                   105,108,101,44,32,102,114,111,109,32,119,104,105,99,104,32,
                   116,104,101,32,115,111,117,114,99,101,32,112,114,111,103,
                   114,97,109,32,105,115,32,112,114,111,100,117,99,101,100,
                   46]}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text,"&#### Types and function specifications"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "cA similar syntax as for module attributes is used for specifying types and function specifications:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "R\n-type my_type() :: atom() | integer().\n-spec my_function(integer()) -> integer()."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\fRead more in"}],0,false},
                 {text,"-[Types and Function specifications](typespec)"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\eThe description is based on"}],0,false},
                 {text,
                  "T[EEP8 - Types and function specifications](http://www.erlang.org/eeps/eep-0008.html)"},
                 {sep,
                  [{text,"%, which is not to be further updated."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\r#### Comments"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [274,67,111,109,109,101,110,116,115,32,99,97,110,32,98,101,32,
                 112,108,97,99,101,100,32,97,110,121,119,104,101,114,101,32,
                 105,110,32,97,32,109,111,100,117,108,101,32,101,120,99,101,
                 112,116,32,119,105,116,104,105,110,32,115,116,114,105,110,
                 103,115,32,97,110,100,32,113,117,111,116,101,100,32,97,116,
                 111,109,115,46,32,65,32,99,111,109,109,101,110,116,32,98,101,
                 103,105,110,115,32,119,105,116,104,32,116,104,101,32,99,104,
                 97,114,97,99,116,101,114,32,34,37,34,44,32,99,111,110,116,
                 105,110,117,101,115,32,117,112,32,116,111,44,32,98,117,116,
                 32,100,111,101,115,32,110,111,116,32,105,110,99,108,117,100,
                 101,32,116,104,101,32,110,101,120,116,32,101,110,100,45,111,
                 102,45,108,105,110,101,44,32,97,110,100,32,104,97,115,32,110,
                 111,32,101,102,102,101,99,116,46,32,78,111,116,105,99,101,32,
                 116,104,97,116,32,116,104,101,32,116,101,114,109,105,110,97,
                 116,105,110,103,32,101,110,100,45,111,102,45,108,105,110,101,
                 32,104,97,115,32,116,104,101,32,101,102,102,101,99,116,32,
                 111,102,32,119,104,105,116,101,32,115,112,97,99,101,46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,".#### module_info/0 and module_info/1 functions"},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "XThe compiler automatically inserts the two special, exported functions into each module:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {text,
            [22,42,77,111,100,117,108,101,58,109,111,100,117,108,101,95,105,
             110,102,111,47,48,42]}],
          0,false},
         {sep,
          [{text,[1,42]},
           {text,
            [22,42,77,111,100,117,108,101,58,109,111,100,117,108,101,95,105,
             110,102,111,47,49,42]}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "GThese functions can be called to retrieve information about the module."}],
              0,false}],
            0,true},
           null},
          null}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [18,35,35,35,35,32,109,111,100,117,108,101,95,105,110,102,111,
               47,48]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[3,84,104,101]}],0,false},
                 {text,
                  [15,42,109,111,100,117,108,101,95,105,110,102,111,47,48,42]},
                 {sep,
                  [{text,"*function in each module, returns a list of"}],
                  0,false},
                 {text,"\r*{Key,Value}*"},
                 {sep,
                  [{text,
                    "_tuples with information about the module. Currently, the list contain tuples with the following"}],
                  0,false},
                 {text,[5,42,75,101,121,42]},
                 {sep,[{text,[2,115,58]}],0,false},
                 {text,"\b*module*"},
                 {sep,[{text,[1,44]}],0,false},
                 {text,"\f*attributes*"},
                 {sep,[{text,[1,44]}],0,false},
                 {text,"\t*compile*"},
                 {sep,[{text,[1,44]}],0,false},
                 {text,"\t*exports*"},
                 {sep,[{text,[1,44]}],0,false},
                 {text,[5,42,109,100,53,42]},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,"\b*native*"},
                 {sep,
                  [{text,
                    "A. The order and number of tuples may change without prior notice."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [18,35,35,35,35,32,109,111,100,117,108,101,95,105,110,102,111,
               47,49]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\bThe call"}],0,false},
                 {text,
                  [18,42,109,111,100,117,108,101,95,105,110,102,111,40,75,101,
                   121,41,42]},
                 {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                 {text,[5,42,75,101,121,42]},
                 {sep,
                  [{text,
                    "Cis an atom, returns a single piece of information about the module."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,"$The following values are allowed for"}],
                  0,false},
                 {text,[5,42,75,101,121,42]},
                 {sep,[{text,[1,58]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {text,[4,60,100,108,62]},
            {nest,4,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{text,[6,109,111,100,117,108,101]}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{text,
                                         "-Returns an atom representing the module name."}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,[{text,"\nattributes"}],0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {sep,
                                [{above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{sep,
                                         [{text,
                                           [17,82,101,116,117,114,110,115,32,
                                            97,32,108,105,115,116,32,111,
                                            102]}],
                                         0,false},
                                        {text,
                                         [25,123,65,116,116,114,105,98,117,
                                          116,101,78,97,109,101,44,86,97,108,
                                          117,101,76,105,115,116,125]},
                                        {sep,
                                         [{text,"\rtuples, where"}],
                                         0,false},
                                        {text,"\rAttributeName"},
                                        {sep,
                                         [{text,
                                           " is the name of an attribute, and"}],
                                         0,false},
                                        {text,"\tValueList"},
                                        {sep,
                                         [{text,
                                           "£is a list of values. Notice that a given attribute can occur more than once in the list with different values if the attribute occurs more than once in the module."}],
                                         0,false}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{sep,
                                         [{text,
                                           "GThe list of attributes becomes empty if the module is stripped with the"}],
                                         0,false},
                                        {text,"\vbeam_lib(3)"},
                                        {sep,
                                         [{text,
                                           [19,109,111,100,117,108,101,32,40,
                                            105,110,32,83,84,68,76,73,66,41,
                                            46]}],
                                         0,false}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}}],
                                0,false},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,
                               [{text,[7,99,111,109,112,105,108,101]}],
                               0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{sep,
                                     [{text,
                                       [136,82,101,116,117,114,110,115,32,97,
                                        32,108,105,115,116,32,111,102,32,116,
                                        117,112,108,101,115,32,119,105,116,
                                        104,32,105,110,102,111,114,109,97,116,
                                        105,111,110,32,97,98,111,117,116,32,
                                        104,111,119,32,116,104,101,32,109,111,
                                        100,117,108,101,32,119,97,115,32,99,
                                        111,109,112,105,108,101,100,46,32,84,
                                        104,105,115,32,108,105,115,116,32,105,
                                        115,32,101,109,112,116,121,32,105,102,
                                        32,116,104,101,32,109,111,100,117,108,
                                        101,32,104,97,115,32,98,101,101,110,
                                        32,115,116,114,105,112,112,101,100,32,
                                        119,105,116,104,32,116,104,101]}],
                                     0,false},
                                    {text,"\vbeam_lib(3)"},
                                    {sep,
                                     [{text,
                                       [19,109,111,100,117,108,101,32,40,105,
                                        110,32,83,84,68,76,73,66,41,46]}],
                                     0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,[{text,[3,109,100,53]}],0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   "£Returns a binary representing the MD5 checksum of the module. If the module has native code loaded, this will be the MD5 of the native code, not the BEAM bytecode."}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,[7,101,120,112,111,114,116,115]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,
                                 [{text,
                                   [17,82,101,116,117,114,110,115,32,97,32,
                                    108,105,115,116,32,111,102]}],
                                 0,false},
                                {text,"\f{Name,Arity}"},
                                {sep,
                                 [{text,
                                   "1tuples with all exported functions in the module."}],
                                 0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,"\tfunctions"}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 [17,82,101,116,117,114,110,115,32,97,32,108,
                                  105,115,116,32,111,102]}],
                               0,false},
                              {text,"\f{Name,Arity}"},
                              {sep,
                               [{text,
                                 "(tuples with all functions in the module."}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[4,110,105,102,115]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               [17,82,101,116,117,114,110,115,32,97,32,108,
                                105,115,116,32,111,102]}],
                             0,false},
                            {text,"\f{Name,Arity}"},
                            {sep,
                             [{text,
                               ",tuples with all NIF functions in the module."}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[6,110,97,116,105,118,101]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,[{text,[6,82,101,116,117,114,110]}],0,false},
                          {text,[4,116,114,117,101]},
                          {sep,
                           [{text,
                             ".if the module has native compiled code. Return"}],
                           0,false},
                          {text,[5,102,97,108,115,101]},
                          {sep,
                           [{text,
                             "Jotherwise. In a system compiled without HiPE support, the result is always"}],
                           0,false},
                          {text,[5,102,97,108,115,101]}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}}}},
           {text,[5,60,47,100,108,62]}}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{text,"\e<a name=\"syntax\">syntax</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text," #### Function Declaration Syntax"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[1,65]}],0,false},
               {text,
                [24,42,42,102,117,110,99,116,105,111,110,32,100,101,99,108,97,
                 114,97,116,105,111,110,42,42]},
               {sep,
                [{text,
                  "Xis a sequence of function clauses separated by semicolons, and terminated by period (.)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[1,65]}],0,false},
               {text,
                [19,42,42,102,117,110,99,116,105,111,110,32,99,108,97,117,115,
                 101,42,42]},
               {sep,
                [{text,
                  "9consists of a clause head and a clause body, separated by"}],
                0,false},
               {text,[4,42,45,62,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\bA clause"}],0,false},
               {text,"\b**head**"},
               {sep,
                [{text,
                  "jconsists of the function name, an argument list, and an optional guard sequence beginning with the keyword"}],
                0,false},
               {text,[6,42,119,104,101,110,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [127,10,78,97,109,101,40,80,97,116,116,101,114,110,49,49,44,
                 46,46,46,44,80,97,116,116,101,114,110,49,78,41,32,91,119,104,
                 101,110,32,71,117,97,114,100,83,101,113,49,93,32,45,62,10,32,
                 32,32,32,66,111,100,121,49,59,10,46,46,46,59,10,78,97,109,
                 101,40,80,97,116,116,101,114,110,75,49,44,46,46,46,44,80,97,
                 116,116,101,114,110,75,78,41,32,91,119,104,101,110,32,71,117,
                 97,114,100,83,101,113,75,93,32,45,62,10,32,32,32,32,66,111,
                 100,121,75,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "9The function name is an atom. Each argument is a pattern."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,84,104,101,32,110,117,109,98,101,114,32,111,102,32,97,
                   114,103,117,109,101,110,116,115]}],
                0,false},
               {text,[3,42,78,42]},
               {sep,[{text,[6,105,115,32,116,104,101]}],0,false},
               {text,"\t**arity**"},
               {sep,
                [{text,
                  "×of the function. A function is uniquely defined by the module name, function name, and arity. That is, two functions with the same name and in the same module, but with different arities are two different functions."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [16,65,32,102,117,110,99,116,105,111,110,32,110,97,109,101,
                   100]}],
                0,false},
               {text,[3,42,102,42]},
               {sep,[{text,"\rin the module"}],0,false},
               {text,[3,42,109,42]},
               {sep,
                [{text,
                  [14,97,110,100,32,119,105,116,104,32,97,114,105,116,121]}],
                0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  [19,105,115,32,111,102,116,101,110,32,100,101,110,111,116,
                   101,100,32,97,115]}],
                0,false},
               {text,[7,42,109,58,102,47,78,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\bA clause"}],0,false},
               {text,"\b**body**"},
               {sep,
                [{text,
                  "=consists of a sequence of expressions separated by comma (,):"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [18,10,69,120,112,114,49,44,10,46,46,46,44,10,69,120,112,114,
                 78]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "=Valid Erlang expressions and guard sequences are described in"}],
                0,false},
               {text,
                [26,91,69,120,112,114,101,115,115,105,111,110,115,93,40,101,
                 120,112,114,101,115,115,105,111,110,115,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "§\nfact(N) when N>0 ->  % first clause head\n    N * fact(N-1);   % first clause body\n\nfact(0) ->           % second clause head\n    1.               % second clause body"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [23,60,97,32,110,97,109,101,61,34,101,118,97,108,34,62,101,118,97,
          108,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,70,117,110,99,116,105,111,110,32,69,118,97,108,
             117,97,116,105,111,110]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [15,87,104,101,110,32,97,32,102,117,110,99,116,105,111,
                   110]}],
                0,false},
               {text,[7,42,109,58,102,47,78,42]},
               {sep,
                [{text,
                  "Zis called, first the code for the function is located. If the function cannot be found, an"}],
                0,false},
               {text,[7,42,117,110,100,101,102,42]},
               {sep,
                [{text,
                  "rruntime error occurs. Notice that the function must be exported to be visible outside the module it is defined in."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [147,73,102,32,116,104,101,32,102,117,110,99,116,105,111,110,
                 32,105,115,32,102,111,117,110,100,44,32,116,104,101,32,102,
                 117,110,99,116,105,111,110,32,99,108,97,117,115,101,115,32,
                 97,114,101,32,115,99,97,110,110,101,100,32,115,101,113,117,
                 101,110,116,105,97,108,108,121,32,117,110,116,105,108,32,97,
                 32,99,108,97,117,115,101,32,105,115,32,102,111,117,110,100,
                 32,116,104,97,116,32,102,117,108,102,105,108,108,115,32,98,
                 111,116,104,32,111,102,32,116,104,101,32,102,111,108,108,111,
                 119,105,110,103,32,116,119,111,32,99,111,110,100,105,116,105,
                 111,110,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {text,
            "XThe patterns in the clause head can be successfully matched against the given arguments."}],
          0,false},
         {sep,
          [{text,[1,42]},{text,"$The guard sequence, if any, is true."}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#If such a clause cannot be found, a"}],0,false},
               {text,
                [17,42,102,117,110,99,116,105,111,110,95,99,108,97,117,115,
                 101,42]},
               {sep,
                [{text,
                  [21,114,117,110,116,105,109,101,32,101,114,114,111,114,32,
                   111,99,99,117,114,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "¸If such a clause is found, the corresponding clause body is evaluated. That is, the expressions in the body are evaluated sequentially and the value of the last expression is returned."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [21,67,111,110,115,105,100,101,114,32,116,104,101,32,102,
                   117,110,99,116,105,111,110]}],
                0,false},
               {text,[6,42,102,97,99,116,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Y\n-module(m).\n-export([fact/1]).\n\nfact(N) when N>0 ->\n    N * fact(N-1);\nfact(0) ->\n    1."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "6Assume that you want to calculate the factorial for 1:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,[4,10,49,62,32]},{text,"\nm:fact(1)."}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"2Evaluation starts at the first clause. The pattern"}],
                0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  "Dis matched against argument 1. The matching succeeds and the guard ("}],
                0,false},
               {text,[5,42,78,62,48,42]},
               {sep,
                [{text,
                  [15,41,32,105,115,32,116,114,117,101,44,32,116,104,117,
                   115]}],
                0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  "7is bound to 1, and the corresponding body is evaluated:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[1,10]},
               {text,"\rN * fact(N-1)"},
               {text,
                [22,32,61,62,32,40,78,32,105,115,32,98,111,117,110,100,32,116,
                 111,32,49,41,10]},
               {text,"\v1 * fact(0)"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[4,78,111,119,44]}],0,false},
               {text,"\t*fact(0)*"},
               {sep,
                [{text,
                  "Vis called, and the function clauses are scanned sequentially again. First, the pattern"}],
                0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  "<is matched against 0. The matching succeeds, but the guard ("}],
                0,false},
               {text,[5,42,78,62,48,42]},
               {sep,
                [{text,
                  "h) is false. Second, the pattern 0 is matched against 0. The matching succeeds and the body is evaluated:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[1,10]},
               {text,"\v1 * fact(0)"},
               {text,[4,32,61,62,10]},
               {text,[5,49,32,42,32,49]},
               {text,[4,32,61,62,10]},
               {text,[1,49]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [26,69,118,97,108,117,97,116,105,111,110,32,104,97,115,32,
                   115,117,99,99,101,101,100,32,97,110,100]}],
                0,false},
               {text,"\v*m:fact(1)*"},
               {sep,[{text,"\nreturns 1."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,"\n*m:fact/1*"},
               {sep,
                [{text,
                  "Gis called with a negative number as argument, no clause head matches. A"}],
                0,false},
               {text,
                [17,42,102,117,110,99,116,105,111,110,95,99,108,97,117,115,
                 101,42]},
               {sep,
                [{text,
                  [21,114,117,110,116,105,109,101,32,101,114,114,111,114,32,
                   111,99,99,117,114,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,84,97,105,108,32,114,101,99,117,114,115,105,
             111,110]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "?If the last expression of a function body is a function call, a"}],
                0,false},
               {text,
                [18,42,42,116,97,105,108,32,114,101,99,117,114,115,105,118,
                 101,42,42]},
               {sep,
                [{text,
                  "®call is done. This is to ensure that no system resources, for example, call stack, are consumed. This means that an infinite loop can be done if it uses tail-recursive calls."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "6\nloop(N) ->\n    io:format(\"~w~n\", [N]),\n    loop(N+1)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [155,84,104,101,32,101,97,114,108,105,101,114,32,102,97,99,
                   116,111,114,105,97,108,32,101,120,97,109,112,108,101,32,99,
                   97,110,32,97,99,116,32,97,115,32,97,32,99,111,117,110,116,
                   101,114,45,101,120,97,109,112,108,101,46,32,73,116,32,105,
                   115,32,110,111,116,32,116,97,105,108,45,114,101,99,117,114,
                   115,105,118,101,44,32,115,105,110,99,101,32,97,32,109,117,
                   108,116,105,112,108,105,99,97,116,105,111,110,32,105,115,
                   32,100,111,110,101,32,111,110,32,116,104,101,32,114,101,
                   115,117,108,116,32,111,102,32,116,104,101,32,114,101,99,
                   117,114,115,105,118,101,32,99,97,108,108,32,116,111]}],
                0,false},
               {text,"\v*fact(N-1)*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [30,35,35,35,35,32,66,117,105,108,116,45,73,110,32,70,117,110,99,
             116,105,111,110,115,32,40,66,73,70,115,41]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "£BIFs are implemented in C code in the runtime system. BIFs do things that are difficult or impossible to implement in Erlang. Most of the BIFs belong to the module"}],
                0,false},
               {text,"\b*erlang*"},
               {sep,
                [{text,
                  "Ebut there are also BIFs belonging to a few other modules, for example"}],
                0,false},
               {text,[7,42,108,105,115,116,115,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[5,42,101,116,115,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(The most commonly used BIFs belonging to"}],
                0,false},
               {text,"\v*erlang(3)*"},
               {sep,[{text,[3,97,114,101]}],0,false},
               {text,
                [17,42,42,97,117,116,111,45,105,109,112,111,114,116,101,100,
                 42,42]},
               {sep,
                [{text,
                  "m. They do not need to be prefixed with the module name. Which BIFs that are auto-imported is specified in the"}],
                0,false},
               {text,
                [21,91,101,114,108,97,110,103,40,51,41,93,40,46,47,101,114,
                 108,97,110,103,41]},
               {sep,
                [{text,
                  "?module in ERTS. For example, standard-type conversion BIFs like"}],
                0,false},
               {text,[14,42,97,116,111,109,95,116,111,95,108,105,115,116,42]},
               {sep,
                [{text,
                  "Land BIFs allowed in guards can be called without specifying the module name."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [20,116,117,112,108,101,95,115,105,122,101,40,123,97,44,98,44,
                 99,125,41,46]},
               {text,[6,10,51,10,50,62,32]},
               {text,
                [23,97,116,111,109,95,116,111,95,108,105,115,116,40,39,69,114,
                 108,97,110,103,39,41,46]},
               {text,"\t\n\"Erlang\""}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "hNotice that it is normally the set of auto-imported BIFs that are referred to when talking about 'BIFs'."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [29,35,35,35,35,32,84,104,101,32,69,114,108,97,110,103,32,84,121,
             112,101,32,76,97,110,103,117,97,103,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÎErlang is a dynamically typed language. Still, it comes with a notation for declaring sets of Erlang terms to form a particular type. This effectively forms specific subtypes of the set of all Erlang terms."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "|Subsequently, these types can be used to specify types of record fields and also the argument and return types of functions."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"/Type information can be used for the following:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {text,
             [31,84,111,32,100,111,99,117,109,101,110,116,32,102,117,110,99,
              116,105,111,110,32,105,110,116,101,114,102,97,99,101,115]}],
           0,false},
          {sep,
           [{text,[1,42]},
            {text,
             "ETo provide more information for bug detection tools, such as Dialyzer"}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {text,
            "kTo be exploited by documentation tools, such as EDoc, for generating program documentation of various forms"}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "pIt is expected that the type language described in this section supersedes and replaces the purely comment-based"}],
                0,false},
               {text,[7,42,64,116,121,112,101,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[7,42,64,115,112,101,99,42]},
               {sep,
                [{text,
                  [26,100,101,99,108,97,114,97,116,105,111,110,115,32,117,115,
                   101,100,32,98,121,32,69,68,111,99,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,"\e<a name=\"syntax\">syntax</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\e#### Types and their Syntax"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "rTypes describe sets of Erlang terms. Types consist of, and are built from, a set of predefined types, for example,"}],
                0,false},
               {text,"\v*integer()*"},
               {sep,[{text,[1,44]}],0,false},
               {text,"\b*atom()*"},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[7,42,112,105,100,40,41,42]},
               {sep,
                [{text,
                  "u. Predefined types represent a typically infinite set of Erlang terms that belong to this type. For example, the type"}],
                0,false},
               {text,"\b*atom()*"},
               {sep,[{text,"$denotes the set of all Erlang atoms."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "TFor integers and atoms, it is allowed for singleton types; for example, the integers"}],
                0,false},
               {text,[4,42,45,49,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[4,42,52,50,42]},
               {sep,
                [{text,
                  [14,44,32,111,114,32,116,104,101,32,97,116,111,109,115]}],
                0,false},
               {text,[7,42,39,102,111,111,39,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[7,42,39,98,97,114,39,42]},
               {sep,
                [{text,
                  [300,46,32,65,108,108,32,111,116,104,101,114,32,116,121,112,
                   101,115,32,97,114,101,32,98,117,105,108,116,32,117,115,105,
                   110,103,32,117,110,105,111,110,115,32,111,102,32,101,105,
                   116,104,101,114,32,112,114,101,100,101,102,105,110,101,100,
                   32,116,121,112,101,115,32,111,114,32,115,105,110,103,108,
                   101,116,111,110,32,116,121,112,101,115,46,32,73,110,32,97,
                   32,116,121,112,101,32,117,110,105,111,110,32,98,101,116,
                   119,101,101,110,32,97,32,116,121,112,101,32,97,110,100,32,
                   111,110,101,32,111,102,32,105,116,115,32,115,117,98,116,
                   121,112,101,115,44,32,116,104,101,32,115,117,98,116,121,
                   112,101,32,105,115,32,97,98,115,111,114,98,101,100,32,98,
                   121,32,116,104,101,32,115,117,112,101,114,116,121,112,101,
                   46,32,84,104,117,115,44,32,116,104,101,32,117,110,105,111,
                   110,32,105,115,32,116,104,101,110,32,116,114,101,97,116,
                   101,100,32,97,115,32,105,102,32,116,104,101,32,115,117,98,
                   116,121,112,101,32,119,97,115,32,110,111,116,32,97,32,99,
                   111,110,115,116,105,116,117,101,110,116,32,111,102,32,116,
                   104,101,32,117,110,105,111,110,46,32,70,111,114,32,101,120,
                   97,109,112,108,101,44,32,116,104,101,32,116,121,112,101,32,
                   117,110,105,111,110,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"!  atom() | 'bar' | integer() | 42"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"2describes the same set of terms as the type union:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [20,32,32,97,116,111,109,40,41,32,124,32,105,110,116,101,103,
                 101,114,40,41]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "gBecause of subtype relations that exist between types, types form a lattice where the top-most element,"}],
                0,false},
               {text,[7,42,97,110,121,40,41,42]},
               {sep,
                [{text,
                  "B, denotes the set of all Erlang terms and the bottom-most element,"}],
                0,false},
               {text,"\b*none()*"},
               {sep,[{text,"!, denotes the empty set of terms."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "=The set of predefined types and the syntax for types follows:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [2350,10,32,32,84,121,112,101,32,58,58,32,97,110,121,40,41,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,37,37,32,84,
                 104,101,32,116,111,112,32,116,121,112,101,44,32,116,104,101,
                 32,115,101,116,32,111,102,32,97,108,108,32,69,114,108,97,110,
                 103,32,116,101,114,109,115,10,32,32,32,32,32,32,32,32,124,32,
                 110,111,110,101,40,41,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,37,37,32,84,104,101,32,98,111,116,116,111,109,32,
                 116,121,112,101,44,32,99,111,110,116,97,105,110,115,32,110,
                 111,32,116,101,114,109,115,10,32,32,32,32,32,32,32,32,124,32,
                 112,105,100,40,41,10,32,32,32,32,32,32,32,32,124,32,112,111,
                 114,116,40,41,10,32,32,32,32,32,32,32,32,124,32,114,101,102,
                 101,114,101,110,99,101,40,41,10,32,32,32,32,32,32,32,32,124,
                 32,91,93,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,37,37,32,110,105,108,10,32,32,32,32,32,32,32,32,124,
                 32,65,116,111,109,10,32,32,32,32,32,32,32,32,124,32,66,105,
                 116,115,116,114,105,110,103,10,32,32,32,32,32,32,32,32,124,
                 32,102,108,111,97,116,40,41,10,32,32,32,32,32,32,32,32,124,
                 32,70,117,110,10,32,32,32,32,32,32,32,32,124,32,73,110,116,
                 101,103,101,114,10,32,32,32,32,32,32,32,32,124,32,76,105,115,
                 116,10,32,32,32,32,32,32,32,32,124,32,77,97,112,10,32,32,32,
                 32,32,32,32,32,124,32,84,117,112,108,101,10,32,32,32,32,32,
                 32,32,32,124,32,85,110,105,111,110,10,32,32,32,32,32,32,32,
                 32,124,32,85,115,101,114,68,101,102,105,110,101,100,32,32,32,
                 32,32,32,32,32,32,32,32,37,37,32,100,101,115,99,114,105,98,
                 101,100,32,105,110,32,84,121,112,101,32,68,101,99,108,97,114,
                 97,116,105,111,110,115,32,111,102,32,85,115,101,114,45,68,
                 101,102,105,110,101,100,32,84,121,112,101,115,10,10,32,32,65,
                 116,111,109,32,58,58,32,97,116,111,109,40,41,10,32,32,32,32,
                 32,32,32,32,124,32,69,114,108,97,110,103,95,65,116,111,109,
                 32,32,32,32,32,32,32,32,32,32,32,37,37,32,39,102,111,111,39,
                 44,32,39,98,97,114,39,44,32,46,46,46,10,10,32,32,66,105,116,
                 115,116,114,105,110,103,32,58,58,32,60,60,62,62,10,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,124,32,60,60,95,58,77,62,62,32,
                 32,32,32,32,32,32,32,32,32,37,37,32,77,32,105,115,32,97,110,
                 32,73,110,116,101,103,101,114,95,86,97,108,117,101,32,116,
                 104,97,116,32,101,118,97,108,117,97,116,101,115,32,116,111,
                 32,97,32,112,111,115,105,116,105,118,101,32,105,110,116,101,
                 103,101,114,10,32,32,32,32,32,32,32,32,32,32,32,32,32,124,32,
                 60,60,95,58,95,42,78,62,62,32,32,32,32,32,32,32,32,37,37,32,
                 78,32,105,115,32,97,110,32,73,110,116,101,103,101,114,95,86,
                 97,108,117,101,32,116,104,97,116,32,101,118,97,108,117,97,
                 116,101,115,32,116,111,32,97,32,112,111,115,105,116,105,118,
                 101,32,105,110,116,101,103,101,114,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,124,32,60,60,95,58,77,44,32,95,58,95,42,78,
                 62,62,10,10,32,32,70,117,110,32,58,58,32,102,117,110,40,41,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,37,37,
                 32,97,110,121,32,102,117,110,99,116,105,111,110,10,32,32,32,
                 32,32,32,32,124,32,102,117,110,40,40,46,46,46,41,32,45,62,32,
                 84,121,112,101,41,32,32,32,32,32,37,37,32,97,110,121,32,97,
                 114,105,116,121,44,32,114,101,116,117,114,110,105,110,103,32,
                 84,121,112,101,10,32,32,32,32,32,32,32,124,32,102,117,110,40,
                 40,41,32,45,62,32,84,121,112,101,41,10,32,32,32,32,32,32,32,
                 124,32,102,117,110,40,40,84,76,105,115,116,41,32,45,62,32,84,
                 121,112,101,41,10,10,32,32,73,110,116,101,103,101,114,32,58,
                 58,32,105,110,116,101,103,101,114,40,41,10,32,32,32,32,32,32,
                 32,32,32,32,32,124,32,73,110,116,101,103,101,114,95,86,97,
                 108,117,101,10,32,32,32,32,32,32,32,32,32,32,32,124,32,73,
                 110,116,101,103,101,114,95,86,97,108,117,101,46,46,73,110,
                 116,101,103,101,114,95,86,97,108,117,101,32,32,32,32,32,32,
                 37,37,32,115,112,101,99,105,102,105,101,115,32,97,110,32,105,
                 110,116,101,103,101,114,32,114,97,110,103,101,10,10,32,32,73,
                 110,116,101,103,101,114,95,86,97,108,117,101,32,58,58,32,69,
                 114,108,97,110,103,95,73,110,116,101,103,101,114,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,37,37,32,46,46,46,44,32,45,49,
                 44,32,48,44,32,49,44,32,46,46,46,32,52,50,32,46,46,46,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,124,32,69,
                 114,108,97,110,103,95,67,104,97,114,97,99,116,101,114,32,32,
                 32,32,32,32,32,32,32,32,32,32,37,37,32,36,97,44,32,36,98,32,
                 46,46,46,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,124,32,73,110,116,101,103,101,114,95,86,97,108,117,101,32,
                 66,105,110,97,114,121,79,112,32,73,110,116,101,103,101,114,
                 95,86,97,108,117,101,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,124,32,85,110,97,114,121,79,112,32,73,110,116,
                 101,103,101,114,95,86,97,108,117,101,10,10,32,32,66,105,110,
                 97,114,121,79,112,32,58,58,32,39,42,39,32,124,32,39,100,105,
                 118,39,32,124,32,39,114,101,109,39,32,124,32,39,98,97,110,
                 100,39,32,124,32,39,43,39,32,124,32,39,45,39,32,124,32,39,98,
                 111,114,39,32,124,32,39,98,120,111,114,39,32,124,32,39,98,
                 115,108,39,32,124,32,39,98,115,114,39,10,10,32,32,85,110,97,
                 114,121,79,112,32,58,58,32,39,43,39,32,124,32,39,45,39,32,
                 124,32,39,98,110,111,116,39,10,10,32,32,76,105,115,116,32,58,
                 58,32,108,105,115,116,40,84,121,112,101,41,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,37,37,32,80,114,111,112,101,114,32,108,105,115,116,32,40,
                 91,93,45,116,101,114,109,105,110,97,116,101,100,41,10,32,32,
                 32,32,32,32,32,32,124,32,109,97,121,98,101,95,105,109,112,
                 114,111,112,101,114,95,108,105,115,116,40,84,121,112,101,49,
                 44,32,84,121,112,101,50,41,32,32,32,32,37,37,32,84,121,112,
                 101,49,61,99,111,110,116,101,110,116,115,44,32,84,121,112,
                 101,50,61,116,101,114,109,105,110,97,116,105,111,110,10,32,
                 32,32,32,32,32,32,32,124,32,110,111,110,101,109,112,116,121,
                 95,105,109,112,114,111,112,101,114,95,108,105,115,116,40,84,
                 121,112,101,49,44,32,84,121,112,101,50,41,32,37,37,32,84,121,
                 112,101,49,32,97,110,100,32,84,121,112,101,50,32,97,115,32,
                 97,98,111,118,101,10,32,32,32,32,32,32,32,32,124,32,110,111,
                 110,101,109,112,116,121,95,108,105,115,116,40,84,121,112,101,
                 41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,37,
                 37,32,80,114,111,112,101,114,32,110,111,110,45,101,109,112,
                 116,121,32,108,105,115,116,10,10,32,32,77,97,112,32,58,58,32,
                 109,97,112,40,41,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,37,
                 37,32,100,101,110,111,116,101,115,32,97,32,109,97,112,32,111,
                 102,32,97,110,121,32,115,105,122,101,10,32,32,32,32,32,32,32,
                 124,32,35,123,125,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,37,37,32,100,101,110,111,116,101,115,32,116,104,101,32,
                 101,109,112,116,121,32,109,97,112,10,32,32,32,32,32,32,32,
                 124,32,35,123,65,115,115,111,99,105,97,116,105,111,110,76,
                 105,115,116,125,10,10,32,32,84,117,112,108,101,32,58,58,32,
                 116,117,112,108,101,40,41,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,37,37,
                 32,100,101,110,111,116,101,115,32,97,32,116,117,112,108,101,
                 32,111,102,32,97,110,121,32,115,105,122,101,10,32,32,32,32,
                 32,32,32,32,32,124,32,123,125,10,32,32,32,32,32,32,32,32,32,
                 124,32,123,84,76,105,115,116,125,10,10,32,32,65,115,115,111,
                 99,105,97,116,105,111,110,76,105,115,116,32,58,58,32,65,115,
                 115,111,99,105,97,116,105,111,110,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,124,32,65,115,115,111,99,
                 105,97,116,105,111,110,44,32,65,115,115,111,99,105,97,116,
                 105,111,110,76,105,115,116,10,10,32,32,65,115,115,111,99,105,
                 97,116,105,111,110,32,58,58,32,84,121,112,101,32,58,61,32,84,
                 121,112,101,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,37,37,32,100,101,110,111,116,101,115,32,97,32,109,97,
                 110,100,97,116,111,114,121,32,97,115,115,111,99,105,97,116,
                 105,111,110,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 124,32,84,121,112,101,32,61,62,32,84,121,112,101,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,37,37,32,100,101,
                 110,111,116,101,115,32,97,110,32,111,112,116,105,111,110,97,
                 108,32,97,115,115,111,99,105,97,116,105,111,110,10,10,32,32,
                 84,76,105,115,116,32,58,58,32,84,121,112,101,10,32,32,32,32,
                 32,32,32,32,32,124,32,84,121,112,101,44,32,84,76,105,115,116,
                 10,10,32,32,85,110,105,111,110,32,58,58,32,84,121,112,101,49,
                 32,124,32,84,121,112,101,50,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÚInteger values are either integer or character literals or expressions consisting of possibily nested unary or binary operations that evaluate to an integer. Such expressions can also be used in bit strings and ranges."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\"The general form of bit strings is"}],0,false},
               {text,[16,42,60,60,95,58,77,44,32,95,58,95,42,78,62,62,42]},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,[3,42,77,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  "Cmust evaluate to positive integers. It denotes a bit string that is"}],
                0,false},
               {text,"\v*M + (k*N)*"},
               {sep,
                [{text,"1bits long (that is, a bit string that starts with"}],
                0,false},
               {text,[3,42,77,42]},
               {sep,
                [{text,
                  [23,98,105,116,115,32,97,110,100,32,99,111,110,116,105,110,
                   117,101,115,32,119,105,116,104]}],
                0,false},
               {text,[3,42,107,42]},
               {sep,[{text,"\vsegments of"}],0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  [16,98,105,116,115,32,101,97,99,104,44,32,119,104,101,114,
                   101]}],
                0,false},
               {text,[3,42,107,42]},
               {sep,
                [{text,"*is also a positive integer). The notations"}],
                0,false},
               {text,"\v*<<_:_*N>>*"},
               {sep,[{text,[1,44]}],0,false},
               {text,"\t*<<_:M>>*"},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[6,42,60,60,62,62,42]},
               {sep,
                [{text,",are convenient shorthands for the cases that"}],
                0,false},
               {text,[3,42,77,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  [20,44,32,111,114,32,98,111,116,104,44,32,97,114,101,32,122,
                   101,114,111,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "NBecause lists are commonly used, they have shorthand type notations. The types"}],
                0,false},
               {text,"\t*list(T)*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,
                [18,42,110,111,110,101,109,112,116,121,95,108,105,115,116,40,
                 84,41,42]},
               {sep,
                [{text,
                  [19,104,97,118,101,32,116,104,101,32,115,104,111,114,116,
                   104,97,110,100,115]}],
                0,false},
               {text,[5,42,91,84,93,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\t*[T,...]*"},
               {sep,
                [{text,
                  "F, respectively. The only difference between the two shorthands is that"}],
                0,false},
               {text,[5,42,91,84,93,42]},
               {sep,
                [{text,
                  [24,99,97,110,32,98,101,32,97,110,32,101,109,112,116,121,32,
                   108,105,115,116,32,98,117,116]}],
                0,false},
               {text,"\t*[T,...]*"},
               {sep,[{text,[7,99,97,110,110,111,116,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,78,111,116,105,99,101,32,116,104,97,116,32,116,104,101,
                   32,115,104,111,114,116,104,97,110,100,32,102,111,114]}],
                0,false},
               {text,"\b*list()*"},
               {sep,
                [{text,
                  "3, that is, the list of elements of unknown type, is"}],
                0,false},
               {text,[5,42,91,95,93,42]},
               {sep,[{text,[3,40,111,114]}],0,false},
               {text,"\t*[any()]*"},
               {sep,[{text,[6,41,44,32,110,111,116]}],0,false},
               {text,[4,42,91,93,42]},
               {sep,
                [{text,
                  [14,46,32,84,104,101,32,110,111,116,97,116,105,111,110]}],
                0,false},
               {text,[4,42,91,93,42]},
               {sep,
                [{text,"0specifies the singleton type for the empty list."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text," The general form of map types is"}],0,false},
               {text,
                [20,42,35,123,65,115,115,111,99,105,97,116,105,111,110,76,105,
                 115,116,125,42]},
               {sep,
                [{text,
                  [18,46,32,84,104,101,32,107,101,121,32,116,121,112,101,115,
                   32,105,110]}],
                0,false},
               {text,
                [17,42,65,115,115,111,99,105,97,116,105,111,110,76,105,115,
                 116,42]},
               {sep,
                [{text,
                  "qare allowed to overlap, and if they do, the leftmost association takes precedence. A map association has a key in"}],
                0,false},
               {text,
                [17,42,65,115,115,111,99,105,97,116,105,111,110,76,105,115,
                 116,42]},
               {sep,[{text,"\eif it belongs to this type."}],0,false},
               {text,
                [17,42,65,115,115,111,99,105,97,116,105,111,110,76,105,115,
                 116,42]},
               {sep,
                [{text,
                  "îcan contain both mandatory and optional association types. If an association type is mandatory, an association with that type is to be present. In the case of an optional association type it is not required for the key type to be present."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"+Notice that the syntactic representation of"}],
                0,false},
               {text,[7,42,109,97,112,40,41,42]},
               {sep,[{text,[2,105,115]}],0,false},
               {text,
                [19,42,35,123,97,110,121,40,41,32,61,62,32,97,110,121,40,41,
                 125,42]},
               {sep,[{text,[3,40,111,114]}],0,false},
               {text,"\v*#{_ => _}*"},
               {sep,[{text,[6,41,44,32,110,111,116]}],0,false},
               {text,[5,42,35,123,125,42]},
               {sep,
                [{text,
                  [14,46,32,84,104,101,32,110,111,116,97,116,105,111,110]}],
                0,false},
               {text,[5,42,35,123,125,42]},
               {sep,
                [{text,"/specifies the singleton type for the empty map."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [142,70,111,114,32,99,111,110,118,101,110,105,101,110,99,101,
                 44,32,116,104,101,32,102,111,108,108,111,119,105,110,103,32,
                 116,121,112,101,115,32,97,114,101,32,97,108,115,111,32,98,
                 117,105,108,116,45,105,110,46,32,84,104,101,121,32,99,97,110,
                 32,98,101,32,116,104,111,117,103,104,116,32,97,115,32,112,
                 114,101,100,101,102,105,110,101,100,32,97,108,105,97,115,101,
                 115,32,102,111,114,32,116,104,101,32,116,121,112,101,32,117,
                 110,105,111,110,115,32,97,108,115,111,32,115,104,111,119,110,
                 32,105,110,32,116,104,101,32,116,97,98,108,101,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÄIn addition, the following three built-in types exist and can be thought as defined below, though strictly their \"type definition\" is not valid syntax according to the type language defined above."}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "¯Users are not allowed to define types with the same names as the predefined or built-in ones. This is checked by the compiler and its violation results in a compilation error."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "sThe following built-in list types also exist, but they are expected to be rarely used. Hence, they have long names:"}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "£\n  nonempty_maybe_improper_list() :: nonempty_maybe_improper_list(any(), any())\n  nonempty_improper_list(Type1, Type2)\n  nonempty_maybe_improper_list(Type1, Type2)"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "Iwhere the last two types define the set of Erlang terms one would expect."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "qAlso for convenience, record notation is allowed to be used. Records are shorthands for the corresponding tuples:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "<\n  Record :: #Erlang_Atom{}\n          | #Erlang_Atom{Fields}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ORecords are extended to possibly contain type information. This is described in"}],
                0,false},
               {text,
                "9[Type Information in Record Declarations](#typeinrecords)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,",#### Type Declarations of User-Defined Types"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "kAs seen, the basic syntax of a type is an atom followed by closed parentheses. New types are declared using"}],
                0,false},
               {text,[7,42,45,116,121,112,101,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\t*-opaque*"},
               {sep,
                [{text,
                  [31,97,116,116,114,105,98,117,116,101,115,32,97,115,32,105,
                   110,32,116,104,101,32,102,111,108,108,111,119,105,110,103,
                   58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "D\n  -type my_struct_type() :: Type.\n  -opaque my_opaq_type() :: Type."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [25,84,104,101,32,116,121,112,101,32,110,97,109,101,32,105,
                   115,32,116,104,101,32,97,116,111,109]}],
                0,false},
               {text,
                [16,42,109,121,95,115,116,114,117,99,116,95,116,121,112,101,
                 42]},
               {sep,
                [{text,
                  [26,44,32,102,111,108,108,111,119,101,100,32,98,121,32,112,
                   97,114,101,110,116,104,101,115,101,115,46]}],
                0,false},
               {text,[6,42,84,121,112,101,42]},
               {sep,
                [{text,
                  "Kis a type as defined in the previous section. A current restriction is that"}],
                0,false},
               {text,[6,42,84,121,112,101,42]},
               {sep,
                [{text,
                  "[can contain only predefined types, or user-defined types which are either of the following:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {text,
            "WModule-local type, that is, with a definition that is present in the code of the module"}],
          0,false},
         {sep,
          [{text,[1,42]},
           {text,
            "\\Remote type, that is, type defined in, and exported by, other modules; more about this soon."}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÈFor module-local types, the restriction that their definition exists in the module is enforced by the compiler and results in a compilation error. (A similar restriction currently exists for records.)"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [311,84,121,112,101,32,100,101,99,108,97,114,97,116,105,111,
                 110,115,32,99,97,110,32,97,108,115,111,32,98,101,32,112,97,
                 114,97,109,101,116,101,114,105,122,101,100,32,98,121,32,105,
                 110,99,108,117,100,105,110,103,32,116,121,112,101,32,118,97,
                 114,105,97,98,108,101,115,32,98,101,116,119,101,101,110,32,
                 116,104,101,32,112,97,114,101,110,116,104,101,115,101,115,46,
                 32,84,104,101,32,115,121,110,116,97,120,32,111,102,32,116,
                 121,112,101,32,118,97,114,105,97,98,108,101,115,32,105,115,
                 32,116,104,101,32,115,97,109,101,32,97,115,32,69,114,108,97,
                 110,103,32,118,97,114,105,97,98,108,101,115,44,32,116,104,97,
                 116,32,105,115,44,32,115,116,97,114,116,115,32,119,105,116,
                 104,32,97,110,32,117,112,112,101,114,45,99,97,115,101,32,108,
                 101,116,116,101,114,46,32,78,97,116,117,114,97,108,108,121,
                 44,32,116,104,101,115,101,32,118,97,114,105,97,98,108,101,
                 115,32,99,97,110,32,45,32,97,110,100,32,105,115,32,116,111,
                 32,45,32,97,112,112,101,97,114,32,111,110,32,116,104,101,32,
                 82,72,83,32,111,102,32,116,104,101,32,100,101,102,105,110,
                 105,116,105,111,110,46,32,65,32,99,111,110,99,114,101,116,
                 101,32,101,120,97,109,112,108,101,32,102,111,108,108,111,119,
                 115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"+\n  -type orddict(Key, Val) :: [{Key, Val}]."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "\\A module can export some types to declare that other modules are allowed to refer to them as"}],
                0,false},
               {text,
                [16,42,42,114,101,109,111,116,101,32,116,121,112,101,115,42,
                 42]},
               {sep,
                [{text,"*. This declaration has the following form:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"%\n  -export_type([T1/A1, ..., Tk/Ak])."}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "OHere the Ti's are atoms (the name of the type) and the Ai's are their arguments"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"/\n  -export_type([my_struct_type/0, orddict/2])."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"2Assuming that these types are exported from module"}],
                0,false},
               {text,[7,42,39,109,111,100,39,42]},
               {sep,
                [{text,
                  "\\, you can refer to them from other modules using remote type expressions like the following:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "5\n  mod:my_struct_type()\n  mod:orddict(atom(), term())"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "FIt is not allowed to refer to types that are not declared as exported."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [17,84,121,112,101,115,32,100,101,99,108,97,114,101,100,32,
                   97,115]}],
                0,false},
               {text,"\b*opaque*"},
               {sep,
                [{text,
                  [353,114,101,112,114,101,115,101,110,116,32,115,101,116,115,
                   32,111,102,32,116,101,114,109,115,32,119,104,111,115,101,
                   32,115,116,114,117,99,116,117,114,101,32,105,115,32,110,
                   111,116,32,115,117,112,112,111,115,101,100,32,116,111,32,
                   98,101,32,118,105,115,105,98,108,101,32,102,114,111,109,32,
                   111,117,116,115,105,100,101,32,111,102,32,116,104,101,105,
                   114,32,100,101,102,105,110,105,110,103,32,109,111,100,117,
                   108,101,46,32,84,104,97,116,32,105,115,44,32,111,110,108,
                   121,32,116,104,101,32,109,111,100,117,108,101,32,100,101,
                   102,105,110,105,110,103,32,116,104,101,109,32,105,115,32,
                   97,108,108,111,119,101,100,32,116,111,32,100,101,112,101,
                   110,100,32,111,110,32,116,104,101,105,114,32,116,101,114,
                   109,32,115,116,114,117,99,116,117,114,101,46,32,67,111,110,
                   115,101,113,117,101,110,116,108,121,44,32,115,117,99,104,
                   32,116,121,112,101,115,32,100,111,32,110,111,116,32,109,97,
                   107,101,32,109,117,99,104,32,115,101,110,115,101,32,97,115,
                   32,109,111,100,117,108,101,32,108,111,99,97,108,32,45,32,
                   109,111,100,117,108,101,32,108,111,99,97,108,32,116,121,
                   112,101,115,32,97,114,101,32,110,111,116,32,97,99,99,101,
                   115,115,105,98,108,101,32,98,121,32,111,116,104,101,114,32,
                   109,111,100,117,108,101,115,32,97,110,121,119,97,121,32,45,
                   32,97,110,100,32,105,115,32,97,108,119,97,121,115,32,116,
                   111,32,98,101,32,101,120,112,111,114,116,101,100,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,")<a name=\"typeinrecords\">typeinrecords</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,",#### Type Information in Record Declarations"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "pThe types of record fields can be specified in the declaration of the record. The syntax for this is as follows:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "<\n  -record(rec, {field1 :: Type1, field2, field3 :: Type3})."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [130,70,111,114,32,102,105,101,108,100,115,32,119,105,116,104,
                 111,117,116,32,116,121,112,101,32,97,110,110,111,116,97,116,
                 105,111,110,115,44,32,116,104,101,105,114,32,116,121,112,101,
                 32,100,101,102,97,117,108,116,115,32,116,111,32,97,110,121,
                 40,41,46,32,84,104,97,116,32,105,115,44,32,116,104,101,32,
                 112,114,101,118,105,111,117,115,32,101,120,97,109,112,108,
                 101,32,105,115,32,97,32,115,104,111,114,116,104,97,110,100,
                 32,102,111,114,32,116,104,101,32,102,111,108,108,111,119,105,
                 110,103,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "E\n  -record(rec, {field1 :: Type1, field2 :: any(), field3 :: Type3})."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "mIn the presence of initial values for fields, the type must be declared after the initialization, as follows:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "F\n  -record(rec, {field1 = [] :: Type1, field2, field3 = 42 :: Type3})."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÆThe initial values for fields are to be compatible with (that is, a member of) the corresponding types. This is checked by the compiler and results in a compilation error if a violation is detected."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "KBefore Erlang/OTP 19, for fields without initial values, the singleton type"}],
                           0,false},
                          {text,"\r*'undefined'*"},
                          {sep,
                           [{text,
                             "mwas added to all declared types. In other words, the following two record declarations had identical effects:"}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {above,
                       {above,
                        {text,[3,96,96,96]},
                        {sep,
                         [{text,
                           [257,10,32,32,45,114,101,99,111,114,100,40,114,101,
                            99,44,32,123,102,49,32,61,32,52,50,32,58,58,32,
                            105,110,116,101,103,101,114,40,41,44,10,32,32,32,
                            32,32,32,32,32,32,32,32,32,32,32,32,32,102,50,32,
                            32,32,32,32,32,58,58,32,102,108,111,97,116,40,41,
                            44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                            32,32,102,51,32,32,32,32,32,32,58,58,32,39,97,39,
                            32,124,32,39,98,39,125,41,46,10,10,32,32,45,114,
                            101,99,111,114,100,40,114,101,99,44,32,123,102,49,
                            32,61,32,52,50,32,58,58,32,105,110,116,101,103,
                            101,114,40,41,44,10,32,32,32,32,32,32,32,32,32,32,
                            32,32,32,32,32,32,102,50,32,32,32,32,32,32,58,58,
                            32,39,117,110,100,101,102,105,110,101,100,39,32,
                            124,32,102,108,111,97,116,40,41,44,10,32,32,32,32,
                            32,32,32,32,32,32,32,32,32,32,32,32,102,51,32,32,
                            32,32,32,32,58,58,32,39,117,110,100,101,102,105,
                            110,101,100,39,32,124,32,39,97,39,32,124,32,39,98,
                            39,125,41,46]}],
                         0,true}},
                       {text,[3,96,96,96]}},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "*This is no longer the case. If you require"}],
                           0,false},
                          {text,"\r*'undefined'*"},
                          {sep,
                           [{text,
                             "]in your record field type, you must explicitly add it to the typespec, as in the 2nd example."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "oAny record, containing type information or not, once defined, can be used as a type using the following syntax:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,{text,[3,96,96,96]},{sep,[{text,"\b  #rec{}"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [135,73,110,32,97,100,100,105,116,105,111,110,44,32,116,104,
                 101,32,114,101,99,111,114,100,32,102,105,101,108,100,115,32,
                 99,97,110,32,98,101,32,102,117,114,116,104,101,114,32,115,
                 112,101,99,105,102,105,101,100,32,119,104,101,110,32,117,115,
                 105,110,103,32,97,32,114,101,99,111,114,100,32,116,121,112,
                 101,32,98,121,32,97,100,100,105,110,103,32,116,121,112,101,
                 32,105,110,102,111,114,109,97,116,105,111,110,32,97,98,111,
                 117,116,32,116,104,101,32,102,105,101,108,100,32,97,115,32,
                 102,111,108,108,111,119,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [26,32,32,35,114,101,99,123,115,111,109,101,95,102,105,101,
                 108,100,32,58,58,32,84,121,112,101,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "WAny unspecified fields are assumed to have the type in the original record declaration."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"!#### Specifications for Functions"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "?A specification (or contract) for a function is given using the"}],
                0,false},
               {text,[7,42,45,115,112,101,99,42]},
               {sep,
                [{text,",attribute. The general format is as follows:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "@\n  -spec Module:Function(ArgType1, ..., ArgTypeN) -> ReturnType."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "^The arity of the function must match the number of arguments, else a compilation error occurs."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÎThis form can also be used in header files (.hrl) to declare type information for exported functions. Then these header files can be included in files that (implicitly or explicitly) import these functions."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "FWithin a given module, the following shorthand suffices in most cases:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "9\n  -spec Function(ArgType1, ..., ArgTypeN) -> ReturnType."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                ">Also, for documentation purposes, argument names can be given:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "C\n  -spec Function(ArgName1 :: Type1, ..., ArgNameN :: TypeN) -> RT."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "jA function specification can be overloaded. That is, it can have several types, separated by a semicolon ("}],
                0,false},
               {text,[3,42,59,42]},
               {sep,[{text,[2,41,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "5\n  -spec foo(T1, T2) -> T3\n         ; (T4, T5) -> T6."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÔA current restriction, which currently results in a warning (not an error) by the compiler, is that the domains of the argument types cannot overlap. For example, the following specification results in a warning:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Q\n  -spec foo(pos_integer()) -> pos_integer()\n         ; (integer()) -> integer()."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÑType variables can be used in specifications to specify relations for the input and output arguments of a function. For example, the following specification defines the type of a polymorphic identity function:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [20,10,32,32,45,115,112,101,99,32,105,100,40,88,41,32,45,62,
                 32,88,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÀNotice that the above specification does not restrict the input and output type in any way. These types can be constrained by guard-like subtype constraints and provide bounded quantification:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"%  -spec id(X) -> X when X :: tuple()."}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [14,67,117,114,114,101,110,116,108,121,44,32,116,104,101]}],
                0,false},
               {text,[4,42,58,58,42]},
               {sep,
                [{text,
                  [19,99,111,110,115,116,114,97,105,110,116,32,40,114,101,97,
                   100,32,97,115]}],
                0,false},
               {sep,
                [{text,
                  [17,194,171,105,115,32,97,32,115,117,98,116,121,112,101,32,
                   111,102]}],
                0,false},
               {sep,
                [{text,
                  "8Â») is the only guard constraint that can be used in the"}],
                0,false},
               {text,[6,42,119,104,101,110,42]},
               {sep,[{text,"\tpart of a"}],0,false},
               {text,[7,42,45,115,112,101,99,42]},
               {sep,[{text,"\nattribute."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "ÊThe above function specification uses multiple occurrences of the same type variable. That provides more type information than the following function specification, where the type variables are missing:"}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {above,
                       {above,
                        {text,[3,96,96,96]},
                        {sep,
                         [{text,
                           [31,32,32,45,115,112,101,99,32,105,100,40,116,117,
                            112,108,101,40,41,41,32,45,62,32,116,117,112,108,
                            101,40,41,46]}],
                         0,true}},
                       {text,[3,96,96,96]}},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "sThe latter specification says that the function takes some tuple and returns some tuple. The specification with the"}],
                           0,false},
                          {text,[3,42,88,42]},
                          {sep,
                           [{text,
                             "Ctype variable specifies that the function takes a tuple and returns"}],
                           0,false},
                          {text,"\f**the same**"},
                          {sep,[{text,[6,116,117,112,108,101,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [132,72,111,119,101,118,101,114,44,32,105,116,32,
                            105,115,32,117,112,32,116,111,32,116,104,101,32,
                            116,111,111,108,115,32,116,104,97,116,32,112,114,
                            111,99,101,115,115,32,116,104,101,32,115,112,101,
                            99,105,102,105,99,97,116,105,111,110,115,32,116,
                            111,32,99,104,111,111,115,101,32,119,104,101,116,
                            104,101,114,32,116,111,32,116,97,107,101,32,116,
                            104,105,115,32,101,120,116,114,97,32,105,110,102,
                            111,114,109,97,116,105,111,110,32,105,110,116,111,
                            32,97,99,99,111,117,110,116,32,111,114,32,110,111,
                            116,46]}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [14,84,104,101,32,115,99,111,112,101,32,111,102,32,97]}],
                0,false},
               {text,[4,42,58,58,42]},
               {sep,
                [{text,
                  [17,99,111,110,115,116,114,97,105,110,116,32,105,115,32,116,
                   104,101]}],
                0,false},
               {text,
                [18,42,40,46,46,46,41,32,45,62,32,82,101,116,84,121,112,101,
                 42]},
               {sep,
                [{text,
                  "Ãspecification after which it appears. To avoid confusion, it is suggested that different variables are used in different constituents of an overloaded contract, as shown in the following example:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "\\\n  -spec foo({X, integer()}) -> X when X :: atom()\n         ; ([Y]) -> Y when Y :: number()."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                " Some functions in Erlang are not meant to return; either because they define servers or because they are used to throw exceptions, as in the following function:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,".  my_error(Err) -> erlang:throw({error, Err})."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "8For such functions, it is recommended to use the special"}],
                0,false},
               {text,"\r*no_return()*"},
               {sep,
                [{text,
                  "Btype for their \"return\", through a contract of the following form:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"(  -spec my_error(term()) -> no_return()."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [318,73,110,32,116,104,105,115,32,115,101,99,116,105,111,110,44,
               32,97,108,108,32,118,97,108,105,100,32,69,114,108,97,110,103,
               32,101,120,112,114,101,115,115,105,111,110,115,32,97,114,101,
               32,108,105,115,116,101,100,46,32,87,104,101,110,32,119,114,105,
               116,105,110,103,32,69,114,108,97,110,103,32,112,114,111,103,
               114,97,109,115,44,32,105,116,32,105,115,32,97,108,115,111,32,
               97,108,108,111,119,101,100,32,116,111,32,117,115,101,32,109,97,
               99,114,111,45,32,97,110,100,32,114,101,99,111,114,100,32,101,
               120,112,114,101,115,115,105,111,110,115,46,32,72,111,119,101,
               118,101,114,44,32,116,104,101,115,101,32,101,120,112,114,101,
               115,115,105,111,110,115,32,97,114,101,32,101,120,112,97,110,
               100,101,100,32,100,117,114,105,110,103,32,99,111,109,112,105,
               108,97,116,105,111,110,32,97,110,100,32,97,114,101,32,105,110,
               32,116,104,97,116,32,115,101,110,115,101,32,110,111,116,32,116,
               114,117,101,32,69,114,108,97,110,103,32,101,120,112,114,101,
               115,115,105,111,110,115,46,32,77,97,99,114,111,45,32,97,110,
               100,32,114,101,99,111,114,100,32,101,120,112,114,101,115,115,
               105,111,110,115,32,97,114,101,32,99,111,118,101,114,101,100,32,
               105,110,32,115,101,112,97,114,97,116,101,32,115,101,99,116,105,
               111,110,115,58]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [22,91,80,114,101,112,114,111,99,101,115,115,111,114,93,40,109,97,
             99,114,111,115,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [18,91,82,101,99,111,114,100,115,93,40,114,101,99,111,114,100,115,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [26,35,35,35,35,32,69,120,112,114,101,115,115,105,111,110,32,69,
             118,97,108,117,97,116,105,111,110]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [148,65,108,108,32,115,117,98,101,120,112,114,101,115,115,105,
                 111,110,115,32,97,114,101,32,101,118,97,108,117,97,116,101,
                 100,32,98,101,102,111,114,101,32,97,110,32,101,120,112,114,
                 101,115,115,105,111,110,32,105,116,115,101,108,102,32,105,
                 115,32,101,118,97,108,117,97,116,101,100,44,32,117,110,108,
                 101,115,115,32,101,120,112,108,105,99,105,116,108,121,32,115,
                 116,97,116,101,100,32,111,116,104,101,114,119,105,115,101,46,
                 32,70,111,114,32,101,120,97,109,112,108,101,44,32,99,111,110,
                 115,105,100,101,114,32,116,104,101,32,101,120,112,114,101,
                 115,115,105,111,110,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[14,10,69,120,112,114,49,32,43,32,69,120,112,114,50]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[7,42,69,120,112,114,49,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[7,42,69,120,112,114,50,42]},
               {sep,
                [{text,
                  "d, which are also expressions, are evaluated first - in any order - before the addition is performed."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "²Many of the operators can only be applied to arguments of a certain type. For example, arithmetic operators can only be applied to numbers. An argument of the wrong type causes a"}],
                0,false},
               {text,"\b*badarg*"},
               {sep,
                [{text,
                  [14,114,117,110,116,105,109,101,32,101,114,114,111,114,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [23,60,97,32,110,97,109,101,61,34,116,101,114,109,34,62,116,101,114,
          109,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\n#### Terms"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [141,84,104,101,32,115,105,109,112,108,101,115,116,32,102,111,
                 114,109,32,111,102,32,101,120,112,114,101,115,115,105,111,
                 110,32,105,115,32,97,32,116,101,114,109,44,32,116,104,97,116,
                 32,105,115,32,97,110,32,105,110,116,101,103,101,114,44,32,
                 102,108,111,97,116,44,32,97,116,111,109,44,32,115,116,114,
                 105,110,103,44,32,108,105,115,116,44,32,109,97,112,44,32,111,
                 114,32,116,117,112,108,101,46,32,84,104,101,32,114,101,116,
                 117,114,110,32,118,97,108,117,101,32,105,115,32,116,104,101,
                 32,116,101,114,109,32,105,116,115,101,108,102,46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[14,35,35,35,35,32,86,97,114,105,97,98,108,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [143,65,32,118,97,114,105,97,98,108,101,32,105,115,32,97,110,
                 32,101,120,112,114,101,115,115,105,111,110,46,32,73,102,32,
                 97,32,118,97,114,105,97,98,108,101,32,105,115,32,98,111,117,
                 110,100,32,116,111,32,97,32,118,97,108,117,101,44,32,116,104,
                 101,32,114,101,116,117,114,110,32,118,97,108,117,101,32,105,
                 115,32,116,104,105,115,32,118,97,108,117,101,46,32,85,110,98,
                 111,117,110,100,32,118,97,114,105,97,98,108,101,115,32,97,
                 114,101,32,111,110,108,121,32,97,108,108,111,119,101,100,32,
                 105,110,32,112,97,116,116,101,114,110,115,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "yVariables start with an uppercase letter or underscore (_). Variables can contain alphanumeric characters, underscore and"}],
                0,false},
               {text,[3,42,64,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"+\nX\nName1\nPhoneNumber\nPhone_number\n_\n_Height"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#Variables are bound to values using"}],0,false},
               {text,
                [28,91,112,97,116,116,101,114,110,32,109,97,116,99,104,105,
                 110,103,93,40,112,97,116,116,101,114,110,115,41]},
               {sep,[{text,"\r. Erlang uses"}],0,false},
               {text,
                [21,42,42,115,105,110,103,108,101,32,97,115,115,105,103,110,
                 109,101,110,116,42,42]},
               {sep,
                [{text,"-, that is, a variable can only be bound once."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,
                [22,42,42,97,110,111,110,121,109,111,117,115,32,118,97,114,
                 105,97,98,108,101,42,42]},
               {sep,
                [{text,
                  "fis denoted by underscore (_) and can be used when a variable is required but its value can be ignored."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[16,10,91,72,124,95,93,32,61,32,91,49,44,50,44,51,93]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "4Variables starting with underscore (_), for example,"}],
                0,false},
               {text,"\t*_Height*"},
               {sep,
                [{text,
                  [153,44,32,97,114,101,32,110,111,114,109,97,108,32,118,97,
                   114,105,97,98,108,101,115,44,32,110,111,116,32,97,110,111,
                   110,121,109,111,117,115,46,32,84,104,101,121,32,97,114,101,
                   32,104,111,119,101,118,101,114,32,105,103,110,111,114,101,
                   100,32,98,121,32,116,104,101,32,99,111,109,112,105,108,101,
                   114,32,105,110,32,116,104,101,32,115,101,110,115,101,32,
                   116,104,97,116,32,116,104,101,121,32,100,111,32,110,111,
                   116,32,103,101,110,101,114,97,116,101,32,97,110,121,32,119,
                   97,114,110,105,110,103,115,32,102,111,114,32,117,110,117,
                   115,101,100,32,118,97,114,105,97,98,108,101,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [19,84,104,101,32,102,111,108,108,111,119,105,110,103,32,99,
                 111,100,101,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [25,10,109,101,109,98,101,114,40,95,44,32,91,93,41,32,45,62,
                 10,32,32,32,32,91,93,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"%can be rewritten to be more readable:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [28,10,109,101,109,98,101,114,40,69,108,101,109,44,32,91,93,
                 41,32,45,62,10,32,32,32,32,91,93,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"-This causes a warning for an unused variable,"}],
                0,false},
               {text,[6,42,69,108,101,109,42]},
               {sep,
                [{text,"', if the code is compiled with the flag"}],
                0,false},
               {text,
                [18,42,119,97,114,110,95,117,110,117,115,101,100,95,118,97,
                 114,115,42]},
               {sep,
                [{text,"+set. Instead, the code can be rewritten to:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [29,10,109,101,109,98,101,114,40,95,69,108,101,109,44,32,91,
                 93,41,32,45,62,10,32,32,32,32,91,93,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "XNotice that since variables starting with an underscore are not anonymous, this matches:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[14,10,123,95,44,95,125,32,61,32,123,49,44,50,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [15,66,117,116,32,116,104,105,115,32,102,97,105,108,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [16,10,123,95,78,44,95,78,125,32,61,32,123,49,44,50,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "RThe scope for a variable is its function clause. Variables bound in a branch of an"}],
                0,false},
               {text,[4,42,105,102,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[6,42,99,97,115,101,42]},
               {sep,[{text,[4,44,32,111,114]}],0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,
                  [144,101,120,112,114,101,115,115,105,111,110,32,109,117,115,
                   116,32,98,101,32,98,111,117,110,100,32,105,110,32,97,108,
                   108,32,98,114,97,110,99,104,101,115,32,116,111,32,104,97,
                   118,101,32,97,32,118,97,108,117,101,32,111,117,116,115,105,
                   100,101,32,116,104,101,32,101,120,112,114,101,115,115,105,
                   111,110,46,32,79,116,104,101,114,119,105,115,101,32,116,
                   104,101,121,32,97,114,101,32,114,101,103,97,114,100,101,
                   100,32,97,115,32,39,117,110,115,97,102,101,39,32,111,117,
                   116,115,105,100,101,32,116,104,101,32,101,120,112,114,101,
                   115,115,105,111,110,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[7,70,111,114,32,116,104,101]}],0,false},
               {text,[5,42,116,114,121,42]},
               {sep,
                [{text,
                  "|expression variable scoping is limited so that variables bound in the expression are always 'unsafe' outside the expression."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [29,60,97,32,110,97,109,101,61,34,112,97,116,116,101,114,110,34,62,
          112,97,116,116,101,114,110,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\r#### Patterns"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "MA pattern has the same structure as a term but can contain unbound variables."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"\e\nName1\n[H|T]\n{error,Reason}"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"%Patterns are allowed in clause heads,"}],0,false},
               {text,[6,42,99,97,115,101,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\t*receive*"},
               {sep,[{text,"#expressions, and match expressions."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text,"!#### Match Operator = in Patterns"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[2,73,102]}],0,false},
                 {text,"\n*Pattern1*"},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,"\n*Pattern2*"},
                 {sep,
                  [{text,
                    ":are valid patterns, the following is also a valid pattern:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [20,10,80,97,116,116,101,114,110,49,32,61,32,80,97,116,116,
                   101,114,110,50]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"!When matched against a term, both"}],0,false},
                 {text,"\n*Pattern1*"},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,"\n*Pattern2*"},
                 {sep,
                  [{text,
                    "_are matched against the term. The idea behind this feature is to avoid reconstruction of terms."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [128,10,102,40,123,99,111,110,110,101,99,116,44,70,114,111,
                   109,44,84,111,44,78,117,109,98,101,114,44,79,112,116,105,
                   111,110,115,125,44,32,84,111,41,32,45,62,10,32,32,32,32,83,
                   105,103,110,97,108,32,61,32,123,99,111,110,110,101,99,116,
                   44,70,114,111,109,44,84,111,44,78,117,109,98,101,114,44,79,
                   112,116,105,111,110,115,125,44,10,32,32,32,32,46,46,46,59,
                   10,102,40,83,105,103,110,97,108,44,32,84,111,41,32,45,62,
                   10,32,32,32,32,105,103,110,111,114,101,46]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [25,99,97,110,32,105,110,115,116,101,97,100,32,98,101,32,
                   119,114,105,116,116,101,110,32,97,115]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "L\nf({connect,_,To,_,_} = Signal, To) ->\n    ...;\nf(Signal, To) ->\n    ignore."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [30,35,35,35,35,32,83,116,114,105,110,103,32,80,114,101,102,105,
               120,32,105,110,32,80,97,116,116,101,114,110,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "8When matching strings, the following is a valid pattern:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [26,10,102,40,34,112,114,101,102,105,120,34,32,43,43,32,83,
                   116,114,41,32,45,62,32,46,46,46]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "?This is syntactic sugar for the equivalent, but harder to read:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,[{text,"$\nf([$p,$r,$e,$f,$i,$x | Str]) -> ..."}],0,true}},
              {text,[3,96,96,96]}},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [28,35,35,35,35,32,69,120,112,114,101,115,115,105,111,110,115,
               32,105,110,32,80,97,116,116,101,114,110,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "gAn arithmetic expression can be used within a pattern if it meets both of the following two conditions:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {sep,
            [{text,[1,42]},
             {text,"*It uses only numeric or bitwise operators."}],
            0,false},
           {sep,
            [{text,[1,42]},
             {text,
              "7Its value can be evaluated to a constant when complied."}],
            0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "6\ncase {Value, Result} of\n    {?THRESHOLD+1, ok} -> ..."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\n#### Match"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [21,84,104,101,32,102,111,108,108,111,119,105,110,103,32,
                   109,97,116,99,104,101,115]}],
                0,false},
               {text,[7,42,69,120,112,114,49,42]},
               {sep,
                [{text,
                  [20,44,32,97,32,112,97,116,116,101,114,110,44,32,97,103,97,
                   105,110,115,116]}],
                0,false},
               {text,[7,42,69,120,112,114,50,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[14,10,69,120,112,114,49,32,61,32,69,120,112,114,50]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "\\If the matching succeeds, any unbound variable in the pattern becomes bound and the value of"}],
                0,false},
               {text,[7,42,69,120,112,114,50,42]},
               {sep,[{text,"\fis returned."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,73,102,32,116,104,101,32,109,97,116,99,104,105,110,103,
                   32,102,97,105,108,115,44,32,97]}],
                0,false},
               {text,"\n*badmatch*"},
               {sep,
                [{text,
                  [22,114,117,110,45,116,105,109,101,32,101,114,114,111,114,
                   32,111,99,99,117,114,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [22,123,65,44,32,66,125,32,61,32,123,97,110,115,119,101,114,
                 44,32,52,50,125,46]},
               {text,
                [16,10,123,97,110,115,119,101,114,44,52,50,125,10,50,62,32]},
               {text,[2,65,46]},
               {text,"\v\nanswer\n3> "},
               {text,[16,123,67,44,32,68,125,32,61,32,91,49,44,32,50,93,46]},
               {text,
                "<\n** exception error: no match of right-hand side value [1,2]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [25,60,97,32,110,97,109,101,61,34,99,97,108,108,115,34,62,99,97,108,
          108,115,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,70,117,110,99,116,105,111,110,32,67,97,108,108,
             115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "4\nExprF(Expr1,...,ExprN)\nExprM:ExprF(Expr1,...,ExprN)"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"$In the first form of function calls,"}],0,false},
               {text,
                [30,42,69,120,112,114,77,58,69,120,112,114,70,40,69,120,112,
                 114,49,44,46,46,46,44,69,120,112,114,78,41,42]},
               {sep,[{text,"\t, each of"}],0,false},
               {text,[7,42,69,120,112,114,77,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[7,42,69,120,112,114,70,42]},
               {sep,
                [{text,
                  "jmust be an atom or an expression that evaluates to an atom. The function is said to be called by using the"}],
                0,false},
               {text,"!**fully qualified function name**"},
               {sep,[{text," . This is often referred to as a"}],0,false},
               {text,"\n**remote**"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [26,42,42,101,120,116,101,114,110,97,108,32,102,117,110,99,
                 116,105,111,110,32,99,97,108,108,42,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [31,10,108,105,115,116,115,58,107,101,121,115,101,97,114,99,
                 104,40,78,97,109,101,44,32,49,44,32,76,105,115,116,41]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"%In the second form of function calls,"}],0,false},
               {text,
                [24,42,69,120,112,114,70,40,69,120,112,114,49,44,46,46,46,44,
                 69,120,112,114,78,41,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[7,42,69,120,112,114,70,42]},
               {sep,
                [{text,"%must be an atom or evaluate to a fun."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,[7,42,69,120,112,114,70,42]},
               {sep,
                [{text,
                  ":is an atom, the function is said to be called by using the"}],
                0,false},
               {text,"&**implicitly qualified function name**"},
               {sep,
                [{text,
                  [17,46,32,73,102,32,116,104,101,32,102,117,110,99,116,105,
                   111,110]}],
                0,false},
               {text,[7,42,69,120,112,114,70,42]},
               {sep,
                [{text,
                  "3is locally defined, it is called. Alternatively, if"}],
                0,false},
               {text,[7,42,69,120,112,114,70,42]},
               {sep,
                [{text,
                  [31,105,115,32,101,120,112,108,105,99,105,116,108,121,32,
                   105,109,112,111,114,116,101,100,32,102,114,111,109,32,116,
                   104,101]}],
                0,false},
               {text,[3,42,77,42]},
               {sep,[{text,[7,109,111,100,117,108,101,44]}],0,false},
               {text,
                [26,42,77,58,69,120,112,114,70,40,69,120,112,114,49,44,46,46,
                 46,44,69,120,112,114,78,41,42]},
               {sep,[{text,"\ris called. If"}],0,false},
               {text,[7,42,69,120,112,114,70,42]},
               {sep,
                [{text,
                  "4is neither declared locally nor explicitly imported,"}],
                0,false},
               {text,[7,42,69,120,112,114,70,42]},
               {sep,
                [{text,"2must be the name of an automatically imported BIF."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"&\nhandle(Msg, State)\nspawn(m, init, [])"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\f**Examples**"},
               {sep,[{text,[5,119,104,101,114,101]}],0,false},
               {text,[7,42,69,120,112,114,70,42]},
               {sep,[{text,"\tis a fun:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [25,70,117,110,49,32,61,32,102,117,110,40,88,41,32,45,62,32,
                 88,43,49,32,101,110,100,44]},
               {text,[1,10]},
               {text,"\bFun1(3)."},
               {text,[6,10,52,10,50,62,32]},
               {text,"!fun lists:append/2([1,2], [3,4])."},
               {text,[14,10,91,49,44,50,44,51,44,52,93,10,51,62,32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÁNotice that when calling a local function, there is a difference between using the implicitly or fully qualified function name. The latter always refers to the latest version of the module. See"}],
                0,false},
               {text,",[Compilation and Code Loading](code_loading)"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"'[Function Evaluation](./functions#eval)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              ";#### Local Function Names Clashing With  Auto-Imported BIFs"},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "óIf a local function has the same name as an auto-imported BIF, the semantics is that implicitly qualified function calls are directed to the locally defined function, not to the BIF. To avoid confusion, there is a compiler directive available,"}],
                  0,false},
                 {text,"\"*-compile({no_auto_import,[F/A]})*"},
                 {sep,
                  [{text,
                    "i, that makes a BIF not being auto-imported. In certain situations, such a compile-directive is mandatory."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,
                [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,
                 110,105,110,103,34]},
               {sep,
                [{text,[4,32,32,32,32]},
                 {sep,
                  [{sep,
                    [{above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             [367,66,101,102,111,114,101,32,79,84,80,32,82,49,
                              52,65,32,40,69,82,84,83,32,118,101,114,115,105,
                              111,110,32,53,46,56,41,44,32,97,110,32,105,109,
                              112,108,105,99,105,116,108,121,32,113,117,97,
                              108,105,102,105,101,100,32,102,117,110,99,116,
                              105,111,110,32,99,97,108,108,32,116,111,32,97,
                              32,102,117,110,99,116,105,111,110,32,104,97,118,
                              105,110,103,32,116,104,101,32,115,97,109,101,32,
                              110,97,109,101,32,97,115,32,97,110,32,97,117,
                              116,111,45,105,109,112,111,114,116,101,100,32,
                              66,73,70,32,97,108,119,97,121,115,32,114,101,
                              115,117,108,116,101,100,32,105,110,32,116,104,
                              101,32,66,73,70,32,98,101,105,110,103,32,99,97,
                              108,108,101,100,46,32,73,110,32,110,101,119,101,
                              114,32,118,101,114,115,105,111,110,115,32,111,
                              102,32,116,104,101,32,99,111,109,112,105,108,
                              101,114,44,32,116,104,101,32,108,111,99,97,108,
                              32,102,117,110,99,116,105,111,110,32,105,115,32,
                              99,97,108,108,101,100,32,105,110,115,116,101,97,
                              100,46,32,84,104,105,115,32,105,115,32,116,111,
                              32,97,118,111,105,100,32,116,104,97,116,32,102,
                              117,116,117,114,101,32,97,100,100,105,116,105,
                              111,110,115,32,116,111,32,116,104,101,32,115,
                              101,116,32,111,102,32,97,117,116,111,45,105,109,
                              112,111,114,116,101,100,32,66,73,70,115,32,100,
                              111,32,110,111,116,32,115,105,108,101,110,116,
                              108,121,32,99,104,97,110,103,101,32,116,104,101,
                              32,98,101,104,97,118,105,111,114,32,111,102,32,
                              111,108,100,32,99,111,100,101,46]}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             [523,72,111,119,101,118,101,114,44,32,116,111,32,
                              97,118,111,105,100,32,116,104,97,116,32,111,108,
                              100,32,40,112,114,101,32,82,49,52,41,32,99,111,
                              100,101,32,99,104,97,110,103,101,100,32,105,116,
                              115,32,98,101,104,97,118,105,111,114,32,119,104,
                              101,110,32,99,111,109,112,105,108,101,100,32,
                              119,105,116,104,32,79,84,80,32,118,101,114,115,
                              105,111,110,32,82,49,52,65,32,111,114,32,108,97,
                              116,101,114,44,32,116,104,101,32,102,111,108,
                              108,111,119,105,110,103,32,114,101,115,116,114,
                              105,99,116,105,111,110,32,97,112,112,108,105,
                              101,115,58,32,73,102,32,121,111,117,32,111,118,
                              101,114,114,105,100,101,32,116,104,101,32,110,
                              97,109,101,32,111,102,32,97,32,66,73,70,32,116,
                              104,97,116,32,119,97,115,32,97,117,116,111,45,
                              105,109,112,111,114,116,101,100,32,105,110,32,
                              79,84,80,32,118,101,114,115,105,111,110,115,32,
                              112,114,105,111,114,32,116,111,32,82,49,52,65,
                              32,40,69,82,84,83,32,118,101,114,115,105,111,
                              110,32,53,46,56,41,32,97,110,100,32,104,97,118,
                              101,32,97,110,32,105,109,112,108,105,99,105,116,
                              108,121,32,113,117,97,108,105,102,105,101,100,
                              32,99,97,108,108,32,116,111,32,116,104,97,116,
                              32,102,117,110,99,116,105,111,110,32,105,110,32,
                              121,111,117,114,32,99,111,100,101,44,32,121,111,
                              117,32,101,105,116,104,101,114,32,110,101,101,
                              100,32,116,111,32,101,120,112,108,105,99,105,
                              116,108,121,32,114,101,109,111,118,101,32,116,
                              104,101,32,97,117,116,111,45,105,109,112,111,
                              114,116,32,117,115,105,110,103,32,97,32,99,111,
                              109,112,105,108,101,114,32,100,105,114,101,99,
                              116,105,118,101,44,32,111,114,32,114,101,112,
                              108,97,99,101,32,116,104,101,32,99,97,108,108,
                              32,119,105,116,104,32,97,32,102,117,108,108,121,
                              32,113,117,97,108,105,102,105,101,100,32,102,
                              117,110,99,116,105,111,110,32,99,97,108,108,46,
                              32,79,116,104,101,114,119,105,115,101,32,121,
                              111,117,32,103,101,116,32,97,32,99,111,109,112,
                              105,108,97,116,105,111,110,32,101,114,114,111,
                              114,46,32,83,101,101,32,116,104,101,32,102,111,
                              108,108,111,119,105,110,103,32,101,120,97,109,
                              112,108,101,58]}],
                           0,false}],
                         0,true},
                        null},
                       null}}],
                    0,false}],
                  0,true}],
                0,false}},
              {text,[0]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [336,10,45,101,120,112,111,114,116,40,91,108,101,110,103,
                   116,104,47,49,44,102,47,49,93,41,46,10,10,45,99,111,109,
                   112,105,108,101,40,123,110,111,95,97,117,116,111,95,105,
                   109,112,111,114,116,44,91,108,101,110,103,116,104,47,49,93,
                   125,41,46,32,37,32,101,114,108,97,110,103,58,108,101,110,
                   103,116,104,47,49,32,110,111,32,108,111,110,103,101,114,32,
                   97,117,116,111,105,109,112,111,114,116,101,100,10,10,108,
                   101,110,103,116,104,40,91,93,41,32,45,62,10,32,32,32,32,48,
                   59,10,108,101,110,103,116,104,40,91,72,124,84,93,41,32,45,
                   62,10,32,32,32,32,49,32,43,32,108,101,110,103,116,104,40,
                   84,41,46,32,37,37,32,67,97,108,108,115,32,116,104,101,32,
                   108,111,99,97,108,32,102,117,110,99,116,105,111,110,32,108,
                   101,110,103,116,104,47,49,10,10,102,40,88,41,32,119,104,
                   101,110,32,101,114,108,97,110,103,58,108,101,110,103,116,
                   104,40,88,41,32,62,32,51,32,45,62,32,37,37,32,67,97,108,
                   108,115,32,101,114,108,97,110,103,58,108,101,110,103,116,
                   104,47,49,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,37,37,32,119,104,105,99,104,32,105,115,32,97,108,108,
                   111,119,101,100,32,105,110,32,103,117,97,114,100,115,10,32,
                   32,32,32,108,111,110,103,46]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "ëThe same logic applies to explicitly imported functions from other modules, as to locally defined functions. It is not allowed to both import a function from another module and have the function declared in the module at the same time:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [398,10,45,101,120,112,111,114,116,40,91,102,47,49,93,41,46,
                   10,10,45,99,111,109,112,105,108,101,40,123,110,111,95,97,
                   117,116,111,95,105,109,112,111,114,116,44,91,108,101,110,
                   103,116,104,47,49,93,125,41,46,32,37,32,101,114,108,97,110,
                   103,58,108,101,110,103,116,104,47,49,32,110,111,32,108,111,
                   110,103,101,114,32,97,117,116,111,105,109,112,111,114,116,
                   101,100,10,10,45,105,109,112,111,114,116,40,109,111,100,44,
                   91,108,101,110,103,116,104,47,49,93,41,46,10,10,102,40,88,
                   41,32,119,104,101,110,32,101,114,108,97,110,103,58,108,101,
                   110,103,116,104,40,88,41,32,62,32,51,51,32,45,62,32,37,37,
                   32,67,97,108,108,115,32,101,114,108,97,110,103,58,108,101,
                   110,103,116,104,47,49,44,10,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,37,37,32,119,104,105,99,104,32,105,115,
                   32,97,108,108,111,119,101,100,32,105,110,32,103,117,97,114,
                   100,115,10,10,32,32,32,32,101,114,108,97,110,103,58,108,
                   101,110,103,116,104,40,88,41,59,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,37,37,32,69,120,112,108,105,99,105,116,32,
                   99,97,108,108,32,116,111,32,101,114,108,97,110,103,58,108,
                   101,110,103,116,104,32,105,110,32,98,111,100,121,10,10,102,
                   40,88,41,32,45,62,10,32,32,32,32,108,101,110,103,116,104,
                   40,88,41,46,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,37,37,32,109,111,100,58,108,101,110,103,
                   116,104,47,49,32,105,115,32,99,97,108,108,101,100]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [159,70,111,114,32,97,117,116,111,45,105,109,112,111,114,
                     116,101,100,32,66,73,70,115,32,97,100,100,101,100,32,105,
                     110,32,69,114,108,97,110,103,47,79,84,80,32,82,49,52,65,
                     32,97,110,100,32,116,104,101,114,101,97,102,116,101,114,
                     44,32,111,118,101,114,114,105,100,105,110,103,32,116,104,
                     101,32,110,97,109,101,32,119,105,116,104,32,97,32,108,
                     111,99,97,108,32,102,117,110,99,116,105,111,110,32,111,
                     114,32,101,120,112,108,105,99,105,116,32,105,109,112,111,
                     114,116,32,105,115,32,97,108,119,97,121,115,32,97,108,
                     108,111,119,101,100,46,32,72,111,119,101,118,101,114,44,
                     32,105,102,32,116,104,101]}],
                  0,false},
                 {text,"!*-compile({no_auto_import,[F/A])*"},
                 {sep,
                  [{text,
                    [144,100,105,114,101,99,116,105,118,101,32,105,115,32,110,
                     111,116,32,117,115,101,100,44,32,116,104,101,32,99,111,
                     109,112,105,108,101,114,32,105,115,115,117,101,115,32,97,
                     32,119,97,114,110,105,110,103,32,119,104,101,110,101,118,
                     101,114,32,116,104,101,32,102,117,110,99,116,105,111,110,
                     32,105,115,32,99,97,108,108,101,100,32,105,110,32,116,
                     104,101,32,109,111,100,117,108,101,32,117,115,105,110,
                     103,32,116,104,101,32,105,109,112,108,105,99,105,116,108,
                     121,32,113,117,97,108,105,102,105,101,100,32,102,117,110,
                     99,116,105,111,110,32,110,97,109,101,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,[7,35,35,35,35,32,73,102]},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "O\nif\n    GuardSeq1 ->\n        Body1;\n    ...;\n    GuardSeqN ->\n        BodyN\nend"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [18,84,104,101,32,98,114,97,110,99,104,101,115,32,111,102,
                   32,97,110]}],
                0,false},
               {text,[4,42,105,102,42]},
               {sep,
                [{text,
                  ";-expression are scanned sequentially until a guard sequence"}],
                0,false},
               {text,"\n*GuardSeq*"},
               {sep,
                [{text,
                  "7that evaluates to true is found. Then the corresponding"}],
                0,false},
               {text,[6,42,66,111,100,121,42]},
               {sep,
                [{text,
                  "8(sequence of expressions separated by ',') is evaluated."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                   101,32,111,102]}],
                0,false},
               {text,[6,42,66,111,100,121,42]},
               {sep,
                [{text,
                  [26,105,115,32,116,104,101,32,114,101,116,117,114,110,32,
                   118,97,108,117,101,32,111,102,32,116,104,101]}],
                0,false},
               {text,[4,42,105,102,42]},
               {sep,[{text,"\vexpression."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"-If no guard sequence is evaluated as true, an"}],
                0,false},
               {text,"\v*if_clause*"},
               {sep,
                [{text,
                  "9run-time error occurs. If necessary, the guard expression"}],
                0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,
                [{text,
                  "Fcan be used in the last branch, as that guard sequence is always true."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [135,10,105,115,95,103,114,101,97,116,101,114,95,116,104,97,
                 110,40,88,44,32,89,41,32,45,62,10,32,32,32,32,105,102,10,32,
                 32,32,32,32,32,32,32,88,62,89,32,45,62,10,32,32,32,32,32,32,
                 32,32,32,32,32,32,116,114,117,101,59,10,32,32,32,32,32,32,32,
                 32,116,114,117,101,32,45,62,32,37,32,119,111,114,107,115,32,
                 97,115,32,97,110,32,39,101,108,115,101,39,32,98,114,97,110,
                 99,104,10,32,32,32,32,32,32,32,32,32,32,32,32,102,97,108,115,
                 101,10,32,32,32,32,101,110,100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [23,60,97,32,110,97,109,101,61,34,99,97,115,101,34,62,99,97,115,101,
          60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\t#### Case"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "y\ncase Expr of\n    Pattern1 [when GuardSeq1] ->\n        Body1;\n    ...;\n    PatternN [when GuardSeqN] ->\n        BodyN\nend"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [14,84,104,101,32,101,120,112,114,101,115,115,105,111,110]}],
                0,false},
               {text,[6,42,69,120,112,114,42]},
               {sep,
                [{text,
                  [29,105,115,32,101,118,97,108,117,97,116,101,100,32,97,110,
                   100,32,116,104,101,32,112,97,116,116,101,114,110,115]}],
                0,false},
               {text,"\t*Pattern*"},
               {sep,
                [{text,
                  "`are sequentially matched against the result. If a match succeeds and the optional guard sequence"}],
                0,false},
               {text,"\n*GuardSeq*"},
               {sep,
                [{text,
                  [26,105,115,32,116,114,117,101,44,32,116,104,101,32,99,111,
                   114,114,101,115,112,111,110,100,105,110,103]}],
                0,false},
               {text,[6,42,66,111,100,121,42]},
               {sep,[{text,"\ris evaluated."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                   101,32,111,102]}],
                0,false},
               {text,[6,42,66,111,100,121,42]},
               {sep,
                [{text,
                  [26,105,115,32,116,104,101,32,114,101,116,117,114,110,32,
                   118,97,108,117,101,32,111,102,32,116,104,101]}],
                0,false},
               {text,[6,42,99,97,115,101,42]},
               {sep,[{text,"\vexpression."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "=If there is no matching pattern with a true guard sequence, a"}],
                0,false},
               {text,"\r*case_clause*"},
               {sep,
                [{text,
                  [22,114,117,110,45,116,105,109,101,32,101,114,114,111,114,
                   32,111,99,99,117,114,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Å\nis_valid_signal(Signal) ->\n    case Signal of\n        {signal, _What, _From, _To} ->\n            true;\n        {signal, _What, _To} ->\n            true;\n        _Else ->\n            false\n    end."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [23,60,97,32,110,97,109,101,61,34,115,101,110,100,34,62,115,101,110,
          100,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\t#### Send"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[14,10,69,120,112,114,49,32,33,32,69,120,112,114,50]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [18,83,101,110,100,115,32,116,104,101,32,118,97,108,117,101,
                   32,111,102]}],
                0,false},
               {text,[7,42,69,120,112,114,50,42]},
               {sep,
                [{text,"(as a message to the process specified by"}],
                0,false},
               {text,[7,42,69,120,112,114,49,42]},
               {sep,
                [{text,
                  [14,46,32,84,104,101,32,118,97,108,117,101,32,111,102]}],
                0,false},
               {text,[7,42,69,120,112,114,50,42]},
               {sep,
                [{text,"+is also the return value of the expression."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[7,42,69,120,112,114,49,42]},
               {sep,
                [{text,
                  "<must evaluate to a pid, a registered name (atom), or a tuple"}],
                0,false},
               {text,"\r*{Name,Node}*"},
               {sep,[{text,[1,46]}],0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,
                [{text,
                  [14,105,115,32,97,110,32,97,116,111,109,32,97,110,100]}],
                0,false},
               {text,[6,42,78,111,100,101,42]},
               {sep,
                [{text,
                  [29,105,115,32,97,32,110,111,100,101,32,110,97,109,101,44,
                   32,97,108,115,111,32,97,110,32,97,116,111,109,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,[2,73,102]}],0,false},
              {text,[7,42,69,120,112,114,49,42]},
              {sep,
               [{text,
                 "7evaluates to a name, but this name is not registered, a"}],
               0,false},
              {text,"\b*badarg*"},
              {sep,
               [{text,
                 [22,114,117,110,45,116,105,109,101,32,101,114,114,111,114,32,
                  111,99,99,117,114,115,46]}],
               0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {text,
             "ZSending a message to a pid never fails, even if the pid identifies a non-existing process."}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,"(Distributed message sending, that is, if"}],
              0,false},
             {text,[7,42,69,120,112,114,49,42]},
             {sep,
              [{text,
                [20,101,118,97,108,117,97,116,101,115,32,116,111,32,97,32,116,
                 117,112,108,101]}],
              0,false},
             {text,"\r*{Name,Node}*"},
             {sep,
              [{text,
                "5(or a pid located at another node), also never fails."}],
              0,false}],
            0,false}],
          0,false}}],
       0,false},
      {sep,
       [{text,
         [29,60,97,32,110,97,109,101,61,34,114,101,99,101,105,118,101,34,62,
          114,101,99,101,105,118,101,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\f#### Receive"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "t\nreceive\n    Pattern1 [when GuardSeq1] ->\n        Body1;\n    ...;\n    PatternN [when GuardSeqN] ->\n        BodyN\nend"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "OReceives messages sent to the process using the send operator (!). The patterns"}],
                0,false},
               {text,"\t*Pattern*"},
               {sep,
                [{text,
                  " are sequentially matched against the first message in time order in the mailbox, then the second, and so on. If a match succeeds and the optional guard sequence"}],
                0,false},
               {text,"\n*GuardSeq*"},
               {sep,
                [{text,
                  [26,105,115,32,116,114,117,101,44,32,116,104,101,32,99,111,
                   114,114,101,115,112,111,110,100,105,110,103]}],
                0,false},
               {text,[6,42,66,111,100,121,42]},
               {sep,
                [{text,
                  [140,105,115,32,101,118,97,108,117,97,116,101,100,46,32,84,
                   104,101,32,109,97,116,99,104,105,110,103,32,109,101,115,
                   115,97,103,101,32,105,115,32,99,111,110,115,117,109,101,
                   100,44,32,116,104,97,116,32,105,115,44,32,114,101,109,111,
                   118,101,100,32,102,114,111,109,32,116,104,101,32,109,97,
                   105,108,98,111,120,44,32,119,104,105,108,101,32,97,110,121,
                   32,111,116,104,101,114,32,109,101,115,115,97,103,101,115,
                   32,105,110,32,116,104,101,32,109,97,105,108,98,111,120,32,
                   114,101,109,97,105,110,32,117,110,99,104,97,110,103,101,
                   100,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [19,84,104,101,32,114,101,116,117,114,110,32,118,97,108,117,
                   101,32,111,102]}],
                0,false},
               {text,[6,42,66,111,100,121,42]},
               {sep,
                [{text,
                  [26,105,115,32,116,104,101,32,114,101,116,117,114,110,32,
                   118,97,108,117,101,32,111,102,32,116,104,101]}],
                0,false},
               {text,"\t*receive*"},
               {sep,[{text,"\vexpression."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\t*receive*"},
               {sep,
                [{text,
                  [152,110,101,118,101,114,32,102,97,105,108,115,46,32,84,104,
                   101,32,101,120,101,99,117,116,105,111,110,32,105,115,32,
                   115,117,115,112,101,110,100,101,100,44,32,112,111,115,115,
                   105,98,108,121,32,105,110,100,101,102,105,110,105,116,101,
                   108,121,44,32,117,110,116,105,108,32,97,32,109,101,115,115,
                   97,103,101,32,97,114,114,105,118,101,115,32,116,104,97,116,
                   32,109,97,116,99,104,101,115,32,111,110,101,32,111,102,32,
                   116,104,101,32,112,97,116,116,101,114,110,115,32,97,110,
                   100,32,119,105,116,104,32,97,32,116,114,117,101,32,103,117,
                   97,114,100,32,115,101,113,117,101,110,99,101,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "À\nwait_for_onhook() ->\n    receive\n        onhook ->\n            disconnect(),\n            idle();\n        {connect, B} ->\n            B ! {busy, self()},\n            wait_for_onhook()\n    end."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,"+expression can be augmented with a timeout:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [149,10,114,101,99,101,105,118,101,10,32,32,32,32,80,97,116,
                 116,101,114,110,49,32,91,119,104,101,110,32,71,117,97,114,
                 100,83,101,113,49,93,32,45,62,10,32,32,32,32,32,32,32,32,66,
                 111,100,121,49,59,10,32,32,32,32,46,46,46,59,10,32,32,32,32,
                 80,97,116,116,101,114,110,78,32,91,119,104,101,110,32,71,117,
                 97,114,100,83,101,113,78,93,32,45,62,10,32,32,32,32,32,32,32,
                 32,66,111,100,121,78,10,97,102,116,101,114,10,32,32,32,32,69,
                 120,112,114,84,32,45,62,10,32,32,32,32,32,32,32,32,66,111,
                 100,121,84,10,101,110,100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[7,42,69,120,112,114,84,42]},
               {sep,
                [{text,
                  "ois to evaluate to an integer. The highest allowed value is 16#FFFFFFFF, that is, the value must fit in 32 bits."}],
                0,false},
               {text,
                [16,42,114,101,99,101,105,118,101,46,46,97,102,116,101,114,
                 42]},
               {sep,
                [{text,
                  [16,119,111,114,107,115,32,101,120,97,99,116,108,121,32,97,
                   115]}],
                0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,
                  "7, except that if no matching message has arrived within"}],
                0,false},
               {text,[7,42,69,120,112,114,84,42]},
               {sep,
                [{text,
                  [18,109,105,108,108,105,115,101,99,111,110,100,115,44,32,
                   116,104,101,110]}],
                0,false},
               {text,[7,42,66,111,100,121,84,42]},
               {sep,
                [{text,")is evaluated instead. The return value of"}],
                0,false},
               {text,[7,42,66,111,100,121,84,42]},
               {sep,[{text,"$then becomes the return value of the"}],0,false},
               {text,
                [16,42,114,101,99,101,105,118,101,46,46,97,102,116,101,114,
                 42]},
               {sep,[{text,"\vexpression."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [265,10,119,97,105,116,95,102,111,114,95,111,110,104,111,111,
                 107,40,41,32,45,62,10,32,32,32,32,114,101,99,101,105,118,101,
                 10,32,32,32,32,32,32,32,32,111,110,104,111,111,107,32,45,62,
                 10,32,32,32,32,32,32,32,32,32,32,32,32,100,105,115,99,111,
                 110,110,101,99,116,40,41,44,10,32,32,32,32,32,32,32,32,32,32,
                 32,32,105,100,108,101,40,41,59,10,32,32,32,32,32,32,32,32,
                 123,99,111,110,110,101,99,116,44,32,66,125,32,45,62,10,32,32,
                 32,32,32,32,32,32,32,32,32,32,66,32,33,32,123,98,117,115,121,
                 44,32,115,101,108,102,40,41,125,44,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,119,97,105,116,95,102,111,114,95,111,110,104,
                 111,111,107,40,41,10,32,32,32,32,97,102,116,101,114,10,32,32,
                 32,32,32,32,32,32,54,48,48,48,48,32,45,62,10,32,32,32,32,32,
                 32,32,32,32,32,32,32,100,105,115,99,111,110,110,101,99,116,
                 40,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,101,114,114,
                 111,114,40,41,10,32,32,32,32,101,110,100,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,73,116,32,105,115,32,108,101,103,97,108,32,116,111,32,
                   117,115,101,32,97]}],
                0,false},
               {text,
                [16,42,114,101,99,101,105,118,101,46,46,97,102,116,101,114,
                 42]},
               {sep,
                [{text,
                  [28,101,120,112,114,101,115,115,105,111,110,32,119,105,116,
                   104,32,110,111,32,98,114,97,110,99,104,101,115,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"-\nreceive\nafter\n    ExprT ->\n        BodyT\nend"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "[This construction does not consume any messages, only suspends execution in the process for"}],
                0,false},
               {text,[7,42,69,120,112,114,84,42]},
               {sep,
                [{text,
                  ":milliseconds. This can be used to implement simple timers."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [130,10,116,105,109,101,114,40,41,32,45,62,10,32,32,32,32,115,
                 112,97,119,110,40,109,44,32,116,105,109,101,114,44,32,91,115,
                 101,108,102,40,41,93,41,46,10,10,116,105,109,101,114,40,80,
                 105,100,41,32,45,62,10,32,32,32,32,114,101,99,101,105,118,
                 101,10,32,32,32,32,97,102,116,101,114,10,32,32,32,32,32,32,
                 32,32,53,48,48,48,32,45,62,10,32,32,32,32,32,32,32,32,32,32,
                 32,32,80,105,100,32,33,32,116,105,109,101,111,117,116,10,32,
                 32,32,32,101,110,100,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"1There are two special cases for the timeout value"}],
                0,false},
               {text,[7,42,69,120,112,114,84,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\binfinity"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,
                    "ªThe process is to wait indefinitely for a matching message; this is the same as not using a timeout. This can be useful for timeout values that are calculated at runtime."},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[1,48]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  "OIf there is no matching message in the mailbox, the timeout occurs immediately."},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,84,101,114,109,32,67,111,109,112,97,114,105,
             115,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,69,120,112,114,49,32]},
               {text,[2,111,112]},
               {text,[6,32,69,120,112,114,50]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "MThe arguments can be of different data types. The following order is defined:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "U\nnumber < atom < reference < fun < port < pid < tuple < map < nil < list < bit string"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[5,42,110,105,108,42]},
               {sep,
                [{text,
                  "6in the previous expression represents the empty list ("}],
                0,false},
               {text,[4,42,91,93,42]},
               {sep,
                [{text,",), which is regarded as a separate type from"}],
                0,false},
               {text,"\b*list/0*"},
               {sep,[{text,"\r. That is why"}],0,false},
               {text,"\f*nil < list*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [129,76,105,115,116,115,32,97,114,101,32,99,111,109,112,97,
                 114,101,100,32,101,108,101,109,101,110,116,32,98,121,32,101,
                 108,101,109,101,110,116,46,32,84,117,112,108,101,115,32,97,
                 114,101,32,111,114,100,101,114,101,100,32,98,121,32,115,105,
                 122,101,44,32,116,119,111,32,116,117,112,108,101,115,32,119,
                 105,116,104,32,116,104,101,32,115,97,109,101,32,115,105,122,
                 101,32,97,114,101,32,99,111,109,112,97,114,101,100,32,101,
                 108,101,109,101,110,116,32,98,121,32,101,108,101,109,101,110,
                 116,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ËMaps are ordered by size, two maps with the same size are compared by keys in ascending term order and then by values in key order. In maps key order integers types are considered less than floats types."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "DAtoms are compared using their string value, codepoint by codepoint."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [148,87,104,101,110,32,99,111,109,112,97,114,105,110,103,32,
                   97,110,32,105,110,116,101,103,101,114,32,116,111,32,97,32,
                   102,108,111,97,116,44,32,116,104,101,32,116,101,114,109,32,
                   119,105,116,104,32,116,104,101,32,108,101,115,115,101,114,
                   32,112,114,101,99,105,115,105,111,110,32,105,115,32,99,111,
                   110,118,101,114,116,101,100,32,105,110,116,111,32,116,104,
                   101,32,116,121,112,101,32,111,102,32,116,104,101,32,111,
                   116,104,101,114,32,116,101,114,109,44,32,117,110,108,101,
                   115,115,32,116,104,101,32,111,112,101,114,97,116,111,114,
                   32,105,115,32,111,110,101,32,111,102]}],
                0,false},
               {text,[5,42,61,58,61,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,[5,42,61,47,61,42]},
               {sep,
                [{text,
                  [355,46,32,65,32,102,108,111,97,116,32,105,115,32,109,111,
                   114,101,32,112,114,101,99,105,115,101,32,116,104,97,110,32,
                   97,110,32,105,110,116,101,103,101,114,32,117,110,116,105,
                   108,32,97,108,108,32,115,105,103,110,105,102,105,99,97,110,
                   116,32,102,105,103,117,114,101,115,32,111,102,32,116,104,
                   101,32,102,108,111,97,116,32,97,114,101,32,116,111,32,116,
                   104,101,32,108,101,102,116,32,111,102,32,116,104,101,32,
                   100,101,99,105,109,97,108,32,112,111,105,110,116,46,32,84,
                   104,105,115,32,104,97,112,112,101,110,115,32,119,104,101,
                   110,32,116,104,101,32,102,108,111,97,116,32,105,115,32,108,
                   97,114,103,101,114,47,115,109,97,108,108,101,114,32,116,
                   104,97,110,32,43,47,45,57,48,48,55,49,57,57,50,53,52,55,52,
                   48,57,57,50,46,48,46,32,84,104,101,32,99,111,110,118,101,
                   114,115,105,111,110,32,115,116,114,97,116,101,103,121,32,
                   105,115,32,99,104,97,110,103,101,100,32,100,101,112,101,
                   110,100,105,110,103,32,111,110,32,116,104,101,32,115,105,
                   122,101,32,111,102,32,116,104,101,32,102,108,111,97,116,32,
                   98,101,99,97,117,115,101,32,111,116,104,101,114,119,105,
                   115,101,32,99,111,109,112,97,114,105,115,111,110,32,111,
                   102,32,108,97,114,103,101,32,102,108,111,97,116,115,32,97,
                   110,100,32,105,110,116,101,103,101,114,115,32,119,111,117,
                   108,100,32,108,111,115,101,32,116,104,101,105,114,32,116,
                   114,97,110,115,105,116,105,118,105,116,121,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ETerm comparison operators return the Boolean value of the expression,"}],
                0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,[7,42,102,97,108,115,101,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,[7,49,61,61,49,46,48,46]},
               {text,"\t\ntrue\n2> "},
               {text,"\b1=:=1.0."},
               {text,"\n\nfalse\n3> "},
               {text,[6,49,32,62,32,97,46]},
               {text,"\n\nfalse\n4> "},
               {text,
                [30,35,123,99,32,61,62,32,51,125,32,62,32,35,123,97,32,61,62,
                 32,49,44,32,98,32,61,62,32,50,125,46]},
               {text,"\n\nfalse\n4> "},
               {text,"+#{a => 1, b => 2} == #{a => 1.0, b => 2.0}."},
               {text,[5,10,116,114,117,101]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\e#### Arithmetic Expressions"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[1,10]},
               {text,[2,111,112]},
               {text,"\f Expr\nExpr1 "},
               {text,[2,111,112]},
               {text,[6,32,69,120,112,114,50]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,[3,43,49,46]},
               {text,[6,10,49,10,50,62,32]},
               {text,[3,45,49,46]},
               {text,[7,10,45,49,10,51,62,32]},
               {text,[4,49,43,49,46]},
               {text,[6,10,50,10,52,62,32]},
               {text,[4,52,47,50,46]},
               {text,"\b\n2.0\n5> "},
               {text,"\b5 div 2."},
               {text,[6,10,50,10,54,62,32]},
               {text,"\b5 rem 2."},
               {text,[6,10,49,10,55,62,32]},
               {text,[15,50,35,49,48,32,98,97,110,100,32,50,35,48,49,46]},
               {text,[6,10,48,10,56,62,32]},
               {text,[14,50,35,49,48,32,98,111,114,32,50,35,48,49,46]},
               {text,[6,10,51,10,57,62,32]},
               {text,[7,97,32,43,32,49,48,46]},
               {text,
                [131,10,42,42,32,101,120,99,101,112,116,105,111,110,32,101,
                 114,114,111,114,58,32,97,110,32,101,114,114,111,114,32,111,
                 99,99,117,114,114,101,100,32,119,104,101,110,32,101,118,97,
                 108,117,97,116,105,110,103,32,97,110,32,97,114,105,116,104,
                 109,101,116,105,99,32,101,120,112,114,101,115,115,105,111,
                 110,10,32,32,32,32,32,105,110,32,111,112,101,114,97,116,111,
                 114,32,32,43,47,50,10,32,32,32,32,32,32,32,32,99,97,108,108,
                 101,100,32,97,115,32,97,32,43,32,49,48,10,49,48,62,32]},
               {text,
                [17,49,32,98,115,108,32,40,49,32,98,115,108,32,54,52,41,46]},
               {text,
                "y\n** exception error: a system limit has been reached\n     in operator  bsl/2\n        called as 1 bsl 18446744073709551616"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,66,111,111,108,101,97,110,32,69,120,112,114,
             101,115,115,105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[1,10]},
               {text,[2,111,112]},
               {text,"\f Expr\nExpr1 "},
               {text,[2,111,112]},
               {text,[6,32,69,120,112,114,50]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,"\tnot true."},
               {text,"\n\nfalse\n2> "},
               {text,
                [15,116,114,117,101,32,97,110,100,32,102,97,108,115,101,46]},
               {text,"\n\nfalse\n3> "},
               {text,
                [15,116,114,117,101,32,120,111,114,32,102,97,108,115,101,46]},
               {text,"\t\ntrue\n4> "},
               {text,
                [16,116,114,117,101,32,111,114,32,103,97,114,98,97,103,101,
                 46]},
               {text,
                "Z\n** exception error: bad argument\n     in operator  or/2\n        called as true or garbage"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [30,35,35,35,35,32,83,104,111,114,116,45,67,105,114,99,117,105,
             116,32,69,120,112,114,101,115,115,105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"'\nExpr1 orelse Expr2\nExpr1 andalso Expr2"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[7,42,69,120,112,114,50,42]},
               {sep,
                [{text,"(is evaluated only if necessary. That is,"}],
                0,false},
               {text,[7,42,69,120,112,114,50,42]},
               {sep,
                [{text,
                  [21,105,115,32,101,118,97,108,117,97,116,101,100,32,111,110,
                   108,121,32,105,102,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[7,42,69,120,112,114,49,42]},
            {sep,[{text,"\fevaluates to"}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[5,105,110,32,97,110]}],0,false},
            {text,"\b*orelse*"},
            {sep,[{text,"\vexpression."}],0,false}],
           0,false}],
         0,false},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,[2,111,114]}],0,false}],0,true},null},
          null}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[7,42,69,120,112,114,49,42]},
            {sep,[{text,"\fevaluates to"}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[5,105,110,32,97,110]}],0,false},
            {text,"\t*andalso*"},
            {sep,[{text,"\vexpression."}],0,false}],
           0,false}],
         0,false},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\eReturns either the value of"}],0,false},
               {text,[7,42,69,120,112,114,49,42]},
               {sep,[{text,"\t(that is,"}],0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,[7,42,102,97,108,115,101,42]},
               {sep,
                [{text,
                  [17,41,32,111,114,32,116,104,101,32,118,97,108,117,101,32,
                   111,102]}],
                0,false},
               {text,[7,42,69,120,112,114,50,42]},
               {sep,[{text,[3,40,105,102]}],0,false},
               {text,[7,42,69,120,112,114,50,42]},
               {sep,
                [{text,
                  [14,105,115,32,101,118,97,108,117,97,116,101,100,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[14,42,42,69,120,97,109,112,108,101,32,49,58,42,42]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"-\ncase A >= -1.0 andalso math:sqrt(A+1) > B of"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [18,84,104,105,115,32,119,111,114,107,115,32,101,118,101,
                   110,32,105,102]}],
                0,false},
               {text,[3,42,65,42]},
               {sep,[{text,"\fis less than"}],0,false},
               {text,[6,42,45,49,46,48,42]},
               {sep,
                [{text,
                  [21,44,32,115,105,110,99,101,32,105,110,32,116,104,97,116,
                   32,99,97,115,101,44]}],
                0,false},
               {text,"\r*math:sqrt/1*"},
               {sep,
                [{text,
                  [19,105,115,32,110,101,118,101,114,32,101,118,97,108,117,97,
                   116,101,100,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[14,42,42,69,120,97,109,112,108,101,32,50,58,42,42]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "J\nOnlyOne = is_atom(L) orelse\n         (is_list(L) andalso length(L) == 1),"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [21,70,114,111,109,32,69,114,108,97,110,103,47,79,84,80,32,
                   82,49,51,65,44]}],
                0,false},
               {text,[7,42,69,120,112,114,50,42]},
               {sep,
                [{text,
                  "Gis no longer required to evaluate to a Boolean value. As a consequence,"}],
                0,false},
               {text,"\t*andalso*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\b*orelse*"},
               {sep,
                [{text,
                  "lare now tail-recursive. For instance, the following function is tail-recursive in Erlang/OTP R13A and later:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "V\nall(Pred, [Hd|Tail]) ->\n    Pred(Hd) andalso all(Pred, Tail);\nall(_, []) ->\n    true."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [20,35,35,35,35,32,76,105,115,116,32,79,112,101,114,97,116,105,
             111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [30,10,69,120,112,114,49,32,43,43,32,69,120,112,114,50,10,69,
                 120,112,114,49,32,45,45,32,69,120,112,114,50]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [31,84,104,101,32,108,105,115,116,32,99,111,110,99,97,116,
                   101,110,97,116,105,111,110,32,111,112,101,114,97,116,111,
                   114]}],
                0,false},
               {text,[4,42,43,43,42]},
               {sep,
                [{text,
                  "Happends its second argument to its first and returns the resulting list."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,84,104,101,32,108,105,115,116,32,115,117,98,116,114,97,
                   99,116,105,111,110,32,111,112,101,114,97,116,111,114]}],
                0,false},
               {text,[4,42,45,45,42]},
               {sep,
                [{text,
                  "´produces a list that is a copy of the first argument. The procedure is a follows: for each element in the second argument, the first occurrence of this element (if any) is removed."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,[15,91,49,44,50,44,51,93,43,43,91,52,44,53,93,46]},
               {text,[16,10,91,49,44,50,44,51,44,52,44,53,93,10,50,62,32]},
               {text,
                [23,91,49,44,50,44,51,44,50,44,49,44,50,93,45,45,91,50,44,49,
                 44,50,93,46]},
               {text,"\b\n[3,1,2]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,
              [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
               105,110,103,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             [17,84,104,101,32,99,111,109,112,108,101,120,105,
                              116,121,32,111,102]}],
                           0,false},
                          {text,"\b*A -- B*"},
                          {sep,
                           [{text,
                             [18,105,115,32,112,114,111,112,111,114,116,105,
                              111,110,97,108,32,116,111]}],
                           0,false},
                          {text,
                           [21,42,108,101,110,103,116,104,40,65,41,42,108,101,
                            110,103,116,104,40,66,41,42]},
                          {sep,
                           [{text,"'. That is, it becomes very slow if both"}],
                           0,false},
                          {text,[3,42,65,42]},
                          {sep,[{text,[3,97,110,100]}],0,false},
                          {text,[3,42,66,42]},
                          {sep,
                           [{text,
                             [15,97,114,101,32,108,111,110,103,32,108,105,115,
                              116,115,46]}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}}],
       0,false},
      {sep,
       [{text,"-<a name=\"map_expressions\">map_expressions</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [20,35,35,35,35,32,77,97,112,32,69,120,112,114,101,115,115,105,
             111,110,115]},
           null},
          null}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [18,35,35,35,35,32,67,114,101,97,116,105,110,103,32,77,97,112,
               115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "7Constructing a new map is done by letting an expression"}],
                  0,false},
                 {text,[3,42,75,42]},
                 {sep,
                  [{text,"%be associated with another expression"}],
                  0,false},
                 {text,[3,42,86,42]},
                 {sep,[{text,[1,58]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,[{text,"\v#{ K => V }"}],0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "XNew maps can include multiple associations at construction by listing every association:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,[{text,"\e#{ K1 => V1, .., Kn => Vn }"}],0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "IAn empty map is constructed by not associating any terms with each other:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,{text,[3,96,96,96]},{sep,[{text,[3,35,123,125]}],0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "tAll keys and values in the map are terms. Any expression is first evaluated and then the resulting terms are used as"}],
                  0,false},
                 {text,[7,42,42,107,101,121,42,42]},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,"\t**value**"},
                 {sep,[{text,"\rrespectively."}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,"$Keys and values are separated by the"}],
                  0,false},
                 {text,[4,42,61,62,42]},
                 {sep,
                  [{text,"/arrow and associations are separated by a comma"}],
                  0,false},
                 {text,[3,42,44,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [306,10,77,48,32,61,32,35,123,125,44,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,37,32,101,109,112,116,121,32,
                   109,97,112,10,77,49,32,61,32,35,123,97,32,61,62,32,60,60,
                   34,104,101,108,108,111,34,62,62,125,44,32,37,32,115,105,
                   110,103,108,101,32,97,115,115,111,99,105,97,116,105,111,
                   110,32,119,105,116,104,32,108,105,116,101,114,97,108,115,
                   10,77,50,32,61,32,35,123,49,32,61,62,32,50,44,32,98,32,61,
                   62,32,98,125,44,32,32,32,37,32,109,117,108,116,105,112,108,
                   101,32,97,115,115,111,99,105,97,116,105,111,110,115,32,119,
                   105,116,104,32,108,105,116,101,114,97,108,115,10,77,51,32,
                   61,32,35,123,107,32,61,62,32,123,65,44,66,125,125,44,32,32,
                   32,32,32,32,32,37,32,115,105,110,103,108,101,32,97,115,115,
                   111,99,105,97,116,105,111,110,32,119,105,116,104,32,118,97,
                   114,105,97,98,108,101,115,10,77,52,32,61,32,35,123,123,34,
                   119,34,44,32,49,125,32,61,62,32,102,40,41,125,46,32,32,37,
                   32,99,111,109,112,111,117,110,100,32,107,101,121,32,97,115,
                   115,111,99,105,97,116,101,100,32,119,105,116,104,32,97,110,
                   32,101,118,97,108,117,97,116,101,100,32,101,120,112,114,
                   101,115,115,105,111,110]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[5,72,101,114,101,44]}],0,false},
                 {text,[3,42,65,42]},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,[3,42,66,42]},
                 {sep,
                  [{text,
                    [23,97,114,101,32,97,110,121,32,101,120,112,114,101,115,
                     115,105,111,110,115,32,97,110,100]}],
                  0,false},
                 {text,[4,42,77,48,42]},
                 {sep,[{text,[7,116,104,114,111,117,103,104]}],0,false},
                 {text,[4,42,77,52,42]},
                 {sep,
                  [{text,
                    [28,97,114,101,32,116,104,101,32,114,101,115,117,108,116,
                     105,110,103,32,109,97,112,32,116,101,114,109,115,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "CIf two matching keys are declared, the latter key takes precedence."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,[4,10,49,62,32]},
                 {text,
                  [18,35,123,49,32,61,62,32,97,44,32,49,32,61,62,32,98,125,
                   46]},
                 {text,[15,10,35,123,49,32,61,62,32,98,32,125,10,50,62,32]},
                 {text,
                  [20,35,123,49,46,48,32,61,62,32,97,44,32,49,32,61,62,32,98,
                   125,46]},
                 {text,
                  [21,10,35,123,49,32,61,62,32,98,44,32,49,46,48,32,61,62,32,
                   97,125,10]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [259,84,104,101,32,111,114,100,101,114,32,105,110,32,119,
                   104,105,99,104,32,116,104,101,32,101,120,112,114,101,115,
                   115,105,111,110,115,32,99,111,110,115,116,114,117,99,116,
                   105,110,103,32,116,104,101,32,107,101,121,115,32,40,97,110,
                   100,32,116,104,101,105,114,32,97,115,115,111,99,105,97,116,
                   101,100,32,118,97,108,117,101,115,41,32,97,114,101,32,101,
                   118,97,108,117,97,116,101,100,32,105,115,32,110,111,116,32,
                   100,101,102,105,110,101,100,46,32,84,104,101,32,115,121,
                   110,116,97,99,116,105,99,32,111,114,100,101,114,32,111,102,
                   32,116,104,101,32,107,101,121,45,118,97,108,117,101,32,112,
                   97,105,114,115,32,105,110,32,116,104,101,32,99,111,110,115,
                   116,114,117,99,116,105,111,110,32,105,115,32,111,102,32,
                   110,111,32,114,101,108,101,118,97,110,99,101,44,32,101,120,
                   99,101,112,116,32,105,110,32,116,104,101,32,114,101,99,101,
                   110,116,108,121,32,109,101,110,116,105,111,110,101,100,32,
                   99,97,115,101,32,111,102,32,116,119,111,32,109,97,116,99,
                   104,105,110,103,32,107,101,121,115,46]}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [18,35,35,35,35,32,85,112,100,97,116,105,110,103,32,77,97,112,
               115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "7Updating a map has a similar syntax as constructing it."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [140,65,110,32,101,120,112,114,101,115,115,105,111,110,32,
                   100,101,102,105,110,105,110,103,32,116,104,101,32,109,97,
                   112,32,116,111,32,98,101,32,117,112,100,97,116,101,100,44,
                   32,105,115,32,112,117,116,32,105,110,32,102,114,111,110,
                   116,32,111,102,32,116,104,101,32,101,120,112,114,101,115,
                   115,105,111,110,32,100,101,102,105,110,105,110,103,32,116,
                   104,101,32,107,101,121,115,32,116,111,32,98,101,32,117,112,
                   100,97,116,101,100,32,97,110,100,32,116,104,101,105,114,32,
                   114,101,115,112,101,99,116,105,118,101,32,118,97,108,117,
                   101,115,58]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,[{text,"\fM#{ K => V }"}],0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[4,72,101,114,101]}],0,false},
                 {text,[3,42,77,42]},
                 {sep,
                  [{text,
                    [25,105,115,32,97,32,116,101,114,109,32,111,102,32,116,
                     121,112,101,32,109,97,112,32,97,110,100]}],
                  0,false},
                 {text,[3,42,75,42]},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,[3,42,86,42]},
                 {sep,
                  [{text,
                    [19,97,114,101,32,97,110,121,32,101,120,112,114,101,115,
                     115,105,111,110,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[6,73,102,32,107,101,121]}],0,false},
                 {text,[3,42,75,42]},
                 {sep,
                  [{text,
                    "Qdoes not match any existing key in the map, a new association is created from key"}],
                  0,false},
                 {text,[3,42,75,42]},
                 {sep,[{text,"\bto value"}],0,false},
                 {text,[3,42,86,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[6,73,102,32,107,101,121]}],0,false},
                 {text,[3,42,75,42]},
                 {sep,
                  [{text,
                    [30,109,97,116,99,104,101,115,32,97,110,32,101,120,105,
                     115,116,105,110,103,32,107,101,121,32,105,110,32,109,97,
                     112]}],
                  0,false},
                 {text,[3,42,77,42]},
                 {sep,
                  [{text,
                    "3, its associated value is replaced by the new value"}],
                  0,false},
                 {text,[3,42,86,42]},
                 {sep,
                  [{text,
                    "@. In both cases, the evaluated map expression returns a new map."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[2,73,102]}],0,false},
                 {text,[3,42,77,42]},
                 {sep,
                  [{text,"(is not of type map, an exception of type"}],
                  0,false},
                 {text,"\b*badmap*"},
                 {sep,[{text,"\nis thrown."}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "?To only update an existing value, the following syntax is used:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,[{text,"\rM#{ K := V } "}],0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[4,72,101,114,101]}],0,false},
                 {text,[3,42,77,42]},
                 {sep,
                  [{text,
                    [22,105,115,32,97,32,116,101,114,109,32,111,102,32,116,
                     121,112,101,32,109,97,112,44]}],
                  0,false},
                 {text,[3,42,86,42]},
                 {sep,
                  [{text,
                    [20,105,115,32,97,110,32,101,120,112,114,101,115,115,105,
                     111,110,32,97,110,100]}],
                  0,false},
                 {text,[3,42,75,42]},
                 {sep,
                  [{text,
                    "5is an expression that evaluates to an existing key in"}],
                  0,false},
                 {text,[3,42,77,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[6,73,102,32,107,101,121]}],0,false},
                 {text,[3,42,75,42]},
                 {sep,
                  [{text,"'does not match any existing keys in map"}],
                  0,false},
                 {text,[3,42,77,42]},
                 {sep,
                  [{text,
                    [22,44,32,97,110,32,101,120,99,101,112,116,105,111,110,32,
                     111,102,32,116,121,112,101]}],
                  0,false},
                 {text,"\b*badarg*"},
                 {sep,
                  [{text,"*is triggered at runtime. If a matching key"}],
                  0,false},
                 {text,[3,42,75,42]},
                 {sep,
                  [{text,
                    [17,105,115,32,112,114,101,115,101,110,116,32,105,110,32,
                     109,97,112]}],
                  0,false},
                 {text,[3,42,77,42]},
                 {sep,
                  [{text,
                    "3, its associated value is replaced by the new value"}],
                  0,false},
                 {text,[3,42,86,42]},
                 {sep,
                  [{text,
                    "5, and the evaluated map expression returns a new map."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[2,73,102]}],0,false},
                 {text,[3,42,77,42]},
                 {sep,
                  [{text,"(is not of type map, an exception of type"}],
                  0,false},
                 {text,"\b*badmap*"},
                 {sep,[{text,"\nis thrown."}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "¥\nM0 = #{},\nM1 = M0#{a => 0},\nM2 = M1#{a => 1, b => 2},\nM3 = M2#{\"function\" => fun() -> f() end},\nM4 = M3#{a := 2, b := 3}.  % 'a' and 'b' was added in `M1` and `M2`."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[4,72,101,114,101]}],0,false},
                 {text,[4,42,77,48,42]},
                 {sep,[{text,"\eis any map. It follows that"}],0,false},
                 {text,"\n*M1 .. M4*"},
                 {sep,
                  [{text,
                    [17,97,114,101,32,109,97,112,115,32,97,115,32,119,101,108,
                     108,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[4,77,111,114,101]}],0,false},
                 {text,"\r**Examples:**"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,[4,10,49,62,32]},
                 {text,[14,77,32,61,32,35,123,49,32,61,62,32,97,125,46]},
                 {text,[15,10,35,123,49,32,61,62,32,97,32,125,10,50,62,32]},
                 {text,"\rM#{1.0 => b}."},
                 {text,
                  [25,10,35,123,49,32,61,62,32,97,44,32,49,46,48,32,61,62,32,
                   98,125,46,10,51,62,32]},
                 {text,"\vM#{1 := b}."},
                 {text,[14,10,35,123,49,32,61,62,32,98,125,10,52,62,32]},
                 {text,"\rM#{1.0 := b}."},
                 {text,"\"\n** exception error: bad argument\n"}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [256,65,115,32,105,110,32,99,111,110,115,116,114,117,99,116,
                   105,111,110,44,32,116,104,101,32,111,114,100,101,114,32,
                   105,110,32,119,104,105,99,104,32,116,104,101,32,107,101,
                   121,32,97,110,100,32,118,97,108,117,101,32,101,120,112,114,
                   101,115,115,105,111,110,115,32,97,114,101,32,101,118,97,
                   108,117,97,116,101,100,32,105,115,32,110,111,116,32,100,
                   101,102,105,110,101,100,46,32,84,104,101,32,115,121,110,
                   116,97,99,116,105,99,32,111,114,100,101,114,32,111,102,32,
                   116,104,101,32,107,101,121,45,118,97,108,117,101,32,112,97,
                   105,114,115,32,105,110,32,116,104,101,32,117,112,100,97,
                   116,101,32,105,115,32,111,102,32,110,111,32,114,101,108,
                   101,118,97,110,99,101,44,32,101,120,99,101,112,116,32,105,
                   110,32,116,104,101,32,99,97,115,101,32,119,104,101,114,101,
                   32,116,119,111,32,107,101,121,115,32,109,97,116,99,104,46,
                   32,73,110,32,116,104,97,116,32,99,97,115,101,44,32,116,104,
                   101,32,108,97,116,116,101,114,32,118,97,108,117,101,32,105,
                   115,32,117,115,101,100,46]}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [21,35,35,35,35,32,77,97,112,115,32,105,110,32,80,97,116,116,
               101,114,110,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "@Matching of key-value associations from maps is done as follows:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,[15,35,123,32,75,32,58,61,32,86,32,125,32,61,32,77]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[4,72,101,114,101]}],0,false},
                 {text,[3,42,77,42]},
                 {sep,
                  [{text,
                    [19,105,115,32,97,110,121,32,109,97,112,46,32,84,104,101,
                     32,107,101,121]}],
                  0,false},
                 {text,[3,42,75,42]},
                 {sep,
                  [{text,
                    "7must be an expression with bound variables or literals."}],
                  0,false},
                 {text,[3,42,86,42]},
                 {sep,
                  [{text,
                    ":can be any pattern with either bound or unbound variables."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [15,73,102,32,116,104,101,32,118,97,114,105,97,98,108,
                     101]}],
                  0,false},
                 {text,[3,42,86,42]},
                 {sep,
                  [{text,
                    "Ais unbound, it becomes bound to the value associated with the key"}],
                  0,false},
                 {text,[3,42,75,42]},
                 {sep,
                  [{text,
                    [29,44,32,119,104,105,99,104,32,109,117,115,116,32,101,
                     120,105,115,116,32,105,110,32,116,104,101,32,109,97,
                     112]}],
                  0,false},
                 {text,[3,42,77,42]},
                 {sep,
                  [{text,
                    [17,46,32,73,102,32,116,104,101,32,118,97,114,105,97,98,
                     108,101]}],
                  0,false},
                 {text,[3,42,86,42]},
                 {sep,
                  [{text,
                    "1is bound, it must match the value associated with"}],
                  0,false},
                 {text,[3,42,75,42]},
                 {sep,[{text,[2,105,110]}],0,false},
                 {text,[3,42,77,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,[4,10,49,62,32]},
                 {text,
                  [24,77,32,61,32,35,123,34,116,117,112,108,101,34,32,61,62,
                   32,123,49,44,50,125,125,46]},
                 {text,
                  [24,10,35,123,34,116,117,112,108,101,34,32,61,62,32,123,49,
                   44,50,125,125,10,50,62,32]},
                 {text,
                  [24,35,123,34,116,117,112,108,101,34,32,58,61,32,123,49,44,
                   66,125,125,32,61,32,77,46]},
                 {text,
                  [24,10,35,123,34,116,117,112,108,101,34,32,61,62,32,123,49,
                   44,50,125,125,10,51,62,32]},
                 {text,[2,66,46]},
                 {text,[3,10,50,46]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [19,84,104,105,115,32,98,105,110,100,115,32,118,97,114,
                     105,97,98,108,101]}],
                  0,false},
                 {text,[3,42,66,42]},
                 {sep,[{text,"\nto integer"}],0,false},
                 {text,[3,42,50,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "7Similarly, multiple values from the map can be matched:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [31,35,123,32,75,49,32,58,61,32,86,49,44,32,46,46,44,32,75,
                   110,32,58,61,32,86,110,32,125,32,61,32,77]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\tHere keys"}],0,false},
                 {text,"\n*K1 .. Kn*"},
                 {sep,
                  [{text,
                    "Nare any expressions with literals or bound variables. If all keys exist in map"}],
                  0,false},
                 {text,[3,42,77,42]},
                 {sep,
                  [{text,
                    [18,44,32,97,108,108,32,118,97,114,105,97,98,108,101,115,
                     32,105,110]}],
                  0,false},
                 {text,"\n*V1 .. Vn*"},
                 {sep,
                  [{text,
                    "=is matched to the associated values of their respective keys."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "EIf the matching conditions are not met, the match fails, either with:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,[{text,[1,65]}],0,false},
                      {text,"\n*badmatch*"},
                      {sep,[{text,"\nexception."}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       "MThis is if it is used in the context of the match operator as in the example."}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "TOr resulting in the next clause being tested in function heads and case expressions."}],
              0,false}],
            0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text," Matching in maps only allows for"}],0,false},
                 {text,[4,42,58,61,42]},
                 {sep,
                  [{text,
                    [30,97,115,32,100,101,108,105,109,105,116,101,114,115,32,
                     111,102,32,97,115,115,111,99,105,97,116,105,111,110,115,
                     46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "BThe order in which keys are declared in matching has no relevance."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "UDuplicate keys are allowed in matching and match each pattern associated to the keys:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [25,35,123,32,75,32,58,61,32,86,49,44,32,75,32,58,61,32,86,
                   50,32,125,32,61,32,77]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "aMatching an expression against an empty map literal, matches its type but no variables are bound:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,{text,[3,96,96,96]},{sep,[{text,"\n#{} = Expr"}],0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,")This expression matches if the expression"}],
                  0,false},
                 {text,[6,42,69,120,112,114,42]},
                 {sep,
                  [{text,
                    "4is of type map, otherwise it fails with an exception"}],
                  0,false},
                 {text,"\n*badmatch*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {text,
                [20,35,35,35,35,32,77,97,116,99,104,105,110,103,32,83,121,110,
                 116,97,120]},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    ";Matching of literals as keys are allowed in function heads:"}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {above,
                {above,
                 {text,[3,96,96,96]},
                 {sep,
                  [{text,
                    [257,10,37,37,32,111,110,108,121,32,115,116,97,114,116,32,
                     105,102,32,110,111,116,95,115,116,97,114,116,101,100,10,
                     104,97,110,100,108,101,95,99,97,108,108,40,115,116,97,
                     114,116,44,32,70,114,111,109,44,32,35,123,32,115,116,97,
                     116,101,32,58,61,32,110,111,116,95,115,116,97,114,116,
                     101,100,32,125,32,61,32,83,41,32,45,62,10,46,46,46,10,32,
                     32,32,32,123,114,101,112,108,121,44,32,111,107,44,32,83,
                     35,123,32,115,116,97,116,101,32,58,61,32,115,116,97,114,
                     116,32,125,125,59,10,10,37,37,32,111,110,108,121,32,99,
                     104,97,110,103,101,32,105,102,32,115,116,97,114,116,101,
                     100,10,104,97,110,100,108,101,95,99,97,108,108,40,99,104,
                     97,110,103,101,44,32,70,114,111,109,44,32,35,123,32,115,
                     116,97,116,101,32,58,61,32,115,116,97,114,116,32,125,32,
                     61,32,83,41,32,45,62,10,46,46,46,10,32,32,32,32,123,114,
                     101,112,108,121,44,32,111,107,44,32,83,35,123,32,115,116,
                     97,116,101,32,58,61,32,99,104,97,110,103,101,100,32,125,
                     125,59]}],
                  0,true}},
                {text,[3,96,96,96]}},
               null},
              null}}],
           0,false}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [19,35,35,35,35,32,77,97,112,115,32,105,110,32,71,117,97,114,
               100,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "UMaps are allowed in guards as long as all subexpressions are valid guard expressions."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,[{text,"\eTwo guard BIFs handle maps:"}],0,false}],
              0,true},
             null},
            null}},
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"#[is_map/1](../erts/erlang#is_map/1)"},
               {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
               {text,"\b*erlang*"},
               {sep,[{text,[6,109,111,100,117,108,101]}],0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"'[map_size/1](../erts/erlang#map_size/1)"},
               {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
               {text,"\b*erlang*"},
               {sep,[{text,[6,109,111,100,117,108,101]}],0,false}],
              0,false}],
            0,false}}],
         0,false}],
       0,false},
      {sep,
       [{text,"#<a name=\"bit_syntax\">bit_syntax</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\e#### Bit Syntax Expressions"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [18,60,60,62,62,10,60,60,69,49,44,46,46,46,44,69,110,62,62]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fEach element"}],0,false},
               {text,[4,42,69,105,42]},
               {sep,[{text,"\vspecifies a"}],0,false},
               {text,"\v**segment**"},
               {sep,
                [{text,
                  [31,111,102,32,116,104,101,32,98,105,116,32,115,116,114,105,
                   110,103,46,32,69,97,99,104,32,101,108,101,109,101,110,
                   116]}],
                0,false},
               {text,[4,42,69,105,42]},
               {sep,[{text,"#is a value, followed by an optional"}],0,false},
               {text,
                [19,42,42,115,105,122,101,32,101,120,112,114,101,115,115,105,
                 111,110,42,42]},
               {sep,
                [{text,
                  [15,97,110,100,32,97,110,32,111,112,116,105,111,110,97,
                   108]}],
                0,false},
               {text,
                [23,42,42,116,121,112,101,32,115,112,101,99,105,102,105,101,
                 114,32,108,105,115,116,42,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "`\nEi = Value |\n     Value:Size |\n     Value/TypeSpecifierList |\n     Value:Size/TypeSpecifierList"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\"Used in a bit string construction,"}],0,false},
               {text,[7,42,86,97,108,117,101,42]},
               {sep,
                [{text,
                  "¥is an expression that is to evaluate to an integer, float, or bit string. If the expression is not a single literal or variable, it is to be enclosed in parentheses."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [30,85,115,101,100,32,105,110,32,97,32,98,105,116,32,115,
                   116,114,105,110,103,32,109,97,116,99,104,105,110,103,44]}],
                0,false},
               {text,[7,42,86,97,108,117,101,42]},
               {sep,
                [{text,
                  "4must be a variable, or an integer, float, or string."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "6Notice that, for example, using a string literal as in"}],
                0,false},
               {text,"\v*<<\"abc\">>*"},
               {sep,
                [{text,
                  [22,105,115,32,115,121,110,116,97,99,116,105,99,32,115,117,
                   103,97,114,32,102,111,114]}],
                0,false},
               {text,[14,42,60,60,36,97,44,36,98,44,36,99,62,62,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\"Used in a bit string construction,"}],0,false},
               {text,[6,42,83,105,122,101,42]},
               {sep,
                [{text,
                  "3is an expression that is to evaluate to an integer."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [30,85,115,101,100,32,105,110,32,97,32,98,105,116,32,115,
                   116,114,105,110,103,32,109,97,116,99,104,105,110,103,44]}],
                0,false},
               {text,[6,42,83,105,122,101,42]},
               {sep,
                [{text,
                  "6must be an integer, or a variable bound to an integer."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fThe value of"}],0,false},
               {text,[6,42,83,105,122,101,42]},
               {sep,
                [{text,
                  "jspecifies the size of the segment in units (see below). The default value depends on the type (see below):"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,[3,70,111,114]}],0,false},
              {text,"\t*integer*"},
              {sep,[{text,"\bit is 8."}],0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,[3,70,111,114]}],0,false},
              {text,[7,42,102,108,111,97,116,42]},
              {sep,[{text,"\tit is 64."}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,[3,70,111,114]}],0,false},
             {text,"\b*binary*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\v*bitstring*"},
             {sep,[{text,"%it is the whole binary or bit string."}],0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [155,73,110,32,109,97,116,99,104,105,110,103,44,32,116,104,
                 105,115,32,100,101,102,97,117,108,116,32,118,97,108,117,101,
                 32,105,115,32,111,110,108,121,32,118,97,108,105,100,32,102,
                 111,114,32,116,104,101,32,108,97,115,116,32,101,108,101,109,
                 101,110,116,46,32,65,108,108,32,111,116,104,101,114,32,98,
                 105,116,32,115,116,114,105,110,103,32,111,114,32,98,105,110,
                 97,114,121,32,101,108,101,109,101,110,116,115,32,105,110,32,
                 116,104,101,32,109,97,116,99,104,105,110,103,32,109,117,115,
                 116,32,104,97,118,101,32,97,32,115,105,122,101,32,115,112,
                 101,99,105,102,105,99,97,116,105,111,110,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[7,70,111,114,32,116,104,101]}],0,false},
               {text,[6,42,117,116,102,56,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[7,42,117,116,102,49,54,42]},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[7,42,117,116,102,51,50,42]},
               {sep,[{text,[6,116,121,112,101,115,44]}],0,false},
               {text,[6,42,83,105,122,101,42]},
               {sep,
                [{text,
                  "amust not be given. The size of the segment is implicitly determined by the type and value itself."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [19,42,84,121,112,101,83,112,101,99,105,102,105,101,114,76,
                 105,115,116,42]},
               {sep,
                [{text,
                  "~is a list of type specifiers, in any order, separated by hyphens (-). Default values are used for any omitted type specifiers."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{sep,
                          [{text,[4,84,121,112,101]},
                           {sep,[{text,[1,61]}],0,false},
                           {text,[7,105,110,116,101,103,101,114]},
                           {sep,[{text,[1,124]}],0,false},
                           {text,[5,102,108,111,97,116]},
                           {sep,[{text,[1,124]}],0,false},
                           {text,[6,98,105,110,97,114,121]},
                           {sep,[{text,[1,124]}],0,false},
                           {text,[5,98,121,116,101,115]},
                           {sep,[{text,[1,124]}],0,false},
                           {text,"\tbitstring"},
                           {sep,[{text,[1,124]}],0,false},
                           {text,[4,98,105,116,115]},
                           {sep,[{text,[1,124]}],0,false},
                           {text,[4,117,116,102,56]},
                           {sep,[{text,[1,124]}],0,false},
                           {text,[5,117,116,102,49,54]},
                           {sep,[{text,[1,124]}],0,false},
                           {text,[5,117,116,102,51,50]}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {sep,
                        [{sep,
                          [{text,
                            [14,84,104,101,32,100,101,102,97,117,108,116,32,
                             105,115]}],
                          0,false},
                         {text,[7,105,110,116,101,103,101,114]},
                         {sep,[{text,[1,46]}],0,false},
                         {text,[5,98,121,116,101,115]},
                         {sep,
                          [{text,
                            [18,105,115,32,97,32,115,104,111,114,116,104,97,
                             110,100,32,102,111,114]}],
                          0,false},
                         {text,[6,98,105,110,97,114,121]},
                         {sep,[{text,[3,97,110,100]}],0,false},
                         {text,[4,98,105,116,115]},
                         {sep,
                          [{text,
                            [18,105,115,32,97,32,115,104,111,114,116,104,97,
                             110,100,32,102,111,114]}],
                          0,false},
                         {text,"\tbitstring"},
                         {sep,
                          [{text,
                            "*. See below for more information about the"}],
                          0,false},
                         {text,[3,117,116,102]},
                         {sep,[{text,[6,116,121,112,101,115,46]}],0,false}],
                        0,false},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{sep,
                         [{text,"\nSignedness"},
                          {sep,[{text,[1,61]}],0,false},
                          {text,[6,115,105,103,110,101,100]},
                          {sep,[{text,[1,124]}],0,false},
                          {text,"\bunsigned"}],
                         0,false}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {sep,
                      [{sep,
                        [{text,
                          ".Only matters for matching and when the type is"}],
                        0,false},
                       {text,[7,105,110,116,101,103,101,114]},
                       {sep,
                        [{text,
                          [16,46,32,84,104,101,32,100,101,102,97,117,108,116,
                           32,105,115]}],
                        0,false},
                       {text,"\bunsigned"},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{sep,
                       [{text,"\nEndianness"},
                        {sep,[{text,[1,61]}],0,false},
                        {text,[3,98,105,103]},
                        {sep,[{text,[1,124]}],0,false},
                        {text,[6,108,105,116,116,108,101]},
                        {sep,[{text,[1,124]}],0,false},
                        {text,[6,110,97,116,105,118,101]}],
                       0,false}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,
                      [{text,
                        "åNative-endian means that the endianness is resolved at load time to be either big-endian or little-endian, depending on what is native for the CPU that the Erlang machine is run on. Endianness only matters when the Type is either"}],
                      0,false},
                     {text,[7,105,110,116,101,103,101,114]},
                     {sep,[{text,[1,44]}],0,false},
                     {text,[5,117,116,102,49,54]},
                     {sep,[{text,[1,44]}],0,false},
                     {text,[5,117,116,102,51,50]},
                     {sep,[{text,[4,44,32,111,114]}],0,false},
                     {text,[5,102,108,111,97,116]},
                     {sep,
                      [{text,
                        [16,46,32,84,104,101,32,100,101,102,97,117,108,116,32,
                         105,115]}],
                      0,false},
                     {text,[3,98,105,103]},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{text,[4,85,110,105,116]},
                      {sep,[{text,[1,61]}],0,false},
                      {text,
                       [19,117,110,105,116,58,73,110,116,101,103,101,114,76,
                        105,116,101,114,97,108]}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{sep,
                    [{text,".The allowed range is 1..256. Defaults to 1 for"}],
                    0,false},
                   {text,[7,105,110,116,101,103,101,114]},
                   {sep,[{text,[1,44]}],0,false},
                   {text,[5,102,108,111,97,116]},
                   {sep,[{text,[5,44,32,97,110,100]}],0,false},
                   {text,"\tbitstring"},
                   {sep,
                    [{text,
                      [14,44,32,97,110,100,32,116,111,32,56,32,102,111,114]}],
                    0,false},
                   {text,[6,98,105,110,97,114,121]},
                   {sep,
                    [{text,
                      "/. No unit specifier must be given for the types"}],
                    0,false},
                   {text,[4,117,116,102,56]},
                   {sep,[{text,[1,44]}],0,false},
                   {text,[5,117,116,102,49,54]},
                   {sep,[{text,[5,44,32,97,110,100]}],0,false},
                   {text,[5,117,116,102,51,50]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fThe value of"}],0,false},
               {text,[6,42,83,105,122,101,42]},
               {sep,
                [{text,
                  "Dmultiplied with the unit gives the number of bits. A segment of type"}],
                0,false},
               {text,"\b*binary*"},
               {sep,
                [{text,"/must have a size that is evenly divisible by 8."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,"'When constructing binaries, if the size"}],
                           0,false},
                          {text,[3,42,78,42]},
                          {sep,
                           [{text,
                             [141,111,102,32,97,110,32,105,110,116,101,103,
                              101,114,32,115,101,103,109,101,110,116,32,105,
                              115,32,116,111,111,32,115,109,97,108,108,32,116,
                              111,32,99,111,110,116,97,105,110,32,116,104,101,
                              32,103,105,118,101,110,32,105,110,116,101,103,
                              101,114,44,32,116,104,101,32,109,111,115,116,32,
                              115,105,103,110,105,102,105,99,97,110,116,32,98,
                              105,116,115,32,111,102,32,116,104,101,32,105,
                              110,116,101,103,101,114,32,97,114,101,32,115,
                              105,108,101,110,116,108,121,32,100,105,115,99,
                              97,114,100,101,100,32,97,110,100,32,111,110,108,
                              121,32,116,104,101]}],
                           0,false},
                          {text,[3,42,78,42]},
                          {sep,
                           [{text,
                             "/least significant bits are put into the binary."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\tThe types"}],0,false},
               {text,[6,42,117,116,102,56,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[7,42,117,116,102,49,54,42]},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[7,42,117,116,102,51,50,42]},
               {sep,[{text,"\"specifies encoding/decoding of the"}],0,false},
               {text,"!**Unicode Transformation Format**"},
               {sep,
                [{text,"*s UTF-8, UTF-16, and UTF-32, respectively."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text," When constructing a segment of a"}],0,false},
               {text,[5,42,117,116,102,42]},
               {sep,[{text,[5,116,121,112,101,44]}],0,false},
               {text,[7,42,86,97,108,117,101,42]},
               {sep,
                [{text,
                  "]must be an integer in the range 0..16#D7FF or 16#E000....16#10FFFF. Construction fails with a"}],
                0,false},
               {text,"\b*badarg*"},
               {sep,[{text,"\fexception if"}],0,false},
               {text,[7,42,86,97,108,117,101,42]},
               {sep,
                [{text,
                  "^is outside the allowed ranges. The size of the resulting binary segment depends on the type or"}],
                0,false},
               {text,[7,42,86,97,108,117,101,42]},
               {sep,[{text,"\n, or both:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,[3,70,111,114]}],0,false},
              {text,[6,42,117,116,102,56,42]},
              {sep,[{text,[1,44]}],0,false},
              {text,[7,42,86,97,108,117,101,42]},
              {sep,
               [{text,
                 [24,105,115,32,101,110,99,111,100,101,100,32,105,110,32,49,
                  45,52,32,98,121,116,101,115,46]}],
               0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,[3,70,111,114]}],0,false},
              {text,[7,42,117,116,102,49,54,42]},
              {sep,[{text,[1,44]}],0,false},
              {text,[7,42,86,97,108,117,101,42]},
              {sep,[{text,"\eis encoded in 2 or 4 bytes."}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,[3,70,111,114]}],0,false},
             {text,[7,42,117,116,102,51,50,42]},
             {sep,[{text,[1,44]}],0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text," is always be encoded in 4 bytes."}],0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "_When constructing, a literal string can be given followed by one of the UTF types, for example:"}],
                0,false},
               {text,[16,42,60,60,34,97,98,99,34,47,117,116,102,56,62,62,42]},
               {sep,
                [{text,
                  [28,119,104,105,99,104,32,105,115,32,115,121,110,116,97,99,
                   116,105,99,32,115,117,103,97,114,32,102,111,114]}],
                0,false},
               {text,
                [29,42,60,60,36,97,47,117,116,102,56,44,36,98,47,117,116,102,
                 56,44,36,99,47,117,116,102,56,62,62,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"$A successful match of a segment of a"}],0,false},
               {text,[5,42,117,116,102,42]},
               {sep,
                [{text,
                  [140,116,121,112,101,44,32,114,101,115,117,108,116,115,32,
                   105,110,32,97,110,32,105,110,116,101,103,101,114,32,105,
                   110,32,116,104,101,32,114,97,110,103,101,32,48,46,46,49,54,
                   35,68,55,70,70,32,111,114,32,49,54,35,69,48,48,48,46,46,49,
                   54,35,49,48,70,70,70,70,46,32,84,104,101,32,109,97,116,99,
                   104,32,102,97,105,108,115,32,105,102,32,116,104,101,32,114,
                   101,116,117,114,110,101,100,32,118,97,108,117,101,32,102,
                   97,108,108,115,32,111,117,116,115,105,100,101,32,116,104,
                   111,115,101,32,114,97,110,103,101,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [17,65,32,115,101,103,109,101,110,116,32,111,102,32,116,121,
                   112,101]}],
                0,false},
               {text,[6,42,117,116,102,56,42]},
               {sep,
                [{text,
                  [141,109,97,116,99,104,101,115,32,49,45,52,32,98,121,116,
                   101,115,32,105,110,32,116,104,101,32,98,105,110,97,114,121,
                   44,32,105,102,32,116,104,101,32,98,105,110,97,114,121,32,
                   97,116,32,116,104,101,32,109,97,116,99,104,32,112,111,115,
                   105,116,105,111,110,32,99,111,110,116,97,105,110,115,32,97,
                   32,118,97,108,105,100,32,85,84,70,45,56,32,115,101,113,117,
                   101,110,99,101,46,32,40,83,101,101,32,82,70,67,45,51,54,50,
                   57,32,111,114,32,116,104,101,32,85,110,105,99,111,100,101,
                   32,115,116,97,110,100,97,114,100,46,41]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [17,65,32,115,101,103,109,101,110,116,32,111,102,32,116,121,
                   112,101]}],
                0,false},
               {text,[7,42,117,116,102,49,54,42]},
               {sep,
                [{text,
                  "Ãcan match 2 or 4 bytes in the binary. The match fails if the binary at the match position does not contain a legal UTF-16 encoding of a Unicode code point. (See RFC-2781 or the Unicode standard.)"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [17,65,32,115,101,103,109,101,110,116,32,111,102,32,116,121,
                   112,101]}],
                0,false},
               {text,[7,42,117,116,102,51,50,42]},
               {sep,
                [{text,
                  "5can match 4 bytes in the binary in the same way as an"}],
                0,false},
               {text,"\t*integer*"},
               {sep,
                [{text,
                  "nsegment matches 32 bits. The match fails if the resulting integer is outside the legal ranges mentioned above."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [19,66,105,110,49,32,61,32,60,60,49,44,49,55,44,52,50,62,62,
                 46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\b<1,17,42"},
               {text,[1,62]},
               {text,[5,62,10,50,62,32]},
               {text,
                [17,66,105,110,50,32,61,32,60,60,34,97,98,99,34,62,62,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\t<97,98,99"},
               {text,[1,62]},
               {text,[5,62,10,51,62,32]},
               {text,
                [22,66,105,110,51,32,61,32,60,60,49,44,49,55,44,52,50,58,49,
                 54,62,62,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\n<1,17,0,42"},
               {text,[1,62]},
               {text,[5,62,10,52,62,32]},
               {text,
                [30,60,60,65,44,66,44,67,58,49,54,62,62,32,61,32,60,60,49,44,
                 49,55,44,52,50,58,49,54,62,62,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\n<1,17,0,42"},
               {text,[1,62]},
               {text,[5,62,10,53,62,32]},
               {text,[2,67,46]},
               {text,[7,10,52,50,10,54,62,32]},
               {text,
                [30,60,60,68,58,49,54,44,69,44,70,62,62,32,61,32,60,60,49,44,
                 49,55,44,52,50,58,49,54,62,62,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\n<1,17,0,42"},
               {text,[1,62]},
               {text,[5,62,10,55,62,32]},
               {text,[2,68,46]},
               {text,"\b\n273\n8> "},
               {text,[2,70,46]},
               {text,[7,10,52,50,10,57,62,32]},
               {text," <<G,H/binary>> = <<1,17,42:16>>."},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\n<1,17,0,42"},
               {text,[1,62]},
               {text,[6,62,10,49,48,62,32]},
               {text,[2,72,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\b<17,0,42"},
               {text,[1,62]},
               {text,[6,62,10,49,49,62,32]},
               {text,"#<<G,J/bitstring>> = <<1,17,42:12>>."},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\f<1,17,2,10:4"},
               {text,[1,62]},
               {text,[6,62,10,49,50,62,32]},
               {text,[2,74,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\n<17,2,10:4"},
               {text,[1,62]},
               {text,[6,62,10,49,51,62,32]},
               {text,[14,60,60,49,48,50,52,47,117,116,102,56,62,62,46]},
               {text,[1,10]},
               {text,[1,60]},
               {text,"\b<208,128"},
               {text,[1,62]},
               {text,[2,62,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"1Notice that bit string patterns cannot be nested."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [18,78,111,116,105,99,101,32,97,108,115,111,32,116,104,97,
                   116,32,34]}],
                0,false},
               {text,"\t*B=<<1>>*"},
               {sep,
                [{text,
                  [21,34,32,105,115,32,105,110,116,101,114,112,114,101,116,
                   101,100,32,97,115,32,34]}],
                0,false},
               {text,"\n*B =<<1>>*"},
               {sep,
                [{text,
                  "K\" which is a syntax error. The correct way is to write a space after '=': \""}],
                0,false},
               {text,"\n*B= <<1>>*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,77,111,114,101,32,101,120,97,109,112,108,101,115,32,97,
                   114,101,32,112,114,111,118,105,100,101,100,32,105,110]}],
                0,false},
               {text,"$[Programming Examples](./bit_syntax)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [23,60,97,32,110,97,109,101,61,34,102,117,110,115,34,62,102,117,110,
          115,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [20,35,35,35,35,32,70,117,110,32,69,120,112,114,101,115,115,105,
             111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "ª\nfun\n    [Name](Pattern11,...,Pattern1N) [when GuardSeq1] ->\n              Body1;\n    ...;\n    [Name](PatternK1,...,PatternKN) [when GuardSeqK] ->\n              BodyK\nend"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(A fun expression begins with the keyword"}],
                0,false},
               {text,[5,42,102,117,110,42]},
               {sep,
                [{text,
                  [25,97,110,100,32,101,110,100,115,32,119,105,116,104,32,116,
                   104,101,32,107,101,121,119,111,114,100]}],
                0,false},
               {text,[5,42,101,110,100,42]},
               {sep,
                [{text,
                  "<. Between them is to be a function declaration, similar to a"}],
                0,false},
               {text,"2[regular function declaration](./functions#syntax)"},
               {sep,
                [{text,
                  "L, except that the function name is optional and is to be a variable, if any."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ºVariables in a fun head shadow the function name and both shadow variables in the function clause surrounding the fun expression. Variables bound in a fun body are local to the fun body."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "8The return value of the expression is the resulting fun."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [26,70,117,110,49,32,61,32,102,117,110,32,40,88,41,32,45,62,
                 32,88,43,49,32,101,110,100,46]},
               {text,[5,10,35,70,117,110]},
               {text,
                [20,60,101,114,108,95,101,118,97,108,46,54,46,51,57,48,55,52,
                 53,52,54]},
               {text,[5,62,10,50,62,32]},
               {text,"\bFun1(2)."},
               {text,[6,10,51,10,51,62,32]},
               {text,".Fun2 = fun (X) when X>=5 -> gt; (X) -> lt end."},
               {text,[5,10,35,70,117,110]},
               {text,
                [20,60,101,114,108,95,101,118,97,108,46,54,46,51,57,48,55,52,
                 53,52,54]},
               {text,[5,62,10,52,62,32]},
               {text,"\bFun2(7)."},
               {text,[7,10,103,116,10,53,62,32]},
               {text,
                "CFun3 = fun Fact(1) -> 1; Fact(X) when X > 1 -> X * Fact(X - 1) end."},
               {text,[5,10,35,70,117,110]},
               {text,
                [20,60,101,114,108,95,101,118,97,108,46,54,46,51,57,48,55,52,
                 53,52,54]},
               {text,[5,62,10,54,62,32]},
               {text,"\bFun3(4)."},
               {text,[3,10,50,52]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"/The following fun expressions are also allowed:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"%\nfun Name/Arity\nfun Module:Name/Arity"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,110]}],0,false},
               {text,"\f*Name/Arity*"},
               {sep,[{text,[1,44]}],0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,
                [{text,
                  [14,105,115,32,97,110,32,97,116,111,109,32,97,110,100]}],
                0,false},
               {text,[7,42,65,114,105,116,121,42]},
               {sep,
                [{text,
                  [14,105,115,32,97,110,32,105,110,116,101,103,101,114,46]}],
                0,false},
               {text,"\f*Name/Arity*"},
               {sep,
                [{text,
                  "Omust specify an existing local function. The expression is syntactic sugar for:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"/\nfun (Arg1,...,ArgN) -> Name(Arg1,...,ArgN) end"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,110]}],0,false},
               {text,
                [19,42,77,111,100,117,108,101,58,78,97,109,101,47,65,114,105,
                 116,121,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,"\b*Module*"},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,[{text,"\rare atoms and"}],0,false},
               {text,[7,42,65,114,105,116,121,42]},
               {sep,
                [{text,",is an integer. Starting from Erlang/OTP R15,"}],
                0,false},
               {text,"\b*Module*"},
               {sep,[{text,[1,44]}],0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[7,42,65,114,105,116,121,42]},
               {sep,
                [{text,
                  "Gcan also be variables. A fun defined in this way refers to the function"}],
                0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,[{text,"\nwith arity"}],0,false},
               {text,[7,42,65,114,105,116,121,42]},
               {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
               {text,"\n**latest**"},
               {sep,
                [{text,
                  [17,118,101,114,115,105,111,110,32,111,102,32,109,111,100,
                   117,108,101]}],
                0,false},
               {text,"\b*Module*"},
               {sep,
                [{text,
                  "_. A fun defined in this way is not dependent on the code for the module in which it is defined."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,77,111,114,101,32,101,120,97,109,112,108,101,115,32,97,
                   114,101,32,112,114,111,118,105,100,101,100,32,105,110]}],
                0,false},
               {text,
                [30,91,80,114,111,103,114,97,109,109,105,110,103,32,69,120,97,
                 109,112,108,101,115,93,40,46,47,102,117,110,115,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [25,60,97,32,110,97,109,101,61,34,99,97,116,99,104,34,62,99,97,116,
          99,104,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [20,35,35,35,35,32,67,97,116,99,104,32,97,110,100,32,84,104,114,
             111,119]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,{text,[3,96,96,96]},{sep,[{text,"\v\ncatch Expr"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,82,101,116,117,114,110,115,32,116,104,101,32,118,97,108,
                   117,101,32,111,102]}],
                0,false},
               {text,[6,42,69,120,112,114,42]},
               {sep,
                [{text,
                  "Xunless an exception occurs during the evaluation. In that case, the exception is caught."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,70,111,114,32,101,120,99,101,112,116,105,111,110,115,32,
                   111,102,32,99,108,97,115,115]}],
                0,false},
               {text,[7,42,101,114,114,111,114,42]},
               {sep,[{text,"\e, that is, run-time errors,"}],0,false},
               {text,
                [25,42,123,39,69,88,73,84,39,44,123,82,101,97,115,111,110,44,
                 83,116,97,99,107,125,125,42]},
               {sep,[{text,"\fis returned."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,70,111,114,32,101,120,99,101,112,116,105,111,110,115,32,
                   111,102,32,99,108,97,115,115]}],
                0,false},
               {text,[6,42,101,120,105,116,42]},
               {sep,
                [{text,
                  [26,44,32,116,104,97,116,32,105,115,44,32,116,104,101,32,99,
                   111,100,101,32,99,97,108,108,101,100]}],
                0,false},
               {text,"\f*exit(Term)*"},
               {sep,[{text,[1,44]}],0,false},
               {text,[15,42,123,39,69,88,73,84,39,44,84,101,114,109,125,42]},
               {sep,[{text,"\fis returned."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,70,111,114,32,101,120,99,101,112,116,105,111,110,115,32,
                   111,102,32,99,108,97,115,115]}],
                0,false},
               {text,[7,42,116,104,114,111,119,42]},
               {sep,
                [{text,
                  [25,44,32,116,104,97,116,32,105,115,32,116,104,101,32,99,
                   111,100,101,32,99,97,108,108,101,100]}],
                0,false},
               {text,"\r*throw(Term)*"},
               {sep,[{text,[1,44]}],0,false},
               {text,[6,42,84,101,114,109,42]},
               {sep,[{text,"\fis returned."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\b*Reason*"},
               {sep,
                [{text,"/depends on the type of error that occurred, and"}],
                0,false},
               {text,[7,42,83,116,97,99,107,42]},
               {sep,
                [{text,"*is the stack of recent function calls, see"}],
                0,false},
               {text,"%[Exit Reasons](./errors#exit_reasons)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,"\ncatch 1+2."},
               {text,[6,10,51,10,50,62,32]},
               {text,"\ncatch 1+a."},
               {text,
                [26,10,123,39,69,88,73,84,39,44,123,98,97,100,97,114,105,116,
                 104,44,91,46,46,46,93,125,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\vNotice that"}],0,false},
               {text,[7,42,99,97,116,99,104,42]},
               {sep,
                [{text,
                  "ohas low precedence and catch subexpressions often needs to be enclosed in a block expression or in parentheses:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,51,62,32]},
               {text,[14,65,32,61,32,99,97,116,99,104,32,49,43,50,46]},
               {text,"*\n** 1: syntax error before: 'catch' **\n4> "},
               {text,[16,65,32,61,32,40,99,97,116,99,104,32,49,43,50,41,46]},
               {text,[2,10,51]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[7,84,104,101,32,66,73,70]}],0,false},
               {text,"\f*throw(Any)*"},
               {sep,
                [{text,
                  "Ocan be used for non-local return from a function. It must be evaluated within a"}],
                0,false},
               {text,[7,42,99,97,116,99,104,42]},
               {sep,
                [{text,
                  [25,44,32,119,104,105,99,104,32,114,101,116,117,114,110,115,
                   32,116,104,101,32,118,97,108,117,101]}],
                0,false},
               {text,[5,42,65,110,121,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,53,62,32]},
               {text,
                [19,99,97,116,99,104,32,116,104,114,111,119,40,104,101,108,
                 108,111,41,46]},
               {text,[6,10,104,101,108,108,111]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,"\t*throw/1*"},
               {sep,[{text,"\"is not evaluated within a catch, a"}],0,false},
               {text,"\t*nocatch*"},
               {sep,
                [{text,
                  [22,114,117,110,45,116,105,109,101,32,101,114,114,111,114,
                   32,111,99,99,117,114,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [21,60,97,32,110,97,109,101,61,34,116,114,121,34,62,116,114,121,60,
          47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\b#### Try"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Ñ\ntry Exprs\ncatch\n    Class1:ExceptionPattern1[:Stacktrace] [when ExceptionGuardSeq1] ->\n        ExceptionBody1;\n    ClassN:ExceptionPatternN[:Stacktrace] [when ExceptionGuardSeqN] ->\n        ExceptionBodyN\nend"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [25,84,104,105,115,32,105,115,32,97,110,32,101,110,104,97,
                   110,99,101,109,101,110,116,32,111,102]}],
                0,false},
               {text,[15,91,99,97,116,99,104,93,40,35,99,97,116,99,104,41]},
               {sep,
                [{text,
                  [30,46,32,73,116,32,103,105,118,101,115,32,116,104,101,32,
                   112,111,115,115,105,98,105,108,105,116,121,32,116,111,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {text,"0Distinguish between different exception classes."}],
           0,false},
          {sep,
           [{text,[1,42]},{text,"'Choose to handle only the desired ones."}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,"%Passing the others on to an enclosing"}],0,false},
             {text,[5,42,116,114,121,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,[7,42,99,97,116,99,104,42]},
             {sep,
              [{text,
                [31,44,32,111,114,32,116,111,32,100,101,102,97,117,108,116,32,
                 101,114,114,111,114,32,104,97,110,100,108,105,110,103,46]}],
              0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text," Notice that although the keyword"}],0,false},
               {text,[7,42,99,97,116,99,104,42]},
               {sep,
                [{text,
                  [14,105,115,32,117,115,101,100,32,105,110,32,116,104,101]}],
                0,false},
               {text,[5,42,116,114,121,42]},
               {sep,
                [{text,
                  [26,101,120,112,114,101,115,115,105,111,110,44,32,116,104,
                   101,114,101,32,105,115,32,110,111,116,32,97]}],
                0,false},
               {text,[7,42,99,97,116,99,104,42]},
               {sep,
                [{text,
                  [21,101,120,112,114,101,115,115,105,111,110,32,119,105,116,
                   104,105,110,32,116,104,101]}],
                0,false},
               {text,[5,42,116,114,121,42]},
               {sep,[{text,"\vexpression."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,73,116,32,114,101,116,117,114,110,115,32,116,104,101,32,
                   118,97,108,117,101,32,111,102]}],
                0,false},
               {text,[7,42,69,120,112,114,115,42]},
               {sep,
                [{text,
                  [26,40,97,32,115,101,113,117,101,110,99,101,32,111,102,32,
                   101,120,112,114,101,115,115,105,111,110,115]}],
                0,false},
               {text,
                [19,42,69,120,112,114,49,44,32,46,46,46,44,32,69,120,112,114,
                 78,42]},
               {sep,
                [{text,
                  "i) unless an exception occurs during the evaluation. In that case the exception is caught and the patterns"}],
                0,false},
               {text,
                [18,42,69,120,99,101,112,116,105,111,110,80,97,116,116,101,
                 114,110,42]},
               {sep,
                [{text,
                  [30,119,105,116,104,32,116,104,101,32,114,105,103,104,116,
                   32,101,120,99,101,112,116,105,111,110,32,99,108,97,115,
                   115]}],
                0,false},
               {text,[7,42,67,108,97,115,115,42]},
               {sep,
                [{text,
                  "jare sequentially matched against the caught exception. If a match succeeds and the optional guard sequence"}],
                0,false},
               {text,
                [19,42,69,120,99,101,112,116,105,111,110,71,117,97,114,100,83,
                 101,113,42]},
               {sep,
                [{text,
                  [26,105,115,32,116,114,117,101,44,32,116,104,101,32,99,111,
                   114,114,101,115,112,111,110,100,105,110,103]}],
                0,false},
               {text,
                [15,42,69,120,99,101,112,116,105,111,110,66,111,100,121,42]},
               {sep,
                [{text,"(is evaluated to become the return value."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\f*Stacktrace*"},
               {sep,
                [{text,
                  [127,44,32,105,102,32,115,112,101,99,105,102,105,101,100,44,
                   32,109,117,115,116,32,98,101,32,116,104,101,32,110,97,109,
                   101,32,111,102,32,97,32,118,97,114,105,97,98,108,101,32,40,
                   110,111,116,32,97,32,112,97,116,116,101,114,110,41,46,32,
                   84,104,101,32,115,116,97,99,107,32,116,114,97,99,101,32,
                   105,115,32,98,111,117,110,100,32,116,111,32,116,104,101,32,
                   118,97,114,105,97,98,108,101,32,119,104,101,110,32,116,104,
                   101,32,99,111,114,114,101,115,112,111,110,100,105,110,
                   103]}],
                0,false},
               {text,
                [18,42,69,120,99,101,112,116,105,111,110,80,97,116,116,101,
                 114,110,42]},
               {sep,[{text,"\bmatches."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"+If an exception occurs during evaluation of"}],
                0,false},
               {text,[7,42,69,120,112,114,115,42]},
               {sep,
                [{text,
                  [24,98,117,116,32,116,104,101,114,101,32,105,115,32,110,111,
                   32,109,97,116,99,104,105,110,103]}],
                0,false},
               {text,
                [18,42,69,120,99,101,112,116,105,111,110,80,97,116,116,101,
                 114,110,42]},
               {sep,[{text,"\fof the right"}],0,false},
               {text,[7,42,67,108,97,115,115,42]},
               {sep,
                [{text,
                  "<with a true guard sequence, the exception is passed on as if"}],
                0,false},
               {text,[7,42,69,120,112,114,115,42]},
               {sep,
                [{text,
                  [26,104,97,100,32,110,111,116,32,98,101,101,110,32,101,110,
                   99,108,111,115,101,100,32,105,110,32,97]}],
                0,false},
               {text,[5,42,116,114,121,42]},
               {sep,[{text,"\vexpression."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"+If an exception occurs during evaluation of"}],
                0,false},
               {text,
                [15,42,69,120,99,101,112,116,105,111,110,66,111,100,121,42]},
               {sep,
                [{text,
                  [19,44,32,105,116,32,105,115,32,110,111,116,32,99,97,117,
                   103,104,116,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [21,73,116,32,105,115,32,97,108,108,111,119,101,100,32,116,
                   111,32,111,109,105,116]}],
                0,false},
               {text,[7,42,67,108,97,115,115,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\f*Stacktrace*"},
               {sep,[{text,"\f. An omitted"}],0,false},
               {text,[7,42,67,108,97,115,115,42]},
               {sep,
                [{text,
                  [16,105,115,32,115,104,111,114,116,104,97,110,100,32,102,
                   111,114]}],
                0,false},
               {text,[7,42,116,104,114,111,119,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "©\ntry Exprs\ncatch\n    ExceptionPattern1 [when ExceptionGuardSeq1] ->\n        ExceptionBody1;\n    ExceptionPatternN [when ExceptionGuardSeqN] ->\n        ExceptionBodyN\nend"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,[5,42,116,114,121,42]},
               {sep,
                [{text,
                  [22,101,120,112,114,101,115,115,105,111,110,32,99,97,110,32,
                   104,97,118,101,32,97,110]}],
                0,false},
               {text,[4,42,111,102,42]},
               {sep,[{text,"\bsection:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [325,10,116,114,121,32,69,120,112,114,115,32,111,102,10,32,32,
                 32,32,80,97,116,116,101,114,110,49,32,91,119,104,101,110,32,
                 71,117,97,114,100,83,101,113,49,93,32,45,62,10,32,32,32,32,
                 32,32,32,32,66,111,100,121,49,59,10,32,32,32,32,46,46,46,59,
                 10,32,32,32,32,80,97,116,116,101,114,110,78,32,91,119,104,
                 101,110,32,71,117,97,114,100,83,101,113,78,93,32,45,62,10,32,
                 32,32,32,32,32,32,32,66,111,100,121,78,10,99,97,116,99,104,
                 10,32,32,32,32,67,108,97,115,115,49,58,69,120,99,101,112,116,
                 105,111,110,80,97,116,116,101,114,110,49,91,58,83,116,97,99,
                 107,116,114,97,99,101,93,32,91,119,104,101,110,32,69,120,99,
                 101,112,116,105,111,110,71,117,97,114,100,83,101,113,49,93,
                 32,45,62,10,32,32,32,32,32,32,32,32,69,120,99,101,112,116,
                 105,111,110,66,111,100,121,49,59,10,32,32,32,32,46,46,46,59,
                 10,32,32,32,32,67,108,97,115,115,78,58,69,120,99,101,112,116,
                 105,111,110,80,97,116,116,101,114,110,78,91,58,83,116,97,99,
                 107,116,114,97,99,101,93,32,91,119,104,101,110,32,69,120,99,
                 101,112,116,105,111,110,71,117,97,114,100,83,101,113,78,93,
                 32,45,62,10,32,32,32,32,32,32,32,32,69,120,99,101,112,116,
                 105,111,110,66,111,100,121,78,10,101,110,100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,73,102,32,116,104,101,32,101,118,97,108,117,97,116,105,
                   111,110,32,111,102]}],
                0,false},
               {text,[7,42,69,120,112,114,115,42]},
               {sep,
                [{text,"+succeeds without an exception, the patterns"}],
                0,false},
               {text,"\t*Pattern*"},
               {sep,
                [{text,
                  "Dare sequentially matched against the result in the same way as for a"}],
                0,false},
               {text,"\r[case](#case)"},
               {sep,
                [{text,"0expression, except that if the matching fails, a"}],
                0,false},
               {text,"\f*try_clause*"},
               {sep,
                [{text,
                  [22,114,117,110,45,116,105,109,101,32,101,114,114,111,114,
                   32,111,99,99,117,114,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"/An exception occurring during the evaluation of"}],
                0,false},
               {text,[6,42,66,111,100,121,42]},
               {sep,
                [{text,
                  [14,105,115,32,110,111,116,32,99,97,117,103,104,116,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,[5,42,116,114,121,42]},
               {sep,
                [{text,"(expression can also be augmented with an"}],
                0,false},
               {text,[7,42,97,102,116,101,114,42]},
               {sep,
                [{text,
                  ";section, intended to be used for cleanup with side effects:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [345,10,116,114,121,32,69,120,112,114,115,32,111,102,10,32,32,
                 32,32,80,97,116,116,101,114,110,49,32,91,119,104,101,110,32,
                 71,117,97,114,100,83,101,113,49,93,32,45,62,10,32,32,32,32,
                 32,32,32,32,66,111,100,121,49,59,10,32,32,32,32,46,46,46,59,
                 10,32,32,32,32,80,97,116,116,101,114,110,78,32,91,119,104,
                 101,110,32,71,117,97,114,100,83,101,113,78,93,32,45,62,10,32,
                 32,32,32,32,32,32,32,66,111,100,121,78,10,99,97,116,99,104,
                 10,32,32,32,32,67,108,97,115,115,49,58,69,120,99,101,112,116,
                 105,111,110,80,97,116,116,101,114,110,49,91,58,83,116,97,99,
                 107,116,114,97,99,101,93,32,91,119,104,101,110,32,69,120,99,
                 101,112,116,105,111,110,71,117,97,114,100,83,101,113,49,93,
                 32,45,62,10,32,32,32,32,32,32,32,32,69,120,99,101,112,116,
                 105,111,110,66,111,100,121,49,59,10,32,32,32,32,46,46,46,59,
                 10,32,32,32,32,67,108,97,115,115,78,58,69,120,99,101,112,116,
                 105,111,110,80,97,116,116,101,114,110,78,91,58,83,116,97,99,
                 107,116,114,97,99,101,93,32,91,119,104,101,110,32,69,120,99,
                 101,112,116,105,111,110,71,117,97,114,100,83,101,113,78,93,
                 32,45,62,10,32,32,32,32,32,32,32,32,69,120,99,101,112,116,
                 105,111,110,66,111,100,121,78,10,97,102,116,101,114,10,32,32,
                 32,32,65,102,116,101,114,66,111,100,121,10,101,110,100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v*AfterBody*"},
               {sep,
                [{text,
                  [25,105,115,32,101,118,97,108,117,97,116,101,100,32,97,102,
                   116,101,114,32,101,105,116,104,101,114]}],
                0,false},
               {text,[6,42,66,111,100,121,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [15,42,69,120,99,101,112,116,105,111,110,66,111,100,121,42]},
               {sep,
                [{text,"-, no matter which one. The evaluated value of"}],
                0,false},
               {text,"\v*AfterBody*"},
               {sep,[{text," is lost; the return value of the"}],0,false},
               {text,[5,42,116,114,121,42]},
               {sep,
                [{text,
                  [30,101,120,112,114,101,115,115,105,111,110,32,105,115,32,
                   116,104,101,32,115,97,109,101,32,119,105,116,104,32,97,
                   110]}],
                0,false},
               {text,[7,42,97,102,116,101,114,42]},
               {sep,
                [{text,
                  [19,115,101,99,116,105,111,110,32,97,115,32,119,105,116,104,
                   111,117,116,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"0Even if an exception occurs during evaluation of"}],
                0,false},
               {text,[6,42,66,111,100,121,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [15,42,69,120,99,101,112,116,105,111,110,66,111,100,121,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,"\v*AfterBody*"},
               {sep,
                [{text,
                  ";is evaluated. In this case the exception is passed on after"}],
                0,false},
               {text,"\v*AfterBody*"},
               {sep,
                [{text,"-has been evaluated, so the exception from the"}],
                0,false},
               {text,[5,42,116,114,121,42]},
               {sep,
                [{text,
                  [30,101,120,112,114,101,115,115,105,111,110,32,105,115,32,
                   116,104,101,32,115,97,109,101,32,119,105,116,104,32,97,
                   110]}],
                0,false},
               {text,[7,42,97,102,116,101,114,42]},
               {sep,
                [{text,
                  [19,115,101,99,116,105,111,110,32,97,115,32,119,105,116,104,
                   111,117,116,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"+If an exception occurs during evaluation of"}],
                0,false},
               {text,"\v*AfterBody*"},
               {sep,
                [{text,
                  [31,105,116,115,101,108,102,44,32,105,116,32,105,115,32,110,
                   111,116,32,99,97,117,103,104,116,46,32,83,111,32,105,102]}],
                0,false},
               {text,"\v*AfterBody*"},
               {sep,[{text,"\"is evaluated after an exception in"}],0,false},
               {text,[7,42,69,120,112,114,115,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[6,42,66,111,100,121,42]},
               {sep,[{text,[4,44,32,111,114]}],0,false},
               {text,
                [15,42,69,120,99,101,112,116,105,111,110,66,111,100,121,42]},
               {sep,
                [{text,
                  "7, that exception is lost and masked by the exception in"}],
                0,false},
               {text,"\v*AfterBody*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,[4,42,111,102,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[7,42,99,97,116,99,104,42]},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[7,42,97,102,116,101,114,42]},
               {sep,
                [{text,
                  "9sections are all optional, as long as there is at least a"}],
                0,false},
               {text,[7,42,99,97,116,99,104,42]},
               {sep,[{text,[5,111,114,32,97,110]}],0,false},
               {text,[7,42,97,102,116,101,114,42]},
               {sep,[{text,"#section. So the following are valid"}],0,false},
               {text,[5,42,116,114,121,42]},
               {sep,[{text,"\fexpressions:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Î\ntry Exprs of \n    Pattern when GuardSeq -> \n        Body \nafter \n    AfterBody \nend\n\ntry Exprs\ncatch \n    ExpressionPattern -> \n        ExpressionBody\nafter\n    AfterBody\nend\n\ntry Exprs after AfterBody end"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\eNext is an example of using"}],0,false},
               {text,[7,42,97,102,116,101,114,42]},
               {sep,
                [{text,
                  ":. This closes the file, even in the event of exceptions in"}],
                0,false},
               {text,"\r*file:read/2*"},
               {sep,[{text,[5,111,114,32,105,110]}],0,false},
               {text,
                [18,42,98,105,110,97,114,121,95,116,111,95,116,101,114,109,47,
                 49,42]},
               {sep,
                [{text,",. The exceptions are the same as without the"}],
                0,false},
               {text,[5,42,116,114,121,42]},
               {sep,[{text,[3,46,46,46]}],0,false},
               {text,[7,42,97,102,116,101,114,42]},
               {sep,[{text,[3,46,46,46]}],0,false},
               {text,[5,42,101,110,100,42]},
               {sep,[{text,"\vexpression:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "¼\ntermize_file(Name) ->\n    {ok,F} = file:open(Name, [read,binary]),\n    try\n        {ok,Bin} = file:read(F, 1024*1024),\n        binary_to_term(Bin)\n    after\n        file:close(F)\n    end."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\eNext is an example of using"}],0,false},
               {text,[5,42,116,114,121,42]},
               {sep,[{text,"\nto emulate"}],0,false},
               {text,"\f*catch Expr*"},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "|\ntry Expr\ncatch\n    throw:Term -> Term;\n    exit:Reason -> {'EXIT',Reason}\n    error:Reason:Stk -> {'EXIT',{Reason,Stk}}\nend"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [30,35,35,35,35,32,80,97,114,101,110,116,104,101,115,105,122,101,
             100,32,69,120,112,114,101,115,115,105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,[7,10,40,69,120,112,114,41]}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"0Parenthesized expressions are useful to override"}],
                0,false},
               {text,
                [29,91,111,112,101,114,97,116,111,114,32,112,114,101,99,101,
                 100,101,110,99,101,115,93,40,35,112,114,101,99,41]},
               {sep,
                [{text,"), for example, in arithmetic expressions:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,"\n1 + 2 * 3."},
               {text,[6,10,55,10,50,62,32]},
               {text,"\f(1 + 2) * 3."},
               {text,[2,10,57]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [22,35,35,35,35,32,66,108,111,99,107,32,69,120,112,114,101,115,
             115,105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"%\nbegin\n   Expr1,\n   ...,\n   ExprN\nend"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [146,66,108,111,99,107,32,101,120,112,114,101,115,115,105,
                   111,110,115,32,112,114,111,118,105,100,101,32,97,32,119,97,
                   121,32,116,111,32,103,114,111,117,112,32,97,32,115,101,113,
                   117,101,110,99,101,32,111,102,32,101,120,112,114,101,115,
                   115,105,111,110,115,44,32,115,105,109,105,108,97,114,32,
                   116,111,32,97,32,99,108,97,117,115,101,32,98,111,100,121,
                   46,32,84,104,101,32,114,101,116,117,114,110,32,118,97,108,
                   117,101,32,105,115,32,116,104,101,32,118,97,108,117,101,32,
                   111,102,32,116,104,101,32,108,97,115,116,32,101,120,112,
                   114,101,115,115,105,111,110]}],
                0,false},
               {text,[7,42,69,120,112,114,78,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [21,60,97,32,110,97,109,101,61,34,108,99,115,34,62,108,99,115,60,47,
          97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,76,105,115,116,32,67,111,109,112,114,101,104,
             101,110,115,105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "¯List comprehensions is a feature of many modern functional programming languages. Subject to certain rules, they provide a succinct notation for generating elements in a list."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [153,76,105,115,116,32,99,111,109,112,114,101,104,101,110,
                   115,105,111,110,115,32,97,114,101,32,97,110,97,108,111,103,
                   111,117,115,32,116,111,32,115,101,116,32,99,111,109,112,
                   114,101,104,101,110,115,105,111,110,115,32,105,110,32,90,
                   101,114,109,101,108,111,45,70,114,97,110,107,101,108,32,
                   115,101,116,32,116,104,101,111,114,121,32,97,110,100,32,97,
                   114,101,32,99,97,108,108,101,100,32,90,70,32,101,120,112,
                   114,101,115,115,105,111,110,115,32,105,110,32,77,105,114,
                   97,110,100,97,46,32,84,104,101,121,32,97,114,101,32,97,110,
                   97,108,111,103,111,117,115,32,116,111,32,116,104,101]}],
                0,false},
               {text,[7,42,115,101,116,111,102,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\t*findall*"},
               {sep,
                [{text,
                  [21,112,114,101,100,105,99,97,116,101,115,32,105,110,32,80,
                   114,111,108,111,103,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                ":List comprehensions are written with the following syntax:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"$\n[Expr || Qualifier1,...,QualifierN]"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[5,72,101,114,101,44]}],0,false},
               {text,[6,42,69,120,112,114,42]},
               {sep,[{text,"$is an arbitrary expression, and each"}],0,false},
               {text,"\v*Qualifier*"},
               {sep,[{text,"\"is either a generator or a filter."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,[1,65]}],0,false},
              {text,"\r**generator**"},
              {sep,
               [{text,
                 [14,105,115,32,119,114,105,116,116,101,110,32,97,115,58]}],
               0,false},
              {above,{above,null,null},null},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {text,
               [21,42,80,97,116,116,101,114,110,32,60,45,32,76,105,115,116,69,
                120,112,114,42]},
              {sep,[{text,[1,46]}],0,false},
              {above,{above,null,null},null},
              {text,"\n*ListExpr*"},
              {sep,
               [{text,
                 ":must be an expression, which evaluates to a list of terms."}],
               0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,[1,65]}],0,false},
              {text,
               [24,42,42,98,105,116,32,115,116,114,105,110,103,32,103,101,110,
                101,114,97,116,111,114,42,42]},
              {sep,
               [{text,
                 [14,105,115,32,119,114,105,116,116,101,110,32,97,115,58]}],
               0,false},
              {above,{above,null,null},null},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {text,"#*BitstringPattern <= BitStringExpr*"},
              {sep,[{text,[1,46]}],0,false},
              {above,{above,null,null},null},
              {text,
               [15,42,66,105,116,83,116,114,105,110,103,69,120,112,114,42]},
              {sep,
               [{text,
                 "6must be an expression, which evaluates to a bitstring."}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,[1,65]}],0,false},
             {text,"\n**filter**"},
             {sep,[{text,"$is an expression, which evaluates to"}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "vThe variables in the generator patterns, shadow variables in the function clause, surrounding the list comprehensions."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "TA list comprehension returns a list, where the elements are the result of evaluating"}],
                0,false},
               {text,[6,42,69,120,112,114,42]},
               {sep,
                [{text,
                  "rfor each combination of generator list elements and bit string generator elements, for which all filters are true."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [22,91,88,42,50,32,124,124,32,88,32,60,45,32,91,49,44,50,44,
                 51,93,93,46]},
               {text,"\b\n[2,4,6]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [140,87,104,101,110,32,116,104,101,114,101,32,97,114,101,32,
                   110,111,32,103,101,110,101,114,97,116,111,114,115,32,111,
                   114,32,98,105,116,32,115,116,114,105,110,103,32,103,101,
                   110,101,114,97,116,111,114,115,44,32,97,32,108,105,115,116,
                   32,99,111,109,112,114,101,104,101,110,115,105,111,110,32,
                   114,101,116,117,114,110,115,32,101,105,116,104,101,114,32,
                   97,32,108,105,115,116,32,119,105,116,104,32,111,110,101,32,
                   101,108,101,109,101,110,116,32,40,116,104,101,32,114,101,
                   115,117,108,116,32,111,102,32,101,118,97,108,117,97,116,
                   105,110,103]}],
                0,false},
               {text,[6,42,69,120,112,114,42]},
               {sep,
                [{text,
                  "5) if all filters are true or an empty list otherwise."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                [21,91,50,32,124,124,32,105,115,95,105,110,116,101,103,101,
                 114,40,50,41,93,46]},
               {text,"\b\n[2]\n2> "},
               {text,
                [21,91,120,32,124,124,32,105,115,95,105,110,116,101,103,101,
                 114,40,120,41,93,46]},
               {text,[3,10,91,93]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,77,111,114,101,32,101,120,97,109,112,108,101,115,32,97,
                   114,101,32,112,114,111,118,105,100,101,100,32,105,110]}],
                0,false},
               {text,".[Programming Examples.](./list_comprehensions)"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [30,35,35,35,35,32,66,105,116,32,83,116,114,105,110,103,32,67,111,
             109,112,114,101,104,101,110,115,105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [129,66,105,116,32,115,116,114,105,110,103,32,99,111,109,112,
                 114,101,104,101,110,115,105,111,110,115,32,97,114,101,32,97,
                 110,97,108,111,103,111,117,115,32,116,111,32,76,105,115,116,
                 32,67,111,109,112,114,101,104,101,110,115,105,111,110,115,46,
                 32,84,104,101,121,32,97,114,101,32,117,115,101,100,32,116,
                 111,32,103,101,110,101,114,97,116,101,32,98,105,116,32,115,
                 116,114,105,110,103,115,32,101,102,102,105,99,105,101,110,
                 116,108,121,32,97,110,100,32,115,117,99,99,105,110,99,116,
                 108,121,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "@Bit string comprehensions are written with the following syntax:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"1\n<< BitStringExpr || Qualifier1,...,QualifierN >>"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [15,42,66,105,116,83,116,114,105,110,103,69,120,112,114,42]},
               {sep,
                [{text,"2is an expression that evalutes to a bit string. If"}],
                0,false},
               {text,
                [15,42,66,105,116,83,116,114,105,110,103,69,120,112,114,42]},
               {sep,
                [{text,
                  "<is a function call, it must be enclosed in parentheses. Each"}],
                0,false},
               {text,"\v*Qualifier*"},
               {sep,
                [{text,
                  ":is either a generator, a bit string generator or a filter."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,[1,65]}],0,false},
              {text,"\r**generator**"},
              {sep,
               [{text,
                 [14,105,115,32,119,114,105,116,116,101,110,32,97,115,58]}],
               0,false},
              {above,{above,null,null},null},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {text,
               [21,42,80,97,116,116,101,114,110,32,60,45,32,76,105,115,116,69,
                120,112,114,42]},
              {sep,[{text,[1,46]}],0,false},
              {above,{above,null,null},null},
              {text,"\n*ListExpr*"},
              {sep,
               [{text,
                 "8must be an expression that evaluates to a list of terms."}],
               0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,[1,65]}],0,false},
              {text,
               [24,42,42,98,105,116,32,115,116,114,105,110,103,32,103,101,110,
                101,114,97,116,111,114,42,42]},
              {sep,
               [{text,
                 [14,105,115,32,119,114,105,116,116,101,110,32,97,115,58]}],
               0,false},
              {above,{above,null,null},null},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {text,"#*BitstringPattern <= BitStringExpr*"},
              {sep,[{text,[1,46]}],0,false},
              {above,{above,null,null},null},
              {text,
               [15,42,66,105,116,83,116,114,105,110,103,69,120,112,114,42]},
              {sep,
               [{text,
                 "4must be an expression that evaluates to a bitstring."}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,[1,65]}],0,false},
             {text,"\n**filter**"},
             {sep,[{text,"\"is an expression that evaluates to"}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "|The variables in the generator patterns, shadow variables in the function clause, surrounding the bit string comprehensions."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "lA bit string comprehension returns a bit string, which is created by concatenating the results of evaluating"}],
                0,false},
               {text,"\v*BitString*"},
               {sep,
                [{text,
                  "Vfor each combination of bit string generator elements, for which all filters are true."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,"*<< << (X*2) >> || <<X>> <= << 1,2,3 >> >>."},
               {text,[1,10]},
               {text,[1,60]},
               {text,[6,60,50,44,52,44,54]},
               {text,[1,62]},
               {text,[1,62]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,77,111,114,101,32,101,120,97,109,112,108,101,115,32,97,
                   114,101,32,112,114,111,118,105,100,101,100,32,105,110]}],
                0,false},
               {text,"%[Programming Examples.](./bit_syntax)"}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,"\e<a name=\"guards\">guards</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [20,35,35,35,35,32,71,117,97,114,100,32,83,101,113,117,101,110,99,
             101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[1,65]}],0,false},
               {text,
                [18,42,42,103,117,97,114,100,32,115,101,113,117,101,110,99,
                 101,42,42]},
               {sep,
                [{text,
                  "©is a sequence of guards, separated by semicolon (;). The guard sequence is true if at least one of the guards is true. (The remaining guards, if any, are not evaluated.)"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [19,42,71,117,97,114,100,49,59,46,46,46,59,71,117,97,114,100,
                 75,42]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[1,65]}],0,false},
               {text,"\t**guard**"},
               {sep,
                [{text,
                  "ris a sequence of guard expressions, separated by comma (,). The guard is true if all guard expressions evaluate to"}],
                0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"\e*GuardExpr1,...,GuardExprN*"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [16,84,104,101,32,115,101,116,32,111,102,32,118,97,108,105,
                   100]}],
                0,false},
               {text,
                [21,42,42,103,117,97,114,100,32,101,120,112,114,101,115,115,
                 105,111,110,115,42,42]},
               {sep,
                [{text,
                  [269,40,115,111,109,101,116,105,109,101,115,32,99,97,108,
                   108,101,100,32,103,117,97,114,100,32,116,101,115,116,115,
                   41,32,105,115,32,97,32,115,117,98,115,101,116,32,111,102,
                   32,116,104,101,32,115,101,116,32,111,102,32,118,97,108,105,
                   100,32,69,114,108,97,110,103,32,101,120,112,114,101,115,
                   115,105,111,110,115,46,32,84,104,101,32,114,101,97,115,111,
                   110,32,102,111,114,32,114,101,115,116,114,105,99,116,105,
                   110,103,32,116,104,101,32,115,101,116,32,111,102,32,118,97,
                   108,105,100,32,101,120,112,114,101,115,115,105,111,110,115,
                   32,105,115,32,116,104,97,116,32,101,118,97,108,117,97,116,
                   105,111,110,32,111,102,32,97,32,103,117,97,114,100,32,101,
                   120,112,114,101,115,115,105,111,110,32,109,117,115,116,32,
                   98,101,32,103,117,97,114,97,110,116,101,101,100,32,116,111,
                   32,98,101,32,102,114,101,101,32,111,102,32,115,105,100,101,
                   32,101,102,102,101,99,116,115,46,32,86,97,108,105,100,32,
                   103,117,97,114,100,32,101,120,112,114,101,115,115,105,111,
                   110,115,32,97,114,101,32,116,104,101,32,102,111,108,108,
                   111,119,105,110,103,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,"\bThe atom"}],0,false},
                  {text,[6,42,116,114,117,101,42]}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {text,
                 "BOther constants (terms and bound variables), all regarded as false"}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,"$Calls to the BIFs specified in table"}],
                  0,false},
                 {text,
                  [16,42,84,121,112,101,32,84,101,115,116,32,66,73,70,115,
                   42]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {text,
               [16,84,101,114,109,32,99,111,109,112,97,114,105,115,111,110,
                115]}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {text,
              [22,65,114,105,116,104,109,101,116,105,99,32,101,120,112,114,
               101,115,115,105,111,110,115]}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {text,
             [19,66,111,111,108,101,97,110,32,101,120,112,114,101,115,115,105,
              111,110,115]}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,"\eShort-circuit expressions ("}],0,false},
             {text,"\t*andalso*"},
             {sep,[{text,[1,47]}],0,false},
             {text,"\b*orelse*"},
             {sep,[{text,[1,41]}],0,false}],
            0,false}],
          0,false}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "CNotice that most type test BIFs have older equivalents, without the"}],
                0,false},
               {text,[5,42,105,115,95,42]},
               {sep,
                [{text,
                  "Õprefix. These old BIFs are retained for backwards compatibility only and are not to be used in new code. They are also only allowed at top level. For example, they are not allowed in Boolean expressions in guards."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [303,73,102,32,97,110,32,97,114,105,116,104,109,101,116,105,
                 99,32,101,120,112,114,101,115,115,105,111,110,44,32,97,32,66,
                 111,111,108,101,97,110,32,101,120,112,114,101,115,115,105,
                 111,110,44,32,97,32,115,104,111,114,116,45,99,105,114,99,117,
                 105,116,32,101,120,112,114,101,115,115,105,111,110,44,32,111,
                 114,32,97,32,99,97,108,108,32,116,111,32,97,32,103,117,97,
                 114,100,32,66,73,70,32,102,97,105,108,115,32,40,98,101,99,97,
                 117,115,101,32,111,102,32,105,110,118,97,108,105,100,32,97,
                 114,103,117,109,101,110,116,115,41,44,32,116,104,101,32,101,
                 110,116,105,114,101,32,103,117,97,114,100,32,102,97,105,108,
                 115,46,32,73,102,32,116,104,101,32,103,117,97,114,100,32,119,
                 97,115,32,112,97,114,116,32,111,102,32,97,32,103,117,97,114,
                 100,32,115,101,113,117,101,110,99,101,44,32,116,104,101,32,
                 110,101,120,116,32,103,117,97,114,100,32,105,110,32,116,104,
                 101,32,115,101,113,117,101,110,99,101,32,40,116,104,97,116,
                 32,105,115,44,32,116,104,101,32,103,117,97,114,100,32,102,
                 111,108,108,111,119,105,110,103,32,116,104,101,32,110,101,
                 120,116,32,115,101,109,105,99,111,108,111,110,41,32,105,115,
                 32,101,118,97,108,117,97,116,101,100,46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [23,60,97,32,110,97,109,101,61,34,112,114,101,99,34,62,112,114,101,
          99,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,79,112,101,114,97,116,111,114,32,80,114,101,99,
             101,100,101,110,99,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"(Operator precedence in falling priority:"}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ªWhen evaluating an expression, the operator with the highest priority is evaluated first. Operators with the same priority are evaluated according to their associativity."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "FThe left associative arithmetic operators are evaluated left to right:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[1,10]},
               {text,[17,54,32,43,32,53,32,42,32,52,32,45,32,51,32,47,32,50]},
               {text,[14,32,101,118,97,108,117,97,116,101,115,32,116,111,10]},
               {text,"\f6 + 20 - 1.5"},
               {text,[14,32,101,118,97,108,117,97,116,101,115,32,116,111,10]},
               {text,"\b26 - 1.5"},
               {text,[14,32,101,118,97,108,117,97,116,101,115,32,116,111,10]},
               {text,[4,50,52,46,53]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,70,105,108,101,32,73,110,99,108,117,115,105,
             111,110]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"\"A file can be included as follows:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"$\n-include(File).\n-include_lib(File)."}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[6,42,70,105,108,101,42]},
               {sep,
                [{text,
                  "s, a string, is to point out a file. The contents of this file are included as is, at the position of the directive."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [150,73,110,99,108,117,100,101,32,102,105,108,101,115,32,97,
                   114,101,32,116,121,112,105,99,97,108,108,121,32,117,115,
                   101,100,32,102,111,114,32,114,101,99,111,114,100,32,97,110,
                   100,32,109,97,99,114,111,32,100,101,102,105,110,105,116,
                   105,111,110,115,32,116,104,97,116,32,97,114,101,32,115,104,
                   97,114,101,100,32,98,121,32,115,101,118,101,114,97,108,32,
                   109,111,100,117,108,101,115,46,32,73,116,32,105,115,32,114,
                   101,99,111,109,109,101,110,100,101,100,32,116,111,32,117,
                   115,101,32,116,104,101,32,102,105,108,101,32,110,97,109,
                   101,32,101,120,116,101,110,115,105,111,110]}],
                0,false},
               {text,[6,42,46,104,114,108,42]},
               {sep,
                [{text,
                  [18,102,111,114,32,105,110,99,108,117,100,101,32,102,105,
                   108,101,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[6,42,70,105,108,101,42]},
               {sep,
                [{text,
                  [31,99,97,110,32,115,116,97,114,116,32,119,105,116,104,32,
                   97,32,112,97,116,104,32,99,111,109,112,111,110,101,110,
                   116]}],
                0,false},
               {text,[6,42,36,86,65,82,42]},
               {sep,
                [{text,
                  [17,44,32,102,111,114,32,115,111,109,101,32,115,116,114,105,
                   110,103]}],
                0,false},
               {text,[5,42,86,65,82,42]},
               {sep,
                [{text,
                  "<. If that is the case, the value of the environment variable"}],
                0,false},
               {text,[5,42,86,65,82,42]},
               {sep,
                [{text,
                  [14,97,115,32,114,101,116,117,114,110,101,100,32,98,121]}],
                0,false},
               {text,
                [16,42,111,115,58,103,101,116,101,110,118,40,86,65,82,41,42]},
               {sep,
                [{text,
                  [18,105,115,32,115,117,98,115,116,105,116,117,116,101,100,
                   32,102,111,114]}],
                0,false},
               {text,[6,42,36,86,65,82,42]},
               {sep,[{text,[4,46,32,73,102]}],0,false},
               {text,
                [16,42,111,115,58,103,101,116,101,110,118,40,86,65,82,41,42]},
               {sep,[{text,[7,114,101,116,117,114,110,115]}],0,false},
               {text,[7,42,102,97,108,115,101,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[6,42,36,86,65,82,42]},
               {sep,
                [{text,
                  [14,105,115,32,108,101,102,116,32,97,115,32,105,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [15,73,102,32,116,104,101,32,102,105,108,101,110,97,109,
                   101]}],
                0,false},
               {text,[6,42,70,105,108,101,42]},
               {sep,
                [{text,
                  "¿is absolute (possibly after variable substitution), the include file with that name is included. Otherwise, the specified file is searched for in the following directories, and in this order:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {text,
             [29,84,104,101,32,99,117,114,114,101,110,116,32,119,111,114,107,
              105,110,103,32,100,105,114,101,99,116,111,114,121]}],
           0,false},
          {sep,
           [{text,[1,42]},
            {text,"0The directory where the module is being compiled"}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                [28,84,104,101,32,100,105,114,101,99,116,111,114,105,101,115,
                 32,103,105,118,101,110,32,98,121,32,116,104,101]}],
              0,false},
             {text,"\t*include*"},
             {sep,[{text,[6,111,112,116,105,111,110]}],0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,70,111,114,32,100,101,116,97,105,108,115,44,32,115,101,
                   101,32,116,104,101]}],
                0,false},
               {text,
                [17,91,101,114,108,99,40,49,41,93,40,46,47,101,114,108,99,41]},
               {sep,
                [{text,
                  [23,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,32,97,110,100]}],
                0,false},
               {text,
                [23,91,99,111,109,112,105,108,101,40,51,41,93,40,46,47,99,111,
                 109,112,105,108,101,41]},
               {sep,
                [{text,
                  [24,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   67,111,109,112,105,108,101,114,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [146,10,45,105,110,99,108,117,100,101,40,34,109,121,95,114,
                 101,99,111,114,100,115,46,104,114,108,34,41,46,10,45,105,110,
                 99,108,117,100,101,40,34,105,110,99,100,105,114,47,109,121,
                 95,114,101,99,111,114,100,115,46,104,114,108,34,41,46,10,45,
                 105,110,99,108,117,100,101,40,34,47,104,111,109,101,47,117,
                 115,101,114,47,112,114,111,106,47,109,121,95,114,101,99,111,
                 114,100,115,46,104,114,108,34,41,46,10,45,105,110,99,108,117,
                 100,101,40,34,36,80,82,79,74,95,82,79,79,84,47,109,121,95,
                 114,101,99,111,114,100,115,46,104,114,108,34,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\r*include_lib*"},
               {sep,[{text,"\ris similar to"}],0,false},
               {text,"\t*include*"},
               {sep,
                [{text,
                  "¡, but is not to point out an absolute file. Instead, the first path component (possibly after variable substitution) is assumed to be the name of an application."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,")\n-include_lib(\"kernel/include/file.hrl\")."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,84,104,101,32,99,111,100,101,32,115,101,114,118,101,114,
                   32,117,115,101,115]}],
                0,false},
               {text,
                [22,42,99,111,100,101,58,108,105,98,95,100,105,114,40,107,101,
                 114,110,101,108,41,42]},
               {sep,
                [{text,
                  "Zto find the directory of the current (latest) version of Kernel, and then the subdirectory"}],
                0,false},
               {text,"\t*include*"},
               {sep,
                [{text,
                  [24,105,115,32,115,101,97,114,99,104,101,100,32,102,111,114,
                   32,116,104,101,32,102,105,108,101]}],
                0,false},
               {text,"\n*file.hrl*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [30,35,35,35,35,32,68,101,102,105,110,105,110,103,32,97,110,100,
             32,85,115,105,110,103,32,77,97,99,114,111,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [30,65,32,109,97,99,114,111,32,105,115,32,100,101,102,105,110,
                 101,100,32,97,115,32,102,111,108,108,111,119,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "H\n-define(Const, Replacement).\n-define(Func(Var1,...,VarN), Replacement)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "¡A macro definition can be placed anywhere among the attributes and function declarations of a module, but the definition must come before any usage of the macro."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "pIf a macro is used in several modules, it is recommended that the macro definition is placed in an include file."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"\eA macro is used as follows:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [28,10,63,67,111,110,115,116,10,63,70,117,110,99,40,65,114,
                 103,49,44,46,46,46,44,65,114,103,78,41]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "6Macros are expanded during compilation. A simple macro"}],
                0,false},
               {text,"\b*?Const*"},
               {sep,
                [{text,
                  [16,105,115,32,114,101,112,108,97,99,101,100,32,119,105,116,
                   104]}],
                0,false},
               {text,"\r*Replacement*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "[\n-define(TIMEOUT, 200).\n...\ncall(Request) ->\n    server:call(refserver, Request, ?TIMEOUT)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [20,84,104,105,115,32,105,115,32,101,120,112,97,110,100,101,
                 100,32,116,111,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                ";\ncall(Request) ->\n    server:call(refserver, Request, 200)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[7,65,32,109,97,99,114,111]}],0,false},
               {text,
                [22,42,63,70,117,110,99,40,65,114,103,49,44,46,46,46,44,65,
                 114,103,78,41,42]},
               {sep,
                [{text,
                  [16,105,115,32,114,101,112,108,97,99,101,100,32,119,105,116,
                   104]}],
                0,false},
               {text,"\r*Replacement*"},
               {sep,[{text,"%, where all occurrences of a variable"}],0,false},
               {text,[5,42,86,97,114,42]},
               {sep,
                [{text,
                  "Ffrom the macro definition are replaced with the corresponding argument"}],
                0,false},
               {text,[5,42,65,114,103,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Z\n-define(MACRO1(X, Y), {a, X, b, Y}).\n...\nbar(X) ->\n    ?MACRO1(a, b),\n    ?MACRO1(X, 123)"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [20,84,104,105,115,32,105,115,32,101,120,112,97,110,100,101,
                 100,32,116,111,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"*\nbar(X) ->\n    {a,a,b,b},\n    {a,X,b,123}."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "wIt is good programming practice, but not mandatory, to ensure that a macro definition is a valid Erlang syntactic form."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "HTo view the result of macro expansion, a module can be compiled with the"}],
                0,false},
               {text,[5,42,39,80,39,42]},
               {sep,[{text,[7,111,112,116,105,111,110,46]}],0,false},
               {text,"\e*compile:file(File, ['P'])*"},
               {sep,
                [{text,
                  "b. This produces a listing of the parsed code after preprocessing and parse transforms, in the file"}],
                0,false},
               {text,"\b*File.P*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [22,35,35,35,35,32,80,114,101,100,101,102,105,110,101,100,32,77,
             97,99,114,111,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"$The following macros are predefined:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,[7,63,77,79,68,85,76,69]}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {text,
                                [31,84,104,101,32,110,97,109,101,32,111,102,
                                 32,116,104,101,32,99,117,114,114,101,110,116,
                                 32,109,111,100,117,108,101,46]},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,
                               [{sep,
                                 [{text,
                                   [14,63,77,79,68,85,76,69,95,83,84,82,73,78,
                                    71]},
                                  {sep,[{text,[1,46]}],0,false}],
                                 0,false}],
                               0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {text,
                              ",The name of the current module, as a string."},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{sep,
                               [{text,[5,63,70,73,76,69]},
                                {sep,[{text,[1,46]}],0,false}],
                               0,false}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {text,"$The file name of the current module."},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{sep,
                             [{text,[5,63,76,73,78,69]},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {text,
                          [24,84,104,101,32,99,117,114,114,101,110,116,32,108,
                           105,110,101,32,110,117,109,98,101,114,46]},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{sep,
                           [{text,"\b?MACHINE"},{sep,[{text,[1,46]}],0,false}],
                           0,false}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {sep,
                        [{sep,
                          [{text,
                            [17,84,104,101,32,109,97,99,104,105,110,101,32,
                             110,97,109,101,44]}],
                          0,false},
                         {text,[6,39,66,69,65,77,39]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,[14,63,70,85,78,67,84,73,79,78,95,78,65,77,69]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {text,"!The name of the current function."},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [15,63,70,85,78,67,84,73,79,78,95,65,82,73,84,89]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,
                    "9The arity (number of arguments) for the current function."},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\f?OTP_RELEASE"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{sep,
                    [{text,
                      "iThe OTP release that the currently executing ERTS application is part of, as an integer. For details, see"}],
                    0,false},
                   {text,
                    [25,101,114,116,115,47,101,114,108,97,110,103,35,115,121,
                     115,116,101,109,95,105,110,102,111,47,49]},
                   {sep,
                    [{text,".. This macro was introduced in OTP release 21."}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [23,35,35,35,35,32,77,97,99,114,111,115,32,79,118,101,114,108,111,
             97,100,105,110,103]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [157,73,116,32,105,115,32,112,111,115,115,105,98,108,101,32,
                 116,111,32,111,118,101,114,108,111,97,100,32,109,97,99,114,
                 111,115,44,32,101,120,99,101,112,116,32,102,111,114,32,112,
                 114,101,100,101,102,105,110,101,100,32,109,97,99,114,111,115,
                 46,32,65,110,32,111,118,101,114,108,111,97,100,101,100,32,
                 109,97,99,114,111,32,104,97,115,32,109,111,114,101,32,116,
                 104,97,110,32,111,110,101,32,100,101,102,105,110,105,116,105,
                 111,110,44,32,101,97,99,104,32,119,105,116,104,32,97,32,100,
                 105,102,102,101,114,101,110,116,32,110,117,109,98,101,114,32,
                 111,102,32,97,114,103,117,109,101,110,116,115,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"1The feature was added in Erlang 5.7.5/OTP R13B04."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[7,65,32,109,97,99,114,111]}],0,false},
               {text,
                [22,42,63,70,117,110,99,40,65,114,103,49,44,46,46,46,44,65,
                 114,103,78,41,42]},
               {sep,
                [{text,
                  "lwith a (possibly empty) list of arguments results in an error message if there is at least one definition of"}],
                0,false},
               {text,[6,42,70,117,110,99,42]},
               {sep,
                [{text,"*with arguments, but none with N arguments."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"\eAssuming these definitions:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "6\n-define(F0(), c).\n-define(F1(A), A).\n-define(C, m:f)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [28,116,104,101,32,102,111,108,108,111,119,105,110,103,32,100,
                 111,101,115,32,110,111,116,32,119,111,114,107,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "z\nf0() ->\n    ?F0. % No, an empty list of arguments expected.\n\nf1(A) ->\n    ?F1(A, A). % No, exactly one argument expected."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [18,79,110,32,116,104,101,32,111,116,104,101,114,32,104,97,
                 110,100,44]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [17,10,102,40,41,32,45,62,10,32,32,32,32,63,67,40,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [14,105,115,32,101,120,112,97,110,100,101,100,32,116,111]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [18,10,102,40,41,32,45,62,10,32,32,32,32,109,58,102,40,41,
                 46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\e#### Flow Control in Macros"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,",The following macro directives are supplied:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                [14,45,117,110,100,101,102,40,77,97,99,114,
                                 111,41,46]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {text,
                              ";Causes the macro to behave as if it had never been defined."},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               [14,45,105,102,100,101,102,40,77,97,99,114,111,
                                41,46]}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {sep,
                            [{sep,
                              [{text,"$Evaluate the following lines only if"}],
                              0,false},
                             {text,[5,77,97,99,114,111]},
                             {sep,[{text,"\vis defined."}],0,false}],
                            0,false},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,
                             [15,45,105,102,110,100,101,102,40,77,97,99,114,
                              111,41,46]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {sep,
                          [{sep,
                            [{text,"$Evaluate the following lines only if"}],
                            0,false},
                           {text,[5,77,97,99,114,111]},
                           {sep,
                            [{text,
                              [15,105,115,32,110,111,116,32,100,101,102,105,
                               110,101,100,46]}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,[6,45,101,108,115,101,46]}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {sep,
                        [{sep,
                          [{text,
                            [21,79,110,108,121,32,97,108,108,111,119,101,100,
                             32,97,102,116,101,114,32,97,110]}],
                          0,false},
                         {text,[5,105,102,100,101,102]},
                         {sep,[{text,[2,111,114]}],0,false},
                         {text,[6,105,102,110,100,101,102]},
                         {sep,
                          [{text,
                            ":directive. If that condition is false, the lines following"}],
                          0,false},
                         {text,[4,101,108,115,101]},
                         {sep,
                          [{text,
                            [22,97,114,101,32,101,118,97,108,117,97,116,101,
                             100,32,105,110,115,116,101,97,100,46]}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[7,45,101,110,100,105,102,46]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {sep,
                      [{sep,
                        [{text,
                          [23,83,112,101,99,105,102,105,101,115,32,116,104,
                           101,32,101,110,100,32,111,102,32,97,110]}],
                        0,false},
                       {text,[5,105,102,100,101,102]},
                       {sep,[{text,[4,44,32,97,110]}],0,false},
                       {text,[6,105,102,110,100,101,102]},
                       {sep,[{text,"\edirective, or the end of an"}],0,false},
                       {text,[2,105,102]},
                       {sep,[{text,[2,111,114]}],0,false},
                       {text,[4,101,108,105,102]},
                       {sep,[{text,"\ndirective."}],0,false}],
                      0,false},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [15,45,105,102,40,67,111,110,100,105,116,105,111,110,
                        41,46]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,
                      [{text,"%Evaluates the following lines only if"}],
                      0,false},
                     {text,"\tCondition"},
                     {sep,
                      [{text,
                        [18,101,118,97,108,117,97,116,101,115,32,116,111,32,
                         116,114,117,101,46]}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     [17,45,101,108,105,102,40,67,111,110,100,105,116,105,111,
                      110,41,46]}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{sep,
                    [{text,
                      [21,79,110,108,121,32,97,108,108,111,119,101,100,32,97,
                       102,116,101,114,32,97,110]}],
                    0,false},
                   {text,[2,105,102]},
                   {sep,[{text,"\nor another"}],0,false},
                   {text,[4,101,108,105,102]},
                   {sep,[{text,"\edirective. If the preceding"}],0,false},
                   {text,[2,105,102]},
                   {sep,[{text,[2,111,114]}],0,false},
                   {text,[4,101,108,105,102]},
                   {sep,
                    [{text,"+directives do not evaluate to true, and the"}],
                    0,false},
                   {text,"\tCondition"},
                   {sep,
                    [{text,"*evaluates to true, the lines following the"}],
                    0,false},
                   {text,[4,101,108,105,102]},
                   {sep,
                    [{text,
                      [22,97,114,101,32,101,118,97,108,117,97,116,101,100,32,
                       105,110,115,116,101,97,100,46]}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "5The macro directives cannot be used inside functions."}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [139,10,45,109,111,100,117,108,101,40,109,41,46,10,46,46,46,
                 10,10,45,105,102,100,101,102,40,100,101,98,117,103,41,46,10,
                 45,100,101,102,105,110,101,40,76,79,71,40,88,41,44,32,105,
                 111,58,102,111,114,109,97,116,40,34,123,126,112,44,126,112,
                 125,58,32,126,112,126,110,34,44,32,91,63,77,79,68,85,76,69,
                 44,63,76,73,78,69,44,88,93,41,41,46,10,45,101,108,115,101,46,
                 10,45,100,101,102,105,110,101,40,76,79,71,40,88,41,44,32,116,
                 114,117,101,41,46,10,45,101,110,100,105,102,46,10,10,46,46,
                 46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,87,104,101,110,32,116,114,97,99,101,32,111,117,116,112,
                   117,116,32,105,115,32,100,101,115,105,114,101,100,44]}],
                0,false},
               {text,[7,42,100,101,98,117,103,42]},
               {sep,[{text," is to be defined when the module"}],0,false},
               {text,[3,42,109,42]},
               {sep,[{text,"\fis compiled:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,37,32]},
               {text,
                [18,101,114,108,99,32,45,68,100,101,98,117,103,32,109,46,101,
                 114,108]},
               {text,"\t\n\nor\n\n1> "},
               {text,
                [17,99,40,109,44,32,123,100,44,32,100,101,98,117,103,125,41,
                 46]},
               {text,[7,10,123,111,107,44,109,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v*?LOG(Arg)*"},
               {sep,
                [{text,
                  [29,105,115,32,116,104,101,110,32,101,120,112,97,110,100,
                   101,100,32,116,111,32,97,32,99,97,108,108,32,116,111]}],
                0,false},
               {text,"\r*io:format/2*"},
               {sep,
                [{text,
                  "3and provide the user with some simple trace output."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [259,10,45,109,111,100,117,108,101,40,109,41,10,46,46,46,10,
                 45,105,102,100,101,102,40,79,84,80,95,82,69,76,69,65,83,69,
                 41,46,10,32,32,37,37,32,79,84,80,32,50,49,32,111,114,32,104,
                 105,103,104,101,114,10,32,32,45,105,102,40,63,79,84,80,95,82,
                 69,76,69,65,83,69,32,62,61,32,50,50,41,46,10,32,32,32,32,37,
                 37,32,67,111,100,101,32,116,104,97,116,32,119,105,108,108,32,
                 119,111,114,107,32,105,110,32,79,84,80,32,50,50,32,111,114,
                 32,104,105,103,104,101,114,10,32,32,45,101,108,105,102,40,63,
                 79,84,80,95,82,69,76,69,65,83,69,32,62,61,32,50,49,41,46,10,
                 32,32,32,32,37,37,32,67,111,100,101,32,116,104,97,116,32,119,
                 105,108,108,32,119,111,114,107,32,105,110,32,79,84,80,32,50,
                 49,32,111,114,32,104,105,103,104,101,114,10,32,32,45,101,110,
                 100,105,102,46,10,45,101,108,115,101,46,10,32,32,37,37,32,79,
                 84,80,32,50,48,32,111,114,32,108,111,119,101,114,46,10,45,
                 101,110,100,105,102,46,10,46,46,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [17,84,104,101,32,99,111,100,101,32,117,115,101,115,32,116,
                   104,101]}],
                0,false},
               {text,"\r*OTP_RELEASE*"},
               {sep,
                [{text,
                  "8macro to conditionally select code depending on release."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"'#### -error() and -warning() directives"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rThe directive"}],0,false},
               {text,[14,42,45,101,114,114,111,114,40,84,101,114,109,41,42]},
               {sep,[{text,"\ecauses a compilation error."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [149,10,45,109,111,100,117,108,101,40,116,41,46,10,45,101,120,
                 112,111,114,116,40,91,118,101,114,115,105,111,110,47,48,93,
                 41,46,10,10,45,105,102,100,101,102,40,86,69,82,83,73,79,78,
                 41,46,10,118,101,114,115,105,111,110,40,41,32,45,62,32,63,86,
                 69,82,83,73,79,78,46,10,45,101,108,115,101,46,10,45,101,114,
                 114,111,114,40,34,77,97,99,114,111,32,86,69,82,83,73,79,78,
                 32,109,117,115,116,32,98,101,32,100,101,102,105,110,101,100,
                 46,34,41,46,10,118,101,114,115,105,111,110,40,41,32,45,62,32,
                 34,34,46,10,45,101,110,100,105,102,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"&The error message will look like this:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,37,32]},
               {text,"\nerlc t.erl"},
               {text,
                "3\nt.erl:7: -error(\"Macro VERSION must be defined.\")."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rThe directive"}],0,false},
               {text,
                [16,42,45,119,97,114,110,105,110,103,40,84,101,114,109,41,42]},
               {sep,
                [{text,
                  [29,99,97,117,115,101,115,32,97,32,99,111,109,112,105,108,
                   97,116,105,111,110,32,119,97,114,110,105,110,103,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "¬\n-module(t).\n-export([version/0]).\n\n-ifndef(VERSION).\n-warning(\"Macro VERSION not defined -- using default version.\").\n-define(VERSION, \"0\").\n-endif.\nversion() -> ?VERSION."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"(The warning message will look like this:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,37,32]},
               {text,"\nerlc t.erl"},
               {text,
                "S\nt.erl:5: Warning: -warning(\"Macro VERSION not defined -- using default version.\")."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,"\n*-error()*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\f*-warning()*"},
               {sep,[{text," directives were added in OTP 19."}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"!#### Stringifying Macro Arguments"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [16,84,104,101,32,99,111,110,115,116,114,117,99,116,105,111,
                   110]}],
                0,false},
               {text,[7,42,63,63,65,114,103,42]},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,[5,42,65,114,103,42]},
               {sep,
                [{text,
                  "jis a macro argument, is expanded to a string containing the tokens of the argument. This is similar to the"}],
                0,false},
               {text,[6,42,35,97,114,103,42]},
               {sep,
                [{text,
                  [31,115,116,114,105,110,103,105,102,121,105,110,103,32,99,
                   111,110,115,116,114,117,99,116,105,111,110,32,105,110,32,
                   67,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [128,10,45,100,101,102,105,110,101,40,84,69,83,84,67,65,76,76,
                 40,67,97,108,108,41,44,32,105,111,58,102,111,114,109,97,116,
                 40,34,67,97,108,108,32,126,115,58,32,126,119,126,110,34,44,
                 32,91,63,63,67,97,108,108,44,32,67,97,108,108,93,41,41,46,10,
                 10,63,84,69,83,84,67,65,76,76,40,109,121,102,117,110,99,116,
                 105,111,110,40,49,44,50,41,41,44,10,63,84,69,83,84,67,65,76,
                 76,40,121,111,117,58,102,117,110,99,116,105,111,110,40,50,44,
                 49,41,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\nresults in"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [144,10,105,111,58,102,111,114,109,97,116,40,34,67,97,108,108,
                 32,126,115,58,32,126,119,126,110,34,44,91,34,109,121,102,117,
                 110,99,116,105,111,110,32,40,32,49,32,44,32,50,32,41,34,44,
                 109,121,102,117,110,99,116,105,111,110,40,49,44,50,41,93,41,
                 44,10,105,111,58,102,111,114,109,97,116,40,34,67,97,108,108,
                 32,126,115,58,32,126,119,126,110,34,44,91,34,121,111,117,32,
                 58,32,102,117,110,99,116,105,111,110,32,40,32,50,32,44,32,49,
                 32,41,34,44,121,111,117,58,102,117,110,99,116,105,111,110,40,
                 50,44,49,41,93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "OThat is, a trace output, with both the function called and the resulting value."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [313,65,32,114,101,99,111,114,100,32,105,115,32,97,32,100,97,
                 116,97,32,115,116,114,117,99,116,117,114,101,32,102,111,114,
                 32,115,116,111,114,105,110,103,32,97,32,102,105,120,101,100,
                 32,110,117,109,98,101,114,32,111,102,32,101,108,101,109,101,
                 110,116,115,46,32,73,116,32,104,97,115,32,110,97,109,101,100,
                 32,102,105,101,108,100,115,32,97,110,100,32,105,115,32,115,
                 105,109,105,108,97,114,32,116,111,32,97,32,115,116,114,117,
                 99,116,32,105,110,32,67,46,32,82,101,99,111,114,100,32,101,
                 120,112,114,101,115,115,105,111,110,115,32,97,114,101,32,116,
                 114,97,110,115,108,97,116,101,100,32,116,111,32,116,117,112,
                 108,101,32,101,120,112,114,101,115,115,105,111,110,115,32,
                 100,117,114,105,110,103,32,99,111,109,112,105,108,97,116,105,
                 111,110,46,32,84,104,101,114,101,102,111,114,101,44,32,114,
                 101,99,111,114,100,32,101,120,112,114,101,115,115,105,111,
                 110,115,32,97,114,101,32,110,111,116,32,117,110,100,101,114,
                 115,116,111,111,100,32,98,121,32,116,104,101,32,115,104,101,
                 108,108,32,117,110,108,101,115,115,32,115,112,101,99,105,97,
                 108,32,97,99,116,105,111,110,115,32,97,114,101,32,116,97,107,
                 101,110,46,32,70,111,114,32,100,101,116,97,105,108,115,44,32,
                 115,101,101,32,116,104,101]}],
              0,false},
             {text,
              [19,91,115,104,101,108,108,40,51,41,93,40,46,47,115,104,101,108,
               108,41]},
             {sep,
              [{text,
                [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,83,
                 84,68,76,73,66,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [29,77,111,114,101,32,101,120,97,109,112,108,101,115,32,97,
                 114,101,32,112,114,111,118,105,100,101,100,32,105,110]}],
              0,false},
             {text,"![Programming Examples](./records)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,68,101,102,105,110,105,110,103,32,82,101,99,
             111,114,100,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÜA record definition consists of the name of the record, followed by the field names of the record. Record and field names must be atoms. Each field can be given an optional default value. If no default value is supplied,"}],
                0,false},
               {text,"\v*undefined*"},
               {sep,[{text,"\bis used."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Y\n-record(Name, {Field1 [= Value1],\n               ...\n               FieldN [= ValueN]})."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "£A record definition can be placed anywhere among the attributes and function declarations of a module, but the definition must come before any usage of the record."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "rIf a record is used in several modules, it is recommended that the record definition is placed in an include file."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,67,114,101,97,116,105,110,103,32,82,101,99,111,
             114,100,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"&The following expression creates a new"}],
                0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,[{text,"$record where the value of each field"}],0,false},
               {text,"\b*FieldI*"},
               {sep,
                [{text,
                  "7is the value of evaluating the corresponding expression"}],
                0,false},
               {text,[7,42,69,120,112,114,73,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"%\n#Name{Field1=Expr1,...,FieldK=ExprK}"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "±The fields can be in any order, not necessarily the same order as in the record definition, and fields can be omitted. Omitted fields get their respective default value instead."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "\\If several fields are to be assigned the same value, the following construction can be used:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,".\n#Name{Field1=Expr1,...,FieldK=ExprK, _=ExprL}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"/Omitted fields then get the value of evaluating"}],
                0,false},
               {text,[7,42,69,120,112,114,76,42]},
               {sep,
                [{text,
                  [133,105,110,115,116,101,97,100,32,111,102,32,116,104,101,
                   105,114,32,100,101,102,97,117,108,116,32,118,97,108,117,
                   101,115,46,32,84,104,105,115,32,102,101,97,116,117,114,101,
                   32,105,115,32,112,114,105,109,97,114,105,108,121,32,105,
                   110,116,101,110,100,101,100,32,116,111,32,98,101,32,117,
                   115,101,100,32,116,111,32,99,114,101,97,116,101,32,112,97,
                   116,116,101,114,110,115,32,102,111,114,32,69,84,83,32,97,
                   110,100,32,77,110,101,115,105,97,32,109,97,116,99,104,32,
                   102,117,110,99,116,105,111,110,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "z\n-record(person, {name, phone, address}).\n\n...\n\nlookup(Name, Tab) ->\n    ets:match_object(Tab, #person{name=Name, _='_'})."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [28,35,35,35,35,32,65,99,99,101,115,115,105,110,103,32,82,101,99,
             111,114,100,32,70,105,101,108,100,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [16,10,69,120,112,114,35,78,97,109,101,46,70,105,101,108,
                 100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,")Returns the value of the specified field."}],
                0,false},
               {text,[6,42,69,120,112,114,42]},
               {sep,
                [{text,
                  [19,105,115,32,116,111,32,101,118,97,108,117,97,116,101,32,
                   116,111,32,97]}],
                0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,[{text,[7,114,101,99,111,114,100,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "oThe following expression returns the position of the specified field in the tuple representation of the record:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"\f\n#Name.Field"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "t\n-record(person, {name, phone, address}).\n\n...\n\nlookup(Name, List) ->\n    lists:keysearch(Name, #person.name, List)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,85,112,100,97,116,105,110,103,32,82,101,99,111,
             114,100,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,")\nExpr#Name{Field1=Expr1,...,FieldK=ExprK}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[6,42,69,120,112,114,42]},
               {sep,
                [{text,
                  [19,105,115,32,116,111,32,101,118,97,108,117,97,116,101,32,
                   116,111,32,97]}],
                0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,
                [{text,
                  "Qrecord. A copy of this record is returned, with the value of each specified field"}],
                0,false},
               {text,"\b*FieldI*"},
               {sep,
                [{text,
                  "?changed to the value of evaluating the corresponding expression"}],
                0,false},
               {text,[7,42,69,120,112,114,73,42]},
               {sep,
                [{text,"+. All other fields retain their old values."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        null],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [22,35,35,35,35,32,82,101,99,111,114,100,115,32,105,110,32,71,117,
             97,114,100,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "èSince record expressions are expanded to tuple expressions, creating records and accessing record fields are allowed in guards. However all subexpressions, for example, for field initiations, must be valid guard expressions as well."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "z\nhandle(Msg, State) when Msg==#msg{to=void, no=3} ->\n    ...\n\nhandle(Msg, State) when State#state.running==true ->\n    ..."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,84,104,101,114,101,32,105,115,32,97,108,115,111,32,97,
                   32,116,121,112,101,32,116,101,115,116,32,66,73,70]}],
                0,false},
               {text,
                [28,42,105,115,95,114,101,99,111,114,100,40,84,101,114,109,44,
                 32,82,101,99,111,114,100,84,97,103,41,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "P\nis_person(P) when is_record(P, person) ->\n    true;\nis_person(_P) ->\n    false."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,82,101,99,111,114,100,115,32,105,110,32,80,97,
             116,116,101,114,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ZA pattern that matches a certain record is created in the same way as a record is created:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"%\n#Name{Field1=Expr1,...,FieldK=ExprK}"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [28,73,110,32,116,104,105,115,32,99,97,115,101,44,32,111,
                   110,101,32,111,114,32,109,111,114,101,32,111,102]}],
                0,false},
               {text,[7,42,69,120,112,114,49,42]},
               {sep,[{text,[3,46,46,46]}],0,false},
               {text,[7,42,69,120,112,114,75,42]},
               {sep,
                [{text,
                  [25,99,97,110,32,98,101,32,117,110,98,111,117,110,100,32,
                   118,97,114,105,97,98,108,101,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,78,101,115,116,101,100,32,82,101,99,111,114,
             100,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [141,66,101,103,105,110,110,105,110,103,32,119,105,116,104,32,
                 69,114,108,97,110,103,47,79,84,80,32,82,49,52,44,32,112,97,
                 114,101,110,116,104,101,115,101,115,32,119,104,101,110,32,97,
                 99,99,101,115,115,105,110,103,32,111,114,32,117,112,100,97,
                 116,105,110,103,32,110,101,115,116,101,100,32,114,101,99,111,
                 114,100,115,32,99,97,110,32,98,101,32,111,109,105,116,116,
                 101,100,46,32,65,115,115,117,109,101,32,116,104,101,32,102,
                 111,108,108,111,119,105,110,103,32,114,101,99,111,114,100,32,
                 100,101,102,105,110,105,116,105,111,110,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "¡\n-record(nrec0, {name = \"nested0\"}).\n-record(nrec1, {name = \"nested1\", nrec0=#nrec0{}}).\n-record(nrec2, {name = \"nested2\", nrec1=#nrec1{}}).\n\nN2 = #nrec2{},\n    "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"/Before R14, parentheses were needed as follows:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "{\n\"nested0\" = ((N2#nrec2.nrec1)#nrec1.nrec0)#nrec0.name,\nN0n = ((N2#nrec2.nrec1)#nrec1.nrec0)#nrec0{name = \"nested0a\"},\n    "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"-Since R14, the following can also be written:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "n\n\"nested0\" = N2#nrec2.nrec1#nrec1.nrec0#nrec0.name,\nN0n = N2#nrec2.nrec1#nrec1.nrec0#nrec0{name = \"nested0a\"},"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"'#### Internal Representation of Records"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "_Record expressions are translated to tuple expressions during compilation. A record defined as:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"$\n-record(Name, {Field1,...,FieldN})."}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"'is internally represented by the tuple:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [25,10,123,78,97,109,101,44,86,97,108,117,101,49,44,46,46,46,
                 44,86,97,108,117,101,78,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\tHere each"}],0,false},
               {text,"\b*ValueI*"},
               {sep,
                [{text,
                  [24,105,115,32,116,104,101,32,100,101,102,97,117,108,116,32,
                   118,97,108,117,101,32,102,111,114]}],
                0,false},
               {text,"\b*FieldI*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "pTo each module using records, a pseudo function is added during compilation to obtain information about records:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "I\nrecord_info(fields, Record) -> [Field]\nrecord_info(size, Record) -> Size"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[6,42,83,105,122,101,42]},
               {sep,
                [{text,
                  "Uis the size of the tuple representation, that is, one more than the number of fields."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fIn addition,"}],0,false},
               {text,[14,42,35,82,101,99,111,114,100,46,78,97,109,101,42]},
               {sep,
                [{text,"0returns the index in the tuple representation of"}],
                0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,[{text,"\rof the record"}],0,false},
               {text,"\b*Record*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[6,42,78,97,109,101,42]},
               {sep,
                [{text,
                  [16,109,117,115,116,32,98,101,32,97,110,32,97,116,111,109,
                   46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [16,35,35,35,35,32,84,101,114,109,105,110,111,108,111,103,121]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "8Errors can roughly be divided into four different types:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {text,
              [19,67,111,109,112,105,108,101,45,116,105,109,101,32,101,114,
               114,111,114,115]}],
            0,false},
           {sep,
            [{text,[1,42]},
             {text,[14,76,111,103,105,99,97,108,32,101,114,114,111,114,115]}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {text,
             [15,82,117,110,45,116,105,109,101,32,101,114,114,111,114,115]}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {text,
            [16,71,101,110,101,114,97,116,101,100,32,101,114,114,111,114,
             115]}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "nA compile-time error, for example a syntax error, does not cause much trouble as it is caught by the compiler."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "­A logical error is when a program does not behave as intended, but does not crash. An example is that nothing happens when a button in a graphical user interface is clicked."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÉA run-time error is when a crash occurs. An example is when an operator is applied to arguments of the wrong type. The Erlang programming language has built-in features for handling of run-time errors."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"0A run-time error can also be emulated by calling"}],
                0,false},
               {text,
                [22,42,101,114,108,97,110,103,58,101,114,114,111,114,40,82,
                 101,97,115,111,110,41,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [28,42,101,114,108,97,110,103,58,101,114,114,111,114,40,82,
                 101,97,115,111,110,44,32,65,114,103,115,41,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ":A run-time error is another name for an exception of class"}],
                0,false},
               {text,[7,42,101,114,114,111,114,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"/A generated error is when the code itself calls"}],
                0,false},
               {text,"\b*exit/1*"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"\t*throw/1*"},
               {sep,
                [{text,
                  "P. Notice that emulated run-time errors are not denoted as generated errors here."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"*Generated errors are exceptions of classes"}],
                0,false},
               {text,[6,42,101,120,105,116,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[7,42,116,104,114,111,119,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "¡When a run-time error or generated error occurs in Erlang, execution for the process that evaluated the erroneous expression is stopped. This is referred to as a"}],
                0,false},
               {text,"\v**failure**"},
               {sep,
                [{text,
                  [30,44,32,116,104,97,116,32,101,120,101,99,117,116,105,111,
                   110,32,111,114,32,101,118,97,108,117,97,116,105,111,110]}],
                0,false},
               {text,"\t**fails**"},
               {sep,
                [{text,
                  [21,44,32,111,114,32,116,104,97,116,32,116,104,101,32,112,
                   114,111,99,101,115,115]}],
                0,false},
               {text,"\t**fails**"},
               {sep,[{text,[1,44]}],0,false},
               {text,[14,42,42,116,101,114,109,105,110,97,116,101,115,42,42]},
               {sep,[{text,[4,44,32,111,114]}],0,false},
               {text,"\t**exits**"},
               {sep,
                [{text,
                  "L. Notice that a process can terminate/exit for other reasons than a failure."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\"A process that terminates emits an"}],0,false},
               {text,
                [15,42,42,101,120,105,116,32,115,105,103,110,97,108,42,42]},
               {sep,[{text,[7,119,105,116,104,32,97,110]}],0,false},
               {text,
                [15,42,42,101,120,105,116,32,114,101,97,115,111,110,42,42]},
               {sep,
                [{text,
                  "zthat says something about which error has occurred. Normally, some information about the error is printed to the terminal."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[15,35,35,35,35,32,69,120,99,101,112,116,105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "rExceptions are run-time errors or generated errors and are of three different classes, with different origins. The"}],
                0,false},
               {text,
                [24,91,116,114,121,93,40,46,47,101,120,112,114,101,115,115,
                 105,111,110,115,35,116,114,121,41]},
               {sep,
                [{text,
                  "Eexpression can distinguish between the different classes, whereas the"}],
                0,false},
               {text,
                [28,91,99,97,116,99,104,93,40,46,47,101,120,112,114,101,115,
                 115,105,111,110,115,35,99,97,116,99,104,41]},
               {sep,
                [{text,"(expression cannot. They are described in"}],
                0,false},
               {text,
                [26,91,69,120,112,114,101,115,115,105,111,110,115,93,40,101,
                 120,112,114,101,115,115,105,111,110,115,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "7An exception consists of its class, an exit reason (see"}],
                0,false},
               {text,
                [28,91,69,120,105,116,32,82,101,97,115,111,110,93,40,35,101,
                 120,105,116,95,114,101,97,115,111,110,115,41]},
               {sep,
                [{text,
                  "P), and a stack trace (which aids in finding the code location of the exception)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ";The stack trace can be be bound to a variable from within a"}],
                0,false},
               {text,[5,42,116,114,121,42]},
               {sep,
                [{text,
                  "3expression, and is returned for exceptions of class"}],
                0,false},
               {text,[7,42,101,114,114,111,114,42]},
               {sep,[{text,[6,102,114,111,109,32,97]}],0,false},
               {text,[7,42,99,97,116,99,104,42]},
               {sep,[{text,"\vexpression."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [21,65,110,32,101,120,99,101,112,116,105,111,110,32,111,102,
                   32,99,108,97,115,115]}],
                0,false},
               {text,[7,42,101,114,114,111,114,42]},
               {sep,[{text,"\"is also known as a run-time error."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text,"+#### The call-stack back trace (stacktrace)"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [22,84,104,101,32,115,116,97,99,107,32,98,97,99,107,45,
                     116,114,97,99,101,32,40]}],
                  0,false},
                 {text,[14,42,42,115,116,97,99,107,116,114,97,99,101,42,42]},
                 {sep,
                  [{text,
                    [14,41,32,105,115,32,97,32,108,105,115,116,32,111,102]}],
                  0,false},
                 {text,"\"*{Module,Function,Arity,Location}*"},
                 {sep,
                  [{text,
                    [17,116,117,112,108,101,115,46,32,84,104,101,32,102,105,
                     101,108,100]}],
                  0,false},
                 {text,[7,42,65,114,105,116,121,42]},
                 {sep,
                  [{text,
                    "zin the first tuple can be the argument list of that function call instead of an arity integer, depending on the exception."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,"\n*Location*"},
                 {sep,
                  [{text,
                    "áis a (possibly empty) list of two-tuples that can indicate the location in the source code of the function. The first element is an atom describing the type of information in the second element. The following items can occur:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {text,[4,60,100,108,62]},
            {nest,4,
             {above,
              {above,
               {above,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,[4,102,105,108,101]}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {text,
                      "~The second element of the tuple is a string (list of characters) representing the filename of the source file of the function."},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[4,108,105,110,101]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {text,
                    [143,84,104,101,32,115,101,99,111,110,100,32,101,108,101,
                     109,101,110,116,32,111,102,32,116,104,101,32,116,117,112,
                     108,101,32,105,115,32,116,104,101,32,108,105,110,101,32,
                     110,117,109,98,101,114,32,40,97,110,32,105,110,116,101,
                     103,101,114,32,62,32,48,41,32,105,110,32,116,104,101,32,
                     115,111,117,114,99,101,32,102,105,108,101,32,119,104,101,
                     114,101,32,116,104,101,32,101,120,99,101,112,116,105,111,
                     110,32,111,99,99,117,114,114,101,100,32,111,114,32,116,
                     104,101,32,102,117,110,99,116,105,111,110,32,119,97,115,
                     32,99,97,108,108,101,100,46]},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}}}},
           {text,[5,60,47,100,108,62]}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,
                [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,
                 110,105,110,103,34]},
               {sep,
                [{text,[4,32,32,32,32]},
                 {sep,
                  [{sep,
                    [{above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             "IDevelopers should rely on stacktrace entries only for debugging purposes."}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             [344,84,104,101,32,86,77,32,112,101,114,102,111,
                              114,109,115,32,116,97,105,108,32,99,97,108,108,
                              32,111,112,116,105,109,105,122,97,116,105,111,
                              110,44,32,119,104,105,99,104,32,100,111,101,115,
                              32,110,111,116,32,97,100,100,32,110,101,119,32,
                              101,110,116,114,105,101,115,32,116,111,32,116,
                              104,101,32,115,116,97,99,107,116,114,97,99,101,
                              44,32,97,110,100,32,97,108,115,111,32,108,105,
                              109,105,116,115,32,115,116,97,99,107,116,114,97,
                              99,101,115,32,116,111,32,97,32,99,101,114,116,
                              97,105,110,32,100,101,112,116,104,46,32,70,117,
                              114,116,104,101,114,109,111,114,101,44,32,99,
                              111,109,112,105,108,101,114,32,111,112,116,105,
                              111,110,115,44,32,111,112,116,105,109,105,122,
                              97,116,105,111,110,115,32,97,110,100,32,102,117,
                              116,117,114,101,32,99,104,97,110,103,101,115,32,
                              109,97,121,32,97,100,100,32,111,114,32,114,101,
                              109,111,118,101,32,115,116,97,99,107,116,114,97,
                              99,101,32,101,110,116,114,105,101,115,44,32,99,
                              97,117,115,105,110,103,32,97,110,121,32,99,111,
                              100,101,32,116,104,97,116,32,101,120,112,101,99,
                              116,115,32,116,104,101,32,115,116,97,99,107,116,
                              114,97,99,101,32,116,111,32,98,101,32,105,110,
                              32,97,32,99,101,114,116,97,105,110,32,111,114,
                              100,101,114,32,111,114,32,99,111,110,116,97,105,
                              110,32,115,112,101,99,105,102,105,99,32,105,116,
                              101,109,115,32,116,111,32,102,97,105,108,46]}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               ",The only exception to this rule is the class"}],
                             0,false},
                            {text,[7,42,101,114,114,111,114,42]},
                            {sep,
                             [{text,
                               [15,119,105,116,104,32,116,104,101,32,114,101,
                                97,115,111,110]}],
                             0,false},
                            {text,[7,42,117,110,100,101,102,42]},
                            {sep,
                             [{text,"\"which is guaranteed to include the"}],
                             0,false},
                            {text,"\b*Module*"},
                            {sep,[{text,[1,44]}],0,false},
                            {text,"\n*Function*"},
                            {sep,[{text,[3,97,110,100]}],0,false},
                            {text,[7,42,65,114,105,116,121,42]},
                            {sep,
                             [{text,
                               "8of the attempted function as the first stacktrace entry."}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}}],
                    0,false}],
                  0,true}],
                0,false}},
              {text,[0]}},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"*#### Handling of Run-time Errors in Erlang"},null},
          null}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text,"$#### Error Handling Within Processes"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "mIt is possible to prevent run-time errors and other exceptions from causing the process to terminate by using"}],
                  0,false},
                 {text,[7,42,99,97,116,99,104,42]},
                 {sep,[{text,[2,111,114]}],0,false},
                 {text,[5,42,116,114,121,42]},
                 {sep,[{text,[5,44,32,115,101,101]}],0,false},
                 {text,
                  [26,91,69,120,112,114,101,115,115,105,111,110,115,93,40,101,
                   120,112,114,101,115,115,105,111,110,115,41]},
                 {sep,[{text,[5,97,98,111,117,116]}],0,false},
                 {text,
                  [28,91,99,97,116,99,104,93,40,46,47,101,120,112,114,101,115,
                   115,105,111,110,115,35,99,97,116,99,104,41]},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,
                  [24,91,116,114,121,93,40,46,47,101,120,112,114,101,115,115,
                   105,111,110,115,35,116,114,121,41]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text,"%#### Error Handling Between Processes"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "JProcesses can monitor other processes and detect process terminations, see"}],
                  0,false},
                 {text,
                  [31,91,80,114,111,99,101,115,115,101,115,93,40,46,47,112,
                   114,111,99,101,115,115,101,115,35,101,114,114,111,114,115,
                   41]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{text,"'<a name=\"exit_reasons\">exit_reasons</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [17,35,35,35,35,32,69,120,105,116,32,82,101,97,115,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ";When a run-time error occurs, that is an exception of class"}],
                0,false},
               {text,[7,42,101,114,114,111,114,42]},
               {sep,
                [{text,
                  [28,46,32,84,104,101,32,101,120,105,116,32,114,101,97,115,
                   111,110,32,105,115,32,97,32,116,117,112,108,101]}],
                0,false},
               {text,
                [16,42,123,82,101,97,115,111,110,44,83,116,97,99,107,125,42]},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,"\b*Reason*"},
               {sep,
                [{text,"'is a term indicating the type of error:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[7,42,83,116,97,99,107,42]},
               {sep,
                [{text,
                  "ais the stack of function calls being evaluated when the error occurred, given as a list of tuples"}],
                0,false},
               {text,
                [21,42,123,77,111,100,117,108,101,44,78,97,109,101,44,65,114,
                 105,116,121,125,42]},
               {sep,
                [{text,
                  "bwith the most recent function call first. The most recent function call tuple can in some cases be"}],
                0,false},
               {text,
                [21,42,123,77,111,100,117,108,101,44,78,97,109,101,44,91,65,
                 114,103,93,125,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[14,35,35,35,35,32,80,114,111,99,101,115,115,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÉErlang is designed for massive concurrency. Erlang processes are lightweight (grow and shrink dynamically) with small memory footprint, fast to create and terminate, and the scheduling overhead is low."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,80,114,111,99,101,115,115,32,67,114,101,97,116,
             105,111,110]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [31,65,32,112,114,111,99,101,115,115,32,105,115,32,99,114,
                   101,97,116,101,100,32,98,121,32,99,97,108,108,105,110,
                   103]}],
                0,false},
               {text,[7,42,115,112,97,119,110,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "g\nspawn(Module, Name, Args) -> pid()\n  Module = Name = atom()\n  Args = [Arg1,...,ArgN]\n    ArgI = term()"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[7,42,115,112,97,119,110,42]},
               {sep,
                [{text,"*creates a new process and returns the pid."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#The new process starts executing in"}],0,false},
               {text,
                [28,42,77,111,100,117,108,101,58,78,97,109,101,40,65,114,103,
                 49,44,46,46,46,44,65,114,103,78,41,42]},
               {sep,
                [{text,
                  "<where the arguments are the elements of the (possible empty)"}],
                0,false},
               {text,[6,42,65,114,103,115,42]},
               {sep,
                [{text,
                  [14,97,114,103,117,109,101,110,116,32,108,105,115,116,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,84,104,101,114,101,32,101,120,105,115,116,32,97,32,110,
                   117,109,98,101,114,32,111,102,32,111,116,104,101,114]}],
                0,false},
               {text,[7,42,115,112,97,119,110,42]},
               {sep,
                [{text,
                  [18,66,73,70,115,44,32,102,111,114,32,101,120,97,109,112,
                   108,101,44]}],
                0,false},
               {text,"\t*spawn/4*"},
               {sep,
                [{text,"'for spawning a process at another node."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [25,35,35,35,35,32,82,101,103,105,115,116,101,114,101,100,32,80,
             114,111,99,101,115,115,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÀBesides addressing a process by using its pid, there are also BIFs for registering a process under a name. The name must be an atom and is automatically unregistered if the process terminates:"}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"}],
       0,false},
      {sep,
       [{text,
         [23,60,97,32,110,97,109,101,61,34,116,101,114,109,34,62,116,101,114,
          109,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,80,114,111,99,101,115,115,32,84,101,114,109,
             105,110,97,116,105,111,110]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "7When a process terminates, it always terminates with an"}],
                0,false},
               {text,
                [15,42,42,101,120,105,116,32,114,101,97,115,111,110,42,42]},
               {sep,
                [{text,
                  [29,46,32,84,104,101,32,114,101,97,115,111,110,32,99,97,110,
                   32,98,101,32,97,110,121,32,116,101,114,109,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [30,65,32,112,114,111,99,101,115,115,32,105,115,32,115,97,
                   105,100,32,116,111,32,116,101,114,109,105,110,97,116,101]}],
                0,false},
               {text,"\f**normally**"},
               {sep,[{text," , if the exit reason is the atom"}],0,false},
               {text,"\b*normal*"},
               {sep,
                [{text,
                  "=. A process with no more code to execute terminates normally."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(A process terminates with an exit reason"}],
                0,false},
               {text,
                [16,42,123,82,101,97,115,111,110,44,83,116,97,99,107,125,42]},
               {sep,[{text,"!when a run-time error occurs. See"}],0,false},
               {text,"%[Exit Reasons](./errors#exit_reasons)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "DA process can terminate itself by calling one of the following BIFs:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {text,[14,42,101,120,105,116,40,82,101,97,115,111,110,41,42]}],
           0,false},
          {sep,
           [{text,[1,42]},
            {text,
             [22,42,101,114,108,97,110,103,58,101,114,114,111,114,40,82,101,
              97,115,111,110,41,42]}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {text,
            [28,42,101,114,108,97,110,103,58,101,114,114,111,114,40,82,101,97,
             115,111,110,44,32,65,114,103,115,41,42]}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"'The process then terminates with reason"}],
                0,false},
               {text,"\b*Reason*"},
               {sep,[{text,[3,102,111,114]}],0,false},
               {text,"\b*exit/1*"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [16,42,123,82,101,97,115,111,110,44,83,116,97,99,107,125,42]},
               {sep,
                [{text,
                  [15,102,111,114,32,116,104,101,32,111,116,104,101,114,115,
                   46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "\\A process can also be terminated if it receives an exit signal with another exit reason than"}],
                0,false},
               {text,"\b*normal*"},
               {sep,[{text,[5,44,32,115,101,101]}],0,false},
               {text,
                [25,91,69,114,114,111,114,32,72,97,110,100,108,105,110,103,93,
                 40,35,101,114,114,111,114,115,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [20,35,35,35,35,32,77,101,115,115,97,103,101,32,83,101,110,100,
             105,110,103]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "WProcesses communicate by sending and receiving messages. Messages are sent by using the"}],
                0,false},
               {text,"%[send operator !](./expressions#send)"},
               {sep,
                [{text,
                  [23,97,110,100,32,114,101,99,101,105,118,101,100,32,98,121,
                   32,99,97,108,108,105,110,103]}],
                0,false},
               {text," [receive](./expressions#receive)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [138,77,101,115,115,97,103,101,32,115,101,110,100,105,110,103,
                 32,105,115,32,97,115,121,110,99,104,114,111,110,111,117,115,
                 32,97,110,100,32,115,97,102,101,44,32,116,104,101,32,109,101,
                 115,115,97,103,101,32,105,115,32,103,117,97,114,97,110,116,
                 101,101,100,32,116,111,32,101,118,101,110,116,117,97,108,108,
                 121,32,114,101,97,99,104,32,116,104,101,32,114,101,99,105,
                 112,105,101,110,116,44,32,112,114,111,118,105,100,101,100,32,
                 116,104,97,116,32,116,104,101,32,114,101,99,105,112,105,101,
                 110,116,32,101,120,105,115,116,115,46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\n#### Links"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,84,119,111,32,112,114,111,99,101,115,115,101,115,32,99,
                   97,110,32,98,101]}],
                0,false},
               {text,"\n**linked**"},
               {sep,
                [{text,"+to each other. A link between two processes"}],
                0,false},
               {text,[6,42,80,105,100,49,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[6,42,80,105,100,50,42]},
               {sep,[{text,"\ris created by"}],0,false},
               {text,[6,42,80,105,100,49,42]},
               {sep,
                [{text,
                  [15,99,97,108,108,105,110,103,32,116,104,101,32,66,73,70]}],
                0,false},
               {text,"\f*link(Pid2)*"},
               {sep,
                [{text,"-(or conversely). There also exist a number of"}],
                0,false},
               {text,"\f*spawn_link*"},
               {sep,
                [{text,
                  "9BIFs, which spawn and link to a process in one operation."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "_Links are bidirectional and there can only be one link between two processes. Repeated calls to"}],
                0,false},
               {text,"\v*link(Pid)*"},
               {sep,
                [{text,
                  [15,104,97,118,101,32,110,111,32,101,102,102,101,99,116,
                   46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(A link can be removed by calling the BIF"}],
                0,false},
               {text,"\r*unlink(Pid)*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "?Links are used to monitor the behaviour of other processes, see"}],
                0,false},
               {text,
                [25,91,69,114,114,111,114,32,72,97,110,100,108,105,110,103,93,
                 40,35,101,114,114,111,114,115,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,"\e<a name=\"errors\">errors</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,69,114,114,111,114,32,72,97,110,100,108,105,
             110,103]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [371,69,114,108,97,110,103,32,104,97,115,32,97,32,98,117,105,
                 108,116,45,105,110,32,102,101,97,116,117,114,101,32,102,111,
                 114,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,
                 32,98,101,116,119,101,101,110,32,112,114,111,99,101,115,115,
                 101,115,46,32,84,101,114,109,105,110,97,116,105,110,103,32,
                 112,114,111,99,101,115,115,101,115,32,101,109,105,116,32,101,
                 120,105,116,32,115,105,103,110,97,108,115,32,116,111,32,97,
                 108,108,32,108,105,110,107,101,100,32,112,114,111,99,101,115,
                 115,101,115,44,32,119,104,105,99,104,32,99,97,110,32,116,101,
                 114,109,105,110,97,116,101,32,97,115,32,119,101,108,108,32,
                 111,114,32,104,97,110,100,108,101,32,116,104,101,32,101,120,
                 105,116,32,105,110,32,115,111,109,101,32,119,97,121,46,32,84,
                 104,105,115,32,102,101,97,116,117,114,101,32,99,97,110,32,98,
                 101,32,117,115,101,100,32,116,111,32,98,117,105,108,100,32,
                 104,105,101,114,97,114,99,104,105,99,97,108,32,112,114,111,
                 103,114,97,109,32,115,116,114,117,99,116,117,114,101,115,32,
                 119,104,101,114,101,32,115,111,109,101,32,112,114,111,99,101,
                 115,115,101,115,32,97,114,101,32,115,117,112,101,114,118,105,
                 115,105,110,103,32,111,116,104,101,114,32,112,114,111,99,101,
                 115,115,101,115,44,32,102,111,114,32,101,120,97,109,112,108,
                 101,44,32,114,101,115,116,97,114,116,105,110,103,32,116,104,
                 101,109,32,105,102,32,116,104,101,121,32,116,101,114,109,105,
                 110,97,116,101,32,97,98,110,111,114,109,97,108,108,121,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,83,101,101]}],0,false},
               {text,
                "Q[OTP Design Principles](../doc/design_principles/des_princ#otp design principles)"},
               {sep,
                [{text,
                  "Ifor more information about OTP supervision trees, which use this feature."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [26,35,35,35,35,32,69,109,105,116,116,105,110,103,32,69,120,105,
               116,32,83,105,103,110,97,108,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,"0When a process terminates, it terminates with an"}],
                  0,false},
                 {text,
                  [15,42,42,101,120,105,116,32,114,101,97,115,111,110,42,42]},
                 {sep,
                  [{text,
                    [15,97,115,32,101,120,112,108,97,105,110,101,100,32,105,
                     110]}],
                  0,false},
                 {text,
                  [28,91,80,114,111,99,101,115,115,32,84,101,114,109,105,110,
                   97,116,105,111,110,93,40,35,116,101,114,109,41]},
                 {sep,[{text,"#. This exit reason is emitted in an"}],0,false},
                 {text,
                  [15,42,42,101,120,105,116,32,115,105,103,110,97,108,42,42]},
                 {sep,
                  [{text,
                    [24,116,111,32,97,108,108,32,108,105,110,107,101,100,32,
                     112,114,111,99,101,115,115,101,115,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,"$A process can also call the function"}],
                  0,false},
                 {text,
                  [18,42,101,120,105,116,40,80,105,100,44,82,101,97,115,111,
                   110,41,42]},
                 {sep,
                  [{text,
                    "1. This results in an exit signal with exit reason"}],
                  0,false},
                 {text,"\b*Reason*"},
                 {sep,
                  [{text,
                    [16,98,101,105,110,103,32,101,109,105,116,116,101,100,32,
                     116,111]}],
                  0,false},
                 {text,[5,42,80,105,100,42]},
                 {sep,
                  [{text,"*, but does not affect the calling process."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,{above,{text,"\e#### Receiving Exit Signals"},null},null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "[The default behaviour when a process receives an exit signal with an exit reason other than"}],
                  0,false},
                 {text,"\b*normal*"},
                 {sep,
                  [{text,
                    "}, is to terminate and in turn emit exit signals with the same exit reason to its linked processes. An exit signal with reason"}],
                  0,false},
                 {text,"\b*normal*"},
                 {sep,[{text,"\vis ignored."}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "5A process can be set to trap exit signals by calling:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [30,10,112,114,111,99,101,115,115,95,102,108,97,103,40,116,
                   114,97,112,95,101,120,105,116,44,32,116,114,117,101,41]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [138,87,104,101,110,32,97,32,112,114,111,99,101,115,115,
                     32,105,115,32,116,114,97,112,112,105,110,103,32,101,120,
                     105,116,115,44,32,105,116,32,100,111,101,115,32,110,111,
                     116,32,116,101,114,109,105,110,97,116,101,32,119,104,101,
                     110,32,97,110,32,101,120,105,116,32,115,105,103,110,97,
                     108,32,105,115,32,114,101,99,101,105,118,101,100,46,32,
                     73,110,115,116,101,97,100,44,32,116,104,101,32,115,105,
                     103,110,97,108,32,105,115,32,116,114,97,110,115,102,111,
                     114,109,101,100,32,105,110,116,111,32,97,32,109,101,115,
                     115,97,103,101]}],
                  0,false},
                 {text,
                  [25,42,123,39,69,88,73,84,39,44,70,114,111,109,80,105,100,
                   44,82,101,97,115,111,110,125,42]},
                 {sep,
                  [{text,
                    "L, which is put into the mailbox of the process, just like a regular message."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "2An exception to the above is if the exit reason is"}],
                  0,false},
                 {text,[6,42,107,105,108,108,42]},
                 {sep,[{text,"\f, that is if"}],0,false},
                 {text,
                  [16,42,101,120,105,116,40,80,105,100,44,107,105,108,108,41,
                   42]},
                 {sep,
                  [{text,
                    "khas been called. This unconditionally terminates the process, regardless of if it is trapping exit signals."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\r#### Monitors"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\eAn alternative to links are"}],0,false},
               {text,"\f**monitors**"},
               {sep,[{text,"\v. A process"}],0,false},
               {text,[6,42,80,105,100,49,42]},
               {sep,
                [{text,
                  [24,99,97,110,32,99,114,101,97,116,101,32,97,32,109,111,110,
                   105,116,111,114,32,102,111,114]}],
                0,false},
               {text,[6,42,80,105,100,50,42]},
               {sep,
                [{text,
                  [18,98,121,32,99,97,108,108,105,110,103,32,116,104,101,32,
                   66,73,70]}],
                0,false},
               {text,
                [31,42,101,114,108,97,110,103,58,109,111,110,105,116,111,114,
                 40,112,114,111,99,101,115,115,44,32,80,105,100,50,41,42]},
               {sep,[{text,"\". The function returns a reference"}],0,false},
               {text,[5,42,82,101,102,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,[6,42,80,105,100,50,42]},
               {sep,[{text,"\eterminates with exit reason"}],0,false},
               {text,"\b*Reason*"},
               {sep,
                [{text,
                  [29,44,32,97,32,39,68,79,87,78,39,32,109,101,115,115,97,103,
                   101,32,105,115,32,115,101,110,116,32,116,111]}],
                0,false},
               {text,[6,42,80,105,100,49,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"%\n{'DOWN', Ref, process, Pid2, Reason}"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,[6,42,80,105,100,50,42]},
               {sep,
                [{text,
                  ";does not exist, the 'DOWN' message is sent immediately with"}],
                0,false},
               {text,"\b*Reason*"},
               {sep,[{text,[6,115,101,116,32,116,111]}],0,false},
               {text,"\b*noproc*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,".Monitors are unidirectional. Repeated calls to"}],
                0,false},
               {text,
                [30,42,101,114,108,97,110,103,58,109,111,110,105,116,111,114,
                 40,112,114,111,99,101,115,115,44,32,80,105,100,41,42]},
               {sep,
                [{text,
                  "Ncreates several independent monitors, and each one sends a 'DOWN' message when"}],
                0,false},
               {text,[5,42,80,105,100,42]},
               {sep,[{text,"\vterminates."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#A monitor can be removed by calling"}],0,false},
               {text,
                [23,42,101,114,108,97,110,103,58,100,101,109,111,110,105,116,
                 111,114,40,82,101,102,41,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "QMonitors can be created for processes with registered names, also at other nodes."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [23,35,35,35,35,32,80,114,111,99,101,115,115,32,68,105,99,116,105,
             111,110,97,114,121]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "TEach process has its own process dictionary, accessed by calling the following BIFs:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "B\nput(Key, Value)\nget(Key)\nget()\nget_keys(Value)\nerase(Key)\nerase()"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [30,35,35,35,35,32,68,105,115,116,114,105,98,117,116,101,100,32,
             69,114,108,97,110,103,32,83,121,115,116,101,109]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[1,65]}],0,false},
               {text,
                [29,42,42,100,105,115,116,114,105,98,117,116,101,100,32,69,
                 114,108,97,110,103,32,115,121,115,116,101,109,42,42]},
               {sep,
                [{text,
                  "rconsists of a number of Erlang runtime systems communicating with each other. Each such runtime system is called a"}],
                0,false},
               {text,"\b**node**"},
               {sep,
                [{text,
                  [282,46,32,77,101,115,115,97,103,101,32,112,97,115,115,105,
                   110,103,32,98,101,116,119,101,101,110,32,112,114,111,99,
                   101,115,115,101,115,32,97,116,32,100,105,102,102,101,114,
                   101,110,116,32,110,111,100,101,115,44,32,97,115,32,119,101,
                   108,108,32,97,115,32,108,105,110,107,115,32,97,110,100,32,
                   109,111,110,105,116,111,114,115,44,32,97,114,101,32,116,
                   114,97,110,115,112,97,114,101,110,116,32,119,104,101,110,
                   32,112,105,100,115,32,97,114,101,32,117,115,101,100,46,32,
                   82,101,103,105,115,116,101,114,101,100,32,110,97,109,101,
                   115,44,32,104,111,119,101,118,101,114,44,32,97,114,101,32,
                   108,111,99,97,108,32,116,111,32,101,97,99,104,32,110,111,
                   100,101,46,32,84,104,105,115,32,109,101,97,110,115,32,116,
                   104,97,116,32,116,104,101,32,110,111,100,101,32,109,117,
                   115,116,32,98,101,32,115,112,101,99,105,102,105,101,100,32,
                   97,115,32,119,101,108,108,32,119,104,101,110,32,115,101,
                   110,100,105,110,103,32,109,101,115,115,97,103,101,115,44,
                   32,97,110,100,32,115,111,32,111,110,44,32,117,115,105,110,
                   103,32,114,101,103,105,115,116,101,114,101,100,32,110,97,
                   109,101,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "{The distribution mechanism is implemented using TCP/IP sockets. How to implement an alternative carrier is described in the"}],
                0,false},
               {text,
                [31,91,69,82,84,83,32,85,115,101,114,39,115,32,71,117,105,100,
                 101,93,40,46,47,97,108,116,95,100,105,115,116,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,
              [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
               105,110,103,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "3Starting a distributed node without also specifying"}],
                           0,false},
                          {text,
                           "-[erts/erl#proto_dist](../erts/erl#proto_dist)"},
                          {sep,
                           [{text,
                             "îwill expose the node to attacks that may give the attacker complete access to the node and in extension the cluster. When using un-secure distributed nodes, make sure that the network is configured to keep potential attackers out. See the"}],
                           0,false},
                          {text,
                           "7[Using SSL for Erlang Distribution](./ssl_distribution)"},
                          {sep,
                           [{text,
                             "CUser's Guide for details on how to setup a secure distributed node."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\n#### Nodes"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[1,65]}],0,false},
               {text,"\b**node**"},
               {sep,
                [{text,
                  "]is an executing Erlang runtime system that has been given a name, using the command-line flag"}],
                0,false},
               {text,[7,42,45,110,97,109,101,42]},
               {sep,
                [{text,
                  [15,40,108,111,110,103,32,110,97,109,101,115,41,32,111,
                   114]}],
                0,false},
               {text,"\b*-sname*"},
               {sep,
                [{text,
                  [14,40,115,104,111,114,116,32,110,97,109,101,115,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"&The format of the node name is an atom"}],
                0,false},
               {text,"\v*name@host*"},
               {sep,[{text,[1,46]}],0,false},
               {text,[6,42,110,97,109,101,42]},
               {sep,
                [{text,
                  [30,105,115,32,116,104,101,32,110,97,109,101,32,103,105,118,
                   101,110,32,98,121,32,116,104,101,32,117,115,101,114,46]}],
                0,false},
               {text,[6,42,104,111,115,116,42]},
               {sep,
                [{text,
                  "iis the full host name if long names are used, or the first part of the host name if short names are used."}],
                0,false},
               {text,"\b*node()*"},
               {sep,
                [{text,
                  [29,114,101,116,117,114,110,115,32,116,104,101,32,110,97,
                   109,101,32,111,102,32,116,104,101,32,110,111,100,101,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,37,32]},
               {text,
                [17,101,114,108,32,45,110,97,109,101,32,100,105,108,98,101,
                 114,116]},
               {text,
                [29,10,40,100,105,108,98,101,114,116,64,117,97,98,46,101,114,
                 105,99,115,115,111,110,46,115,101,41,49,62,32]},
               {text,[7,110,111,100,101,40,41,46]},
               {text,
                [30,10,39,100,105,108,98,101,114,116,64,117,97,98,46,101,114,
                 105,99,115,115,111,110,46,115,101,39,10,10,37,32]},
               {text,
                [18,101,114,108,32,45,115,110,97,109,101,32,100,105,108,98,
                 101,114,116]},
               {text,
                [17,10,40,100,105,108,98,101,114,116,64,117,97,98,41,49,62,
                 32]},
               {text,[7,110,111,100,101,40,41,46]},
               {text,"\f\ndilbert@uab"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "SA node with a long node name cannot communicate with a node with a short node name."}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,78,111,100,101,32,67,111,110,110,101,99,116,
             105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [128,84,104,101,32,110,111,100,101,115,32,105,110,32,97,32,
                   100,105,115,116,114,105,98,117,116,101,100,32,69,114,108,
                   97,110,103,32,115,121,115,116,101,109,32,97,114,101,32,108,
                   111,111,115,101,108,121,32,99,111,110,110,101,99,116,101,
                   100,46,32,84,104,101,32,102,105,114,115,116,32,116,105,109,
                   101,32,116,104,101,32,110,97,109,101,32,111,102,32,97,110,
                   111,116,104,101,114,32,110,111,100,101,32,105,115,32,117,
                   115,101,100,44,32,102,111,114,32,101,120,97,109,112,108,
                   101,44,32,105,102]}],
                0,false},
               {text,
                [19,42,115,112,97,119,110,40,78,111,100,101,44,77,44,70,44,65,
                 41,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [20,42,110,101,116,95,97,100,109,58,112,105,110,103,40,78,111,
                 100,101,41,42]},
               {sep,
                [{text,
                  "5is called, a connection attempt to that node is made."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ØConnections are by default transitive. If a node A connects to node B, and node B has a connection to node C, then node A also tries to connect to node C. This feature can be turned off by using the command-line flag"}],
                0,false},
               {text,
                [20,42,45,99,111,110,110,101,99,116,95,97,108,108,32,102,97,
                 108,115,101,42]},
               {sep,[{text,"\t, see the"}],0,false},
               {text,[15,91,101,114,108,40,49,41,93,40,46,47,101,114,108,41]},
               {sep,
                [{text,
                  [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "FIf a node goes down, all connections to that node are removed. Calling"}],
                0,false},
               {text,
                [30,42,101,114,108,97,110,103,58,100,105,115,99,111,110,110,
                 101,99,116,95,110,111,100,101,40,78,111,100,101,41,42]},
               {sep,
                [{text,
                  [31,102,111,114,99,101,115,32,100,105,115,99,111,110,110,
                   101,99,116,105,111,110,32,111,102,32,97,32,110,111,100,101,
                   46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "AThe list of (visible) nodes currently connected to is returned by"}],
                0,false},
               {text,"\t*nodes()*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\t#### epmd"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,84,104,101,32,69,114,108,97,110,103,32,80,111,114,116,
                   32,77,97,112,112,101,114,32,68,97,101,109,111,110]}],
                0,false},
               {text,"\b**epmd**"},
               {sep,
                [{text,
                  [155,105,115,32,97,117,116,111,109,97,116,105,99,97,108,108,
                   121,32,115,116,97,114,116,101,100,32,97,116,32,101,118,101,
                   114,121,32,104,111,115,116,32,119,104,101,114,101,32,97,
                   110,32,69,114,108,97,110,103,32,110,111,100,101,32,105,115,
                   32,115,116,97,114,116,101,100,46,32,73,116,32,105,115,32,
                   114,101,115,112,111,110,115,105,98,108,101,32,102,111,114,
                   32,109,97,112,112,105,110,103,32,116,104,101,32,115,121,
                   109,98,111,108,105,99,32,110,111,100,101,32,110,97,109,101,
                   115,32,116,111,32,109,97,99,104,105,110,101,32,97,100,100,
                   114,101,115,115,101,115,46,32,83,101,101,32,116,104,101]}],
                0,false},
               {text,
                [17,91,101,112,109,100,40,49,41,93,40,46,47,101,112,109,100,
                 41]},
               {sep,
                [{text,
                  [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [17,35,35,35,35,32,72,105,100,100,101,110,32,78,111,100,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "÷In a distributed Erlang system, it is sometimes useful to connect to a node without also connecting to all other nodes. An example is some kind of O&M functionality used to inspect the status of a system, without disturbing it. For this purpose, a"}],
                0,false},
               {text,
                [15,42,42,104,105,100,100,101,110,32,110,111,100,101,42,42]},
               {sep,[{text,"\fcan be used."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ":A hidden node is a node started with the command-line flag"}],
                0,false},
               {text,"\t*-hidden*"},
               {sep,
                [{text,
                  "«. Connections between hidden nodes and other nodes are not transitive, they must be set up explicitly. Also, hidden nodes does not show up in the list of nodes returned by"}],
                0,false},
               {text,"\t*nodes()*"},
               {sep,[{text,"\n. Instead,"}],0,false},
               {text,
                [15,42,110,111,100,101,115,40,104,105,100,100,101,110,41,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [18,42,110,111,100,101,115,40,99,111,110,110,101,99,116,101,
                 100,41,42]},
               {sep,
                [{text,
                  "amust be used. This means, for example, that the hidden node is not added to the set of nodes that"}],
                0,false},
               {text,"\b*global*"},
               {sep,
                [{text,
                  [20,105,115,32,107,101,101,112,105,110,103,32,116,114,97,99,
                   107,32,111,102,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,",This feature was added in Erlang 5.0/OTP R7."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\f#### C Nodes"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[1,65]}],0,false},
               {text,"\n**C node**"},
               {sep,
                [{text,
                  "Zis a C program written to act as a hidden node in a distributed Erlang system. The library"}],
                0,false},
               {text,
                [17,42,42,69,114,108,95,73,110,116,101,114,102,97,99,101,42,
                 42]},
               {sep,
                [{text,
                  "Pcontains functions for this purpose. For more information about C nodes, see the"}],
                0,false},
               {text,"![Erl_Interface](./ei_users_guide)"},
               {sep,
                [{text,
                  [15,97,112,112,108,105,99,97,116,105,111,110,32,97,110,
                   100]}],
                0,false},
               {text,
                "T[Interoperability Tutorial.](../doc/tutorial/introduction#interoperability tutorial)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\r#### Security"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÉAuthentication determines which nodes are allowed to communicate with each other. In a network of different Erlang nodes, it is built into the system at the lowest possible level. Each node has its own"}],
                0,false},
               {text,
                [16,42,42,109,97,103,105,99,32,99,111,111,107,105,101,42,42]},
               {sep,
                [{text,
                  [26,44,32,119,104,105,99,104,32,105,115,32,97,110,32,69,114,
                   108,97,110,103,32,97,116,111,109,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [142,87,104,101,110,32,97,32,110,111,100,101,32,116,114,105,
                 101,115,32,116,111,32,99,111,110,110,101,99,116,32,116,111,
                 32,97,110,111,116,104,101,114,32,110,111,100,101,44,32,116,
                 104,101,32,109,97,103,105,99,32,99,111,111,107,105,101,115,
                 32,97,114,101,32,99,111,109,112,97,114,101,100,46,32,73,102,
                 32,116,104,101,121,32,100,111,32,110,111,116,32,109,97,116,
                 99,104,44,32,116,104,101,32,99,111,110,110,101,99,116,101,
                 100,32,110,111,100,101,32,114,101,106,101,99,116,115,32,116,
                 104,101,32,99,111,110,110,101,99,116,105,111,110,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "qAt start-up, a node has a random atom assigned as its magic cookie and the cookie of other nodes is assumed to be"}],
                0,false},
               {text,"\n*nocookie*"},
               {sep,
                [{text,
                  "@. The first action of the Erlang network authentication server ("}],
                0,false},
               {text,[6,42,97,117,116,104,42]},
               {sep,
                [{text,
                  [30,41,32,105,115,32,116,104,101,110,32,116,111,32,114,101,
                   97,100,32,97,32,102,105,108,101,32,110,97,109,101,100]}],
                0,false},
               {text,
                [22,42,36,72,79,77,69,47,46,101,114,108,97,110,103,46,99,111,
                 111,107,105,101,42]},
               {sep,
                [{text,
                  "¨. If the file does not exist, it is created. The UNIX permissions mode of the file is set to octal 400 (read-only by user) and its contents are a random string. An atom"}],
                0,false},
               {text,"\b*Cookie*"},
               {sep,
                [{text,
                  "^is created from the contents of the file and the cookie of the local node is set to this using"}],
                0,false},
               {text,"#*erlang:set_cookie(node(), Cookie)*"},
               {sep,
                [{text,
                  "Q. This also makes the local node assume that all other nodes have the same cookie"}],
                0,false},
               {text,"\b*Cookie*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [289,84,104,117,115,44,32,103,114,111,117,112,115,32,111,102,
                 32,117,115,101,114,115,32,119,105,116,104,32,105,100,101,110,
                 116,105,99,97,108,32,99,111,111,107,105,101,32,102,105,108,
                 101,115,32,103,101,116,32,69,114,108,97,110,103,32,110,111,
                 100,101,115,32,116,104,97,116,32,99,97,110,32,99,111,109,109,
                 117,110,105,99,97,116,101,32,102,114,101,101,108,121,32,97,
                 110,100,32,119,105,116,104,111,117,116,32,105,110,116,101,
                 114,102,101,114,101,110,99,101,32,102,114,111,109,32,116,104,
                 101,32,109,97,103,105,99,32,99,111,111,107,105,101,32,115,
                 121,115,116,101,109,46,32,85,115,101,114,115,32,119,104,111,
                 32,119,97,110,116,32,116,111,32,114,117,110,32,110,111,100,
                 101,115,32,111,110,32,115,101,112,97,114,97,116,101,32,102,
                 105,108,101,32,115,121,115,116,101,109,115,32,109,117,115,
                 116,32,109,97,107,101,32,99,101,114,116,97,105,110,32,116,
                 104,97,116,32,116,104,101,105,114,32,99,111,111,107,105,101,
                 32,102,105,108,101,115,32,97,114,101,32,105,100,101,110,116,
                 105,99,97,108,32,111,110,32,116,104,101,32,100,105,102,102,
                 101,114,101,110,116,32,102,105,108,101,32,115,121,115,116,
                 101,109,115,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\nFor a node"}],0,false},
               {text,[7,42,78,111,100,101,49,42]},
               {sep,
                [{text,
                  [17,119,105,116,104,32,109,97,103,105,99,32,99,111,111,107,
                   105,101]}],
                0,false},
               {text,"\b*Cookie*"},
               {sep,
                [{text,
                  "Cto be able to connect to, or accept a connection from, another node"}],
                0,false},
               {text,[7,42,78,111,100,101,50,42]},
               {sep,
                [{text,
                  [23,119,105,116,104,32,97,32,100,105,102,102,101,114,101,
                   110,116,32,99,111,111,107,105,101]}],
                0,false},
               {text,"\f*DiffCookie*"},
               {sep,
                [{text,
                  [14,44,32,116,104,101,32,102,117,110,99,116,105,111,110]}],
                0,false},
               {text,"&*erlang:set_cookie(Node2, DiffCookie)*"},
               {sep,
                [{text,
                  [23,109,117,115,116,32,102,105,114,115,116,32,98,101,32,99,
                   97,108,108,101,100,32,97,116]}],
                0,false},
               {text,[7,42,78,111,100,101,49,42]},
               {sep,
                [{text,
                  "H. Distributed systems with multiple user IDs can be handled in this way."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [277,84,104,101,32,100,101,102,97,117,108,116,32,119,104,
                   101,110,32,97,32,99,111,110,110,101,99,116,105,111,110,32,
                   105,115,32,101,115,116,97,98,108,105,115,104,101,100,32,98,
                   101,116,119,101,101,110,32,116,119,111,32,110,111,100,101,
                   115,44,32,105,115,32,116,111,32,105,109,109,101,100,105,97,
                   116,101,108,121,32,99,111,110,110,101,99,116,32,97,108,108,
                   32,111,116,104,101,114,32,118,105,115,105,98,108,101,32,
                   110,111,100,101,115,32,97,115,32,119,101,108,108,46,32,84,
                   104,105,115,32,119,97,121,44,32,116,104,101,114,101,32,105,
                   115,32,97,108,119,97,121,115,32,97,32,102,117,108,108,121,
                   32,99,111,110,110,101,99,116,101,100,32,110,101,116,119,
                   111,114,107,46,32,73,102,32,116,104,101,114,101,32,97,114,
                   101,32,110,111,100,101,115,32,119,105,116,104,32,100,105,
                   102,102,101,114,101,110,116,32,99,111,111,107,105,101,115,
                   44,32,116,104,105,115,32,109,101,116,104,111,100,32,99,97,
                   110,32,98,101,32,105,110,97,112,112,114,111,112,114,105,97,
                   116,101,32,97,110,100,32,116,104,101,32,99,111,109,109,97,
                   110,100,45,108,105,110,101,32,102,108,97,103]}],
                0,false},
               {text,
                [20,42,45,99,111,110,110,101,99,116,95,97,108,108,32,102,97,
                 108,115,101,42]},
               {sep,
                [{text,
                  [20,109,117,115,116,32,98,101,32,115,101,116,44,32,115,101,
                   101,32,116,104,101]}],
                0,false},
               {text,[15,91,101,114,108,40,49,41,93,40,46,47,101,114,108,41]},
               {sep,
                [{text,
                  [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ":The magic cookie of the local node is retrieved by calling"}],
                0,false},
               {text,
                [21,42,101,114,108,97,110,103,58,103,101,116,95,99,111,111,
                 107,105,101,40,41,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [22,35,35,35,35,32,68,105,115,116,114,105,98,117,116,105,111,110,
             32,66,73,70,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "KSome useful BIFs for distributed programming (for more information, see the"}],
                0,false},
               {text,
                [21,91,101,114,108,97,110,103,40,51,41,93,40,46,47,101,114,
                 108,97,110,103,41]},
               {sep,
                [{text,
                  [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"$#### Distribution Command-Line Flags"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "^Examples of command-line flags used for distributed programming (for more information, see the"}],
                0,false},
               {text,[15,91,101,114,108,40,49,41,93,40,46,47,101,114,108,41]},
               {sep,
                [{text,
                  [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [25,35,35,35,35,32,68,105,115,116,114,105,98,117,116,105,111,110,
             32,77,111,100,117,108,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "7Examples of modules useful for distributed programming:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [26,73,110,32,116,104,101,32,75,101,114,110,101,108,32,97,112,
                 112,108,105,99,97,116,105,111,110,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [26,73,110,32,116,104,101,32,83,84,68,76,73,66,32,97,112,112,
                 108,105,99,97,116,105,111,110,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ËHow code is compiled and loaded is not a language issue, but is system-dependent. This section describes compilation and code loading in Erlang/OTP with references to relevant parts of the documentation."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [16,35,35,35,35,32,67,111,109,112,105,108,97,116,105,111,110]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,69,114,108,97,110,103,32,112,114,111,103,114,97,109,115,
                   32,109,117,115,116,32,98,101]}],
                0,false},
               {text,"\f**compiled**"},
               {sep,
                [{text,
                  "Çto object code. The compiler can generate a new file that contains the object code. The current abstract machine, which runs the object code, is called BEAM, therefore the object files get the suffix"}],
                0,false},
               {text,[7,42,46,98,101,97,109,42]},
               {sep,
                [{text,
                  "G. The compiler can also generate a binary which can be loaded directly."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"%The compiler is located in the module"}],0,false},
               {text,"\t*compile*"},
               {sep,[{text,"\b(see the"}],0,false},
               {text,
                [23,91,99,111,109,112,105,108,101,40,51,41,93,40,46,47,99,111,
                 109,112,105,108,101,41]},
               {sep,
                [{text,
                  [25,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   67,111,109,112,105,108,101,114,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "3\ncompile:file(Module)\ncompile:file(Module, Options)"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(The Erlang shell understands the command"}],
                0,false},
               {text,"\v*c(Module)*"},
               {sep,
                [{text,
                  [29,119,104,105,99,104,32,98,111,116,104,32,99,111,109,112,
                   105,108,101,115,32,97,110,100,32,108,111,97,100,115]}],
                0,false},
               {text,"\b*Module*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [22,84,104,101,114,101,32,105,115,32,97,108,115,111,32,97,
                   32,109,111,100,117,108,101]}],
                0,false},
               {text,[6,42,109,97,107,101,42]},
               {sep,
                [{text,
                  "T, which provides a set of functions similar to the UNIX type Make functions, see the"}],
                0,false},
               {text,
                [17,91,109,97,107,101,40,51,41,93,40,46,47,109,97,107,101,41]},
               {sep,
                [{text,
                  [21,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   84,111,111,108,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "=The compiler can also be accessed from the OS prompt, see the"}],
                0,false},
               {text,[15,91,101,114,108,40,49,41,93,40,46,47,101,114,108,41]},
               {sep,
                [{text,
                  [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [16,10,37,32,101,114,108,32,45,99,111,109,112,105,108,101,32]},
               {text,[7,77,111,100,117,108,101,49]},
               {text,[3,46,46,46]},
               {text,[7,77,111,100,117,108,101,78]},
               {text,"\f\n% erl -make"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,[6,42,101,114,108,99,42]},
               {sep,
                [{text,
                  "Nprogram provides an even better way to compile modules from the shell, see the"}],
                0,false},
               {text,
                [17,91,101,114,108,99,40,49,41,93,40,46,47,101,114,108,99,41]},
               {sep,
                [{text,
                  [134,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,46,32,73,116,32,117,110,100,101,114,115,116,97,
                   110,100,115,32,97,32,110,117,109,98,101,114,32,111,102,32,
                   102,108,97,103,115,32,116,104,97,116,32,99,97,110,32,98,
                   101,32,117,115,101,100,32,116,111,32,100,101,102,105,110,
                   101,32,109,97,99,114,111,115,44,32,97,100,100,32,115,101,
                   97,114,99,104,32,112,97,116,104,115,32,102,111,114,32,105,
                   110,99,108,117,100,101,32,102,105,108,101,115,44,32,97,110,
                   100,32,109,111,114,101,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"\b\n% erlc "},
               {text,[7,60,102,108,97,103,115,62]},
               {text,[1,32]},
               {text,"\tFile1.erl"},
               {text,[3,46,46,46]},
               {text,"\tFileN.erl"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [29,60,97,32,110,97,109,101,61,34,108,111,97,100,105,110,103,34,62,
          108,111,97,100,105,110,103,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [17,35,35,35,35,32,67,111,100,101,32,76,111,97,100,105,110,103]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,84,104,101,32,111,98,106,101,99,116,32,99,111,100,101,
                   32,109,117,115,116,32,98,101]}],
                0,false},
               {text,"\n**loaded**"},
               {sep,
                [{text,
                  "6into the Erlang runtime system. This is handled by the"}],
                0,false},
               {text,
                [15,42,42,99,111,100,101,32,115,101,114,118,101,114,42,42]},
               {sep,[{text,"\t, see the"}],0,false},
               {text,
                [17,91,99,111,100,101,40,51,41,93,40,46,47,99,111,100,101,41]},
               {sep,
                [{text,
                  [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   75,101,114,110,101,108,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "PThe code server loads code according to a code loading strategy, which is either"}],
                0,false},
               {text,
                [15,42,42,105,110,116,101,114,97,99,116,105,118,101,42,42]},
               {sep,[{text,"\f(default) or"}],0,false},
               {text,"\f**embedded**"},
               {sep,
                [{text,"0. In interactive mode, code is searched for in a"}],
                0,false},
               {text,"\r**code path**"},
               {sep,
                [{text,
                  "]and loaded when first referenced. In embedded mode, code is loaded at start-up according to a"}],
                0,false},
               {text,
                [15,42,42,98,111,111,116,32,115,99,114,105,112,116,42,42]},
               {sep,
                [{text,
                  [22,46,32,84,104,105,115,32,105,115,32,100,101,115,99,114,
                   105,98,101,100,32,105,110]}],
                0,false},
               {text,
                "L[System Principles](../doc/system_principles/system_principles#code_loading)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,67,111,100,101,32,82,101,112,108,97,99,101,109,
             101,110,116]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "]Erlang supports change of code in a running system. Code replacement is done on module level."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ";The code of a module can exist in two variants in a system:"}],
                0,false},
               {text,"\v**current**"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[7,42,42,111,108,100,42,42]},
               {sep,
                [{text,
                  "á. When a module is loaded into the system for the first time, the code becomes 'current'. If then a new instance of the module is loaded, the code of the previous instance becomes 'old' and the new instance becomes 'current'."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÓBoth old and current code is valid, and can be evaluated concurrently. Fully qualified function calls always refer to current code. Old code can still be evaluated because of processes lingering in the old code."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "äIf a third instance of the module is loaded, the code server removes (purges) the old code and any processes lingering in it is terminated. Then the third instance becomes 'current' and the previously current code becomes 'old'."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "]To change from old code to current code, a process must make a fully qualified function call."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [158,10,45,109,111,100,117,108,101,40,109,41,46,10,45,101,120,
                 112,111,114,116,40,91,108,111,111,112,47,48,93,41,46,10,10,
                 108,111,111,112,40,41,32,45,62,10,32,32,32,32,114,101,99,101,
                 105,118,101,10,32,32,32,32,32,32,32,32,99,111,100,101,95,115,
                 119,105,116,99,104,32,45,62,10,32,32,32,32,32,32,32,32,32,32,
                 32,32,109,58,108,111,111,112,40,41,59,10,32,32,32,32,32,32,
                 32,32,77,115,103,32,45,62,10,32,32,32,32,32,32,32,32,32,32,
                 32,32,46,46,46,10,32,32,32,32,32,32,32,32,32,32,32,32,108,
                 111,111,112,40,41,10,32,32,32,32,101,110,100,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"1To make the process change code, send the message"}],
                0,false},
               {text,"\r*code_switch*"},
               {sep,
                [{text,
                  "7to it. The process then makes a fully qualified call to"}],
                0,false},
               {text,"\n*m:loop()*"},
               {sep,
                [{text,"(and changes to current code. Notice that"}],
                0,false},
               {text,"\n*m:loop/0*"},
               {sep,
                [{text,
                  [17,109,117,115,116,32,98,101,32,101,120,112,111,114,116,
                   101,100,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "4For code replacement of funs to work, use the syntax"}],
                0,false},
               {text,
                [31,42,102,117,110,32,77,111,100,117,108,101,58,70,117,110,99,
                 116,105,111,110,78,97,109,101,47,65,114,105,116,121,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{text,
         [29,60,97,32,110,97,109,101,61,34,111,110,95,108,111,97,100,34,62,
          111,110,95,108,111,97,100,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,"/#### Running a Function When a Module is Loaded"},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,"\f*-on_load()*"},
               {sep,
                [{text,
                  "Sdirective names a function that is to be run automatically when a module is loaded."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [25,73,116,115,32,115,121,110,116,97,120,32,105,115,32,97,115,
                 32,102,111,108,108,111,119,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [18,10,45,111,110,95,108,111,97,100,40,78,97,109,101,47,48,41,
                 46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [137,73,116,32,105,115,32,110,111,116,32,110,101,99,101,115,
                 115,97,114,121,32,116,111,32,101,120,112,111,114,116,32,116,
                 104,101,32,102,117,110,99,116,105,111,110,46,32,73,116,32,
                 105,115,32,99,97,108,108,101,100,32,105,110,32,97,32,102,114,
                 101,115,104,108,121,32,115,112,97,119,110,101,100,32,112,114,
                 111,99,101,115,115,32,40,119,104,105,99,104,32,116,101,114,
                 109,105,110,97,116,101,115,32,97,115,32,115,111,111,110,32,
                 97,115,32,116,104,101,32,102,117,110,99,116,105,111,110,32,
                 114,101,116,117,114,110,115,41,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,84,104,101,32,102,117,110,99,116,105,111,110,32,109,117,
                   115,116,32,114,101,116,117,114,110]}],
                0,false},
               {text,[4,42,111,107,42]},
               {sep,
                [{text,
                  "Sif the module is to become the new current code for the module and become callable."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "°Returning any other value or generating an exception causes the new code to be unloaded. If the return value is not an atom, a warning error report is sent to the error logger."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "jIf there already is current code for the module, that code will remain current and can be called until the"}],
                0,false},
               {text,"\t*on_load*"},
               {sep,
                [{text,
                  [29,102,117,110,99,116,105,111,110,32,104,97,115,32,114,101,
                   116,117,114,110,101,100,46,32,73,102,32,116,104,101]}],
                0,false},
               {text,"\t*on_load*"},
               {sep,
                [{text,
                  "©function fails, the current code (if any) will remain current. If there is no current code for a module, any process that makes an external call to the module before the"}],
                0,false},
               {text,"\t*on_load*"},
               {sep,
                [{text,"1function has finished will be suspended until the"}],
                0,false},
               {text,"\t*on_load*"},
               {sep,
                [{text,
                  [23,102,117,110,99,116,105,111,110,32,104,97,118,101,32,102,
                   105,110,105,115,104,101,100,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             [21,66,101,102,111,114,101,32,79,84,80,32,49,57,
                              44,32,105,102,32,116,104,101]}],
                           0,false},
                          {text,"\t*on_load*"},
                          {sep,
                           [{text,
                             "Ãfunction failed, any previously current code would become old, essentially leaving the system without any working and reachable instance of the module. That problem has been eliminated in OTP 19."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "8In embedded mode, first all modules are loaded. Then all"}],
                0,false},
               {text,"\t*on_load*"},
               {sep,
                [{text,
                  "@functions are called. The system is terminated unless all of the"}],
                0,false},
               {text,"\t*on_load*"},
               {sep,
                [{text,
                  [16,102,117,110,99,116,105,111,110,115,32,114,101,116,117,
                   114,110]}],
                0,false},
               {text,[4,42,111,107,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "È\n-module(m).\n-on_load(load_my_nifs/0).\n\nload_my_nifs() ->\n    NifPath = ...,    %Set up the path to the NIF library.\n    Info = ...,       %Initialize the Info term\n    erlang:load_nif(NifPath, Info)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [14,73,102,32,116,104,101,32,99,97,108,108,32,116,111]}],
                0,false},
               {text,
                [19,42,101,114,108,97,110,103,58,108,111,97,100,95,110,105,
                 102,47,50,42]},
               {sep,
                [{text,
                  "Ofails, the module is unloaded and a warning report is sent to the error loader."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "=Examples of how to use ports and port drivers are provided in"}],
              0,false},
             {text,
              "S[Interoperability Tutorial](../doc/tutorial/introduction#interoperability tutorial)"},
             {sep,
              [{text,"3. For information about the BIFs mentioned, see the"}],
              0,false},
             {text,
              [21,91,101,114,108,97,110,103,40,51,41,93,40,46,47,101,114,108,
               97,110,103,41]},
             {sep,
              [{text,
                [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,69,
                 82,84,83,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\n#### Ports"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\t**Ports**"},
               {sep,
                [{text,
                  [284,112,114,111,118,105,100,101,32,116,104,101,32,98,97,
                   115,105,99,32,109,101,99,104,97,110,105,115,109,32,102,111,
                   114,32,99,111,109,109,117,110,105,99,97,116,105,111,110,32,
                   119,105,116,104,32,116,104,101,32,101,120,116,101,114,110,
                   97,108,32,119,111,114,108,100,44,32,102,114,111,109,32,69,
                   114,108,97,110,103,39,115,32,112,111,105,110,116,32,111,
                   102,32,118,105,101,119,46,32,84,104,101,121,32,112,114,111,
                   118,105,100,101,32,97,32,98,121,116,101,45,111,114,105,101,
                   110,116,101,100,32,105,110,116,101,114,102,97,99,101,32,
                   116,111,32,97,110,32,101,120,116,101,114,110,97,108,32,112,
                   114,111,103,114,97,109,46,32,87,104,101,110,32,97,32,112,
                   111,114,116,32,104,97,115,32,98,101,101,110,32,99,114,101,
                   97,116,101,100,44,32,69,114,108,97,110,103,32,99,97,110,32,
                   99,111,109,109,117,110,105,99,97,116,101,32,119,105,116,
                   104,32,105,116,32,98,121,32,115,101,110,100,105,110,103,32,
                   97,110,100,32,114,101,99,101,105,118,105,110,103,32,108,
                   105,115,116,115,32,111,102,32,98,121,116,101,115,44,32,105,
                   110,99,108,117,100,105,110,103,32,98,105,110,97,114,105,
                   101,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "4The Erlang process creating a port is said to be the"}],
                0,false},
               {text,[14,42,42,112,111,114,116,32,111,119,110,101,114,42,42]},
               {sep,[{text,"\b, or the"}],0,false},
               {text,
                [21,42,42,99,111,110,110,101,99,116,101,100,32,112,114,111,99,
                 101,115,115,42,42]},
               {sep,
                [{text,
                  "ºof the port. All communication to and from the port must go through the port owner. If the port owner terminates, so does the port (and the external program, if it is written correctly)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "áThe external program resides in another OS process. By default, it reads from standard input (file descriptor 0) and writes to standard output (file descriptor 1). The external program is to terminate when the port is closed."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [17,35,35,35,35,32,80,111,114,116,32,68,114,105,118,101,114,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÝIt is possible to write a driver in C according to certain principles and dynamically link it to the Erlang runtime system. The linked-in driver looks like a port from the Erlang programmer's point of view and is called a"}],
                0,false},
               {text,
                [15,42,42,112,111,114,116,32,100,114,105,118,101,114,42,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,
              [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
               105,110,103,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "_An erroneous port driver causes the entire Erlang runtime system to leak memory, hang or crash."}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"+For information about port drivers, see the"}],
                0,false},
               {text,
                [29,91,101,114,108,95,100,114,105,118,101,114,40,52,41,93,40,
                 46,47,101,114,108,95,100,114,105,118,101,114,41]},
               {sep,
                [{text,
                  [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,44]}],
                0,false},
               {text,"![driver_entry(1)](./driver_entry)"},
               {sep,
                [{text,
                  [24,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   69,82,84,83,44,32,97,110,100]}],
                0,false},
               {text,
                [25,91,101,114,108,95,100,100,108,108,40,51,41,93,40,46,47,
                 101,114,108,95,100,100,108,108,41]},
               {sep,
                [{text,
                  [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   75,101,114,110,101,108,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[14,35,35,35,35,32,80,111,114,116,32,66,73,70,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [17,84,111,32,99,114,101,97,116,101,32,97,32,112,111,114,116,
                 58]}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\n*PortName*"},
               {sep,
                [{text,
                  [18,105,115,32,117,115,117,97,108,108,121,32,97,32,116,117,
                   112,108,101]}],
                0,false},
               {text,
                [17,42,123,115,112,97,119,110,44,67,111,109,109,97,110,100,
                 125,42]},
               {sep,
                [{text,
                  [18,44,32,119,104,101,114,101,32,116,104,101,32,115,116,114,
                   105,110,103]}],
                0,false},
               {text,"\t*Command*"},
               {sep,
                [{text,
                  [127,105,115,32,116,104,101,32,110,97,109,101,32,111,102,32,
                   116,104,101,32,101,120,116,101,114,110,97,108,32,112,114,
                   111,103,114,97,109,46,32,84,104,101,32,101,120,116,101,114,
                   110,97,108,32,112,114,111,103,114,97,109,32,114,117,110,
                   115,32,111,117,116,115,105,100,101,32,116,104,101,32,69,
                   114,108,97,110,103,32,119,111,114,107,115,112,97,99,101,44,
                   32,117,110,108,101,115,115,32,97,32,112,111,114,116,32,100,
                   114,105,118,101,114,32,119,105,116,104,32,116,104,101,32,
                   110,97,109,101]}],
                0,false},
               {text,"\t*Command*"},
               {sep,[{text,"\fis found. If"}],0,false},
               {text,"\t*Command*"},
               {sep,[{text,"!is found, that driver is started."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[14,42,80,111,114,116,83,101,116,116,105,110,103,115,42]},
               {sep,
                [{text,
                  "Zis a list of settings (options) for the port. The list typically contains at least a tuple"}],
                0,false},
               {text,"\f*{packet,N}*"},
               {sep,
                [{text,
                  "Ú, which specifies that data sent between the port and the external program are preceded by an N-byte length indicator. Valid values for N are 1, 2, or 4. If binaries are to be used instead of lists of bytes, the option"}],
                0,false},
               {text,"\b*binary*"},
               {sep,
                [{text,
                  [17,109,117,115,116,32,98,101,32,105,110,99,108,117,100,101,
                   100,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [14,84,104,101,32,112,111,114,116,32,111,119,110,101,114]}],
                0,false},
               {text,[5,42,80,105,100,42]},
               {sep,
                [{text,
                  [29,99,97,110,32,99,111,109,109,117,110,105,99,97,116,101,
                   32,119,105,116,104,32,116,104,101,32,112,111,114,116]}],
                0,false},
               {text,[6,42,80,111,114,116,42]},
               {sep,
                [{text,
                  [146,98,121,32,115,101,110,100,105,110,103,32,97,110,100,32,
                   114,101,99,101,105,118,105,110,103,32,109,101,115,115,97,
                   103,101,115,46,32,40,73,110,32,102,97,99,116,44,32,97,110,
                   121,32,112,114,111,99,101,115,115,32,99,97,110,32,115,101,
                   110,100,32,116,104,101,32,109,101,115,115,97,103,101,115,
                   32,116,111,32,116,104,101,32,112,111,114,116,44,32,98,117,
                   116,32,116,104,101,32,112,111,114,116,32,111,119,110,101,
                   114,32,109,117,115,116,32,98,101,32,105,100,101,110,116,
                   105,102,105,101,100,32,105,110,32,116,104,101,32,109,101,
                   115,115,97,103,101,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [380,65,115,32,111,102,32,69,114,108,97,110,103,47,79,84,80,
                 32,82,49,54,44,32,109,101,115,115,97,103,101,115,32,115,101,
                 110,116,32,116,111,32,112,111,114,116,115,32,97,114,101,32,
                 100,101,108,105,118,101,114,101,100,32,116,114,117,108,121,
                 32,97,115,121,110,99,104,114,111,110,111,117,115,108,121,46,
                 32,84,104,101,32,117,110,100,101,114,108,121,105,110,103,32,
                 105,109,112,108,101,109,101,110,116,97,116,105,111,110,32,
                 112,114,101,118,105,111,117,115,108,121,32,100,101,108,105,
                 118,101,114,101,100,32,109,101,115,115,97,103,101,115,32,116,
                 111,32,112,111,114,116,115,32,115,121,110,99,104,114,111,110,
                 111,117,115,108,121,46,32,77,101,115,115,97,103,101,32,112,
                 97,115,115,105,110,103,32,104,97,115,32,104,111,119,101,118,
                 101,114,32,97,108,119,97,121,115,32,98,101,101,110,32,100,
                 111,99,117,109,101,110,116,101,100,32,97,115,32,97,110,32,97,
                 115,121,110,99,104,114,111,110,111,117,115,32,111,112,101,
                 114,97,116,105,111,110,46,32,72,101,110,99,101,44,32,116,104,
                 105,115,32,105,115,32,110,111,116,32,116,111,32,98,101,32,97,
                 110,32,105,115,115,117,101,32,102,111,114,32,97,110,32,69,
                 114,108,97,110,103,32,112,114,111,103,114,97,109,32,99,111,
                 109,109,117,110,105,99,97,116,105,110,103,32,119,105,116,104,
                 32,112,111,114,116,115,44,32,117,110,108,101,115,115,32,102,
                 97,108,115,101,32,97,115,115,117,109,112,116,105,111,110,115,
                 32,97,98,111,117,116,32,112,111,114,116,115,32,104,97,118,
                 101,32,98,101,101,110,32,109,97,100,101,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"$In the following tables of examples,"}],0,false},
               {text,[6,42,68,97,116,97,42]},
               {sep,
                [{text,
                  "smust be an I/O list. An I/O list is a binary or a (possibly deep) list of binaries or integers in the range 0..255:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        null,
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "\\Instead of sending and receiving messages, there are also a number of BIFs that can be used:"}],
              0,false}],
            0,true},
           null},
          null}},
        {text,"\vTODO: TABLE"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"0Some additional BIFs that apply to port drivers:"}],
                0,false},
               {text,
                [16,42,112,111,114,116,95,99,111,110,116,114,111,108,47,51,
                 42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,
                [20,42,101,114,108,97,110,103,58,112,111,114,116,95,99,97,108,
                 108,47,51,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}],
   0,false},
  null,null],
 0,false}
