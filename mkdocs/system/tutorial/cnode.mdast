{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\t# C Nodes"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "GThis section outlines an example of how to solve the example problem in"}],
            0,false},
           {text,
            [26,91,80,114,111,98,108,101,109,32,69,120,97,109,112,108,101,93,
             40,101,120,97,109,112,108,101,41]},
           {sep,
            [{text,
              "zby using a C node. Notice that a C node is not typically used for solving simple problems like this, a port is sufficient."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [17,35,35,32,69,114,108,97,110,103,32,80,114,111,103,114,97,109]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "iFrom Erlang's point of view, the C node is treated like a normal Erlang node. Thus, calling the functions"}],
             0,false},
            {text,[5,42,102,111,111,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[5,42,98,97,114,42]},
            {sep,
             [{text,
               [334,111,110,108,121,32,105,110,118,111,108,118,101,115,32,115,
                101,110,100,105,110,103,32,97,32,109,101,115,115,97,103,101,
                32,116,111,32,116,104,101,32,67,32,110,111,100,101,32,97,115,
                107,105,110,103,32,102,111,114,32,116,104,101,32,102,117,110,
                99,116,105,111,110,32,116,111,32,98,101,32,99,97,108,108,101,
                100,44,32,97,110,100,32,114,101,99,101,105,118,105,110,103,32,
                116,104,101,32,114,101,115,117,108,116,46,32,83,101,110,100,
                105,110,103,32,97,32,109,101,115,115,97,103,101,32,114,101,
                113,117,105,114,101,115,32,97,32,114,101,99,105,112,105,101,
                110,116,44,32,116,104,97,116,32,105,115,44,32,97,32,112,114,
                111,99,101,115,115,32,116,104,97,116,32,99,97,110,32,98,101,
                32,100,101,102,105,110,101,100,32,117,115,105,110,103,32,101,
                105,116,104,101,114,32,97,32,112,105,100,32,111,114,32,97,32,
                116,117,112,108,101,44,32,99,111,110,115,105,115,116,105,110,
                103,32,111,102,32,97,32,114,101,103,105,115,116,101,114,101,
                100,32,110,97,109,101,32,97,110,100,32,97,32,110,111,100,101,
                32,110,97,109,101,46,32,73,110,32,116,104,105,115,32,99,97,
                115,101,44,32,97,32,116,117,112,108,101,32,105,115,32,116,104,
                101,32,111,110,108,121,32,97,108,116,101,114,110,97,116,105,
                118,101,32,97,115,32,110,111,32,112,105,100,32,105,115,32,107,
                110,111,119,110,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [22,10,123,82,101,103,78,97,109,101,44,32,78,111,100,101,125,32,
              33,32,77,115,103]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rThe node name"}],0,false},
            {text,[6,42,78,111,100,101,42]},
            {sep,
             [{text,
               "\\is to be the name of the C node. If short node names are used, the plain name of the node is"}],
             0,false},
            {text,[4,42,99,78,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,[3,42,78,42]},
            {sep,
             [{text,
               [132,105,115,32,97,110,32,105,110,116,101,103,101,114,46,32,73,
                102,32,108,111,110,103,32,110,111,100,101,32,110,97,109,101,
                115,32,97,114,101,32,117,115,101,100,44,32,116,104,101,114,
                101,32,105,115,32,110,111,32,115,117,99,104,32,114,101,115,
                116,114,105,99,116,105,111,110,46,32,65,110,32,101,120,97,109,
                112,108,101,32,111,102,32,97,32,67,32,110,111,100,101,32,110,
                97,109,101,32,117,115,105,110,103,32,115,104,111,114,116,32,
                110,111,100,101,32,110,97,109,101,115,32,105,115,32,116,104,
                117,115]}],
             0,false},
            {text,"\n*c1@idril*"},
            {sep,[{text,"%, an example using long node names is"}],0,false},
            {text,
             [25,42,99,110,111,100,101,64,105,100,114,105,108,46,101,114,105,
              99,115,115,111,110,46,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [20,84,104,101,32,114,101,103,105,115,116,101,114,101,100,32,
                110,97,109,101,44]}],
             0,false},
            {text,"\t*RegName*"},
            {sep,
             [{text,
               "À, can be any atom. The name can be ignored by the C code, or, for example, be used to distinguish between different types of messages. An example of Erlang code using short node names follows:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "ô\n\n-module(complex3).\n-export([foo/1, bar/1]).\n\nfoo(X) ->\n    call_cnode({foo, X}).\nbar(Y) ->\n    call_cnode({bar, Y}).\n\ncall_cnode(Msg) ->\n    {any, c1@idril} ! {call, self(), Msg},\n    receive\n\t{cnode, Result} ->\n\t    Result\n    end.\n"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "]When using long node names, the code is slightly different as shown in the following example:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [268,10,10,45,109,111,100,117,108,101,40,99,111,109,112,108,101,
              120,52,41,46,10,45,101,120,112,111,114,116,40,91,102,111,111,47,
              49,44,32,98,97,114,47,49,93,41,46,10,10,102,111,111,40,88,41,32,
              45,62,10,32,32,32,32,99,97,108,108,95,99,110,111,100,101,40,123,
              102,111,111,44,32,88,125,41,46,10,98,97,114,40,89,41,32,45,62,
              10,32,32,32,32,99,97,108,108,95,99,110,111,100,101,40,123,98,97,
              114,44,32,89,125,41,46,10,10,99,97,108,108,95,99,110,111,100,
              101,40,77,115,103,41,32,45,62,10,32,32,32,32,123,97,110,121,44,
              32,39,99,110,111,100,101,64,105,100,114,105,108,46,100,117,46,
              117,97,98,46,101,114,105,99,115,115,111,110,46,115,101,39,125,
              32,33,32,123,99,97,108,108,44,32,115,101,108,102,40,41,44,32,77,
              115,103,125,44,10,32,32,32,32,114,101,99,101,105,118,101,10,9,
              123,99,110,111,100,101,44,32,82,101,115,117,108,116,125,32,45,
              62,10,9,32,32,32,32,82,101,115,117,108,116,10,32,32,32,32,101,
              110,100,46,10]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f## C Program"},null},null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\e## Setting Up Communication"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ZBefore calling any other function in Erl_Interface, the memory handling must be initiated:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [19,10,101,114,108,95,105,110,105,116,40,78,85,76,76,44,32,48,
               41,59]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "VNow the C node can be initiated. If short node names are used, this is done by calling"}],
              0,false},
             {text,
              [20,42,101,114,108,95,99,111,110,110,101,99,116,95,105,110,105,
               116,40,41,42]},
             {sep,[{text,[1,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,"(\nerl_connect_init(1, \"secretcookie\", 0);"}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,[{sep,[{text,[5,72,101,114,101,58]}],0,false}],0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               "BThe first argument is the integer used to construct the node name."}],
             0,false},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,"&In the example, the plain node name is"}],
                    0,false},
                   {text,[4,42,99,49,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {text,
           ":The second argument is a string defining the magic cookie."}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {text,
          "\\The third argument is an integer that is used to identify a particular instance of a C node."}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?If long node node names are used, initiation is done by calling"}],
              0,false},
             {text,
              [21,42,101,114,108,95,99,111,110,110,101,99,116,95,120,105,110,
               105,116,40,41,42]},
             {sep,[{text,[1,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "l\nerl_connect_xinit(\"idril\", \"cnode\", \"cnode@idril.ericsson.se\",\n                  &addr, \"secretcookie\", 0);"}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,[{sep,[{text,[5,72,101,114,101,58]}],0,false}],0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},{text,"$The first argument is the host name."}],
            0,false},
           {sep,
            [{text,[1,42]},
             {text,"+The second argument is the plain node name."}],
            0,false}},
          {sep,
           [{text,[1,42]},{text,")The third argument is the full node name."}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,"&The fourth argument is a pointer to an"}],0,false},
             {text,"\t*in_addr*"},
             {sep,
              [{text,"'struct with the IP address of the host."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},{text,"'The fifth argument is the magic cookie."}],
         0,false}},
       {sep,
        [{text,[1,42]},{text,"*The sixth argument is the instance number."}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [151,84,104,101,32,67,32,110,111,100,101,32,99,97,110,32,97,
                 99,116,32,97,115,32,97,32,115,101,114,118,101,114,32,111,114,
                 32,97,32,99,108,105,101,110,116,32,119,104,101,110,32,115,
                 101,116,116,105,110,103,32,117,112,32,116,104,101,32,69,114,
                 108,97,110,103,45,67,32,99,111,109,109,117,110,105,99,97,116,
                 105,111,110,46,32,73,102,32,105,116,32,97,99,116,115,32,97,
                 115,32,97,32,99,108,105,101,110,116,44,32,105,116,32,99,111,
                 110,110,101,99,116,115,32,116,111,32,97,110,32,69,114,108,97,
                 110,103,32,110,111,100,101,32,98,121,32,99,97,108,108,105,
                 110,103]}],
              0,false},
             {text,[15,42,101,114,108,95,99,111,110,110,101,99,116,40,41,42]},
             {sep,
              [{text,"3, which returns an open file descriptor at success:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [30,10,102,100,32,61,32,101,114,108,95,99,111,110,110,101,99,
               116,40,34,101,49,64,105,100,114,105,108,34,41,59]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "CIf the C node acts as a server, it must first create a socket (call"}],
              0,false},
             {text,"\b*bind()*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\n*listen()*"},
             {sep,[{text,"$) listening to a certain port number"}],0,false},
             {text,[6,42,112,111,114,116,42]},
             {sep,
              [{text,"1. It then publishes its name and port number with"}],
              0,false},
             {text,[6,42,101,112,109,100,42]},
             {sep,
              [{text,
                "5, the Erlang port mapper daemon. For details, see the"}],
              0,false},
             {text,[14,91,101,112,109,100,93,40,46,47,101,112,109,100,41]},
             {sep,
              [{text,
                [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,69,
                 82,84,83,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [19,10,101,114,108,95,112,117,98,108,105,115,104,40,112,111,114,
               116,41,59]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "?Now the C node server can accept connections from Erlang nodes:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,[{text," \nfd = erl_accept(listen, &conn);"}],0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,84,104,101,32,115,101,99,111,110,100,32,97,114,103,117,
                 109,101,110,116,32,116,111]}],
              0,false},
             {text,"\f*erl_accept*"},
             {sep,[{text,"\vis a struct"}],0,false},
             {text,"\f*ErlConnect*"},
             {sep,
              [{text,
                "swhich contains useful information when a connection has been established, for example, the name of the Erlang node."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"!## Sending and Receiving Messages"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7The C node can receive a message from Erlang by calling"}],
              0,false},
             {text,
              [19,42,101,114,108,95,114,101,99,101,105,118,101,32,109,115,103,
               40,41,42]},
             {sep,
              [{text,
                "8. This function reads data from the open file descriptor"}],
              0,false},
             {text,[4,42,102,100,42]},
             {sep,[{text,"'into a buffer and puts the result in an"}],0,false},
             {text,"\f*ErlMessage*"},
             {sep,[{text,[6,115,116,114,117,99,116]}],0,false},
             {text,[6,42,101,109,115,103,42]},
             {sep,[{text,[1,46]}],0,false},
             {text,"\f*ErlMessage*"},
             {sep,[{text,"\vhas a field"}],0,false},
             {text,[6,42,116,121,112,101,42]},
             {sep,
              [{text,
                "Mdefining what kind of data is received. In this case, the type of interest is"}],
              0,false},
             {text,[14,42,69,82,76,95,82,69,71,95,83,69,78,68,42]},
             {sep,
              [{text,
                "hwhich indicates that Erlang sent a message to a registered process at the C node. The actual message, an"}],
              0,false},
             {text,[7,42,69,84,69,82,77,42]},
             {sep,[{text,"\v, is in the"}],0,false},
             {text,[5,42,109,115,103,42]},
             {sep,[{text,[6,102,105,101,108,100,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,".It is also necessary to take care of the types"}],
              0,false},
             {text,"\v*ERL_ERROR*"},
             {sep,
              [{text,
                [23,40,97,110,32,101,114,114,111,114,32,111,99,99,117,114,114,
                 101,100,41,32,97,110,100]}],
              0,false},
             {text,"\n*ERL_TICK*"},
             {sep,
              [{text,
                "}(alive check from other node, is to be ignored). Other possible types indicate process events such as link, unlink, and exit:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "ñ\n  while (loop) {\n\n    got = erl_receive_msg(fd, buf, BUFSIZE, &emsg);\n    if (got == ERL_TICK) {\n      /* ignore */\n    } else if (got == ERL_ERROR) {\n      loop = 0; /* exit while loop */\n    } else {\n      if (emsg.type == ERL_REG_SEND) {"}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [20,65,115,32,116,104,101,32,109,101,115,115,97,103,101,32,
                 105,115,32,97,110]}],
              0,false},
             {text,[7,42,69,84,69,82,77,42]},
             {sep,
              [{text,
                "óstruct, Erl_Interface functions can be used to manipulate it. In this case, the message becomes a 3-tuple, because that is how the Erlang code is written. The second element will be the pid of the caller and the third element will be the tuple"}],
              0,false},
             {text,
              [16,42,123,70,117,110,99,116,105,111,110,44,65,114,103,125,42]},
             {sep,
              [{text,
                "odetermining which function to call, and with which argument. The result of calling the function is made into an"}],
              0,false},
             {text,[7,42,69,84,69,82,77,42]},
             {sep,
              [{text,",struct as well and sent back to Erlang using"}],
              0,false},
             {text,"\f*erl_send()*"},
             {sep,
              [{text,
                "G, which takes the open file descriptor, a pid, and a term as arguments:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [461,10,32,32,32,32,32,32,32,32,102,114,111,109,112,32,61,32,
               101,114,108,95,101,108,101,109,101,110,116,40,50,44,32,101,109,
               115,103,46,109,115,103,41,59,10,32,32,32,32,32,32,32,32,116,
               117,112,108,101,112,32,61,32,101,114,108,95,101,108,101,109,
               101,110,116,40,51,44,32,101,109,115,103,46,109,115,103,41,59,
               10,32,32,32,32,32,32,32,32,102,110,112,32,61,32,101,114,108,95,
               101,108,101,109,101,110,116,40,49,44,32,116,117,112,108,101,
               112,41,59,10,32,32,32,32,32,32,32,32,97,114,103,112,32,61,32,
               101,114,108,95,101,108,101,109,101,110,116,40,50,44,32,116,117,
               112,108,101,112,41,59,10,10,32,32,32,32,32,32,32,32,105,102,32,
               40,115,116,114,110,99,109,112,40,69,82,76,95,65,84,79,77,95,80,
               84,82,40,102,110,112,41,44,32,34,102,111,111,34,44,32,51,41,32,
               61,61,32,48,41,32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,
               115,32,61,32,102,111,111,40,69,82,76,95,73,78,84,95,86,65,76,
               85,69,40,97,114,103,112,41,41,59,10,32,32,32,32,32,32,32,32,
               125,32,101,108,115,101,32,105,102,32,40,115,116,114,110,99,109,
               112,40,69,82,76,95,65,84,79,77,95,80,84,82,40,102,110,112,41,
               44,32,34,98,97,114,34,44,32,51,41,32,61,61,32,48,41,32,123,10,
               32,32,32,32,32,32,32,32,32,32,114,101,115,32,61,32,98,97,114,
               40,69,82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,103,112,41,
               41,59,10,32,32,32,32,32,32,32,32,125,10,10,32,32,32,32,32,32,
               32,32,114,101,115,112,32,61,32,101,114,108,95,102,111,114,109,
               97,116,40,34,123,99,110,111,100,101,44,32,126,105,125,34,44,32,
               114,101,115,41,59,10,32,32,32,32,32,32,32,32,101,114,108,95,
               115,101,110,100,40,102,100,44,32,102,114,111,109,112,44,32,114,
               101,115,112,41,59]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"$Finally, the memory allocated by the"}],0,false},
             {text,[7,42,69,84,69,82,77,42]},
             {sep,
              [{text,
                [29,99,114,101,97,116,105,110,103,32,102,117,110,99,116,105,
                 111,110,115,32,40,105,110,99,108,117,100,105,110,103]}],
              0,false},
             {text,
              [19,42,101,114,108,95,114,101,99,101,105,118,101,95,109,115,103,
               40,41,42]},
             {sep,
              [{text,
                [14,109,117,115,116,32,98,101,32,102,114,101,101,100,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "¾\n        erl_free_term(emsg.from); erl_free_term(emsg.msg);\n        erl_free_term(fromp); erl_free_term(tuplep);\n        erl_free_term(fnp); erl_free_term(argp);\n        erl_free_term(resp);"}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "cThe following examples show the resulting C programs. First a C node server using short node names:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [2629,10,10,47,42,32,99,110,111,100,101,95,115,46,99,32,42,47,
               10,10,35,105,110,99,108,117,100,101,32,60,115,116,100,105,111,
               46,104,62,10,35,105,110,99,108,117,100,101,32,60,115,121,115,
               47,116,121,112,101,115,46,104,62,10,35,105,110,99,108,117,100,
               101,32,60,115,121,115,47,115,111,99,107,101,116,46,104,62,10,
               35,105,110,99,108,117,100,101,32,60,110,101,116,105,110,101,
               116,47,105,110,46,104,62,10,10,35,105,110,99,108,117,100,101,
               32,34,101,114,108,95,105,110,116,101,114,102,97,99,101,46,104,
               34,10,35,105,110,99,108,117,100,101,32,34,101,105,46,104,34,10,
               10,35,100,101,102,105,110,101,32,66,85,70,83,73,90,69,32,49,48,
               48,48,10,10,105,110,116,32,109,97,105,110,40,105,110,116,32,97,
               114,103,99,44,32,99,104,97,114,32,42,42,97,114,103,118,41,32,
               123,10,32,32,105,110,116,32,112,111,114,116,59,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,47,42,32,76,105,115,116,101,110,32,112,111,
               114,116,32,110,117,109,98,101,114,32,42,47,10,32,32,105,110,
               116,32,108,105,115,116,101,110,59,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               47,42,32,76,105,115,116,101,110,32,115,111,99,107,101,116,32,
               42,47,10,32,32,105,110,116,32,102,100,59,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,47,42,32,102,100,32,116,111,32,69,114,108,97,
               110,103,32,110,111,100,101,32,42,47,10,32,32,69,114,108,67,111,
               110,110,101,99,116,32,99,111,110,110,59,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,
               67,111,110,110,101,99,116,105,111,110,32,100,97,116,97,32,42,
               47,10,10,32,32,105,110,116,32,108,111,111,112,32,61,32,49,59,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,47,42,32,76,111,111,112,32,102,108,97,103,
               32,42,47,10,32,32,105,110,116,32,103,111,116,59,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,47,42,32,82,101,115,117,108,116,32,111,
               102,32,114,101,99,101,105,118,101,32,42,47,10,32,32,117,110,
               115,105,103,110,101,100,32,99,104,97,114,32,98,117,102,91,66,
               85,70,83,73,90,69,93,59,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,47,42,32,66,117,102,102,101,114,32,102,111,114,32,105,110,
               99,111,109,105,110,103,32,109,101,115,115,97,103,101,32,42,47,
               10,32,32,69,114,108,77,101,115,115,97,103,101,32,101,109,115,
               103,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,47,42,32,73,110,99,111,109,105,110,103,32,
               109,101,115,115,97,103,101,32,42,47,10,10,32,32,69,84,69,82,77,
               32,42,102,114,111,109,112,44,32,42,116,117,112,108,101,112,44,
               32,42,102,110,112,44,32,42,97,114,103,112,44,32,42,114,101,115,
               112,59,10,32,32,105,110,116,32,114,101,115,59,10,10,32,32,112,
               111,114,116,32,61,32,97,116,111,105,40,97,114,103,118,91,49,93,
               41,59,10,10,32,32,101,114,108,95,105,110,105,116,40,78,85,76,
               76,44,32,48,41,59,10,10,32,32,105,102,32,40,101,114,108,95,99,
               111,110,110,101,99,116,95,105,110,105,116,40,49,44,32,34,115,
               101,99,114,101,116,99,111,111,107,105,101,34,44,32,48,41,32,61,
               61,32,45,49,41,10,32,32,32,32,101,114,108,95,101,114,114,95,
               113,117,105,116,40,34,101,114,108,95,99,111,110,110,101,99,116,
               95,105,110,105,116,34,41,59,10,10,32,32,47,42,32,77,97,107,101,
               32,97,32,108,105,115,116,101,110,32,115,111,99,107,101,116,32,
               42,47,10,32,32,105,102,32,40,40,108,105,115,116,101,110,32,61,
               32,109,121,95,108,105,115,116,101,110,40,112,111,114,116,41,41,
               32,60,61,32,48,41,10,32,32,32,32,101,114,108,95,101,114,114,95,
               113,117,105,116,40,34,109,121,95,108,105,115,116,101,110,34,41,
               59,10,10,32,32,105,102,32,40,101,114,108,95,112,117,98,108,105,
               115,104,40,112,111,114,116,41,32,61,61,32,45,49,41,10,32,32,32,
               32,101,114,108,95,101,114,114,95,113,117,105,116,40,34,101,114,
               108,95,112,117,98,108,105,115,104,34,41,59,10,10,32,32,105,102,
               32,40,40,102,100,32,61,32,101,114,108,95,97,99,99,101,112,116,
               40,108,105,115,116,101,110,44,32,38,99,111,110,110,41,41,32,61,
               61,32,69,82,76,95,69,82,82,79,82,41,10,32,32,32,32,101,114,108,
               95,101,114,114,95,113,117,105,116,40,34,101,114,108,95,97,99,
               99,101,112,116,34,41,59,10,32,32,102,112,114,105,110,116,102,
               40,115,116,100,101,114,114,44,32,34,67,111,110,110,101,99,116,
               101,100,32,116,111,32,37,115,92,110,92,114,34,44,32,99,111,110,
               110,46,110,111,100,101,110,97,109,101,41,59,10,10,32,32,119,
               104,105,108,101,32,40,108,111,111,112,41,32,123,10,10,32,32,32,
               32,103,111,116,32,61,32,101,114,108,95,114,101,99,101,105,118,
               101,95,109,115,103,40,102,100,44,32,98,117,102,44,32,66,85,70,
               83,73,90,69,44,32,38,101,109,115,103,41,59,10,32,32,32,32,105,
               102,32,40,103,111,116,32,61,61,32,69,82,76,95,84,73,67,75,41,
               32,123,10,32,32,32,32,32,32,47,42,32,105,103,110,111,114,101,
               32,42,47,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,
               40,103,111,116,32,61,61,32,69,82,76,95,69,82,82,79,82,41,32,
               123,10,32,32,32,32,32,32,108,111,111,112,32,61,32,48,59,10,32,
               32,32,32,125,32,101,108,115,101,32,123,10,10,32,32,32,32,32,32,
               105,102,32,40,101,109,115,103,46,116,121,112,101,32,61,61,32,
               69,82,76,95,82,69,71,95,83,69,78,68,41,32,123,10,9,102,114,111,
               109,112,32,61,32,101,114,108,95,101,108,101,109,101,110,116,40,
               50,44,32,101,109,115,103,46,109,115,103,41,59,10,9,116,117,112,
               108,101,112,32,61,32,101,114,108,95,101,108,101,109,101,110,
               116,40,51,44,32,101,109,115,103,46,109,115,103,41,59,10,9,102,
               110,112,32,61,32,101,114,108,95,101,108,101,109,101,110,116,40,
               49,44,32,116,117,112,108,101,112,41,59,10,9,97,114,103,112,32,
               61,32,101,114,108,95,101,108,101,109,101,110,116,40,50,44,32,
               116,117,112,108,101,112,41,59,10,10,9,105,102,32,40,115,116,
               114,110,99,109,112,40,69,82,76,95,65,84,79,77,95,80,84,82,40,
               102,110,112,41,44,32,34,102,111,111,34,44,32,51,41,32,61,61,32,
               48,41,32,123,10,9,32,32,114,101,115,32,61,32,102,111,111,40,69,
               82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,103,112,41,41,59,
               10,9,125,32,101,108,115,101,32,105,102,32,40,115,116,114,110,
               99,109,112,40,69,82,76,95,65,84,79,77,95,80,84,82,40,102,110,
               112,41,44,32,34,98,97,114,34,44,32,51,41,32,61,61,32,48,41,32,
               123,10,9,32,32,114,101,115,32,61,32,98,97,114,40,69,82,76,95,
               73,78,84,95,86,65,76,85,69,40,97,114,103,112,41,41,59,10,9,125,
               10,10,9,114,101,115,112,32,61,32,101,114,108,95,102,111,114,
               109,97,116,40,34,123,99,110,111,100,101,44,32,126,105,125,34,
               44,32,114,101,115,41,59,10,9,101,114,108,95,115,101,110,100,40,
               102,100,44,32,102,114,111,109,112,44,32,114,101,115,112,41,59,
               10,10,9,101,114,108,95,102,114,101,101,95,116,101,114,109,40,
               101,109,115,103,46,102,114,111,109,41,59,32,101,114,108,95,102,
               114,101,101,95,116,101,114,109,40,101,109,115,103,46,109,115,
               103,41,59,10,9,101,114,108,95,102,114,101,101,95,116,101,114,
               109,40,102,114,111,109,112,41,59,32,101,114,108,95,102,114,101,
               101,95,116,101,114,109,40,116,117,112,108,101,112,41,59,10,9,
               101,114,108,95,102,114,101,101,95,116,101,114,109,40,102,110,
               112,41,59,32,101,114,108,95,102,114,101,101,95,116,101,114,109,
               40,97,114,103,112,41,59,10,9,101,114,108,95,102,114,101,101,95,
               116,101,114,109,40,114,101,115,112,41,59,10,32,32,32,32,32,32,
               125,10,32,32,32,32,125,10,32,32,125,32,47,42,32,119,104,105,
               108,101,32,42,47,10,125,10,10,32,32,10,105,110,116,32,109,121,
               95,108,105,115,116,101,110,40,105,110,116,32,112,111,114,116,
               41,32,123,10,32,32,105,110,116,32,108,105,115,116,101,110,95,
               102,100,59,10,32,32,115,116,114,117,99,116,32,115,111,99,107,
               97,100,100,114,95,105,110,32,97,100,100,114,59,10,32,32,105,
               110,116,32,111,110,32,61,32,49,59,10,10,32,32,105,102,32,40,40,
               108,105,115,116,101,110,95,102,100,32,61,32,115,111,99,107,101,
               116,40,65,70,95,73,78,69,84,44,32,83,79,67,75,95,83,84,82,69,
               65,77,44,32,48,41,41,32,60,32,48,41,10,32,32,32,32,114,101,116,
               117,114,110,32,40,45,49,41,59,10,10,32,32,115,101,116,115,111,
               99,107,111,112,116,40,108,105,115,116,101,110,95,102,100,44,32,
               83,79,76,95,83,79,67,75,69,84,44,32,83,79,95,82,69,85,83,69,65,
               68,68,82,44,32,38,111,110,44,32,115,105,122,101,111,102,40,111,
               110,41,41,59,10,10,32,32,109,101,109,115,101,116,40,40,118,111,
               105,100,42,41,32,38,97,100,100,114,44,32,48,44,32,40,115,105,
               122,101,95,116,41,32,115,105,122,101,111,102,40,97,100,100,114,
               41,41,59,10,32,32,97,100,100,114,46,115,105,110,95,102,97,109,
               105,108,121,32,61,32,65,70,95,73,78,69,84,59,10,32,32,97,100,
               100,114,46,115,105,110,95,112,111,114,116,32,61,32,104,116,111,
               110,115,40,112,111,114,116,41,59,10,32,32,97,100,100,114,46,
               115,105,110,95,97,100,100,114,46,115,95,97,100,100,114,32,61,
               32,104,116,111,110,108,40,73,78,65,68,68,82,95,65,78,89,41,59,
               10,10,32,32,105,102,32,40,98,105,110,100,40,108,105,115,116,
               101,110,95,102,100,44,32,40,115,116,114,117,99,116,32,115,111,
               99,107,97,100,100,114,42,41,32,38,97,100,100,114,44,32,115,105,
               122,101,111,102,40,97,100,100,114,41,41,32,60,32,48,41,10,32,
               32,32,32,114,101,116,117,114,110,32,40,45,49,41,59,10,10,32,32,
               108,105,115,116,101,110,40,108,105,115,116,101,110,95,102,100,
               44,32,53,41,59,10,32,32,114,101,116,117,114,110,32,108,105,115,
               116,101,110,95,102,100,59,10,125,10]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"&A C node server using long node names:"}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [2817,10,10,47,42,32,99,110,111,100,101,95,115,50,46,99,32,42,
               47,10,10,35,105,110,99,108,117,100,101,32,60,115,116,100,105,
               111,46,104,62,10,35,105,110,99,108,117,100,101,32,60,115,121,
               115,47,116,121,112,101,115,46,104,62,10,35,105,110,99,108,117,
               100,101,32,60,115,121,115,47,115,111,99,107,101,116,46,104,62,
               10,35,105,110,99,108,117,100,101,32,60,110,101,116,105,110,101,
               116,47,105,110,46,104,62,10,10,35,105,110,99,108,117,100,101,
               32,34,101,114,108,95,105,110,116,101,114,102,97,99,101,46,104,
               34,10,35,105,110,99,108,117,100,101,32,34,101,105,46,104,34,10,
               10,35,100,101,102,105,110,101,32,66,85,70,83,73,90,69,32,49,48,
               48,48,10,10,105,110,116,32,109,97,105,110,40,105,110,116,32,97,
               114,103,99,44,32,99,104,97,114,32,42,42,97,114,103,118,41,32,
               123,10,32,32,115,116,114,117,99,116,32,105,110,95,97,100,100,
               114,32,97,100,100,114,59,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,47,42,32,51,50,45,98,105,116,32,73,
               80,32,110,117,109,98,101,114,32,111,102,32,104,111,115,116,32,
               42,47,10,32,32,105,110,116,32,112,111,114,116,59,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,47,42,32,76,105,115,116,101,110,32,112,
               111,114,116,32,110,117,109,98,101,114,32,42,47,10,32,32,105,
               110,116,32,108,105,115,116,101,110,59,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,47,42,32,76,105,115,116,101,110,32,115,111,99,107,101,116,
               32,42,47,10,32,32,105,110,116,32,102,100,59,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,47,42,32,102,100,32,116,111,32,69,114,108,
               97,110,103,32,110,111,100,101,32,42,47,10,32,32,69,114,108,67,
               111,110,110,101,99,116,32,99,111,110,110,59,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,
               32,67,111,110,110,101,99,116,105,111,110,32,100,97,116,97,32,
               42,47,10,10,32,32,105,110,116,32,108,111,111,112,32,61,32,49,
               59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,47,42,32,76,111,111,112,32,102,108,97,
               103,32,42,47,10,32,32,105,110,116,32,103,111,116,59,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,47,42,32,82,101,115,117,108,116,32,
               111,102,32,114,101,99,101,105,118,101,32,42,47,10,32,32,117,
               110,115,105,103,110,101,100,32,99,104,97,114,32,98,117,102,91,
               66,85,70,83,73,90,69,93,59,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,47,42,32,66,117,102,102,101,114,32,102,111,114,32,105,
               110,99,111,109,105,110,103,32,109,101,115,115,97,103,101,32,42,
               47,10,32,32,69,114,108,77,101,115,115,97,103,101,32,101,109,
               115,103,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,47,42,32,73,110,99,111,109,105,110,103,
               32,109,101,115,115,97,103,101,32,42,47,10,10,32,32,69,84,69,82,
               77,32,42,102,114,111,109,112,44,32,42,116,117,112,108,101,112,
               44,32,42,102,110,112,44,32,42,97,114,103,112,44,32,42,114,101,
               115,112,59,10,32,32,105,110,116,32,114,101,115,59,10,32,32,10,
               32,32,112,111,114,116,32,61,32,97,116,111,105,40,97,114,103,
               118,91,49,93,41,59,10,10,32,32,101,114,108,95,105,110,105,116,
               40,78,85,76,76,44,32,48,41,59,10,10,32,32,97,100,100,114,46,
               115,95,97,100,100,114,32,61,32,105,110,101,116,95,97,100,100,
               114,40,34,49,51,52,46,49,51,56,46,49,55,55,46,56,57,34,41,59,
               10,32,32,105,102,32,40,101,114,108,95,99,111,110,110,101,99,
               116,95,120,105,110,105,116,40,34,105,100,114,105,108,34,44,32,
               34,99,110,111,100,101,34,44,32,34,99,110,111,100,101,64,105,
               100,114,105,108,46,100,117,46,117,97,98,46,101,114,105,99,115,
               115,111,110,46,115,101,34,44,10,9,9,9,38,97,100,100,114,44,32,
               34,115,101,99,114,101,116,99,111,111,107,105,101,34,44,32,48,
               41,32,61,61,32,45,49,41,10,32,32,32,32,101,114,108,95,101,114,
               114,95,113,117,105,116,40,34,101,114,108,95,99,111,110,110,101,
               99,116,95,120,105,110,105,116,34,41,59,10,10,32,32,47,42,32,77,
               97,107,101,32,97,32,108,105,115,116,101,110,32,115,111,99,107,
               101,116,32,42,47,10,32,32,105,102,32,40,40,108,105,115,116,101,
               110,32,61,32,109,121,95,108,105,115,116,101,110,40,112,111,114,
               116,41,41,32,60,61,32,48,41,10,32,32,32,32,101,114,108,95,101,
               114,114,95,113,117,105,116,40,34,109,121,95,108,105,115,116,
               101,110,34,41,59,10,10,32,32,105,102,32,40,101,114,108,95,112,
               117,98,108,105,115,104,40,112,111,114,116,41,32,61,61,32,45,49,
               41,10,32,32,32,32,101,114,108,95,101,114,114,95,113,117,105,
               116,40,34,101,114,108,95,112,117,98,108,105,115,104,34,41,59,
               10,10,32,32,105,102,32,40,40,102,100,32,61,32,101,114,108,95,
               97,99,99,101,112,116,40,108,105,115,116,101,110,44,32,38,99,
               111,110,110,41,41,32,61,61,32,69,82,76,95,69,82,82,79,82,41,10,
               32,32,32,32,101,114,108,95,101,114,114,95,113,117,105,116,40,
               34,101,114,108,95,97,99,99,101,112,116,34,41,59,10,32,32,102,
               112,114,105,110,116,102,40,115,116,100,101,114,114,44,32,34,67,
               111,110,110,101,99,116,101,100,32,116,111,32,37,115,92,110,92,
               114,34,44,32,99,111,110,110,46,110,111,100,101,110,97,109,101,
               41,59,10,10,32,32,119,104,105,108,101,32,40,108,111,111,112,41,
               32,123,10,10,32,32,32,32,103,111,116,32,61,32,101,114,108,95,
               114,101,99,101,105,118,101,95,109,115,103,40,102,100,44,32,98,
               117,102,44,32,66,85,70,83,73,90,69,44,32,38,101,109,115,103,41,
               59,10,32,32,32,32,105,102,32,40,103,111,116,32,61,61,32,69,82,
               76,95,84,73,67,75,41,32,123,10,32,32,32,32,32,32,47,42,32,105,
               103,110,111,114,101,32,42,47,10,32,32,32,32,125,32,101,108,115,
               101,32,105,102,32,40,103,111,116,32,61,61,32,69,82,76,95,69,82,
               82,79,82,41,32,123,10,32,32,32,32,32,32,108,111,111,112,32,61,
               32,48,59,10,32,32,32,32,125,32,101,108,115,101,32,123,10,10,32,
               32,32,32,32,32,105,102,32,40,101,109,115,103,46,116,121,112,
               101,32,61,61,32,69,82,76,95,82,69,71,95,83,69,78,68,41,32,123,
               10,9,102,114,111,109,112,32,61,32,101,114,108,95,101,108,101,
               109,101,110,116,40,50,44,32,101,109,115,103,46,109,115,103,41,
               59,10,9,116,117,112,108,101,112,32,61,32,101,114,108,95,101,
               108,101,109,101,110,116,40,51,44,32,101,109,115,103,46,109,115,
               103,41,59,10,9,102,110,112,32,61,32,101,114,108,95,101,108,101,
               109,101,110,116,40,49,44,32,116,117,112,108,101,112,41,59,10,9,
               97,114,103,112,32,61,32,101,114,108,95,101,108,101,109,101,110,
               116,40,50,44,32,116,117,112,108,101,112,41,59,10,10,9,105,102,
               32,40,115,116,114,110,99,109,112,40,69,82,76,95,65,84,79,77,95,
               80,84,82,40,102,110,112,41,44,32,34,102,111,111,34,44,32,51,41,
               32,61,61,32,48,41,32,123,10,9,32,32,114,101,115,32,61,32,102,
               111,111,40,69,82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,
               103,112,41,41,59,10,9,125,32,101,108,115,101,32,105,102,32,40,
               115,116,114,110,99,109,112,40,69,82,76,95,65,84,79,77,95,80,84,
               82,40,102,110,112,41,44,32,34,98,97,114,34,44,32,51,41,32,61,
               61,32,48,41,32,123,10,9,32,32,114,101,115,32,61,32,98,97,114,
               40,69,82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,103,112,41,
               41,59,10,9,125,10,10,9,114,101,115,112,32,61,32,101,114,108,95,
               102,111,114,109,97,116,40,34,123,99,110,111,100,101,44,32,126,
               105,125,34,44,32,114,101,115,41,59,10,9,101,114,108,95,115,101,
               110,100,40,102,100,44,32,102,114,111,109,112,44,32,114,101,115,
               112,41,59,10,10,9,101,114,108,95,102,114,101,101,95,116,101,
               114,109,40,101,109,115,103,46,102,114,111,109,41,59,32,101,114,
               108,95,102,114,101,101,95,116,101,114,109,40,101,109,115,103,
               46,109,115,103,41,59,10,9,101,114,108,95,102,114,101,101,95,
               116,101,114,109,40,102,114,111,109,112,41,59,32,101,114,108,95,
               102,114,101,101,95,116,101,114,109,40,116,117,112,108,101,112,
               41,59,10,9,101,114,108,95,102,114,101,101,95,116,101,114,109,
               40,102,110,112,41,59,32,101,114,108,95,102,114,101,101,95,116,
               101,114,109,40,97,114,103,112,41,59,10,9,101,114,108,95,102,
               114,101,101,95,116,101,114,109,40,114,101,115,112,41,59,10,32,
               32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125,10,
               10,32,32,10,105,110,116,32,109,121,95,108,105,115,116,101,110,
               40,105,110,116,32,112,111,114,116,41,32,123,10,32,32,105,110,
               116,32,108,105,115,116,101,110,95,102,100,59,10,32,32,115,116,
               114,117,99,116,32,115,111,99,107,97,100,100,114,95,105,110,32,
               97,100,100,114,59,10,32,32,105,110,116,32,111,110,32,61,32,49,
               59,10,10,32,32,105,102,32,40,40,108,105,115,116,101,110,95,102,
               100,32,61,32,115,111,99,107,101,116,40,65,70,95,73,78,69,84,44,
               32,83,79,67,75,95,83,84,82,69,65,77,44,32,48,41,41,32,60,32,48,
               41,10,32,32,32,32,114,101,116,117,114,110,32,40,45,49,41,59,10,
               10,32,32,115,101,116,115,111,99,107,111,112,116,40,108,105,115,
               116,101,110,95,102,100,44,32,83,79,76,95,83,79,67,75,69,84,44,
               32,83,79,95,82,69,85,83,69,65,68,68,82,44,32,38,111,110,44,32,
               115,105,122,101,111,102,40,111,110,41,41,59,10,10,32,32,109,
               101,109,115,101,116,40,40,118,111,105,100,42,41,32,38,97,100,
               100,114,44,32,48,44,32,40,115,105,122,101,95,116,41,32,115,105,
               122,101,111,102,40,97,100,100,114,41,41,59,10,32,32,97,100,100,
               114,46,115,105,110,95,102,97,109,105,108,121,32,61,32,65,70,95,
               73,78,69,84,59,10,32,32,97,100,100,114,46,115,105,110,95,112,
               111,114,116,32,61,32,104,116,111,110,115,40,112,111,114,116,41,
               59,10,32,32,97,100,100,114,46,115,105,110,95,97,100,100,114,46,
               115,95,97,100,100,114,32,61,32,104,116,111,110,108,40,73,78,65,
               68,68,82,95,65,78,89,41,59,10,10,32,32,105,102,32,40,98,105,
               110,100,40,108,105,115,116,101,110,95,102,100,44,32,40,115,116,
               114,117,99,116,32,115,111,99,107,97,100,100,114,42,41,32,38,97,
               100,100,114,44,32,115,105,122,101,111,102,40,97,100,100,114,41,
               41,32,60,32,48,41,10,32,32,32,32,114,101,116,117,114,110,32,40,
               45,49,41,59,10,10,32,32,108,105,115,116,101,110,40,108,105,115,
               116,101,110,95,102,100,44,32,53,41,59,10,32,32,114,101,116,117,
               114,110,32,108,105,115,116,101,110,95,102,100,59,10,125,10]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"(Finally, the code for the C node client:"}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [1697,10,10,47,42,32,99,110,111,100,101,95,99,46,99,32,42,47,10,
               10,35,105,110,99,108,117,100,101,32,60,115,116,100,105,111,46,
               104,62,10,35,105,110,99,108,117,100,101,32,60,115,121,115,47,
               116,121,112,101,115,46,104,62,10,35,105,110,99,108,117,100,101,
               32,60,115,121,115,47,115,111,99,107,101,116,46,104,62,10,35,
               105,110,99,108,117,100,101,32,60,110,101,116,105,110,101,116,
               47,105,110,46,104,62,10,10,35,105,110,99,108,117,100,101,32,34,
               101,114,108,95,105,110,116,101,114,102,97,99,101,46,104,34,10,
               35,105,110,99,108,117,100,101,32,34,101,105,46,104,34,10,10,35,
               100,101,102,105,110,101,32,66,85,70,83,73,90,69,32,49,48,48,48,
               10,10,105,110,116,32,109,97,105,110,40,105,110,116,32,97,114,
               103,99,44,32,99,104,97,114,32,42,42,97,114,103,118,41,32,123,
               10,32,32,105,110,116,32,102,100,59,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,47,42,32,102,100,32,116,111,32,69,114,108,97,110,
               103,32,110,111,100,101,32,42,47,10,10,32,32,105,110,116,32,108,
               111,111,112,32,61,32,49,59,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,76,
               111,111,112,32,102,108,97,103,32,42,47,10,32,32,105,110,116,32,
               103,111,116,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,82,
               101,115,117,108,116,32,111,102,32,114,101,99,101,105,118,101,
               32,42,47,10,32,32,117,110,115,105,103,110,101,100,32,99,104,97,
               114,32,98,117,102,91,66,85,70,83,73,90,69,93,59,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,47,42,32,66,117,102,102,101,114,32,
               102,111,114,32,105,110,99,111,109,105,110,103,32,109,101,115,
               115,97,103,101,32,42,47,10,32,32,69,114,108,77,101,115,115,97,
               103,101,32,101,109,115,103,59,32,32,32,32,32,32,32,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,73,110,99,
               111,109,105,110,103,32,109,101,115,115,97,103,101,32,42,47,10,
               10,32,32,69,84,69,82,77,32,42,102,114,111,109,112,44,32,42,116,
               117,112,108,101,112,44,32,42,102,110,112,44,32,42,97,114,103,
               112,44,32,42,114,101,115,112,59,10,32,32,105,110,116,32,114,
               101,115,59,10,32,32,10,32,32,101,114,108,95,105,110,105,116,40,
               78,85,76,76,44,32,48,41,59,10,10,32,32,105,102,32,40,101,114,
               108,95,99,111,110,110,101,99,116,95,105,110,105,116,40,49,44,
               32,34,115,101,99,114,101,116,99,111,111,107,105,101,34,44,32,
               48,41,32,61,61,32,45,49,41,10,32,32,32,32,101,114,108,95,101,
               114,114,95,113,117,105,116,40,34,101,114,108,95,99,111,110,110,
               101,99,116,95,105,110,105,116,34,41,59,10,10,32,32,105,102,32,
               40,40,102,100,32,61,32,101,114,108,95,99,111,110,110,101,99,
               116,40,34,101,49,64,105,100,114,105,108,34,41,41,32,60,32,48,
               41,10,32,32,32,32,101,114,108,95,101,114,114,95,113,117,105,
               116,40,34,101,114,108,95,99,111,110,110,101,99,116,34,41,59,10,
               32,32,102,112,114,105,110,116,102,40,115,116,100,101,114,114,
               44,32,34,67,111,110,110,101,99,116,101,100,32,116,111,32,101,
               105,64,105,100,114,105,108,92,110,92,114,34,41,59,10,10,32,32,
               119,104,105,108,101,32,40,108,111,111,112,41,32,123,10,10,32,
               32,32,32,103,111,116,32,61,32,101,114,108,95,114,101,99,101,
               105,118,101,95,109,115,103,40,102,100,44,32,98,117,102,44,32,
               66,85,70,83,73,90,69,44,32,38,101,109,115,103,41,59,10,32,32,
               32,32,105,102,32,40,103,111,116,32,61,61,32,69,82,76,95,84,73,
               67,75,41,32,123,10,32,32,32,32,32,32,47,42,32,105,103,110,111,
               114,101,32,42,47,10,32,32,32,32,125,32,101,108,115,101,32,105,
               102,32,40,103,111,116,32,61,61,32,69,82,76,95,69,82,82,79,82,
               41,32,123,10,32,32,32,32,32,32,108,111,111,112,32,61,32,48,59,
               10,32,32,32,32,125,32,101,108,115,101,32,123,10,10,32,32,32,32,
               32,32,105,102,32,40,101,109,115,103,46,116,121,112,101,32,61,
               61,32,69,82,76,95,82,69,71,95,83,69,78,68,41,32,123,10,9,102,
               114,111,109,112,32,61,32,101,114,108,95,101,108,101,109,101,
               110,116,40,50,44,32,101,109,115,103,46,109,115,103,41,59,10,9,
               116,117,112,108,101,112,32,61,32,101,114,108,95,101,108,101,
               109,101,110,116,40,51,44,32,101,109,115,103,46,109,115,103,41,
               59,10,9,102,110,112,32,61,32,101,114,108,95,101,108,101,109,
               101,110,116,40,49,44,32,116,117,112,108,101,112,41,59,10,9,97,
               114,103,112,32,61,32,101,114,108,95,101,108,101,109,101,110,
               116,40,50,44,32,116,117,112,108,101,112,41,59,10,10,9,105,102,
               32,40,115,116,114,110,99,109,112,40,69,82,76,95,65,84,79,77,95,
               80,84,82,40,102,110,112,41,44,32,34,102,111,111,34,44,32,51,41,
               32,61,61,32,48,41,32,123,10,9,32,32,114,101,115,32,61,32,102,
               111,111,40,69,82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,
               103,112,41,41,59,10,9,125,32,101,108,115,101,32,105,102,32,40,
               115,116,114,110,99,109,112,40,69,82,76,95,65,84,79,77,95,80,84,
               82,40,102,110,112,41,44,32,34,98,97,114,34,44,32,51,41,32,61,
               61,32,48,41,32,123,10,9,32,32,114,101,115,32,61,32,98,97,114,
               40,69,82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,103,112,41,
               41,59,10,9,125,10,10,9,114,101,115,112,32,61,32,101,114,108,95,
               102,111,114,109,97,116,40,34,123,99,110,111,100,101,44,32,126,
               105,125,34,44,32,114,101,115,41,59,10,9,101,114,108,95,115,101,
               110,100,40,102,100,44,32,102,114,111,109,112,44,32,114,101,115,
               112,41,59,10,10,9,101,114,108,95,102,114,101,101,95,116,101,
               114,109,40,101,109,115,103,46,102,114,111,109,41,59,32,101,114,
               108,95,102,114,101,101,95,116,101,114,109,40,101,109,115,103,
               46,109,115,103,41,59,10,9,101,114,108,95,102,114,101,101,95,
               116,101,114,109,40,102,114,111,109,112,41,59,32,101,114,108,95,
               102,114,101,101,95,116,101,114,109,40,116,117,112,108,101,112,
               41,59,10,9,101,114,108,95,102,114,101,101,95,116,101,114,109,
               40,102,110,112,41,59,32,101,114,108,95,102,114,101,101,95,116,
               101,114,109,40,97,114,103,112,41,59,10,9,101,114,108,95,102,
               114,101,101,95,116,101,114,109,40,114,101,115,112,41,59,10,32,
               32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,125,10,125,10]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,82,117,110,110,105,110,103,32,116,104,101,32,69,120,97,
        109,112,108,101]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"\v**Step 1.**"},
          {sep,
           [{text,
             "hCompile the C code. This provides the paths to the Erl_Interface include files and libraries, and to the"}],
           0,false},
          {text,"\b*socket*"},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,[5,42,110,115,108,42]},
          {sep,[{text,"\nlibraries:"}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[4,10,62,32,32]},
          {text,
           [18,103,99,99,32,45,111,32,99,115,101,114,118,101,114,32,92,92,32]},
          {text,[1,10]},
          {text,"4-I/usr/local/otp/lib/erl_interface-3.2.1/include \\\\ "},
          {text,[1,10]},
          {text,"0-L/usr/local/otp/lib/erl_interface-3.2.1/lib \\\\ "},
          {text,[1,10]},
          {text,
           [23,99,111,109,112,108,101,120,46,99,32,99,110,111,100,101,95,115,
            46,99,32,92,92,32]},
          {text,[1,10]},
          {text,"#-lerl_interface -lei -lsocket -lnsl"},
          {text,"\b\n\nunix> "},
          {text,
           [19,103,99,99,32,45,111,32,99,115,101,114,118,101,114,50,32,92,92,
            32]},
          {text,[1,10]},
          {text,"4-I/usr/local/otp/lib/erl_interface-3.2.1/include \\\\ "},
          {text,[1,10]},
          {text,"0-L/usr/local/otp/lib/erl_interface-3.2.1/lib \\\\ "},
          {text,[1,10]},
          {text,
           [24,99,111,109,112,108,101,120,46,99,32,99,110,111,100,101,95,115,
            50,46,99,32,92,92,32]},
          {text,[1,10]},
          {text,"#-lerl_interface -lei -lsocket -lnsl"},
          {text,"\b\n\nunix> "},
          {text,
           [18,103,99,99,32,45,111,32,99,99,108,105,101,110,116,32,92,92,32]},
          {text,[1,10]},
          {text,"4-I/usr/local/otp/lib/erl_interface-3.2.1/include \\\\ "},
          {text,[1,10]},
          {text,"0-L/usr/local/otp/lib/erl_interface-3.2.1/lib \\\\ "},
          {text,[1,10]},
          {text,
           [23,99,111,109,112,108,101,120,46,99,32,99,110,111,100,101,95,99,
            46,99,32,92,92,32]},
          {text,[1,10]},
          {text,"#-lerl_interface -lei -lsocket -lnsl"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,"0In Erlang/OTP R5B and later versions of OTP, the"}],
           0,false},
          {text,"\t*include*"},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,[5,42,108,105,98,42]},
          {sep,
           [{text,
             [30,100,105,114,101,99,116,111,114,105,101,115,32,97,114,101,32,
              115,105,116,117,97,116,101,100,32,117,110,100,101,114]}],
           0,false},
          {text,
           [31,42,79,84,80,82,79,79,84,47,108,105,98,47,101,114,108,95,105,
            110,116,101,114,102,97,99,101,45,86,83,78,42]},
          {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
          {text,"\t*OTPROOT*"},
          {sep,
           [{text,"/is the root directory of the OTP installation ("}],
           0,false},
          {text,[16,42,47,117,115,114,47,108,111,99,97,108,47,111,116,112,42]},
          {sep,
           [{text,
             [26,105,110,32,116,104,101,32,114,101,99,101,110,116,32,101,120,
              97,109,112,108,101,41,32,97,110,100]}],
           0,false},
          {text,[5,42,86,83,78,42]},
          {sep,
           [{text,
             "Nis the version of the Erl_Interface application (3.2.1 in the recent example)."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"#In R4B and earlier versions of OTP,"}],0,false},
          {text,"\t*include*"},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,[5,42,108,105,98,42]},
          {sep,
           [{text,
             [18,97,114,101,32,115,105,116,117,97,116,101,100,32,117,110,100,
              101,114]}],
           0,false},
          {text,"\r*OTPROOT/usr*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"\v**Step 2.**"},
          {sep,
           [{text,
             [24,67,111,109,112,105,108,101,32,116,104,101,32,69,114,108,97,
              110,103,32,99,111,100,101,58]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[7,10,117,110,105,120,62,32]},
          {text,
           [30,101,114,108,32,45,99,111,109,112,105,108,101,32,99,111,109,112,
            108,101,120,51,32,99,111,109,112,108,101,120,52]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"\v**Step 3.**"},
          {sep,
           [{text,"4Run the C node server example with short node names."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,68,111,32,97,115,32,102,111,108,108,111,119,115,58]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{text,
            [19,83,116,97,114,116,32,116,104,101,32,67,32,112,114,111,103,114,
             97,109]}],
          0,false},
         {text,"\t*cserver*"},
         {sep,[{text," and Erlang in different windows."}],0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,"\t*cserver*"},
         {sep,
          [{text,
            "_takes a port number as argument and must be started before trying to call the Erlang functions."}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{text,"-The Erlang node is to be given the short name"}],
         0,false},
        {text,[4,42,101,49,42]},
        {sep,
         [{text,
           ";and must be set to use the same magic cookie as the C node,"}],
         0,false},
        {text,[14,42,115,101,99,114,101,116,99,111,111,107,105,101,42]},
        {sep,[{text,[1,58]}],0,false}],
       0,false}],
     0,false}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[7,10,117,110,105,120,62,32]},
          {text,"\fcserver 3456"},
          {text,"\b\n\nunix> "},
          {text,"%erl -sname e1 -setcookie secretcookie"},
          {text,
           "X\nErlang (BEAM) emulator version 4.9.1.2\n \nEshell V4.9.1.2  (abort with ^G)\n(e1@idril)1> "},
          {text,[16,99,111,109,112,108,101,120,51,58,102,111,111,40,51,41,46]},
          {text,[16,10,52,10,40,101,49,64,105,100,114,105,108,41,50,62,32]},
          {text,[16,99,111,109,112,108,101,120,51,58,98,97,114,40,53,41,46]},
          {text,[3,10,49,48]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"\v**Step 4.**"},
          {sep,[{text,"(Run the C node client example. Terminate"}],0,false},
          {text,"\t*cserver*"},
          {sep,[{text,"\e, but not Erlang, and start"}],0,false},
          {text,"\t*cclient*"},
          {sep,
           [{text,
             ";. The Erlang node must be started before the C node client:"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[7,10,117,110,105,120,62,32]},
          {text,[7,99,99,108,105,101,110,116]},
          {text,[15,10,10,40,101,49,64,105,100,114,105,108,41,51,62,32]},
          {text,[16,99,111,109,112,108,101,120,51,58,102,111,111,40,51,41,46]},
          {text,[16,10,52,10,40,101,49,64,105,100,114,105,108,41,52,62,32]},
          {text,[16,99,111,109,112,108,101,120,51,58,98,97,114,40,53,41,46]},
          {text,[3,10,49,48]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"\v**Step 5.**"},
          {sep,
           [{text,"3Run the C node server example with long node names:"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[7,10,117,110,105,120,62,32]},
          {text,"\rcserver2 3456"},
          {text,"\b\n\nunix> "},
          {text,"$erl -name e1 -setcookie secretcookie"},
          {text,
           "k\nErlang (BEAM) emulator version 4.9.1.2\n \nEshell V4.9.1.2  (abort with ^G)\n(e1@idril.du.uab.ericsson.se)1> "},
          {text,[16,99,111,109,112,108,101,120,52,58,102,111,111,40,51,41,46]},
          {text,"#\n4\n(e1@idril.du.uab.ericsson.se)2> "},
          {text,[16,99,111,109,112,108,101,120,52,58,98,97,114,40,53,41,46]},
          {text,[3,10,49,48]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}}],
  0,false}}
