{sep,
 [{above,
   {above,{above,{text,[0]},null},null},
   {above,{above,{text,"\e# Interoperability Tutorial"},null},null}},
  null,
  {above,
   {above,{above,{text,[0]},null},null},
   {above,{above,{text,"\e# Interoperability Tutorial"},null},null}},
  null,
  {sep,
   [{sep,
     [{text,
       "A<a name=\"interoperability tutorial\">interoperability tutorial</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "ÂThis section informs on interoperability, that is, information exchange, between Erlang and other programming languages. The included examples mainly treat interoperability between Erlang and C."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\f#### Purpose"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ñThe purpose of this tutorial is to describe different interoperability mechanisms that can be used when integrating a program written in Erlang with a program written in another programming language, from the Erlang programmer's perspective."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [18,35,35,35,35,32,80,114,101,114,101,113,117,105,115,105,116,101,
             115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [146,73,116,32,105,115,32,97,115,115,117,109,101,100,32,116,
                 104,97,116,32,121,111,117,32,97,114,101,32,97,32,115,107,105,
                 108,108,101,100,32,69,114,108,97,110,103,32,112,114,111,103,
                 114,97,109,109,101,114,44,32,102,97,109,105,108,105,97,114,
                 32,119,105,116,104,32,99,111,110,99,101,112,116,115,32,115,
                 117,99,104,32,97,115,32,69,114,108,97,110,103,32,100,97,116,
                 97,32,116,121,112,101,115,44,32,112,114,111,99,101,115,115,
                 101,115,44,32,109,101,115,115,97,103,101,115,44,32,97,110,
                 100,32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,
                 46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ãTo illustrate the interoperability principles, C programs running in a UNIX environment have been used. It is assumed that you have enough knowledge to apply these principles to the relevant programming languages and platforms."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [157,70,111,114,32,114,101,97,100,97,98,105,108,
                            105,116,121,44,32,116,104,101,32,101,120,97,109,
                            112,108,101,32,99,111,100,101,32,105,115,32,107,
                            101,112,116,32,97,115,32,115,105,109,112,108,101,
                            32,97,115,32,112,111,115,115,105,98,108,101,46,32,
                            70,111,114,32,101,120,97,109,112,108,101,44,32,
                            105,116,32,100,111,101,115,32,110,111,116,32,105,
                            110,99,108,117,100,101,32,101,114,114,111,114,32,
                            104,97,110,100,108,105,110,103,44,32,119,104,105,
                            99,104,32,109,105,103,104,116,32,98,101,32,118,
                            105,116,97,108,32,105,110,32,97,32,114,101,97,108,
                            45,108,105,102,101,32,115,121,115,116,101,109,
                            46]}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,66,117,105,108,116,45,73,110,32,77,101,99,104,
             97,110,105,115,109,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ITwo interoperability mechanisms are built into the Erlang runtime system,"}],
                0,false},
               {text,
                [22,42,42,100,105,115,116,114,105,98,117,116,101,100,32,69,
                 114,108,97,110,103,42,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\t**ports**"},
               {sep,
                [{text,
                  [25,46,32,65,32,118,97,114,105,97,116,105,111,110,32,111,
                   102,32,112,111,114,116,115,32,105,115]}],
                0,false},
               {text,
                [21,42,42,108,105,110,107,101,100,45,105,110,32,100,114,105,
                 118,101,114,115,42,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {text,
         [23,60,97,32,110,97,109,101,61,34,100,105,115,116,34,62,100,105,115,
          116,60,47,97,62]},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [23,35,35,35,35,32,68,105,115,116,114,105,98,117,116,101,100,32,
               69,114,108,97,110,103]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [373,65,110,32,69,114,108,97,110,103,32,114,117,110,116,
                     105,109,101,32,115,121,115,116,101,109,32,105,115,32,109,
                     97,100,101,32,97,32,100,105,115,116,114,105,98,117,116,
                     101,100,32,69,114,108,97,110,103,32,110,111,100,101,32,
                     98,121,32,103,105,118,105,110,103,32,105,116,32,97,32,
                     110,97,109,101,46,32,65,32,100,105,115,116,114,105,98,
                     117,116,101,100,32,69,114,108,97,110,103,32,110,111,100,
                     101,32,99,97,110,32,99,111,110,110,101,99,116,32,116,111,
                     44,32,97,110,100,32,109,111,110,105,116,111,114,44,32,
                     111,116,104,101,114,32,110,111,100,101,115,46,32,73,116,
                     32,99,97,110,32,97,108,115,111,32,115,112,97,119,110,32,
                     112,114,111,99,101,115,115,101,115,32,97,116,32,111,116,
                     104,101,114,32,110,111,100,101,115,46,32,77,101,115,115,
                     97,103,101,32,112,97,115,115,105,110,103,32,97,110,100,
                     32,101,114,114,111,114,32,104,97,110,100,108,105,110,103,
                     32,98,101,116,119,101,101,110,32,112,114,111,99,101,115,
                     115,101,115,32,97,116,32,100,105,102,102,101,114,101,110,
                     116,32,110,111,100,101,115,32,97,114,101,32,116,114,97,
                     110,115,112,97,114,101,110,116,46,32,65,32,110,117,109,
                     98,101,114,32,111,102,32,117,115,101,102,117,108,32,83,
                     84,68,76,73,66,32,109,111,100,117,108,101,115,32,97,114,
                     101,32,97,118,97,105,108,97,98,108,101,32,105,110,32,97,
                     32,100,105,115,116,114,105,98,117,116,101,100,32,69,114,
                     108,97,110,103,32,115,121,115,116,101,109,46,32,70,111,
                     114,32,101,120,97,109,112,108,101,44]}],
                  0,false},
                 {text,"\b*global*"},
                 {sep,
                  [{text,
                    "j, which provides global name registration. The distribution mechanism is implemented using TCP/IP sockets."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [16,42,42,87,104,101,110,32,116,111,32,117,115,101,58,42,
                   42]},
                 {sep,
                  [{text,
                    "²Distributed Erlang is primarily used for Erlang-Erlang communication. It can also be used for communication between Erlang and C, if the C program is implemented as a C node, see"}],
                  0,false},
                 {text,
                  [30,91,67,32,97,110,100,32,74,97,118,97,32,76,105,98,114,97,
                   114,105,101,115,93,40,35,99,110,111,100,101,41]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [23,42,42,87,104,101,114,101,32,116,111,32,114,101,97,100,
                   32,109,111,114,101,58,42,42]},
                 {sep,
                  [{text,
                    "`Distributed Erlang and some distributed programming techniques are described in the Erlang book."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [25,70,111,114,32,109,111,114,101,32,105,110,102,111,114,
                     109,97,116,105,111,110,44,32,115,101,101]}],
                  0,false},
                 {text,
                  "T[Distributed Programming.](../doc/getting_started/conc_prog#Distributed Programming)"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,"(Relevant manual pages are the following:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [18,91,101,114,108,97,110,103,93,40,46,47,101,114,108,97,
                      110,103,41]},
                    {sep,
                     [{text,"(manual page in ERTS (describes the BIFs)"}],
                     0,false}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [18,91,103,108,111,98,97,108,93,40,46,47,103,108,111,98,
                      97,108,41]},
                    {sep,
                     [{text,
                       [21,109,97,110,117,97,108,32,112,97,103,101,32,105,110,
                        32,75,101,114,110,101,108]}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [20,91,110,101,116,95,97,100,109,93,40,46,47,110,101,116,
                     95,97,100,109,41]},
                   {sep,
                    [{text,
                      [21,109,97,110,117,97,108,32,112,97,103,101,32,105,110,
                       32,75,101,114,110,101,108]}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\f[pg2](./pg2)"},
                  {sep,
                   [{text,
                     [21,109,97,110,117,97,108,32,112,97,103,101,32,105,110,
                      32,75,101,114,110,101,108]}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,"\f[rpc](./rpc)"},
                 {sep,
                  [{text,
                    [21,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                     75,101,114,110,101,108]}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,[14,91,112,111,111,108,93,40,46,47,112,111,111,108,41]},
                {sep,
                 [{text,
                   [21,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                    83,84,68,76,73,66]}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [16,91,115,108,97,118,101,93,40,46,47,115,108,97,118,101,41]},
               {sep,
                [{text,
                  [21,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   83,84,68,76,73,66]}],
                0,false}],
              0,false}],
            0,false}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text," #### Ports and Linked-In Drivers"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [381,80,111,114,116,115,32,112,114,111,118,105,100,101,32,
                   116,104,101,32,98,97,115,105,99,32,109,101,99,104,97,110,
                   105,115,109,32,102,111,114,32,99,111,109,109,117,110,105,
                   99,97,116,105,111,110,32,119,105,116,104,32,116,104,101,32,
                   101,120,116,101,114,110,97,108,32,119,111,114,108,100,44,
                   32,102,114,111,109,32,69,114,108,97,110,103,39,115,32,112,
                   111,105,110,116,32,111,102,32,118,105,101,119,46,32,84,104,
                   101,32,112,111,114,116,115,32,112,114,111,118,105,100,101,
                   32,97,32,98,121,116,101,45,111,114,105,101,110,116,101,100,
                   32,105,110,116,101,114,102,97,99,101,32,116,111,32,97,110,
                   32,101,120,116,101,114,110,97,108,32,112,114,111,103,114,
                   97,109,46,32,87,104,101,110,32,97,32,112,111,114,116,32,
                   105,115,32,99,114,101,97,116,101,100,44,32,69,114,108,97,
                   110,103,32,99,97,110,32,99,111,109,109,117,110,105,99,97,
                   116,101,32,119,105,116,104,32,105,116,32,98,121,32,115,101,
                   110,100,105,110,103,32,97,110,100,32,114,101,99,101,105,
                   118,105,110,103,32,108,105,115,116,115,32,111,102,32,98,
                   121,116,101,115,32,40,110,111,116,32,69,114,108,97,110,103,
                   32,116,101,114,109,115,41,46,32,84,104,105,115,32,109,101,
                   97,110,115,32,116,104,97,116,32,116,104,101,32,112,114,111,
                   103,114,97,109,109,101,114,32,109,105,103,104,116,32,104,
                   97,118,101,32,116,111,32,105,110,118,101,110,116,32,97,32,
                   115,117,105,116,97,98,108,101,32,101,110,99,111,100,105,
                   110,103,32,97,110,100,32,100,101,99,111,100,105,110,103,32,
                   115,99,104,101,109,101,46]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [350,84,104,101,32,105,109,112,108,101,109,101,110,116,97,
                   116,105,111,110,32,111,102,32,116,104,101,32,112,111,114,
                   116,32,109,101,99,104,97,110,105,115,109,32,100,101,112,
                   101,110,100,115,32,111,110,32,116,104,101,32,112,108,97,
                   116,102,111,114,109,46,32,70,111,114,32,85,78,73,88,44,32,
                   112,105,112,101,115,32,97,114,101,32,117,115,101,100,32,97,
                   110,100,32,116,104,101,32,101,120,116,101,114,110,97,108,
                   32,112,114,111,103,114,97,109,32,105,115,32,97,115,115,117,
                   109,101,100,32,116,111,32,114,101,97,100,32,102,114,111,
                   109,32,115,116,97,110,100,97,114,100,32,105,110,112,117,
                   116,32,97,110,100,32,119,114,105,116,101,32,116,111,32,115,
                   116,97,110,100,97,114,100,32,111,117,116,112,117,116,46,32,
                   84,104,101,32,101,120,116,101,114,110,97,108,32,112,114,
                   111,103,114,97,109,32,99,97,110,32,98,101,32,119,114,105,
                   116,116,101,110,32,105,110,32,97,110,121,32,112,114,111,
                   103,114,97,109,109,105,110,103,32,108,97,110,103,117,97,
                   103,101,32,97,115,32,108,111,110,103,32,97,115,32,105,116,
                   32,99,97,110,32,104,97,110,100,108,101,32,116,104,101,32,
                   105,110,116,101,114,112,114,111,99,101,115,115,32,99,111,
                   109,109,117,110,105,99,97,116,105,111,110,32,109,101,99,
                   104,97,110,105,115,109,32,119,105,116,104,32,119,104,105,
                   99,104,32,116,104,101,32,112,111,114,116,32,105,115,32,105,
                   109,112,108,101,109,101,110,116,101,100,46]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [338,84,104,101,32,101,120,116,101,114,110,97,108,32,112,
                     114,111,103,114,97,109,32,114,101,115,105,100,101,115,32,
                     105,110,32,97,110,111,116,104,101,114,32,79,83,32,112,
                     114,111,99,101,115,115,32,116,104,97,110,32,116,104,101,
                     32,69,114,108,97,110,103,32,114,117,110,116,105,109,101,
                     32,115,121,115,116,101,109,46,32,73,110,32,115,111,109,
                     101,32,99,97,115,101,115,32,116,104,105,115,32,105,115,
                     32,110,111,116,32,97,99,99,101,112,116,97,98,108,101,46,
                     32,67,111,110,115,105,100,101,114,44,32,102,111,114,32,
                     101,120,97,109,112,108,101,44,32,100,114,105,118,101,114,
                     115,32,119,105,116,104,32,118,101,114,121,32,104,97,114,
                     100,32,116,105,109,101,32,114,101,113,117,105,114,101,
                     109,101,110,116,115,46,32,73,116,32,105,115,32,116,104,
                     101,114,101,102,111,114,101,32,112,111,115,115,105,98,
                     108,101,32,116,111,32,119,114,105,116,101,32,97,32,112,
                     114,111,103,114,97,109,32,105,110,32,67,32,97,99,99,111,
                     114,100,105,110,103,32,116,111,32,99,101,114,116,97,105,
                     110,32,112,114,105,110,99,105,112,108,101,115,44,32,97,
                     110,100,32,100,121,110,97,109,105,99,97,108,108,121,32,
                     108,105,110,107,32,105,116,32,116,111,32,116,104,101,32,
                     69,114,108,97,110,103,32,114,117,110,116,105,109,101,32,
                     115,121,115,116,101,109,46,32,84,104,105,115,32,105,115,
                     32,99,97,108,108,101,100,32,97]}],
                  0,false},
                 {text,
                  [20,42,42,108,105,110,107,101,100,45,105,110,32,100,114,105,
                   118,101,114,42,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [16,42,42,87,104,101,110,32,116,111,32,117,115,101,58,42,
                   42]},
                 {sep,
                  [{text,
                    "¯Ports can be used for all kinds of interoperability situations where the Erlang program and the other program runs on the same machine. Programming is fairly straight-forward."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [151,76,105,110,107,101,100,45,105,110,32,100,114,105,118,
                   101,114,115,32,105,110,118,111,108,118,101,115,32,119,114,
                   105,116,105,110,103,32,99,101,114,116,97,105,110,32,99,97,
                   108,108,45,98,97,99,107,32,102,117,110,99,116,105,111,110,
                   115,32,105,110,32,67,46,32,84,104,105,115,32,114,101,113,
                   117,105,114,101,115,32,118,101,114,121,32,103,111,111,100,
                   32,115,107,105,108,108,115,32,97,115,32,116,104,101,32,99,
                   111,100,101,32,105,115,32,108,105,110,107,101,100,32,116,
                   111,32,116,104,101,32,69,114,108,97,110,103,32,114,117,110,
                   116,105,109,101,32,115,121,115,116,101,109,46]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,
                [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,
                 110,105,110,103,34]},
               {sep,
                [{text,[4,32,32,32,32]},
                 {sep,
                  [{sep,
                    [{above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             "aA faulty linked-in driver causes the entire Erlang runtime system to leak memory, hang, or crash."}],
                           0,false}],
                         0,true},
                        null},
                       null}}],
                    0,false}],
                  0,true}],
                0,false}},
              {text,[0]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [23,42,42,87,104,101,114,101,32,116,111,32,114,101,97,100,
                   32,109,111,114,101,58,42,42]},
                 {sep,
                  [{text,
                    "wPorts are described in section \"Miscellaneous Items\" of the Erlang book. Linked-in drivers are described in Appendix E."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[7,84,104,101,32,66,73,70]}],0,false},
                 {text,"\r*open_port/2*"},
                 {sep,
                  [{text,
                    [20,105,115,32,100,111,99,117,109,101,110,116,101,100,32,
                     105,110,32,116,104,101]}],
                  0,false},
                 {text,
                  [18,91,101,114,108,97,110,103,93,40,46,47,101,114,108,97,
                   110,103,41]},
                 {sep,
                  [{text,
                    [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                     69,82,84,83,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "7For linked-in drivers, the programmer needs to read the"}],
                  0,false},
                 {text,
                  [22,91,101,114,108,95,100,100,108,108,93,40,46,47,101,114,
                   108,95,100,100,108,108,41]},
                 {sep,
                  [{text,
                    [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                     75,101,114,110,101,108,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,"\r**Examples:**"},
                 {sep,
                  [{text,
                    [15,80,111,114,116,32,101,120,97,109,112,108,101,32,105,
                     110]}],
                  0,false},
                 {text,
                  [15,91,80,111,114,116,115,93,40,99,95,112,111,114,116,41]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [25,35,35,35,35,32,67,32,97,110,100,32,74,97,118,97,32,76,105,98,
             114,97,114,105,101,115]},
           null},
          null}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [18,35,35,35,35,32,69,114,108,95,73,110,116,101,114,102,97,99,
               101]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "©The program at the other side of a port is often a C program. To help the C programmer, the Erl_Interface library has been developed, including the following five parts:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\r*erl_marshal*"},
                  {sep,[{text,[1,44]}],0,false},
                  {text,"\v*erl_eterm*"},
                  {sep,[{text,[1,44]}],0,false},
                  {text,"\f*erl_format*"},
                  {sep,[{text,[5,44,32,97,110,100]}],0,false},
                  {text,"\f*erl_malloc*"},
                  {sep,
                   [{text,"-: Handling of the Erlang external term format"}],
                   0,false}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\r*erl_connect*"},
                  {sep,
                   [{text,",: Communication with distributed Erlang, see"}],
                   0,false},
                  {text,
                   [17,91,67,32,110,111,100,101,115,93,40,35,99,110,111,100,
                    101,41]},
                  {sep,[{text,[5,98,101,108,111,119]}],0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,"\v*erl_error*"},
                 {sep,
                  [{text,
                    [22,58,32,69,114,114,111,114,32,112,114,105,110,116,32,
                     114,111,117,116,105,110,101,115]}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,"\f*erl_global*"},
                {sep,[{text,"\": Access globally registered names"}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\n*Registry*"},
               {sep,
                [{text,"%: Store and backup of key-value pairs"}],
                0,false}],
              0,false}],
            0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "½The Erlang external term format is a representation of an Erlang term as a sequence of bytes, that is, a binary. Conversion between the two representations is done using the following BIFs:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "<\nBinary = term_to_binary(Term)\nTerm = binary_to_term(Binary)"}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [355,65,32,112,111,114,116,32,99,97,110,32,98,101,32,115,
                   101,116,32,116,111,32,117,115,101,32,98,105,110,97,114,105,
                   101,115,32,105,110,115,116,101,97,100,32,111,102,32,108,
                   105,115,116,115,32,111,102,32,98,121,116,101,115,46,32,73,
                   116,32,105,115,32,116,104,101,110,32,110,111,116,32,110,
                   101,99,101,115,115,97,114,121,32,116,111,32,105,110,118,
                   101,110,116,32,97,110,121,32,101,110,99,111,100,105,110,
                   103,47,100,101,99,111,100,105,110,103,32,115,99,104,101,
                   109,101,46,32,69,114,108,95,73,110,116,101,114,102,97,99,
                   101,32,102,117,110,99,116,105,111,110,115,32,97,114,101,32,
                   117,115,101,100,32,102,111,114,32,117,110,112,97,99,107,
                   105,110,103,32,116,104,101,32,98,105,110,97,114,121,32,97,
                   110,100,32,99,111,110,118,101,114,116,32,105,116,32,105,
                   110,116,111,32,97,32,115,116,114,117,99,116,32,115,105,109,
                   105,108,97,114,32,116,111,32,97,110,32,69,114,108,97,110,
                   103,32,116,101,114,109,46,32,83,117,99,104,32,97,32,115,
                   116,114,117,99,116,32,99,97,110,32,98,101,32,109,97,110,
                   105,112,117,108,97,116,101,100,32,105,110,32,100,105,102,
                   102,101,114,101,110,116,32,119,97,121,115,44,32,98,101,32,
                   99,111,110,118,101,114,116,101,100,32,116,111,32,116,104,
                   101,32,69,114,108,97,110,103,32,101,120,116,101,114,110,97,
                   108,32,102,111,114,109,97,116,44,32,97,110,100,32,115,101,
                   110,116,32,116,111,32,69,114,108,97,110,103,46]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [16,42,42,87,104,101,110,32,116,111,32,117,115,101,58,42,
                   42]},
                 {sep,
                  [{text,"/In C code, in conjunction with Erlang binaries."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [23,42,42,87,104,101,114,101,32,116,111,32,114,101,97,100,
                   32,109,111,114,101,58,42,42]},
                 {sep,
                  [{text,
                    "¬See the Erlang Interface User's Guide, Command Reference, and Library Reference. In Erlang/OTP R5B, and earlier versions, the information is part of the Kernel application."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\r**Examples:**"},
               {sep,
                [{text,
                  [24,69,114,108,95,73,110,116,101,114,102,97,99,101,32,101,
                   120,97,109,112,108,101,32,105,110]}],
                0,false},
               {text,
                [30,91,69,114,108,95,73,110,116,101,114,102,97,99,101,93,40,
                 101,114,108,95,105,110,116,101,114,102,97,99,101,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {text,
         [25,60,97,32,110,97,109,101,61,34,99,110,111,100,101,34,62,99,110,
          111,100,101,60,47,97,62]},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,{above,{text,"\f#### C Nodes"},null},null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [143,65,32,67,32,112,114,111,103,114,97,109,32,116,104,97,
                     116,32,117,115,101,115,32,116,104,101,32,69,114,108,95,
                     73,110,116,101,114,102,97,99,101,32,102,117,110,99,116,
                     105,111,110,115,32,102,111,114,32,115,101,116,116,105,
                     110,103,32,117,112,32,97,32,99,111,110,110,101,99,116,
                     105,111,110,32,116,111,44,32,97,110,100,32,99,111,109,
                     109,117,110,105,99,97,116,105,110,103,32,119,105,116,104,
                     44,32,97,32,100,105,115,116,114,105,98,117,116,101,100,
                     32,69,114,108,97,110,103,32,110,111,100,101,32,105,115,
                     32,99,97,108,108,101,100,32,97]}],
                  0,false},
                 {text,"\n**C node**"},
                 {sep,[{text,[6,44,32,111,114,32,97]}],0,false},
                 {text,
                  [15,42,42,104,105,100,100,101,110,32,110,111,100,101,42,42]},
                 {sep,
                  [{text,
                    "¯. The main advantage with a C node is that the communication from the Erlang programmer's perspective is extremely easy, as the C program behaves as a distributed Erlang node."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [16,42,42,87,104,101,110,32,116,111,32,117,115,101,58,42,
                   42]},
                 {sep,
                  [{text,
                    "¿C nodes can typically be used on device processors (as opposed to control processors) where C is a better choice than Erlang due to memory limitations or application characteristics, or both."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [23,42,42,87,104,101,114,101,32,116,111,32,114,101,97,100,
                   32,109,111,114,101,58,42,42]},
                 {sep,[{text,[7,83,101,101,32,116,104,101]}],0,false},
                 {text,"\r*erl_connect*"},
                 {sep,
                  [{text,
                    "upart of the Erl_Interface documentation. The programmer also needs to be familiar with TCP/IP sockets, see Sockets in"}],
                  0,false},
                 {text,
                  [30,91,83,116,97,110,100,97,114,100,32,80,114,111,116,111,
                   99,111,108,115,93,40,35,115,111,99,107,101,116,115,41]},
                 {sep,
                  [{text,
                    [25,97,110,100,32,68,105,115,116,114,105,98,117,116,101,
                     100,32,69,114,108,97,110,103,32,105,110]}],
                  0,false},
                 {text,
                  [28,91,66,117,105,108,116,45,73,110,32,77,101,99,104,97,110,
                   105,115,109,115,93,40,35,100,105,115,116,41]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,"\f**Example:**"},
                 {sep,
                  [{text,
                    [17,67,32,110,111,100,101,32,101,120,97,109,112,108,101,
                     32,105,110]}],
                  0,false},
                 {text,
                  [16,91,67,32,78,111,100,101,115,93,40,99,110,111,100,101,
                   41]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,[15,35,35,35,35,32,74,105,110,116,101,114,102,97,99,101]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "OIn Erlang/OTP R6B, a library similar to Erl_Interface for Java was added called"}],
                  0,false},
                 {text,[14,42,42,106,105,110,116,101,114,102,97,99,101,42,42]},
                 {sep,
                  [{text,
                    "H. It provides a tool for Java programs to communicate with Erlang nodes."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [23,35,35,35,35,32,83,116,97,110,100,97,114,100,32,80,114,111,116,
             111,99,111,108,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [154,83,111,109,101,116,105,109,101,115,32,99,111,109,109,
                   117,110,105,99,97,116,105,111,110,32,98,101,116,119,101,
                   101,110,32,97,110,32,69,114,108,97,110,103,32,112,114,111,
                   103,114,97,109,32,97,110,100,32,97,110,111,116,104,101,114,
                   32,112,114,111,103,114,97,109,32,117,115,105,110,103,32,97,
                   32,115,116,97,110,100,97,114,100,32,112,114,111,116,111,99,
                   111,108,32,105,115,32,100,101,115,105,114,97,98,108,101,46,
                   32,69,114,108,97,110,103,47,79,84,80,32,99,117,114,114,101,
                   110,116,108,121,32,115,117,112,112,111,114,116,115,32,84,
                   67,80,47,73,80,32,97,110,100,32,85,68,80]}],
                0,false},
               {text,"\v**sockets**"},
               {sep,[{text,"\r: as follows:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,[{text,[1,42]},{text,[4,83,78,77,80]}],0,false},
          {sep,[{text,[1,42]},{text,[4,72,84,84,80]}],0,false}},
         {sep,[{text,[1,42]},{text,"\fIIOP (CORBA)"}],0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "¨Using one of the latter three requires good knowledge about the protocol and is not covered by this tutorial. See the SNMP, Inets, and Orber applications, respectively."}],
              0,false}],
            0,true},
           null},
          null}},
        {text,
         [29,60,97,32,110,97,109,101,61,34,115,111,99,107,101,116,115,34,62,
          115,111,99,107,101,116,115,60,47,97,62]},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,{above,{text,"\f#### Sockets"},null},null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [301,83,105,109,112,108,121,32,112,117,116,44,32,99,111,110,
                   110,101,99,116,105,111,110,45,111,114,105,101,110,116,101,
                   100,32,115,111,99,107,101,116,32,99,111,109,109,117,110,
                   105,99,97,116,105,111,110,32,40,84,67,80,47,73,80,41,32,99,
                   111,110,115,105,115,116,115,32,111,102,32,97,110,32,105,
                   110,105,116,105,97,116,111,114,32,115,111,99,107,101,116,
                   32,40,34,115,101,114,118,101,114,34,41,32,115,116,97,114,
                   116,101,100,32,97,116,32,97,32,99,101,114,116,97,105,110,
                   32,104,111,115,116,32,119,105,116,104,32,97,32,99,101,114,
                   116,97,105,110,32,112,111,114,116,32,110,117,109,98,101,
                   114,46,32,65,32,99,111,110,110,101,99,116,111,114,32,115,
                   111,99,107,101,116,32,40,34,99,108,105,101,110,116,34,41,
                   44,32,119,104,105,99,104,32,105,115,32,97,119,97,114,101,
                   32,111,102,32,116,104,101,32,105,110,105,116,105,97,116,
                   111,114,32,104,111,115,116,32,110,97,109,101,32,97,110,100,
                   32,112,111,114,116,32,110,117,109,98,101,114,44,32,99,97,
                   110,32,99,111,110,110,101,99,116,32,116,111,32,105,116,32,
                   97,110,100,32,100,97,116,97,32,99,97,110,32,98,101,32,115,
                   101,110,116,32,98,101,116,119,101,101,110,32,116,104,101,
                   109,46]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "¢Connection-less socket communication (UDP) consists of an initiator socket at a certain host with a certain port number and a connector socket sending data to it."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "uFor a detailed description of the socket concept, refer to a suitable book about network programming. A suggestion is"}],
                  0,false},
                 {text,
                  "I**UNIX Network Programming, Volume 1: Networking APIs - Sockets and XTI**"},
                 {sep,
                  [{text,"(by W. Richard Stevens, ISBN: 013490012X."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "JIn Erlang/OTP, access to TCP/IP and UDP sockets is provided by the modules"}],
                  0,false},
                 {text,"\t*gen_tcp*"},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,"\t*gen_udp*"},
                 {sep,
                  [{text,
                    "_in Kernel. Both are easy to use and do not require detailed knowledge about the socket concept."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [16,42,42,87,104,101,110,32,116,111,32,117,115,101,58,42,
                   42]},
                 {sep,
                  [{text,
                    "OFor programs running on the same or on another machine than the Erlang program."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [23,42,42,87,104,101,114,101,32,116,111,32,114,101,97,100,
                   32,109,111,114,101,58,42,42]},
                 {sep,[{text,[7,83,101,101,32,116,104,101]}],0,false},
                 {text,
                  [20,91,103,101,110,95,116,99,112,93,40,46,47,103,101,110,95,
                   116,99,112,41]},
                 {sep,[{text,[7,97,110,100,32,116,104,101]}],0,false},
                 {text,
                  [20,91,103,101,110,95,117,100,112,93,40,46,47,103,101,110,
                   95,117,100,112,41]},
                 {sep,
                  [{text,
                    [23,109,97,110,117,97,108,32,112,97,103,101,115,32,105,
                     110,32,75,101,114,110,101,108,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[17,35,35,35,35,32,73,67,32,97,110,100,32,67,79,82,66,65]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÈIC (Erlang IDL Compiler) is an interface generator that, given an IDL interface specification, automatically generates stub code in Erlang, C, or Java. See the IC User's Guide and IC Reference Manual."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,70,111,114,32,100,101,116,97,105,108,115,44,32,115,101,
                   101,32,116,104,101]}],
                0,false},
               {text,"3[corba repository](https://github.com/erlang/corba)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,79,108,100,32,65,112,112,108,105,99,97,116,105,
             111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [137,84,119,111,32,111,108,100,32,97,112,112,108,105,99,97,
                 116,105,111,110,115,32,97,114,101,32,111,102,32,105,110,116,
                 101,114,101,115,116,32,114,101,103,97,114,100,105,110,103,32,
                 105,110,116,101,114,111,112,101,114,97,98,105,108,105,116,
                 121,46,32,66,111,116,104,32,104,97,118,101,32,98,101,101,110,
                 32,114,101,112,108,97,99,101,100,32,98,121,32,73,67,32,97,
                 110,100,32,97,114,101,32,109,101,110,116,105,111,110,101,100,
                 32,104,101,114,101,32,102,111,114,32,114,101,102,101,114,101,
                 110,99,101,32,111,110,108,121,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,[{text,"!IG - Removed from Erlang/OTP R6B."}],0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     "®IG (Interface Generator) automatically generated code for port or socket communication between an Erlang program and a C program, given a C header file with certain keywords."}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,"#Jive - Removed from Erlang/OTP R7B."}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     "NJive provided a simple interface between an Erlang program and a Java program."}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}],
          0,false}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[16,35,35,35,35,32,68,101,115,99,114,105,112,116,105,111,110]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "íA common interoperability situation is when you want to incorporate a piece of code, solving a complex problem, in your Erlang program. Suppose for example, that you have the following C functions that you would like to call from Erlang:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "V\n\n/* complex.c */\n\nint foo(int x) {\n  return x+1;\n}\n\nint bar(int y) {\n  return y*2;\n}\n"}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "SThe functions are deliberately kept as simple as possible, for readability reasons."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "?From an Erlang perspective, it is preferable to be able to call"}],
              0,false},
             {text,[5,42,102,111,111,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[5,42,98,97,114,42]},
             {sep,
              [{text,
                "9without having to bother about that they are C functions:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,",\n% Erlang code\n...\nRes = complex:foo(X),\n..."}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "AHere, the communication with C is hidden in the implementation of"}],
              0,false},
             {text,"\r*complex.erl*"},
             {sep,
              [{text,
                "|. In the following sections, it is shown how this module can be implemented using the different interoperability mechanisms."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "KThis section outlines an example of how to solve the example problem in the"}],
              0,false},
             {text,"\e[previous section](example)"},
             {sep,
              [{text,
                [16,98,121,32,117,115,105,110,103,32,97,32,112,111,114,116,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4The scenario is illustrated in the following figure:"}],
            0,false}],
          0,true},
         null},
        null}},
      {text,"+![Port Communication](../tutorial/port.gif)"},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,69,114,108,97,110,103,32,80,114,111,103,114,97,
             109]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [133,65,108,108,32,99,111,109,109,117,110,105,99,97,116,105,
                   111,110,32,98,101,116,119,101,101,110,32,69,114,108,97,110,
                   103,32,97,110,100,32,67,32,109,117,115,116,32,98,101,32,
                   101,115,116,97,98,108,105,115,104,101,100,32,98,121,32,99,
                   114,101,97,116,105,110,103,32,116,104,101,32,112,111,114,
                   116,46,32,84,104,101,32,69,114,108,97,110,103,32,112,114,
                   111,99,101,115,115,32,116,104,97,116,32,99,114,101,97,116,
                   101,115,32,97,32,112,111,114,116,32,105,115,32,115,97,105,
                   100,32,116,111,32,98,101]}],
                0,false},
               {text,
                [25,42,42,116,104,101,32,99,111,110,110,101,99,116,101,100,32,
                 112,114,111,99,101,115,115,42,42]},
               {sep,
                [{text,
                  "Ïof the port. All communication to and from the port must go through the connected process. If the connected process terminates, the port also terminates (and the external program, if it is written properly)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"!The port is created using the BIF"}],0,false},
               {text,"\r*open_port/2*"},
               {sep,[{text,[4,119,105,116,104]}],0,false},
               {text,
                [16,42,123,115,112,97,119,110,44,69,120,116,80,114,103,125,
                 42]},
               {sep,[{text,"!as the first argument. The string"}],0,false},
               {text,"\b*ExtPrg*"},
               {sep,
                [{text,
                  [134,105,115,32,116,104,101,32,110,97,109,101,32,111,102,32,
                   116,104,101,32,101,120,116,101,114,110,97,108,32,112,114,
                   111,103,114,97,109,44,32,105,110,99,108,117,100,105,110,
                   103,32,97,110,121,32,99,111,109,109,97,110,100,32,108,105,
                   110,101,32,97,114,103,117,109,101,110,116,115,46,32,84,104,
                   101,32,115,101,99,111,110,100,32,97,114,103,117,109,101,
                   110,116,32,105,115,32,97,32,108,105,115,116,32,111,102,32,
                   111,112,116,105,111,110,115,44,32,105,110,32,116,104,105,
                   115,32,99,97,115,101,32,111,110,108,121]}],
                0,false},
               {text,"\f*{packet,2}*"},
               {sep,
                [{text,
                  "è. This option says that a 2 byte length indicator is to be used to simplify the communication between C and Erlang. The Erlang port automatically adds the length indicator, but this must be done explicitly in the external C program."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "bThe process is also set to trap exits, which enables detection of failure of the external program:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "ô\n-module(complex1).\n-export([start/1, init/1]).\n\nstart(ExtPrg) ->\n  spawn(?MODULE, init, [ExtPrg]).\n\ninit(ExtPrg) ->\n  register(complex, self()),\n  process_flag(trap_exit, true),\n  Port = open_port({spawn, ExtPrg}, [{packet, 2}]),\n  loop(Port)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,78,111,119]}],0,false},
               {text,
                [16,42,99,111,109,112,108,101,120,49,58,102,111,111,47,49,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,
                [16,42,99,111,109,112,108,101,120,49,58,98,97,114,47,49,42]},
               {sep,
                [{text,".can be implemented. Both send a message to the"}],
                0,false},
               {text,"\t*complex*"},
               {sep,
                [{text,"*process and receive the following replies:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "­\nfoo(X) ->\n  call_port({foo, X}).\nbar(Y) ->\n  call_port({bar, Y}).\n\ncall_port(Msg) ->\n  complex ! {call, self(), Msg},\n  receive\n    {complex, Result} ->\n      Result\n  end."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,"\t*complex*"},
               {sep,[{text,"\eprocess does the following:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {above,
            {sep,
             [{text,[1,42]},
              {text,"-Encodes the message into a sequence of bytes."}],
             0,false},
            {sep,
             [{text,[1,42]},
              {text,
               [21,83,101,110,100,115,32,105,116,32,116,111,32,116,104,101,32,
                112,111,114,116,46]}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {text,
              [18,87,97,105,116,115,32,102,111,114,32,97,32,114,101,112,108,
               121,46]}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {text,
             [18,68,101,99,111,100,101,115,32,116,104,101,32,114,101,112,108,
              121,46]}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {text,
            [28,83,101,110,100,115,32,105,116,32,98,97,99,107,32,116,111,32,
             116,104,101,32,99,97,108,108,101,114,58]}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Þ\nloop(Port) ->\n  receive\n    {call, Caller, Msg} ->\n      Port ! {self(), {command, encode(Msg)}},\n      receive\n        {Port, {data, Data}} ->\n          Caller ! {complex, decode(Data)}\n      end,\n      loop(Port)\n  end."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [151,65,115,115,117,109,105,110,103,32,116,104,97,116,32,98,
                   111,116,104,32,116,104,101,32,97,114,103,117,109,101,110,
                   116,115,32,97,110,100,32,116,104,101,32,114,101,115,117,
                   108,116,115,32,102,114,111,109,32,116,104,101,32,67,32,102,
                   117,110,99,116,105,111,110,115,32,97,114,101,32,108,101,
                   115,115,32,116,104,97,110,32,50,53,54,44,32,97,32,115,105,
                   109,112,108,101,32,101,110,99,111,100,105,110,103,47,100,
                   101,99,111,100,105,110,103,32,115,99,104,101,109,101,32,
                   105,115,32,101,109,112,108,111,121,101,100,46,32,73,110,32,
                   116,104,105,115,32,115,99,104,101,109,101,44]}],
                0,false},
               {text,[5,42,102,111,111,42]},
               {sep,
                [{text,
                  [25,105,115,32,114,101,112,114,101,115,101,110,116,101,100,
                   32,98,121,32,98,121,116,101,32,49,44]}],
                0,false},
               {text,[5,42,98,97,114,42]},
               {sep,
                [{text,
                  "Uis represented by 2, and the argument/result is represented by a single byte as well:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "O\nencode({foo, X}) -> [1, X];\nencode({bar, Y}) -> [2, Y].\n\ndecode([Int]) -> Int."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "wThe resulting Erlang program, including functionality for stopping the port and detecting port failures, is as follows:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [1043,10,10,45,109,111,100,117,108,101,40,99,111,109,112,108,
                 101,120,49,41,46,10,45,101,120,112,111,114,116,40,91,115,116,
                 97,114,116,47,49,44,32,115,116,111,112,47,48,44,32,105,110,
                 105,116,47,49,93,41,46,10,45,101,120,112,111,114,116,40,91,
                 102,111,111,47,49,44,32,98,97,114,47,49,93,41,46,10,10,115,
                 116,97,114,116,40,69,120,116,80,114,103,41,32,45,62,10,32,32,
                 32,32,115,112,97,119,110,40,63,77,79,68,85,76,69,44,32,105,
                 110,105,116,44,32,91,69,120,116,80,114,103,93,41,46,10,115,
                 116,111,112,40,41,32,45,62,10,32,32,32,32,99,111,109,112,108,
                 101,120,32,33,32,115,116,111,112,46,10,10,102,111,111,40,88,
                 41,32,45,62,10,32,32,32,32,99,97,108,108,95,112,111,114,116,
                 40,123,102,111,111,44,32,88,125,41,46,10,98,97,114,40,89,41,
                 32,45,62,10,32,32,32,32,99,97,108,108,95,112,111,114,116,40,
                 123,98,97,114,44,32,89,125,41,46,10,10,99,97,108,108,95,112,
                 111,114,116,40,77,115,103,41,32,45,62,10,32,32,32,32,99,111,
                 109,112,108,101,120,32,33,32,123,99,97,108,108,44,32,115,101,
                 108,102,40,41,44,32,77,115,103,125,44,10,32,32,32,32,114,101,
                 99,101,105,118,101,10,9,123,99,111,109,112,108,101,120,44,32,
                 82,101,115,117,108,116,125,32,45,62,10,9,32,32,32,32,82,101,
                 115,117,108,116,10,32,32,32,32,101,110,100,46,10,10,105,110,
                 105,116,40,69,120,116,80,114,103,41,32,45,62,10,32,32,32,32,
                 114,101,103,105,115,116,101,114,40,99,111,109,112,108,101,
                 120,44,32,115,101,108,102,40,41,41,44,10,32,32,32,32,112,114,
                 111,99,101,115,115,95,102,108,97,103,40,116,114,97,112,95,
                 101,120,105,116,44,32,116,114,117,101,41,44,10,32,32,32,32,
                 80,111,114,116,32,61,32,111,112,101,110,95,112,111,114,116,
                 40,123,115,112,97,119,110,44,32,69,120,116,80,114,103,125,44,
                 32,91,123,112,97,99,107,101,116,44,32,50,125,93,41,44,10,32,
                 32,32,32,108,111,111,112,40,80,111,114,116,41,46,10,10,108,
                 111,111,112,40,80,111,114,116,41,32,45,62,10,32,32,32,32,114,
                 101,99,101,105,118,101,10,9,123,99,97,108,108,44,32,67,97,
                 108,108,101,114,44,32,77,115,103,125,32,45,62,10,9,32,32,32,
                 32,80,111,114,116,32,33,32,123,115,101,108,102,40,41,44,32,
                 123,99,111,109,109,97,110,100,44,32,101,110,99,111,100,101,
                 40,77,115,103,41,125,125,44,10,9,32,32,32,32,114,101,99,101,
                 105,118,101,10,9,9,123,80,111,114,116,44,32,123,100,97,116,
                 97,44,32,68,97,116,97,125,125,32,45,62,10,9,9,32,32,32,32,67,
                 97,108,108,101,114,32,33,32,123,99,111,109,112,108,101,120,
                 44,32,100,101,99,111,100,101,40,68,97,116,97,41,125,10,9,32,
                 32,32,32,101,110,100,44,10,9,32,32,32,32,108,111,111,112,40,
                 80,111,114,116,41,59,10,9,115,116,111,112,32,45,62,10,9,32,
                 32,32,32,80,111,114,116,32,33,32,123,115,101,108,102,40,41,
                 44,32,99,108,111,115,101,125,44,10,9,32,32,32,32,114,101,99,
                 101,105,118,101,10,9,9,123,80,111,114,116,44,32,99,108,111,
                 115,101,100,125,32,45,62,10,9,9,32,32,32,32,101,120,105,116,
                 40,110,111,114,109,97,108,41,10,9,32,32,32,32,101,110,100,59,
                 10,9,123,39,69,88,73,84,39,44,32,80,111,114,116,44,32,82,101,
                 97,115,111,110,125,32,45,62,10,9,32,32,32,32,101,120,105,116,
                 40,112,111,114,116,95,116,101,114,109,105,110,97,116,101,100,
                 41,10,32,32,32,32,101,110,100,46,10,10,101,110,99,111,100,
                 101,40,123,102,111,111,44,32,88,125,41,32,45,62,32,91,49,44,
                 32,88,93,59,10,101,110,99,111,100,101,40,123,98,97,114,44,32,
                 89,125,41,32,45,62,32,91,50,44,32,89,93,46,10,10,100,101,99,
                 111,100,101,40,91,73,110,116,93,41,32,45,62,32,73,110,116,46,
                 10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[14,35,35,35,35,32,67,32,80,114,111,103,114,97,109]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [281,79,110,32,116,104,101,32,67,32,115,105,100,101,44,32,
                   105,116,32,105,115,32,110,101,99,101,115,115,97,114,121,32,
                   116,111,32,119,114,105,116,101,32,102,117,110,99,116,105,
                   111,110,115,32,102,111,114,32,114,101,99,101,105,118,105,
                   110,103,32,97,110,100,32,115,101,110,100,105,110,103,32,
                   100,97,116,97,32,119,105,116,104,32,50,32,98,121,116,101,
                   32,108,101,110,103,116,104,32,105,110,100,105,99,97,116,
                   111,114,115,32,102,114,111,109,47,116,111,32,69,114,108,97,
                   110,103,46,32,66,121,32,100,101,102,97,117,108,116,44,32,
                   116,104,101,32,67,32,112,114,111,103,114,97,109,32,105,115,
                   32,116,111,32,114,101,97,100,32,102,114,111,109,32,115,116,
                   97,110,100,97,114,100,32,105,110,112,117,116,32,40,102,105,
                   108,101,32,100,101,115,99,114,105,112,116,111,114,32,48,41,
                   32,97,110,100,32,119,114,105,116,101,32,116,111,32,115,116,
                   97,110,100,97,114,100,32,111,117,116,112,117,116,32,40,102,
                   105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,
                   49,41,46,32,69,120,97,109,112,108,101,115,32,111,102,32,
                   115,117,99,104,32,102,117,110,99,116,105,111,110,115,44]}],
                0,false},
               {text,"\f*read_cmd/1*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\r*write_cmd/2*"},
               {sep,[{text,"\n, follows:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [733,10,10,47,42,32,101,114,108,95,99,111,109,109,46,99,32,42,
                 47,10,10,116,121,112,101,100,101,102,32,117,110,115,105,103,
                 110,101,100,32,99,104,97,114,32,98,121,116,101,59,10,10,114,
                 101,97,100,95,99,109,100,40,98,121,116,101,32,42,98,117,102,
                 41,10,123,10,32,32,105,110,116,32,108,101,110,59,10,10,32,32,
                 105,102,32,40,114,101,97,100,95,101,120,97,99,116,40,98,117,
                 102,44,32,50,41,32,33,61,32,50,41,10,32,32,32,32,114,101,116,
                 117,114,110,40,45,49,41,59,10,32,32,108,101,110,32,61,32,40,
                 98,117,102,91,48,93,32,60,60,32,56,41,32,124,32,98,117,102,
                 91,49,93,59,10,32,32,114,101,116,117,114,110,32,114,101,97,
                 100,95,101,120,97,99,116,40,98,117,102,44,32,108,101,110,41,
                 59,10,125,10,10,119,114,105,116,101,95,99,109,100,40,98,121,
                 116,101,32,42,98,117,102,44,32,105,110,116,32,108,101,110,41,
                 10,123,10,32,32,98,121,116,101,32,108,105,59,10,10,32,32,108,
                 105,32,61,32,40,108,101,110,32,62,62,32,56,41,32,38,32,48,
                 120,102,102,59,10,32,32,119,114,105,116,101,95,101,120,97,99,
                 116,40,38,108,105,44,32,49,41,59,10,32,32,10,32,32,108,105,
                 32,61,32,108,101,110,32,38,32,48,120,102,102,59,10,32,32,119,
                 114,105,116,101,95,101,120,97,99,116,40,38,108,105,44,32,49,
                 41,59,10,10,32,32,114,101,116,117,114,110,32,119,114,105,116,
                 101,95,101,120,97,99,116,40,98,117,102,44,32,108,101,110,41,
                 59,10,125,10,10,114,101,97,100,95,101,120,97,99,116,40,98,
                 121,116,101,32,42,98,117,102,44,32,105,110,116,32,108,101,
                 110,41,10,123,10,32,32,105,110,116,32,105,44,32,103,111,116,
                 61,48,59,10,10,32,32,100,111,32,123,10,32,32,32,32,105,102,
                 32,40,40,105,32,61,32,114,101,97,100,40,48,44,32,98,117,102,
                 43,103,111,116,44,32,108,101,110,45,103,111,116,41,41,32,60,
                 61,32,48,41,10,32,32,32,32,32,32,114,101,116,117,114,110,40,
                 105,41,59,10,32,32,32,32,103,111,116,32,43,61,32,105,59,10,
                 32,32,125,32,119,104,105,108,101,32,40,103,111,116,60,108,
                 101,110,41,59,10,10,32,32,114,101,116,117,114,110,40,108,101,
                 110,41,59,10,125,10,10,119,114,105,116,101,95,101,120,97,99,
                 116,40,98,121,116,101,32,42,98,117,102,44,32,105,110,116,32,
                 108,101,110,41,10,123,10,32,32,105,110,116,32,105,44,32,119,
                 114,111,116,101,32,61,32,48,59,10,10,32,32,100,111,32,123,10,
                 32,32,32,32,105,102,32,40,40,105,32,61,32,119,114,105,116,
                 101,40,49,44,32,98,117,102,43,119,114,111,116,101,44,32,108,
                 101,110,45,119,114,111,116,101,41,41,32,60,61,32,48,41,10,32,
                 32,32,32,32,32,114,101,116,117,114,110,32,40,105,41,59,10,32,
                 32,32,32,119,114,111,116,101,32,43,61,32,105,59,10,32,32,125,
                 32,119,104,105,108,101,32,40,119,114,111,116,101,60,108,101,
                 110,41,59,10,10,32,32,114,101,116,117,114,110,32,40,108,101,
                 110,41,59,10,125,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\vNotice that"}],0,false},
               {text,[7,42,115,116,100,105,110,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\b*stdout*"},
               {sep,
                [{text,"&are for buffered input/output and must"}],
                0,false},
               {text,[7,42,42,110,111,116,42,42]},
               {sep,
                [{text,"*be used for the communication with Erlang."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[6,73,110,32,116,104,101]}],0,false},
               {text,[6,42,109,97,105,110,42]},
               {sep,
                [{text,
                  [293,102,117,110,99,116,105,111,110,44,32,116,104,101,32,67,
                   32,112,114,111,103,114,97,109,32,105,115,32,116,111,32,108,
                   105,115,116,101,110,32,102,111,114,32,97,32,109,101,115,
                   115,97,103,101,32,102,114,111,109,32,69,114,108,97,110,103,
                   32,97,110,100,44,32,97,99,99,111,114,100,105,110,103,32,
                   116,111,32,116,104,101,32,115,101,108,101,99,116,101,100,
                   32,101,110,99,111,100,105,110,103,47,100,101,99,111,100,
                   105,110,103,32,115,99,104,101,109,101,44,32,117,115,101,32,
                   116,104,101,32,102,105,114,115,116,32,98,121,116,101,32,
                   116,111,32,100,101,116,101,114,109,105,110,101,32,119,104,
                   105,99,104,32,102,117,110,99,116,105,111,110,32,116,111,32,
                   99,97,108,108,32,97,110,100,32,116,104,101,32,115,101,99,
                   111,110,100,32,98,121,116,101,32,97,115,32,97,114,103,117,
                   109,101,110,116,32,116,111,32,116,104,101,32,102,117,110,
                   99,116,105,111,110,46,32,84,104,101,32,114,101,115,117,108,
                   116,32,111,102,32,99,97,108,108,105,110,103,32,116,104,101,
                   32,102,117,110,99,116,105,111,110,32,105,115,32,116,104,
                   101,110,32,116,111,32,98,101,32,115,101,110,116,32,98,97,
                   99,107,32,116,111,32,69,114,108,97,110,103,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [316,10,10,47,42,32,112,111,114,116,46,99,32,42,47,10,10,116,
                 121,112,101,100,101,102,32,117,110,115,105,103,110,101,100,
                 32,99,104,97,114,32,98,121,116,101,59,10,10,105,110,116,32,
                 109,97,105,110,40,41,32,123,10,32,32,105,110,116,32,102,110,
                 44,32,97,114,103,44,32,114,101,115,59,10,32,32,98,121,116,
                 101,32,98,117,102,91,49,48,48,93,59,10,10,32,32,119,104,105,
                 108,101,32,40,114,101,97,100,95,99,109,100,40,98,117,102,41,
                 32,62,32,48,41,32,123,10,32,32,32,32,102,110,32,61,32,98,117,
                 102,91,48,93,59,10,32,32,32,32,97,114,103,32,61,32,98,117,
                 102,91,49,93,59,10,32,32,32,32,10,32,32,32,32,105,102,32,40,
                 102,110,32,61,61,32,49,41,32,123,10,32,32,32,32,32,32,114,
                 101,115,32,61,32,102,111,111,40,97,114,103,41,59,10,32,32,32,
                 32,125,32,101,108,115,101,32,105,102,32,40,102,110,32,61,61,
                 32,50,41,32,123,10,32,32,32,32,32,32,114,101,115,32,61,32,98,
                 97,114,40,97,114,103,41,59,10,32,32,32,32,125,10,10,32,32,32,
                 32,98,117,102,91,48,93,32,61,32,114,101,115,59,10,32,32,32,
                 32,119,114,105,116,101,95,99,109,100,40,98,117,102,44,32,49,
                 41,59,10,32,32,125,10,125,10,32,32,32,32,32,32,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"!Notice that the C program is in a"}],0,false},
               {text,[7,42,119,104,105,108,101,42]},
               {sep,
                [{text,"'-loop, checking for the return value of"}],
                0,false},
               {text,"\f*read_cmd/1*"},
               {sep,
                [{text,
                  "P. This is because the C program must detect when the port closes and terminates."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,82,117,110,110,105,110,103,32,116,104,101,32,
             69,120,97,109,112,108,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 1.**"},
               {sep,
                [{text,
                  [19,67,111,109,112,105,108,101,32,116,104,101,32,67,32,99,
                   111,100,101,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,117,110,105,120,62,32]},
               {text,")gcc -o extprg complex.c erl_comm.c port.c"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 2.**"},
               {sep,
                [{text,")Start Erlang and compile the Erlang code:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,117,110,105,120,62,32]},
               {text,[3,101,114,108]},
               {text,
                "L\nErlang (BEAM) emulator version 4.9.1.2\n\nEshell V4.9.1.2 (abort with ^G)\n1> "},
               {text,"\fc(complex1)."},
               {text,
                [14,10,123,111,107,44,99,111,109,112,108,101,120,49,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 3.**"},
               {sep,
                [{text,
                  [16,82,117,110,32,116,104,101,32,101,120,97,109,112,108,101,
                   58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,50,62,32]},
               {text,
                [25,99,111,109,112,108,101,120,49,58,115,116,97,114,116,40,34,
                 101,120,116,112,114,103,34,41,46]},
               {text,[1,10]},
               {text,"\f<0.34.0>\n3> "},
               {text,
                [16,99,111,109,112,108,101,120,49,58,102,111,111,40,51,41,46]},
               {text,[6,10,52,10,52,62,32]},
               {text,
                [16,99,111,109,112,108,101,120,49,58,98,97,114,40,53,41,46]},
               {text,[7,10,49,48,10,53,62,32]},
               {text,
                [16,99,111,109,112,108,101,120,49,58,115,116,111,112,40,41,
                 46]},
               {text,[5,10,115,116,111,112]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GThis section outlines an example of how to solve the example problem in"}],
              0,false},
             {text,
              [26,91,80,114,111,98,108,101,109,32,69,120,97,109,112,108,101,
               93,40,101,120,97,109,112,108,101,41]},
             {sep,
              [{text,
                "Nby using a port and Erl_Interface. It is necessary to read the port example in"}],
              0,false},
             {text,[15,91,80,111,114,116,115,93,40,99,95,112,111,114,116,41]},
             {sep,
              [{text,
                [28,98,101,102,111,114,101,32,114,101,97,100,105,110,103,32,
                 116,104,105,115,32,115,101,99,116,105,111,110,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,69,114,108,97,110,103,32,80,114,111,103,114,97,
             109]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "wThe following example shows an Erlang program communicating with a C program over a plain port with home made encoding:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [1043,10,10,45,109,111,100,117,108,101,40,99,111,109,112,108,
                 101,120,49,41,46,10,45,101,120,112,111,114,116,40,91,115,116,
                 97,114,116,47,49,44,32,115,116,111,112,47,48,44,32,105,110,
                 105,116,47,49,93,41,46,10,45,101,120,112,111,114,116,40,91,
                 102,111,111,47,49,44,32,98,97,114,47,49,93,41,46,10,10,115,
                 116,97,114,116,40,69,120,116,80,114,103,41,32,45,62,10,32,32,
                 32,32,115,112,97,119,110,40,63,77,79,68,85,76,69,44,32,105,
                 110,105,116,44,32,91,69,120,116,80,114,103,93,41,46,10,115,
                 116,111,112,40,41,32,45,62,10,32,32,32,32,99,111,109,112,108,
                 101,120,32,33,32,115,116,111,112,46,10,10,102,111,111,40,88,
                 41,32,45,62,10,32,32,32,32,99,97,108,108,95,112,111,114,116,
                 40,123,102,111,111,44,32,88,125,41,46,10,98,97,114,40,89,41,
                 32,45,62,10,32,32,32,32,99,97,108,108,95,112,111,114,116,40,
                 123,98,97,114,44,32,89,125,41,46,10,10,99,97,108,108,95,112,
                 111,114,116,40,77,115,103,41,32,45,62,10,32,32,32,32,99,111,
                 109,112,108,101,120,32,33,32,123,99,97,108,108,44,32,115,101,
                 108,102,40,41,44,32,77,115,103,125,44,10,32,32,32,32,114,101,
                 99,101,105,118,101,10,9,123,99,111,109,112,108,101,120,44,32,
                 82,101,115,117,108,116,125,32,45,62,10,9,32,32,32,32,82,101,
                 115,117,108,116,10,32,32,32,32,101,110,100,46,10,10,105,110,
                 105,116,40,69,120,116,80,114,103,41,32,45,62,10,32,32,32,32,
                 114,101,103,105,115,116,101,114,40,99,111,109,112,108,101,
                 120,44,32,115,101,108,102,40,41,41,44,10,32,32,32,32,112,114,
                 111,99,101,115,115,95,102,108,97,103,40,116,114,97,112,95,
                 101,120,105,116,44,32,116,114,117,101,41,44,10,32,32,32,32,
                 80,111,114,116,32,61,32,111,112,101,110,95,112,111,114,116,
                 40,123,115,112,97,119,110,44,32,69,120,116,80,114,103,125,44,
                 32,91,123,112,97,99,107,101,116,44,32,50,125,93,41,44,10,32,
                 32,32,32,108,111,111,112,40,80,111,114,116,41,46,10,10,108,
                 111,111,112,40,80,111,114,116,41,32,45,62,10,32,32,32,32,114,
                 101,99,101,105,118,101,10,9,123,99,97,108,108,44,32,67,97,
                 108,108,101,114,44,32,77,115,103,125,32,45,62,10,9,32,32,32,
                 32,80,111,114,116,32,33,32,123,115,101,108,102,40,41,44,32,
                 123,99,111,109,109,97,110,100,44,32,101,110,99,111,100,101,
                 40,77,115,103,41,125,125,44,10,9,32,32,32,32,114,101,99,101,
                 105,118,101,10,9,9,123,80,111,114,116,44,32,123,100,97,116,
                 97,44,32,68,97,116,97,125,125,32,45,62,10,9,9,32,32,32,32,67,
                 97,108,108,101,114,32,33,32,123,99,111,109,112,108,101,120,
                 44,32,100,101,99,111,100,101,40,68,97,116,97,41,125,10,9,32,
                 32,32,32,101,110,100,44,10,9,32,32,32,32,108,111,111,112,40,
                 80,111,114,116,41,59,10,9,115,116,111,112,32,45,62,10,9,32,
                 32,32,32,80,111,114,116,32,33,32,123,115,101,108,102,40,41,
                 44,32,99,108,111,115,101,125,44,10,9,32,32,32,32,114,101,99,
                 101,105,118,101,10,9,9,123,80,111,114,116,44,32,99,108,111,
                 115,101,100,125,32,45,62,10,9,9,32,32,32,32,101,120,105,116,
                 40,110,111,114,109,97,108,41,10,9,32,32,32,32,101,110,100,59,
                 10,9,123,39,69,88,73,84,39,44,32,80,111,114,116,44,32,82,101,
                 97,115,111,110,125,32,45,62,10,9,32,32,32,32,101,120,105,116,
                 40,112,111,114,116,95,116,101,114,109,105,110,97,116,101,100,
                 41,10,32,32,32,32,101,110,100,46,10,10,101,110,99,111,100,
                 101,40,123,102,111,111,44,32,88,125,41,32,45,62,32,91,49,44,
                 32,88,93,59,10,101,110,99,111,100,101,40,123,98,97,114,44,32,
                 89,125,41,32,45,62,32,91,50,44,32,89,93,46,10,10,100,101,99,
                 111,100,101,40,91,73,110,116,93,41,32,45,62,32,73,110,116,46,
                 10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "[There are two differences when using Erl_Interface on the C side compared to the example in"}],
                0,false},
               {text,
                [15,91,80,111,114,116,115,93,40,99,95,112,111,114,116,41]},
               {sep,
                [{text,
                  [28,44,32,117,115,105,110,103,32,111,110,108,121,32,116,104,
                   101,32,112,108,97,105,110,32,112,111,114,116,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {text,
            "cAs Erl_Interface operates on the Erlang external term format, the port must be set to use binaries."}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                "5Instead of inventing an encoding/decoding scheme, the"}],
              0,false},
             {text,
              [18,42,116,101,114,109,95,116,111,95,98,105,110,97,114,121,47,
               49,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [18,42,98,105,110,97,114,121,95,116,111,95,116,101,114,109,47,
               49,42]},
             {sep,
              [{text,
                [20,66,73,70,115,32,97,114,101,32,116,111,32,98,101,32,117,
                 115,101,100,46]}],
              0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\bThat is:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"*\nopen_port({spawn, ExtPrg}, [{packet, 2}])"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [17,105,115,32,114,101,112,108,97,99,101,100,32,119,105,116,
                 104,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"2\nopen_port({spawn, ExtPrg}, [{packet, 2}, binary])"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,[4,65,110,100,58]}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "t\nPort ! {self(), {command, encode(Msg)}},\nreceive\n  {Port, {data, Data}} ->\n    Caller ! {complex, decode(Data)}\nend"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [17,105,115,32,114,101,112,108,97,99,101,100,32,119,105,116,
                 104,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [132,10,80,111,114,116,32,33,32,123,115,101,108,102,40,41,44,
                 32,123,99,111,109,109,97,110,100,44,32,116,101,114,109,95,
                 116,111,95,98,105,110,97,114,121,40,77,115,103,41,125,125,44,
                 10,114,101,99,101,105,118,101,10,32,32,123,80,111,114,116,44,
                 32,123,100,97,116,97,44,32,68,97,116,97,125,125,32,45,62,10,
                 32,32,32,32,67,97,108,108,101,114,32,33,32,123,99,111,109,
                 112,108,101,120,44,32,98,105,110,97,114,121,95,116,111,95,
                 116,101,114,109,40,68,97,116,97,41,125,10,101,110,100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"+The resulting Erlang program is as follows:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [987,10,10,45,109,111,100,117,108,101,40,99,111,109,112,108,
                 101,120,50,41,46,10,45,101,120,112,111,114,116,40,91,115,116,
                 97,114,116,47,49,44,32,115,116,111,112,47,48,44,32,105,110,
                 105,116,47,49,93,41,46,10,45,101,120,112,111,114,116,40,91,
                 102,111,111,47,49,44,32,98,97,114,47,49,93,41,46,10,10,115,
                 116,97,114,116,40,69,120,116,80,114,103,41,32,45,62,10,32,32,
                 32,32,115,112,97,119,110,40,63,77,79,68,85,76,69,44,32,105,
                 110,105,116,44,32,91,69,120,116,80,114,103,93,41,46,10,115,
                 116,111,112,40,41,32,45,62,10,32,32,32,32,99,111,109,112,108,
                 101,120,32,33,32,115,116,111,112,46,10,10,102,111,111,40,88,
                 41,32,45,62,10,32,32,32,32,99,97,108,108,95,112,111,114,116,
                 40,123,102,111,111,44,32,88,125,41,46,10,98,97,114,40,89,41,
                 32,45,62,10,32,32,32,32,99,97,108,108,95,112,111,114,116,40,
                 123,98,97,114,44,32,89,125,41,46,10,10,99,97,108,108,95,112,
                 111,114,116,40,77,115,103,41,32,45,62,10,32,32,32,32,99,111,
                 109,112,108,101,120,32,33,32,123,99,97,108,108,44,32,115,101,
                 108,102,40,41,44,32,77,115,103,125,44,10,32,32,32,32,114,101,
                 99,101,105,118,101,10,9,123,99,111,109,112,108,101,120,44,32,
                 82,101,115,117,108,116,125,32,45,62,10,9,32,32,32,32,82,101,
                 115,117,108,116,10,32,32,32,32,101,110,100,46,10,10,105,110,
                 105,116,40,69,120,116,80,114,103,41,32,45,62,10,32,32,32,32,
                 114,101,103,105,115,116,101,114,40,99,111,109,112,108,101,
                 120,44,32,115,101,108,102,40,41,41,44,10,32,32,32,32,112,114,
                 111,99,101,115,115,95,102,108,97,103,40,116,114,97,112,95,
                 101,120,105,116,44,32,116,114,117,101,41,44,10,32,32,32,32,
                 80,111,114,116,32,61,32,111,112,101,110,95,112,111,114,116,
                 40,123,115,112,97,119,110,44,32,69,120,116,80,114,103,125,44,
                 32,91,123,112,97,99,107,101,116,44,32,50,125,44,32,98,105,
                 110,97,114,121,93,41,44,10,32,32,32,32,108,111,111,112,40,80,
                 111,114,116,41,46,10,10,108,111,111,112,40,80,111,114,116,41,
                 32,45,62,10,32,32,32,32,114,101,99,101,105,118,101,10,9,123,
                 99,97,108,108,44,32,67,97,108,108,101,114,44,32,77,115,103,
                 125,32,45,62,10,9,32,32,32,32,80,111,114,116,32,33,32,123,
                 115,101,108,102,40,41,44,32,123,99,111,109,109,97,110,100,44,
                 32,116,101,114,109,95,116,111,95,98,105,110,97,114,121,40,77,
                 115,103,41,125,125,44,10,9,32,32,32,32,114,101,99,101,105,
                 118,101,10,9,9,123,80,111,114,116,44,32,123,100,97,116,97,44,
                 32,68,97,116,97,125,125,32,45,62,10,9,9,32,32,32,32,67,97,
                 108,108,101,114,32,33,32,123,99,111,109,112,108,101,120,44,
                 32,98,105,110,97,114,121,95,116,111,95,116,101,114,109,40,68,
                 97,116,97,41,125,10,9,32,32,32,32,101,110,100,44,10,9,32,32,
                 32,32,108,111,111,112,40,80,111,114,116,41,59,10,9,115,116,
                 111,112,32,45,62,10,9,32,32,32,32,80,111,114,116,32,33,32,
                 123,115,101,108,102,40,41,44,32,99,108,111,115,101,125,44,10,
                 9,32,32,32,32,114,101,99,101,105,118,101,10,9,9,123,80,111,
                 114,116,44,32,99,108,111,115,101,100,125,32,45,62,10,9,9,32,
                 32,32,32,101,120,105,116,40,110,111,114,109,97,108,41,10,9,
                 32,32,32,32,101,110,100,59,10,9,123,39,69,88,73,84,39,44,32,
                 80,111,114,116,44,32,82,101,97,115,111,110,125,32,45,62,10,9,
                 32,32,32,32,101,120,105,116,40,112,111,114,116,95,116,101,
                 114,109,105,110,97,116,101,100,41,10,32,32,32,32,101,110,100,
                 46,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [19,78,111,116,105,99,101,32,116,104,97,116,32,99,97,108,
                   108,105,110,103]}],
                0,false},
               {text,
                [16,42,99,111,109,112,108,101,120,50,58,102,111,111,47,49,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,
                [16,42,99,111,109,112,108,101,120,50,58,98,97,114,47,49,42]},
               {sep,
                [{text,
                  [20,114,101,115,117,108,116,115,32,105,110,32,116,104,101,
                   32,116,117,112,108,101]}],
                0,false},
               {text,"\t*{foo,X}*"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"\t*{bar,Y}*"},
               {sep,
                [{text,
                  [17,98,101,105,110,103,32,115,101,110,116,32,116,111,32,116,
                   104,101]}],
                0,false},
               {text,"\t*complex*"},
               {sep,
                [{text,
                  [136,112,114,111,99,101,115,115,44,32,119,104,105,99,104,32,
                   99,111,100,101,115,32,116,104,101,109,32,97,115,32,98,105,
                   110,97,114,105,101,115,32,97,110,100,32,115,101,110,100,
                   115,32,116,104,101,109,32,116,111,32,116,104,101,32,112,
                   111,114,116,46,32,84,104,105,115,32,109,101,97,110,115,32,
                   116,104,97,116,32,116,104,101,32,67,32,112,114,111,103,114,
                   97,109,32,109,117,115,116,32,98,101,32,97,98,108,101,32,
                   116,111,32,104,97,110,100,108,101,32,116,104,101,115,101,
                   32,116,119,111,32,116,117,112,108,101,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[14,35,35,35,35,32,67,32,80,114,111,103,114,97,109]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "wThe following example shows a C program communicating with an Erlang program over a plain port with home made encoding:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [316,10,10,47,42,32,112,111,114,116,46,99,32,42,47,10,10,116,
                 121,112,101,100,101,102,32,117,110,115,105,103,110,101,100,
                 32,99,104,97,114,32,98,121,116,101,59,10,10,105,110,116,32,
                 109,97,105,110,40,41,32,123,10,32,32,105,110,116,32,102,110,
                 44,32,97,114,103,44,32,114,101,115,59,10,32,32,98,121,116,
                 101,32,98,117,102,91,49,48,48,93,59,10,10,32,32,119,104,105,
                 108,101,32,40,114,101,97,100,95,99,109,100,40,98,117,102,41,
                 32,62,32,48,41,32,123,10,32,32,32,32,102,110,32,61,32,98,117,
                 102,91,48,93,59,10,32,32,32,32,97,114,103,32,61,32,98,117,
                 102,91,49,93,59,10,32,32,32,32,10,32,32,32,32,105,102,32,40,
                 102,110,32,61,61,32,49,41,32,123,10,32,32,32,32,32,32,114,
                 101,115,32,61,32,102,111,111,40,97,114,103,41,59,10,32,32,32,
                 32,125,32,101,108,115,101,32,105,102,32,40,102,110,32,61,61,
                 32,50,41,32,123,10,32,32,32,32,32,32,114,101,115,32,61,32,98,
                 97,114,40,97,114,103,41,59,10,32,32,32,32,125,10,10,32,32,32,
                 32,98,117,102,91,48,93,32,61,32,114,101,115,59,10,32,32,32,
                 32,119,114,105,116,101,95,99,109,100,40,98,117,102,44,32,49,
                 41,59,10,32,32,125,10,125,10,32,32,32,32,32,32,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [28,67,111,109,112,97,114,101,100,32,116,111,32,116,104,101,
                   32,67,32,112,114,111,103,114,97,109,32,105,110]}],
                0,false},
               {text,
                [15,91,80,111,114,116,115,93,40,99,95,112,111,114,116,41]},
               {sep,[{text," , using only the plain port, the"}],0,false},
               {text,[7,42,119,104,105,108,101,42]},
               {sep,
                [{text,
                  "|-loop must be rewritten. Messages coming from the port is on the Erlang external term format. They must be converted into an"}],
                0,false},
               {text,[7,42,69,84,69,82,77,42]},
               {sep,
                [{text,
                  "Lstruct, which is a C struct similar to an Erlang term. The result of calling"}],
                0,false},
               {text,[7,42,102,111,111,40,41,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,[7,42,98,97,114,40,41,42]},
               {sep,
                [{text,
                  "´must be converted to the Erlang external term format before being sent back to the port. But before calling any other Erl_Interface function, the memory handling must be initiated:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [19,10,101,114,108,95,105,110,105,116,40,78,85,76,76,44,32,48,
                 41,59]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,84,104,101,32,102,111,108,108,111,119,105,110,103,32,
                   102,117,110,99,116,105,111,110,115,44]}],
                0,false},
               {text,"\f*read_cmd()*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\r*write_cmd()*"},
               {sep,[{text,"\n, from the"}],0,false},
               {text,"\f*erl_comm.c*"},
               {sep,[{text,"\nexample in"}],0,false},
               {text,
                [15,91,80,111,114,116,115,93,40,99,95,112,111,114,116,41]},
               {sep,
                [{text,
                  ";can still be used for reading from and writing to the port:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [733,10,10,47,42,32,101,114,108,95,99,111,109,109,46,99,32,42,
                 47,10,10,116,121,112,101,100,101,102,32,117,110,115,105,103,
                 110,101,100,32,99,104,97,114,32,98,121,116,101,59,10,10,114,
                 101,97,100,95,99,109,100,40,98,121,116,101,32,42,98,117,102,
                 41,10,123,10,32,32,105,110,116,32,108,101,110,59,10,10,32,32,
                 105,102,32,40,114,101,97,100,95,101,120,97,99,116,40,98,117,
                 102,44,32,50,41,32,33,61,32,50,41,10,32,32,32,32,114,101,116,
                 117,114,110,40,45,49,41,59,10,32,32,108,101,110,32,61,32,40,
                 98,117,102,91,48,93,32,60,60,32,56,41,32,124,32,98,117,102,
                 91,49,93,59,10,32,32,114,101,116,117,114,110,32,114,101,97,
                 100,95,101,120,97,99,116,40,98,117,102,44,32,108,101,110,41,
                 59,10,125,10,10,119,114,105,116,101,95,99,109,100,40,98,121,
                 116,101,32,42,98,117,102,44,32,105,110,116,32,108,101,110,41,
                 10,123,10,32,32,98,121,116,101,32,108,105,59,10,10,32,32,108,
                 105,32,61,32,40,108,101,110,32,62,62,32,56,41,32,38,32,48,
                 120,102,102,59,10,32,32,119,114,105,116,101,95,101,120,97,99,
                 116,40,38,108,105,44,32,49,41,59,10,32,32,10,32,32,108,105,
                 32,61,32,108,101,110,32,38,32,48,120,102,102,59,10,32,32,119,
                 114,105,116,101,95,101,120,97,99,116,40,38,108,105,44,32,49,
                 41,59,10,10,32,32,114,101,116,117,114,110,32,119,114,105,116,
                 101,95,101,120,97,99,116,40,98,117,102,44,32,108,101,110,41,
                 59,10,125,10,10,114,101,97,100,95,101,120,97,99,116,40,98,
                 121,116,101,32,42,98,117,102,44,32,105,110,116,32,108,101,
                 110,41,10,123,10,32,32,105,110,116,32,105,44,32,103,111,116,
                 61,48,59,10,10,32,32,100,111,32,123,10,32,32,32,32,105,102,
                 32,40,40,105,32,61,32,114,101,97,100,40,48,44,32,98,117,102,
                 43,103,111,116,44,32,108,101,110,45,103,111,116,41,41,32,60,
                 61,32,48,41,10,32,32,32,32,32,32,114,101,116,117,114,110,40,
                 105,41,59,10,32,32,32,32,103,111,116,32,43,61,32,105,59,10,
                 32,32,125,32,119,104,105,108,101,32,40,103,111,116,60,108,
                 101,110,41,59,10,10,32,32,114,101,116,117,114,110,40,108,101,
                 110,41,59,10,125,10,10,119,114,105,116,101,95,101,120,97,99,
                 116,40,98,121,116,101,32,42,98,117,102,44,32,105,110,116,32,
                 108,101,110,41,10,123,10,32,32,105,110,116,32,105,44,32,119,
                 114,111,116,101,32,61,32,48,59,10,10,32,32,100,111,32,123,10,
                 32,32,32,32,105,102,32,40,40,105,32,61,32,119,114,105,116,
                 101,40,49,44,32,98,117,102,43,119,114,111,116,101,44,32,108,
                 101,110,45,119,114,111,116,101,41,41,32,60,61,32,48,41,10,32,
                 32,32,32,32,32,114,101,116,117,114,110,32,40,105,41,59,10,32,
                 32,32,32,119,114,111,116,101,32,43,61,32,105,59,10,32,32,125,
                 32,119,104,105,108,101,32,40,119,114,111,116,101,60,108,101,
                 110,41,59,10,10,32,32,114,101,116,117,114,110,32,40,108,101,
                 110,41,59,10,125,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fThe function"}],0,false},
               {text,[14,42,101,114,108,95,100,101,99,111,100,101,40,41,42]},
               {sep,[{text,[4,102,114,111,109]}],0,false},
               {text,"\r*erl_marshal*"},
               {sep,[{text,"\econverts the binary into an"}],0,false},
               {text,[7,42,69,84,69,82,77,42]},
               {sep,[{text,[7,115,116,114,117,99,116,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "[\nint main() {\n  ETERM *tuplep;\n\n  while (read_cmd(buf) > 0) {\n    tuplep = erl_decode(buf);"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[5,72,101,114,101,44]}],0,false},
               {text,"\b*tuplep*"},
               {sep,[{text,"\fpoints to an"}],0,false},
               {text,[7,42,69,84,69,82,77,42]},
               {sep,
                [{text,
                  "vstruct representing a tuple with two elements; the function name (atom) and the argument (integer). Using the function"}],
                0,false},
               {text,
                [15,42,101,114,108,95,101,108,101,109,101,110,116,40,41,42]},
               {sep,[{text,[4,102,114,111,109]}],0,false},
               {text,"\v*erl_eterm*"},
               {sep,
                [{text,
                  "S, these elements can be extracted, but they must also be declared as pointers to an"}],
                0,false},
               {text,[7,42,69,84,69,82,77,42]},
               {sep,[{text,[7,115,116,114,117,99,116,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "E\n    fnp = erl_element(1, tuplep);\n    argp = erl_element(2, tuplep);"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\nThe macros"}],0,false},
               {text,[14,42,69,82,76,95,65,84,79,77,95,80,84,82,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[15,42,69,82,76,95,73,78,84,95,86,65,76,85,69,42]},
               {sep,[{text,[4,102,114,111,109]}],0,false},
               {text,"\v*erl_eterm*"},
               {sep,
                [{text,
                  "Ócan be used to obtain the actual values of the atom and the integer. The atom value is represented as a string. By comparing this value with the strings \"foo\" and \"bar\", it can be decided which function to call:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Ã\n    if (strncmp(ERL_ATOM_PTR(fnp), \"foo\", 3) == 0) {\n      res = foo(ERL_INT_VALUE(argp));\n    } else if (strncmp(ERL_ATOM_PTR(fnp), \"bar\", 3) == 0) {\n      res = bar(ERL_INT_VALUE(argp));\n    }"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[6,78,111,119,32,97,110]}],0,false},
               {text,[7,42,69,84,69,82,77,42]},
               {sep,
                [{text,
                  "Ostruct that represents the integer result can be constructed using the function"}],
                0,false},
               {text,[14,42,101,114,108,95,109,107,95,105,110,116,40,41,42]},
               {sep,[{text,[4,102,114,111,109]}],0,false},
               {text,"\v*erl_eterm*"},
               {sep,
                [{text,
                  [14,46,32,84,104,101,32,102,117,110,99,116,105,111,110]}],
                0,false},
               {text,[14,42,101,114,108,95,102,111,114,109,97,116,40,41,42]},
               {sep,
                [{text,
                  [15,102,114,111,109,32,116,104,101,32,109,111,100,117,108,
                   101]}],
                0,false},
               {text,"\f*erl_format*"},
               {sep,
                [{text,
                  [17,99,97,110,32,97,108,115,111,32,98,101,32,117,115,101,
                   100,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [28,10,32,32,32,32,105,110,116,112,32,61,32,101,114,108,95,
                 109,107,95,105,110,116,40,114,101,115,41,59]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rThe resulting"}],0,false},
               {text,[7,42,69,84,69,82,77,42]},
               {sep,
                [{text,
                  "Kstruct is converted into the Erlang external term format using the function"}],
                0,false},
               {text,[14,42,101,114,108,95,101,110,99,111,100,101,40,41,42]},
               {sep,[{text,[4,102,114,111,109]}],0,false},
               {text,"\r*erl_marshal*"},
               {sep,
                [{text,
                  [24,97,110,100,32,115,101,110,116,32,116,111,32,69,114,108,
                   97,110,103,32,117,115,105,110,103]}],
                0,false},
               {text,"\r*write_cmd()*"},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "D\n    erl_encode(intp, buf);\n    write_cmd(buf, erl_eterm_len(intp));"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"$Finally, the memory allocated by the"}],0,false},
               {text,[7,42,69,84,69,82,77,42]},
               {sep,[{text,"!creating functions must be freed:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "i\n    erl_free_compound(tuplep);\n    erl_free_term(fnp);\n    erl_free_term(argp);\n    erl_free_term(intp);"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"&The resulting C program is as follows:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [765,10,10,47,42,32,101,105,46,99,32,42,47,10,10,35,105,110,
                 99,108,117,100,101,32,34,101,114,108,95,105,110,116,101,114,
                 102,97,99,101,46,104,34,10,35,105,110,99,108,117,100,101,32,
                 34,101,105,46,104,34,10,10,116,121,112,101,100,101,102,32,
                 117,110,115,105,103,110,101,100,32,99,104,97,114,32,98,121,
                 116,101,59,10,10,105,110,116,32,109,97,105,110,40,41,32,123,
                 10,32,32,69,84,69,82,77,32,42,116,117,112,108,101,112,44,32,
                 42,105,110,116,112,59,10,32,32,69,84,69,82,77,32,42,102,110,
                 112,44,32,42,97,114,103,112,59,10,32,32,105,110,116,32,114,
                 101,115,59,10,32,32,98,121,116,101,32,98,117,102,91,49,48,48,
                 93,59,10,32,32,108,111,110,103,32,97,108,108,111,99,97,116,
                 101,100,44,32,102,114,101,101,100,59,10,10,32,32,101,114,108,
                 95,105,110,105,116,40,78,85,76,76,44,32,48,41,59,10,10,32,32,
                 119,104,105,108,101,32,40,114,101,97,100,95,99,109,100,40,98,
                 117,102,41,32,62,32,48,41,32,123,10,32,32,32,32,116,117,112,
                 108,101,112,32,61,32,101,114,108,95,100,101,99,111,100,101,
                 40,98,117,102,41,59,10,32,32,32,32,102,110,112,32,61,32,101,
                 114,108,95,101,108,101,109,101,110,116,40,49,44,32,116,117,
                 112,108,101,112,41,59,10,32,32,32,32,97,114,103,112,32,61,32,
                 101,114,108,95,101,108,101,109,101,110,116,40,50,44,32,116,
                 117,112,108,101,112,41,59,10,32,32,32,32,10,32,32,32,32,105,
                 102,32,40,115,116,114,110,99,109,112,40,69,82,76,95,65,84,79,
                 77,95,80,84,82,40,102,110,112,41,44,32,34,102,111,111,34,44,
                 32,51,41,32,61,61,32,48,41,32,123,10,32,32,32,32,32,32,114,
                 101,115,32,61,32,102,111,111,40,69,82,76,95,73,78,84,95,86,
                 65,76,85,69,40,97,114,103,112,41,41,59,10,32,32,32,32,125,32,
                 101,108,115,101,32,105,102,32,40,115,116,114,110,99,109,112,
                 40,69,82,76,95,65,84,79,77,95,80,84,82,40,102,110,112,41,44,
                 32,34,98,97,114,34,44,32,51,41,32,61,61,32,48,41,32,123,10,
                 32,32,32,32,32,32,114,101,115,32,61,32,98,97,114,40,69,82,76,
                 95,73,78,84,95,86,65,76,85,69,40,97,114,103,112,41,41,59,10,
                 32,32,32,32,125,10,10,32,32,32,32,105,110,116,112,32,61,32,
                 101,114,108,95,109,107,95,105,110,116,40,114,101,115,41,59,
                 10,32,32,32,32,101,114,108,95,101,110,99,111,100,101,40,105,
                 110,116,112,44,32,98,117,102,41,59,10,32,32,32,32,119,114,
                 105,116,101,95,99,109,100,40,98,117,102,44,32,101,114,108,95,
                 116,101,114,109,95,108,101,110,40,105,110,116,112,41,41,59,
                 10,10,32,32,32,32,101,114,108,95,102,114,101,101,95,99,111,
                 109,112,111,117,110,100,40,116,117,112,108,101,112,41,59,10,
                 32,32,32,32,101,114,108,95,102,114,101,101,95,116,101,114,
                 109,40,102,110,112,41,59,10,32,32,32,32,101,114,108,95,102,
                 114,101,101,95,116,101,114,109,40,97,114,103,112,41,59,10,32,
                 32,32,32,101,114,108,95,102,114,101,101,95,116,101,114,109,
                 40,105,110,116,112,41,59,10,32,32,125,10,125,10,32,32,32,32,
                 32,32,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,82,117,110,110,105,110,103,32,116,104,101,32,
             69,120,97,109,112,108,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 1.**"},
               {sep,
                [{text,
                  "@Compile the C code. This provides the paths to the include files"}],
                0,false},
               {text,
                [17,42,101,114,108,95,105,110,116,101,114,102,97,99,101,46,
                 104,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[6,42,101,105,46,104,42]},
               {sep,[{text,"\e, and also to the libraries"}],0,false},
               {text,
                [15,42,101,114,108,95,105,110,116,101,114,102,97,99,101,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[4,42,101,105,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,117,110,105,120,62,32]},
               {text,
                "Bgcc -o extprg -I/usr/local/otp/lib/erl_interface-3.9.2/include \\\\ "},
               {text,[1,10]},
               {text,
                "6      -L/usr/local/otp/lib/erl_interface-3.9.2/lib \\\\ "},
               {text,[1,10]},
               {text,
                ">      complex.c erl_comm.c ei.c -lerl_interface -lei -lpthread"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"0In Erlang/OTP R5B and later versions of OTP, the"}],
                0,false},
               {text,"\t*include*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[5,42,108,105,98,42]},
               {sep,
                [{text,
                  [30,100,105,114,101,99,116,111,114,105,101,115,32,97,114,
                   101,32,115,105,116,117,97,116,101,100,32,117,110,100,101,
                   114]}],
                0,false},
               {text,
                [31,42,79,84,80,82,79,79,84,47,108,105,98,47,101,114,108,95,
                 105,110,116,101,114,102,97,99,101,45,86,83,78,42]},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,"\t*OTPROOT*"},
               {sep,
                [{text,"/is the root directory of the OTP installation ("}],
                0,false},
               {text,
                [16,42,47,117,115,114,47,108,111,99,97,108,47,111,116,112,42]},
               {sep,
                [{text,
                  [26,105,110,32,116,104,101,32,114,101,99,101,110,116,32,101,
                   120,97,109,112,108,101,41,32,97,110,100]}],
                0,false},
               {text,[5,42,86,83,78,42]},
               {sep,
                [{text,
                  "Nis the version of the Erl_interface application (3.2.1 in the recent example)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#In R4B and earlier versions of OTP,"}],0,false},
               {text,"\t*include*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[5,42,108,105,98,42]},
               {sep,
                [{text,
                  [18,97,114,101,32,115,105,116,117,97,116,101,100,32,117,110,
                   100,101,114]}],
                0,false},
               {text,"\r*OTPROOT/usr*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 2.**"},
               {sep,
                [{text,")Start Erlang and compile the Erlang code:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,117,110,105,120,62,32]},
               {text,[3,101,114,108]},
               {text,
                "L\nErlang (BEAM) emulator version 4.9.1.2\n\nEshell V4.9.1.2 (abort with ^G)\n1> "},
               {text,"\fc(complex2)."},
               {text,
                [14,10,123,111,107,44,99,111,109,112,108,101,120,50,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 3.**"},
               {sep,
                [{text,
                  [16,82,117,110,32,116,104,101,32,101,120,97,109,112,108,101,
                   58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,50,62,32]},
               {text,"\ecomplex2:start(\"./extprg\")."},
               {text,[1,10]},
               {text,"\f<0.34.0>\n3> "},
               {text,
                [16,99,111,109,112,108,101,120,50,58,102,111,111,40,51,41,46]},
               {text,[6,10,52,10,52,62,32]},
               {text,
                [16,99,111,109,112,108,101,120,50,58,98,97,114,40,53,41,46]},
               {text,[7,10,49,48,10,53,62,32]},
               {text,
                [18,99,111,109,112,108,101,120,50,58,98,97,114,40,51,53,50,41,
                 46]},
               {text,"\b\n704\n6> "},
               {text,
                [16,99,111,109,112,108,101,120,50,58,115,116,111,112,40,41,
                 46]},
               {text,[5,10,115,116,111,112]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GThis section outlines an example of how to solve the example problem in"}],
              0,false},
             {text,
              [26,91,80,114,111,98,108,101,109,32,69,120,97,109,112,108,101,
               93,40,101,120,97,109,112,108,101,41]},
             {sep,[{text,"!by using a linked-in port driver."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [327,65,32,112,111,114,116,32,100,114,105,118,101,114,32,105,
               115,32,97,32,108,105,110,107,101,100,45,105,110,32,100,114,105,
               118,101,114,32,116,104,97,116,32,105,115,32,97,99,99,101,115,
               115,105,98,108,101,32,97,115,32,97,32,112,111,114,116,32,102,
               114,111,109,32,97,110,32,69,114,108,97,110,103,32,112,114,111,
               103,114,97,109,46,32,73,116,32,105,115,32,97,32,115,104,97,114,
               101,100,32,108,105,98,114,97,114,121,32,40,83,79,32,105,110,32,
               85,78,73,88,44,32,68,76,76,32,105,110,32,87,105,110,100,111,
               119,115,41,44,32,119,105,116,104,32,115,112,101,99,105,97,108,
               32,101,110,116,114,121,32,112,111,105,110,116,115,46,32,84,104,
               101,32,69,114,108,97,110,103,32,114,117,110,116,105,109,101,32,
               115,121,115,116,101,109,32,99,97,108,108,115,32,116,104,101,
               115,101,32,101,110,116,114,121,32,112,111,105,110,116,115,32,
               119,104,101,110,32,116,104,101,32,100,114,105,118,101,114,32,
               105,115,32,115,116,97,114,116,101,100,32,97,110,100,32,119,104,
               101,110,32,100,97,116,97,32,105,115,32,115,101,110,116,32,116,
               111,32,116,104,101,32,112,111,114,116,46,32,84,104,101,32,112,
               111,114,116,32,100,114,105,118,101,114,32,99,97,110,32,97,108,
               115,111,32,115,101,110,100,32,100,97,116,97,32,116,111,32,69,
               114,108,97,110,103,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [287,65,115,32,97,32,112,111,114,116,32,100,114,105,118,101,114,
               32,105,115,32,100,121,110,97,109,105,99,97,108,108,121,32,108,
               105,110,107,101,100,32,105,110,116,111,32,116,104,101,32,101,
               109,117,108,97,116,111,114,32,112,114,111,99,101,115,115,44,32,
               116,104,105,115,32,105,115,32,116,104,101,32,102,97,115,116,
               101,115,116,32,119,97,121,32,111,102,32,99,97,108,108,105,110,
               103,32,67,45,99,111,100,101,32,102,114,111,109,32,69,114,108,
               97,110,103,46,32,67,97,108,108,105,110,103,32,102,117,110,99,
               116,105,111,110,115,32,105,110,32,116,104,101,32,112,111,114,
               116,32,100,114,105,118,101,114,32,114,101,113,117,105,114,101,
               115,32,110,111,32,99,111,110,116,101,120,116,32,115,119,105,
               116,99,104,101,115,46,32,66,117,116,32,105,116,32,105,115,32,
               97,108,115,111,32,116,104,101,32,108,101,97,115,116,32,115,97,
               102,101,32,119,97,121,44,32,98,101,99,97,117,115,101,32,97,32,
               99,114,97,115,104,32,105,110,32,116,104,101,32,112,111,114,116,
               32,100,114,105,118,101,114,32,98,114,105,110,103,115,32,116,
               104,101,32,101,109,117,108,97,116,111,114,32,100,111,119,110,
               32,116,111,111,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"4The scenario is illustrated in the following figure:"}],
            0,false}],
          0,true},
         null},
        null}},
      {text,"9![Port Driver Communication](../tutorial/port_driver.gif)"},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,69,114,108,97,110,103,32,80,114,111,103,114,97,
             109]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [128,76,105,107,101,32,97,32,112,111,114,116,32,112,114,111,
                   103,114,97,109,44,32,116,104,101,32,112,111,114,116,32,99,
                   111,109,109,117,110,105,99,97,116,101,115,32,119,105,116,
                   104,32,97,110,32,69,114,108,97,110,103,32,112,114,111,99,
                   101,115,115,46,32,65,108,108,32,99,111,109,109,117,110,105,
                   99,97,116,105,111,110,32,103,111,101,115,32,116,104,114,
                   111,117,103,104,32,111,110,101,32,69,114,108,97,110,103,32,
                   112,114,111,99,101,115,115,32,116,104,97,116,32,105,115,32,
                   116,104,101]}],
                0,false},
               {text,
                [21,42,42,99,111,110,110,101,99,116,101,100,32,112,114,111,99,
                 101,115,115,42,42]},
               {sep,
                [{text,
                  "Dof the port driver. Terminating this process closes the port driver."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "UBefore the port is created, the driver must be loaded. This is done with the function"}],
                0,false},
               {text,
                [23,42,101,114,108,95,100,108,108,58,108,111,97,100,95,100,
                 114,105,118,101,114,47,49,42]},
               {sep,
                [{text,"2, with the name of the shared library as argument."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"&The port is then created using the BIF"}],
                0,false},
               {text,"\r*open_port/2*"},
               {sep,
                [{text,
                  [16,44,32,119,105,116,104,32,116,104,101,32,116,117,112,108,
                   101]}],
                0,false},
               {text,
                [21,42,123,115,112,97,119,110,44,32,68,114,105,118,101,114,78,
                 97,109,101,125,42]},
               {sep,[{text,"!as the first argument. The string"}],0,false},
               {text,"\v*SharedLib*"},
               {sep,
                [{text,
                  "\\is the name of the port driver. The second argument is a list of options, none in this case:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [379,10,45,109,111,100,117,108,101,40,99,111,109,112,108,101,
                 120,53,41,46,10,45,101,120,112,111,114,116,40,91,115,116,97,
                 114,116,47,49,44,32,105,110,105,116,47,49,93,41,46,10,10,115,
                 116,97,114,116,40,83,104,97,114,101,100,76,105,98,41,32,45,
                 62,10,32,32,32,32,99,97,115,101,32,101,114,108,95,100,100,
                 108,108,58,108,111,97,100,95,100,114,105,118,101,114,40,34,
                 46,34,44,32,83,104,97,114,101,100,76,105,98,41,32,111,102,10,
                 32,32,32,32,32,32,32,32,111,107,32,45,62,32,111,107,59,10,32,
                 32,32,32,32,32,32,32,123,101,114,114,111,114,44,32,97,108,
                 114,101,97,100,121,95,108,111,97,100,101,100,125,32,45,62,32,
                 111,107,59,10,32,32,32,32,32,32,32,32,95,32,45,62,32,101,120,
                 105,116,40,123,101,114,114,111,114,44,32,99,111,117,108,100,
                 95,110,111,116,95,108,111,97,100,95,100,114,105,118,101,114,
                 125,41,10,32,32,32,32,101,110,100,44,10,32,32,32,32,115,112,
                 97,119,110,40,63,77,79,68,85,76,69,44,32,105,110,105,116,44,
                 32,91,83,104,97,114,101,100,76,105,98,93,41,46,10,10,105,110,
                 105,116,40,83,104,97,114,101,100,76,105,98,41,32,45,62,10,32,
                 32,114,101,103,105,115,116,101,114,40,99,111,109,112,108,101,
                 120,44,32,115,101,108,102,40,41,41,44,10,32,32,80,111,114,
                 116,32,61,32,111,112,101,110,95,112,111,114,116,40,123,115,
                 112,97,119,110,44,32,83,104,97,114,101,100,76,105,98,125,44,
                 32,91,93,41,44,10,32,32,108,111,111,112,40,80,111,114,116,41,
                 46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,78,111,119]}],0,false},
               {text,
                [16,42,99,111,109,112,108,101,120,53,58,102,111,111,47,49,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,
                [16,42,99,111,109,112,108,101,120,53,58,98,97,114,47,49,42]},
               {sep,
                [{text,".can be implemented. Both send a message to the"}],
                0,false},
               {text,"\t*complex*"},
               {sep,
                [{text,"(process and receive the following reply:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Á\nfoo(X) ->\n    call_port({foo, X}).\nbar(Y) ->\n    call_port({bar, Y}).\n\ncall_port(Msg) ->\n    complex ! {call, self(), Msg},\n    receive\n        {complex, Result} ->\n            Result\n    end."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,"\t*complex*"},
               {sep,
                [{text,
                  [31,112,114,111,99,101,115,115,32,112,101,114,102,111,114,
                   109,115,32,116,104,101,32,102,111,108,108,111,119,105,110,
                   103,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {above,
            {sep,
             [{text,[1,42]},
              {text,"-Encodes the message into a sequence of bytes."}],
             0,false},
            {sep,
             [{text,[1,42]},
              {text,
               [21,83,101,110,100,115,32,105,116,32,116,111,32,116,104,101,32,
                112,111,114,116,46]}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {text,
              [18,87,97,105,116,115,32,102,111,114,32,97,32,114,101,112,108,
               121,46]}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {text,
             [18,68,101,99,111,100,101,115,32,116,104,101,32,114,101,112,108,
              121,46]}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {text,
            [28,83,101,110,100,115,32,105,116,32,98,97,99,107,32,116,111,32,
             116,104,101,32,99,97,108,108,101,114,58]}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [272,10,108,111,111,112,40,80,111,114,116,41,32,45,62,10,32,
                 32,32,32,114,101,99,101,105,118,101,10,32,32,32,32,32,32,32,
                 32,123,99,97,108,108,44,32,67,97,108,108,101,114,44,32,77,
                 115,103,125,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 80,111,114,116,32,33,32,123,115,101,108,102,40,41,44,32,123,
                 99,111,109,109,97,110,100,44,32,101,110,99,111,100,101,40,77,
                 115,103,41,125,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 114,101,99,101,105,118,101,10,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,123,80,111,114,116,44,32,123,100,97,116,97,
                 44,32,68,97,116,97,125,125,32,45,62,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,67,97,108,108,101,114,
                 32,33,32,123,99,111,109,112,108,101,120,44,32,100,101,99,111,
                 100,101,40,68,97,116,97,41,125,10,32,32,32,32,32,32,32,32,32,
                 32,32,32,101,110,100,44,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,108,111,111,112,40,80,111,114,116,41,10,32,32,32,32,101,
                 110,100,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [151,65,115,115,117,109,105,110,103,32,116,104,97,116,32,98,
                   111,116,104,32,116,104,101,32,97,114,103,117,109,101,110,
                   116,115,32,97,110,100,32,116,104,101,32,114,101,115,117,
                   108,116,115,32,102,114,111,109,32,116,104,101,32,67,32,102,
                   117,110,99,116,105,111,110,115,32,97,114,101,32,108,101,
                   115,115,32,116,104,97,110,32,50,53,54,44,32,97,32,115,105,
                   109,112,108,101,32,101,110,99,111,100,105,110,103,47,100,
                   101,99,111,100,105,110,103,32,115,99,104,101,109,101,32,
                   105,115,32,101,109,112,108,111,121,101,100,46,32,73,110,32,
                   116,104,105,115,32,115,99,104,101,109,101,44]}],
                0,false},
               {text,[5,42,102,111,111,42]},
               {sep,
                [{text,
                  [25,105,115,32,114,101,112,114,101,115,101,110,116,101,100,
                   32,98,121,32,98,121,116,101,32,49,44]}],
                0,false},
               {text,[5,42,98,97,114,42]},
               {sep,
                [{text,
                  "Uis represented by 2, and the argument/result is represented by a single byte as well:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "O\nencode({foo, X}) -> [1, X];\nencode({bar, Y}) -> [2, Y].\n\ndecode([Int]) -> Int."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "sThe resulting Erlang program, including functions for stopping the port and detecting port failures, is as follows:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [1203,10,10,45,109,111,100,117,108,101,40,99,111,109,112,108,
                 101,120,53,41,46,10,45,101,120,112,111,114,116,40,91,115,116,
                 97,114,116,47,49,44,32,115,116,111,112,47,48,44,32,105,110,
                 105,116,47,49,93,41,46,10,45,101,120,112,111,114,116,40,91,
                 102,111,111,47,49,44,32,98,97,114,47,49,93,41,46,10,10,115,
                 116,97,114,116,40,83,104,97,114,101,100,76,105,98,41,32,45,
                 62,10,32,32,32,32,99,97,115,101,32,101,114,108,95,100,100,
                 108,108,58,108,111,97,100,95,100,114,105,118,101,114,40,34,
                 46,34,44,32,83,104,97,114,101,100,76,105,98,41,32,111,102,10,
                 9,111,107,32,45,62,32,111,107,59,10,9,123,101,114,114,111,
                 114,44,32,97,108,114,101,97,100,121,95,108,111,97,100,101,
                 100,125,32,45,62,32,111,107,59,10,9,95,32,45,62,32,101,120,
                 105,116,40,123,101,114,114,111,114,44,32,99,111,117,108,100,
                 95,110,111,116,95,108,111,97,100,95,100,114,105,118,101,114,
                 125,41,10,32,32,32,32,101,110,100,44,10,32,32,32,32,115,112,
                 97,119,110,40,63,77,79,68,85,76,69,44,32,105,110,105,116,44,
                 32,91,83,104,97,114,101,100,76,105,98,93,41,46,10,10,105,110,
                 105,116,40,83,104,97,114,101,100,76,105,98,41,32,45,62,10,32,
                 32,32,32,114,101,103,105,115,116,101,114,40,99,111,109,112,
                 108,101,120,44,32,115,101,108,102,40,41,41,44,10,32,32,32,32,
                 80,111,114,116,32,61,32,111,112,101,110,95,112,111,114,116,
                 40,123,115,112,97,119,110,44,32,83,104,97,114,101,100,76,105,
                 98,125,44,32,91,93,41,44,10,32,32,32,32,108,111,111,112,40,
                 80,111,114,116,41,46,10,10,115,116,111,112,40,41,32,45,62,10,
                 32,32,32,32,99,111,109,112,108,101,120,32,33,32,115,116,111,
                 112,46,10,10,102,111,111,40,88,41,32,45,62,10,32,32,32,32,99,
                 97,108,108,95,112,111,114,116,40,123,102,111,111,44,32,88,
                 125,41,46,10,98,97,114,40,89,41,32,45,62,10,32,32,32,32,99,
                 97,108,108,95,112,111,114,116,40,123,98,97,114,44,32,89,125,
                 41,46,10,10,99,97,108,108,95,112,111,114,116,40,77,115,103,
                 41,32,45,62,10,32,32,32,32,99,111,109,112,108,101,120,32,33,
                 32,123,99,97,108,108,44,32,115,101,108,102,40,41,44,32,77,
                 115,103,125,44,10,32,32,32,32,114,101,99,101,105,118,101,10,
                 9,123,99,111,109,112,108,101,120,44,32,82,101,115,117,108,
                 116,125,32,45,62,10,9,32,32,32,32,82,101,115,117,108,116,10,
                 32,32,32,32,101,110,100,46,10,10,108,111,111,112,40,80,111,
                 114,116,41,32,45,62,10,32,32,32,32,114,101,99,101,105,118,
                 101,10,9,123,99,97,108,108,44,32,67,97,108,108,101,114,44,32,
                 77,115,103,125,32,45,62,10,9,32,32,32,32,80,111,114,116,32,
                 33,32,123,115,101,108,102,40,41,44,32,123,99,111,109,109,97,
                 110,100,44,32,101,110,99,111,100,101,40,77,115,103,41,125,
                 125,44,10,9,32,32,32,32,114,101,99,101,105,118,101,10,9,9,
                 123,80,111,114,116,44,32,123,100,97,116,97,44,32,68,97,116,
                 97,125,125,32,45,62,10,9,9,32,32,32,32,67,97,108,108,101,114,
                 32,33,32,123,99,111,109,112,108,101,120,44,32,100,101,99,111,
                 100,101,40,68,97,116,97,41,125,10,9,32,32,32,32,101,110,100,
                 44,10,9,32,32,32,32,108,111,111,112,40,80,111,114,116,41,59,
                 10,9,115,116,111,112,32,45,62,10,9,32,32,32,32,80,111,114,
                 116,32,33,32,123,115,101,108,102,40,41,44,32,99,108,111,115,
                 101,125,44,10,9,32,32,32,32,114,101,99,101,105,118,101,10,9,
                 9,123,80,111,114,116,44,32,99,108,111,115,101,100,125,32,45,
                 62,10,9,9,32,32,32,32,101,120,105,116,40,110,111,114,109,97,
                 108,41,10,9,32,32,32,32,101,110,100,59,10,9,123,39,69,88,73,
                 84,39,44,32,80,111,114,116,44,32,82,101,97,115,111,110,125,
                 32,45,62,10,9,32,32,32,32,105,111,58,102,111,114,109,97,116,
                 40,34,126,112,32,126,110,34,44,32,91,82,101,97,115,111,110,
                 93,41,44,10,9,32,32,32,32,101,120,105,116,40,112,111,114,116,
                 95,116,101,114,109,105,110,97,116,101,100,41,10,32,32,32,32,
                 101,110,100,46,10,10,101,110,99,111,100,101,40,123,102,111,
                 111,44,32,88,125,41,32,45,62,32,91,49,44,32,88,93,59,10,101,
                 110,99,111,100,101,40,123,98,97,114,44,32,89,125,41,32,45,62,
                 32,91,50,44,32,89,93,46,10,10,100,101,99,111,100,101,40,91,
                 73,110,116,93,41,32,45,62,32,73,110,116,46,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\r#### C Driver"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [131,84,104,101,32,67,32,100,114,105,118,101,114,32,105,115,
                   32,97,32,109,111,100,117,108,101,32,116,104,97,116,32,105,
                   115,32,99,111,109,112,105,108,101,100,32,97,110,100,32,108,
                   105,110,107,101,100,32,105,110,116,111,32,97,32,115,104,97,
                   114,101,100,32,108,105,98,114,97,114,121,46,32,73,116,32,
                   117,115,101,115,32,97,32,100,114,105,118,101,114,32,115,
                   116,114,117,99,116,117,114,101,32,97,110,100,32,105,110,99,
                   108,117,100,101,115,32,116,104,101,32,104,101,97,100,101,
                   114,32,102,105,108,101]}],
                0,false},
               {text,[14,42,101,114,108,95,100,114,105,118,101,114,46,104,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [143,84,104,101,32,100,114,105,118,101,114,32,115,116,114,
                   117,99,116,117,114,101,32,105,115,32,102,105,108,108,101,
                   100,32,119,105,116,104,32,116,104,101,32,100,114,105,118,
                   101,114,32,110,97,109,101,32,97,110,100,32,102,117,110,99,
                   116,105,111,110,32,112,111,105,110,116,101,114,115,46,32,
                   73,116,32,105,115,32,114,101,116,117,114,110,101,100,32,
                   102,114,111,109,32,116,104,101,32,115,112,101,99,105,97,
                   108,32,101,110,116,114,121,32,112,111,105,110,116,44,32,
                   100,101,99,108,97,114,101,100,32,119,105,116,104,32,116,
                   104,101,32,109,97,99,114,111]}],
                0,false},
               {text,
                [28,42,68,82,73,86,69,82,95,73,78,73,84,40,60,100,114,105,118,
                 101,114,95,110,97,109,101,62,41,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÓThe functions for receiving and sending data are combined into a function, pointed out by the driver structure. The data sent into the port is given as arguments, and the replied data is sent with the C-function"}],
                0,false},
               {text,
                [15,42,100,114,105,118,101,114,95,111,117,116,112,117,116,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "¥As the driver is a shared module, not a program, no main function is present. All function pointers are not used in this example, and the corresponding fields in the"}],
                0,false},
               {text,
                [14,42,100,114,105,118,101,114,95,101,110,116,114,121,42]},
               {sep,
                [{text,
                  [26,115,116,114,117,99,116,117,114,101,32,97,114,101,32,115,
                   101,116,32,116,111,32,78,85,76,76,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "9All functions in the driver takes a handle (returned from"}],
                0,false},
               {text,[7,42,115,116,97,114,116,42]},
               {sep,
                [{text,
                  "k) that is just passed along by the Erlang process. This must in some way refer to the port driver instance."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,
                [19,42,101,120,97,109,112,108,101,95,100,114,118,95,115,116,
                 97,114,116,42]},
               {sep,
                [{text,
                  "Ö, is the only function that is called with a handle to the port instance, so this must be saved. It is customary to use an allocated driver-defined structure for this one, and to pass a pointer back as a reference."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ªIt is not a good idea to use a global variable as the port driver can be spawned by multiple Erlang processes. This driver-structure is to be instantiated multiple times:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [3021,10,10,47,42,32,112,111,114,116,95,100,114,105,118,101,
                 114,46,99,32,42,47,10,10,35,105,110,99,108,117,100,101,32,60,
                 115,116,100,105,111,46,104,62,10,35,105,110,99,108,117,100,
                 101,32,34,101,114,108,95,100,114,105,118,101,114,46,104,34,
                 10,10,116,121,112,101,100,101,102,32,115,116,114,117,99,116,
                 32,123,10,32,32,32,32,69,114,108,68,114,118,80,111,114,116,
                 32,112,111,114,116,59,10,125,32,101,120,97,109,112,108,101,
                 95,100,97,116,97,59,10,10,115,116,97,116,105,99,32,69,114,
                 108,68,114,118,68,97,116,97,32,101,120,97,109,112,108,101,95,
                 100,114,118,95,115,116,97,114,116,40,69,114,108,68,114,118,
                 80,111,114,116,32,112,111,114,116,44,32,99,104,97,114,32,42,
                 98,117,102,102,41,10,123,10,32,32,32,32,101,120,97,109,112,
                 108,101,95,100,97,116,97,42,32,100,32,61,32,40,101,120,97,
                 109,112,108,101,95,100,97,116,97,42,41,100,114,105,118,101,
                 114,95,97,108,108,111,99,40,115,105,122,101,111,102,40,101,
                 120,97,109,112,108,101,95,100,97,116,97,41,41,59,10,32,32,32,
                 32,100,45,62,112,111,114,116,32,61,32,112,111,114,116,59,10,
                 32,32,32,32,114,101,116,117,114,110,32,40,69,114,108,68,114,
                 118,68,97,116,97,41,100,59,10,125,10,10,115,116,97,116,105,
                 99,32,118,111,105,100,32,101,120,97,109,112,108,101,95,100,
                 114,118,95,115,116,111,112,40,69,114,108,68,114,118,68,97,
                 116,97,32,104,97,110,100,108,101,41,10,123,10,32,32,32,32,
                 100,114,105,118,101,114,95,102,114,101,101,40,40,99,104,97,
                 114,42,41,104,97,110,100,108,101,41,59,10,125,10,10,115,116,
                 97,116,105,99,32,118,111,105,100,32,101,120,97,109,112,108,
                 101,95,100,114,118,95,111,117,116,112,117,116,40,69,114,108,
                 68,114,118,68,97,116,97,32,104,97,110,100,108,101,44,32,99,
                 104,97,114,32,42,98,117,102,102,44,32,10,9,9,9,32,32,32,32,
                 32,32,32,69,114,108,68,114,118,83,105,122,101,84,32,98,117,
                 102,102,108,101,110,41,10,123,10,32,32,32,32,101,120,97,109,
                 112,108,101,95,100,97,116,97,42,32,100,32,61,32,40,101,120,
                 97,109,112,108,101,95,100,97,116,97,42,41,104,97,110,100,108,
                 101,59,10,32,32,32,32,99,104,97,114,32,102,110,32,61,32,98,
                 117,102,102,91,48,93,44,32,97,114,103,32,61,32,98,117,102,
                 102,91,49,93,44,32,114,101,115,59,10,32,32,32,32,105,102,32,
                 40,102,110,32,61,61,32,49,41,32,123,10,32,32,32,32,32,32,114,
                 101,115,32,61,32,102,111,111,40,97,114,103,41,59,10,32,32,32,
                 32,125,32,101,108,115,101,32,105,102,32,40,102,110,32,61,61,
                 32,50,41,32,123,10,32,32,32,32,32,32,114,101,115,32,61,32,98,
                 97,114,40,97,114,103,41,59,10,32,32,32,32,125,10,32,32,32,32,
                 100,114,105,118,101,114,95,111,117,116,112,117,116,40,100,45,
                 62,112,111,114,116,44,32,38,114,101,115,44,32,49,41,59,10,
                 125,10,10,69,114,108,68,114,118,69,110,116,114,121,32,101,
                 120,97,109,112,108,101,95,100,114,105,118,101,114,95,101,110,
                 116,114,121,32,61,32,123,10,32,32,32,32,78,85,76,76,44,9,9,9,
                 47,42,32,70,95,80,84,82,32,105,110,105,116,44,32,99,97,108,
                 108,101,100,32,119,104,101,110,32,100,114,105,118,101,114,32,
                 105,115,32,108,111,97,100,101,100,32,42,47,10,32,32,32,32,
                 101,120,97,109,112,108,101,95,100,114,118,95,115,116,97,114,
                 116,44,9,9,47,42,32,76,95,80,84,82,32,115,116,97,114,116,44,
                 32,99,97,108,108,101,100,32,119,104,101,110,32,112,111,114,
                 116,32,105,115,32,111,112,101,110,101,100,32,42,47,10,32,32,
                 32,32,101,120,97,109,112,108,101,95,100,114,118,95,115,116,
                 111,112,44,9,9,47,42,32,70,95,80,84,82,32,115,116,111,112,44,
                 32,99,97,108,108,101,100,32,119,104,101,110,32,112,111,114,
                 116,32,105,115,32,99,108,111,115,101,100,32,42,47,10,32,32,
                 32,32,101,120,97,109,112,108,101,95,100,114,118,95,111,117,
                 116,112,117,116,44,9,9,47,42,32,70,95,80,84,82,32,111,117,
                 116,112,117,116,44,32,99,97,108,108,101,100,32,119,104,101,
                 110,32,101,114,108,97,110,103,32,104,97,115,32,115,101,110,
                 116,32,42,47,10,32,32,32,32,78,85,76,76,44,9,9,9,47,42,32,70,
                 95,80,84,82,32,114,101,97,100,121,95,105,110,112,117,116,44,
                 32,99,97,108,108,101,100,32,119,104,101,110,32,105,110,112,
                 117,116,32,100,101,115,99,114,105,112,116,111,114,32,114,101,
                 97,100,121,32,42,47,10,32,32,32,32,78,85,76,76,44,9,9,9,47,
                 42,32,70,95,80,84,82,32,114,101,97,100,121,95,111,117,116,
                 112,117,116,44,32,99,97,108,108,101,100,32,119,104,101,110,
                 32,111,117,116,112,117,116,32,100,101,115,99,114,105,112,116,
                 111,114,32,114,101,97,100,121,32,42,47,10,32,32,32,32,34,101,
                 120,97,109,112,108,101,95,100,114,118,34,44,9,9,47,42,32,99,
                 104,97,114,32,42,100,114,105,118,101,114,95,110,97,109,101,
                 44,32,116,104,101,32,97,114,103,117,109,101,110,116,32,116,
                 111,32,111,112,101,110,95,112,111,114,116,32,42,47,10,32,32,
                 32,32,78,85,76,76,44,9,9,9,47,42,32,70,95,80,84,82,32,102,
                 105,110,105,115,104,44,32,99,97,108,108,101,100,32,119,104,
                 101,110,32,117,110,108,111,97,100,101,100,32,42,47,10,32,32,
                 32,32,78,85,76,76,44,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,47,42,32,118,111,105,100,32,42,
                 104,97,110,100,108,101,44,32,82,101,115,101,114,118,101,100,
                 32,98,121,32,86,77,32,42,47,10,32,32,32,32,78,85,76,76,44,9,
                 9,9,47,42,32,70,95,80,84,82,32,99,111,110,116,114,111,108,44,
                 32,112,111,114,116,95,99,111,109,109,97,110,100,32,99,97,108,
                 108,98,97,99,107,32,42,47,10,32,32,32,32,78,85,76,76,44,9,9,
                 9,47,42,32,70,95,80,84,82,32,116,105,109,101,111,117,116,44,
                 32,114,101,115,101,114,118,101,100,32,42,47,10,32,32,32,32,
                 78,85,76,76,44,9,9,9,47,42,32,70,95,80,84,82,32,111,117,116,
                 112,117,116,118,44,32,114,101,115,101,114,118,101,100,32,42,
                 47,10,32,32,32,32,78,85,76,76,44,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,70,95,80,
                 84,82,32,114,101,97,100,121,95,97,115,121,110,99,44,32,111,
                 110,108,121,32,102,111,114,32,97,115,121,110,99,32,100,114,
                 105,118,101,114,115,32,42,47,10,32,32,32,32,78,85,76,76,44,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,47,42,32,70,95,80,84,82,32,102,108,117,115,104,44,
                 32,99,97,108,108,101,100,32,119,104,101,110,32,112,111,114,
                 116,32,105,115,32,97,98,111,117,116,32,10,9,9,9,9,32,32,32,
                 116,111,32,98,101,32,99,108,111,115,101,100,44,32,98,117,116,
                 32,116,104,101,114,101,32,105,115,32,100,97,116,97,32,105,
                 110,32,100,114,105,118,101,114,32,10,9,9,9,9,32,32,32,113,
                 117,101,117,101,32,42,47,10,32,32,32,32,78,85,76,76,44,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,47,42,32,70,95,80,84,82,32,99,97,108,108,44,32,109,117,99,
                 104,32,108,105,107,101,32,99,111,110,116,114,111,108,44,32,
                 115,121,110,99,32,99,97,108,108,10,9,9,9,9,32,32,32,116,111,
                 32,100,114,105,118,101,114,32,42,47,10,32,32,32,32,78,85,76,
                 76,44,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,47,42,32,117,110,117,115,101,100,32,42,47,10,
                 32,32,32,32,69,82,76,95,68,82,86,95,69,88,84,69,78,68,69,68,
                 95,77,65,82,75,69,82,44,32,32,32,32,47,42,32,105,110,116,32,
                 101,120,116,101,110,100,101,100,32,109,97,114,107,101,114,44,
                 32,83,104,111,117,108,100,32,97,108,119,97,121,115,32,98,101,
                 32,10,9,9,9,9,32,32,32,115,101,116,32,116,111,32,105,110,100,
                 105,99,97,116,101,32,100,114,105,118,101,114,32,118,101,114,
                 115,105,111,110,105,110,103,32,42,47,10,32,32,32,32,69,82,76,
                 95,68,82,86,95,69,88,84,69,78,68,69,68,95,77,65,74,79,82,95,
                 86,69,82,83,73,79,78,44,32,47,42,32,105,110,116,32,109,97,
                 106,111,114,95,118,101,114,115,105,111,110,44,32,115,104,111,
                 117,108,100,32,97,108,119,97,121,115,32,98,101,32,10,9,9,9,9,
                 32,32,32,32,32,32,32,115,101,116,32,116,111,32,116,104,105,
                 115,32,118,97,108,117,101,32,42,47,10,32,32,32,32,69,82,76,
                 95,68,82,86,95,69,88,84,69,78,68,69,68,95,77,73,78,79,82,95,
                 86,69,82,83,73,79,78,44,32,47,42,32,105,110,116,32,109,105,
                 110,111,114,95,118,101,114,115,105,111,110,44,32,115,104,111,
                 117,108,100,32,97,108,119,97,121,115,32,98,101,32,10,9,9,9,9,
                 32,32,32,32,32,32,32,115,101,116,32,116,111,32,116,104,105,
                 115,32,118,97,108,117,101,32,42,47,10,32,32,32,32,48,44,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,47,42,32,105,110,116,32,100,114,105,118,101,
                 114,95,102,108,97,103,115,44,32,115,101,101,32,100,111,99,
                 117,109,101,110,116,97,116,105,111,110,32,42,47,10,32,32,32,
                 32,78,85,76,76,44,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,47,42,32,118,111,105,100,32,42,
                 104,97,110,100,108,101,50,44,32,114,101,115,101,114,118,101,
                 100,32,102,111,114,32,86,77,32,117,115,101,32,42,47,10,32,32,
                 32,32,78,85,76,76,44,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,47,42,32,70,95,80,84,82,32,112,
                 114,111,99,101,115,115,95,101,120,105,116,44,32,99,97,108,
                 108,101,100,32,119,104,101,110,32,97,32,10,9,9,9,9,32,32,32,
                 109,111,110,105,116,111,114,101,100,32,112,114,111,99,101,
                 115,115,32,100,105,101,115,32,42,47,10,32,32,32,32,78,85,76,
                 76,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,47,42,32,70,95,80,84,82,32,115,116,111,112,95,
                 115,101,108,101,99,116,44,32,99,97,108,108,101,100,32,116,
                 111,32,99,108,111,115,101,32,97,110,32,10,9,9,9,9,32,32,32,
                 101,118,101,110,116,32,111,98,106,101,99,116,32,42,47,10,125,
                 59,10,10,68,82,73,86,69,82,95,73,78,73,84,40,101,120,97,109,
                 112,108,101,95,100,114,118,41,32,47,42,32,109,117,115,116,32,
                 109,97,116,99,104,32,110,97,109,101,32,105,110,32,100,114,
                 105,118,101,114,95,101,110,116,114,121,32,42,47,10,123,10,32,
                 32,32,32,114,101,116,117,114,110,32,38,101,120,97,109,112,
                 108,101,95,100,114,105,118,101,114,95,101,110,116,114,121,59,
                 10,125,10,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,82,117,110,110,105,110,103,32,116,104,101,32,
             69,120,97,109,112,108,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 1.**"},
               {sep,
                [{text,
                  [19,67,111,109,112,105,108,101,32,116,104,101,32,67,32,99,
                   111,100,101,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,117,110,105,120,62,32]},
               {text,
                ";gcc -o example_drv.so -fpic -shared complex.c port_driver.c"},
               {text,"\n\nwindows> "},
               {text,
                "6cl -LD -MD -Fe example_drv.dll complex.c port_driver.c"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 2.**"},
               {sep,
                [{text,")Start Erlang and compile the Erlang code:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,62,32]},
               {text,[3,101,114,108]},
               {text,
                "D\nErlang (BEAM) emulator version 5.1\n\nEshell V5.1 (abort with ^G)\n1> "},
               {text,"\fc(complex5)."},
               {text,
                [14,10,123,111,107,44,99,111,109,112,108,101,120,53,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 3.**"},
               {sep,
                [{text,
                  [16,82,117,110,32,116,104,101,32,101,120,97,109,112,108,101,
                   58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,50,62,32]},
               {text,
                [30,99,111,109,112,108,101,120,53,58,115,116,97,114,116,40,34,
                 101,120,97,109,112,108,101,95,100,114,118,34,41,46]},
               {text,[1,10]},
               {text,"\f<0.34.0>\n3> "},
               {text,
                [16,99,111,109,112,108,101,120,53,58,102,111,111,40,51,41,46]},
               {text,[6,10,52,10,52,62,32]},
               {text,
                [16,99,111,109,112,108,101,120,53,58,98,97,114,40,53,41,46]},
               {text,[7,10,49,48,10,53,62,32]},
               {text,
                [16,99,111,109,112,108,101,120,53,58,115,116,111,112,40,41,
                 46]},
               {text,[5,10,115,116,111,112]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GThis section outlines an example of how to solve the example problem in"}],
              0,false},
             {text,
              [26,91,80,114,111,98,108,101,109,32,69,120,97,109,112,108,101,
               93,40,101,120,97,109,112,108,101,41]},
             {sep,
              [{text,
                "zby using a C node. Notice that a C node is not typically used for solving simple problems like this, a port is sufficient."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,69,114,108,97,110,103,32,80,114,111,103,114,97,
             109]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "iFrom Erlang's point of view, the C node is treated like a normal Erlang node. Thus, calling the functions"}],
                0,false},
               {text,[5,42,102,111,111,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[5,42,98,97,114,42]},
               {sep,
                [{text,
                  [334,111,110,108,121,32,105,110,118,111,108,118,101,115,32,
                   115,101,110,100,105,110,103,32,97,32,109,101,115,115,97,
                   103,101,32,116,111,32,116,104,101,32,67,32,110,111,100,101,
                   32,97,115,107,105,110,103,32,102,111,114,32,116,104,101,32,
                   102,117,110,99,116,105,111,110,32,116,111,32,98,101,32,99,
                   97,108,108,101,100,44,32,97,110,100,32,114,101,99,101,105,
                   118,105,110,103,32,116,104,101,32,114,101,115,117,108,116,
                   46,32,83,101,110,100,105,110,103,32,97,32,109,101,115,115,
                   97,103,101,32,114,101,113,117,105,114,101,115,32,97,32,114,
                   101,99,105,112,105,101,110,116,44,32,116,104,97,116,32,105,
                   115,44,32,97,32,112,114,111,99,101,115,115,32,116,104,97,
                   116,32,99,97,110,32,98,101,32,100,101,102,105,110,101,100,
                   32,117,115,105,110,103,32,101,105,116,104,101,114,32,97,32,
                   112,105,100,32,111,114,32,97,32,116,117,112,108,101,44,32,
                   99,111,110,115,105,115,116,105,110,103,32,111,102,32,97,32,
                   114,101,103,105,115,116,101,114,101,100,32,110,97,109,101,
                   32,97,110,100,32,97,32,110,111,100,101,32,110,97,109,101,
                   46,32,73,110,32,116,104,105,115,32,99,97,115,101,44,32,97,
                   32,116,117,112,108,101,32,105,115,32,116,104,101,32,111,
                   110,108,121,32,97,108,116,101,114,110,97,116,105,118,101,
                   32,97,115,32,110,111,32,112,105,100,32,105,115,32,107,110,
                   111,119,110,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [22,10,123,82,101,103,78,97,109,101,44,32,78,111,100,101,125,
                 32,33,32,77,115,103]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rThe node name"}],0,false},
               {text,[6,42,78,111,100,101,42]},
               {sep,
                [{text,
                  "\\is to be the name of the C node. If short node names are used, the plain name of the node is"}],
                0,false},
               {text,[4,42,99,78,42]},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,[3,42,78,42]},
               {sep,
                [{text,
                  [132,105,115,32,97,110,32,105,110,116,101,103,101,114,46,32,
                   73,102,32,108,111,110,103,32,110,111,100,101,32,110,97,109,
                   101,115,32,97,114,101,32,117,115,101,100,44,32,116,104,101,
                   114,101,32,105,115,32,110,111,32,115,117,99,104,32,114,101,
                   115,116,114,105,99,116,105,111,110,46,32,65,110,32,101,120,
                   97,109,112,108,101,32,111,102,32,97,32,67,32,110,111,100,
                   101,32,110,97,109,101,32,117,115,105,110,103,32,115,104,
                   111,114,116,32,110,111,100,101,32,110,97,109,101,115,32,
                   105,115,32,116,104,117,115]}],
                0,false},
               {text,"\n*c1@idril*"},
               {sep,[{text,"%, an example using long node names is"}],0,false},
               {text,
                [25,42,99,110,111,100,101,64,105,100,114,105,108,46,101,114,
                 105,99,115,115,111,110,46,115,101,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,84,104,101,32,114,101,103,105,115,116,101,114,101,100,
                   32,110,97,109,101,44]}],
                0,false},
               {text,"\t*RegName*"},
               {sep,
                [{text,
                  "À, can be any atom. The name can be ignored by the C code, or, for example, be used to distinguish between different types of messages. An example of Erlang code using short node names follows:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "ô\n\n-module(complex3).\n-export([foo/1, bar/1]).\n\nfoo(X) ->\n    call_cnode({foo, X}).\nbar(Y) ->\n    call_cnode({bar, Y}).\n\ncall_cnode(Msg) ->\n    {any, c1@idril} ! {call, self(), Msg},\n    receive\n\t{cnode, Result} ->\n\t    Result\n    end.\n"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "]When using long node names, the code is slightly different as shown in the following example:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [268,10,10,45,109,111,100,117,108,101,40,99,111,109,112,108,
                 101,120,52,41,46,10,45,101,120,112,111,114,116,40,91,102,111,
                 111,47,49,44,32,98,97,114,47,49,93,41,46,10,10,102,111,111,
                 40,88,41,32,45,62,10,32,32,32,32,99,97,108,108,95,99,110,111,
                 100,101,40,123,102,111,111,44,32,88,125,41,46,10,98,97,114,
                 40,89,41,32,45,62,10,32,32,32,32,99,97,108,108,95,99,110,111,
                 100,101,40,123,98,97,114,44,32,89,125,41,46,10,10,99,97,108,
                 108,95,99,110,111,100,101,40,77,115,103,41,32,45,62,10,32,32,
                 32,32,123,97,110,121,44,32,39,99,110,111,100,101,64,105,100,
                 114,105,108,46,100,117,46,117,97,98,46,101,114,105,99,115,
                 115,111,110,46,115,101,39,125,32,33,32,123,99,97,108,108,44,
                 32,115,101,108,102,40,41,44,32,77,115,103,125,44,10,32,32,32,
                 32,114,101,99,101,105,118,101,10,9,123,99,110,111,100,101,44,
                 32,82,101,115,117,108,116,125,32,45,62,10,9,32,32,32,32,82,
                 101,115,117,108,116,10,32,32,32,32,101,110,100,46,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[14,35,35,35,35,32,67,32,80,114,111,103,114,97,109]},
           null},
          null}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [29,35,35,35,35,32,83,101,116,116,105,110,103,32,85,112,32,67,
               111,109,109,117,110,105,99,97,116,105,111,110]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "ZBefore calling any other function in Erl_Interface, the memory handling must be initiated:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [19,10,101,114,108,95,105,110,105,116,40,78,85,76,76,44,32,
                   48,41,59]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "VNow the C node can be initiated. If short node names are used, this is done by calling"}],
                  0,false},
                 {text,
                  [20,42,101,114,108,95,99,111,110,110,101,99,116,95,105,110,
                   105,116,40,41,42]},
                 {sep,[{text,[1,58]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,"(\nerl_connect_init(1, \"secretcookie\", 0);"}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,[{sep,[{text,[5,72,101,114,101,58]}],0,false}],0,true},
             null},
            null}},
          {above,
           {above,
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   "BThe first argument is the integer used to construct the node name."}],
                 0,false},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,"&In the example, the plain node name is"}],
                        0,false},
                       {text,[4,42,99,49,42]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,false},
            {sep,
             [{text,[1,42]},
              {text,
               ":The second argument is a string defining the magic cookie."}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {text,
              "\\The third argument is an integer that is used to identify a particular instance of a C node."}],
            0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "?If long node node names are used, initiation is done by calling"}],
                  0,false},
                 {text,
                  [21,42,101,114,108,95,99,111,110,110,101,99,116,95,120,105,
                   110,105,116,40,41,42]},
                 {sep,[{text,[1,58]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "l\nerl_connect_xinit(\"idril\", \"cnode\", \"cnode@idril.ericsson.se\",\n                  &addr, \"secretcookie\", 0);"}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,[{sep,[{text,[5,72,101,114,101,58]}],0,false}],0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {above,
               {sep,
                [{text,[1,42]},{text,"$The first argument is the host name."}],
                0,false},
               {sep,
                [{text,[1,42]},
                 {text,"+The second argument is the plain node name."}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {text,")The third argument is the full node name."}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,"&The fourth argument is a pointer to an"}],
                  0,false},
                 {text,"\t*in_addr*"},
                 {sep,
                  [{text,"'struct with the IP address of the host."}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},{text,"'The fifth argument is the magic cookie."}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {text,"*The sixth argument is the instance number."}],
            0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [151,84,104,101,32,67,32,110,111,100,101,32,99,97,110,32,
                     97,99,116,32,97,115,32,97,32,115,101,114,118,101,114,32,
                     111,114,32,97,32,99,108,105,101,110,116,32,119,104,101,
                     110,32,115,101,116,116,105,110,103,32,117,112,32,116,104,
                     101,32,69,114,108,97,110,103,45,67,32,99,111,109,109,117,
                     110,105,99,97,116,105,111,110,46,32,73,102,32,105,116,32,
                     97,99,116,115,32,97,115,32,97,32,99,108,105,101,110,116,
                     44,32,105,116,32,99,111,110,110,101,99,116,115,32,116,
                     111,32,97,110,32,69,114,108,97,110,103,32,110,111,100,
                     101,32,98,121,32,99,97,108,108,105,110,103]}],
                  0,false},
                 {text,
                  [15,42,101,114,108,95,99,111,110,110,101,99,116,40,41,42]},
                 {sep,
                  [{text,
                    "3, which returns an open file descriptor at success:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [30,10,102,100,32,61,32,101,114,108,95,99,111,110,110,101,
                   99,116,40,34,101,49,64,105,100,114,105,108,34,41,59]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "CIf the C node acts as a server, it must first create a socket (call"}],
                  0,false},
                 {text,"\b*bind()*"},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,"\n*listen()*"},
                 {sep,
                  [{text,"$) listening to a certain port number"}],
                  0,false},
                 {text,[6,42,112,111,114,116,42]},
                 {sep,
                  [{text,
                    "1. It then publishes its name and port number with"}],
                  0,false},
                 {text,[6,42,101,112,109,100,42]},
                 {sep,
                  [{text,
                    "5, the Erlang port mapper daemon. For details, see the"}],
                  0,false},
                 {text,[14,91,101,112,109,100,93,40,46,47,101,112,109,100,41]},
                 {sep,
                  [{text,
                    [20,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                     69,82,84,83,58]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [19,10,101,114,108,95,112,117,98,108,105,115,104,40,112,111,
                   114,116,41,59]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "?Now the C node server can accept connections from Erlang nodes:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,[{text," \nfd = erl_accept(listen, &conn);"}],0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [22,84,104,101,32,115,101,99,111,110,100,32,97,114,103,
                     117,109,101,110,116,32,116,111]}],
                  0,false},
                 {text,"\f*erl_accept*"},
                 {sep,[{text,"\vis a struct"}],0,false},
                 {text,"\f*ErlConnect*"},
                 {sep,
                  [{text,
                    "swhich contains useful information when a connection has been established, for example, the name of the Erlang node."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,{text,"##### Sending and Receiving Messages"},null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "7The C node can receive a message from Erlang by calling"}],
                  0,false},
                 {text,
                  [19,42,101,114,108,95,114,101,99,101,105,118,101,32,109,115,
                   103,40,41,42]},
                 {sep,
                  [{text,
                    "8. This function reads data from the open file descriptor"}],
                  0,false},
                 {text,[4,42,102,100,42]},
                 {sep,
                  [{text,"'into a buffer and puts the result in an"}],
                  0,false},
                 {text,"\f*ErlMessage*"},
                 {sep,[{text,[6,115,116,114,117,99,116]}],0,false},
                 {text,[6,42,101,109,115,103,42]},
                 {sep,[{text,[1,46]}],0,false},
                 {text,"\f*ErlMessage*"},
                 {sep,[{text,"\vhas a field"}],0,false},
                 {text,[6,42,116,121,112,101,42]},
                 {sep,
                  [{text,
                    "Mdefining what kind of data is received. In this case, the type of interest is"}],
                  0,false},
                 {text,[14,42,69,82,76,95,82,69,71,95,83,69,78,68,42]},
                 {sep,
                  [{text,
                    "hwhich indicates that Erlang sent a message to a registered process at the C node. The actual message, an"}],
                  0,false},
                 {text,[7,42,69,84,69,82,77,42]},
                 {sep,[{text,"\v, is in the"}],0,false},
                 {text,[5,42,109,115,103,42]},
                 {sep,[{text,[6,102,105,101,108,100,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,".It is also necessary to take care of the types"}],
                  0,false},
                 {text,"\v*ERL_ERROR*"},
                 {sep,
                  [{text,
                    [23,40,97,110,32,101,114,114,111,114,32,111,99,99,117,114,
                     114,101,100,41,32,97,110,100]}],
                  0,false},
                 {text,"\n*ERL_TICK*"},
                 {sep,
                  [{text,
                    "}(alive check from other node, is to be ignored). Other possible types indicate process events such as link, unlink, and exit:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "ñ\n  while (loop) {\n\n    got = erl_receive_msg(fd, buf, BUFSIZE, &emsg);\n    if (got == ERL_TICK) {\n      /* ignore */\n    } else if (got == ERL_ERROR) {\n      loop = 0; /* exit while loop */\n    } else {\n      if (emsg.type == ERL_REG_SEND) {"}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [20,65,115,32,116,104,101,32,109,101,115,115,97,103,101,
                     32,105,115,32,97,110]}],
                  0,false},
                 {text,[7,42,69,84,69,82,77,42]},
                 {sep,
                  [{text,
                    "óstruct, Erl_Interface functions can be used to manipulate it. In this case, the message becomes a 3-tuple, because that is how the Erlang code is written. The second element will be the pid of the caller and the third element will be the tuple"}],
                  0,false},
                 {text,
                  [16,42,123,70,117,110,99,116,105,111,110,44,65,114,103,125,
                   42]},
                 {sep,
                  [{text,
                    "odetermining which function to call, and with which argument. The result of calling the function is made into an"}],
                  0,false},
                 {text,[7,42,69,84,69,82,77,42]},
                 {sep,
                  [{text,",struct as well and sent back to Erlang using"}],
                  0,false},
                 {text,"\f*erl_send()*"},
                 {sep,
                  [{text,
                    "G, which takes the open file descriptor, a pid, and a term as arguments:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [461,10,32,32,32,32,32,32,32,32,102,114,111,109,112,32,61,
                   32,101,114,108,95,101,108,101,109,101,110,116,40,50,44,32,
                   101,109,115,103,46,109,115,103,41,59,10,32,32,32,32,32,32,
                   32,32,116,117,112,108,101,112,32,61,32,101,114,108,95,101,
                   108,101,109,101,110,116,40,51,44,32,101,109,115,103,46,109,
                   115,103,41,59,10,32,32,32,32,32,32,32,32,102,110,112,32,61,
                   32,101,114,108,95,101,108,101,109,101,110,116,40,49,44,32,
                   116,117,112,108,101,112,41,59,10,32,32,32,32,32,32,32,32,
                   97,114,103,112,32,61,32,101,114,108,95,101,108,101,109,101,
                   110,116,40,50,44,32,116,117,112,108,101,112,41,59,10,10,32,
                   32,32,32,32,32,32,32,105,102,32,40,115,116,114,110,99,109,
                   112,40,69,82,76,95,65,84,79,77,95,80,84,82,40,102,110,112,
                   41,44,32,34,102,111,111,34,44,32,51,41,32,61,61,32,48,41,
                   32,123,10,32,32,32,32,32,32,32,32,32,32,114,101,115,32,61,
                   32,102,111,111,40,69,82,76,95,73,78,84,95,86,65,76,85,69,
                   40,97,114,103,112,41,41,59,10,32,32,32,32,32,32,32,32,125,
                   32,101,108,115,101,32,105,102,32,40,115,116,114,110,99,109,
                   112,40,69,82,76,95,65,84,79,77,95,80,84,82,40,102,110,112,
                   41,44,32,34,98,97,114,34,44,32,51,41,32,61,61,32,48,41,32,
                   123,10,32,32,32,32,32,32,32,32,32,32,114,101,115,32,61,32,
                   98,97,114,40,69,82,76,95,73,78,84,95,86,65,76,85,69,40,97,
                   114,103,112,41,41,59,10,32,32,32,32,32,32,32,32,125,10,10,
                   32,32,32,32,32,32,32,32,114,101,115,112,32,61,32,101,114,
                   108,95,102,111,114,109,97,116,40,34,123,99,110,111,100,101,
                   44,32,126,105,125,34,44,32,114,101,115,41,59,10,32,32,32,
                   32,32,32,32,32,101,114,108,95,115,101,110,100,40,102,100,
                   44,32,102,114,111,109,112,44,32,114,101,115,112,41,59]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,"$Finally, the memory allocated by the"}],
                  0,false},
                 {text,[7,42,69,84,69,82,77,42]},
                 {sep,
                  [{text,
                    [29,99,114,101,97,116,105,110,103,32,102,117,110,99,116,
                     105,111,110,115,32,40,105,110,99,108,117,100,105,110,
                     103]}],
                  0,false},
                 {text,
                  [19,42,101,114,108,95,114,101,99,101,105,118,101,95,109,115,
                   103,40,41,42]},
                 {sep,
                  [{text,
                    [14,109,117,115,116,32,98,101,32,102,114,101,101,100,58]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "¾\n        erl_free_term(emsg.from); erl_free_term(emsg.msg);\n        erl_free_term(fromp); erl_free_term(tuplep);\n        erl_free_term(fnp); erl_free_term(argp);\n        erl_free_term(resp);"}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "cThe following examples show the resulting C programs. First a C node server using short node names:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [2629,10,10,47,42,32,99,110,111,100,101,95,115,46,99,32,42,
                   47,10,10,35,105,110,99,108,117,100,101,32,60,115,116,100,
                   105,111,46,104,62,10,35,105,110,99,108,117,100,101,32,60,
                   115,121,115,47,116,121,112,101,115,46,104,62,10,35,105,110,
                   99,108,117,100,101,32,60,115,121,115,47,115,111,99,107,101,
                   116,46,104,62,10,35,105,110,99,108,117,100,101,32,60,110,
                   101,116,105,110,101,116,47,105,110,46,104,62,10,10,35,105,
                   110,99,108,117,100,101,32,34,101,114,108,95,105,110,116,
                   101,114,102,97,99,101,46,104,34,10,35,105,110,99,108,117,
                   100,101,32,34,101,105,46,104,34,10,10,35,100,101,102,105,
                   110,101,32,66,85,70,83,73,90,69,32,49,48,48,48,10,10,105,
                   110,116,32,109,97,105,110,40,105,110,116,32,97,114,103,99,
                   44,32,99,104,97,114,32,42,42,97,114,103,118,41,32,123,10,
                   32,32,105,110,116,32,112,111,114,116,59,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,47,42,32,76,105,115,116,101,110,32,
                   112,111,114,116,32,110,117,109,98,101,114,32,42,47,10,32,
                   32,105,110,116,32,108,105,115,116,101,110,59,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,47,42,32,76,105,115,116,101,110,32,
                   115,111,99,107,101,116,32,42,47,10,32,32,105,110,116,32,
                   102,100,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,
                   42,32,102,100,32,116,111,32,69,114,108,97,110,103,32,110,
                   111,100,101,32,42,47,10,32,32,69,114,108,67,111,110,110,
                   101,99,116,32,99,111,110,110,59,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,
                   67,111,110,110,101,99,116,105,111,110,32,100,97,116,97,32,
                   42,47,10,10,32,32,105,110,116,32,108,111,111,112,32,61,32,
                   49,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,47,42,32,76,111,111,112,
                   32,102,108,97,103,32,42,47,10,32,32,105,110,116,32,103,111,
                   116,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,
                   82,101,115,117,108,116,32,111,102,32,114,101,99,101,105,
                   118,101,32,42,47,10,32,32,117,110,115,105,103,110,101,100,
                   32,99,104,97,114,32,98,117,102,91,66,85,70,83,73,90,69,93,
                   59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,66,
                   117,102,102,101,114,32,102,111,114,32,105,110,99,111,109,
                   105,110,103,32,109,101,115,115,97,103,101,32,42,47,10,32,
                   32,69,114,108,77,101,115,115,97,103,101,32,101,109,115,103,
                   59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,47,42,32,73,110,99,111,109,105,110,
                   103,32,109,101,115,115,97,103,101,32,42,47,10,10,32,32,69,
                   84,69,82,77,32,42,102,114,111,109,112,44,32,42,116,117,112,
                   108,101,112,44,32,42,102,110,112,44,32,42,97,114,103,112,
                   44,32,42,114,101,115,112,59,10,32,32,105,110,116,32,114,
                   101,115,59,10,10,32,32,112,111,114,116,32,61,32,97,116,111,
                   105,40,97,114,103,118,91,49,93,41,59,10,10,32,32,101,114,
                   108,95,105,110,105,116,40,78,85,76,76,44,32,48,41,59,10,10,
                   32,32,105,102,32,40,101,114,108,95,99,111,110,110,101,99,
                   116,95,105,110,105,116,40,49,44,32,34,115,101,99,114,101,
                   116,99,111,111,107,105,101,34,44,32,48,41,32,61,61,32,45,
                   49,41,10,32,32,32,32,101,114,108,95,101,114,114,95,113,117,
                   105,116,40,34,101,114,108,95,99,111,110,110,101,99,116,95,
                   105,110,105,116,34,41,59,10,10,32,32,47,42,32,77,97,107,
                   101,32,97,32,108,105,115,116,101,110,32,115,111,99,107,101,
                   116,32,42,47,10,32,32,105,102,32,40,40,108,105,115,116,101,
                   110,32,61,32,109,121,95,108,105,115,116,101,110,40,112,111,
                   114,116,41,41,32,60,61,32,48,41,10,32,32,32,32,101,114,108,
                   95,101,114,114,95,113,117,105,116,40,34,109,121,95,108,105,
                   115,116,101,110,34,41,59,10,10,32,32,105,102,32,40,101,114,
                   108,95,112,117,98,108,105,115,104,40,112,111,114,116,41,32,
                   61,61,32,45,49,41,10,32,32,32,32,101,114,108,95,101,114,
                   114,95,113,117,105,116,40,34,101,114,108,95,112,117,98,108,
                   105,115,104,34,41,59,10,10,32,32,105,102,32,40,40,102,100,
                   32,61,32,101,114,108,95,97,99,99,101,112,116,40,108,105,
                   115,116,101,110,44,32,38,99,111,110,110,41,41,32,61,61,32,
                   69,82,76,95,69,82,82,79,82,41,10,32,32,32,32,101,114,108,
                   95,101,114,114,95,113,117,105,116,40,34,101,114,108,95,97,
                   99,99,101,112,116,34,41,59,10,32,32,102,112,114,105,110,
                   116,102,40,115,116,100,101,114,114,44,32,34,67,111,110,110,
                   101,99,116,101,100,32,116,111,32,37,115,92,110,92,114,34,
                   44,32,99,111,110,110,46,110,111,100,101,110,97,109,101,41,
                   59,10,10,32,32,119,104,105,108,101,32,40,108,111,111,112,
                   41,32,123,10,10,32,32,32,32,103,111,116,32,61,32,101,114,
                   108,95,114,101,99,101,105,118,101,95,109,115,103,40,102,
                   100,44,32,98,117,102,44,32,66,85,70,83,73,90,69,44,32,38,
                   101,109,115,103,41,59,10,32,32,32,32,105,102,32,40,103,111,
                   116,32,61,61,32,69,82,76,95,84,73,67,75,41,32,123,10,32,32,
                   32,32,32,32,47,42,32,105,103,110,111,114,101,32,42,47,10,
                   32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,103,
                   111,116,32,61,61,32,69,82,76,95,69,82,82,79,82,41,32,123,
                   10,32,32,32,32,32,32,108,111,111,112,32,61,32,48,59,10,32,
                   32,32,32,125,32,101,108,115,101,32,123,10,10,32,32,32,32,
                   32,32,105,102,32,40,101,109,115,103,46,116,121,112,101,32,
                   61,61,32,69,82,76,95,82,69,71,95,83,69,78,68,41,32,123,10,
                   9,102,114,111,109,112,32,61,32,101,114,108,95,101,108,101,
                   109,101,110,116,40,50,44,32,101,109,115,103,46,109,115,103,
                   41,59,10,9,116,117,112,108,101,112,32,61,32,101,114,108,95,
                   101,108,101,109,101,110,116,40,51,44,32,101,109,115,103,46,
                   109,115,103,41,59,10,9,102,110,112,32,61,32,101,114,108,95,
                   101,108,101,109,101,110,116,40,49,44,32,116,117,112,108,
                   101,112,41,59,10,9,97,114,103,112,32,61,32,101,114,108,95,
                   101,108,101,109,101,110,116,40,50,44,32,116,117,112,108,
                   101,112,41,59,10,10,9,105,102,32,40,115,116,114,110,99,109,
                   112,40,69,82,76,95,65,84,79,77,95,80,84,82,40,102,110,112,
                   41,44,32,34,102,111,111,34,44,32,51,41,32,61,61,32,48,41,
                   32,123,10,9,32,32,114,101,115,32,61,32,102,111,111,40,69,
                   82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,103,112,41,
                   41,59,10,9,125,32,101,108,115,101,32,105,102,32,40,115,116,
                   114,110,99,109,112,40,69,82,76,95,65,84,79,77,95,80,84,82,
                   40,102,110,112,41,44,32,34,98,97,114,34,44,32,51,41,32,61,
                   61,32,48,41,32,123,10,9,32,32,114,101,115,32,61,32,98,97,
                   114,40,69,82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,
                   103,112,41,41,59,10,9,125,10,10,9,114,101,115,112,32,61,32,
                   101,114,108,95,102,111,114,109,97,116,40,34,123,99,110,111,
                   100,101,44,32,126,105,125,34,44,32,114,101,115,41,59,10,9,
                   101,114,108,95,115,101,110,100,40,102,100,44,32,102,114,
                   111,109,112,44,32,114,101,115,112,41,59,10,10,9,101,114,
                   108,95,102,114,101,101,95,116,101,114,109,40,101,109,115,
                   103,46,102,114,111,109,41,59,32,101,114,108,95,102,114,101,
                   101,95,116,101,114,109,40,101,109,115,103,46,109,115,103,
                   41,59,10,9,101,114,108,95,102,114,101,101,95,116,101,114,
                   109,40,102,114,111,109,112,41,59,32,101,114,108,95,102,114,
                   101,101,95,116,101,114,109,40,116,117,112,108,101,112,41,
                   59,10,9,101,114,108,95,102,114,101,101,95,116,101,114,109,
                   40,102,110,112,41,59,32,101,114,108,95,102,114,101,101,95,
                   116,101,114,109,40,97,114,103,112,41,59,10,9,101,114,108,
                   95,102,114,101,101,95,116,101,114,109,40,114,101,115,112,
                   41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,
                   125,32,47,42,32,119,104,105,108,101,32,42,47,10,125,10,10,
                   32,32,10,105,110,116,32,109,121,95,108,105,115,116,101,110,
                   40,105,110,116,32,112,111,114,116,41,32,123,10,32,32,105,
                   110,116,32,108,105,115,116,101,110,95,102,100,59,10,32,32,
                   115,116,114,117,99,116,32,115,111,99,107,97,100,100,114,95,
                   105,110,32,97,100,100,114,59,10,32,32,105,110,116,32,111,
                   110,32,61,32,49,59,10,10,32,32,105,102,32,40,40,108,105,
                   115,116,101,110,95,102,100,32,61,32,115,111,99,107,101,116,
                   40,65,70,95,73,78,69,84,44,32,83,79,67,75,95,83,84,82,69,
                   65,77,44,32,48,41,41,32,60,32,48,41,10,32,32,32,32,114,101,
                   116,117,114,110,32,40,45,49,41,59,10,10,32,32,115,101,116,
                   115,111,99,107,111,112,116,40,108,105,115,116,101,110,95,
                   102,100,44,32,83,79,76,95,83,79,67,75,69,84,44,32,83,79,95,
                   82,69,85,83,69,65,68,68,82,44,32,38,111,110,44,32,115,105,
                   122,101,111,102,40,111,110,41,41,59,10,10,32,32,109,101,
                   109,115,101,116,40,40,118,111,105,100,42,41,32,38,97,100,
                   100,114,44,32,48,44,32,40,115,105,122,101,95,116,41,32,115,
                   105,122,101,111,102,40,97,100,100,114,41,41,59,10,32,32,97,
                   100,100,114,46,115,105,110,95,102,97,109,105,108,121,32,61,
                   32,65,70,95,73,78,69,84,59,10,32,32,97,100,100,114,46,115,
                   105,110,95,112,111,114,116,32,61,32,104,116,111,110,115,40,
                   112,111,114,116,41,59,10,32,32,97,100,100,114,46,115,105,
                   110,95,97,100,100,114,46,115,95,97,100,100,114,32,61,32,
                   104,116,111,110,108,40,73,78,65,68,68,82,95,65,78,89,41,59,
                   10,10,32,32,105,102,32,40,98,105,110,100,40,108,105,115,
                   116,101,110,95,102,100,44,32,40,115,116,114,117,99,116,32,
                   115,111,99,107,97,100,100,114,42,41,32,38,97,100,100,114,
                   44,32,115,105,122,101,111,102,40,97,100,100,114,41,41,32,
                   60,32,48,41,10,32,32,32,32,114,101,116,117,114,110,32,40,
                   45,49,41,59,10,10,32,32,108,105,115,116,101,110,40,108,105,
                   115,116,101,110,95,102,100,44,32,53,41,59,10,32,32,114,101,
                   116,117,114,110,32,108,105,115,116,101,110,95,102,100,59,
                   10,125,10]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,"&A C node server using long node names:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [2817,10,10,47,42,32,99,110,111,100,101,95,115,50,46,99,32,
                   42,47,10,10,35,105,110,99,108,117,100,101,32,60,115,116,
                   100,105,111,46,104,62,10,35,105,110,99,108,117,100,101,32,
                   60,115,121,115,47,116,121,112,101,115,46,104,62,10,35,105,
                   110,99,108,117,100,101,32,60,115,121,115,47,115,111,99,107,
                   101,116,46,104,62,10,35,105,110,99,108,117,100,101,32,60,
                   110,101,116,105,110,101,116,47,105,110,46,104,62,10,10,35,
                   105,110,99,108,117,100,101,32,34,101,114,108,95,105,110,
                   116,101,114,102,97,99,101,46,104,34,10,35,105,110,99,108,
                   117,100,101,32,34,101,105,46,104,34,10,10,35,100,101,102,
                   105,110,101,32,66,85,70,83,73,90,69,32,49,48,48,48,10,10,
                   105,110,116,32,109,97,105,110,40,105,110,116,32,97,114,103,
                   99,44,32,99,104,97,114,32,42,42,97,114,103,118,41,32,123,
                   10,32,32,115,116,114,117,99,116,32,105,110,95,97,100,100,
                   114,32,97,100,100,114,59,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,47,42,32,51,50,45,98,105,116,
                   32,73,80,32,110,117,109,98,101,114,32,111,102,32,104,111,
                   115,116,32,42,47,10,32,32,105,110,116,32,112,111,114,116,
                   59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,76,105,
                   115,116,101,110,32,112,111,114,116,32,110,117,109,98,101,
                   114,32,42,47,10,32,32,105,110,116,32,108,105,115,116,101,
                   110,59,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,76,105,115,
                   116,101,110,32,115,111,99,107,101,116,32,42,47,10,32,32,
                   105,110,116,32,102,100,59,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,47,42,32,102,100,32,116,111,32,69,114,108,97,
                   110,103,32,110,111,100,101,32,42,47,10,32,32,69,114,108,67,
                   111,110,110,101,99,116,32,99,111,110,110,59,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,47,42,32,67,111,110,110,101,99,116,105,111,110,32,100,
                   97,116,97,32,42,47,10,10,32,32,105,110,116,32,108,111,111,
                   112,32,61,32,49,59,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,76,
                   111,111,112,32,102,108,97,103,32,42,47,10,32,32,105,110,
                   116,32,103,111,116,59,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,47,42,32,82,101,115,117,108,116,32,111,102,32,114,
                   101,99,101,105,118,101,32,42,47,10,32,32,117,110,115,105,
                   103,110,101,100,32,99,104,97,114,32,98,117,102,91,66,85,70,
                   83,73,90,69,93,59,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,47,42,32,66,117,102,102,101,114,32,102,111,114,32,105,
                   110,99,111,109,105,110,103,32,109,101,115,115,97,103,101,
                   32,42,47,10,32,32,69,114,108,77,101,115,115,97,103,101,32,
                   101,109,115,103,59,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,47,42,32,73,110,99,111,
                   109,105,110,103,32,109,101,115,115,97,103,101,32,42,47,10,
                   10,32,32,69,84,69,82,77,32,42,102,114,111,109,112,44,32,42,
                   116,117,112,108,101,112,44,32,42,102,110,112,44,32,42,97,
                   114,103,112,44,32,42,114,101,115,112,59,10,32,32,105,110,
                   116,32,114,101,115,59,10,32,32,10,32,32,112,111,114,116,32,
                   61,32,97,116,111,105,40,97,114,103,118,91,49,93,41,59,10,
                   10,32,32,101,114,108,95,105,110,105,116,40,78,85,76,76,44,
                   32,48,41,59,10,10,32,32,97,100,100,114,46,115,95,97,100,
                   100,114,32,61,32,105,110,101,116,95,97,100,100,114,40,34,
                   49,51,52,46,49,51,56,46,49,55,55,46,56,57,34,41,59,10,32,
                   32,105,102,32,40,101,114,108,95,99,111,110,110,101,99,116,
                   95,120,105,110,105,116,40,34,105,100,114,105,108,34,44,32,
                   34,99,110,111,100,101,34,44,32,34,99,110,111,100,101,64,
                   105,100,114,105,108,46,100,117,46,117,97,98,46,101,114,105,
                   99,115,115,111,110,46,115,101,34,44,10,9,9,9,38,97,100,100,
                   114,44,32,34,115,101,99,114,101,116,99,111,111,107,105,101,
                   34,44,32,48,41,32,61,61,32,45,49,41,10,32,32,32,32,101,114,
                   108,95,101,114,114,95,113,117,105,116,40,34,101,114,108,95,
                   99,111,110,110,101,99,116,95,120,105,110,105,116,34,41,59,
                   10,10,32,32,47,42,32,77,97,107,101,32,97,32,108,105,115,
                   116,101,110,32,115,111,99,107,101,116,32,42,47,10,32,32,
                   105,102,32,40,40,108,105,115,116,101,110,32,61,32,109,121,
                   95,108,105,115,116,101,110,40,112,111,114,116,41,41,32,60,
                   61,32,48,41,10,32,32,32,32,101,114,108,95,101,114,114,95,
                   113,117,105,116,40,34,109,121,95,108,105,115,116,101,110,
                   34,41,59,10,10,32,32,105,102,32,40,101,114,108,95,112,117,
                   98,108,105,115,104,40,112,111,114,116,41,32,61,61,32,45,49,
                   41,10,32,32,32,32,101,114,108,95,101,114,114,95,113,117,
                   105,116,40,34,101,114,108,95,112,117,98,108,105,115,104,34,
                   41,59,10,10,32,32,105,102,32,40,40,102,100,32,61,32,101,
                   114,108,95,97,99,99,101,112,116,40,108,105,115,116,101,110,
                   44,32,38,99,111,110,110,41,41,32,61,61,32,69,82,76,95,69,
                   82,82,79,82,41,10,32,32,32,32,101,114,108,95,101,114,114,
                   95,113,117,105,116,40,34,101,114,108,95,97,99,99,101,112,
                   116,34,41,59,10,32,32,102,112,114,105,110,116,102,40,115,
                   116,100,101,114,114,44,32,34,67,111,110,110,101,99,116,101,
                   100,32,116,111,32,37,115,92,110,92,114,34,44,32,99,111,110,
                   110,46,110,111,100,101,110,97,109,101,41,59,10,10,32,32,
                   119,104,105,108,101,32,40,108,111,111,112,41,32,123,10,10,
                   32,32,32,32,103,111,116,32,61,32,101,114,108,95,114,101,99,
                   101,105,118,101,95,109,115,103,40,102,100,44,32,98,117,102,
                   44,32,66,85,70,83,73,90,69,44,32,38,101,109,115,103,41,59,
                   10,32,32,32,32,105,102,32,40,103,111,116,32,61,61,32,69,82,
                   76,95,84,73,67,75,41,32,123,10,32,32,32,32,32,32,47,42,32,
                   105,103,110,111,114,101,32,42,47,10,32,32,32,32,125,32,101,
                   108,115,101,32,105,102,32,40,103,111,116,32,61,61,32,69,82,
                   76,95,69,82,82,79,82,41,32,123,10,32,32,32,32,32,32,108,
                   111,111,112,32,61,32,48,59,10,32,32,32,32,125,32,101,108,
                   115,101,32,123,10,10,32,32,32,32,32,32,105,102,32,40,101,
                   109,115,103,46,116,121,112,101,32,61,61,32,69,82,76,95,82,
                   69,71,95,83,69,78,68,41,32,123,10,9,102,114,111,109,112,32,
                   61,32,101,114,108,95,101,108,101,109,101,110,116,40,50,44,
                   32,101,109,115,103,46,109,115,103,41,59,10,9,116,117,112,
                   108,101,112,32,61,32,101,114,108,95,101,108,101,109,101,
                   110,116,40,51,44,32,101,109,115,103,46,109,115,103,41,59,
                   10,9,102,110,112,32,61,32,101,114,108,95,101,108,101,109,
                   101,110,116,40,49,44,32,116,117,112,108,101,112,41,59,10,9,
                   97,114,103,112,32,61,32,101,114,108,95,101,108,101,109,101,
                   110,116,40,50,44,32,116,117,112,108,101,112,41,59,10,10,9,
                   105,102,32,40,115,116,114,110,99,109,112,40,69,82,76,95,65,
                   84,79,77,95,80,84,82,40,102,110,112,41,44,32,34,102,111,
                   111,34,44,32,51,41,32,61,61,32,48,41,32,123,10,9,32,32,114,
                   101,115,32,61,32,102,111,111,40,69,82,76,95,73,78,84,95,86,
                   65,76,85,69,40,97,114,103,112,41,41,59,10,9,125,32,101,108,
                   115,101,32,105,102,32,40,115,116,114,110,99,109,112,40,69,
                   82,76,95,65,84,79,77,95,80,84,82,40,102,110,112,41,44,32,
                   34,98,97,114,34,44,32,51,41,32,61,61,32,48,41,32,123,10,9,
                   32,32,114,101,115,32,61,32,98,97,114,40,69,82,76,95,73,78,
                   84,95,86,65,76,85,69,40,97,114,103,112,41,41,59,10,9,125,
                   10,10,9,114,101,115,112,32,61,32,101,114,108,95,102,111,
                   114,109,97,116,40,34,123,99,110,111,100,101,44,32,126,105,
                   125,34,44,32,114,101,115,41,59,10,9,101,114,108,95,115,101,
                   110,100,40,102,100,44,32,102,114,111,109,112,44,32,114,101,
                   115,112,41,59,10,10,9,101,114,108,95,102,114,101,101,95,
                   116,101,114,109,40,101,109,115,103,46,102,114,111,109,41,
                   59,32,101,114,108,95,102,114,101,101,95,116,101,114,109,40,
                   101,109,115,103,46,109,115,103,41,59,10,9,101,114,108,95,
                   102,114,101,101,95,116,101,114,109,40,102,114,111,109,112,
                   41,59,32,101,114,108,95,102,114,101,101,95,116,101,114,109,
                   40,116,117,112,108,101,112,41,59,10,9,101,114,108,95,102,
                   114,101,101,95,116,101,114,109,40,102,110,112,41,59,32,101,
                   114,108,95,102,114,101,101,95,116,101,114,109,40,97,114,
                   103,112,41,59,10,9,101,114,108,95,102,114,101,101,95,116,
                   101,114,109,40,114,101,115,112,41,59,10,32,32,32,32,32,32,
                   125,10,32,32,32,32,125,10,32,32,125,10,125,10,10,32,32,10,
                   105,110,116,32,109,121,95,108,105,115,116,101,110,40,105,
                   110,116,32,112,111,114,116,41,32,123,10,32,32,105,110,116,
                   32,108,105,115,116,101,110,95,102,100,59,10,32,32,115,116,
                   114,117,99,116,32,115,111,99,107,97,100,100,114,95,105,110,
                   32,97,100,100,114,59,10,32,32,105,110,116,32,111,110,32,61,
                   32,49,59,10,10,32,32,105,102,32,40,40,108,105,115,116,101,
                   110,95,102,100,32,61,32,115,111,99,107,101,116,40,65,70,95,
                   73,78,69,84,44,32,83,79,67,75,95,83,84,82,69,65,77,44,32,
                   48,41,41,32,60,32,48,41,10,32,32,32,32,114,101,116,117,114,
                   110,32,40,45,49,41,59,10,10,32,32,115,101,116,115,111,99,
                   107,111,112,116,40,108,105,115,116,101,110,95,102,100,44,
                   32,83,79,76,95,83,79,67,75,69,84,44,32,83,79,95,82,69,85,
                   83,69,65,68,68,82,44,32,38,111,110,44,32,115,105,122,101,
                   111,102,40,111,110,41,41,59,10,10,32,32,109,101,109,115,
                   101,116,40,40,118,111,105,100,42,41,32,38,97,100,100,114,
                   44,32,48,44,32,40,115,105,122,101,95,116,41,32,115,105,122,
                   101,111,102,40,97,100,100,114,41,41,59,10,32,32,97,100,100,
                   114,46,115,105,110,95,102,97,109,105,108,121,32,61,32,65,
                   70,95,73,78,69,84,59,10,32,32,97,100,100,114,46,115,105,
                   110,95,112,111,114,116,32,61,32,104,116,111,110,115,40,112,
                   111,114,116,41,59,10,32,32,97,100,100,114,46,115,105,110,
                   95,97,100,100,114,46,115,95,97,100,100,114,32,61,32,104,
                   116,111,110,108,40,73,78,65,68,68,82,95,65,78,89,41,59,10,
                   10,32,32,105,102,32,40,98,105,110,100,40,108,105,115,116,
                   101,110,95,102,100,44,32,40,115,116,114,117,99,116,32,115,
                   111,99,107,97,100,100,114,42,41,32,38,97,100,100,114,44,32,
                   115,105,122,101,111,102,40,97,100,100,114,41,41,32,60,32,
                   48,41,10,32,32,32,32,114,101,116,117,114,110,32,40,45,49,
                   41,59,10,10,32,32,108,105,115,116,101,110,40,108,105,115,
                   116,101,110,95,102,100,44,32,53,41,59,10,32,32,114,101,116,
                   117,114,110,32,108,105,115,116,101,110,95,102,100,59,10,
                   125,10]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,"(Finally, the code for the C node client:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [1697,10,10,47,42,32,99,110,111,100,101,95,99,46,99,32,42,
                   47,10,10,35,105,110,99,108,117,100,101,32,60,115,116,100,
                   105,111,46,104,62,10,35,105,110,99,108,117,100,101,32,60,
                   115,121,115,47,116,121,112,101,115,46,104,62,10,35,105,110,
                   99,108,117,100,101,32,60,115,121,115,47,115,111,99,107,101,
                   116,46,104,62,10,35,105,110,99,108,117,100,101,32,60,110,
                   101,116,105,110,101,116,47,105,110,46,104,62,10,10,35,105,
                   110,99,108,117,100,101,32,34,101,114,108,95,105,110,116,
                   101,114,102,97,99,101,46,104,34,10,35,105,110,99,108,117,
                   100,101,32,34,101,105,46,104,34,10,10,35,100,101,102,105,
                   110,101,32,66,85,70,83,73,90,69,32,49,48,48,48,10,10,105,
                   110,116,32,109,97,105,110,40,105,110,116,32,97,114,103,99,
                   44,32,99,104,97,114,32,42,42,97,114,103,118,41,32,123,10,
                   32,32,105,110,116,32,102,100,59,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,47,42,32,102,100,32,116,111,32,69,114,
                   108,97,110,103,32,110,111,100,101,32,42,47,10,10,32,32,105,
                   110,116,32,108,111,111,112,32,61,32,49,59,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,47,42,32,76,111,111,112,32,102,108,97,103,32,
                   42,47,10,32,32,105,110,116,32,103,111,116,59,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,47,42,32,82,101,115,117,108,
                   116,32,111,102,32,114,101,99,101,105,118,101,32,42,47,10,
                   32,32,117,110,115,105,103,110,101,100,32,99,104,97,114,32,
                   98,117,102,91,66,85,70,83,73,90,69,93,59,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,47,42,32,66,117,102,102,101,114,32,
                   102,111,114,32,105,110,99,111,109,105,110,103,32,109,101,
                   115,115,97,103,101,32,42,47,10,32,32,69,114,108,77,101,115,
                   115,97,103,101,32,101,109,115,103,59,32,32,32,32,32,32,32,
                   32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,47,
                   42,32,73,110,99,111,109,105,110,103,32,109,101,115,115,97,
                   103,101,32,42,47,10,10,32,32,69,84,69,82,77,32,42,102,114,
                   111,109,112,44,32,42,116,117,112,108,101,112,44,32,42,102,
                   110,112,44,32,42,97,114,103,112,44,32,42,114,101,115,112,
                   59,10,32,32,105,110,116,32,114,101,115,59,10,32,32,10,32,
                   32,101,114,108,95,105,110,105,116,40,78,85,76,76,44,32,48,
                   41,59,10,10,32,32,105,102,32,40,101,114,108,95,99,111,110,
                   110,101,99,116,95,105,110,105,116,40,49,44,32,34,115,101,
                   99,114,101,116,99,111,111,107,105,101,34,44,32,48,41,32,61,
                   61,32,45,49,41,10,32,32,32,32,101,114,108,95,101,114,114,
                   95,113,117,105,116,40,34,101,114,108,95,99,111,110,110,101,
                   99,116,95,105,110,105,116,34,41,59,10,10,32,32,105,102,32,
                   40,40,102,100,32,61,32,101,114,108,95,99,111,110,110,101,
                   99,116,40,34,101,49,64,105,100,114,105,108,34,41,41,32,60,
                   32,48,41,10,32,32,32,32,101,114,108,95,101,114,114,95,113,
                   117,105,116,40,34,101,114,108,95,99,111,110,110,101,99,116,
                   34,41,59,10,32,32,102,112,114,105,110,116,102,40,115,116,
                   100,101,114,114,44,32,34,67,111,110,110,101,99,116,101,100,
                   32,116,111,32,101,105,64,105,100,114,105,108,92,110,92,114,
                   34,41,59,10,10,32,32,119,104,105,108,101,32,40,108,111,111,
                   112,41,32,123,10,10,32,32,32,32,103,111,116,32,61,32,101,
                   114,108,95,114,101,99,101,105,118,101,95,109,115,103,40,
                   102,100,44,32,98,117,102,44,32,66,85,70,83,73,90,69,44,32,
                   38,101,109,115,103,41,59,10,32,32,32,32,105,102,32,40,103,
                   111,116,32,61,61,32,69,82,76,95,84,73,67,75,41,32,123,10,
                   32,32,32,32,32,32,47,42,32,105,103,110,111,114,101,32,42,
                   47,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,40,
                   103,111,116,32,61,61,32,69,82,76,95,69,82,82,79,82,41,32,
                   123,10,32,32,32,32,32,32,108,111,111,112,32,61,32,48,59,10,
                   32,32,32,32,125,32,101,108,115,101,32,123,10,10,32,32,32,
                   32,32,32,105,102,32,40,101,109,115,103,46,116,121,112,101,
                   32,61,61,32,69,82,76,95,82,69,71,95,83,69,78,68,41,32,123,
                   10,9,102,114,111,109,112,32,61,32,101,114,108,95,101,108,
                   101,109,101,110,116,40,50,44,32,101,109,115,103,46,109,115,
                   103,41,59,10,9,116,117,112,108,101,112,32,61,32,101,114,
                   108,95,101,108,101,109,101,110,116,40,51,44,32,101,109,115,
                   103,46,109,115,103,41,59,10,9,102,110,112,32,61,32,101,114,
                   108,95,101,108,101,109,101,110,116,40,49,44,32,116,117,112,
                   108,101,112,41,59,10,9,97,114,103,112,32,61,32,101,114,108,
                   95,101,108,101,109,101,110,116,40,50,44,32,116,117,112,108,
                   101,112,41,59,10,10,9,105,102,32,40,115,116,114,110,99,109,
                   112,40,69,82,76,95,65,84,79,77,95,80,84,82,40,102,110,112,
                   41,44,32,34,102,111,111,34,44,32,51,41,32,61,61,32,48,41,
                   32,123,10,9,32,32,114,101,115,32,61,32,102,111,111,40,69,
                   82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,103,112,41,
                   41,59,10,9,125,32,101,108,115,101,32,105,102,32,40,115,116,
                   114,110,99,109,112,40,69,82,76,95,65,84,79,77,95,80,84,82,
                   40,102,110,112,41,44,32,34,98,97,114,34,44,32,51,41,32,61,
                   61,32,48,41,32,123,10,9,32,32,114,101,115,32,61,32,98,97,
                   114,40,69,82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,
                   103,112,41,41,59,10,9,125,10,10,9,114,101,115,112,32,61,32,
                   101,114,108,95,102,111,114,109,97,116,40,34,123,99,110,111,
                   100,101,44,32,126,105,125,34,44,32,114,101,115,41,59,10,9,
                   101,114,108,95,115,101,110,100,40,102,100,44,32,102,114,
                   111,109,112,44,32,114,101,115,112,41,59,10,10,9,101,114,
                   108,95,102,114,101,101,95,116,101,114,109,40,101,109,115,
                   103,46,102,114,111,109,41,59,32,101,114,108,95,102,114,101,
                   101,95,116,101,114,109,40,101,109,115,103,46,109,115,103,
                   41,59,10,9,101,114,108,95,102,114,101,101,95,116,101,114,
                   109,40,102,114,111,109,112,41,59,32,101,114,108,95,102,114,
                   101,101,95,116,101,114,109,40,116,117,112,108,101,112,41,
                   59,10,9,101,114,108,95,102,114,101,101,95,116,101,114,109,
                   40,102,110,112,41,59,32,101,114,108,95,102,114,101,101,95,
                   116,101,114,109,40,97,114,103,112,41,59,10,9,101,114,108,
                   95,102,114,101,101,95,116,101,114,109,40,114,101,115,112,
                   41,59,10,32,32,32,32,32,32,125,10,32,32,32,32,125,10,32,32,
                   125,10,125,10]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,82,117,110,110,105,110,103,32,116,104,101,32,
             69,120,97,109,112,108,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 1.**"},
               {sep,
                [{text,
                  "hCompile the C code. This provides the paths to the Erl_Interface include files and libraries, and to the"}],
                0,false},
               {text,"\b*socket*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[5,42,110,115,108,42]},
               {sep,[{text,"\nlibraries:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,62,32,32]},
               {text,
                [18,103,99,99,32,45,111,32,99,115,101,114,118,101,114,32,92,
                 92,32]},
               {text,[1,10]},
               {text,
                "4-I/usr/local/otp/lib/erl_interface-3.2.1/include \\\\ "},
               {text,[1,10]},
               {text,"0-L/usr/local/otp/lib/erl_interface-3.2.1/lib \\\\ "},
               {text,[1,10]},
               {text,
                [23,99,111,109,112,108,101,120,46,99,32,99,110,111,100,101,95,
                 115,46,99,32,92,92,32]},
               {text,[1,10]},
               {text,"#-lerl_interface -lei -lsocket -lnsl"},
               {text,"\b\n\nunix> "},
               {text,
                [19,103,99,99,32,45,111,32,99,115,101,114,118,101,114,50,32,
                 92,92,32]},
               {text,[1,10]},
               {text,
                "4-I/usr/local/otp/lib/erl_interface-3.2.1/include \\\\ "},
               {text,[1,10]},
               {text,"0-L/usr/local/otp/lib/erl_interface-3.2.1/lib \\\\ "},
               {text,[1,10]},
               {text,
                [24,99,111,109,112,108,101,120,46,99,32,99,110,111,100,101,95,
                 115,50,46,99,32,92,92,32]},
               {text,[1,10]},
               {text,"#-lerl_interface -lei -lsocket -lnsl"},
               {text,"\b\n\nunix> "},
               {text,
                [18,103,99,99,32,45,111,32,99,99,108,105,101,110,116,32,92,92,
                 32]},
               {text,[1,10]},
               {text,
                "4-I/usr/local/otp/lib/erl_interface-3.2.1/include \\\\ "},
               {text,[1,10]},
               {text,"0-L/usr/local/otp/lib/erl_interface-3.2.1/lib \\\\ "},
               {text,[1,10]},
               {text,
                [23,99,111,109,112,108,101,120,46,99,32,99,110,111,100,101,95,
                 99,46,99,32,92,92,32]},
               {text,[1,10]},
               {text,"#-lerl_interface -lei -lsocket -lnsl"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"0In Erlang/OTP R5B and later versions of OTP, the"}],
                0,false},
               {text,"\t*include*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[5,42,108,105,98,42]},
               {sep,
                [{text,
                  [30,100,105,114,101,99,116,111,114,105,101,115,32,97,114,
                   101,32,115,105,116,117,97,116,101,100,32,117,110,100,101,
                   114]}],
                0,false},
               {text,
                [31,42,79,84,80,82,79,79,84,47,108,105,98,47,101,114,108,95,
                 105,110,116,101,114,102,97,99,101,45,86,83,78,42]},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,"\t*OTPROOT*"},
               {sep,
                [{text,"/is the root directory of the OTP installation ("}],
                0,false},
               {text,
                [16,42,47,117,115,114,47,108,111,99,97,108,47,111,116,112,42]},
               {sep,
                [{text,
                  [26,105,110,32,116,104,101,32,114,101,99,101,110,116,32,101,
                   120,97,109,112,108,101,41,32,97,110,100]}],
                0,false},
               {text,[5,42,86,83,78,42]},
               {sep,
                [{text,
                  "Nis the version of the Erl_Interface application (3.2.1 in the recent example)."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#In R4B and earlier versions of OTP,"}],0,false},
               {text,"\t*include*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[5,42,108,105,98,42]},
               {sep,
                [{text,
                  [18,97,114,101,32,115,105,116,117,97,116,101,100,32,117,110,
                   100,101,114]}],
                0,false},
               {text,"\r*OTPROOT/usr*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 2.**"},
               {sep,
                [{text,
                  [24,67,111,109,112,105,108,101,32,116,104,101,32,69,114,108,
                   97,110,103,32,99,111,100,101,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,117,110,105,120,62,32]},
               {text,
                [30,101,114,108,32,45,99,111,109,112,105,108,101,32,99,111,
                 109,112,108,101,120,51,32,99,111,109,112,108,101,120,52]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 3.**"},
               {sep,
                [{text,
                  "4Run the C node server example with short node names."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[14,68,111,32,97,115,32,102,111,108,108,111,119,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [19,83,116,97,114,116,32,116,104,101,32,67,32,112,114,111,
                  103,114,97,109]}],
               0,false},
              {text,"\t*cserver*"},
              {sep,[{text," and Erlang in different windows."}],0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"\t*cserver*"},
              {sep,
               [{text,
                 "_takes a port number as argument and must be started before trying to call the Erlang functions."}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,"-The Erlang node is to be given the short name"}],
              0,false},
             {text,[4,42,101,49,42]},
             {sep,
              [{text,
                ";and must be set to use the same magic cookie as the C node,"}],
              0,false},
             {text,[14,42,115,101,99,114,101,116,99,111,111,107,105,101,42]},
             {sep,[{text,[1,58]}],0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,117,110,105,120,62,32]},
               {text,"\fcserver 3456"},
               {text,"\b\n\nunix> "},
               {text,"%erl -sname e1 -setcookie secretcookie"},
               {text,
                "X\nErlang (BEAM) emulator version 4.9.1.2\n \nEshell V4.9.1.2  (abort with ^G)\n(e1@idril)1> "},
               {text,
                [16,99,111,109,112,108,101,120,51,58,102,111,111,40,51,41,46]},
               {text,
                [16,10,52,10,40,101,49,64,105,100,114,105,108,41,50,62,32]},
               {text,
                [16,99,111,109,112,108,101,120,51,58,98,97,114,40,53,41,46]},
               {text,[3,10,49,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 4.**"},
               {sep,
                [{text,"(Run the C node client example. Terminate"}],
                0,false},
               {text,"\t*cserver*"},
               {sep,[{text,"\e, but not Erlang, and start"}],0,false},
               {text,"\t*cclient*"},
               {sep,
                [{text,
                  ";. The Erlang node must be started before the C node client:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,117,110,105,120,62,32]},
               {text,[7,99,99,108,105,101,110,116]},
               {text,[15,10,10,40,101,49,64,105,100,114,105,108,41,51,62,32]},
               {text,
                [16,99,111,109,112,108,101,120,51,58,102,111,111,40,51,41,46]},
               {text,
                [16,10,52,10,40,101,49,64,105,100,114,105,108,41,52,62,32]},
               {text,
                [16,99,111,109,112,108,101,120,51,58,98,97,114,40,53,41,46]},
               {text,[3,10,49,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 5.**"},
               {sep,
                [{text,
                  "3Run the C node server example with long node names:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,117,110,105,120,62,32]},
               {text,"\rcserver2 3456"},
               {text,"\b\n\nunix> "},
               {text,"$erl -name e1 -setcookie secretcookie"},
               {text,
                "k\nErlang (BEAM) emulator version 4.9.1.2\n \nEshell V4.9.1.2  (abort with ^G)\n(e1@idril.du.uab.ericsson.se)1> "},
               {text,
                [16,99,111,109,112,108,101,120,52,58,102,111,111,40,51,41,46]},
               {text,"#\n4\n(e1@idril.du.uab.ericsson.se)2> "},
               {text,
                [16,99,111,109,112,108,101,120,52,58,98,97,114,40,53,41,46]},
               {text,[3,10,49,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GThis section outlines an example of how to solve the example problem in"}],
              0,false},
             {text,
              [26,91,80,114,111,98,108,101,109,32,69,120,97,109,112,108,101,
               93,40,101,120,97,109,112,108,101,41]},
             {sep,
              [{text,"-by using Native Implemented Functions (NIFs)."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "ÑNIFs were introduced in Erlang/OTP R13B03 as an experimental feature. It is a simpler and more efficient way of calling C-code than using port drivers. NIFs are most suitable for synchronous functions, such as"}],
              0,false},
             {text,[5,42,102,111,111,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[5,42,98,97,114,42]},
             {sep,
              [{text,
                "fin the example, that do some relatively short calculations without side effects and return the result."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [377,65,32,78,73,70,32,105,115,32,97,32,102,117,110,99,116,105,
               111,110,32,116,104,97,116,32,105,115,32,105,109,112,108,101,
               109,101,110,116,101,100,32,105,110,32,67,32,105,110,115,116,
               101,97,100,32,111,102,32,69,114,108,97,110,103,46,32,78,73,70,
               115,32,97,112,112,101,97,114,32,97,115,32,97,110,121,32,111,
               116,104,101,114,32,102,117,110,99,116,105,111,110,115,32,116,
               111,32,116,104,101,32,99,97,108,108,101,114,115,46,32,84,104,
               101,121,32,98,101,108,111,110,103,32,116,111,32,97,32,109,111,
               100,117,108,101,32,97,110,100,32,97,114,101,32,99,97,108,108,
               101,100,32,108,105,107,101,32,97,110,121,32,111,116,104,101,
               114,32,69,114,108,97,110,103,32,102,117,110,99,116,105,111,110,
               115,46,32,84,104,101,32,78,73,70,115,32,111,102,32,97,32,109,
               111,100,117,108,101,32,97,114,101,32,99,111,109,112,105,108,
               101,100,32,97,110,100,32,108,105,110,107,101,100,32,105,110,
               116,111,32,97,32,100,121,110,97,109,105,99,32,108,111,97,100,
               97,98,108,101,44,32,115,104,97,114,101,100,32,108,105,98,114,
               97,114,121,32,40,83,79,32,105,110,32,85,78,73,88,44,32,68,76,
               76,32,105,110,32,87,105,110,100,111,119,115,41,46,32,84,104,
               101,32,78,73,70,32,108,105,98,114,97,114,121,32,109,117,115,
               116,32,98,101,32,108,111,97,100,101,100,32,105,110,32,114,117,
               110,116,105,109,101,32,98,121,32,116,104,101,32,69,114,108,97,
               110,103,32,99,111,100,101,32,111,102,32,116,104,101,32,109,111,
               100,117,108,101,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [274,65,115,32,97,32,78,73,70,32,108,105,98,114,97,114,121,32,
               105,115,32,100,121,110,97,109,105,99,97,108,108,121,32,108,105,
               110,107,101,100,32,105,110,116,111,32,116,104,101,32,101,109,
               117,108,97,116,111,114,32,112,114,111,99,101,115,115,44,32,116,
               104,105,115,32,105,115,32,116,104,101,32,102,97,115,116,101,
               115,116,32,119,97,121,32,111,102,32,99,97,108,108,105,110,103,
               32,67,45,99,111,100,101,32,102,114,111,109,32,69,114,108,97,
               110,103,32,40,97,108,111,110,103,115,105,100,101,32,112,111,
               114,116,32,100,114,105,118,101,114,115,41,46,32,67,97,108,108,
               105,110,103,32,78,73,70,115,32,114,101,113,117,105,114,101,115,
               32,110,111,32,99,111,110,116,101,120,116,32,115,119,105,116,99,
               104,101,115,46,32,66,117,116,32,105,116,32,105,115,32,97,108,
               115,111,32,116,104,101,32,108,101,97,115,116,32,115,97,102,101,
               44,32,98,101,99,97,117,115,101,32,97,32,99,114,97,115,104,32,
               105,110,32,97,32,78,73,70,32,98,114,105,110,103,115,32,116,104,
               101,32,101,109,117,108,97,116,111,114,32,100,111,119,110,32,
               116,111,111,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,69,114,108,97,110,103,32,80,114,111,103,114,97,
             109]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "]Even if all functions of a module are NIFs, an Erlang module is still needed for two reasons:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {text,
            "LThe NIF library must be explicitly loaded by Erlang code in the same module."}],
          0,false},
         {sep,
          [{text,[1,42]},
           {text,
            "@All NIFs of a module must have an Erlang implementation as well."}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÊNormally these are minimal stub implementations that throw an exception. But they can also be used as fallback implementations for functions that do not have native implemenations on some architectures."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#NIF libraries are loaded by calling"}],0,false},
               {text,
                [19,42,101,114,108,97,110,103,58,108,111,97,100,95,110,105,
                 102,47,50,42]},
               {sep,
                [{text,
                  [153,44,32,119,105,116,104,32,116,104,101,32,110,97,109,101,
                   32,111,102,32,116,104,101,32,115,104,97,114,101,100,32,108,
                   105,98,114,97,114,121,32,97,115,32,97,114,103,117,109,101,
                   110,116,46,32,84,104,101,32,115,101,99,111,110,100,32,97,
                   114,103,117,109,101,110,116,32,99,97,110,32,98,101,32,97,
                   110,121,32,116,101,114,109,32,116,104,97,116,32,119,105,
                   108,108,32,98,101,32,112,97,115,115,101,100,32,111,110,32,
                   116,111,32,116,104,101,32,108,105,98,114,97,114,121,32,97,
                   110,100,32,117,115,101,100,32,102,111,114,32,105,110,105,
                   116,105,97,108,105,122,97,116,105,111,110,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Õ\n\n-module(complex6).\n-export([foo/1, bar/1]).\n-on_load(init/0).\n\ninit() ->\n    ok = erlang:load_nif(\"./complex6_nif\", 0).\n\nfoo(_X) ->\n    exit(nif_library_not_loaded).\nbar(_Y) ->\n    exit(nif_library_not_loaded).\n"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [19,72,101,114,101,44,32,116,104,101,32,100,105,114,101,99,
                   116,105,118,101]}],
                0,false},
               {text,"\t*on_load*"},
               {sep,
                [{text,
                  [23,105,115,32,117,115,101,100,32,116,111,32,103,101,116,32,
                   102,117,110,99,116,105,111,110]}],
                0,false},
               {text,[6,42,105,110,105,116,42]},
               {sep,
                [{text,
                  "8to be automatically called when the module is loaded. If"}],
                0,false},
               {text,[6,42,105,110,105,116,42]},
               {sep,[{text,"\ereturns anything other than"}],0,false},
               {text,[4,42,111,107,42]},
               {sep,
                [{text,
                  [128,44,32,115,117,99,104,32,119,104,101,110,32,116,104,101,
                   32,108,111,97,100,105,110,103,32,111,102,32,116,104,101,32,
                   78,73,70,32,108,105,98,114,97,114,121,32,102,97,105,108,
                   115,32,105,110,32,116,104,105,115,32,101,120,97,109,112,
                   108,101,44,32,116,104,101,32,109,111,100,117,108,101,32,
                   105,115,32,117,110,108,111,97,100,101,100,32,97,110,100,32,
                   99,97,108,108,115,32,116,111,32,102,117,110,99,116,105,111,
                   110,115,32,119,105,116,104,105,110,32,105,116,44,32,102,97,
                   105,108,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "MLoading the NIF library overrides the stub implementations and cause calls to"}],
                0,false},
               {text,[5,42,102,111,111,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[5,42,98,97,114,42]},
               {sep,
                [{text,
                  "4to be dispatched to the NIF implementations instead."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,78,73,70,32,76,105,98,114,97,114,121,32,67,111,
             100,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [127,84,104,101,32,78,73,70,115,32,111,102,32,116,104,101,
                   32,109,111,100,117,108,101,32,97,114,101,32,99,111,109,112,
                   105,108,101,100,32,97,110,100,32,108,105,110,107,101,100,
                   32,105,110,116,111,32,97,32,115,104,97,114,101,100,32,108,
                   105,98,114,97,114,121,46,32,69,97,99,104,32,78,73,70,32,
                   105,115,32,105,109,112,108,101,109,101,110,116,101,100,32,
                   97,115,32,97,32,110,111,114,109,97,108,32,67,32,102,117,
                   110,99,116,105,111,110,46,32,84,104,101,32,109,97,99,114,
                   111]}],
                0,false},
               {text,[14,42,69,82,76,95,78,73,70,95,73,78,73,84,42]},
               {sep,
                [{text,
                  [131,116,111,103,101,116,104,101,114,32,119,105,116,104,32,
                   97,110,32,97,114,114,97,121,32,111,102,32,115,116,114,117,
                   99,116,117,114,101,115,32,100,101,102,105,110,101,115,32,
                   116,104,101,32,110,97,109,101,115,44,32,97,114,105,116,121,
                   44,32,97,110,100,32,102,117,110,99,116,105,111,110,32,112,
                   111,105,110,116,101,114,115,32,111,102,32,97,108,108,32,
                   116,104,101,32,78,73,70,115,32,105,110,32,116,104,101,32,
                   109,111,100,117,108,101,46,32,84,104,101,32,104,101,97,100,
                   101,114,32,102,105,108,101]}],
                0,false},
               {text,"\v*erl_nif.h*"},
               {sep,
                [{text,
                  "fmust be included. As the library is a shared module, not a program, no main function is to be present."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ":The function arguments passed to a NIF appears in an array"}],
                0,false},
               {text,[6,42,97,114,103,118,42]},
               {sep,[{text,[6,44,32,119,105,116,104]}],0,false},
               {text,[6,42,97,114,103,99,42]},
               {sep,
                [{text,
                  "sas the length of the array, and thus the arity of the function. The Nth argument of the function can be accessed as"}],
                0,false},
               {text,"\v*argv[N-1]*"},
               {sep,
                [{text,
                  "Å. NIFs also take an environment argument that serves as an opaque handle that is needed to be passed on to most API functions. The environment contains information about the calling Erlang process:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [695,10,10,35,105,110,99,108,117,100,101,32,60,101,114,108,95,
                 110,105,102,46,104,62,10,10,101,120,116,101,114,110,32,105,
                 110,116,32,102,111,111,40,105,110,116,32,120,41,59,10,101,
                 120,116,101,114,110,32,105,110,116,32,98,97,114,40,105,110,
                 116,32,121,41,59,10,10,115,116,97,116,105,99,32,69,82,76,95,
                 78,73,70,95,84,69,82,77,32,102,111,111,95,110,105,102,40,69,
                 114,108,78,105,102,69,110,118,42,32,101,110,118,44,32,105,
                 110,116,32,97,114,103,99,44,32,99,111,110,115,116,32,69,82,
                 76,95,78,73,70,95,84,69,82,77,32,97,114,103,118,91,93,41,10,
                 123,10,32,32,32,32,105,110,116,32,120,44,32,114,101,116,59,
                 10,32,32,32,32,105,102,32,40,33,101,110,105,102,95,103,101,
                 116,95,105,110,116,40,101,110,118,44,32,97,114,103,118,91,48,
                 93,44,32,38,120,41,41,32,123,10,9,114,101,116,117,114,110,32,
                 101,110,105,102,95,109,97,107,101,95,98,97,100,97,114,103,40,
                 101,110,118,41,59,10,32,32,32,32,125,10,32,32,32,32,114,101,
                 116,32,61,32,102,111,111,40,120,41,59,10,32,32,32,32,114,101,
                 116,117,114,110,32,101,110,105,102,95,109,97,107,101,95,105,
                 110,116,40,101,110,118,44,32,114,101,116,41,59,10,125,10,10,
                 115,116,97,116,105,99,32,69,82,76,95,78,73,70,95,84,69,82,77,
                 32,98,97,114,95,110,105,102,40,69,114,108,78,105,102,69,110,
                 118,42,32,101,110,118,44,32,105,110,116,32,97,114,103,99,44,
                 32,99,111,110,115,116,32,69,82,76,95,78,73,70,95,84,69,82,77,
                 32,97,114,103,118,91,93,41,10,123,10,32,32,32,32,105,110,116,
                 32,121,44,32,114,101,116,59,10,32,32,32,32,105,102,32,40,33,
                 101,110,105,102,95,103,101,116,95,105,110,116,40,101,110,118,
                 44,32,97,114,103,118,91,48,93,44,32,38,121,41,41,32,123,10,9,
                 114,101,116,117,114,110,32,101,110,105,102,95,109,97,107,101,
                 95,98,97,100,97,114,103,40,101,110,118,41,59,10,32,32,32,32,
                 125,10,32,32,32,32,114,101,116,32,61,32,98,97,114,40,121,41,
                 59,10,32,32,32,32,114,101,116,117,114,110,32,101,110,105,102,
                 95,109,97,107,101,95,105,110,116,40,101,110,118,44,32,114,
                 101,116,41,59,10,125,10,10,115,116,97,116,105,99,32,69,114,
                 108,78,105,102,70,117,110,99,32,110,105,102,95,102,117,110,
                 99,115,91,93,32,61,32,123,10,32,32,32,32,123,34,102,111,111,
                 34,44,32,49,44,32,102,111,111,95,110,105,102,125,44,10,32,32,
                 32,32,123,34,98,97,114,34,44,32,49,44,32,98,97,114,95,110,
                 105,102,125,10,125,59,10,10,69,82,76,95,78,73,70,95,73,78,73,
                 84,40,99,111,109,112,108,101,120,54,44,32,110,105,102,95,102,
                 117,110,99,115,44,32,78,85,76,76,44,32,78,85,76,76,44,32,78,
                 85,76,76,44,32,78,85,76,76,41,10,10]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[5,72,101,114,101,44]}],0,false},
               {text,[14,42,69,82,76,95,78,73,70,95,73,78,73,84,42]},
               {sep,
                [{text,
                  [28,104,97,115,32,116,104,101,32,102,111,108,108,111,119,
                   105,110,103,32,97,114,103,117,109,101,110,116,115,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "pThe first argument must be the name of the Erlang module as a C-identifier. It will be stringified by the macro."}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,"#The second argument is the array of"}],0,false},
              {text,"\f*ErlNifFunc*"},
              {sep,
               [{text,
                 "Dstructures containing name, arity, and function pointer of each NIF."}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                "ªThe remaining arguments are pointers to callback functions that can be used to initialize the library. They are not used in this simple example, hence they are all set to"}],
              0,false},
             {text,[6,42,78,85,76,76,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "FFunction arguments and return values are represented as values of type"}],
                0,false},
               {text,[14,42,69,82,76,95,78,73,70,95,84,69,82,77,42]},
               {sep,
                [{text,
                  [22,46,32,72,101,114,101,44,32,102,117,110,99,116,105,111,
                   110,115,32,108,105,107,101]}],
                0,false},
               {text,[14,42,101,110,105,102,95,103,101,116,95,105,110,116,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,
                [15,42,101,110,105,102,95,109,97,107,101,95,105,110,116,42]},
               {sep,
                [{text,
                  "Lare used to convert between Erlang term and C-type. If the function argument"}],
                0,false},
               {text,"\t*argv[0]*"},
               {sep,
                [{text,
                  [18,105,115,32,110,111,116,32,97,110,32,105,110,116,101,103,
                   101,114,44]}],
                0,false},
               {text,[14,42,101,110,105,102,95,103,101,116,95,105,110,116,42]},
               {sep,
                [{text,
                  "5returns false, in which case it returns by throwing a"}],
                0,false},
               {text,"\b*badarg*"},
               {sep,
                [{text,
                  [15,45,101,120,99,101,112,116,105,111,110,32,119,105,116,
                   104]}],
                0,false},
               {text,
                [18,42,101,110,105,102,95,109,97,107,101,95,98,97,100,97,114,
                 103,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [24,35,35,35,35,32,82,117,110,110,105,110,103,32,116,104,101,32,
             69,120,97,109,112,108,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 1.**"},
               {sep,
                [{text,
                  [19,67,111,109,112,105,108,101,32,116,104,101,32,67,32,99,
                   111,100,101,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[7,10,117,110,105,120,62,32]},
               {text,
                "=gcc -o complex6_nif.so -fpic -shared complex.c complex6_nif.c"},
               {text,"\n\nwindows> "},
               {text,
                "8cl -LD -MD -Fe complex6_nif.dll complex.c complex6_nif.c"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 2:**"},
               {sep,
                [{text,")Start Erlang and compile the Erlang code:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,62,32]},
               {text,[3,101,114,108]},
               {text,
                [127,10,69,114,108,97,110,103,32,82,49,51,66,48,52,32,40,101,
                 114,116,115,45,53,46,55,46,53,41,32,91,54,52,45,98,105,116,
                 93,32,91,115,109,112,58,52,58,52,93,32,91,114,113,58,52,93,
                 32,91,97,115,121,110,99,45,116,104,114,101,97,100,115,58,48,
                 93,32,91,107,101,114,110,101,108,45,112,111,108,108,58,102,
                 97,108,115,101,93,10,10,69,115,104,101,108,108,32,86,53,46,
                 55,46,53,32,32,40,97,98,111,114,116,32,119,105,116,104,32,94,
                 71,41,10,49,62,32]},
               {text,"\fc(complex6)."},
               {text,
                [14,10,123,111,107,44,99,111,109,112,108,101,120,54,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\v**Step 3:**"},
               {sep,
                [{text,
                  [16,82,117,110,32,116,104,101,32,101,120,97,109,112,108,101,
                   58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,51,62,32]},
               {text,
                [16,99,111,109,112,108,101,120,54,58,102,111,111,40,51,41,46]},
               {text,[6,10,52,10,52,62,32]},
               {text,
                [16,99,111,109,112,108,101,120,54,58,98,97,114,40,53,41,46]},
               {text,[7,10,49,48,10,53,62,32]},
               {text,
                [31,99,111,109,112,108,101,120,54,58,102,111,111,40,34,110,
                 111,116,32,97,110,32,105,110,116,101,103,101,114,34,41,46]},
               {text,
                "t\n** exception error: bad argument\n     in function  complex6:foo/1\n        called as comlpex6:foo(\"not an integer\")\n"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false}],
     0,false}],
   0,false},
  null,null],
 0,false}
