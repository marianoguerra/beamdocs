{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,32,69,114,108,95,73,110,116,101,114,102,97,99,101]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "GThis section outlines an example of how to solve the example problem in"}],
            0,false},
           {text,
            [26,91,80,114,111,98,108,101,109,32,69,120,97,109,112,108,101,93,
             40,101,120,97,109,112,108,101,41]},
           {sep,
            [{text,
              "Nby using a port and Erl_Interface. It is necessary to read the port example in"}],
            0,false},
           {text,[15,91,80,111,114,116,115,93,40,99,95,112,111,114,116,41]},
           {sep,
            [{text,
              [28,98,101,102,111,114,101,32,114,101,97,100,105,110,103,32,116,
               104,105,115,32,115,101,99,116,105,111,110,46]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [17,35,35,32,69,114,108,97,110,103,32,80,114,111,103,114,97,109]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "wThe following example shows an Erlang program communicating with a C program over a plain port with home made encoding:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [1043,10,10,45,109,111,100,117,108,101,40,99,111,109,112,108,101,
              120,49,41,46,10,45,101,120,112,111,114,116,40,91,115,116,97,114,
              116,47,49,44,32,115,116,111,112,47,48,44,32,105,110,105,116,47,
              49,93,41,46,10,45,101,120,112,111,114,116,40,91,102,111,111,47,
              49,44,32,98,97,114,47,49,93,41,46,10,10,115,116,97,114,116,40,
              69,120,116,80,114,103,41,32,45,62,10,32,32,32,32,115,112,97,119,
              110,40,63,77,79,68,85,76,69,44,32,105,110,105,116,44,32,91,69,
              120,116,80,114,103,93,41,46,10,115,116,111,112,40,41,32,45,62,
              10,32,32,32,32,99,111,109,112,108,101,120,32,33,32,115,116,111,
              112,46,10,10,102,111,111,40,88,41,32,45,62,10,32,32,32,32,99,97,
              108,108,95,112,111,114,116,40,123,102,111,111,44,32,88,125,41,
              46,10,98,97,114,40,89,41,32,45,62,10,32,32,32,32,99,97,108,108,
              95,112,111,114,116,40,123,98,97,114,44,32,89,125,41,46,10,10,99,
              97,108,108,95,112,111,114,116,40,77,115,103,41,32,45,62,10,32,
              32,32,32,99,111,109,112,108,101,120,32,33,32,123,99,97,108,108,
              44,32,115,101,108,102,40,41,44,32,77,115,103,125,44,10,32,32,32,
              32,114,101,99,101,105,118,101,10,9,123,99,111,109,112,108,101,
              120,44,32,82,101,115,117,108,116,125,32,45,62,10,9,32,32,32,32,
              82,101,115,117,108,116,10,32,32,32,32,101,110,100,46,10,10,105,
              110,105,116,40,69,120,116,80,114,103,41,32,45,62,10,32,32,32,32,
              114,101,103,105,115,116,101,114,40,99,111,109,112,108,101,120,
              44,32,115,101,108,102,40,41,41,44,10,32,32,32,32,112,114,111,99,
              101,115,115,95,102,108,97,103,40,116,114,97,112,95,101,120,105,
              116,44,32,116,114,117,101,41,44,10,32,32,32,32,80,111,114,116,
              32,61,32,111,112,101,110,95,112,111,114,116,40,123,115,112,97,
              119,110,44,32,69,120,116,80,114,103,125,44,32,91,123,112,97,99,
              107,101,116,44,32,50,125,93,41,44,10,32,32,32,32,108,111,111,
              112,40,80,111,114,116,41,46,10,10,108,111,111,112,40,80,111,114,
              116,41,32,45,62,10,32,32,32,32,114,101,99,101,105,118,101,10,9,
              123,99,97,108,108,44,32,67,97,108,108,101,114,44,32,77,115,103,
              125,32,45,62,10,9,32,32,32,32,80,111,114,116,32,33,32,123,115,
              101,108,102,40,41,44,32,123,99,111,109,109,97,110,100,44,32,101,
              110,99,111,100,101,40,77,115,103,41,125,125,44,10,9,32,32,32,32,
              114,101,99,101,105,118,101,10,9,9,123,80,111,114,116,44,32,123,
              100,97,116,97,44,32,68,97,116,97,125,125,32,45,62,10,9,9,32,32,
              32,32,67,97,108,108,101,114,32,33,32,123,99,111,109,112,108,101,
              120,44,32,100,101,99,111,100,101,40,68,97,116,97,41,125,10,9,32,
              32,32,32,101,110,100,44,10,9,32,32,32,32,108,111,111,112,40,80,
              111,114,116,41,59,10,9,115,116,111,112,32,45,62,10,9,32,32,32,
              32,80,111,114,116,32,33,32,123,115,101,108,102,40,41,44,32,99,
              108,111,115,101,125,44,10,9,32,32,32,32,114,101,99,101,105,118,
              101,10,9,9,123,80,111,114,116,44,32,99,108,111,115,101,100,125,
              32,45,62,10,9,9,32,32,32,32,101,120,105,116,40,110,111,114,109,
              97,108,41,10,9,32,32,32,32,101,110,100,59,10,9,123,39,69,88,73,
              84,39,44,32,80,111,114,116,44,32,82,101,97,115,111,110,125,32,
              45,62,10,9,32,32,32,32,101,120,105,116,40,112,111,114,116,95,
              116,101,114,109,105,110,97,116,101,100,41,10,32,32,32,32,101,
              110,100,46,10,10,101,110,99,111,100,101,40,123,102,111,111,44,
              32,88,125,41,32,45,62,32,91,49,44,32,88,93,59,10,101,110,99,111,
              100,101,40,123,98,97,114,44,32,89,125,41,32,45,62,32,91,50,44,
              32,89,93,46,10,10,100,101,99,111,100,101,40,91,73,110,116,93,41,
              32,45,62,32,73,110,116,46,10]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "[There are two differences when using Erl_Interface on the C side compared to the example in"}],
             0,false},
            {text,[15,91,80,111,114,116,115,93,40,99,95,112,111,114,116,41]},
            {sep,
             [{text,
               [28,44,32,117,115,105,110,103,32,111,110,108,121,32,116,104,
                101,32,112,108,97,105,110,32,112,111,114,116,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {text,
         "cAs Erl_Interface operates on the Erlang external term format, the port must be set to use binaries."}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,"5Instead of inventing an encoding/decoding scheme, the"}],
           0,false},
          {text,
           [18,42,116,101,114,109,95,116,111,95,98,105,110,97,114,121,47,49,
            42]},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,
           [18,42,98,105,110,97,114,121,95,116,111,95,116,101,114,109,47,49,
            42]},
          {sep,
           [{text,
             [20,66,73,70,115,32,97,114,101,32,116,111,32,98,101,32,117,115,
              101,100,46]}],
           0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\bThat is:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"*\nopen_port({spawn, ExtPrg}, [{packet, 2}])"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [17,105,115,32,114,101,112,108,97,99,101,100,32,119,105,116,104,
              58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"2\nopen_port({spawn, ExtPrg}, [{packet, 2}, binary])"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,[4,65,110,100,58]}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "t\nPort ! {self(), {command, encode(Msg)}},\nreceive\n  {Port, {data, Data}} ->\n    Caller ! {complex, decode(Data)}\nend"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [17,105,115,32,114,101,112,108,97,99,101,100,32,119,105,116,104,
              58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [132,10,80,111,114,116,32,33,32,123,115,101,108,102,40,41,44,32,
              123,99,111,109,109,97,110,100,44,32,116,101,114,109,95,116,111,
              95,98,105,110,97,114,121,40,77,115,103,41,125,125,44,10,114,101,
              99,101,105,118,101,10,32,32,123,80,111,114,116,44,32,123,100,97,
              116,97,44,32,68,97,116,97,125,125,32,45,62,10,32,32,32,32,67,97,
              108,108,101,114,32,33,32,123,99,111,109,112,108,101,120,44,32,
              98,105,110,97,114,121,95,116,111,95,116,101,114,109,40,68,97,
              116,97,41,125,10,101,110,100]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+The resulting Erlang program is as follows:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [987,10,10,45,109,111,100,117,108,101,40,99,111,109,112,108,101,
              120,50,41,46,10,45,101,120,112,111,114,116,40,91,115,116,97,114,
              116,47,49,44,32,115,116,111,112,47,48,44,32,105,110,105,116,47,
              49,93,41,46,10,45,101,120,112,111,114,116,40,91,102,111,111,47,
              49,44,32,98,97,114,47,49,93,41,46,10,10,115,116,97,114,116,40,
              69,120,116,80,114,103,41,32,45,62,10,32,32,32,32,115,112,97,119,
              110,40,63,77,79,68,85,76,69,44,32,105,110,105,116,44,32,91,69,
              120,116,80,114,103,93,41,46,10,115,116,111,112,40,41,32,45,62,
              10,32,32,32,32,99,111,109,112,108,101,120,32,33,32,115,116,111,
              112,46,10,10,102,111,111,40,88,41,32,45,62,10,32,32,32,32,99,97,
              108,108,95,112,111,114,116,40,123,102,111,111,44,32,88,125,41,
              46,10,98,97,114,40,89,41,32,45,62,10,32,32,32,32,99,97,108,108,
              95,112,111,114,116,40,123,98,97,114,44,32,89,125,41,46,10,10,99,
              97,108,108,95,112,111,114,116,40,77,115,103,41,32,45,62,10,32,
              32,32,32,99,111,109,112,108,101,120,32,33,32,123,99,97,108,108,
              44,32,115,101,108,102,40,41,44,32,77,115,103,125,44,10,32,32,32,
              32,114,101,99,101,105,118,101,10,9,123,99,111,109,112,108,101,
              120,44,32,82,101,115,117,108,116,125,32,45,62,10,9,32,32,32,32,
              82,101,115,117,108,116,10,32,32,32,32,101,110,100,46,10,10,105,
              110,105,116,40,69,120,116,80,114,103,41,32,45,62,10,32,32,32,32,
              114,101,103,105,115,116,101,114,40,99,111,109,112,108,101,120,
              44,32,115,101,108,102,40,41,41,44,10,32,32,32,32,112,114,111,99,
              101,115,115,95,102,108,97,103,40,116,114,97,112,95,101,120,105,
              116,44,32,116,114,117,101,41,44,10,32,32,32,32,80,111,114,116,
              32,61,32,111,112,101,110,95,112,111,114,116,40,123,115,112,97,
              119,110,44,32,69,120,116,80,114,103,125,44,32,91,123,112,97,99,
              107,101,116,44,32,50,125,44,32,98,105,110,97,114,121,93,41,44,
              10,32,32,32,32,108,111,111,112,40,80,111,114,116,41,46,10,10,
              108,111,111,112,40,80,111,114,116,41,32,45,62,10,32,32,32,32,
              114,101,99,101,105,118,101,10,9,123,99,97,108,108,44,32,67,97,
              108,108,101,114,44,32,77,115,103,125,32,45,62,10,9,32,32,32,32,
              80,111,114,116,32,33,32,123,115,101,108,102,40,41,44,32,123,99,
              111,109,109,97,110,100,44,32,116,101,114,109,95,116,111,95,98,
              105,110,97,114,121,40,77,115,103,41,125,125,44,10,9,32,32,32,32,
              114,101,99,101,105,118,101,10,9,9,123,80,111,114,116,44,32,123,
              100,97,116,97,44,32,68,97,116,97,125,125,32,45,62,10,9,9,32,32,
              32,32,67,97,108,108,101,114,32,33,32,123,99,111,109,112,108,101,
              120,44,32,98,105,110,97,114,121,95,116,111,95,116,101,114,109,
              40,68,97,116,97,41,125,10,9,32,32,32,32,101,110,100,44,10,9,32,
              32,32,32,108,111,111,112,40,80,111,114,116,41,59,10,9,115,116,
              111,112,32,45,62,10,9,32,32,32,32,80,111,114,116,32,33,32,123,
              115,101,108,102,40,41,44,32,99,108,111,115,101,125,44,10,9,32,
              32,32,32,114,101,99,101,105,118,101,10,9,9,123,80,111,114,116,
              44,32,99,108,111,115,101,100,125,32,45,62,10,9,9,32,32,32,32,
              101,120,105,116,40,110,111,114,109,97,108,41,10,9,32,32,32,32,
              101,110,100,59,10,9,123,39,69,88,73,84,39,44,32,80,111,114,116,
              44,32,82,101,97,115,111,110,125,32,45,62,10,9,32,32,32,32,101,
              120,105,116,40,112,111,114,116,95,116,101,114,109,105,110,97,
              116,101,100,41,10,32,32,32,32,101,110,100,46,10]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [19,78,111,116,105,99,101,32,116,104,97,116,32,99,97,108,108,
                105,110,103]}],
             0,false},
            {text,
             [16,42,99,111,109,112,108,101,120,50,58,102,111,111,47,49,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[16,42,99,111,109,112,108,101,120,50,58,98,97,114,47,49,42]},
            {sep,
             [{text,
               [20,114,101,115,117,108,116,115,32,105,110,32,116,104,101,32,
                116,117,112,108,101]}],
             0,false},
            {text,"\t*{foo,X}*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\t*{bar,Y}*"},
            {sep,
             [{text,
               [17,98,101,105,110,103,32,115,101,110,116,32,116,111,32,116,
                104,101]}],
             0,false},
            {text,"\t*complex*"},
            {sep,
             [{text,
               [136,112,114,111,99,101,115,115,44,32,119,104,105,99,104,32,99,
                111,100,101,115,32,116,104,101,109,32,97,115,32,98,105,110,97,
                114,105,101,115,32,97,110,100,32,115,101,110,100,115,32,116,
                104,101,109,32,116,111,32,116,104,101,32,112,111,114,116,46,
                32,84,104,105,115,32,109,101,97,110,115,32,116,104,97,116,32,
                116,104,101,32,67,32,112,114,111,103,114,97,109,32,109,117,
                115,116,32,98,101,32,97,98,108,101,32,116,111,32,104,97,110,
                100,108,101,32,116,104,101,115,101,32,116,119,111,32,116,117,
                112,108,101,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f## C Program"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "wThe following example shows a C program communicating with an Erlang program over a plain port with home made encoding:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [316,10,10,47,42,32,112,111,114,116,46,99,32,42,47,10,10,116,121,
             112,101,100,101,102,32,117,110,115,105,103,110,101,100,32,99,104,
             97,114,32,98,121,116,101,59,10,10,105,110,116,32,109,97,105,110,
             40,41,32,123,10,32,32,105,110,116,32,102,110,44,32,97,114,103,44,
             32,114,101,115,59,10,32,32,98,121,116,101,32,98,117,102,91,49,48,
             48,93,59,10,10,32,32,119,104,105,108,101,32,40,114,101,97,100,95,
             99,109,100,40,98,117,102,41,32,62,32,48,41,32,123,10,32,32,32,32,
             102,110,32,61,32,98,117,102,91,48,93,59,10,32,32,32,32,97,114,
             103,32,61,32,98,117,102,91,49,93,59,10,32,32,32,32,10,32,32,32,
             32,105,102,32,40,102,110,32,61,61,32,49,41,32,123,10,32,32,32,32,
             32,32,114,101,115,32,61,32,102,111,111,40,97,114,103,41,59,10,32,
             32,32,32,125,32,101,108,115,101,32,105,102,32,40,102,110,32,61,
             61,32,50,41,32,123,10,32,32,32,32,32,32,114,101,115,32,61,32,98,
             97,114,40,97,114,103,41,59,10,32,32,32,32,125,10,10,32,32,32,32,
             98,117,102,91,48,93,32,61,32,114,101,115,59,10,32,32,32,32,119,
             114,105,116,101,95,99,109,100,40,98,117,102,44,32,49,41,59,10,32,
             32,125,10,125,10,32,32,32,32,32,32,10]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [28,67,111,109,112,97,114,101,100,32,116,111,32,116,104,101,32,
               67,32,112,114,111,103,114,97,109,32,105,110]}],
            0,false},
           {text,[15,91,80,111,114,116,115,93,40,99,95,112,111,114,116,41]},
           {sep,[{text," , using only the plain port, the"}],0,false},
           {text,[7,42,119,104,105,108,101,42]},
           {sep,
            [{text,
              "|-loop must be rewritten. Messages coming from the port is on the Erlang external term format. They must be converted into an"}],
            0,false},
           {text,[7,42,69,84,69,82,77,42]},
           {sep,
            [{text,
              "Lstruct, which is a C struct similar to an Erlang term. The result of calling"}],
            0,false},
           {text,[7,42,102,111,111,40,41,42]},
           {sep,[{text,[2,111,114]}],0,false},
           {text,[7,42,98,97,114,40,41,42]},
           {sep,
            [{text,
              "´must be converted to the Erlang external term format before being sent back to the port. But before calling any other Erl_Interface function, the memory handling must be initiated:"}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [19,10,101,114,108,95,105,110,105,116,40,78,85,76,76,44,32,48,41,
             59]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [24,84,104,101,32,102,111,108,108,111,119,105,110,103,32,102,
               117,110,99,116,105,111,110,115,44]}],
            0,false},
           {text,"\f*read_cmd()*"},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,"\r*write_cmd()*"},
           {sep,[{text,"\n, from the"}],0,false},
           {text,"\f*erl_comm.c*"},
           {sep,[{text,"\nexample in"}],0,false},
           {text,[15,91,80,111,114,116,115,93,40,99,95,112,111,114,116,41]},
           {sep,
            [{text,
              ";can still be used for reading from and writing to the port:"}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [733,10,10,47,42,32,101,114,108,95,99,111,109,109,46,99,32,42,47,
             10,10,116,121,112,101,100,101,102,32,117,110,115,105,103,110,101,
             100,32,99,104,97,114,32,98,121,116,101,59,10,10,114,101,97,100,
             95,99,109,100,40,98,121,116,101,32,42,98,117,102,41,10,123,10,32,
             32,105,110,116,32,108,101,110,59,10,10,32,32,105,102,32,40,114,
             101,97,100,95,101,120,97,99,116,40,98,117,102,44,32,50,41,32,33,
             61,32,50,41,10,32,32,32,32,114,101,116,117,114,110,40,45,49,41,
             59,10,32,32,108,101,110,32,61,32,40,98,117,102,91,48,93,32,60,60,
             32,56,41,32,124,32,98,117,102,91,49,93,59,10,32,32,114,101,116,
             117,114,110,32,114,101,97,100,95,101,120,97,99,116,40,98,117,102,
             44,32,108,101,110,41,59,10,125,10,10,119,114,105,116,101,95,99,
             109,100,40,98,121,116,101,32,42,98,117,102,44,32,105,110,116,32,
             108,101,110,41,10,123,10,32,32,98,121,116,101,32,108,105,59,10,
             10,32,32,108,105,32,61,32,40,108,101,110,32,62,62,32,56,41,32,38,
             32,48,120,102,102,59,10,32,32,119,114,105,116,101,95,101,120,97,
             99,116,40,38,108,105,44,32,49,41,59,10,32,32,10,32,32,108,105,32,
             61,32,108,101,110,32,38,32,48,120,102,102,59,10,32,32,119,114,
             105,116,101,95,101,120,97,99,116,40,38,108,105,44,32,49,41,59,10,
             10,32,32,114,101,116,117,114,110,32,119,114,105,116,101,95,101,
             120,97,99,116,40,98,117,102,44,32,108,101,110,41,59,10,125,10,10,
             114,101,97,100,95,101,120,97,99,116,40,98,121,116,101,32,42,98,
             117,102,44,32,105,110,116,32,108,101,110,41,10,123,10,32,32,105,
             110,116,32,105,44,32,103,111,116,61,48,59,10,10,32,32,100,111,32,
             123,10,32,32,32,32,105,102,32,40,40,105,32,61,32,114,101,97,100,
             40,48,44,32,98,117,102,43,103,111,116,44,32,108,101,110,45,103,
             111,116,41,41,32,60,61,32,48,41,10,32,32,32,32,32,32,114,101,116,
             117,114,110,40,105,41,59,10,32,32,32,32,103,111,116,32,43,61,32,
             105,59,10,32,32,125,32,119,104,105,108,101,32,40,103,111,116,60,
             108,101,110,41,59,10,10,32,32,114,101,116,117,114,110,40,108,101,
             110,41,59,10,125,10,10,119,114,105,116,101,95,101,120,97,99,116,
             40,98,121,116,101,32,42,98,117,102,44,32,105,110,116,32,108,101,
             110,41,10,123,10,32,32,105,110,116,32,105,44,32,119,114,111,116,
             101,32,61,32,48,59,10,10,32,32,100,111,32,123,10,32,32,32,32,105,
             102,32,40,40,105,32,61,32,119,114,105,116,101,40,49,44,32,98,117,
             102,43,119,114,111,116,101,44,32,108,101,110,45,119,114,111,116,
             101,41,41,32,60,61,32,48,41,10,32,32,32,32,32,32,114,101,116,117,
             114,110,32,40,105,41,59,10,32,32,32,32,119,114,111,116,101,32,43,
             61,32,105,59,10,32,32,125,32,119,104,105,108,101,32,40,119,114,
             111,116,101,60,108,101,110,41,59,10,10,32,32,114,101,116,117,114,
             110,32,40,108,101,110,41,59,10,125,10]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"\fThe function"}],0,false},
           {text,[14,42,101,114,108,95,100,101,99,111,100,101,40,41,42]},
           {sep,[{text,[4,102,114,111,109]}],0,false},
           {text,"\r*erl_marshal*"},
           {sep,[{text,"\econverts the binary into an"}],0,false},
           {text,[7,42,69,84,69,82,77,42]},
           {sep,[{text,[7,115,116,114,117,99,116,58]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "[\nint main() {\n  ETERM *tuplep;\n\n  while (read_cmd(buf) > 0) {\n    tuplep = erl_decode(buf);"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,[5,72,101,114,101,44]}],0,false},
           {text,"\b*tuplep*"},
           {sep,[{text,"\fpoints to an"}],0,false},
           {text,[7,42,69,84,69,82,77,42]},
           {sep,
            [{text,
              "vstruct representing a tuple with two elements; the function name (atom) and the argument (integer). Using the function"}],
            0,false},
           {text,[15,42,101,114,108,95,101,108,101,109,101,110,116,40,41,42]},
           {sep,[{text,[4,102,114,111,109]}],0,false},
           {text,"\v*erl_eterm*"},
           {sep,
            [{text,
              "S, these elements can be extracted, but they must also be declared as pointers to an"}],
            0,false},
           {text,[7,42,69,84,69,82,77,42]},
           {sep,[{text,[7,115,116,114,117,99,116,58]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "E\n    fnp = erl_element(1, tuplep);\n    argp = erl_element(2, tuplep);"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"\nThe macros"}],0,false},
           {text,[14,42,69,82,76,95,65,84,79,77,95,80,84,82,42]},
           {sep,[{text,[3,97,110,100]}],0,false},
           {text,[15,42,69,82,76,95,73,78,84,95,86,65,76,85,69,42]},
           {sep,[{text,[4,102,114,111,109]}],0,false},
           {text,"\v*erl_eterm*"},
           {sep,
            [{text,
              "Ócan be used to obtain the actual values of the atom and the integer. The atom value is represented as a string. By comparing this value with the strings \"foo\" and \"bar\", it can be decided which function to call:"}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "Ã\n    if (strncmp(ERL_ATOM_PTR(fnp), \"foo\", 3) == 0) {\n      res = foo(ERL_INT_VALUE(argp));\n    } else if (strncmp(ERL_ATOM_PTR(fnp), \"bar\", 3) == 0) {\n      res = bar(ERL_INT_VALUE(argp));\n    }"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,[6,78,111,119,32,97,110]}],0,false},
           {text,[7,42,69,84,69,82,77,42]},
           {sep,
            [{text,
              "Ostruct that represents the integer result can be constructed using the function"}],
            0,false},
           {text,[14,42,101,114,108,95,109,107,95,105,110,116,40,41,42]},
           {sep,[{text,[4,102,114,111,109]}],0,false},
           {text,"\v*erl_eterm*"},
           {sep,
            [{text,[14,46,32,84,104,101,32,102,117,110,99,116,105,111,110]}],
            0,false},
           {text,[14,42,101,114,108,95,102,111,114,109,97,116,40,41,42]},
           {sep,
            [{text,
              [15,102,114,111,109,32,116,104,101,32,109,111,100,117,108,101]}],
            0,false},
           {text,"\f*erl_format*"},
           {sep,
            [{text,
              [17,99,97,110,32,97,108,115,111,32,98,101,32,117,115,101,100,
               58]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [28,10,32,32,32,32,105,110,116,112,32,61,32,101,114,108,95,109,
             107,95,105,110,116,40,114,101,115,41,59]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"\rThe resulting"}],0,false},
           {text,[7,42,69,84,69,82,77,42]},
           {sep,
            [{text,
              "Kstruct is converted into the Erlang external term format using the function"}],
            0,false},
           {text,[14,42,101,114,108,95,101,110,99,111,100,101,40,41,42]},
           {sep,[{text,[4,102,114,111,109]}],0,false},
           {text,"\r*erl_marshal*"},
           {sep,
            [{text,
              [24,97,110,100,32,115,101,110,116,32,116,111,32,69,114,108,97,
               110,103,32,117,115,105,110,103]}],
            0,false},
           {text,"\r*write_cmd()*"},
           {sep,[{text,[1,58]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "D\n    erl_encode(intp, buf);\n    write_cmd(buf, erl_eterm_len(intp));"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"$Finally, the memory allocated by the"}],0,false},
           {text,[7,42,69,84,69,82,77,42]},
           {sep,[{text,"!creating functions must be freed:"}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "i\n    erl_free_compound(tuplep);\n    erl_free_term(fnp);\n    erl_free_term(argp);\n    erl_free_term(intp);"}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&The resulting C program is as follows:"}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [765,10,10,47,42,32,101,105,46,99,32,42,47,10,10,35,105,110,99,
             108,117,100,101,32,34,101,114,108,95,105,110,116,101,114,102,97,
             99,101,46,104,34,10,35,105,110,99,108,117,100,101,32,34,101,105,
             46,104,34,10,10,116,121,112,101,100,101,102,32,117,110,115,105,
             103,110,101,100,32,99,104,97,114,32,98,121,116,101,59,10,10,105,
             110,116,32,109,97,105,110,40,41,32,123,10,32,32,69,84,69,82,77,
             32,42,116,117,112,108,101,112,44,32,42,105,110,116,112,59,10,32,
             32,69,84,69,82,77,32,42,102,110,112,44,32,42,97,114,103,112,59,
             10,32,32,105,110,116,32,114,101,115,59,10,32,32,98,121,116,101,
             32,98,117,102,91,49,48,48,93,59,10,32,32,108,111,110,103,32,97,
             108,108,111,99,97,116,101,100,44,32,102,114,101,101,100,59,10,10,
             32,32,101,114,108,95,105,110,105,116,40,78,85,76,76,44,32,48,41,
             59,10,10,32,32,119,104,105,108,101,32,40,114,101,97,100,95,99,
             109,100,40,98,117,102,41,32,62,32,48,41,32,123,10,32,32,32,32,
             116,117,112,108,101,112,32,61,32,101,114,108,95,100,101,99,111,
             100,101,40,98,117,102,41,59,10,32,32,32,32,102,110,112,32,61,32,
             101,114,108,95,101,108,101,109,101,110,116,40,49,44,32,116,117,
             112,108,101,112,41,59,10,32,32,32,32,97,114,103,112,32,61,32,101,
             114,108,95,101,108,101,109,101,110,116,40,50,44,32,116,117,112,
             108,101,112,41,59,10,32,32,32,32,10,32,32,32,32,105,102,32,40,
             115,116,114,110,99,109,112,40,69,82,76,95,65,84,79,77,95,80,84,
             82,40,102,110,112,41,44,32,34,102,111,111,34,44,32,51,41,32,61,
             61,32,48,41,32,123,10,32,32,32,32,32,32,114,101,115,32,61,32,102,
             111,111,40,69,82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,103,
             112,41,41,59,10,32,32,32,32,125,32,101,108,115,101,32,105,102,32,
             40,115,116,114,110,99,109,112,40,69,82,76,95,65,84,79,77,95,80,
             84,82,40,102,110,112,41,44,32,34,98,97,114,34,44,32,51,41,32,61,
             61,32,48,41,32,123,10,32,32,32,32,32,32,114,101,115,32,61,32,98,
             97,114,40,69,82,76,95,73,78,84,95,86,65,76,85,69,40,97,114,103,
             112,41,41,59,10,32,32,32,32,125,10,10,32,32,32,32,105,110,116,
             112,32,61,32,101,114,108,95,109,107,95,105,110,116,40,114,101,
             115,41,59,10,32,32,32,32,101,114,108,95,101,110,99,111,100,101,
             40,105,110,116,112,44,32,98,117,102,41,59,10,32,32,32,32,119,114,
             105,116,101,95,99,109,100,40,98,117,102,44,32,101,114,108,95,116,
             101,114,109,95,108,101,110,40,105,110,116,112,41,41,59,10,10,32,
             32,32,32,101,114,108,95,102,114,101,101,95,99,111,109,112,111,
             117,110,100,40,116,117,112,108,101,112,41,59,10,32,32,32,32,101,
             114,108,95,102,114,101,101,95,116,101,114,109,40,102,110,112,41,
             59,10,32,32,32,32,101,114,108,95,102,114,101,101,95,116,101,114,
             109,40,97,114,103,112,41,59,10,32,32,32,32,101,114,108,95,102,
             114,101,101,95,116,101,114,109,40,105,110,116,112,41,59,10,32,32,
             125,10,125,10,32,32,32,32,32,32,10]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,82,117,110,110,105,110,103,32,116,104,101,32,69,120,97,
        109,112,108,101]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"\v**Step 1.**"},
          {sep,
           [{text,
             "@Compile the C code. This provides the paths to the include files"}],
           0,false},
          {text,
           [17,42,101,114,108,95,105,110,116,101,114,102,97,99,101,46,104,42]},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,[6,42,101,105,46,104,42]},
          {sep,[{text,"\e, and also to the libraries"}],0,false},
          {text,[15,42,101,114,108,95,105,110,116,101,114,102,97,99,101,42]},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,[4,42,101,105,42]},
          {sep,[{text,[1,58]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[7,10,117,110,105,120,62,32]},
          {text,
           "Bgcc -o extprg -I/usr/local/otp/lib/erl_interface-3.9.2/include \\\\ "},
          {text,[1,10]},
          {text,"6      -L/usr/local/otp/lib/erl_interface-3.9.2/lib \\\\ "},
          {text,[1,10]},
          {text,
           ">      complex.c erl_comm.c ei.c -lerl_interface -lei -lpthread"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,"0In Erlang/OTP R5B and later versions of OTP, the"}],
           0,false},
          {text,"\t*include*"},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,[5,42,108,105,98,42]},
          {sep,
           [{text,
             [30,100,105,114,101,99,116,111,114,105,101,115,32,97,114,101,32,
              115,105,116,117,97,116,101,100,32,117,110,100,101,114]}],
           0,false},
          {text,
           [31,42,79,84,80,82,79,79,84,47,108,105,98,47,101,114,108,95,105,
            110,116,101,114,102,97,99,101,45,86,83,78,42]},
          {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
          {text,"\t*OTPROOT*"},
          {sep,
           [{text,"/is the root directory of the OTP installation ("}],
           0,false},
          {text,[16,42,47,117,115,114,47,108,111,99,97,108,47,111,116,112,42]},
          {sep,
           [{text,
             [26,105,110,32,116,104,101,32,114,101,99,101,110,116,32,101,120,
              97,109,112,108,101,41,32,97,110,100]}],
           0,false},
          {text,[5,42,86,83,78,42]},
          {sep,
           [{text,
             "Nis the version of the Erl_interface application (3.2.1 in the recent example)."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"#In R4B and earlier versions of OTP,"}],0,false},
          {text,"\t*include*"},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,[5,42,108,105,98,42]},
          {sep,
           [{text,
             [18,97,114,101,32,115,105,116,117,97,116,101,100,32,117,110,100,
              101,114]}],
           0,false},
          {text,"\r*OTPROOT/usr*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"\v**Step 2.**"},
          {sep,[{text,")Start Erlang and compile the Erlang code:"}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[7,10,117,110,105,120,62,32]},
          {text,[3,101,114,108]},
          {text,
           "L\nErlang (BEAM) emulator version 4.9.1.2\n\nEshell V4.9.1.2 (abort with ^G)\n1> "},
          {text,"\fc(complex2)."},
          {text,[14,10,123,111,107,44,99,111,109,112,108,101,120,50,125]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"\v**Step 3.**"},
          {sep,
           [{text,
             [16,82,117,110,32,116,104,101,32,101,120,97,109,112,108,101,58]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,[4,10,50,62,32]},
          {text,"\ecomplex2:start(\"./extprg\")."},
          {text,[1,10]},
          {text,"\f<0.34.0>\n3> "},
          {text,[16,99,111,109,112,108,101,120,50,58,102,111,111,40,51,41,46]},
          {text,[6,10,52,10,52,62,32]},
          {text,[16,99,111,109,112,108,101,120,50,58,98,97,114,40,53,41,46]},
          {text,[7,10,49,48,10,53,62,32]},
          {text,
           [18,99,111,109,112,108,101,120,50,58,98,97,114,40,51,53,50,41,46]},
          {text,"\b\n704\n6> "},
          {text,
           [16,99,111,109,112,108,101,120,50,58,115,116,111,112,40,41,46]},
          {text,[5,10,115,116,111,112]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}}],
  0,false}}
