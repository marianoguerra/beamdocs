{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [21,35,32,103,101,110,95,101,118,101,110,116,32,66,101,104,97,
               118,105,111,117,114]},
             null},
            null}},
          {text,"!<a name=\"gen_event\">gen_event</a>"}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,[{text,"#This section is to be read with the"}],0,false},
                {text,[14,42,103,101,110,95,101,118,101,110,116,40,51,41,42]},
                {sep,
                 [{text,
                   "dmanual page in STDLIB, where all interface functions and callback functions are described in detail."}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [28,35,35,32,69,118,101,110,116,32,72,97,110,100,108,105,110,
               103,32,80,114,105,110,99,105,112,108,101,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\nIn OTP, an"}],0,false},
                 {text,
                  [17,42,42,101,118,101,110,116,32,109,97,110,97,103,101,114,
                   42,42]},
                 {sep,
                  [{text,
                    "1is a named object to which events can be sent. An"}],
                  0,false},
                 {text,"\t**event**"},
                 {sep,
                  [{text,
                    "Rcan be, for example, an error, an alarm, or some information that is to be logged."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,"(In the event manager, zero, one, or many"}],
                  0,false},
                 {text,
                  [18,42,42,101,118,101,110,116,32,104,97,110,100,108,101,114,
                   115,42,42]},
                 {sep,
                  [{text,
                    [473,97,114,101,32,105,110,115,116,97,108,108,101,100,46,
                     32,87,104,101,110,32,116,104,101,32,101,118,101,110,116,
                     32,109,97,110,97,103,101,114,32,105,115,32,110,111,116,
                     105,102,105,101,100,32,97,98,111,117,116,32,97,110,32,
                     101,118,101,110,116,44,32,116,104,101,32,101,118,101,110,
                     116,32,105,115,32,112,114,111,99,101,115,115,101,100,32,
                     98,121,32,97,108,108,32,116,104,101,32,105,110,115,116,
                     97,108,108,101,100,32,101,118,101,110,116,32,104,97,110,
                     100,108,101,114,115,46,32,70,111,114,32,101,120,97,109,
                     112,108,101,44,32,97,110,32,101,118,101,110,116,32,109,
                     97,110,97,103,101,114,32,102,111,114,32,104,97,110,100,
                     108,105,110,103,32,101,114,114,111,114,115,32,99,97,110,
                     32,98,121,32,100,101,102,97,117,108,116,32,104,97,118,
                     101,32,97,32,104,97,110,100,108,101,114,32,105,110,115,
                     116,97,108,108,101,100,44,32,119,104,105,99,104,32,119,
                     114,105,116,101,115,32,101,114,114,111,114,32,109,101,
                     115,115,97,103,101,115,32,116,111,32,116,104,101,32,116,
                     101,114,109,105,110,97,108,46,32,73,102,32,116,104,101,
                     32,101,114,114,111,114,32,109,101,115,115,97,103,101,115,
                     32,100,117,114,105,110,103,32,97,32,99,101,114,116,97,
                     105,110,32,112,101,114,105,111,100,32,105,115,32,116,111,
                     32,98,101,32,115,97,118,101,100,32,116,111,32,97,32,102,
                     105,108,101,32,97,115,32,119,101,108,108,44,32,116,104,
                     101,32,117,115,101,114,32,97,100,100,115,32,97,110,111,
                     116,104,101,114,32,101,118,101,110,116,32,104,97,110,100,
                     108,101,114,32,116,104,97,116,32,100,111,101,115,32,116,
                     104,105,115,46,32,87,104,101,110,32,108,111,103,103,105,
                     110,103,32,116,111,32,116,104,101,32,102,105,108,101,32,
                     105,115,32,110,111,32,108,111,110,103,101,114,32,110,101,
                     99,101,115,115,97,114,121,44,32,116,104,105,115,32,101,
                     118,101,110,116,32,104,97,110,100,108,101,114,32,105,115,
                     32,100,101,108,101,116,101,100,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "hAn event manager is implemented as a process and each event handler is implemented as a callback module."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "1The event manager essentially maintains a list of"}],
                  0,false},
                 {text,
                  [17,42,123,77,111,100,117,108,101,44,32,83,116,97,116,101,
                   125,42]},
                 {sep,
                  [{text,
                    [17,112,97,105,114,115,44,32,119,104,101,114,101,32,101,
                     97,99,104]}],
                  0,false},
                 {text,"\b*Module*"},
                 {sep,
                  [{text,
                    [24,105,115,32,97,110,32,101,118,101,110,116,32,104,97,
                     110,100,108,101,114,44,32,97,110,100]}],
                  0,false},
                 {text,[7,42,83,116,97,116,101,42]},
                 {sep,
                  [{text,",is the internal state of that event handler."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,{above,{text,"\n## Example"},null},null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "eThe callback module for the event handler writing error messages to the terminal can look as follows:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [263,10,45,109,111,100,117,108,101,40,116,101,114,109,105,
                  110,97,108,95,108,111,103,103,101,114,41,46,10,45,98,101,
                  104,97,118,105,111,117,114,40,103,101,110,95,101,118,101,
                  110,116,41,46,10,10,45,101,120,112,111,114,116,40,91,105,
                  110,105,116,47,49,44,32,104,97,110,100,108,101,95,101,118,
                  101,110,116,47,50,44,32,116,101,114,109,105,110,97,116,101,
                  47,50,93,41,46,10,10,105,110,105,116,40,95,65,114,103,115,
                  41,32,45,62,10,32,32,32,32,123,111,107,44,32,91,93,125,46,
                  10,10,104,97,110,100,108,101,95,101,118,101,110,116,40,69,
                  114,114,111,114,77,115,103,44,32,83,116,97,116,101,41,32,45,
                  62,10,32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,
                  42,42,42,69,114,114,111,114,42,42,42,32,126,112,126,110,34,
                  44,32,91,69,114,114,111,114,77,115,103,93,41,44,10,32,32,32,
                  32,123,111,107,44,32,83,116,97,116,101,125,46,10,10,116,101,
                  114,109,105,110,97,116,101,40,95,65,114,103,115,44,32,95,83,
                  116,97,116,101,41,32,45,62,10,32,32,32,32,111,107,46]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "_The callback module for the event handler writing error messages to a file can look as follows:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [302,10,45,109,111,100,117,108,101,40,102,105,108,101,95,108,
                  111,103,103,101,114,41,46,10,45,98,101,104,97,118,105,111,
                  117,114,40,103,101,110,95,101,118,101,110,116,41,46,10,10,
                  45,101,120,112,111,114,116,40,91,105,110,105,116,47,49,44,
                  32,104,97,110,100,108,101,95,101,118,101,110,116,47,50,44,
                  32,116,101,114,109,105,110,97,116,101,47,50,93,41,46,10,10,
                  105,110,105,116,40,70,105,108,101,41,32,45,62,10,32,32,32,
                  32,123,111,107,44,32,70,100,125,32,61,32,102,105,108,101,58,
                  111,112,101,110,40,70,105,108,101,44,32,114,101,97,100,41,
                  44,10,32,32,32,32,123,111,107,44,32,70,100,125,46,10,10,104,
                  97,110,100,108,101,95,101,118,101,110,116,40,69,114,114,111,
                  114,77,115,103,44,32,70,100,41,32,45,62,10,32,32,32,32,105,
                  111,58,102,111,114,109,97,116,40,70,100,44,32,34,42,42,42,
                  69,114,114,111,114,42,42,42,32,126,112,126,110,34,44,32,91,
                  69,114,114,111,114,77,115,103,93,41,44,10,32,32,32,32,123,
                  111,107,44,32,70,100,125,46,10,10,116,101,114,109,105,110,
                  97,116,101,40,95,65,114,103,115,44,32,70,100,41,32,45,62,10,
                  32,32,32,32,102,105,108,101,58,99,108,111,115,101,40,70,100,
                  41,46]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,"+The code is explained in the next sections."}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}},
      {sep,
       [{text,
         [21,60,97,32,110,97,109,101,61,34,109,103,114,34,62,109,103,114,60,
          47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [28,35,35,32,83,116,97,114,116,105,110,103,32,97,110,32,69,118,
             101,110,116,32,77,97,110,97,103,101,114]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "qTo start an event manager for handling errors, as described in the previous example, call the following function:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,")\ngen_event:start_link({local, error_man})"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "BThis function spawns and links to a new process, an event manager."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rThe argument,"}],0,false},
               {text,
                [20,42,123,108,111,99,97,108,44,32,101,114,114,111,114,95,109,
                 97,110,125,42]},
               {sep,
                [{text,
                  "Cspecifies the name. The event manager is then locally registered as"}],
                0,false},
               {text,"\v*error_man*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "xIf the name is omitted, the event manager is not registered. Instead its pid must be used. The name can also be given as"}],
                0,false},
               {text,
                [16,42,123,103,108,111,98,97,108,44,32,78,97,109,101,125,42]},
               {sep,
                [{text,
                  "5, in which case the event manager is registered using"}],
                0,false},
               {text,
                [24,42,103,108,111,98,97,108,58,114,101,103,105,115,116,101,
                 114,95,110,97,109,101,47,50,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [22,42,103,101,110,95,101,118,101,110,116,58,115,116,97,114,
                 116,95,108,105,110,107,42]},
               {sep,
                [{text,
                  "}must be used if the event manager is part of a supervision tree, that is, started by a supervisor. There is another function,"}],
                0,false},
               {text,
                [17,42,103,101,110,95,101,118,101,110,116,58,115,116,97,114,
                 116,42]},
               {sep,
                [{text,
                  "h, to start a standalone event manager, that is, an event manager that is not part of a supervision tree."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [26,35,35,32,65,100,100,105,110,103,32,97,110,32,69,118,101,110,
            116,32,72,97,110,100,108,101,114]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "lThe following example shows how to start an event manager and add an event handler to it by using the shell:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[4,10,49,62,32]},
              {text,"$gen_event:start({local, error_man})."},
              {text,[5,10,123,111,107,44]},
              {text,"\r<0.31.0>}\n2> "},
              {text,"6gen_event:add_handler(error_man, terminal_logger, [])."},
              {text,[3,10,111,107]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "@This function sends a message to the event manager registered as"}],
               0,false},
              {text,"\v*error_man*"},
              {sep,[{text,"%, telling it to add the event handler"}],0,false},
              {text,
               [17,42,116,101,114,109,105,110,97,108,95,108,111,103,103,101,
                114,42]},
              {sep,
               [{text,"/. The event manager calls the callback function"}],
               0,false},
              {text,
               [26,42,116,101,114,109,105,110,97,108,95,108,111,103,103,101,
                114,58,105,110,105,116,40,91,93,41,42]},
              {sep,
               [{text,
                 [20,44,32,119,104,101,114,101,32,116,104,101,32,97,114,103,
                  117,109,101,110,116]}],
               0,false},
              {text,[4,42,91,93,42]},
              {sep,
               [{text,
                 [24,105,115,32,116,104,101,32,116,104,105,114,100,32,97,114,
                  103,117,109,101,110,116,32,116,111]}],
               0,false},
              {text,"\r*add_handler*"},
              {sep,[{text,[1,46]}],0,false},
              {text,[6,42,105,110,105,116,42]},
              {sep,
               [{text,
                 [21,105,115,32,101,120,112,101,99,116,101,100,32,116,111,32,
                  114,101,116,117,114,110]}],
               0,false},
              {text,"\r*{ok, State}*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[7,42,83,116,97,116,101,42]},
              {sep,
               [{text,"+is the internal state of the event handler."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [29,10,105,110,105,116,40,95,65,114,103,115,41,32,45,62,10,32,
                32,32,32,123,111,107,44,32,91,93,125,46]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,72,101,114,101,44]}],0,false},
              {text,[6,42,105,110,105,116,42]},
              {sep,
               [{text,
                 ":does not need any input data and ignores its argument. For"}],
               0,false},
              {text,
               [17,42,116,101,114,109,105,110,97,108,95,108,111,103,103,101,
                114,42]},
              {sep,[{text,"%, the internal state is not used. For"}],0,false},
              {text,"\r*file_logger*"},
              {sep,
               [{text,
                 ">, the internal state is used to save the open file descriptor."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "B\ninit(File) ->\n    {ok, Fd} = file:open(File, read),\n    {ok, Fd}."}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [25,35,35,32,78,111,116,105,102,121,105,110,103,32,97,98,111,117,
           116,32,69,118,101,110,116,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[4,10,51,62,32]},
             {text,"&gen_event:notify(error_man, no_reply)."},
             {text,
              [24,10,42,42,42,69,114,114,111,114,42,42,42,32,110,111,95,114,
               101,112,108,121,10,111,107]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\v*error_man*"},
             {sep,[{text,"$is the name of the event manager and"}],0,false},
             {text,"\n*no_reply*"},
             {sep,[{text,"\ris the event."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "sThe event is made into a message and sent to the event manager. When the event is received, the event manager calls"}],
              0,false},
             {text,
              [28,42,104,97,110,100,108,101,95,101,118,101,110,116,40,69,118,
               101,110,116,44,32,83,116,97,116,101,41,42]},
             {sep,
              [{text,
                "rfor each installed event handler, in the same order as they were added. The function is expected to return a tuple"}],
              0,false},
             {text,"\r*{ok,State1}*"},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,"\b*State1*"},
             {sep,
              [{text,"2is a new value for the state of the event handler."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,110]}],0,false},
             {text,
              [17,42,116,101,114,109,105,110,97,108,95,108,111,103,103,101,
               114,42]},
             {sep,[{text,[1,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "a\nhandle_event(ErrorMsg, State) ->\n    io:format(\"***Error*** ~p~n\", [ErrorMsg]),\n    {ok, State}."}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,110]}],0,false},
             {text,"\r*file_logger*"},
             {sep,[{text,[1,58]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "_\nhandle_event(ErrorMsg, Fd) ->\n    io:format(Fd, \"***Error*** ~p~n\", [ErrorMsg]),\n    {ok, Fd}."}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [28,35,35,32,68,101,108,101,116,105,110,103,32,97,110,32,69,118,101,
          110,116,32,72,97,110,100,108,101,114]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,52,62,32]},
            {text,
             "9gen_event:delete_handler(error_man, terminal_logger, [])."},
            {text,[3,10,111,107]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "@This function sends a message to the event manager registered as"}],
             0,false},
            {text,"\v*error_man*"},
            {sep,[{text,"(, telling it to delete the event handler"}],0,false},
            {text,
             [17,42,116,101,114,109,105,110,97,108,95,108,111,103,103,101,114,
              42]},
            {sep,
             [{text,"/. The event manager calls the callback function"}],
             0,false},
            {text,"&*terminal_logger:terminate([], State)*"},
            {sep,
             [{text,
               [20,44,32,119,104,101,114,101,32,116,104,101,32,97,114,103,117,
                109,101,110,116]}],
             0,false},
            {text,[4,42,91,93,42]},
            {sep,
             [{text,
               [24,105,115,32,116,104,101,32,116,104,105,114,100,32,97,114,
                103,117,109,101,110,116,32,116,111]}],
             0,false},
            {text,
             [16,42,100,101,108,101,116,101,95,104,97,110,100,108,101,114,42]},
            {sep,[{text,[1,46]}],0,false},
            {text,"\v*terminate*"},
            {sep,
             [{text,
               [24,105,115,32,116,111,32,98,101,32,116,104,101,32,111,112,112,
                111,115,105,116,101,32,111,102]}],
             0,false},
            {text,[6,42,105,110,105,116,42]},
            {sep,
             [{text,
               ">and do any necessary cleaning up. Its return value is ignored."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,70,111,114]}],0,false},
            {text,
             [17,42,116,101,114,109,105,110,97,108,95,108,111,103,103,101,114,
              42]},
            {sep,
             [{text,
               [30,44,32,110,111,32,99,108,101,97,110,105,110,103,32,117,112,
                32,105,115,32,110,101,99,101,115,115,97,114,121,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"$\nterminate(_Args, _State) ->\n    ok."}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,70,111,114]}],0,false},
            {text,"\r*file_logger*"},
            {sep,
             [{text,
               [31,44,32,116,104,101,32,102,105,108,101,32,100,101,115,99,114,
                105,112,116,111,114,32,111,112,101,110,101,100,32,105,110]}],
             0,false},
            {text,[6,42,105,110,105,116,42]},
            {sep,
             [{text,
               [15,109,117,115,116,32,98,101,32,99,108,111,115,101,100,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,",\nterminate(_Args, Fd) ->\n    file:close(Fd)."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v## Stopping"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "qWhen an event manager is stopped, it gives each of the installed event handlers the chance to clean up by calling"}],
            0,false},
           {text,"\r*terminate/2*"},
           {sep,
            [{text,"*, the same way as when deleting a handler."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [24,35,35,32,73,110,32,97,32,83,117,112,101,114,118,105,115,105,111,
           110,32,84,114,101,101]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "¹If the event manager is part of a supervision tree, no stop function is needed. The event manager is automatically terminated by its supervisor. Exactly how this is done is defined by a"}],
              0,false},
             {text,")[shutdown strategy](./sup_princ#shutdown)"},
             {sep,
              [{text,
                [22,115,101,116,32,105,110,32,116,104,101,32,115,117,112,101,
                 114,118,105,115,111,114,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [28,35,35,32,83,116,97,110,100,97,108,111,110,101,32,69,118,101,110,
           116,32,77,97,110,97,103,101,114,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"0An event manager can also be stopped by calling:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,[3,10,62,32]},
             {text,
              [26,103,101,110,95,101,118,101,110,116,58,115,116,111,112,40,
               101,114,114,111,114,95,109,97,110,41,46]},
             {text,[3,10,111,107]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,72,97,110,100,108,105,110,103,32,79,116,104,101,114,32,77,
        101,115,115,97,103,101,115]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[6,73,102,32,116,104,101]}],0,false},
          {text,"\v*gen_event*"},
          {sep,
           [{text,
             "Jis to be able to receive other messages than events, the callback function"}],
           0,false},
          {text,")*handle_info(Info, StateName, StateData)*"},
          {sep,
           [{text,
             "Xmust be implemented to handle them. Examples of other messages are exit messages, if the"}],
           0,false},
          {text,"\v*gen_event*"},
          {sep,
           [{text,
             "Mis linked to other processes (than the supervisor) and trapping exit signals."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "c\nhandle_info({'EXIT', Pid, Reason}, State) ->\n    ..code to handle exits here..\n    {ok, NewState}."}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[3,84,104,101]}],0,false},
          {text,"\r*code_change*"},
          {sep,[{text," method must also be implemented."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "r\ncode_change(OldVsn, State, Extra) ->\n    ..code to convert state (and more) during code change\n    {ok, NewState}"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}}],
  0,false}}
