{sep,
 [{above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {text,
      [29,35,32,71,101,116,116,105,110,103,32,83,116,97,114,116,101,100,32,
       119,105,116,104,32,69,114,108,97,110,103]},
     null},
    null}},
  null,
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {text,
      [29,35,32,71,101,116,116,105,110,103,32,83,116,97,114,116,101,100,32,
       119,105,116,104,32,69,114,108,97,110,103]},
     null},
    null}},
  null,
  {sep,
   [{sep,
     [{text,"-<a name=\"getting started\">getting started</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [383,84,104,105,115,32,115,101,99,116,105,111,110,32,105,115,
                 32,97,32,113,117,105,99,107,32,115,116,97,114,116,32,116,117,
                 116,111,114,105,97,108,32,116,111,32,103,101,116,32,121,111,
                 117,32,115,116,97,114,116,101,100,32,119,105,116,104,32,69,
                 114,108,97,110,103,46,32,69,118,101,114,121,116,104,105,110,
                 103,32,105,110,32,116,104,105,115,32,115,101,99,116,105,111,
                 110,32,105,115,32,116,114,117,101,44,32,98,117,116,32,111,
                 110,108,121,32,112,97,114,116,32,111,102,32,116,104,101,32,
                 116,114,117,116,104,46,32,70,111,114,32,101,120,97,109,112,
                 108,101,44,32,111,110,108,121,32,116,104,101,32,115,105,109,
                 112,108,101,115,116,32,102,111,114,109,32,111,102,32,116,104,
                 101,32,115,121,110,116,97,120,32,105,115,32,115,104,111,119,
                 110,44,32,110,111,116,32,97,108,108,32,101,115,111,116,101,
                 114,105,99,32,102,111,114,109,115,46,32,65,108,115,111,44,32,
                 112,97,114,116,115,32,116,104,97,116,32,97,114,101,32,103,
                 114,101,97,116,108,121,32,115,105,109,112,108,105,102,105,
                 101,100,32,97,114,101,32,105,110,100,105,99,97,116,101,100,
                 32,119,105,116,104,32,92,42,109,97,110,117,97,108,92,42,46,
                 32,84,104,105,115,32,109,101,97,110,115,32,116,104,97,116,32,
                 97,32,108,111,116,32,109,111,114,101,32,105,110,102,111,114,
                 109,97,116,105,111,110,32,111,110,32,116,104,101,32,115,117,
                 98,106,101,99,116,32,105,115,32,116,111,32,98,101,32,102,111,
                 117,110,100,32,105,110,32,116,104,101,32,69,114,108,97,110,
                 103,32,98,111,111,107,32,111,114,32,105,110]}],
              0,false},
             {text,
              "Q[Erlang Reference Manual](../doc/reference_manual/introduction#erlang ref manual)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [18,35,35,35,35,32,80,114,101,114,101,113,117,105,115,105,116,101,
             115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "HThe reader of this section is assumed to be familiar with the following:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {text,
            [20,67,111,109,112,117,116,101,114,115,32,105,110,32,103,101,110,
             101,114,97,108]}],
          0,false},
         {sep,
          [{text,[1,42]},{text,"&Basics on how computers are programmed"}],
          0,false}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,79,109,105,116,116,101,100,32,84,111,112,105,
             99,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "5The following topics are not treated in this section:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {sep,[{text,[1,42]},{text,"\vReferences."}],0,false},
                 {sep,
                  [{text,[1,42]},
                   {text,"#Local error handling (catch/throw)."}],
                  0,false}},
                {sep,
                 [{text,[1,42]},{text,"!Single direction links (monitor)."}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {text,"0Handling of binary data (binaries / bit syntax)."}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {text,
                 [20,76,105,115,116,32,99,111,109,112,114,101,104,101,110,115,
                  105,111,110,115,46]}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,
                    "oHow to communicate with the outside world and software written in other languages (ports); this is described in"}],
                  0,false},
                 {text,
                  "S[Interoperability Tutorial](../doc/tutorial/introduction#interoperability tutorial)"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {text,".Erlang libraries (for example, file handling)."}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {text,"-OTP and (in consequence) the Mnesia database."}],
            0,false}},
          {sep,
           [{text,[1,42]},{text,"#Hash tables for Erlang terms (ETS)."}],
           0,false}},
         {sep,
          [{text,[1,42]},{text,"!Changing code in running systems."}],
          0,false}}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,84,104,101,32,69,114,108,97,110,103,32,83,104,
             101,108,108]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ïMost operating systems have a command interpreter or shell, UNIX and Linux have many, Windows has the command prompt. Erlang has its own shell where bits of Erlang code can be written directly, and be evaluated to see what happens (see the"}],
                0,false},
               {text,
                [19,91,115,104,101,108,108,40,51,41,93,40,46,47,115,104,101,
                 108,108,41]},
               {sep,
                [{text,
                  [23,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   83,84,68,76,73,66,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "xStart the Erlang shell (in Linux or UNIX) by starting a shell or command interpreter in your operating system and typing"}],
                0,false},
               {text,[5,42,101,114,108,42]},
               {sep,[{text,"#. You will see something like this."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,37,32]},
               {text,[3,101,114,108]},
               {text,
                [131,10,69,114,108,97,110,103,32,82,49,53,66,32,40,101,114,
                 116,115,45,53,46,57,46,49,41,32,91,115,111,117,114,99,101,93,
                 32,91,115,109,112,58,56,58,56,93,32,91,114,113,58,56,93,32,
                 91,97,115,121,110,99,45,116,104,114,101,97,100,115,58,48,93,
                 32,91,104,105,112,101,93,32,91,107,101,114,110,101,108,45,
                 112,111,108,108,58,102,97,108,115,101,93,10,10,69,115,104,
                 101,108,108,32,86,53,46,57,46,49,32,32,40,97,98,111,114,116,
                 32,119,105,116,104,32,94,71,41,10,49,62]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "µType \"2 + 5.\" in the shell and then press Enter (carriage return). Notice that you tell the shell you are done entering code by finishing with a full stop \".\" and a carriage return."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,[6,50,32,43,32,53,46]},
               {text,[5,10,55,10,50,62]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [276,65,115,32,115,104,111,119,110,44,32,116,104,101,32,69,
                   114,108,97,110,103,32,115,104,101,108,108,32,110,117,109,
                   98,101,114,115,32,116,104,101,32,108,105,110,101,115,32,
                   116,104,97,116,32,99,97,110,32,98,101,32,101,110,116,101,
                   114,101,100,44,32,40,97,115,32,49,62,32,50,62,41,32,97,110,
                   100,32,116,104,97,116,32,105,116,32,99,111,114,114,101,99,
                   116,108,121,32,115,97,121,115,32,116,104,97,116,32,50,32,
                   43,32,53,32,105,115,32,55,46,32,73,102,32,121,111,117,32,
                   109,97,107,101,32,119,114,105,116,105,110,103,32,109,105,
                   115,116,97,107,101,115,32,105,110,32,116,104,101,32,115,
                   104,101,108,108,44,32,121,111,117,32,99,97,110,32,100,101,
                   108,101,116,101,32,119,105,116,104,32,116,104,101,32,98,97,
                   99,107,115,112,97,99,101,32,107,101,121,44,32,97,115,32,
                   105,110,32,109,111,115,116,32,115,104,101,108,108,115,46,
                   32,84,104,101,114,101,32,97,114,101,32,109,97,110,121,32,
                   109,111,114,101,32,101,100,105,116,105,110,103,32,99,111,
                   109,109,97,110,100,115,32,105,110,32,116,104,101,32,115,
                   104,101,108,108,32,40,115,101,101]}],
                0,false},
               {text,"'[tty - A command line interface](./tty)"},
               {sep,
                [{text,
                  [22,105,110,32,69,82,84,83,32,85,115,101,114,39,115,32,71,
                   117,105,100,101,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "±(Notice that many line numbers given by the shell in the following examples are out of sequence. This is because this tutorial was written and code-tested in separate sessions)."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"'Here is a bit more complex calculation:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,50,62,32]},
               {text,
                [19,40,52,50,32,43,32,55,55,41,32,42,32,54,54,32,47,32,51,46]},
               {text,[7,10,50,54,49,56,46,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "yNotice the use of brackets, the multiplication operator \"\\*\", and the division operator \"/\", as in normal arithmetic (see"}],
                0,false},
               {text,
                [28,91,69,120,112,114,101,115,115,105,111,110,115,93,40,46,47,
                 101,120,112,114,101,115,115,105,111,110,115,41]},
               {sep,[{text,[2,41,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "DPress Control-C to shut down the Erlang system and the Erlang shell."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [30,84,104,101,32,102,111,108,108,111,119,105,110,103,32,111,
                 117,116,112,117,116,32,105,115,32,115,104,111,119,110,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "j\nBREAK: (a)bort (c)ontinue (p)roc info (i)nfo (l)oaded\n       (v)ersion (k)ill (D)b-tables (d)istribution\n"},
               {text,[1,97]},
               {text,[2,10,37]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"$Type \"a\" to leave the Erlang system."}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "9Another way to shut down the Erlang system is by entering"}],
                0,false},
               {text,"\b*halt()*"},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,51,62,32]},
               {text,[7,104,97,108,116,40,41,46]},
               {text,[3,10,37,32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [26,35,35,35,35,32,77,111,100,117,108,101,115,32,97,110,100,32,70,
             117,110,99,116,105,111,110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [141,65,32,112,114,111,103,114,97,109,109,105,110,103,32,
                   108,97,110,103,117,97,103,101,32,105,115,32,110,111,116,32,
                   109,117,99,104,32,117,115,101,32,105,102,32,121,111,117,32,
                   111,110,108,121,32,99,97,110,32,114,117,110,32,99,111,100,
                   101,32,102,114,111,109,32,116,104,101,32,115,104,101,108,
                   108,46,32,83,111,32,104,101,114,101,32,105,115,32,97,32,
                   115,109,97,108,108,32,69,114,108,97,110,103,32,112,114,111,
                   103,114,97,109,46,32,69,110,116,101,114,32,105,116,32,105,
                   110,116,111,32,97,32,102,105,108,101,32,110,97,109,101,
                   100]}],
                0,false},
               {text,"\t*tut.erl*"},
               {sep,
                [{text,"+using a suitable text editor. The file name"}],
                0,false},
               {text,"\t*tut.erl*"},
               {sep,
                [{text,
                  "Tis important, and also that it is in the same directory as the one where you started"}],
                0,false},
               {text,[5,42,101,114,108,42]},
               {sep,
                [{text,
                  "y). If you are lucky your editor has an Erlang mode that makes it easier for you to enter and format your code nicely (see"}],
                0,false},
               {text,"2[The Erlang mode for Emacs](./erlang_mode_chapter)"},
               {sep,
                [{text,
                  "]in Tools User's Guide), but you can manage perfectly well without. Here is the code to enter:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "<\n-module(tut).\n-export([double/1]).\n\ndouble(X) ->\n    2 * X."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÎIt is not hard to guess that this program doubles the value of numbers. The first two lines of the code are described later. Let us compile the program. This can be done in an Erlang shell as follows, where"}],
                0,false},
               {text,[3,42,99,42]},
               {sep,
                [{text,
                  [14,109,101,97,110,115,32,99,111,109,112,105,108,101,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,51,62,32]},
               {text,[7,99,40,116,117,116,41,46]},
               {text,"\t\n{ok,tut}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,"\n*{ok,tut}*"},
               {sep,
                [{text,
                  "õmeans that the compilation is OK. If it says \"error\" it means that there is some mistake in the text that you entered. Additional error messages gives an idea to what is wrong so you can modify the text and then try to compile the program again."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [20,78,111,119,32,114,117,110,32,116,104,101,32,112,114,111,
                 103,114,97,109,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,52,62,32]},
               {text,
                [15,116,117,116,58,100,111,117,98,108,101,40,49,48,41,46]},
               {text,[3,10,50,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text," As expected, double of 10 is 20."}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "zNow let us get back to the first two lines of the code. Erlang programs are written in files. Each file contains an Erlang"}],
                0,false},
               {text,"\n**module**"},
               {sep,
                [{text,
                  ">. The first line of code in the module is the module name (see"}],
                0,false},
               {text,
                [20,91,77,111,100,117,108,101,115,93,40,46,47,109,111,100,117,
                 108,101,115,41]},
               {sep,[{text,[2,41,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[14,10,45,109,111,100,117,108,101,40,116,117,116,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [26,84,104,117,115,44,32,116,104,101,32,109,111,100,117,108,
                   101,32,105,115,32,99,97,108,108,101,100]}],
                0,false},
               {text,[7,42,42,116,117,116,42,42]},
               {sep,
                [{text,
                  "Â. Notice the full stop \".\" at the end of the line. The files which are used to store the module must have the same name as the module but with the extension \".erl\". In this case the file name is"}],
                0,false},
               {text,"\t*tut.erl*"},
               {sep,
                [{text,
                  "5. When using a function in another module, the syntax"}],
                0,false},
               {text,"&*module_name:function_name(arguments)*"},
               {sep,
                [{text,"-is used. So the following means call function"}],
                0,false},
               {text,"\b*double*"},
               {sep,[{text,"\tin module"}],0,false},
               {text,[5,42,116,117,116,42]},
               {sep,
                [{text,
                  [19,119,105,116,104,32,97,114,103,117,109,101,110,116,32,34,
                   49,48,34,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,52,62,32]},
               {text,
                [15,116,117,116,58,100,111,117,98,108,101,40,49,48,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"$The second line says that the module"}],0,false},
               {text,[5,42,116,117,116,42]},
               {sep,
                [{text,
                  [26,99,111,110,116,97,105,110,115,32,97,32,102,117,110,99,
                   116,105,111,110,32,99,97,108,108,101,100]}],
                0,false},
               {text,"\b*double*"},
               {sep,
                [{text,
                  [28,44,32,119,104,105,99,104,32,116,97,107,101,115,32,111,
                   110,101,32,97,114,103,117,109,101,110,116,32,40]}],
                0,false},
               {text,[3,42,88,42]},
               {sep,
                [{text,
                  [16,105,110,32,111,117,114,32,101,120,97,109,112,108,101,41,
                   58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [21,10,45,101,120,112,111,114,116,40,91,100,111,117,98,108,
                 101,47,49,93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "RThe second line also says that this function can be called from outside the module"}],
                0,false},
               {text,[5,42,116,117,116,42]},
               {sep,
                [{text,
                  "F. More about this later. Again, notice the \".\" at the end of the line."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [132,78,111,119,32,102,111,114,32,97,32,109,111,114,101,32,99,
                 111,109,112,108,105,99,97,116,101,100,32,101,120,97,109,112,
                 108,101,44,32,116,104,101,32,102,97,99,116,111,114,105,97,
                 108,32,111,102,32,97,32,110,117,109,98,101,114,46,32,70,111,
                 114,32,101,120,97,109,112,108,101,44,32,116,104,101,32,102,
                 97,99,116,111,114,105,97,108,32,111,102,32,52,32,105,115,32,
                 52,32,92,42,32,51,32,92,42,32,50,32,92,42,32,49,44,32,119,
                 104,105,99,104,32,101,113,117,97,108,115,32,50,52,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(Enter the following code in a file named"}],
                0,false},
               {text,"\n*tut1.erl*"},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Q\n-module(tut1).\n-export([fac/1]).\n\nfac(1) ->\n    1;\nfac(N) ->\n    N * fac(N - 1)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\eSo this is a module, called"}],0,false},
               {text,[6,42,116,117,116,49,42]},
               {sep,
                [{text,
                  [31,116,104,97,116,32,99,111,110,116,97,105,110,115,32,97,
                   32,102,117,110,99,116,105,111,110,32,99,97,108,108,101,
                   100]}],
                0,false},
               {text,[6,42,102,97,99,62,42]},
               {sep,[{text,"\e, which takes one argument,"}],0,false},
               {text,[3,42,78,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"2The first part says that the factorial of 1 is 1.:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [17,10,102,97,99,40,49,41,32,45,62,10,32,32,32,32,49,59]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "aNotice that this part ends with a semicolon \";\" that indicates that there is more of the function"}],
                0,false},
               {text,[6,42,102,97,99,62,42]},
               {sep,[{text,"\bto come."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "WThe second part says that the factorial of N is N multiplied by the factorial of N - 1:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [30,10,102,97,99,40,78,41,32,45,62,10,32,32,32,32,78,32,42,32,
                 102,97,99,40,78,32,45,32,49,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "[Notice that this part ends with a \".\" saying that there are no more parts of this function."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [17,67,111,109,112,105,108,101,32,116,104,101,32,102,105,108,
                 101,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,53,62,32]},
               {text,"\bc(tut1)."},
               {text,"\n\n{ok,tut1}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"%And now calculate the factorial of 4."}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,54,62,32]},
               {text,"\ftut1:fac(4)."},
               {text,[3,10,50,52]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [17,72,101,114,101,32,116,104,101,32,102,117,110,99,116,105,
                   111,110]}],
                0,false},
               {text,[6,42,102,97,99,62,42]},
               {sep,[{text,"\tin module"}],0,false},
               {text,[6,42,116,117,116,49,42]},
               {sep,
                [{text,
                  [23,105,115,32,99,97,108,108,101,100,32,119,105,116,104,32,
                   97,114,103,117,109,101,110,116]}],
                0,false},
               {text,[3,42,52,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "<A function can have many arguments. Let us expand the module"}],
                0,false},
               {text,[6,42,116,117,116,49,42]},
               {sep,
                [{text,"*with the function to multiply two numbers:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "s\n-module(tut1).\n-export([fac/1, mult/2]).\n\nfac(1) ->\n    1;\nfac(N) ->\n    N * fac(N - 1).\n\nmult(X, Y) ->\n    X * Y."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"-Notice that it is also required to expand the"}],
                0,false},
               {text,"\t*-export*"},
               {sep,
                [{text,
                  "8line with the information that there is another function"}],
                0,false},
               {text,[6,42,109,117,108,116,42]},
               {sep,
                [{text,
                  [19,119,105,116,104,32,116,119,111,32,97,114,103,117,109,
                   101,110,116,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\bCompile:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,55,62,32]},
               {text,"\bc(tut1)."},
               {text,"\n\n{ok,tut1}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,84,114,121,32,111,117,116,32,116,104,101,32,110,101,119,
                   32,102,117,110,99,116,105,111,110]}],
                0,false},
               {text,[6,42,109,117,108,116,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,56,62,32]},
               {text,[15,116,117,116,49,58,109,117,108,116,40,51,44,52,41,46]},
               {text,[3,10,49,50]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "WIn this example the numbers are integers and the arguments in the functions in the code"}],
                0,false},
               {text,[3,42,78,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[3,42,88,42]},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[3,42,89,42]},
               {sep,
                [{text,
                  "Eare called variables. Variables must start with a capital letter (see"}],
                0,false},
               {text,
                [26,91,86,97,114,105,97,98,108,101,115,93,40,46,47,101,120,
                 112,114,101,115,115,105,111,110,115,41]},
               {sep,
                [{text,
                  [28,41,46,32,69,120,97,109,112,108,101,115,32,111,102,32,
                   118,97,114,105,97,98,108,101,115,32,97,114,101]}],
                0,false},
               {text,"\b*Number*"},
               {sep,[{text,[1,44]}],0,false},
               {text,"\n*ShoeSize*"},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[5,42,65,103,101,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\n#### Atoms"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "IAtom is another data type in Erlang. Atoms start with a small letter (see"}],
                0,false},
               {text,
                [20,91,65,116,111,109,93,40,46,47,100,97,116,97,95,116,121,
                 112,101,115,41]},
               {sep,
                [{text,
                  [15,41,44,32,102,111,114,32,101,120,97,109,112,108,101,44]}],
                0,false},
               {text,"\t*charles*"},
               {sep,[{text,[1,44]}],0,false},
               {text,"\f*centimeter*"},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[6,42,105,110,99,104,42]},
               {sep,
                [{text,
                  "\\. Atoms are simply names, nothing else. They are not like variables, which can have a value."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"&Enter the next program in a file named"}],
                0,false},
               {text,"\n*tut2.erl*"},
               {sep,
                [{text,
                  "M). It can be useful for converting from inches to centimeters and conversely:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "q\n-module(tut2).\n-export([convert/2]).\n\nconvert(M, inch) ->\n    M / 2.54;\n\nconvert(N, centimeter) ->\n    N * 2.54."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\bCompile:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,57,62,32]},
               {text,"\bc(tut2)."},
               {text,"\v\n{ok,tut2}\n"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,[{sep,[{text,[5,84,101,115,116,58]}],0,false}],0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,49,48,62,32]},
               {text,
                [22,116,117,116,50,58,99,111,110,118,101,114,116,40,51,44,32,
                 105,110,99,104,41,46]},
               {text,
                [24,10,49,46,49,56,49,49,48,50,51,54,50,50,48,52,55,50,52,51,
                 10,49,49,62,32]},
               {text,
                [28,116,117,116,50,58,99,111,110,118,101,114,116,40,55,44,32,
                 99,101,110,116,105,109,101,116,101,114,41,46]},
               {text,[6,10,49,55,46,55,56]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "wNotice the introduction of decimals (floating point numbers) without any explanation. Hopefully you can cope with that."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"/Let us see what happens if something other than"}],
                0,false},
               {text,"\f*centimeter*"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,[6,42,105,110,99,104,42]},
               {sep,
                [{text,
                  [17,105,115,32,101,110,116,101,114,101,100,32,105,110,32,
                   116,104,101]}],
                0,false},
               {text,"\t*convert*"},
               {sep,[{text,"\tfunction:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,49,50,62,32]},
               {text,
                [23,116,117,116,50,58,99,111,110,118,101,114,116,40,51,44,32,
                 109,105,108,101,115,41,46]},
               {text,
                "Y\n** exception error: no function clause matching tut2:convert(3,miles) (tut2.erl, line 4)"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [20,84,104,101,32,116,119,111,32,112,97,114,116,115,32,111,
                   102,32,116,104,101]}],
                0,false},
               {text,"\t*convert*"},
               {sep,
                [{text,"*function are called its clauses. As shown,"}],
                0,false},
               {text,[7,42,109,105,108,101,115,42]},
               {sep,
                [{text,
                  ">is not part of either of the clauses. The Erlang system cannot"}],
                0,false},
               {text,"\t**match**"},
               {sep,
                [{text,")either of the clauses so an error message"}],
                0,false},
               {text,
                [17,42,102,117,110,99,116,105,111,110,95,99,108,97,117,115,
                 101,42]},
               {sep,
                [{text,
                  [152,105,115,32,114,101,116,117,114,110,101,100,46,32,84,
                   104,101,32,115,104,101,108,108,32,102,111,114,109,97,116,
                   115,32,116,104,101,32,101,114,114,111,114,32,109,101,115,
                   115,97,103,101,32,110,105,99,101,108,121,44,32,98,117,116,
                   32,116,104,101,32,101,114,114,111,114,32,116,117,112,108,
                   101,32,105,115,32,115,97,118,101,100,32,105,110,32,116,104,
                   101,32,115,104,101,108,108,39,115,32,104,105,115,116,111,
                   114,121,32,108,105,115,116,32,97,110,100,32,99,97,110,32,
                   98,101,32,111,117,116,112,117,116,32,98,121,32,116,104,101,
                   32,115,104,101,108,108,32,99,111,109,109,97,110,100]}],
                0,false},
               {text,[5,42,118,47,49,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,49,51,62,32]},
               {text,[6,118,40,49,50,41,46]},
               {text,
                [538,10,123,39,69,88,73,84,39,44,123,102,117,110,99,116,105,
                 111,110,95,99,108,97,117,115,101,44,91,123,116,117,116,50,44,
                 99,111,110,118,101,114,116,44,10,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,91,51,44,109,105,108,101,115,93,44,10,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,91,123,102,105,108,101,44,34,116,117,
                 116,50,46,101,114,108,34,125,44,123,108,105,110,101,44,52,
                 125,93,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,123,101,114,108,95,101,
                 118,97,108,44,100,111,95,97,112,112,108,121,44,54,44,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,123,102,105,
                 108,101,44,34,101,114,108,95,101,118,97,108,46,101,114,108,
                 34,125,44,123,108,105,110,101,44,54,55,55,125,93,125,44,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,123,115,104,101,108,108,44,101,120,112,114,
                 115,44,55,44,91,123,102,105,108,101,44,34,115,104,101,108,
                 108,46,101,114,108,34,125,44,123,108,105,110,101,44,54,56,55,
                 125,93,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,123,115,104,101,108,108,
                 44,101,118,97,108,95,101,120,112,114,115,44,55,44,91,123,102,
                 105,108,101,44,34,115,104,101,108,108,46,101,114,108,34,125,
                 44,123,108,105,110,101,44,54,52,50,125,93,125,44,10,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,123,115,104,101,108,108,44,101,118,97,108,95,108,
                 111,111,112,44,51,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,91,123,102,105,108,101,44,34,115,104,101,108,108,46,101,
                 114,108,34,125,44,123,108,105,110,101,44,54,50,55,125,93,125,
                 93,125,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\v#### Tuples"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[7,78,111,119,32,116,104,101]}],0,false},
               {text,[6,42,116,117,116,50,42]},
               {sep,
                [{text,
                  "3program is hardly good programming style. Consider:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [23,10,116,117,116,50,58,99,111,110,118,101,114,116,40,51,44,
                 32,105,110,99,104,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÍDoes this mean that 3 is in inches? Or does it mean that 3 is in centimeters and is to be converted to inches? Erlang has a way to group things together to make things more understandable. These are called"}],
                0,false},
               {text,"\n**tuples**"},
               {sep,
                [{text,
                  "2and are surrounded by curly brackets, \"{\" and \"}\"."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,83,111,44]}],0,false},
               {text,"\n*{inch,3}*"},
               {sep,
                [{text,
                  [20,100,101,110,111,116,101,115,32,51,32,105,110,99,104,101,
                   115,32,97,110,100]}],
                0,false},
               {text,
                [16,42,123,99,101,110,116,105,109,101,116,101,114,44,53,125,
                 42]},
               {sep,
                [{text,
                  [147,100,101,110,111,116,101,115,32,53,32,99,101,110,116,
                   105,109,101,116,101,114,115,46,32,78,111,119,32,108,101,
                   116,32,117,115,32,119,114,105,116,101,32,97,32,110,101,119,
                   32,112,114,111,103,114,97,109,32,116,104,97,116,32,99,111,
                   110,118,101,114,116,115,32,99,101,110,116,105,109,101,116,
                   101,114,115,32,116,111,32,105,110,99,104,101,115,32,97,110,
                   100,32,99,111,110,118,101,114,115,101,108,121,46,32,69,110,
                   116,101,114,32,116,104,101,32,102,111,108,108,111,119,105,
                   110,103,32,99,111,100,101,32,105,110,32,97,32,102,105,108,
                   101,32,99,97,108,108,101,100]}],
                0,false},
               {text,"\n*tut3.erl*"},
               {sep,[{text,[2,41,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [159,10,45,109,111,100,117,108,101,40,116,117,116,51,41,46,10,
                 45,101,120,112,111,114,116,40,91,99,111,110,118,101,114,116,
                 95,108,101,110,103,116,104,47,49,93,41,46,10,10,99,111,110,
                 118,101,114,116,95,108,101,110,103,116,104,40,123,99,101,110,
                 116,105,109,101,116,101,114,44,32,88,125,41,32,45,62,10,32,
                 32,32,32,123,105,110,99,104,44,32,88,32,47,32,50,46,53,52,
                 125,59,10,99,111,110,118,101,114,116,95,108,101,110,103,116,
                 104,40,123,105,110,99,104,44,32,89,125,41,32,45,62,10,32,32,
                 32,32,123,99,101,110,116,105,109,101,116,101,114,44,32,89,32,
                 42,32,50,46,53,52,125,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [17,67,111,109,112,105,108,101,32,97,110,100,32,116,101,115,
                 116,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,49,52,62,32]},
               {text,"\bc(tut3)."},
               {text,[15,10,123,111,107,44,116,117,116,51,125,10,49,53,62,32]},
               {text,
                [31,116,117,116,51,58,99,111,110,118,101,114,116,95,108,101,
                 110,103,116,104,40,123,105,110,99,104,44,32,53,125,41,46]},
               {text,
                [23,10,123,99,101,110,116,105,109,101,116,101,114,44,49,50,46,
                 55,125,10,49,54,62,32]},
               {text,"4tut3:convert_length(tut3:convert_length({inch, 5}))."},
               {text,"\v\n{inch,5.0}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [269,78,111,116,105,99,101,32,111,110,32,108,105,110,101,32,
                   49,54,32,116,104,97,116,32,53,32,105,110,99,104,101,115,32,
                   105,115,32,99,111,110,118,101,114,116,101,100,32,116,111,
                   32,99,101,110,116,105,109,101,116,101,114,115,32,97,110,
                   100,32,98,97,99,107,32,97,103,97,105,110,32,97,110,100,32,
                   114,101,97,115,115,117,114,105,110,103,108,121,32,103,101,
                   116,32,98,97,99,107,32,116,111,32,116,104,101,32,111,114,
                   105,103,105,110,97,108,32,118,97,108,117,101,46,32,84,104,
                   97,116,32,105,115,44,32,116,104,101,32,97,114,103,117,109,
                   101,110,116,32,116,111,32,97,32,102,117,110,99,116,105,111,
                   110,32,99,97,110,32,98,101,32,116,104,101,32,114,101,115,
                   117,108,116,32,111,102,32,97,110,111,116,104,101,114,32,
                   102,117,110,99,116,105,111,110,46,32,67,111,110,115,105,
                   100,101,114,32,104,111,119,32,108,105,110,101,32,49,54,32,
                   40,97,98,111,118,101,41,32,119,111,114,107,115,46,32,84,
                   104,101,32,97,114,103,117,109,101,110,116,32,103,105,118,
                   101,110,32,116,111,32,116,104,101,32,102,117,110,99,116,
                   105,111,110]}],
                0,false},
               {text,"\n*{inch,5}*"},
               {sep,
                [{text,"1is first matched against the first head clause of"}],
                0,false},
               {text,
                [16,42,99,111,110,118,101,114,116,95,108,101,110,103,116,104,
                 42]},
               {sep,[{text,"\n, that is,"}],0,false},
               {text," *convert_length({centimeter,X})*"},
               {sep,
                [{text,
                  [21,46,32,73,116,32,99,97,110,32,98,101,32,115,101,101,110,
                   32,116,104,97,116]}],
                0,false},
               {text,
                [16,42,123,99,101,110,116,105,109,101,116,101,114,44,88,125,
                 42]},
               {sep,
                [{text,
                  [14,100,111,101,115,32,110,111,116,32,109,97,116,99,104]}],
                0,false},
               {text,"\n*{inch,5}*"},
               {sep,[{text,"\"(the head is the bit before the \"-"}],0,false},
               {sep,
                [{text,
                  "H>\"). This having failed, let us try the head of the next clause that is,"}],
                0,false},
               {text,
                [26,42,99,111,110,118,101,114,116,95,108,101,110,103,116,104,
                 40,123,105,110,99,104,44,89,125,41,42]},
               {sep,
                [{text,
                  [19,46,32,84,104,105,115,32,109,97,116,99,104,101,115,44,32,
                   97,110,100]}],
                0,false},
               {text,[3,42,89,42]},
               {sep,
                [{text,
                  [17,103,101,116,115,32,116,104,101,32,118,97,108,117,101,32,
                   53,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "dTuples can have more than two parts, in fact as many parts as you want, and contain any valid Erlang"}],
                0,false},
               {text,"\b**term**"},
               {sep,
                [{text,
                  "K. For example, to represent the temperature of various cities of the world:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "9\n{moscow, {c, -10}}\n{cape_town, {f, 70}}\n{paris, {f, 28}}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "NTuples have a fixed number of items in them. Each item in a tuple is called an"}],
                0,false},
               {text,"\v**element**"},
               {sep,
                [{text,
                  [14,46,32,73,110,32,116,104,101,32,116,117,112,108,101]}],
                0,false},
               {text,
                [18,42,123,109,111,115,99,111,119,44,123,99,44,45,49,48,125,
                 125,42]},
               {sep,
                [{text,
                  [14,44,32,101,108,101,109,101,110,116,32,49,32,105,115]}],
                0,false},
               {text,"\b*moscow*"},
               {sep,
                [{text,
                  [16,97,110,100,32,101,108,101,109,101,110,116,32,50,32,105,
                   115]}],
                0,false},
               {text,"\t*{c,-10}*"},
               {sep,[{text,[6,46,32,72,101,114,101]}],0,false},
               {text,[3,42,99,42]},
               {sep,
                [{text,
                  [22,114,101,112,114,101,115,101,110,116,115,32,67,101,108,
                   115,105,117,115,32,97,110,100]}],
                0,false},
               {text,[3,42,102,42]},
               {sep,[{text,"\vFahrenheit."}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\n#### Lists"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "äWhereas tuples group things together, it is also needed to represent lists of things. Lists in Erlang are surrounded by square brackets, \"[\" and \"]\". For example, a list of the temperatures of various cities in the world can be:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "g\n[{moscow, {c, -10}}, {cape_town, {f, 70}}, {stockholm, {c, -4}},\n {paris, {f, 28}}, {london, {f, 36}}]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÏNotice that this list was so long that it did not fit on one line. This does not matter, Erlang allows line breaks at all \"sensible places\" but not, for example, in the middle of atoms, integers, and others."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "qA useful way of looking at parts of lists, is by using \"|\". This is best explained by an example using the shell:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,49,55,62,32]},
               {text,
                [31,91,70,105,114,115,116,32,124,84,104,101,82,101,115,116,93,
                 32,61,32,91,49,44,50,44,51,44,52,44,53,93,46]},
               {text,[17,10,91,49,44,50,44,51,44,52,44,53,93,10,49,56,62,32]},
               {text,[6,70,105,114,115,116,46]},
               {text,[7,10,49,10,49,57,62,32]},
               {text,"\bTheRest."},
               {text,"\n\n[2,3,4,5]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ETo separate the first elements of the list from the rest of the list,"}],
                0,false},
               {text,[3,42,124,42]},
               {sep,[{text,"\bis used."}],0,false},
               {text,[7,42,70,105,114,115,116,42]},
               {sep,
                [{text,
                  [19,104,97,115,32,103,111,116,32,118,97,108,117,101,32,49,
                   32,97,110,100]}],
                0,false},
               {text,"\t*TheRest*"},
               {sep,
                [{text,
                  [28,104,97,115,32,103,111,116,32,116,104,101,32,118,97,108,
                   117,101,32,91,50,44,51,44,52,44,53,93,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [16,65,110,111,116,104,101,114,32,101,120,97,109,112,108,101,
                 58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,50,48,62,32]},
               {text,
                [31,91,69,49,44,32,69,50,32,124,32,82,93,32,61,32,91,49,44,50,
                 44,51,44,52,44,53,44,54,44,55,93,46]},
               {text,
                [21,10,91,49,44,50,44,51,44,52,44,53,44,54,44,55,93,10,50,49,
                 62,32]},
               {text,[3,69,49,46]},
               {text,[7,10,49,10,50,50,62,32]},
               {text,[3,69,50,46]},
               {text,[7,10,50,10,50,51,62,32]},
               {text,[2,82,46]},
               {text,"\f\n[3,4,5,6,7]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,72,101,114,101,32,121,111,117,32,115,101,101,32,116,104,
                   101,32,117,115,101,32,111,102]}],
                0,false},
               {text,[3,42,124,42]},
               {sep,
                [{text,
                  "Ôto get the first two elements from the list. If you try to get more elements from the list than there are elements in the list, an error is returned. Notice also the special case of the list with no elements, []:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,50,52,62,32]},
               {text,
                [20,91,65,44,32,66,32,124,32,67,93,32,61,32,91,49,44,32,50,93,
                 46]},
               {text,"\v\n[1,2]\n25> "},
               {text,[2,65,46]},
               {text,[7,10,49,10,50,54,62,32]},
               {text,[2,66,46]},
               {text,[7,10,50,10,50,55,62,32]},
               {text,[2,67,46]},
               {text,[3,10,91,93]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "WIn the previous examples, new variable names are used, instead of reusing the old ones:"}],
                0,false},
               {text,[7,42,70,105,114,115,116,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,"\t*TheRest*"},
               {sep,[{text,[1,44]}],0,false},
               {text,[4,42,69,49,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[4,42,69,50,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[3,42,82,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[3,42,65,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[3,42,66,42]},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[3,42,67,42]},
               {sep,
                [{text,
                  "v. The reason for this is that a variable can only be given a value once in its context (scope). More about this later."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "fThe following example shows how to find the length of a list. Enter the following code in a file named"}],
                0,false},
               {text,"\n*tut4.erl*"},
               {sep,[{text,[2,41,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [131,10,45,109,111,100,117,108,101,40,116,117,116,52,41,46,10,
                 10,45,101,120,112,111,114,116,40,91,108,105,115,116,95,108,
                 101,110,103,116,104,47,49,93,41,46,10,10,108,105,115,116,95,
                 108,101,110,103,116,104,40,91,93,41,32,45,62,10,32,32,32,32,
                 48,59,32,32,32,32,10,108,105,115,116,95,108,101,110,103,116,
                 104,40,91,70,105,114,115,116,32,124,32,82,101,115,116,93,41,
                 32,45,62,10,32,32,32,32,49,32,43,32,108,105,115,116,95,108,
                 101,110,103,116,104,40,82,101,115,116,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [17,67,111,109,112,105,108,101,32,97,110,100,32,116,101,115,
                 116,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,50,56,62,32]},
               {text,"\bc(tut4)."},
               {text,[15,10,123,111,107,44,116,117,116,52,125,10,50,57,62,32]},
               {text,"\"tut4:list_length([1,2,3,4,5,6,7])."},
               {text,[2,10,55]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\fExplanation:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [26,10,108,105,115,116,95,108,101,110,103,116,104,40,91,93,41,
                 32,45,62,10,32,32,32,32,48,59]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"+The length of an empty list is obviously 0."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                ":\nlist_length([First | Rest]) ->\n    1 + list_length(Rest)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"+The length of a list with the first element"}],
                0,false},
               {text,[7,42,70,105,114,115,116,42]},
               {sep,
                [{text,
                  [26,97,110,100,32,116,104,101,32,114,101,109,97,105,110,105,
                   110,103,32,101,108,101,109,101,110,116,115]}],
                0,false},
               {text,[6,42,82,101,115,116,42]},
               {sep,
                [{text,
                  [20,105,115,32,49,32,43,32,116,104,101,32,108,101,110,103,
                   116,104,32,111,102]}],
                0,false},
               {text,[6,42,82,101,115,116,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "b(Advanced readers only: This is not tail recursive, there is a better way to write this function.)"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÐIn general, tuples are used where \"records\" or \"structs\" are used in other languages. Also, lists are used when representing things with varying sizes, that is, where linked lists are used in other languages."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [147,69,114,108,97,110,103,32,100,111,101,115,32,110,111,
                   116,32,104,97,118,101,32,97,32,115,116,114,105,110,103,32,
                   100,97,116,97,32,116,121,112,101,46,32,73,110,115,116,101,
                   97,100,44,32,115,116,114,105,110,103,115,32,99,97,110,32,
                   98,101,32,114,101,112,114,101,115,101,110,116,101,100,32,
                   98,121,32,108,105,115,116,115,32,111,102,32,85,110,105,99,
                   111,100,101,32,99,104,97,114,97,99,116,101,114,115,46,32,
                   84,104,105,115,32,105,109,112,108,105,101,115,32,102,111,
                   114,32,101,120,97,109,112,108,101,32,116,104,97,116,32,116,
                   104,101,32,108,105,115,116]}],
                0,false},
               {text,"\f*[97,98,99]*"},
               {sep,
                [{text,
                  [159,105,115,32,101,113,117,105,118,97,108,101,110,116,32,
                   116,111,32,34,97,98,99,34,46,32,84,104,101,32,69,114,108,
                   97,110,103,32,115,104,101,108,108,32,105,115,32,34,99,108,
                   101,118,101,114,34,32,97,110,100,32,103,117,101,115,115,
                   101,115,32,119,104,97,116,32,108,105,115,116,32,121,111,
                   117,32,109,101,97,110,32,97,110,100,32,111,117,116,112,117,
                   116,115,32,105,116,32,105,110,32,119,104,97,116,32,105,116,
                   32,116,104,105,110,107,115,32,105,115,32,116,104,101,32,
                   109,111,115,116,32,97,112,112,114,111,112,114,105,97,116,
                   101,32,102,111,114,109,44,32,102,111,114,32,101,120,97,109,
                   112,108,101,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,51,48,62,32]},
               {text,"\v[97,98,99]."},
               {text,[6,10,34,97,98,99,34]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\t#### Maps"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [148,77,97,112,115,32,97,114,101,32,97,32,115,101,116,32,111,
                 102,32,107,101,121,32,116,111,32,118,97,108,117,101,32,97,
                 115,115,111,99,105,97,116,105,111,110,115,46,32,84,104,101,
                 115,101,32,97,115,115,111,99,105,97,116,105,111,110,115,32,
                 97,114,101,32,101,110,99,97,112,115,117,108,97,116,101,100,
                 32,119,105,116,104,32,34,35,123,34,32,97,110,100,32,34,125,
                 34,46,32,84,111,32,99,114,101,97,116,101,32,97,110,32,97,115,
                 115,111,99,105,97,116,105,111,110,32,102,114,111,109,32,34,
                 107,101,121,34,32,116,111,32,118,97,108,117,101,32,52,50,
                 58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"#\n> #{ \"key\" => 42 }.\n#{\"key\" => 42}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "WLet us jump straight into the deep end with an example using some interesting features."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [140,84,104,101,32,102,111,108,108,111,119,105,110,103,32,
                   101,120,97,109,112,108,101,32,115,104,111,119,115,32,104,
                   111,119,32,116,111,32,99,97,108,99,117,108,97,116,101,32,
                   97,108,112,104,97,32,98,108,101,110,100,105,110,103,32,117,
                   115,105,110,103,32,109,97,112,115,32,116,111,32,114,101,
                   102,101,114,101,110,99,101,32,99,111,108,111,114,32,97,110,
                   100,32,97,108,112,104,97,32,99,104,97,110,110,101,108,115,
                   46,32,69,110,116,101,114,32,116,104,101,32,99,111,100,101,
                   32,105,110,32,97,32,102,105,108,101,32,110,97,109,101,
                   100]}],
                0,false},
               {text,"\v*color.erl*"},
               {sep,[{text,[2,41,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [1000,10,45,109,111,100,117,108,101,40,99,111,108,111,114,41,
                 46,10,10,45,101,120,112,111,114,116,40,91,110,101,119,47,52,
                 44,32,98,108,101,110,100,47,50,93,41,46,10,10,45,100,101,102,
                 105,110,101,40,105,115,95,99,104,97,110,110,101,108,40,86,41,
                 44,32,40,105,115,95,102,108,111,97,116,40,86,41,32,97,110,
                 100,97,108,115,111,32,86,32,62,61,32,48,46,48,32,97,110,100,
                 97,108,115,111,32,86,32,61,60,32,49,46,48,41,41,46,10,10,110,
                 101,119,40,82,44,71,44,66,44,65,41,32,119,104,101,110,32,63,
                 105,115,95,99,104,97,110,110,101,108,40,82,41,44,32,63,105,
                 115,95,99,104,97,110,110,101,108,40,71,41,44,10,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,63,105,115,95,99,
                 104,97,110,110,101,108,40,66,41,44,32,63,105,115,95,99,104,
                 97,110,110,101,108,40,65,41,32,45,62,10,32,32,32,32,35,123,
                 114,101,100,32,61,62,32,82,44,32,103,114,101,101,110,32,61,
                 62,32,71,44,32,98,108,117,101,32,61,62,32,66,44,32,97,108,
                 112,104,97,32,61,62,32,65,125,46,10,10,98,108,101,110,100,40,
                 83,114,99,44,68,115,116,41,32,45,62,10,32,32,32,32,98,108,
                 101,110,100,40,83,114,99,44,68,115,116,44,97,108,112,104,97,
                 40,83,114,99,44,68,115,116,41,41,46,10,10,98,108,101,110,100,
                 40,83,114,99,44,68,115,116,44,65,108,112,104,97,41,32,119,
                 104,101,110,32,65,108,112,104,97,32,62,32,48,46,48,32,45,62,
                 10,32,32,32,32,68,115,116,35,123,10,32,32,32,32,32,32,32,32,
                 114,101,100,32,32,32,58,61,32,114,101,100,40,83,114,99,44,68,
                 115,116,41,32,47,32,65,108,112,104,97,44,10,32,32,32,32,32,
                 32,32,32,103,114,101,101,110,32,58,61,32,103,114,101,101,110,
                 40,83,114,99,44,68,115,116,41,32,47,32,65,108,112,104,97,44,
                 10,32,32,32,32,32,32,32,32,98,108,117,101,32,32,58,61,32,98,
                 108,117,101,40,83,114,99,44,68,115,116,41,32,47,32,65,108,
                 112,104,97,44,10,32,32,32,32,32,32,32,32,97,108,112,104,97,
                 32,58,61,32,65,108,112,104,97,10,32,32,32,32,125,59,10,98,
                 108,101,110,100,40,95,44,68,115,116,44,95,41,32,45,62,10,32,
                 32,32,32,68,115,116,35,123,10,32,32,32,32,32,32,32,32,114,
                 101,100,32,32,32,58,61,32,48,46,48,44,10,32,32,32,32,32,32,
                 32,32,103,114,101,101,110,32,58,61,32,48,46,48,44,10,32,32,
                 32,32,32,32,32,32,98,108,117,101,32,32,58,61,32,48,46,48,44,
                 10,32,32,32,32,32,32,32,32,97,108,112,104,97,32,58,61,32,48,
                 46,48,10,32,32,32,32,125,46,10,10,97,108,112,104,97,40,35,
                 123,97,108,112,104,97,32,58,61,32,83,65,125,44,32,35,123,97,
                 108,112,104,97,32,58,61,32,68,65,125,41,32,45,62,10,32,32,32,
                 32,83,65,32,43,32,68,65,42,40,49,46,48,32,45,32,83,65,41,46,
                 10,10,114,101,100,40,35,123,114,101,100,32,58,61,32,83,86,44,
                 32,97,108,112,104,97,32,58,61,32,83,65,125,44,32,35,123,114,
                 101,100,32,58,61,32,68,86,44,32,97,108,112,104,97,32,58,61,
                 32,68,65,125,41,32,45,62,10,32,32,32,32,83,86,42,83,65,32,43,
                 32,68,86,42,68,65,42,40,49,46,48,32,45,32,83,65,41,46,10,103,
                 114,101,101,110,40,35,123,103,114,101,101,110,32,58,61,32,83,
                 86,44,32,97,108,112,104,97,32,58,61,32,83,65,125,44,32,35,
                 123,103,114,101,101,110,32,58,61,32,68,86,44,32,97,108,112,
                 104,97,32,58,61,32,68,65,125,41,32,45,62,10,32,32,32,32,83,
                 86,42,83,65,32,43,32,68,86,42,68,65,42,40,49,46,48,32,45,32,
                 83,65,41,46,10,98,108,117,101,40,35,123,98,108,117,101,32,58,
                 61,32,83,86,44,32,97,108,112,104,97,32,58,61,32,83,65,125,44,
                 32,35,123,98,108,117,101,32,58,61,32,68,86,44,32,97,108,112,
                 104,97,32,58,61,32,68,65,125,41,32,45,62,10,32,32,32,32,83,
                 86,42,83,65,32,43,32,68,86,42,68,65,42,40,49,46,48,32,45,32,
                 83,65,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [17,67,111,109,112,105,108,101,32,97,110,100,32,116,101,115,
                 116,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,62,32]},
               {text,"\tc(color)."},
               {text,[14,10,123,111,107,44,99,111,108,111,114,125,10,62,32]},
               {text," C1 = color:new(0.3,0.4,0.5,1.0)."},
               {text,
                "7\n#{alpha => 1.0,blue => 0.5,green => 0.4,red => 0.3}\n> "},
               {text," C2 = color:new(1.0,0.8,0.1,0.3)."},
               {text,
                "7\n#{alpha => 0.3,blue => 0.1,green => 0.8,red => 1.0}\n> "},
               {text,
                [19,99,111,108,111,114,58,98,108,101,110,100,40,67,49,44,67,
                 50,41,46]},
               {text,
                "7\n#{alpha => 1.0,blue => 0.5,green => 0.4,red => 0.3}\n> "},
               {text,
                [19,99,111,108,111,114,58,98,108,101,110,100,40,67,50,44,67,
                 49,41,46]},
               {text,
                "8\n#{alpha => 1.0,blue => 0.38,green => 0.52,red => 0.51}\n"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"'This example warrants some explanation:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "I\n-define(is_channel(V), (is_float(V) andalso V >= 0.0 andalso V =< 1.0))."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rFirst a macro"}],0,false},
               {text,"\f*is_channel*"},
               {sep,
                [{text,
                  [146,105,115,32,100,101,102,105,110,101,100,32,116,111,32,
                   104,101,108,112,32,119,105,116,104,32,116,104,101,32,103,
                   117,97,114,100,32,116,101,115,116,115,46,32,84,104,105,115,
                   32,105,115,32,111,110,108,121,32,104,101,114,101,32,102,
                   111,114,32,99,111,110,118,101,110,105,101,110,99,101,32,97,
                   110,100,32,116,111,32,114,101,100,117,99,101,32,115,121,
                   110,116,97,120,32,99,108,117,116,116,101,114,105,110,103,
                   46,32,70,111,114,32,109,111,114,101,32,105,110,102,111,114,
                   109,97,116,105,111,110,32,97,98,111,117,116,32,109,97,99,
                   114,111,115,44,32,115,101,101]}],
                0,false},
               {text,
                [28,91,84,104,101,32,80,114,101,112,114,111,99,101,115,115,
                 111,114,93,40,46,47,109,97,99,114,111,115,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [154,10,110,101,119,40,82,44,71,44,66,44,65,41,32,119,104,101,
                 110,32,63,105,115,95,99,104,97,110,110,101,108,40,82,41,44,
                 32,63,105,115,95,99,104,97,110,110,101,108,40,71,41,44,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,63,105,
                 115,95,99,104,97,110,110,101,108,40,66,41,44,32,63,105,115,
                 95,99,104,97,110,110,101,108,40,65,41,32,45,62,10,32,32,32,
                 32,35,123,114,101,100,32,61,62,32,82,44,32,103,114,101,101,
                 110,32,61,62,32,71,44,32,98,108,117,101,32,61,62,32,66,44,32,
                 97,108,112,104,97,32,61,62,32,65,125,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fThe function"}],0,false},
               {text,[7,42,110,101,119,47,52,42]},
               {sep,
                [{text,"(creates a new map term and lets the keys"}],
                0,false},
               {text,[5,42,114,101,100,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[7,42,103,114,101,101,110,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[6,42,98,108,117,101,42]},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[7,42,97,108,112,104,97,42]},
               {sep,
                [{text,
                  [133,98,101,32,97,115,115,111,99,105,97,116,101,100,32,119,
                   105,116,104,32,97,110,32,105,110,105,116,105,97,108,32,118,
                   97,108,117,101,46,32,73,110,32,116,104,105,115,32,99,97,
                   115,101,44,32,111,110,108,121,32,102,108,111,97,116,32,118,
                   97,108,117,101,115,32,98,101,116,119,101,101,110,32,97,110,
                   100,32,105,110,99,108,117,100,105,110,103,32,48,46,48,32,
                   97,110,100,32,49,46,48,32,97,114,101,32,97,108,108,111,119,
                   101,100,44,32,97,115,32,101,110,115,117,114,101,100,32,98,
                   121,32,116,104,101]}],
                0,false},
               {text,[15,42,63,105,115,95,99,104,97,110,110,101,108,47,49,42]},
               {sep,[{text,"!macro for each argument. Only the"}],0,false},
               {text,[4,42,61,62,42]},
               {sep,
                [{text,",operator is allowed when creating a new map."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\nBy calling"}],0,false},
               {text,"\t*blend/2*"},
               {sep,
                [{text,
                  [28,111,110,32,97,110,121,32,99,111,108,111,114,32,116,101,
                   114,109,32,99,114,101,97,116,101,100,32,98,121]}],
                0,false},
               {text,[7,42,110,101,119,47,52,42]},
               {sep,
                [{text,
                  "K, the resulting color can be calculated as determined by the two map terms."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [15,84,104,101,32,102,105,114,115,116,32,116,104,105,110,
                   103]}],
                0,false},
               {text,"\t*blend/2*"},
               {sep,
                [{text,"1does is to calculate the resulting alpha channel:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "A\nalpha(#{alpha := SA}, #{alpha := DA}) ->\n    SA + DA*(1.0 - SA)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,84,104,101,32,118,97,108,117,101,32,97,115,115,111,99,
                   105,97,116,101,100,32,119,105,116,104,32,107,101,121]}],
                0,false},
               {text,[7,42,97,108,112,104,97,42]},
               {sep,
                [{text,"'is fetched for both arguments using the"}],
                0,false},
               {text,[4,42,58,61,42]},
               {sep,
                [{text,
                  "=operator. The other keys in the map are ignored, only the key"}],
                0,false},
               {text,[7,42,97,108,112,104,97,42]},
               {sep,
                [{text,
                  [28,105,115,32,114,101,113,117,105,114,101,100,32,97,110,
                   100,32,99,104,101,99,107,101,100,32,102,111,114,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#This is also the case for functions"}],0,false},
               {text,[7,42,114,101,100,47,50,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,"\b*blue/2*"},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,"\t*green/2*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "[\nred(#{red := SV, alpha := SA}, #{red := DV, alpha := DA}) ->\n    SV*SA + DV*DA*(1.0 - SA)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "jThe difference here is that a check is made for two keys in each map argument. The other keys are ignored."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"-Finally, let us return the resulting color in"}],
                0,false},
               {text,"\t*blend/3*"},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "É\nblend(Src,Dst,Alpha) when Alpha > 0.0 ->\n    Dst#{\n        red   := red(Src,Dst) / Alpha,\n        green := green(Src,Dst) / Alpha,\n        blue  := blue(Src,Dst) / Alpha,\n        alpha := Alpha\n    };"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,[5,42,68,115,116,42]},
               {sep,
                [{text,
                  "lmap is updated with new channel values. The syntax for updating an existing key with a new value is with the"}],
                0,false},
               {text,[4,42,58,61,42]},
               {sep,[{text,"\toperator."}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"&#### Standard Modules and Manual Pages"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "OErlang has many standard modules to help you do things. For example, the module"}],
                0,false},
               {text,[4,42,105,111,42]},
               {sep,
                [{text,
                  "}contains many functions that help in doing formatted input/output. To look up information about standard modules, the command"}],
                0,false},
               {text,"\n*erl -man*"},
               {sep,
                [{text,
                  "Scan be used at the operating shell or command prompt (the same place as you started"}],
                0,false},
               {text,[5,42,101,114,108,42]},
               {sep,
                [{text,"*). Try the operating system shell command:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,37,32]},
               {text,"\verl -man io"},
               {text,
                [278,10,69,82,76,65,78,71,32,77,79,68,85,76,69,32,68,69,70,73,
                 78,73,84,73,79,78,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,105,111,40,51,41,10,10,77,79,68,85,76,69,10,32,32,32,
                 32,32,105,111,32,45,32,83,116,97,110,100,97,114,100,32,73,47,
                 79,32,83,101,114,118,101,114,32,73,110,116,101,114,102,97,99,
                 101,32,70,117,110,99,116,105,111,110,115,10,10,68,69,83,67,
                 82,73,80,84,73,79,78,10,32,32,32,32,32,84,104,105,115,32,109,
                 111,100,117,108,101,32,112,114,111,118,105,100,101,115,32,97,
                 110,32,32,105,110,116,101,114,102,97,99,101,32,32,116,111,32,
                 32,115,116,97,110,100,97,114,100,32,32,69,114,108,97,110,103,
                 32,32,73,79,10,32,32,32,32,32,115,101,114,118,101,114,115,46,
                 32,84,104,101,32,111,117,116,112,117,116,32,102,117,110,99,
                 116,105,111,110,115,32,97,108,108,32,114,101,116,117,114,110,
                 32,111,107,32,105,102,32,116,104,101,121,32,97,114,101,32,
                 115,117,99,45,10,32,32,32,32,32,46,46,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [301,73,102,32,116,104,105,115,32,100,111,101,115,32,110,111,
                 116,32,119,111,114,107,32,111,110,32,121,111,117,114,32,115,
                 121,115,116,101,109,44,32,116,104,101,32,100,111,99,117,109,
                 101,110,116,97,116,105,111,110,32,105,115,32,105,110,99,108,
                 117,100,101,100,32,97,115,32,72,84,77,76,32,105,110,32,116,
                 104,101,32,69,114,108,97,110,103,47,79,84,80,32,114,101,108,
                 101,97,115,101,46,32,89,111,117,32,99,97,110,32,97,108,115,
                 111,32,114,101,97,100,32,116,104,101,32,100,111,99,117,109,
                 101,110,116,97,116,105,111,110,32,97,115,32,72,84,77,76,32,
                 111,114,32,100,111,119,110,108,111,97,100,32,105,116,32,97,
                 115,32,80,68,70,32,102,114,111,109,32,101,105,116,104,101,
                 114,32,111,102,32,116,104,101,32,115,105,116,101,115,32,119,
                 119,119,46,101,114,108,97,110,103,46,115,101,32,40,99,111,
                 109,109,101,114,99,105,97,108,32,69,114,108,97,110,103,41,32,
                 111,114,32,119,119,119,46,101,114,108,97,110,103,46,111,114,
                 103,32,40,111,112,101,110,32,115,111,117,114,99,101,41,46,32,
                 70,111,114,32,101,120,97,109,112,108,101,44,32,102,111,114,
                 32,69,114,108,97,110,103,47,79,84,80,32,114,101,108,101,97,
                 115,101,32,82,57,66,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"-\nhttp://www.erlang.org/doc/r9b/doc/index.html"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"!#### Writing Output to a Terminal"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "kIt is nice to be able to do formatted output in examples, so the next example shows a simple way to use the"}],
                0,false},
               {text,"\v*io:format*"},
               {sep,
                [{text,
                  "=function. Like all other exported functions, you can test the"}],
                0,false},
               {text,"\v*io:format*"},
               {sep,
                [{text,
                  [22,102,117,110,99,116,105,111,110,32,105,110,32,116,104,
                   101,32,115,104,101,108,108,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,51,49,62,32]},
               {text,
                [31,105,111,58,102,111,114,109,97,116,40,34,104,101,108,108,
                 111,32,119,111,114,108,100,126,110,34,44,32,91,93,41,46]},
               {text,
                [20,10,104,101,108,108,111,32,119,111,114,108,100,10,111,107,
                 10,51,50,62,32]},
               {text,
                "9io:format(\"this outputs one Erlang term: ~w~n\", [hello])."},
               {text,",\nthis outputs one Erlang term: hello\nok\n33> "},
               {text,
                "Cio:format(\"this outputs two Erlang terms: ~w~w~n\", [hello, world])."},
               {text,"2\nthis outputs two Erlang terms: helloworld\nok\n34> "},
               {text,
                "Dio:format(\"this outputs two Erlang terms: ~w ~w~n\", [hello, world])."},
               {text,".\nthis outputs two Erlang terms: hello world\nok"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fThe function"}],0,false},
               {text,"\n*format/2*"},
               {sep,[{text,"\t(that is,"}],0,false},
               {text,"\b*format*"},
               {sep,
                [{text,
                  "øwith two arguments) takes two lists. The first one is nearly always a list written between \" \". This list is printed out as it is, except that each ~w is replaced by a term taken in order from the second list. Each ~n is replaced by a new line. The"}],
                0,false},
               {text,"\r*io:format/2*"},
               {sep,[{text," function itself returns the atom"}],0,false},
               {text,[4,42,111,107,42]},
               {sep,
                [{text,
                  "ÿif everything goes as planned. Like other functions in Erlang, it crashes if an error occurs. This is not a fault in Erlang, it is a deliberate policy. Erlang has sophisticated mechanisms to handle errors which are shown later. As an exercise, try to make"}],
                0,false},
               {text,"\v*io:format*"},
               {sep,
                [{text,
                  ";crash, it should not be difficult. But notice that although"}],
                0,false},
               {text,"\v*io:format*"},
               {sep,
                [{text,"0crashes, the Erlang shell itself does not crash."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,65,32,76,97,114,103,101,114,32,69,120,97,109,
             112,108,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [313,78,111,119,32,102,111,114,32,97,32,108,97,114,103,101,
                 114,32,101,120,97,109,112,108,101,32,116,111,32,99,111,110,
                 115,111,108,105,100,97,116,101,32,119,104,97,116,32,121,111,
                 117,32,104,97,118,101,32,108,101,97,114,110,116,32,115,111,
                 32,102,97,114,46,32,65,115,115,117,109,101,32,116,104,97,116,
                 32,121,111,117,32,104,97,118,101,32,97,32,108,105,115,116,32,
                 111,102,32,116,101,109,112,101,114,97,116,117,114,101,32,114,
                 101,97,100,105,110,103,115,32,102,114,111,109,32,97,32,110,
                 117,109,98,101,114,32,111,102,32,99,105,116,105,101,115,32,
                 105,110,32,116,104,101,32,119,111,114,108,100,46,32,83,111,
                 109,101,32,111,102,32,116,104,101,109,32,97,114,101,32,105,
                 110,32,67,101,108,115,105,117,115,32,97,110,100,32,115,111,
                 109,101,32,105,110,32,70,97,104,114,101,110,104,101,105,116,
                 32,40,97,115,32,105,110,32,116,104,101,32,112,114,101,118,
                 105,111,117,115,32,108,105,115,116,41,46,32,70,105,114,115,
                 116,32,108,101,116,32,117,115,32,99,111,110,118,101,114,116,
                 32,116,104,101,109,32,97,108,108,32,116,111,32,67,101,108,
                 115,105,117,115,44,32,116,104,101,110,32,108,101,116,32,117,
                 115,32,112,114,105,110,116,32,116,104,101,32,100,97,116,97,
                 32,110,101,97,116,108,121,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [558,10,37,37,32,84,104,105,115,32,109,111,100,117,108,101,32,
                 105,115,32,105,110,32,102,105,108,101,32,116,117,116,53,46,
                 101,114,108,10,10,45,109,111,100,117,108,101,40,116,117,116,
                 53,41,46,10,45,101,120,112,111,114,116,40,91,102,111,114,109,
                 97,116,95,116,101,109,112,115,47,49,93,41,46,10,10,37,37,32,
                 79,110,108,121,32,116,104,105,115,32,102,117,110,99,116,105,
                 111,110,32,105,115,32,101,120,112,111,114,116,101,100,10,102,
                 111,114,109,97,116,95,116,101,109,112,115,40,91,93,41,45,62,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,37,32,78,111,32,111,117,116,112,117,116,32,102,
                 111,114,32,97,110,32,101,109,112,116,121,32,108,105,115,116,
                 10,32,32,32,32,111,107,59,10,102,111,114,109,97,116,95,116,
                 101,109,112,115,40,91,67,105,116,121,32,124,32,82,101,115,
                 116,93,41,32,45,62,10,32,32,32,32,112,114,105,110,116,95,116,
                 101,109,112,40,99,111,110,118,101,114,116,95,116,111,95,99,
                 101,108,115,105,117,115,40,67,105,116,121,41,41,44,10,32,32,
                 32,32,102,111,114,109,97,116,95,116,101,109,112,115,40,82,
                 101,115,116,41,46,10,10,99,111,110,118,101,114,116,95,116,
                 111,95,99,101,108,115,105,117,115,40,123,78,97,109,101,44,32,
                 123,99,44,32,84,101,109,112,125,125,41,32,45,62,32,32,37,32,
                 78,111,32,99,111,110,118,101,114,115,105,111,110,32,110,101,
                 101,100,101,100,10,32,32,32,32,123,78,97,109,101,44,32,123,
                 99,44,32,84,101,109,112,125,125,59,10,99,111,110,118,101,114,
                 116,95,116,111,95,99,101,108,115,105,117,115,40,123,78,97,
                 109,101,44,32,123,102,44,32,84,101,109,112,125,125,41,32,45,
                 62,32,32,37,32,68,111,32,116,104,101,32,99,111,110,118,101,
                 114,115,105,111,110,10,32,32,32,32,123,78,97,109,101,44,32,
                 123,99,44,32,40,84,101,109,112,32,45,32,51,50,41,32,42,32,53,
                 32,47,32,57,125,125,46,10,10,112,114,105,110,116,95,116,101,
                 109,112,40,123,78,97,109,101,44,32,123,99,44,32,84,101,109,
                 112,125,125,41,32,45,62,10,32,32,32,32,105,111,58,102,111,
                 114,109,97,116,40,34,126,45,49,53,119,32,126,119,32,99,126,
                 110,34,44,32,91,78,97,109,101,44,32,84,101,109,112,93,41,
                 46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,51,53,62,32]},
               {text,"\bc(tut5)."},
               {text,[15,10,123,111,107,44,116,117,116,53,125,10,51,54,62,32]},
               {text,
                "<tut5:format_temps([{moscow, {c, -10}}, {cape_town, {f, 70}},"},
               {text,[1,10]},
               {text,
                "<{stockholm, {c, -4}}, {paris, {f, 28}}, {london, {f, 36}}])."},
               {text,
                [157,10,109,111,115,99,111,119,32,32,32,32,32,32,32,32,32,32,
                 45,49,48,32,99,10,99,97,112,101,95,116,111,119,110,32,32,32,
                 32,32,32,32,50,49,46,49,49,49,49,49,49,49,49,49,49,49,49,49,
                 49,32,99,10,115,116,111,99,107,104,111,108,109,32,32,32,32,
                 32,32,32,45,52,32,99,10,112,97,114,105,115,32,32,32,32,32,32,
                 32,32,32,32,32,45,50,46,50,50,50,50,50,50,50,50,50,50,50,50,
                 50,50,50,51,32,99,10,108,111,110,100,111,110,32,32,32,32,32,
                 32,32,32,32,32,50,46,50,50,50,50,50,50,50,50,50,50,50,50,50,
                 50,50,51,32,99,10,111,107]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "¸Before looking at how this program works, notice that a few comments are added to the code. A comment starts with a %-character and goes on to the end of the line. Notice also that the"}],
                0,false},
               {text,
                [28,42,45,101,120,112,111,114,116,40,91,102,111,114,109,97,
                 116,95,116,101,109,112,115,47,49,93,41,46,42]},
               {sep,
                [{text,
                  [31,108,105,110,101,32,111,110,108,121,32,105,110,99,108,
                   117,100,101,115,32,116,104,101,32,102,117,110,99,116,105,
                   111,110]}],
                0,false},
               {text,
                [16,42,102,111,114,109,97,116,95,116,101,109,112,115,47,49,
                 42]},
               {sep,
                [{text,
                  [25,46,32,84,104,101,32,111,116,104,101,114,32,102,117,110,
                   99,116,105,111,110,115,32,97,114,101]}],
                0,false},
               {text,"\t**local**"},
               {sep,
                [{text,
                  "@functions, that is, they are not visible from outside the module"}],
                0,false},
               {text,[6,42,116,117,116,53,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "vNotice also that when testing the program from the shell, the input is spread over two lines as the line was too long."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[4,87,104,101,110]}],0,false},
               {text,[14,42,102,111,114,109,97,116,95,116,101,109,112,115,42]},
               {sep,
                [{text,
                  [25,105,115,32,99,97,108,108,101,100,32,116,104,101,32,102,
                   105,114,115,116,32,116,105,109,101,44]}],
                0,false},
               {text,[6,42,67,105,116,121,42]},
               {sep,
                [{text,
                  [14,103,101,116,115,32,116,104,101,32,118,97,108,117,101]}],
                0,false},
               {text,
                [18,42,123,109,111,115,99,111,119,44,123,99,44,45,49,48,125,
                 125,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[6,42,82,101,115,116,42]},
               {sep,
                [{text,"(is the rest of the list. So the function"}],
                0,false},
               {text,"2*print_temp(convert_to_celsius({moscow,{c,-10}}))*"},
               {sep,[{text,"\nis called."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [26,72,101,114,101,32,105,115,32,97,32,102,117,110,99,116,
                   105,111,110,32,99,97,108,108,32,97,115]}],
                0,false},
               {text,"&*convert_to_celsius({moscow,{c,-10}})*"},
               {sep,
                [{text,
                  [31,97,115,32,116,104,101,32,97,114,103,117,109,101,110,116,
                   32,116,111,32,116,104,101,32,102,117,110,99,116,105,111,
                   110]}],
                0,false},
               {text,"\f*print_temp*"},
               {sep,
                [{text,
                  [25,46,32,87,104,101,110,32,102,117,110,99,116,105,111,110,
                   32,99,97,108,108,115,32,97,114,101]}],
                0,false},
               {text,"\n**nested**"},
               {sep,
                [{text,
                  "Flike this, they execute (evaluate) from the inside out. That is, first"}],
                0,false},
               {text,"&*convert_to_celsius({moscow,{c,-10}})*"},
               {sep,[{text,"#is evaluated, which gives the value"}],0,false},
               {text,
                [18,42,123,109,111,115,99,111,119,44,123,99,44,45,49,48,125,
                 125,42]},
               {sep,
                [{text,".as the temperature is already in Celsius. Then"}],
                0,false},
               {text,
                [30,42,112,114,105,110,116,95,116,101,109,112,40,123,109,111,
                 115,99,111,119,44,123,99,44,45,49,48,125,125,41,42]},
               {sep,
                [{text,
                  [26,105,115,32,101,118,97,108,117,97,116,101,100,46,32,84,
                   104,101,32,102,117,110,99,116,105,111,110]}],
                0,false},
               {text,
                [20,42,99,111,110,118,101,114,116,95,116,111,95,99,101,108,
                 115,105,117,115,42]},
               {sep,
                [{text,
                  [29,119,111,114,107,115,32,105,110,32,97,32,115,105,109,105,
                   108,97,114,32,119,97,121,32,116,111,32,116,104,101]}],
                0,false},
               {text,
                [16,42,99,111,110,118,101,114,116,95,108,101,110,103,116,104,
                 42]},
               {sep,[{text,"!function in the previous example."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\f*print_temp*"},
               {sep,[{text,"\fsimply calls"}],0,false},
               {text,"\v*io:format*"},
               {sep,
                [{text,
                  [157,105,110,32,97,32,115,105,109,105,108,97,114,32,119,97,
                   121,32,116,111,32,119,104,97,116,32,104,97,115,32,98,101,
                   101,110,32,100,101,115,99,114,105,98,101,100,32,97,98,111,
                   118,101,46,32,78,111,116,105,99,101,32,116,104,97,116,32,
                   126,45,49,53,119,32,115,97,121,115,32,116,111,32,112,114,
                   105,110,116,32,116,104,101,32,34,116,101,114,109,34,32,119,
                   105,116,104,32,97,32,102,105,101,108,100,32,108,101,110,
                   103,116,104,32,40,119,105,100,116,104,41,32,111,102,32,49,
                   53,32,97,110,100,32,108,101,102,116,32,106,117,115,116,105,
                   102,121,32,105,116,46,32,40,115,101,101,32,116,104,101]}],
                0,false},
               {text,
                [30,91,105,111,40,51,41,93,40,46,46,47,115,116,100,108,105,98,
                 47,105,111,35,102,119,114,105,116,101,47,49,41]},
               {sep,
                [{text,
                  [24,41,32,109,97,110,117,97,108,32,112,97,103,101,32,105,
                   110,32,83,84,68,76,73,66,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,78,111,119]}],0,false},
               {text,
                [20,42,102,111,114,109,97,116,95,116,101,109,112,115,40,82,
                 101,115,116,41,42]},
               {sep,
                [{text,
                  "Çis called with the rest of the list as an argument. This way of doing things is similar to the loop constructs in other languages. (Yes, this is recursion, but do not let that worry you.) So the same"}],
                0,false},
               {text,[14,42,102,111,114,109,97,116,95,116,101,109,112,115,42]},
               {sep,[{text,"#function is called again, this time"}],0,false},
               {text,[6,42,67,105,116,121,42]},
               {sep,
                [{text,
                  [14,103,101,116,115,32,116,104,101,32,118,97,108,117,101]}],
                0,false},
               {text,
                [20,42,123,99,97,112,101,95,116,111,119,110,44,123,102,44,55,
                 48,125,125,42]},
               {sep,
                [{text,
                  [130,97,110,100,32,116,104,101,32,115,97,109,101,32,112,114,
                   111,99,101,100,117,114,101,32,105,115,32,114,101,112,101,
                   97,116,101,100,32,97,115,32,98,101,102,111,114,101,46,32,
                   84,104,105,115,32,105,115,32,100,111,110,101,32,117,110,
                   116,105,108,32,116,104,101,32,108,105,115,116,32,98,101,99,
                   111,109,101,115,32,101,109,112,116,121,44,32,116,104,97,
                   116,32,105,115,32,91,93,44,32,119,104,105,99,104,32,99,97,
                   117,115,101,115,32,116,104,101,32,102,105,114,115,116,32,
                   99,108,97,117,115,101]}],
                0,false},
               {text,
                [18,42,102,111,114,109,97,116,95,116,101,109,112,115,40,91,93,
                 41,42]},
               {sep,
                [{text,
                  "3to match. This simply returns (results in) the atom"}],
                0,false},
               {text,[4,42,111,107,42]},
               {sep,
                [{text,
                  [22,44,32,115,111,32,116,104,101,32,112,114,111,103,114,97,
                   109,32,101,110,100,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"-#### Matching, Guards, and Scope of Variables"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ËIt can be useful to find the maximum and minimum temperature in lists like this. Before extending the program to do this, let us look at functions for finding the maximum value of the elements in a list:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [288,10,45,109,111,100,117,108,101,40,116,117,116,54,41,46,10,
                 45,101,120,112,111,114,116,40,91,108,105,115,116,95,109,97,
                 120,47,49,93,41,46,10,10,108,105,115,116,95,109,97,120,40,91,
                 72,101,97,100,124,82,101,115,116,93,41,32,45,62,10,32,32,32,
                 108,105,115,116,95,109,97,120,40,82,101,115,116,44,32,72,101,
                 97,100,41,46,10,10,108,105,115,116,95,109,97,120,40,91,93,44,
                 32,82,101,115,41,32,45,62,10,32,32,32,32,82,101,115,59,10,
                 108,105,115,116,95,109,97,120,40,91,72,101,97,100,124,82,101,
                 115,116,93,44,32,82,101,115,117,108,116,95,115,111,95,102,97,
                 114,41,32,119,104,101,110,32,72,101,97,100,32,62,32,82,101,
                 115,117,108,116,95,115,111,95,102,97,114,32,45,62,10,32,32,
                 32,32,108,105,115,116,95,109,97,120,40,82,101,115,116,44,32,
                 72,101,97,100,41,59,10,108,105,115,116,95,109,97,120,40,91,
                 72,101,97,100,124,82,101,115,116,93,44,32,82,101,115,117,108,
                 116,95,115,111,95,102,97,114,41,32,32,45,62,10,32,32,32,32,
                 108,105,115,116,95,109,97,120,40,82,101,115,116,44,32,82,101,
                 115,117,108,116,95,115,111,95,102,97,114,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,51,55,62,32]},
               {text,"\bc(tut6)."},
               {text,[15,10,123,111,107,44,116,117,116,54,125,10,51,56,62,32]},
               {text,"%tut6:list_max([1,2,3,4,5,7,4,3,2,1])."},
               {text,[2,10,55]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "3First notice that two functions have the same name,"}],
                0,false},
               {text,"\n*list_max*"},
               {sep,
                [{text,
                  [300,46,32,72,111,119,101,118,101,114,44,32,101,97,99,104,
                   32,111,102,32,116,104,101,115,101,32,116,97,107,101,115,32,
                   97,32,100,105,102,102,101,114,101,110,116,32,110,117,109,
                   98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,
                   115,32,40,112,97,114,97,109,101,116,101,114,115,41,46,32,
                   73,110,32,69,114,108,97,110,103,32,116,104,101,115,101,32,
                   97,114,101,32,114,101,103,97,114,100,101,100,32,97,115,32,
                   99,111,109,112,108,101,116,101,108,121,32,100,105,102,102,
                   101,114,101,110,116,32,102,117,110,99,116,105,111,110,115,
                   46,32,87,104,101,114,101,32,121,111,117,32,110,101,101,100,
                   32,116,111,32,100,105,115,116,105,110,103,117,105,115,104,
                   32,98,101,116,119,101,101,110,32,116,104,101,115,101,32,
                   102,117,110,99,116,105,111,110,115,44,32,121,111,117,32,
                   119,114,105,116,101,32,78,97,109,101,47,65,114,105,116,121,
                   44,32,119,104,101,114,101,32,78,97,109,101,32,105,115,32,
                   116,104,101,32,102,117,110,99,116,105,111,110,32,110,97,
                   109,101,32,97,110,100,32,65,114,105,116,121,32,105,115,32,
                   116,104,101,32,110,117,109,98,101,114,32,111,102,32,97,114,
                   103,117,109,101,110,116,115,44,32,105,110,32,116,104,105,
                   115,32,99,97,115,101]}],
                0,false},
               {text,"\f*list_max/1*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\f*list_max/2*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "HIn this example you walk through a list \"carrying\" a value, in this case"}],
                0,false},
               {text,
                [15,42,82,101,115,117,108,116,95,115,111,95,102,97,114,42]},
               {sep,[{text,[1,46]}],0,false},
               {text,"\f*list_max/1*"},
               {sep,
                [{text,
                  "Osimply assumes that the max value of the list is the head of the list and calls"}],
                0,false},
               {text,"\f*list_max/2*"},
               {sep,
                [{text,
                  "[with the rest of the list and the value of the head of the list. In the above this would be"}],
                0,false},
               {text,"!*list_max([2,3,4,5,7,4,3,2,1],1)*"},
               {sep,
                [{text,
                  [21,46,32,73,102,32,121,111,117,32,116,114,105,101,100,32,
                   116,111,32,117,115,101]}],
                0,false},
               {text,"\f*list_max/1*"},
               {sep,
                [{text,
                  "ûwith an empty list or tried to use it with something that is not a list at all, you would cause an error. Notice that the Erlang philosophy is not to handle errors of this type in the function they occur, but to do so elsewhere. More about this later."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,110]}],0,false},
               {text,"\f*list_max/2*"},
               {sep,[{text," , you walk down the list and use"}],0,false},
               {text,[6,42,72,101,97,100,42]},
               {sep,[{text,"\ninstead of"}],0,false},
               {text,
                [15,42,82,101,115,117,108,116,95,115,111,95,102,97,114,42]},
               {sep,[{text,[4,119,104,101,110]}],0,false},
               {text,[6,42,72,101,97,100,42]},
               {sep,[{text,[1,62]}],0,false},
               {text,
                [15,42,82,101,115,117,108,116,95,115,111,95,102,97,114,42]},
               {sep,[{text,[1,46]}],0,false},
               {text,[6,42,119,104,101,110,42]},
               {sep,[{text,"#is a special word used before the -"}],0,false},
               {sep,
                [{text,
                  [132,62,32,105,110,32,116,104,101,32,102,117,110,99,116,105,
                   111,110,32,116,111,32,115,97,121,32,116,104,97,116,32,121,
                   111,117,32,111,110,108,121,32,117,115,101,32,116,104,105,
                   115,32,112,97,114,116,32,111,102,32,116,104,101,32,102,117,
                   110,99,116,105,111,110,32,105,102,32,116,104,101,32,116,
                   101,115,116,32,116,104,97,116,32,102,111,108,108,111,119,
                   115,32,105,115,32,116,114,117,101,46,32,65,32,116,101,115,
                   116,32,111,102,32,116,104,105,115,32,116,121,112,101,32,
                   105,115,32,99,97,108,108,101,100]}],
                0,false},
               {text,"\t**guard**"},
               {sep,
                [{text,
                  "l. If the guard is false (that is, the guard fails), the next part of the function is tried. In this case, if"}],
                0,false},
               {text,[6,42,72,101,97,100,42]},
               {sep,
                [{text,
                  [19,105,115,32,110,111,116,32,103,114,101,97,116,101,114,32,
                   116,104,97,110]}],
                0,false},
               {text,
                [15,42,82,101,115,117,108,116,95,115,111,95,102,97,114,42]},
               {sep,
                [{text,
                  "q, then it must be smaller or equal to it. This means that a guard on the next part of the function is not needed."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"$Some useful operators in guards are:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {above,
            {above,
             {sep,[{text,[1,42]},{text,"\v< less than"}],0,false},
             {sep,
              [{text,[1,42]},
               {text,[14,62,32,103,114,101,97,116,101,114,32,116,104,97,110]}],
              0,false}},
            {sep,[{text,[1,42]},{text,"\b== equal"}],0,false}},
           {sep,
            [{text,[1,42]},
             {text,
              [19,62,61,32,103,114,101,97,116,101,114,32,111,114,32,101,113,
               117,97,108]}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {text,
             [16,61,60,32,108,101,115,115,32,111,114,32,101,113,117,97,108]}],
           0,false}},
         {sep,[{text,[1,42]},{text,"\f/= not equal"}],0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[4,40,115,101,101]}],0,false},
               {text," [Guard Sequences](./expressions)"},
               {sep,[{text,[2,41,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÀTo change the above program to one that works out the minimum value of the element in a list, you only need to write < instead of >. (But it would be wise to change the name of the function to"}],
                0,false},
               {text,"\n*list_min*"},
               {sep,[{text,[2,46,41]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "oEarlier it was mentioned that a variable can only be given a value once in its scope. In the above you see that"}],
                0,false},
               {text,
                [15,42,82,101,115,117,108,116,95,115,111,95,102,97,114,42]},
               {sep,
                [{text,
                  "=is given several values. This is OK since every time you call"}],
                0,false},
               {text,"\f*list_max/2*"},
               {sep,
                [{text,")you create a new scope and one can regard"}],
                0,false},
               {text,
                [15,42,82,101,115,117,108,116,95,115,111,95,102,97,114,42]},
               {sep,
                [{text,"&as a different variable in each scope."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "hAnother way of creating and giving a variable a value is by using the match operator = . So if you write"}],
                0,false},
               {text,[7,42,77,32,61,32,53,42]},
               {sep,
                [{text,
                  [19,44,32,97,32,118,97,114,105,97,98,108,101,32,99,97,108,
                   108,101,100]}],
                0,false},
               {text,[3,42,77,42]},
               {sep,
                [{text,
                  "Bis created with the value 5. If, in the same scope, you then write"}],
                0,false},
               {text,[7,42,77,32,61,32,54,42]},
               {sep,
                [{text,"2, an error is returned. Try this out in the shell:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,51,57,62,32]},
               {text,[6,77,32,61,32,53,46]},
               {text,[7,10,53,10,52,48,62,32]},
               {text,[6,77,32,61,32,54,46]},
               {text,
                "=\n** exception error: no match of right hand side value 6\n41> "},
               {text,"\nM = M + 1."},
               {text,
                "=\n** exception error: no match of right hand side value 6\n42> "},
               {text,"\nN = M + 1."},
               {text,[2,10,54]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "jThe use of the match operator is particularly useful for pulling apart Erlang terms and creating new ones."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,52,51,62,32]},
               {text,
                [26,123,88,44,32,89,125,32,61,32,123,112,97,114,105,115,44,32,
                 123,102,44,32,50,56,125,125,46]},
               {text,
                [20,10,123,112,97,114,105,115,44,123,102,44,50,56,125,125,10,
                 52,52,62,32]},
               {text,[2,88,46]},
               {text,"\v\nparis\n45> "},
               {text,[2,89,46]},
               {text,[7,10,123,102,44,50,56,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[4,72,101,114,101]}],0,false},
               {text,[3,42,88,42]},
               {sep,
                [{text,
                  [14,103,101,116,115,32,116,104,101,32,118,97,108,117,101]}],
                0,false},
               {text,[7,42,112,97,114,105,115,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[3,42,89,42]},
               {text,"\b*{f,28}*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "HIf you try to do the same again with another city, an error is returned:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,52,54,62,32]},
               {text,"\e{X, Y} = {london, {f, 36}}."},
               {text,
                "F\n** exception error: no match of right hand side value {london,{f,36}}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "[Variables can also be used to improve the readability of programs. For example, in function"}],
                0,false},
               {text,"\f*list_max/2*"},
               {sep,
                [{text,
                  [21,97,98,111,118,101,44,32,121,111,117,32,99,97,110,32,119,
                   114,105,116,101,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [129,10,108,105,115,116,95,109,97,120,40,91,72,101,97,100,124,
                 82,101,115,116,93,44,32,82,101,115,117,108,116,95,115,111,95,
                 102,97,114,41,32,119,104,101,110,32,72,101,97,100,32,62,32,
                 82,101,115,117,108,116,95,115,111,95,102,97,114,32,45,62,10,
                 32,32,32,32,78,101,119,95,114,101,115,117,108,116,95,102,97,
                 114,32,61,32,72,101,97,100,44,10,32,32,32,32,108,105,115,116,
                 95,109,97,120,40,82,101,115,116,44,32,78,101,119,95,114,101,
                 115,117,108,116,95,102,97,114,41,59]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"\"This is possibly a little clearer."}],0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,77,111,114,101,32,65,98,111,117,116,32,76,105,
             115,116,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "CRemember that the | operator can be used to get the head of a list:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,52,55,62,32]},
               {text," [M1|T1] = [paris, london, rome]."},
               {text,
                [25,10,91,112,97,114,105,115,44,108,111,110,100,111,110,44,
                 114,111,109,101,93,10,52,56,62,32]},
               {text,[3,77,49,46]},
               {text,"\v\nparis\n49> "},
               {text,[3,84,49,46]},
               {text,
                [14,10,91,108,111,110,100,111,110,44,114,111,109,101,93]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "8The | operator can also be used to add a head to a list:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,53,48,62,32]},
               {text,
                [19,76,49,32,61,32,91,109,97,100,114,105,100,32,124,32,84,49,
                 93,46]},
               {text,
                [26,10,91,109,97,100,114,105,100,44,108,111,110,100,111,110,
                 44,114,111,109,101,93,10,53,49,62,32]},
               {text,[3,76,49,46]},
               {text,
                [21,10,91,109,97,100,114,105,100,44,108,111,110,100,111,110,
                 44,114,111,109,101,93]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ONow an example of this when working with lists - reversing the order of a list:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Õ\n-module(tut8).\n\n-export([reverse/1]).\n\nreverse(List) ->\n    reverse(List, []).\n\nreverse([Head | Rest], Reversed_List) ->\n    reverse(Rest, [Head | Reversed_List]);\nreverse([], Reversed_List) ->\n    Reversed_List."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,53,50,62,32]},
               {text,"\bc(tut8)."},
               {text,[15,10,123,111,107,44,116,117,116,56,125,10,53,51,62,32]},
               {text,
                [22,116,117,116,56,58,114,101,118,101,114,115,101,40,91,49,44,
                 50,44,51,93,41,46]},
               {text,"\b\n[3,2,1]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fConsider how"}],0,false},
               {text,
                [15,42,82,101,118,101,114,115,101,100,95,76,105,115,116,42]},
               {sep,
                [{text,
                  "tis built. It starts as [], then successively the heads are taken off of the list to be reversed and added to the the"}],
                0,false},
               {text,
                [15,42,82,101,118,101,114,115,101,100,95,76,105,115,116,42]},
               {sep,
                [{text,
                  [28,44,32,97,115,32,115,104,111,119,110,32,105,110,32,116,
                   104,101,32,102,111,108,108,111,119,105,110,103,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "¿\nreverse([1|2,3], []) =>\n    reverse([2,3], [1|[]])\n\nreverse([2|3], [1]) =>\n    reverse([3], [2|[1])\n\nreverse([3|[]], [2,1]) =>\n    reverse([], [3|[2,1]])\n\nreverse([], [3,2,1]) =>\n    [3,2,1]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\nThe module"}],0,false},
               {text,[7,42,108,105,115,116,115,42]},
               {sep,
                [{text,
                  "Écontains many functions for manipulating lists, for example, for reversing them. So before writing a list-manipulating function it is a good idea to check if one not already is written for you (see the"}],
                0,false},
               {text,
                [19,91,108,105,115,116,115,40,51,41,93,40,46,47,108,105,115,
                 116,115,41]},
               {sep,
                [{text,
                  [23,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,
                   83,84,68,76,73,66,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [157,78,111,119,32,108,101,116,32,117,115,32,103,101,116,32,
                 98,97,99,107,32,116,111,32,116,104,101,32,99,105,116,105,101,
                 115,32,97,110,100,32,116,101,109,112,101,114,97,116,117,114,
                 101,115,44,32,98,117,116,32,116,97,107,101,32,97,32,109,111,
                 114,101,32,115,116,114,117,99,116,117,114,101,100,32,97,112,
                 112,114,111,97,99,104,32,116,104,105,115,32,116,105,109,101,
                 46,32,70,105,114,115,116,32,108,101,116,32,117,115,32,99,111,
                 110,118,101,114,116,32,116,104,101,32,119,104,111,108,101,32,
                 108,105,115,116,32,116,111,32,67,101,108,115,105,117,115,32,
                 97,115,32,102,111,108,108,111,119,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [368,10,45,109,111,100,117,108,101,40,116,117,116,55,41,46,10,
                 45,101,120,112,111,114,116,40,91,102,111,114,109,97,116,95,
                 116,101,109,112,115,47,49,93,41,46,10,10,102,111,114,109,97,
                 116,95,116,101,109,112,115,40,76,105,115,116,95,111,102,95,
                 99,105,116,105,101,115,41,32,45,62,10,32,32,32,32,99,111,110,
                 118,101,114,116,95,108,105,115,116,95,116,111,95,99,40,76,
                 105,115,116,95,111,102,95,99,105,116,105,101,115,41,46,10,10,
                 99,111,110,118,101,114,116,95,108,105,115,116,95,116,111,95,
                 99,40,91,123,78,97,109,101,44,32,123,102,44,32,70,125,125,32,
                 124,32,82,101,115,116,93,41,32,45,62,10,32,32,32,32,67,111,
                 110,118,101,114,116,101,100,95,67,105,116,121,32,61,32,123,
                 78,97,109,101,44,32,123,99,44,32,40,70,32,45,51,50,41,42,32,
                 53,32,47,32,57,125,125,44,10,32,32,32,32,91,67,111,110,118,
                 101,114,116,101,100,95,67,105,116,121,32,124,32,99,111,110,
                 118,101,114,116,95,108,105,115,116,95,116,111,95,99,40,82,
                 101,115,116,41,93,59,10,10,99,111,110,118,101,114,116,95,108,
                 105,115,116,95,116,111,95,99,40,91,67,105,116,121,32,124,32,
                 82,101,115,116,93,41,32,45,62,10,32,32,32,32,91,67,105,116,
                 121,32,124,32,99,111,110,118,101,114,116,95,108,105,115,116,
                 95,116,111,95,99,40,82,101,115,116,41,93,59,10,10,99,111,110,
                 118,101,114,116,95,108,105,115,116,95,116,111,95,99,40,91,93,
                 41,32,45,62,10,32,32,32,32,91,93,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [18,84,101,115,116,32,116,104,101,32,102,117,110,99,116,105,
                 111,110,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,53,52,62,32]},
               {text,"\bc(tut7)."},
               {text,
                [17,10,123,111,107,44,32,116,117,116,55,125,46,10,53,53,62,
                 32]},
               {text,
                "<tut7:format_temps([{moscow, {c, -10}}, {cape_town, {f, 70}},"},
               {text,[1,10]},
               {text,
                "<{stockholm, {c, -4}}, {paris, {f, 28}}, {london, {f, 36}}])."},
               {text,
                [144,10,91,123,109,111,115,99,111,119,44,123,99,44,45,49,48,
                 125,125,44,10,32,123,99,97,112,101,95,116,111,119,110,44,123,
                 99,44,50,49,46,49,49,49,49,49,49,49,49,49,49,49,49,49,49,125,
                 125,44,10,32,123,115,116,111,99,107,104,111,108,109,44,123,
                 99,44,45,52,125,125,44,10,32,123,112,97,114,105,115,44,123,
                 99,44,45,50,46,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
                 51,125,125,44,10,32,123,108,111,110,100,111,110,44,123,99,44,
                 50,46,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,51,125,
                 125,93]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\fExplanation:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "G\nformat_temps(List_of_cities) ->\n    convert_list_to_c(List_of_cities)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[4,72,101,114,101]}],0,false},
               {text,
                [16,42,102,111,114,109,97,116,95,116,101,109,112,115,47,49,
                 42]},
               {sep,[{text,[5,99,97,108,108,115]}],0,false},
               {text,
                [21,42,99,111,110,118,101,114,116,95,108,105,115,116,95,116,
                 111,95,99,47,49,42]},
               {sep,[{text,[1,46]}],0,false},
               {text,
                [21,42,99,111,110,118,101,114,116,95,108,105,115,116,95,116,
                 111,95,99,47,49,42]},
               {sep,
                [{text,
                  [25,116,97,107,101,115,32,111,102,102,32,116,104,101,32,104,
                   101,97,100,32,111,102,32,116,104,101]}],
                0,false},
               {text,
                [16,42,76,105,115,116,95,111,102,95,99,105,116,105,101,115,
                 42]},
               {sep,
                [{text,
                  "z, converts it to Celsius if needed. The | operator is used to add the (maybe) converted to the converted rest of the list:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,",\n[Converted_City | convert_list_to_c(Rest)];"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,[3,111,114,58]}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"\"\n[City | convert_list_to_c(Rest)];"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "NThis is done until the end of the list is reached, that is, the list is empty:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"!\nconvert_list_to_c([]) ->\n    []."}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "@Now when the list is converted, a function to print it is added:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [553,10,45,109,111,100,117,108,101,40,116,117,116,55,41,46,10,
                 45,101,120,112,111,114,116,40,91,102,111,114,109,97,116,95,
                 116,101,109,112,115,47,49,93,41,46,10,10,102,111,114,109,97,
                 116,95,116,101,109,112,115,40,76,105,115,116,95,111,102,95,
                 99,105,116,105,101,115,41,32,45,62,10,32,32,32,32,67,111,110,
                 118,101,114,116,101,100,95,76,105,115,116,32,61,32,99,111,
                 110,118,101,114,116,95,108,105,115,116,95,116,111,95,99,40,
                 76,105,115,116,95,111,102,95,99,105,116,105,101,115,41,44,10,
                 32,32,32,32,112,114,105,110,116,95,116,101,109,112,40,67,111,
                 110,118,101,114,116,101,100,95,76,105,115,116,41,46,10,10,99,
                 111,110,118,101,114,116,95,108,105,115,116,95,116,111,95,99,
                 40,91,123,78,97,109,101,44,32,123,102,44,32,70,125,125,32,
                 124,32,82,101,115,116,93,41,32,45,62,10,32,32,32,32,67,111,
                 110,118,101,114,116,101,100,95,67,105,116,121,32,61,32,123,
                 78,97,109,101,44,32,123,99,44,32,40,70,32,45,51,50,41,42,32,
                 53,32,47,32,57,125,125,44,10,32,32,32,32,91,67,111,110,118,
                 101,114,116,101,100,95,67,105,116,121,32,124,32,99,111,110,
                 118,101,114,116,95,108,105,115,116,95,116,111,95,99,40,82,
                 101,115,116,41,93,59,10,10,99,111,110,118,101,114,116,95,108,
                 105,115,116,95,116,111,95,99,40,91,67,105,116,121,32,124,32,
                 82,101,115,116,93,41,32,45,62,10,32,32,32,32,91,67,105,116,
                 121,32,124,32,99,111,110,118,101,114,116,95,108,105,115,116,
                 95,116,111,95,99,40,82,101,115,116,41,93,59,10,10,99,111,110,
                 118,101,114,116,95,108,105,115,116,95,116,111,95,99,40,91,93,
                 41,32,45,62,10,32,32,32,32,91,93,46,10,10,112,114,105,110,
                 116,95,116,101,109,112,40,91,123,78,97,109,101,44,32,123,99,
                 44,32,84,101,109,112,125,125,32,124,32,82,101,115,116,93,41,
                 32,45,62,10,32,32,32,32,105,111,58,102,111,114,109,97,116,40,
                 34,126,45,49,53,119,32,126,119,32,99,126,110,34,44,32,91,78,
                 97,109,101,44,32,84,101,109,112,93,41,44,10,32,32,32,32,112,
                 114,105,110,116,95,116,101,109,112,40,82,101,115,116,41,59,
                 10,112,114,105,110,116,95,116,101,109,112,40,91,93,41,32,45,
                 62,10,32,32,32,32,111,107,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,53,54,62,32]},
               {text,"\bc(tut7)."},
               {text,[15,10,123,111,107,44,116,117,116,55,125,10,53,55,62,32]},
               {text,
                "<tut7:format_temps([{moscow, {c, -10}}, {cape_town, {f, 70}},"},
               {text,[1,10]},
               {text,
                "<{stockholm, {c, -4}}, {paris, {f, 28}}, {london, {f, 36}}])."},
               {text,
                [157,10,109,111,115,99,111,119,32,32,32,32,32,32,32,32,32,32,
                 45,49,48,32,99,10,99,97,112,101,95,116,111,119,110,32,32,32,
                 32,32,32,32,50,49,46,49,49,49,49,49,49,49,49,49,49,49,49,49,
                 49,32,99,10,115,116,111,99,107,104,111,108,109,32,32,32,32,
                 32,32,32,45,52,32,99,10,112,97,114,105,115,32,32,32,32,32,32,
                 32,32,32,32,32,45,50,46,50,50,50,50,50,50,50,50,50,50,50,50,
                 50,50,50,51,32,99,10,108,111,110,100,111,110,32,32,32,32,32,
                 32,32,32,32,32,50,46,50,50,50,50,50,50,50,50,50,50,50,50,50,
                 50,50,51,32,99,10,111,107]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [317,78,111,119,32,97,32,102,117,110,99,116,105,111,110,32,
                 104,97,115,32,116,111,32,98,101,32,97,100,100,101,100,32,116,
                 111,32,102,105,110,100,32,116,104,101,32,99,105,116,105,101,
                 115,32,119,105,116,104,32,116,104,101,32,109,97,120,105,109,
                 117,109,32,97,110,100,32,109,105,110,105,109,117,109,32,116,
                 101,109,112,101,114,97,116,117,114,101,115,46,32,84,104,101,
                 32,102,111,108,108,111,119,105,110,103,32,112,114,111,103,
                 114,97,109,32,105,115,32,110,111,116,32,116,104,101,32,109,
                 111,115,116,32,101,102,102,105,99,105,101,110,116,32,119,97,
                 121,32,111,102,32,100,111,105,110,103,32,116,104,105,115,32,
                 97,115,32,121,111,117,32,119,97,108,107,32,116,104,114,111,
                 117,103,104,32,116,104,101,32,108,105,115,116,32,111,102,32,
                 99,105,116,105,101,115,32,102,111,117,114,32,116,105,109,101,
                 115,46,32,66,117,116,32,105,116,32,105,115,32,98,101,116,116,
                 101,114,32,116,111,32,102,105,114,115,116,32,115,116,114,105,
                 118,101,32,102,111,114,32,99,108,97,114,105,116,121,32,97,
                 110,100,32,99,111,114,114,101,99,116,110,101,115,115,32,97,
                 110,100,32,116,111,32,109,97,107,101,32,112,114,111,103,114,
                 97,109,115,32,101,102,102,105,99,105,101,110,116,32,111,110,
                 108,121,32,105,102,32,110,101,101,100,101,100,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [1569,10,45,109,111,100,117,108,101,40,116,117,116,55,41,46,
                 10,45,101,120,112,111,114,116,40,91,102,111,114,109,97,116,
                 95,116,101,109,112,115,47,49,93,41,46,10,10,102,111,114,109,
                 97,116,95,116,101,109,112,115,40,76,105,115,116,95,111,102,
                 95,99,105,116,105,101,115,41,32,45,62,10,32,32,32,32,67,111,
                 110,118,101,114,116,101,100,95,76,105,115,116,32,61,32,99,
                 111,110,118,101,114,116,95,108,105,115,116,95,116,111,95,99,
                 40,76,105,115,116,95,111,102,95,99,105,116,105,101,115,41,44,
                 10,32,32,32,32,112,114,105,110,116,95,116,101,109,112,40,67,
                 111,110,118,101,114,116,101,100,95,76,105,115,116,41,44,10,
                 32,32,32,32,123,77,97,120,95,99,105,116,121,44,32,77,105,110,
                 95,99,105,116,121,125,32,61,32,102,105,110,100,95,109,97,120,
                 95,97,110,100,95,109,105,110,40,67,111,110,118,101,114,116,
                 101,100,95,76,105,115,116,41,44,10,32,32,32,32,112,114,105,
                 110,116,95,109,97,120,95,97,110,100,95,109,105,110,40,77,97,
                 120,95,99,105,116,121,44,32,77,105,110,95,99,105,116,121,41,
                 46,10,10,99,111,110,118,101,114,116,95,108,105,115,116,95,
                 116,111,95,99,40,91,123,78,97,109,101,44,32,123,102,44,32,84,
                 101,109,112,125,125,32,124,32,82,101,115,116,93,41,32,45,62,
                 10,32,32,32,32,67,111,110,118,101,114,116,101,100,95,67,105,
                 116,121,32,61,32,123,78,97,109,101,44,32,123,99,44,32,40,84,
                 101,109,112,32,45,51,50,41,42,32,53,32,47,32,57,125,125,44,
                 10,32,32,32,32,91,67,111,110,118,101,114,116,101,100,95,67,
                 105,116,121,32,124,32,99,111,110,118,101,114,116,95,108,105,
                 115,116,95,116,111,95,99,40,82,101,115,116,41,93,59,10,10,99,
                 111,110,118,101,114,116,95,108,105,115,116,95,116,111,95,99,
                 40,91,67,105,116,121,32,124,32,82,101,115,116,93,41,32,45,62,
                 10,32,32,32,32,91,67,105,116,121,32,124,32,99,111,110,118,
                 101,114,116,95,108,105,115,116,95,116,111,95,99,40,82,101,
                 115,116,41,93,59,10,10,99,111,110,118,101,114,116,95,108,105,
                 115,116,95,116,111,95,99,40,91,93,41,32,45,62,10,32,32,32,32,
                 91,93,46,10,10,112,114,105,110,116,95,116,101,109,112,40,91,
                 123,78,97,109,101,44,32,123,99,44,32,84,101,109,112,125,125,
                 32,124,32,82,101,115,116,93,41,32,45,62,10,32,32,32,32,105,
                 111,58,102,111,114,109,97,116,40,34,126,45,49,53,119,32,126,
                 119,32,99,126,110,34,44,32,91,78,97,109,101,44,32,84,101,109,
                 112,93,41,44,10,32,32,32,32,112,114,105,110,116,95,116,101,
                 109,112,40,82,101,115,116,41,59,10,112,114,105,110,116,95,
                 116,101,109,112,40,91,93,41,32,45,62,10,32,32,32,32,111,107,
                 46,10,10,102,105,110,100,95,109,97,120,95,97,110,100,95,109,
                 105,110,40,91,67,105,116,121,32,124,32,82,101,115,116,93,41,
                 32,45,62,10,32,32,32,32,102,105,110,100,95,109,97,120,95,97,
                 110,100,95,109,105,110,40,82,101,115,116,44,32,67,105,116,
                 121,44,32,67,105,116,121,41,46,10,10,102,105,110,100,95,109,
                 97,120,95,97,110,100,95,109,105,110,40,91,123,78,97,109,101,
                 44,32,123,99,44,32,84,101,109,112,125,125,32,124,32,82,101,
                 115,116,93,44,32,10,32,32,32,32,32,32,32,32,32,123,77,97,120,
                 95,78,97,109,101,44,32,123,99,44,32,77,97,120,95,84,101,109,
                 112,125,125,44,32,10,32,32,32,32,32,32,32,32,32,123,77,105,
                 110,95,78,97,109,101,44,32,123,99,44,32,77,105,110,95,84,101,
                 109,112,125,125,41,32,45,62,10,32,32,32,32,105,102,32,10,32,
                 32,32,32,32,32,32,32,84,101,109,112,32,62,32,77,97,120,95,84,
                 101,109,112,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 77,97,120,95,67,105,116,121,32,61,32,123,78,97,109,101,44,32,
                 123,99,44,32,84,101,109,112,125,125,59,32,32,32,32,32,32,32,
                 32,32,32,32,37,32,67,104,97,110,103,101,10,32,32,32,32,32,32,
                 32,32,116,114,117,101,32,45,62,32,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,77,97,120,95,67,105,116,121,32,61,32,123,77,97,
                 120,95,78,97,109,101,44,32,123,99,44,32,77,97,120,95,84,101,
                 109,112,125,125,32,37,32,85,110,99,104,97,110,103,101,100,10,
                 32,32,32,32,101,110,100,44,10,32,32,32,32,105,102,10,32,32,
                 32,32,32,32,32,32,32,84,101,109,112,32,60,32,77,105,110,95,
                 84,101,109,112,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,77,105,110,95,67,105,116,121,32,61,32,123,78,97,109,101,
                 44,32,123,99,44,32,84,101,109,112,125,125,59,32,32,32,32,32,
                 32,32,32,32,32,32,37,32,67,104,97,110,103,101,10,32,32,32,32,
                 32,32,32,32,116,114,117,101,32,45,62,32,10,32,32,32,32,32,32,
                 32,32,32,32,32,32,77,105,110,95,67,105,116,121,32,61,32,123,
                 77,105,110,95,78,97,109,101,44,32,123,99,44,32,77,105,110,95,
                 84,101,109,112,125,125,32,37,32,85,110,99,104,97,110,103,101,
                 100,10,32,32,32,32,101,110,100,44,10,32,32,32,32,102,105,110,
                 100,95,109,97,120,95,97,110,100,95,109,105,110,40,82,101,115,
                 116,44,32,77,97,120,95,67,105,116,121,44,32,77,105,110,95,67,
                 105,116,121,41,59,10,10,102,105,110,100,95,109,97,120,95,97,
                 110,100,95,109,105,110,40,91,93,44,32,77,97,120,95,67,105,
                 116,121,44,32,77,105,110,95,67,105,116,121,41,32,45,62,10,32,
                 32,32,32,123,77,97,120,95,67,105,116,121,44,32,77,105,110,95,
                 67,105,116,121,125,46,10,10,112,114,105,110,116,95,109,97,
                 120,95,97,110,100,95,109,105,110,40,123,77,97,120,95,110,97,
                 109,101,44,32,123,99,44,32,77,97,120,95,116,101,109,112,125,
                 125,44,32,123,77,105,110,95,110,97,109,101,44,32,123,99,44,
                 32,77,105,110,95,116,101,109,112,125,125,41,32,45,62,10,32,
                 32,32,32,105,111,58,102,111,114,109,97,116,40,34,77,97,120,
                 32,116,101,109,112,101,114,97,116,117,114,101,32,119,97,115,
                 32,126,119,32,99,32,105,110,32,126,119,126,110,34,44,32,91,
                 77,97,120,95,116,101,109,112,44,32,77,97,120,95,110,97,109,
                 101,93,41,44,10,32,32,32,32,105,111,58,102,111,114,109,97,
                 116,40,34,77,105,110,32,116,101,109,112,101,114,97,116,117,
                 114,101,32,119,97,115,32,126,119,32,99,32,105,110,32,126,119,
                 126,110,34,44,32,91,77,105,110,95,116,101,109,112,44,32,77,
                 105,110,95,110,97,109,101,93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,53,56,62,32]},
               {text,"\bc(tut7)."},
               {text,
                [16,10,123,111,107,44,32,116,117,116,55,125,10,53,57,62,32]},
               {text,
                "<tut7:format_temps([{moscow, {c, -10}}, {cape_town, {f, 70}},"},
               {text,[1,10]},
               {text,
                "<{stockholm, {c, -4}}, {paris, {f, 28}}, {london, {f, 36}}])."},
               {text,
                "ö\nmoscow          -10 c\ncape_town       21.11111111111111 c\nstockholm       -4 c\nparis           -2.2222222222222223 c\nlondon          2.2222222222222223 c\nMax temperature was 21.11111111111111 c in cape_town\nMin temperature was -10 c in moscow\nok"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[16,35,35,35,35,32,73,102,32,97,110,100,32,67,97,115,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fThe function"}],0,false},
               {text,
                [18,42,102,105,110,100,95,109,97,120,95,97,110,100,95,109,105,
                 110,42]},
               {sep,
                [{text,
                  "?works out the maximum and minimum temperature. A new construct,"}],
                0,false},
               {text,[4,42,105,102,42]},
               {sep,
                [{text,"*, is introduced here. If works as follows:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [154,10,105,102,10,32,32,32,32,67,111,110,100,105,116,105,111,
                 110,32,49,32,45,62,10,32,32,32,32,32,32,32,32,65,99,116,105,
                 111,110,32,49,59,10,32,32,32,32,67,111,110,100,105,116,105,
                 111,110,32,50,32,45,62,10,32,32,32,32,32,32,32,32,65,99,116,
                 105,111,110,32,50,59,10,32,32,32,32,67,111,110,100,105,116,
                 105,111,110,32,51,32,45,62,10,32,32,32,32,32,32,32,32,65,99,
                 116,105,111,110,32,51,59,10,32,32,32,32,67,111,110,100,105,
                 116,105,111,110,32,52,32,45,62,10,32,32,32,32,32,32,32,32,65,
                 99,116,105,111,110,32,52,10,101,110,100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\"Notice that there is no \";\" before"}],0,false},
               {text,[5,42,101,110,100,42]},
               {sep,
                [{text,
                  [269,46,32,67,111,110,100,105,116,105,111,110,115,32,100,
                   111,32,116,104,101,32,115,97,109,101,32,97,115,32,103,117,
                   97,114,100,115,44,32,116,104,97,116,32,105,115,44,32,116,
                   101,115,116,115,32,116,104,97,116,32,115,117,99,99,101,101,
                   100,32,111,114,32,102,97,105,108,46,32,69,114,108,97,110,
                   103,32,115,116,97,114,116,115,32,97,116,32,116,104,101,32,
                   116,111,112,32,97,110,100,32,116,101,115,116,115,32,117,
                   110,116,105,108,32,105,116,32,102,105,110,100,115,32,97,32,
                   99,111,110,100,105,116,105,111,110,32,116,104,97,116,32,
                   115,117,99,99,101,101,100,115,46,32,84,104,101,110,32,105,
                   116,32,101,118,97,108,117,97,116,101,115,32,40,112,101,114,
                   102,111,114,109,115,41,32,116,104,101,32,97,99,116,105,111,
                   110,32,102,111,108,108,111,119,105,110,103,32,116,104,101,
                   32,99,111,110,100,105,116,105,111,110,32,97,110,100,32,105,
                   103,110,111,114,101,115,32,97,108,108,32,111,116,104,101,
                   114,32,99,111,110,100,105,116,105,111,110,115,32,97,110,
                   100,32,97,99,116,105,111,110,115,32,98,101,102,111,114,101,
                   32,116,104,101]}],
                0,false},
               {text,[5,42,101,110,100,42]},
               {sep,
                [{text,
                  "b. If no condition matches, a run-time failure occurs. A condition that always succeeds is the atom"}],
                0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,
                [{text,
                  [31,46,32,84,104,105,115,32,105,115,32,111,102,116,101,110,
                   32,117,115,101,100,32,108,97,115,116,32,105,110,32,97,
                   110]}],
                0,false},
               {text,[4,42,105,102,42]},
               {sep,
                [{text,"&, meaning, do the action following the"}],
                0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,[{text,"$if all other conditions have failed."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "8The following is a short program to show the workings of"}],
                0,false},
               {text,[4,42,105,102,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [564,10,45,109,111,100,117,108,101,40,116,117,116,57,41,46,10,
                 45,101,120,112,111,114,116,40,91,116,101,115,116,95,105,102,
                 47,50,93,41,46,10,10,116,101,115,116,95,105,102,40,65,44,32,
                 66,41,32,45,62,10,32,32,32,32,105,102,32,10,32,32,32,32,32,
                 32,32,32,65,32,61,61,32,53,32,45,62,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,65,32,
                 61,61,32,53,126,110,34,44,32,91,93,41,44,10,32,32,32,32,32,
                 32,32,32,32,32,32,32,97,95,101,113,117,97,108,115,95,53,59,
                 10,32,32,32,32,32,32,32,32,66,32,61,61,32,54,32,45,62,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,111,114,109,
                 97,116,40,34,66,32,61,61,32,54,126,110,34,44,32,91,93,41,44,
                 10,32,32,32,32,32,32,32,32,32,32,32,32,98,95,101,113,117,97,
                 108,115,95,54,59,10,32,32,32,32,32,32,32,32,65,32,61,61,32,
                 50,44,32,66,32,61,61,32,51,32,45,62,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,37,84,104,97,116,
                 32,105,115,32,65,32,101,113,117,97,108,115,32,50,32,97,110,
                 100,32,66,32,101,113,117,97,108,115,32,51,10,32,32,32,32,32,
                 32,32,32,32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,
                 65,32,61,61,32,50,44,32,66,32,61,61,32,51,126,110,34,44,32,
                 91,93,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,97,95,101,
                 113,117,97,108,115,95,50,95,98,95,101,113,117,97,108,115,95,
                 51,59,10,32,32,32,32,32,32,32,32,65,32,61,61,32,49,32,59,32,
                 66,32,61,61,32,55,32,45,62,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,37,84,104,97,116,32,105,115,32,
                 65,32,101,113,117,97,108,115,32,49,32,111,114,32,66,32,101,
                 113,117,97,108,115,32,55,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,105,111,58,102,111,114,109,97,116,40,34,65,32,61,61,32,49,
                 32,59,32,66,32,61,61,32,55,126,110,34,44,32,91,93,41,44,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,97,95,101,113,117,97,108,
                 115,95,49,95,111,114,95,98,95,101,113,117,97,108,115,95,55,
                 10,32,32,32,32,101,110,100,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"\eTesting this program gives:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,54,48,62,32]},
               {text,"\bc(tut9)."},
               {text,[15,10,123,111,107,44,116,117,116,57,125,10,54,49,62,32]},
               {text,
                [19,116,117,116,57,58,116,101,115,116,95,105,102,40,53,44,51,
                 51,41,46]},
               {text,
                [23,10,65,32,61,61,32,53,10,97,95,101,113,117,97,108,115,95,
                 53,10,54,50,62,32]},
               {text,
                [19,116,117,116,57,58,116,101,115,116,95,105,102,40,51,51,44,
                 54,41,46]},
               {text,
                [23,10,66,32,61,61,32,54,10,98,95,101,113,117,97,108,115,95,
                 54,10,54,51,62,32]},
               {text,
                [19,116,117,116,57,58,116,101,115,116,95,105,102,40,50,44,32,
                 51,41,46]},
               {text,"*\nA == 2, B == 3\na_equals_2_b_equals_3\n64> "},
               {text,
                [20,116,117,116,57,58,116,101,115,116,95,105,102,40,49,44,32,
                 51,51,41,46]},
               {text,".\nA == 1 ; B == 7\na_equals_1_or_b_equals_7\n65> "},
               {text,
                [20,116,117,116,57,58,116,101,115,116,95,105,102,40,51,51,44,
                 32,55,41,46]},
               {text,".\nA == 1 ; B == 7\na_equals_1_or_b_equals_7\n66> "},
               {text,
                [21,116,117,116,57,58,116,101,115,116,95,105,102,40,51,51,44,
                 32,51,51,41,46]},
               {text,
                "~\n** exception error: no true branch found when evaluating an if expression\n     in function  tut9:test_if/2 (tut9.erl, line 5)"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\vNotice that"}],0,false},
               {text,
                [21,42,116,117,116,57,58,116,101,115,116,95,105,102,40,51,51,
                 44,51,51,41,42]},
               {sep,
                [{text,
                  "Idoes not cause any condition to succeed. This leads to the run time error"}],
                0,false},
               {text,"\v*if_clause*"},
               {sep,
                [{text,"), here nicely formatted by the shell. See"}],
                0,false},
               {text," [Guard Sequences](./expressions)"},
               {sep,
                [{text,".for details of the many guard tests available."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[6,42,99,97,115,101,42]},
               {sep,
                [{text,"/is another construct in Erlang. Recall that the"}],
                0,false},
               {text,
                [16,42,99,111,110,118,101,114,116,95,108,101,110,103,116,104,
                 42]},
               {sep,
                [{text,
                  [24,102,117,110,99,116,105,111,110,32,119,97,115,32,119,114,
                   105,116,116,101,110,32,97,115,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "r\nconvert_length({centimeter, X}) ->\n    {inch, X / 2.54};\nconvert_length({inch, Y}) ->\n    {centimeter, Y * 2.54}."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"(The same program can also be written as:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Õ\n-module(tut10).\n-export([convert_length/1]).\n\nconvert_length(Length) ->\n    case Length of\n        {centimeter, X} ->\n            {inch, X / 2.54};\n        {inch, Y} ->\n            {centimeter, Y * 2.54}\n    end."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,54,55,62,32]},
               {text,"\tc(tut10)."},
               {text,
                [16,10,123,111,107,44,116,117,116,49,48,125,10,54,56,62,32]},
               {text," tut10:convert_length({inch, 6})."},
               {text,
                [24,10,123,99,101,110,116,105,109,101,116,101,114,44,49,53,46,
                 50,52,125,10,54,57,62,32]},
               {text,"(tut10:convert_length({centimeter, 2.5})."},
               {text,
                [25,10,123,105,110,99,104,44,48,46,57,56,52,50,53,49,57,54,56,
                 53,48,51,57,51,55,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[4,66,111,116,104]}],0,false},
               {text,[6,42,99,97,115,101,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[4,42,105,102,42]},
               {sep,[{text,[4,104,97,118,101]}],0,false},
               {text,
                [17,42,42,114,101,116,117,114,110,32,118,97,108,117,101,115,
                 42,42]},
               {sep,
                [{text,
                  [31,44,32,116,104,97,116,32,105,115,44,32,105,110,32,116,
                   104,101,32,97,98,111,118,101,32,101,120,97,109,112,108,
                   101]}],
                0,false},
               {text,[6,42,99,97,115,101,42]},
               {sep,
                [{text,
                  [15,114,101,116,117,114,110,101,100,32,101,105,116,104,101,
                   114]}],
                0,false},
               {text,[15,42,123,105,110,99,104,44,88,47,50,46,53,52,125,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [21,42,123,99,101,110,116,105,109,101,116,101,114,44,89,42,50,
                 46,53,52,125,42]},
               {sep,
                [{text,
                  [18,46,32,84,104,101,32,98,101,104,97,118,105,111,117,114,
                   32,111,102]}],
                0,false},
               {text,[6,42,99,97,115,101,42]},
               {sep,
                [{text,
                  "Ácan also be modified by using guards. The following example clarifies this. It tells us the length of a month, given the year. The year must be known, since February has 29 days in a leap year."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [788,10,45,109,111,100,117,108,101,40,116,117,116,49,49,41,46,
                 10,45,101,120,112,111,114,116,40,91,109,111,110,116,104,95,
                 108,101,110,103,116,104,47,50,93,41,46,10,10,109,111,110,116,
                 104,95,108,101,110,103,116,104,40,89,101,97,114,44,32,77,111,
                 110,116,104,41,32,45,62,10,32,32,32,32,37,37,32,65,108,108,
                 32,121,101,97,114,115,32,100,105,118,105,115,105,98,108,101,
                 32,98,121,32,52,48,48,32,97,114,101,32,108,101,97,112,10,32,
                 32,32,32,37,37,32,89,101,97,114,115,32,100,105,118,105,115,
                 105,98,108,101,32,98,121,32,49,48,48,32,97,114,101,32,110,
                 111,116,32,108,101,97,112,32,40,101,120,99,101,112,116,32,
                 116,104,101,32,52,48,48,32,114,117,108,101,32,97,98,111,118,
                 101,41,10,32,32,32,32,37,37,32,89,101,97,114,115,32,100,105,
                 118,105,115,105,98,108,101,32,98,121,32,52,32,97,114,101,32,
                 108,101,97,112,32,40,101,120,99,101,112,116,32,116,104,101,
                 32,49,48,48,32,114,117,108,101,32,97,98,111,118,101,41,10,32,
                 32,32,32,76,101,97,112,32,61,32,105,102,10,32,32,32,32,32,32,
                 32,32,116,114,117,110,99,40,89,101,97,114,32,47,32,52,48,48,
                 41,32,42,32,52,48,48,32,61,61,32,89,101,97,114,32,45,62,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,108,101,97,112,59,10,32,
                 32,32,32,32,32,32,32,116,114,117,110,99,40,89,101,97,114,32,
                 47,32,49,48,48,41,32,42,32,49,48,48,32,61,61,32,89,101,97,
                 114,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,110,111,
                 116,95,108,101,97,112,59,10,32,32,32,32,32,32,32,32,116,114,
                 117,110,99,40,89,101,97,114,32,47,32,52,41,32,42,32,52,32,61,
                 61,32,89,101,97,114,32,45,62,10,32,32,32,32,32,32,32,32,32,
                 32,32,32,108,101,97,112,59,10,32,32,32,32,32,32,32,32,116,
                 114,117,101,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 110,111,116,95,108,101,97,112,10,32,32,32,32,101,110,100,44,
                 32,32,10,32,32,32,32,99,97,115,101,32,77,111,110,116,104,32,
                 111,102,10,32,32,32,32,32,32,32,32,115,101,112,32,45,62,32,
                 51,48,59,10,32,32,32,32,32,32,32,32,97,112,114,32,45,62,32,
                 51,48,59,10,32,32,32,32,32,32,32,32,106,117,110,32,45,62,32,
                 51,48,59,10,32,32,32,32,32,32,32,32,110,111,118,32,45,62,32,
                 51,48,59,10,32,32,32,32,32,32,32,32,102,101,98,32,119,104,
                 101,110,32,76,101,97,112,32,61,61,32,108,101,97,112,32,45,62,
                 32,50,57,59,10,32,32,32,32,32,32,32,32,102,101,98,32,45,62,
                 32,50,56,59,10,32,32,32,32,32,32,32,32,106,97,110,32,45,62,
                 32,51,49,59,10,32,32,32,32,32,32,32,32,109,97,114,32,45,62,
                 32,51,49,59,10,32,32,32,32,32,32,32,32,109,97,121,32,45,62,
                 32,51,49,59,10,32,32,32,32,32,32,32,32,106,117,108,32,45,62,
                 32,51,49,59,10,32,32,32,32,32,32,32,32,97,117,103,32,45,62,
                 32,51,49,59,10,32,32,32,32,32,32,32,32,111,99,116,32,45,62,
                 32,51,49,59,10,32,32,32,32,32,32,32,32,100,101,99,32,45,62,
                 32,51,49,10,32,32,32,32,101,110,100,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,55,48,62,32]},
               {text,"\tc(tut11)."},
               {text,
                [16,10,123,111,107,44,116,117,116,49,49,125,10,55,49,62,32]},
               {text,
                [30,116,117,116,49,49,58,109,111,110,116,104,95,108,101,110,
                 103,116,104,40,50,48,48,52,44,32,102,101,98,41,46]},
               {text,"\b\n29\n72> "},
               {text,
                [30,116,117,116,49,49,58,109,111,110,116,104,95,108,101,110,
                 103,116,104,40,50,48,48,51,44,32,102,101,98,41,46]},
               {text,"\b\n28\n73> "},
               {text,
                [30,116,117,116,49,49,58,109,111,110,116,104,95,108,101,110,
                 103,116,104,40,49,57,52,55,44,32,97,117,103,41,46]},
               {text,[3,10,51,49]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [30,35,35,35,35,32,66,117,105,108,116,45,73,110,32,70,117,110,99,
             116,105,111,110,115,32,40,66,73,70,115,41]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [277,66,73,70,115,32,97,114,101,32,102,117,110,99,116,105,
                   111,110,115,32,116,104,97,116,32,102,111,114,32,115,111,
                   109,101,32,114,101,97,115,111,110,32,97,114,101,32,98,117,
                   105,108,116,45,105,110,32,116,111,32,116,104,101,32,69,114,
                   108,97,110,103,32,118,105,114,116,117,97,108,32,109,97,99,
                   104,105,110,101,46,32,66,73,70,115,32,111,102,116,101,110,
                   32,105,109,112,108,101,109,101,110,116,32,102,117,110,99,
                   116,105,111,110,97,108,105,116,121,32,116,104,97,116,32,
                   105,115,32,105,109,112,111,115,115,105,98,108,101,32,111,
                   114,32,105,115,32,116,111,111,32,105,110,101,102,102,105,
                   99,105,101,110,116,32,116,111,32,105,109,112,108,101,109,
                   101,110,116,32,105,110,32,69,114,108,97,110,103,46,32,83,
                   111,109,101,32,66,73,70,115,32,99,97,110,32,98,101,32,99,
                   97,108,108,101,100,32,117,115,105,110,103,32,116,104,101,
                   32,102,117,110,99,116,105,111,110,32,110,97,109,101,32,111,
                   110,108,121,32,98,117,116,32,116,104,101,121,32,97,114,101,
                   32,98,121,32,100,101,102,97,117,108,116,32,98,101,108,111,
                   110,103,105,110,103,32,116,111,32,116,104,101]}],
                0,false},
               {text,"\b*erlang*"},
               {sep,
                [{text,"(module. For example, the call to the BIF"}],
                0,false},
               {text,[7,42,116,114,117,110,99,42]},
               {sep,[{text," below is equivalent to a call to"}],0,false},
               {text,[14,42,101,114,108,97,110,103,58,116,114,117,110,99,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "¢As shown, first it is checked if a year is leap. If a year is divisible by 400, it is a leap year. To determine this, first divide the year by 400 and use the BIF"}],
                0,false},
               {text,[7,42,116,114,117,110,99,42]},
               {sep,
                [{text,
                  [144,40,109,111,114,101,32,97,98,111,117,116,32,116,104,105,
                   115,32,108,97,116,101,114,41,32,116,111,32,99,117,116,32,
                   111,102,102,32,97,110,121,32,100,101,99,105,109,97,108,115,
                   46,32,84,104,101,110,32,109,117,108,116,105,112,108,121,32,
                   98,121,32,52,48,48,32,97,103,97,105,110,32,97,110,100,32,
                   115,101,101,32,105,102,32,116,104,101,32,115,97,109,101,32,
                   118,97,108,117,101,32,105,115,32,114,101,116,117,114,110,
                   101,100,32,97,103,97,105,110,46,32,70,111,114,32,101,120,
                   97,109,112,108,101,44,32,121,101,97,114,32,50,48,48,52,
                   58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"1\n2004 / 400 = 5.01\ntrunc(5.01) = 5\n5 * 400 = 2000"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "I2000 is not the same as 2004, so 2004 is not divisible by 400. Year 2000:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"/\n2000 / 400 = 5.0\ntrunc(5.0) = 5\n5 * 400 = 2000"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\"That is, a leap year. The next two"}],0,false},
               {text,[7,42,116,114,117,110,99,42]},
               {sep,
                [{text,
                  "O-tests evaluate if the year is divisible by 100 or 4 in the same way. The first"}],
                0,false},
               {text,[4,42,105,102,42]},
               {sep,[{text,[7,114,101,116,117,114,110,115]}],0,false},
               {text,[6,42,108,101,97,112,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"\n*not_leap*"},
               {sep,[{text," , which lands up in the variable"}],0,false},
               {text,[6,42,76,101,97,112,42]},
               {sep,
                [{text,"(. This variable is used in the guard for"}],
                0,false},
               {text,[5,42,102,101,98,42]},
               {sep,
                [{text,
                  [16,105,110,32,116,104,101,32,102,111,108,108,111,119,105,
                   110,103]}],
                0,false},
               {text,[6,42,99,97,115,101,42]},
               {sep,[{text,"$that tells us how long the month is."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [30,84,104,105,115,32,101,120,97,109,112,108,101,32,115,104,
                   111,119,101,100,32,116,104,101,32,117,115,101,32,111,102]}],
                0,false},
               {text,[7,42,116,114,117,110,99,42]},
               {sep,
                [{text,"). It is easier to use the Erlang operator"}],
                0,false},
               {text,[5,42,114,101,109,42]},
               {sep,
                [{text,
                  "5that gives the remainder after division, for example:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,55,52,62,32]},
               {text,"\r2004 rem 400."},
               {text,[2,10,52]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [22,83,111,32,105,110,115,116,101,97,100,32,111,102,32,119,
                 114,105,116,105,110,103,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"-\ntrunc(Year / 400) * 400 == Year ->\n    leap;"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [18,105,116,32,99,97,110,32,98,101,32,119,114,105,116,116,101,
                 110,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [31,10,89,101,97,114,32,114,101,109,32,52,48,48,32,61,61,32,
                 48,32,45,62,10,32,32,32,32,108,101,97,112,59]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"!There are many other BIFs such as"}],0,false},
               {text,[7,42,116,114,117,110,99,42]},
               {sep,
                [{text,
                  "o. Only a few BIFs can be used in guards, and you cannot use functions you have defined yourself in guards. (see"}],
                0,false},
               {text," [Guard Sequences](./expressions)"},
               {sep,
                [{text,
                  [137,41,32,40,70,111,114,32,97,100,118,97,110,99,101,100,32,
                   114,101,97,100,101,114,115,58,32,84,104,105,115,32,105,115,
                   32,116,111,32,101,110,115,117,114,101,32,116,104,97,116,32,
                   103,117,97,114,100,115,32,100,111,32,110,111,116,32,104,97,
                   118,101,32,115,105,100,101,32,101,102,102,101,99,116,115,
                   46,41,32,76,101,116,32,117,115,32,112,108,97,121,32,119,
                   105,116,104,32,97,32,102,101,119,32,111,102,32,116,104,101,
                   115,101,32,102,117,110,99,116,105,111,110,115,32,105,110,
                   32,116,104,101,32,115,104,101,108,108,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,55,53,62,32]},
               {text,"\vtrunc(5.6)."},
               {text,[7,10,53,10,55,54,62,32]},
               {text,"\vround(5.6)."},
               {text,[7,10,54,10,55,55,62,32]},
               {text,
                [18,108,101,110,103,116,104,40,91,97,44,98,44,99,44,100,93,41,
                 46]},
               {text,[7,10,52,10,55,56,62,32]},
               {text,"\tfloat(5)."},
               {text,"\t\n5.0\n79> "},
               {text,
                [15,105,115,95,97,116,111,109,40,104,101,108,108,111,41,46]},
               {text,"\n\ntrue\n80> "},
               {text,
                [17,105,115,95,97,116,111,109,40,34,104,101,108,108,111,34,41,
                 46]},
               {text,"\v\nfalse\n81> "},
               {text,"\eis_tuple({paris, {c, 30}})."},
               {text,"\n\ntrue\n82> "},
               {text,"\eis_tuple([paris, {c, 30}])."},
               {text,[6,10,102,97,108,115,101]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "TAll of these can be used in guards. Now for some BIFs that cannot be used in guards:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,56,51,62,32]},
               {text,
                [20,97,116,111,109,95,116,111,95,108,105,115,116,40,104,101,
                 108,108,111,41,46]},
               {text,"\r\n\"hello\"\n84> "},
               {text,
                [24,108,105,115,116,95,116,111,95,97,116,111,109,40,34,103,
                 111,111,100,98,121,101,34,41,46]},
               {text,"\r\ngoodbye\n85> "},
               {text,
                [20,105,110,116,101,103,101,114,95,116,111,95,108,105,115,116,
                 40,50,50,41,46]},
               {text,[5,10,34,50,50,34]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "XThese three BIFs do conversions that would be difficult (or impossible) to do in Erlang."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"\"#### Higher-Order Functions (Funs)"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "zErlang, like most modern functional programming languages, has higher-order functions. Here is an example using the shell:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,56,54,62,32]},
               {text,
                [25,88,102,32,61,32,102,117,110,40,88,41,32,45,62,32,88,32,42,
                 32,50,32,101,110,100,46]},
               {text,[5,10,35,70,117,110]},
               {text,
                [21,60,101,114,108,95,101,118,97,108,46,53,46,49,50,51,48,56,
                 53,51,53,55]},
               {text,[6,62,10,56,55,62,32]},
               {text,[6,88,102,40,53,41,46]},
               {text,[3,10,49,48]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "lHere is defined a function that doubles the value of a number and assigned this function to a variable. Thus"}],
                0,false},
               {text,[7,42,88,102,40,53,41,42]},
               {sep,
                [{text,
                  "Breturns value 10. Two useful functions when working with lists are"}],
                0,false},
               {text,"\t*foreach*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[5,42,109,97,112,42]},
               {sep,
                [{text,
                  [31,44,32,119,104,105,99,104,32,97,114,101,32,100,101,102,
                   105,110,101,100,32,97,115,32,102,111,108,108,111,119,115,
                   58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "·\nforeach(Fun, [First|Rest]) ->\n    Fun(First),\n    foreach(Fun, Rest);\nforeach(Fun, []) ->\n    ok.\n\nmap(Fun, [First|Rest]) -> \n    [Fun(First)|map(Fun,Rest)];\nmap(Fun, []) -> \n    []."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "7These two functions are provided in the standard module"}],
                0,false},
               {text,[7,42,108,105,115,116,115,42]},
               {sep,[{text,[1,46]}],0,false},
               {text,"\t*foreach*"},
               {sep,
                [{text,
                  "<takes a list and applies a fun to every element in the list."}],
                0,false},
               {text,[5,42,109,97,112,42]},
               {sep,
                [{text,
                  "Ycreates a new list by applying a fun to every element in a list. Going back to the shell,"}],
                0,false},
               {text,[5,42,109,97,112,42]},
               {sep,
                [{text,
                  "6is used and a fun to add 3 to every element of a list:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,56,56,62,32]},
               {text,
                [28,65,100,100,95,51,32,61,32,102,117,110,40,88,41,32,45,62,
                 32,88,32,43,32,51,32,101,110,100,46]},
               {text,[5,10,35,70,117,110]},
               {text,
                [21,60,101,114,108,95,101,118,97,108,46,53,46,49,50,51,48,56,
                 53,51,53,55]},
               {text,[6,62,10,56,57,62,32]},
               {text,
                [26,108,105,115,116,115,58,109,97,112,40,65,100,100,95,51,44,
                 32,91,49,44,50,44,51,93,41,46]},
               {text,"\b\n[4,5,6]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                ":Let us (again) print the temperatures in a list of cities:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,57,48,62,32]},
               {text,
                "APrint_City = fun({City, {X, Temp}}) -> io:format(\"~-15w ~w ~w~n\","},
               {text,[1,10]},
               {text,
                [21,91,67,105,116,121,44,32,88,44,32,84,101,109,112,93,41,32,
                 101,110,100,46]},
               {text,[5,10,35,70,117,110]},
               {text,
                [21,60,101,114,108,95,101,118,97,108,46,53,46,49,50,51,48,56,
                 53,51,53,55]},
               {text,[6,62,10,57,49,62,32]},
               {text,
                "Dlists:foreach(Print_City, [{moscow, {c, -10}}, {cape_town, {f, 70}},"},
               {text,[1,10]},
               {text,
                "<{stockholm, {c, -4}}, {paris, {f, 28}}, {london, {f, 36}}])."},
               {text,
                "m\nmoscow          c -10\ncape_town       f 70\nstockholm       c -4\nparis           f 28\nlondon          f 36\nok"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "{Let us now define a fun that can be used to go through a list of cities and temperatures and transform them all to Celsius."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [257,10,45,109,111,100,117,108,101,40,116,117,116,49,51,41,46,
                 10,10,45,101,120,112,111,114,116,40,91,99,111,110,118,101,
                 114,116,95,108,105,115,116,95,116,111,95,99,47,49,93,41,46,
                 10,10,99,111,110,118,101,114,116,95,116,111,95,99,40,123,78,
                 97,109,101,44,32,123,102,44,32,84,101,109,112,125,125,41,32,
                 45,62,10,32,32,32,32,123,78,97,109,101,44,32,123,99,44,32,
                 116,114,117,110,99,40,40,84,101,109,112,32,45,32,51,50,41,32,
                 42,32,53,32,47,32,57,41,125,125,59,10,99,111,110,118,101,114,
                 116,95,116,111,95,99,40,123,78,97,109,101,44,32,123,99,44,32,
                 84,101,109,112,125,125,41,32,45,62,10,32,32,32,32,123,78,97,
                 109,101,44,32,123,99,44,32,84,101,109,112,125,125,46,10,10,
                 99,111,110,118,101,114,116,95,108,105,115,116,95,116,111,95,
                 99,40,76,105,115,116,41,32,45,62,10,32,32,32,32,108,105,115,
                 116,115,58,109,97,112,40,102,117,110,32,99,111,110,118,101,
                 114,116,95,116,111,95,99,47,49,44,32,76,105,115,116,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,57,50,62,32]},
               {text,
                "Btut13:convert_list_to_c([{moscow, {c, -10}}, {cape_town, {f, 70}},"},
               {text,[1,10]},
               {text,
                "<{stockholm, {c, -4}}, {paris, {f, 28}}, {london, {f, 36}}])."},
               {text,
                "_\n[{moscow,{c,-10}},\n {cape_town,{c,21}},\n {stockholm,{c,-4}},\n {paris,{c,-2}},\n {london,{c,2}}]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,[14,42,99,111,110,118,101,114,116,95,116,111,95,99,42]},
               {sep,
                [{text,
                  "=function is the same as before, but here it is used as a fun:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"$\nlists:map(fun convert_to_c/1, List)"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "LWhen a function defined elsewhere is used as a fun, it can be referred to as"}],
                0,false},
               {text,
                [16,42,70,117,110,99,116,105,111,110,47,65,114,105,116,121,
                 42]},
               {sep,
                [{text,
                  [14,40,114,101,109,101,109,98,101,114,32,116,104,97,116]}],
                0,false},
               {text,[7,42,65,114,105,116,121,42]},
               {sep,[{text,"!= number of arguments). So in the"}],0,false},
               {text,[5,42,109,97,112,42]},
               {sep,[{text,[5,45,99,97,108,108]}],0,false},
               {text,"%*lists:map(fun convert_to_c/1, List)*"},
               {sep,
                [{text,
                  [21,105,115,32,119,114,105,116,116,101,110,46,32,65,115,32,
                   115,104,111,119,110,44]}],
                0,false},
               {text,
                [19,42,99,111,110,118,101,114,116,95,108,105,115,116,95,116,
                 111,95,99,42]},
               {sep,
                [{text,".becomes much shorter and easier to understand."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [19,84,104,101,32,115,116,97,110,100,97,114,100,32,109,111,
                   100,117,108,101]}],
                0,false},
               {text,[7,42,108,105,115,116,115,42]},
               {sep,
                [{text,
                  [24,97,108,115,111,32,99,111,110,116,97,105,110,115,32,97,
                   32,102,117,110,99,116,105,111,110]}],
                0,false},
               {text,
                [17,42,115,111,114,116,40,70,117,110,44,32,76,105,115,116,41,
                 42]},
               {sep,[{text,[5,119,104,101,114,101]}],0,false},
               {text,[5,42,70,117,110,42]},
               {sep,
                [{text,"-is a fun with two arguments. This fun returns"}],
                0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,
                [{text,
                  "?if the first argument is less than the second argument, or else"}],
                0,false},
               {text,[7,42,102,97,108,115,101,42]},
               {sep,
                [{text,
                  [25,46,32,83,111,114,116,105,110,103,32,105,115,32,97,100,
                   100,101,100,32,116,111,32,116,104,101]}],
                0,false},
               {text,
                [19,42,99,111,110,118,101,114,116,95,108,105,115,116,95,116,
                 111,95,99,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [377,10,45,109,111,100,117,108,101,40,116,117,116,49,51,41,46,
                 10,10,45,101,120,112,111,114,116,40,91,99,111,110,118,101,
                 114,116,95,108,105,115,116,95,116,111,95,99,47,49,93,41,46,
                 10,10,99,111,110,118,101,114,116,95,116,111,95,99,40,123,78,
                 97,109,101,44,32,123,102,44,32,84,101,109,112,125,125,41,32,
                 45,62,10,32,32,32,32,123,78,97,109,101,44,32,123,99,44,32,
                 116,114,117,110,99,40,40,84,101,109,112,32,45,32,51,50,41,32,
                 42,32,53,32,47,32,57,41,125,125,59,10,99,111,110,118,101,114,
                 116,95,116,111,95,99,40,123,78,97,109,101,44,32,123,99,44,32,
                 84,101,109,112,125,125,41,32,45,62,10,32,32,32,32,123,78,97,
                 109,101,44,32,123,99,44,32,84,101,109,112,125,125,46,10,10,
                 99,111,110,118,101,114,116,95,108,105,115,116,95,116,111,95,
                 99,40,76,105,115,116,41,32,45,62,10,32,32,32,32,78,101,119,
                 95,108,105,115,116,32,61,32,108,105,115,116,115,58,109,97,
                 112,40,102,117,110,32,99,111,110,118,101,114,116,95,116,111,
                 95,99,47,49,44,32,76,105,115,116,41,44,10,32,32,32,32,108,
                 105,115,116,115,58,115,111,114,116,40,102,117,110,40,123,95,
                 44,32,123,99,44,32,84,101,109,112,49,125,125,44,32,123,95,44,
                 32,123,99,44,32,84,101,109,112,50,125,125,41,32,45,62,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,84,101,109,112,49,32,60,32,84,101,109,112,50,32,101,
                 110,100,44,32,78,101,119,95,108,105,115,116,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,57,51,62,32]},
               {text,"\tc(tut13)."},
               {text,
                [16,10,123,111,107,44,116,117,116,49,51,125,10,57,52,62,32]},
               {text,
                "Btut13:convert_list_to_c([{moscow, {c, -10}}, {cape_town, {f, 70}},"},
               {text,[1,10]},
               {text,
                "<{stockholm, {c, -4}}, {paris, {f, 28}}, {london, {f, 36}}])."},
               {text,
                "_\n[{moscow,{c,-10}},\n {stockholm,{c,-4}},\n {paris,{c,-2}},\n {london,{c,2}},\n {cape_town,{c,21}}]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,110]}],0,false},
               {text,[6,42,115,111,114,116,42]},
               {sep,
                [{text,
                  [16,116,104,101,32,102,117,110,32,105,115,32,117,115,101,
                   100,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "<\nfun({_, {c, Temp1}}, {_, {c, Temp2}}) -> Temp1 < Temp2 end,"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [22,72,101,114,101,32,116,104,101,32,99,111,110,99,101,112,
                   116,32,111,102,32,97,110]}],
                0,false},
               {text,
                [22,42,42,97,110,111,110,121,109,111,117,115,32,118,97,114,
                 105,97,98,108,101,42,42]},
               {sep,
                [{text,
                  [157,34,95,34,32,105,115,32,105,110,116,114,111,100,117,99,
                   101,100,46,32,84,104,105,115,32,105,115,32,115,105,109,112,
                   108,121,32,115,104,111,114,116,104,97,110,100,32,102,111,
                   114,32,97,32,118,97,114,105,97,98,108,101,32,116,104,97,
                   116,32,103,101,116,115,32,97,32,118,97,108,117,101,44,32,
                   98,117,116,32,116,104,101,32,118,97,108,117,101,32,105,115,
                   32,105,103,110,111,114,101,100,46,32,84,104,105,115,32,99,
                   97,110,32,98,101,32,117,115,101,100,32,97,110,121,119,104,
                   101,114,101,32,115,117,105,116,97,98,108,101,44,32,110,111,
                   116,32,106,117,115,116,32,105,110,32,102,117,110,115,46]}],
                0,false},
               {text,[15,42,84,101,109,112,49,32,60,32,84,101,109,112,50,42]},
               {sep,[{text,[7,114,101,116,117,114,110,115]}],0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,[{text,[2,105,102]}],0,false},
               {text,[7,42,84,101,109,112,49,42]},
               {sep,[{text,"\fis less than"}],0,false},
               {text,[7,42,84,101,109,112,50,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{text,
       "=<a name=\"Distributed Programming\">Distributed Programming</a>"},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[14,35,35,35,35,32,80,114,111,99,101,115,115,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [775,79,110,101,32,111,102,32,116,104,101,32,109,97,105,110,
                   32,114,101,97,115,111,110,115,32,102,111,114,32,117,115,
                   105,110,103,32,69,114,108,97,110,103,32,105,110,115,116,
                   101,97,100,32,111,102,32,111,116,104,101,114,32,102,117,
                   110,99,116,105,111,110,97,108,32,108,97,110,103,117,97,103,
                   101,115,32,105,115,32,69,114,108,97,110,103,39,115,32,97,
                   98,105,108,105,116,121,32,116,111,32,104,97,110,100,108,
                   101,32,99,111,110,99,117,114,114,101,110,99,121,32,97,110,
                   100,32,100,105,115,116,114,105,98,117,116,101,100,32,112,
                   114,111,103,114,97,109,109,105,110,103,46,32,66,121,32,99,
                   111,110,99,117,114,114,101,110,99,121,32,105,115,32,109,
                   101,97,110,116,32,112,114,111,103,114,97,109,115,32,116,
                   104,97,116,32,99,97,110,32,104,97,110,100,108,101,32,115,
                   101,118,101,114,97,108,32,116,104,114,101,97,100,115,32,
                   111,102,32,101,120,101,99,117,116,105,111,110,32,97,116,32,
                   116,104,101,32,115,97,109,101,32,116,105,109,101,46,32,70,
                   111,114,32,101,120,97,109,112,108,101,44,32,109,111,100,
                   101,114,110,32,111,112,101,114,97,116,105,110,103,32,115,
                   121,115,116,101,109,115,32,97,108,108,111,119,32,121,111,
                   117,32,116,111,32,117,115,101,32,97,32,119,111,114,100,32,
                   112,114,111,99,101,115,115,111,114,44,32,97,32,115,112,114,
                   101,97,100,115,104,101,101,116,44,32,97,32,109,97,105,108,
                   32,99,108,105,101,110,116,44,32,97,110,100,32,97,32,112,
                   114,105,110,116,32,106,111,98,32,97,108,108,32,114,117,110,
                   110,105,110,103,32,97,116,32,116,104,101,32,115,97,109,101,
                   32,116,105,109,101,46,32,69,97,99,104,32,112,114,111,99,
                   101,115,115,111,114,32,40,67,80,85,41,32,105,110,32,116,
                   104,101,32,115,121,115,116,101,109,32,105,115,32,112,114,
                   111,98,97,98,108,121,32,111,110,108,121,32,104,97,110,100,
                   108,105,110,103,32,111,110,101,32,116,104,114,101,97,100,
                   32,40,111,114,32,106,111,98,41,32,97,116,32,97,32,116,105,
                   109,101,44,32,98,117,116,32,105,116,32,115,119,97,112,115,
                   32,98,101,116,119,101,101,110,32,116,104,101,32,106,111,98,
                   115,32,97,116,32,115,117,99,104,32,97,32,114,97,116,101,32,
                   116,104,97,116,32,105,116,32,103,105,118,101,115,32,116,
                   104,101,32,105,108,108,117,115,105,111,110,32,111,102,32,
                   114,117,110,110,105,110,103,32,116,104,101,109,32,97,108,
                   108,32,97,116,32,116,104,101,32,115,97,109,101,32,116,105,
                   109,101,46,32,73,116,32,105,115,32,101,97,115,121,32,116,
                   111,32,99,114,101,97,116,101,32,112,97,114,97,108,108,101,
                   108,32,116,104,114,101,97,100,115,32,111,102,32,101,120,
                   101,99,117,116,105,111,110,32,105,110,32,97,110,32,69,114,
                   108,97,110,103,32,112,114,111,103,114,97,109,32,97,110,100,
                   32,116,111,32,97,108,108,111,119,32,116,104,101,115,101,32,
                   116,104,114,101,97,100,115,32,116,111,32,99,111,109,109,
                   117,110,105,99,97,116,101,32,119,105,116,104,32,101,97,99,
                   104,32,111,116,104,101,114,46,32,73,110,32,69,114,108,97,
                   110,103,44,32,101,97,99,104,32,116,104,114,101,97,100,32,
                   111,102,32,101,120,101,99,117,116,105,111,110,32,105,115,
                   32,99,97,108,108,101,100,32,97]}],
                0,false},
               {text,"\v**process**"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ô(Aside: the term \"process\" is usually used when the threads of execution share no data with each other and the term \"thread\" when they share data in some way. Threads of execution in Erlang share no data, that is why they are called processes)."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,[14,84,104,101,32,69,114,108,97,110,103,32,66,73,70]}],
                0,false},
               {text,[7,42,115,112,97,119,110,42]},
               {sep,[{text," is used to create a new process:"}],0,false},
               {text,"5*spawn(Module, Exported_Function, List of Arguments)*"},
               {sep,[{text," . Consider the following module:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [292,10,45,109,111,100,117,108,101,40,116,117,116,49,52,41,46,
                 10,10,45,101,120,112,111,114,116,40,91,115,116,97,114,116,47,
                 48,44,32,115,97,121,95,115,111,109,101,116,104,105,110,103,
                 47,50,93,41,46,10,10,115,97,121,95,115,111,109,101,116,104,
                 105,110,103,40,87,104,97,116,44,32,48,41,32,45,62,10,32,32,
                 32,32,100,111,110,101,59,10,115,97,121,95,115,111,109,101,
                 116,104,105,110,103,40,87,104,97,116,44,32,84,105,109,101,
                 115,41,32,45,62,10,32,32,32,32,105,111,58,102,111,114,109,97,
                 116,40,34,126,112,126,110,34,44,32,91,87,104,97,116,93,41,44,
                 10,32,32,32,32,115,97,121,95,115,111,109,101,116,104,105,110,
                 103,40,87,104,97,116,44,32,84,105,109,101,115,32,45,32,49,41,
                 46,10,10,115,116,97,114,116,40,41,32,45,62,10,32,32,32,32,
                 115,112,97,119,110,40,116,117,116,49,52,44,32,115,97,121,95,
                 115,111,109,101,116,104,105,110,103,44,32,91,104,101,108,108,
                 111,44,32,51,93,41,44,10,32,32,32,32,115,112,97,119,110,40,
                 116,117,116,49,52,44,32,115,97,121,95,115,111,109,101,116,
                 104,105,110,103,44,32,91,103,111,111,100,98,121,101,44,32,51,
                 93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,53,62,32]},
               {text,"\tc(tut14)."},
               {text,[15,10,123,111,107,44,116,117,116,49,52,125,10,54,62,32]},
               {text,
                [30,116,117,116,49,52,58,115,97,121,95,115,111,109,101,116,
                 104,105,110,103,40,104,101,108,108,111,44,32,51,41,46]},
               {text,
                [23,10,104,101,108,108,111,10,104,101,108,108,111,10,104,101,
                 108,108,111,10,100,111,110,101]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [22,65,115,32,115,104,111,119,110,44,32,116,104,101,32,102,
                   117,110,99,116,105,111,110]}],
                0,false},
               {text,
                [15,42,115,97,121,95,115,111,109,101,116,104,105,110,103,42]},
               {sep,
                [{text,
                  "Xwrites its first argument the number of times specified by second argument. The function"}],
                0,false},
               {text,[7,42,115,116,97,114,116,42]},
               {sep,
                [{text,
                  [139,115,116,97,114,116,115,32,116,119,111,32,69,114,108,97,
                   110,103,32,112,114,111,99,101,115,115,101,115,44,32,111,
                   110,101,32,116,104,97,116,32,119,114,105,116,101,115,32,34,
                   104,101,108,108,111,34,32,116,104,114,101,101,32,116,105,
                   109,101,115,32,97,110,100,32,111,110,101,32,116,104,97,116,
                   32,119,114,105,116,101,115,32,34,103,111,111,100,98,121,
                   101,34,32,116,104,114,101,101,32,116,105,109,101,115,46,32,
                   66,111,116,104,32,112,114,111,99,101,115,115,101,115,32,
                   117,115,101,32,116,104,101,32,102,117,110,99,116,105,111,
                   110]}],
                0,false},
               {text,
                [15,42,115,97,121,95,115,111,109,101,116,104,105,110,103,42]},
               {sep,
                [{text,",. Notice that a function used in this way by"}],
                0,false},
               {text,[7,42,115,112,97,119,110,42]},
               {sep,
                [{text,
                  "G, to start a process, must be exported from the module (that is, in the"}],
                0,false},
               {text,"\t*-export*"},
               {sep,
                [{text,
                  [28,97,116,32,116,104,101,32,115,116,97,114,116,32,111,102,
                   32,116,104,101,32,109,111,100,117,108,101,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,57,62,32]},
               {text,[14,116,117,116,49,52,58,115,116,97,114,116,40,41,46]},
               {text,
                [15,10,104,101,108,108,111,10,103,111,111,100,98,121,101,10]},
               {text,"$<0.63.0>\nhello\ngoodbye\nhello\ngoodbye"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [345,78,111,116,105,99,101,32,116,104,97,116,32,105,116,32,
                   100,105,100,32,110,111,116,32,119,114,105,116,101,32,34,
                   104,101,108,108,111,34,32,116,104,114,101,101,32,116,105,
                   109,101,115,32,97,110,100,32,116,104,101,110,32,34,103,111,
                   111,100,98,121,101,34,32,116,104,114,101,101,32,116,105,
                   109,101,115,46,32,73,110,115,116,101,97,100,44,32,116,104,
                   101,32,102,105,114,115,116,32,112,114,111,99,101,115,115,
                   32,119,114,111,116,101,32,97,32,34,104,101,108,108,111,34,
                   44,32,116,104,101,32,115,101,99,111,110,100,32,97,32,34,
                   103,111,111,100,98,121,101,34,44,32,116,104,101,32,102,105,
                   114,115,116,32,97,110,111,116,104,101,114,32,34,104,101,
                   108,108,111,34,32,97,110,100,32,115,111,32,102,111,114,116,
                   104,46,32,66,117,116,32,119,104,101,114,101,32,100,105,100,
                   32,116,104,101,32,60,48,46,54,51,46,48,62,32,99,111,109,
                   101,32,102,114,111,109,63,32,84,104,101,32,114,101,116,117,
                   114,110,32,118,97,108,117,101,32,111,102,32,97,32,102,117,
                   110,99,116,105,111,110,32,105,115,32,116,104,101,32,114,
                   101,116,117,114,110,32,118,97,108,117,101,32,111,102,32,
                   116,104,101,32,108,97,115,116,32,34,116,104,105,110,103,34,
                   32,105,110,32,116,104,101,32,102,117,110,99,116,105,111,
                   110,46,32,84,104,101,32,108,97,115,116,32,116,104,105,110,
                   103,32,105,110,32,116,104,101,32,102,117,110,99,116,105,
                   111,110]}],
                0,false},
               {text,[7,42,115,116,97,114,116,42]},
               {sep,[{text,[2,105,115]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"+\nspawn(tut14, say_something, [goodbye, 3])."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[7,42,115,112,97,119,110,42]},
               {sep,[{text,"\treturns a"}],0,false},
               {text,
                [22,42,42,112,114,111,99,101,115,115,32,105,100,101,110,116,
                 105,102,105,101,114,42,42]},
               {sep,[{text,[4,44,32,111,114]}],0,false},
               {text,[7,42,42,112,105,100,42,42]},
               {sep,
                [{text,"+, which uniquely identifies the process. So"}],
                0,false},
               {sep,[{text,[7,60,48,46,54,51,46,48]}],0,false},
               {sep,
                [{text,
                  [19,62,32,105,115,32,116,104,101,32,112,105,100,32,111,102,
                   32,116,104,101]}],
                0,false},
               {text,[7,42,115,112,97,119,110,42]},
               {sep,
                [{text,
                  "<function call above. The next example shows how to use pids."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,",Notice also that ~p is used instead of ~w in"}],
                0,false},
               {text,"\v*io:format*"},
               {sep,
                [{text,
                  [291,46,32,84,111,32,113,117,111,116,101,32,116,104,101,32,
                   109,97,110,117,97,108,58,32,34,126,112,32,87,114,105,116,
                   101,115,32,116,104,101,32,100,97,116,97,32,119,105,116,104,
                   32,115,116,97,110,100,97,114,100,32,115,121,110,116,97,120,
                   32,105,110,32,116,104,101,32,115,97,109,101,32,119,97,121,
                   32,97,115,32,126,119,44,32,98,117,116,32,98,114,101,97,107,
                   115,32,116,101,114,109,115,32,119,104,111,115,101,32,112,
                   114,105,110,116,101,100,32,114,101,112,114,101,115,101,110,
                   116,97,116,105,111,110,32,105,115,32,108,111,110,103,101,
                   114,32,116,104,97,110,32,111,110,101,32,108,105,110,101,32,
                   105,110,116,111,32,109,97,110,121,32,108,105,110,101,115,
                   32,97,110,100,32,105,110,100,101,110,116,115,32,101,97,99,
                   104,32,108,105,110,101,32,115,101,110,115,105,98,108,121,
                   46,32,73,116,32,97,108,115,111,32,116,114,105,101,115,32,
                   116,111,32,100,101,116,101,99,116,32,108,105,115,116,115,
                   32,111,102,32,112,114,105,110,116,97,98,108,101,32,99,104,
                   97,114,97,99,116,101,114,115,32,97,110,100,32,116,111,32,
                   111,117,116,112,117,116,32,116,104,101,115,101,32,97,115,
                   32,115,116,114,105,110,103,115,34,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [20,35,35,35,35,32,77,101,115,115,97,103,101,32,80,97,115,115,105,
             110,103]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "jIn the following example two processes are created and they send messages to each other a number of times."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [620,10,45,109,111,100,117,108,101,40,116,117,116,49,53,41,46,
                 10,10,45,101,120,112,111,114,116,40,91,115,116,97,114,116,47,
                 48,44,32,112,105,110,103,47,50,44,32,112,111,110,103,47,48,
                 93,41,46,10,10,112,105,110,103,40,48,44,32,80,111,110,103,95,
                 80,73,68,41,32,45,62,10,32,32,32,32,80,111,110,103,95,80,73,
                 68,32,33,32,102,105,110,105,115,104,101,100,44,10,32,32,32,
                 32,105,111,58,102,111,114,109,97,116,40,34,112,105,110,103,
                 32,102,105,110,105,115,104,101,100,126,110,34,44,32,91,93,41,
                 59,10,10,112,105,110,103,40,78,44,32,80,111,110,103,95,80,73,
                 68,41,32,45,62,10,32,32,32,32,80,111,110,103,95,80,73,68,32,
                 33,32,123,112,105,110,103,44,32,115,101,108,102,40,41,125,44,
                 10,32,32,32,32,114,101,99,101,105,118,101,10,32,32,32,32,32,
                 32,32,32,112,111,110,103,32,45,62,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,80,105,
                 110,103,32,114,101,99,101,105,118,101,100,32,112,111,110,103,
                 126,110,34,44,32,91,93,41,10,32,32,32,32,101,110,100,44,10,
                 32,32,32,32,112,105,110,103,40,78,32,45,32,49,44,32,80,111,
                 110,103,95,80,73,68,41,46,10,10,112,111,110,103,40,41,32,45,
                 62,10,32,32,32,32,114,101,99,101,105,118,101,10,32,32,32,32,
                 32,32,32,32,102,105,110,105,115,104,101,100,32,45,62,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,111,114,109,
                 97,116,40,34,80,111,110,103,32,102,105,110,105,115,104,101,
                 100,126,110,34,44,32,91,93,41,59,10,32,32,32,32,32,32,32,32,
                 123,112,105,110,103,44,32,80,105,110,103,95,80,73,68,125,32,
                 45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,
                 111,114,109,97,116,40,34,80,111,110,103,32,114,101,99,101,
                 105,118,101,100,32,112,105,110,103,126,110,34,44,32,91,93,41,
                 44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,105,110,103,95,
                 80,73,68,32,33,32,112,111,110,103,44,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,112,111,110,103,40,41,10,32,32,32,32,101,110,
                 100,46,10,10,115,116,97,114,116,40,41,32,45,62,10,32,32,32,
                 32,80,111,110,103,95,80,73,68,32,61,32,115,112,97,119,110,40,
                 116,117,116,49,53,44,32,112,111,110,103,44,32,91,93,41,44,10,
                 32,32,32,32,115,112,97,119,110,40,116,117,116,49,53,44,32,
                 112,105,110,103,44,32,91,51,44,32,80,111,110,103,95,80,73,68,
                 93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,"\tc(tut15)."},
               {text,[15,10,123,111,107,44,116,117,116,49,53,125,10,50,62,32]},
               {text,[15,116,117,116,49,53,58,32,115,116,97,114,116,40,41,46]},
               {text,[1,10]},
               {text,
                [150,60,48,46,51,54,46,48,62,10,80,111,110,103,32,114,101,99,
                 101,105,118,101,100,32,112,105,110,103,10,80,105,110,103,32,
                 114,101,99,101,105,118,101,100,32,112,111,110,103,10,80,111,
                 110,103,32,114,101,99,101,105,118,101,100,32,112,105,110,103,
                 10,80,105,110,103,32,114,101,99,101,105,118,101,100,32,112,
                 111,110,103,10,80,111,110,103,32,114,101,99,101,105,118,101,
                 100,32,112,105,110,103,10,80,105,110,103,32,114,101,99,101,
                 105,118,101,100,32,112,111,110,103,10,112,105,110,103,32,102,
                 105,110,105,115,104,101,100,10,80,111,110,103,32,102,105,110,
                 105,115,104,101,100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fThe function"}],0,false},
               {text,[7,42,115,116,97,114,116,42]},
               {sep,
                [{text,"/first creates a process, let us call it \"pong\":"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"\"\nPong_PID = spawn(tut15, pong, [])"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [21,84,104,105,115,32,112,114,111,99,101,115,115,32,101,120,
                   101,99,117,116,101,115]}],
                0,false},
               {text,[14,42,116,117,116,49,53,58,112,111,110,103,40,41,42]},
               {sep,[{text,[1,46]}],0,false},
               {text,"\n*Pong_PID*"},
               {sep,
                [{text,
                  ";is the process identity of the \"pong\" process. The function"}],
                0,false},
               {text,[7,42,115,116,97,114,116,42]},
               {sep,
                [{text,"#now creates another process \"ping\":"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"#\nspawn(tut15, ping, [3, Pong_PID]),"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [22,84,104,105,115,32,112,114,111,99,101,115,115,32,101,120,
                 101,99,117,116,101,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [24,10,116,117,116,49,53,58,112,105,110,103,40,51,44,32,80,
                 111,110,103,95,80,73,68,41]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"%<0.36.0> is the return value from the"}],0,false},
               {text,[7,42,115,116,97,114,116,42]},
               {sep,[{text,"\tfunction."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [28,84,104,101,32,112,114,111,99,101,115,115,32,34,112,111,
                 110,103,34,32,110,111,119,32,100,111,101,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "¶\nreceive\n    finished ->\n        io:format(\"Pong finished~n\", []);\n    {ping, Ping_PID} ->\n        io:format(\"Pong received ping~n\", []),\n        Ping_PID ! pong,\n        pong()\nend."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,
                  "lconstruct is used to allow processes to wait for messages from other processes. It has the following format:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "q\nreceive\n   pattern1 ->\n       actions1;\n   pattern2 ->\n       actions2;\n   ....\n   patternN\n       actionsN\nend."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"!Notice there is no \";\" before the"}],0,false},
               {text,[5,42,101,110,100,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [134,77,101,115,115,97,103,101,115,32,98,101,116,119,101,101,
                 110,32,69,114,108,97,110,103,32,112,114,111,99,101,115,115,
                 101,115,32,97,114,101,32,115,105,109,112,108,121,32,118,97,
                 108,105,100,32,69,114,108,97,110,103,32,116,101,114,109,115,
                 46,32,84,104,97,116,32,105,115,44,32,116,104,101,121,32,99,
                 97,110,32,98,101,32,108,105,115,116,115,44,32,116,117,112,
                 108,101,115,44,32,105,110,116,101,103,101,114,115,44,32,97,
                 116,111,109,115,44,32,112,105,100,115,44,32,97,110,100,32,
                 115,111,32,111,110,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [143,69,97,99,104,32,112,114,111,99,101,115,115,32,104,97,
                   115,32,105,116,115,32,111,119,110,32,105,110,112,117,116,
                   32,113,117,101,117,101,32,102,111,114,32,109,101,115,115,
                   97,103,101,115,32,105,116,32,114,101,99,101,105,118,101,
                   115,46,32,78,101,119,32,109,101,115,115,97,103,101,115,32,
                   114,101,99,101,105,118,101,100,32,97,114,101,32,112,117,
                   116,32,97,116,32,116,104,101,32,101,110,100,32,111,102,32,
                   116,104,101,32,113,117,101,117,101,46,32,87,104,101,110,32,
                   97,32,112,114,111,99,101,115,115,32,101,120,101,99,117,116,
                   101,115,32,97]}],
                0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,
                  "L, the first message in the queue is matched against the first pattern in the"}],
                0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,
                  "s. If this matches, the message is removed from the queue and the actions corresponding to the pattern are executed."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [867,72,111,119,101,118,101,114,44,32,105,102,32,116,104,101,
                 32,102,105,114,115,116,32,112,97,116,116,101,114,110,32,100,
                 111,101,115,32,110,111,116,32,109,97,116,99,104,44,32,116,
                 104,101,32,115,101,99,111,110,100,32,112,97,116,116,101,114,
                 110,32,105,115,32,116,101,115,116,101,100,46,32,73,102,32,
                 116,104,105,115,32,109,97,116,99,104,101,115,44,32,116,104,
                 101,32,109,101,115,115,97,103,101,32,105,115,32,114,101,109,
                 111,118,101,100,32,102,114,111,109,32,116,104,101,32,113,117,
                 101,117,101,32,97,110,100,32,116,104,101,32,97,99,116,105,
                 111,110,115,32,99,111,114,114,101,115,112,111,110,100,105,
                 110,103,32,116,111,32,116,104,101,32,115,101,99,111,110,100,
                 32,112,97,116,116,101,114,110,32,97,114,101,32,101,120,101,
                 99,117,116,101,100,46,32,73,102,32,116,104,101,32,115,101,99,
                 111,110,100,32,112,97,116,116,101,114,110,32,100,111,101,115,
                 32,110,111,116,32,109,97,116,99,104,44,32,116,104,101,32,116,
                 104,105,114,100,32,105,115,32,116,114,105,101,100,32,97,110,
                 100,32,115,111,32,111,110,32,117,110,116,105,108,32,116,104,
                 101,114,101,32,97,114,101,32,110,111,32,109,111,114,101,32,
                 112,97,116,116,101,114,110,115,32,116,111,32,116,101,115,116,
                 46,32,73,102,32,116,104,101,114,101,32,97,114,101,32,110,111,
                 32,109,111,114,101,32,112,97,116,116,101,114,110,115,32,116,
                 111,32,116,101,115,116,44,32,116,104,101,32,102,105,114,115,
                 116,32,109,101,115,115,97,103,101,32,105,115,32,107,101,112,
                 116,32,105,110,32,116,104,101,32,113,117,101,117,101,32,97,
                 110,100,32,116,104,101,32,115,101,99,111,110,100,32,109,101,
                 115,115,97,103,101,32,105,115,32,116,114,105,101,100,32,105,
                 110,115,116,101,97,100,46,32,73,102,32,116,104,105,115,32,
                 109,97,116,99,104,101,115,32,97,110,121,32,112,97,116,116,
                 101,114,110,44,32,116,104,101,32,97,112,112,114,111,112,114,
                 105,97,116,101,32,97,99,116,105,111,110,115,32,97,114,101,32,
                 101,120,101,99,117,116,101,100,32,97,110,100,32,116,104,101,
                 32,115,101,99,111,110,100,32,109,101,115,115,97,103,101,32,
                 105,115,32,114,101,109,111,118,101,100,32,102,114,111,109,32,
                 116,104,101,32,113,117,101,117,101,32,40,107,101,101,112,105,
                 110,103,32,116,104,101,32,102,105,114,115,116,32,109,101,115,
                 115,97,103,101,32,97,110,100,32,97,110,121,32,111,116,104,
                 101,114,32,109,101,115,115,97,103,101,115,32,105,110,32,116,
                 104,101,32,113,117,101,117,101,41,46,32,73,102,32,116,104,
                 101,32,115,101,99,111,110,100,32,109,101,115,115,97,103,101,
                 32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,44,32,
                 116,104,101,32,116,104,105,114,100,32,109,101,115,115,97,103,
                 101,32,105,115,32,116,114,105,101,100,44,32,97,110,100,32,
                 115,111,32,111,110,44,32,117,110,116,105,108,32,116,104,101,
                 32,101,110,100,32,111,102,32,116,104,101,32,113,117,101,117,
                 101,32,105,115,32,114,101,97,99,104,101,100,46,32,73,102,32,
                 116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,113,
                 117,101,117,101,32,105,115,32,114,101,97,99,104,101,100,44,
                 32,116,104,101,32,112,114,111,99,101,115,115,32,98,108,111,
                 99,107,115,32,40,115,116,111,112,115,32,101,120,101,99,117,
                 116,105,111,110,41,32,97,110,100,32,119,97,105,116,115,32,
                 117,110,116,105,108,32,97,32,110,101,119,32,109,101,115,115,
                 97,103,101,32,105,115,32,114,101,99,101,105,118,101,100,32,
                 97,110,100,32,116,104,105,115,32,112,114,111,99,101,100,117,
                 114,101,32,105,115,32,114,101,112,101,97,116,101,100,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "{The Erlang implementation is \"clever\" and minimizes the number of times each message is tested against the patterns in each"}],
                0,false},
               {text,"\t*receive*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"\"Now back to the ping pong example."}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"+\"Pong\" is waiting for messages. If the atom"}],
                0,false},
               {text,"\n*finished*"},
               {sep,
                [{text,
                  [145,105,115,32,114,101,99,101,105,118,101,100,44,32,34,112,
                   111,110,103,34,32,119,114,105,116,101,115,32,34,80,111,110,
                   103,32,102,105,110,105,115,104,101,100,34,32,116,111,32,
                   116,104,101,32,111,117,116,112,117,116,32,97,110,100,44,32,
                   97,115,32,105,116,32,104,97,115,32,110,111,116,104,105,110,
                   103,32,109,111,114,101,32,116,111,32,100,111,44,32,116,101,
                   114,109,105,110,97,116,101,115,46,32,73,102,32,105,116,32,
                   114,101,99,101,105,118,101,115,32,97,32,109,101,115,115,97,
                   103,101,32,119,105,116,104,32,116,104,101,32,102,111,114,
                   109,97,116,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [17,10,123,112,105,110,103,44,32,80,105,110,103,95,80,73,68,
                 125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "?it writes \"Pong received ping\" to the output and sends the atom"}],
                0,false},
               {text,[6,42,112,111,110,103,42]},
               {sep,
                [{text,
                  [22,116,111,32,116,104,101,32,112,114,111,99,101,115,115,32,
                   34,112,105,110,103,34,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [16,10,80,105,110,103,95,80,73,68,32,33,32,112,111,110,103]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "KNotice how the operator \"!\" is used to send messages. The syntax of \"!\" is:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[14,10,80,105,100,32,33,32,77,101,115,115,97,103,101]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\bThat is,"}],0,false},
               {text,"\t*Message*"},
               {sep,
                [{text,
                  "6(any Erlang term) is sent to the process with identity"}],
                0,false},
               {text,[5,42,80,105,100,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [25,65,102,116,101,114,32,115,101,110,100,105,110,103,32,
                   116,104,101,32,109,101,115,115,97,103,101]}],
                0,false},
               {text,[6,42,112,111,110,103,42]},
               {sep,
                [{text,"'to the process \"ping\", \"pong\" calls the"}],
                0,false},
               {text,[6,42,112,111,110,103,42]},
               {sep,
                [{text,"2function again, which causes it to get back to the"}],
                0,false},
               {text,"\t*receive*"},
               {sep,[{text,"#again and wait for another message."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ONow let us look at the process \"ping\". Recall that it was started by executing:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [24,10,116,117,116,49,53,58,112,105,110,103,40,51,44,32,80,
                 111,110,103,95,80,73,68,41]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,76,111,111,107,105,110,103,32,97,116,32,116,104,101,32,
                   102,117,110,99,116,105,111,110]}],
                0,false},
               {text,"\b*ping/2*"},
               {sep,
                [{text,
                  [22,44,32,116,104,101,32,115,101,99,111,110,100,32,99,108,
                   97,117,115,101,32,111,102]}],
                0,false},
               {text,"\b*ping/2*"},
               {sep,
                [{text,
                  "Tis executed since the value of the first argument is 3 (not 0) (first clause head is"}],
                0,false},
               {text,
                [18,42,112,105,110,103,40,48,44,80,111,110,103,95,80,73,68,41,
                 42]},
               {sep,
                [{text,
                  [23,44,32,115,101,99,111,110,100,32,99,108,97,117,115,101,
                   32,104,101,97,100,32,105,115]}],
                0,false},
               {text,
                [18,42,112,105,110,103,40,78,44,80,111,110,103,95,80,73,68,41,
                 42]},
               {sep,[{text,[4,44,32,115,111]}],0,false},
               {text,[3,42,78,42]},
               {sep,[{text,"\vbecomes 3)."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,",The second clause sends a message to \"pong\":"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"\e\nPong_PID ! {ping, self()},"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\b*self()*"},
               {sep,
                [{text,",returns the pid of the process that executes"}],
                0,false},
               {text,"\b*self()*"},
               {sep,
                [{text,
                  "\\, in this case the pid of \"ping\". (Recall the code for \"pong\", this lands up in the variable"}],
                0,false},
               {text,"\n*Ping_PID*"},
               {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,
                  [22,112,114,101,118,105,111,117,115,108,121,32,101,120,112,
                   108,97,105,110,101,100,46,41]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,")\"Ping\" now waits for a reply from \"pong\":"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "G\nreceive\n    pong ->\n        io:format(\"Ping received pong~n\", [])\nend,"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "TIt writes \"Ping received pong\" when this reply arrives, after which \"ping\" calls the"}],
                0,false},
               {text,[6,42,112,105,110,103,42]},
               {sep,
                [{text,
                  [15,102,117,110,99,116,105,111,110,32,97,103,97,105,110,
                   46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [22,10,112,105,110,103,40,78,32,45,32,49,44,32,80,111,110,103,
                 95,80,73,68,41]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,[5,42,78,45,49,42]},
               {sep,
                [{text,
                  "ecauses the first argument to be decremented until it becomes 0. When this occurs, the first clause of"}],
                0,false},
               {text,"\b*ping/2*"},
               {sep,[{text,"\fis executed:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "U\nping(0, Pong_PID) ->\n    Pong_PID !  finished,\n    io:format(\"ping finished~n\", []);"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\bThe atom"}],0,false},
               {text,"\n*finished*"},
               {sep,
                [{text,
                  "¡is sent to \"pong\" (causing it to terminate as described above) and \"ping finished\" is written to the output. \"Ping\" then terminates as it has nothing left to do."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [29,35,35,35,35,32,82,101,103,105,115,116,101,114,101,100,32,80,
             114,111,99,101,115,115,32,78,97,109,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [479,73,110,32,116,104,101,32,97,98,111,118,101,32,101,120,
                   97,109,112,108,101,44,32,34,112,111,110,103,34,32,119,97,
                   115,32,102,105,114,115,116,32,99,114,101,97,116,101,100,32,
                   116,111,32,98,101,32,97,98,108,101,32,116,111,32,103,105,
                   118,101,32,116,104,101,32,105,100,101,110,116,105,116,121,
                   32,111,102,32,34,112,111,110,103,34,32,119,104,101,110,32,
                   34,112,105,110,103,34,32,119,97,115,32,115,116,97,114,116,
                   101,100,46,32,84,104,97,116,32,105,115,44,32,105,110,32,
                   115,111,109,101,32,119,97,121,32,34,112,105,110,103,34,32,
                   109,117,115,116,32,98,101,32,97,98,108,101,32,116,111,32,
                   107,110,111,119,32,116,104,101,32,105,100,101,110,116,105,
                   116,121,32,111,102,32,34,112,111,110,103,34,32,116,111,32,
                   98,101,32,97,98,108,101,32,116,111,32,115,101,110,100,32,
                   97,32,109,101,115,115,97,103,101,32,116,111,32,105,116,46,
                   32,83,111,109,101,116,105,109,101,115,32,112,114,111,99,
                   101,115,115,101,115,32,119,104,105,99,104,32,110,101,101,
                   100,32,116,111,32,107,110,111,119,32,101,97,99,104,32,111,
                   116,104,101,114,39,115,32,105,100,101,110,116,105,116,105,
                   101,115,32,97,114,101,32,115,116,97,114,116,101,100,32,105,
                   110,100,101,112,101,110,100,101,110,116,108,121,32,111,102,
                   32,101,97,99,104,32,111,116,104,101,114,46,32,69,114,108,
                   97,110,103,32,116,104,117,115,32,112,114,111,118,105,100,
                   101,115,32,97,32,109,101,99,104,97,110,105,115,109,32,102,
                   111,114,32,112,114,111,99,101,115,115,101,115,32,116,111,
                   32,98,101,32,103,105,118,101,110,32,110,97,109,101,115,32,
                   115,111,32,116,104,97,116,32,116,104,101,115,101,32,110,97,
                   109,101,115,32,99,97,110,32,98,101,32,117,115,101,100,32,
                   97,115,32,105,100,101,110,116,105,116,105,101,115,32,105,
                   110,115,116,101,97,100,32,111,102,32,112,105,100,115,46,32,
                   84,104,105,115,32,105,115,32,100,111,110,101,32,98,121,32,
                   117,115,105,110,103,32,116,104,101]}],
                0,false},
               {text,"\n*register*"},
               {sep,[{text,[4,66,73,70,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [25,10,114,101,103,105,115,116,101,114,40,115,111,109,101,95,
                 97,116,111,109,44,32,80,105,100,41]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ELet us now rewrite the ping pong example using this and give the name"}],
                0,false},
               {text,[6,42,112,111,110,103,42]},
               {sep,
                [{text,
                  [22,116,111,32,116,104,101,32,34,112,111,110,103,34,32,112,
                   114,111,99,101,115,115,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [577,10,45,109,111,100,117,108,101,40,116,117,116,49,54,41,46,
                 10,10,45,101,120,112,111,114,116,40,91,115,116,97,114,116,47,
                 48,44,32,112,105,110,103,47,49,44,32,112,111,110,103,47,48,
                 93,41,46,10,10,112,105,110,103,40,48,41,32,45,62,10,32,32,32,
                 32,112,111,110,103,32,33,32,102,105,110,105,115,104,101,100,
                 44,10,32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,
                 112,105,110,103,32,102,105,110,105,115,104,101,100,126,110,
                 34,44,32,91,93,41,59,10,10,112,105,110,103,40,78,41,32,45,62,
                 10,32,32,32,32,112,111,110,103,32,33,32,123,112,105,110,103,
                 44,32,115,101,108,102,40,41,125,44,10,32,32,32,32,114,101,99,
                 101,105,118,101,10,32,32,32,32,32,32,32,32,112,111,110,103,
                 32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,
                 102,111,114,109,97,116,40,34,80,105,110,103,32,114,101,99,
                 101,105,118,101,100,32,112,111,110,103,126,110,34,44,32,91,
                 93,41,10,32,32,32,32,101,110,100,44,10,32,32,32,32,112,105,
                 110,103,40,78,32,45,32,49,41,46,10,10,112,111,110,103,40,41,
                 32,45,62,10,32,32,32,32,114,101,99,101,105,118,101,10,32,32,
                 32,32,32,32,32,32,102,105,110,105,115,104,101,100,32,45,62,
                 10,32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,111,
                 114,109,97,116,40,34,80,111,110,103,32,102,105,110,105,115,
                 104,101,100,126,110,34,44,32,91,93,41,59,10,32,32,32,32,32,
                 32,32,32,123,112,105,110,103,44,32,80,105,110,103,95,80,73,
                 68,125,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,105,
                 111,58,102,111,114,109,97,116,40,34,80,111,110,103,32,114,
                 101,99,101,105,118,101,100,32,112,105,110,103,126,110,34,44,
                 32,91,93,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,105,
                 110,103,95,80,73,68,32,33,32,112,111,110,103,44,10,32,32,32,
                 32,32,32,32,32,32,32,32,32,112,111,110,103,40,41,10,32,32,32,
                 32,101,110,100,46,10,10,115,116,97,114,116,40,41,32,45,62,10,
                 32,32,32,32,114,101,103,105,115,116,101,114,40,112,111,110,
                 103,44,32,115,112,97,119,110,40,116,117,116,49,54,44,32,112,
                 111,110,103,44,32,91,93,41,41,44,10,32,32,32,32,115,112,97,
                 119,110,40,116,117,116,49,54,44,32,112,105,110,103,44,32,91,
                 51,93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,50,62,32]},
               {text,"\tc(tut16)."},
               {text,
                [16,10,123,111,107,44,32,116,117,116,49,54,125,10,51,62,32]},
               {text,[14,116,117,116,49,54,58,115,116,97,114,116,40,41,46]},
               {text,[1,10]},
               {text,
                [150,60,48,46,51,56,46,48,62,10,80,111,110,103,32,114,101,99,
                 101,105,118,101,100,32,112,105,110,103,10,80,105,110,103,32,
                 114,101,99,101,105,118,101,100,32,112,111,110,103,10,80,111,
                 110,103,32,114,101,99,101,105,118,101,100,32,112,105,110,103,
                 10,80,105,110,103,32,114,101,99,101,105,118,101,100,32,112,
                 111,110,103,10,80,111,110,103,32,114,101,99,101,105,118,101,
                 100,32,112,105,110,103,10,80,105,110,103,32,114,101,99,101,
                 105,118,101,100,32,112,111,110,103,10,112,105,110,103,32,102,
                 105,110,105,115,104,101,100,10,80,111,110,103,32,102,105,110,
                 105,115,104,101,100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\bHere the"}],0,false},
               {text,"\t*start/0*"},
               {sep,[{text,"\tfunction,"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"(\nregister(pong, spawn(tut16, pong, [])),"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "4both spawns the \"pong\" process and gives it the name"}],
                0,false},
               {text,[6,42,112,111,110,103,42]},
               {sep,
                [{text,"0. In the \"ping\" process, messages can be sent to"}],
                0,false},
               {text,[6,42,112,111,110,103,42]},
               {sep,[{text,[3,98,121,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [23,10,112,111,110,103,32,33,32,123,112,105,110,103,44,32,115,
                 101,108,102,40,41,125,44]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\b*ping/2*"},
               {sep,[{text,"\vnow becomes"}],0,false},
               {text,"\b*ping/1*"},
               {sep,
                [{text,
                  [15,97,115,32,116,104,101,32,97,114,103,117,109,101,110,
                   116]}],
                0,false},
               {text,"\n*Pong_PID*"},
               {sep,
                [{text,
                  [14,105,115,32,110,111,116,32,110,101,101,100,101,100,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [28,35,35,35,35,32,68,105,115,116,114,105,98,117,116,101,100,32,
             80,114,111,103,114,97,109,109,105,110,103]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [361,76,101,116,32,117,115,32,114,101,119,114,105,116,101,
                   32,116,104,101,32,112,105,110,103,32,112,111,110,103,32,
                   112,114,111,103,114,97,109,32,119,105,116,104,32,34,112,
                   105,110,103,34,32,97,110,100,32,34,112,111,110,103,34,32,
                   111,110,32,100,105,102,102,101,114,101,110,116,32,99,111,
                   109,112,117,116,101,114,115,46,32,70,105,114,115,116,32,97,
                   32,102,101,119,32,116,104,105,110,103,115,32,97,114,101,32,
                   110,101,101,100,101,100,32,116,111,32,115,101,116,32,117,
                   112,32,116,111,32,103,101,116,32,116,104,105,115,32,116,
                   111,32,119,111,114,107,46,32,84,104,101,32,100,105,115,116,
                   114,105,98,117,116,101,100,32,69,114,108,97,110,103,32,105,
                   109,112,108,101,109,101,110,116,97,116,105,111,110,32,112,
                   114,111,118,105,100,101,115,32,97,32,118,101,114,121,32,98,
                   97,115,105,99,32,97,117,116,104,101,110,116,105,99,97,116,
                   105,111,110,32,109,101,99,104,97,110,105,115,109,32,116,
                   111,32,112,114,101,118,101,110,116,32,117,110,105,110,116,
                   101,110,116,105,111,110,97,108,32,97,99,99,101,115,115,32,
                   116,111,32,97,110,32,69,114,108,97,110,103,32,115,121,115,
                   116,101,109,32,111,110,32,97,110,111,116,104,101,114,32,99,
                   111,109,112,117,116,101,114,46,32,69,114,108,97,110,103,32,
                   115,121,115,116,101,109,115,32,119,104,105,99,104,32,116,
                   97,108,107,32,116,111,32,101,97,99,104,32,111,116,104,101,
                   114,32,109,117,115,116,32,104,97,118,101,32,116,104,101,32,
                   115,97,109,101]}],
                0,false},
               {text,
                [16,42,42,109,97,103,105,99,32,99,111,111,107,105,101,42,42]},
               {sep,
                [{text,
                  "<. The easiest way to achieve this is by having a file called"}],
                0,false},
               {text,
                [16,42,46,101,114,108,97,110,103,46,99,111,111,107,105,101,
                 42]},
               {sep,
                [{text,
                  "rin your home directory on all machines on which you are going to run Erlang systems communicating with each other:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {text,
            [128,79,110,32,87,105,110,100,111,119,115,32,115,121,115,116,101,
             109,115,32,116,104,101,32,104,111,109,101,32,100,105,114,101,99,
             116,111,114,121,32,105,115,32,116,104,101,32,100,105,114,101,99,
             116,111,114,121,32,112,111,105,110,116,101,100,32,111,117,116,32,
             98,121,32,116,104,101,32,101,110,118,105,114,111,110,109,101,110,
             116,32,118,97,114,105,97,98,108,101,32,36,72,79,77,69,32,45,32,
             121,111,117,32,109,97,121,32,110,101,101,100,32,116,111,32,115,
             101,116,32,116,104,105,115,46]}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                "KOn Linux or UNIX you can safely ignore this and simply create a file called"}],
              0,false},
             {text,
              [16,42,46,101,114,108,97,110,103,46,99,111,111,107,105,101,42]},
             {sep,
              [{text,
                "7in the directory you get to after executing the command"}],
              0,false},
             {text,[4,42,99,100,42]},
             {sep,
              [{text,
                [21,119,105,116,104,111,117,116,32,97,110,121,32,97,114,103,
                 117,109,101,110,116,46]}],
              0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,
                [16,42,46,101,114,108,97,110,103,46,99,111,111,107,105,101,
                 42]},
               {sep,
                [{text,
                  "]file is to contain a line with the same atom. For example, on Linux or UNIX, in the OS shell:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,36,32]},
               {text,[2,99,100]},
               {text,[3,10,36,32]},
               {text,
                [20,99,97,116,32,62,32,46,101,114,108,97,110,103,46,99,111,
                 111,107,105,101]},
               {text,
                [23,10,116,104,105,115,95,105,115,95,118,101,114,121,95,115,
                 101,99,114,101,116,10,36,32]},
               {text,
                [24,99,104,109,111,100,32,52,48,48,32,46,101,114,108,97,110,
                 103,46,99,111,111,107,105,101]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[3,84,104,101]}],0,false},
               {text,[7,42,99,104,109,111,100,42]},
               {sep,
                [{text,
                  [15,97,98,111,118,101,32,109,97,107,101,115,32,116,104,
                   101]}],
                0,false},
               {text,
                [16,42,46,101,114,108,97,110,103,46,99,111,111,107,105,101,
                 42]},
               {sep,
                [{text,
                  "Efile accessible only by the owner of the file. This is a requirement."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "tWhen you start an Erlang system that is going to talk to other Erlang systems, you must give it a name, for example:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[3,10,36,32]},
               {text,
                [18,101,114,108,32,45,115,110,97,109,101,32,109,121,95,110,97,
                 109,101]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [281,87,101,32,119,105,108,108,32,115,101,101,32,109,111,
                   114,101,32,100,101,116,97,105,108,115,32,111,102,32,116,
                   104,105,115,32,108,97,116,101,114,46,32,73,102,32,121,111,
                   117,32,119,97,110,116,32,116,111,32,101,120,112,101,114,
                   105,109,101,110,116,32,119,105,116,104,32,100,105,115,116,
                   114,105,98,117,116,101,100,32,69,114,108,97,110,103,44,32,
                   98,117,116,32,121,111,117,32,111,110,108,121,32,104,97,118,
                   101,32,111,110,101,32,99,111,109,112,117,116,101,114,32,
                   116,111,32,119,111,114,107,32,111,110,44,32,121,111,117,32,
                   99,97,110,32,115,116,97,114,116,32,116,119,111,32,115,101,
                   112,97,114,97,116,101,32,69,114,108,97,110,103,32,115,121,
                   115,116,101,109,115,32,111,110,32,116,104,101,32,115,97,
                   109,101,32,99,111,109,112,117,116,101,114,32,98,117,116,32,
                   103,105,118,101,32,116,104,101,109,32,100,105,102,102,101,
                   114,101,110,116,32,110,97,109,101,115,46,32,69,97,99,104,
                   32,69,114,108,97,110,103,32,115,121,115,116,101,109,32,114,
                   117,110,110,105,110,103,32,111,110,32,97,32,99,111,109,112,
                   117,116,101,114,32,105,115,32,99,97,108,108,101,100,32,97,
                   110]}],
                0,false},
               {text,
                [15,42,42,69,114,108,97,110,103,32,110,111,100,101,42,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[6,40,78,111,116,101,58]}],0,false},
               {text,"\f*erl -sname*"},
               {sep,
                [{text,
                  [159,97,115,115,117,109,101,115,32,116,104,97,116,32,97,108,
                   108,32,110,111,100,101,115,32,97,114,101,32,105,110,32,116,
                   104,101,32,115,97,109,101,32,73,80,32,100,111,109,97,105,
                   110,32,97,110,100,32,119,101,32,99,97,110,32,117,115,101,
                   32,111,110,108,121,32,116,104,101,32,102,105,114,115,116,
                   32,99,111,109,112,111,110,101,110,116,32,111,102,32,116,
                   104,101,32,73,80,32,97,100,100,114,101,115,115,44,32,105,
                   102,32,119,101,32,119,97,110,116,32,116,111,32,117,115,101,
                   32,110,111,100,101,115,32,105,110,32,100,105,102,102,101,
                   114,101,110,116,32,100,111,109,97,105,110,115,32,119,101,
                   32,117,115,101]}],
                0,false},
               {text,[7,42,45,110,97,109,101,42]},
               {sep,
                [{text,
                  "8instead, but then all IP address must be given in full.)"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "DHere is the ping pong example modified to run on two separate nodes:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [698,10,45,109,111,100,117,108,101,40,116,117,116,49,55,41,46,
                 10,10,45,101,120,112,111,114,116,40,91,115,116,97,114,116,95,
                 112,105,110,103,47,49,44,32,115,116,97,114,116,95,112,111,
                 110,103,47,48,44,32,32,112,105,110,103,47,50,44,32,112,111,
                 110,103,47,48,93,41,46,10,10,112,105,110,103,40,48,44,32,80,
                 111,110,103,95,78,111,100,101,41,32,45,62,10,32,32,32,32,123,
                 112,111,110,103,44,32,80,111,110,103,95,78,111,100,101,125,
                 32,33,32,102,105,110,105,115,104,101,100,44,10,32,32,32,32,
                 105,111,58,102,111,114,109,97,116,40,34,112,105,110,103,32,
                 102,105,110,105,115,104,101,100,126,110,34,44,32,91,93,41,59,
                 10,10,112,105,110,103,40,78,44,32,80,111,110,103,95,78,111,
                 100,101,41,32,45,62,10,32,32,32,32,123,112,111,110,103,44,32,
                 80,111,110,103,95,78,111,100,101,125,32,33,32,123,112,105,
                 110,103,44,32,115,101,108,102,40,41,125,44,10,32,32,32,32,
                 114,101,99,101,105,118,101,10,32,32,32,32,32,32,32,32,112,
                 111,110,103,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 105,111,58,102,111,114,109,97,116,40,34,80,105,110,103,32,
                 114,101,99,101,105,118,101,100,32,112,111,110,103,126,110,34,
                 44,32,91,93,41,10,32,32,32,32,101,110,100,44,10,32,32,32,32,
                 112,105,110,103,40,78,32,45,32,49,44,32,80,111,110,103,95,78,
                 111,100,101,41,46,10,10,112,111,110,103,40,41,32,45,62,10,32,
                 32,32,32,114,101,99,101,105,118,101,10,32,32,32,32,32,32,32,
                 32,102,105,110,105,115,104,101,100,32,45,62,10,32,32,32,32,
                 32,32,32,32,32,32,32,32,105,111,58,102,111,114,109,97,116,40,
                 34,80,111,110,103,32,102,105,110,105,115,104,101,100,126,110,
                 34,44,32,91,93,41,59,10,32,32,32,32,32,32,32,32,123,112,105,
                 110,103,44,32,80,105,110,103,95,80,73,68,125,32,45,62,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,111,114,109,
                 97,116,40,34,80,111,110,103,32,114,101,99,101,105,118,101,
                 100,32,112,105,110,103,126,110,34,44,32,91,93,41,44,10,32,32,
                 32,32,32,32,32,32,32,32,32,32,80,105,110,103,95,80,73,68,32,
                 33,32,112,111,110,103,44,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,112,111,110,103,40,41,10,32,32,32,32,101,110,100,46,10,10,
                 115,116,97,114,116,95,112,111,110,103,40,41,32,45,62,10,32,
                 32,32,32,114,101,103,105,115,116,101,114,40,112,111,110,103,
                 44,32,115,112,97,119,110,40,116,117,116,49,55,44,32,112,111,
                 110,103,44,32,91,93,41,41,46,10,10,115,116,97,114,116,95,112,
                 105,110,103,40,80,111,110,103,95,78,111,100,101,41,32,45,62,
                 10,32,32,32,32,115,112,97,119,110,40,116,117,116,49,55,44,32,
                 112,105,110,103,44,32,91,51,44,32,80,111,110,103,95,78,111,
                 100,101,93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [151,76,101,116,32,117,115,32,97,115,115,117,109,101,32,116,
                 104,101,114,101,32,97,114,101,32,116,119,111,32,99,111,109,
                 112,117,116,101,114,115,32,99,97,108,108,101,100,32,103,111,
                 108,108,117,109,32,97,110,100,32,107,111,115,107,101,110,46,
                 32,70,105,114,115,116,32,97,32,110,111,100,101,32,105,115,32,
                 115,116,97,114,116,101,100,32,111,110,32,107,111,115,107,101,
                 110,44,32,99,97,108,108,101,100,32,112,105,110,103,44,32,97,
                 110,100,32,116,104,101,110,32,97,32,110,111,100,101,32,111,
                 110,32,103,111,108,108,117,109,44,32,99,97,108,108,101,100,
                 32,112,111,110,103,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"#On kosken (on a Linux/UNIX system):"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"\t\nkosken> "},
               {text,
                [15,101,114,108,32,45,115,110,97,109,101,32,112,105,110,103]},
               {text,
                "l\nErlang (BEAM) emulator version 5.2.3.7 [hipe] [threads:0]\n\nEshell V5.2.3.7  (abort with ^G)\n(ping@kosken)1>"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\nOn gollum:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"\t\ngollum> "},
               {text,
                [15,101,114,108,32,45,115,110,97,109,101,32,112,111,110,103]},
               {text,
                "l\nErlang (BEAM) emulator version 5.2.3.7 [hipe] [threads:0]\n\nEshell V5.2.3.7  (abort with ^G)\n(pong@gollum)1>"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,",Now the \"pong\" process on gollum is started:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [17,10,40,112,111,110,103,64,103,111,108,108,117,109,41,49,62,
                 32]},
               {text,
                [19,116,117,116,49,55,58,115,116,97,114,116,95,112,111,110,
                 103,40,41,46]},
               {text,[5,10,116,114,117,101]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "dAnd the \"ping\" process on kosken is started (from the code above you can see that a parameter of the"}],
                0,false},
               {text,"\f*start_ping*"},
               {sep,
                [{text,
                  "Hfunction is the node name of the Erlang system where \"pong\" is running):"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [17,10,40,112,105,110,103,64,107,111,115,107,101,110,41,49,62,
                 32]},
               {text,
                [30,116,117,116,49,55,58,115,116,97,114,116,95,112,105,110,
                 103,40,112,111,110,103,64,103,111,108,108,117,109,41,46]},
               {text,[1,10]},
               {text,
                "P<0.37.0>\nPing received pong\nPing received pong \nPing received pong\nping finished"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "<As shown, the ping pong program has run. On the \"pong\" side:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "°\n(pong@gollum)2>\nPong received ping                 \nPong received ping                 \nPong received ping                 \nPong finished                      \n(pong@gollum)2>"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [14,76,111,111,107,105,110,103,32,97,116,32,116,104,101]}],
                0,false},
               {text,[7,42,116,117,116,49,55,42]},
               {sep,
                [{text,
                  [22,99,111,100,101,44,32,121,111,117,32,115,101,101,32,116,
                   104,97,116,32,116,104,101]}],
                0,false},
               {text,[6,42,112,111,110,103,42]},
               {sep,
                [{text,
                  [132,102,117,110,99,116,105,111,110,32,105,116,115,101,108,
                   102,32,105,115,32,117,110,99,104,97,110,103,101,100,44,32,
                   116,104,101,32,102,111,108,108,111,119,105,110,103,32,108,
                   105,110,101,115,32,119,111,114,107,32,105,110,32,116,104,
                   101,32,115,97,109,101,32,119,97,121,32,105,114,114,101,115,
                   112,101,99,116,105,118,101,32,111,102,32,111,110,32,119,
                   104,105,99,104,32,110,111,100,101,32,116,104,101,32,34,112,
                   105,110,103,34,32,112,114,111,99,101,115,115,32,105,115,32,
                   101,120,101,99,117,116,101,115,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "T\n{ping, Ping_PID} ->\n    io:format(\"Pong received ping~n\", []),\n    Ping_PID ! pong,"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "æThus, Erlang pids contain information about where the process executes. So if you know the pid of a process, the \"!\" operator can be used to send it a message disregarding if the process is on the same node or on a different node."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "NA difference is how messages are sent to a registered process on another node:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"$\n{pong, Pong_Node} ! {ping, self()},"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[7,65,32,116,117,112,108,101]}],0,false},
               {text,
                [29,42,123,114,101,103,105,115,116,101,114,101,100,95,110,97,
                 109,101,44,110,111,100,101,95,110,97,109,101,125,42]},
               {sep,[{text,"\eis used instead of just the"}],0,false},
               {text,
                [17,42,114,101,103,105,115,116,101,114,101,100,95,110,97,109,
                 101,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "eIn the previous example, \"ping\" and \"pong\" were started from the shells of two separate Erlang nodes."}],
                0,false},
               {text,[7,42,115,112,97,119,110,42]},
               {sep,
                [{text,
                  "3can also be used to start processes in other nodes."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "fThe next example is the ping pong program, yet again, but this time \"ping\" is started in another node:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [665,10,45,109,111,100,117,108,101,40,116,117,116,49,56,41,46,
                 10,10,45,101,120,112,111,114,116,40,91,115,116,97,114,116,47,
                 49,44,32,32,112,105,110,103,47,50,44,32,112,111,110,103,47,
                 48,93,41,46,10,10,112,105,110,103,40,48,44,32,80,111,110,103,
                 95,78,111,100,101,41,32,45,62,10,32,32,32,32,123,112,111,110,
                 103,44,32,80,111,110,103,95,78,111,100,101,125,32,33,32,102,
                 105,110,105,115,104,101,100,44,10,32,32,32,32,105,111,58,102,
                 111,114,109,97,116,40,34,112,105,110,103,32,102,105,110,105,
                 115,104,101,100,126,110,34,44,32,91,93,41,59,10,10,112,105,
                 110,103,40,78,44,32,80,111,110,103,95,78,111,100,101,41,32,
                 45,62,10,32,32,32,32,123,112,111,110,103,44,32,80,111,110,
                 103,95,78,111,100,101,125,32,33,32,123,112,105,110,103,44,32,
                 115,101,108,102,40,41,125,44,10,32,32,32,32,114,101,99,101,
                 105,118,101,10,32,32,32,32,32,32,32,32,112,111,110,103,32,45,
                 62,10,32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,111,
                 114,109,97,116,40,34,80,105,110,103,32,114,101,99,101,105,
                 118,101,100,32,112,111,110,103,126,110,34,44,32,91,93,41,10,
                 32,32,32,32,101,110,100,44,10,32,32,32,32,112,105,110,103,40,
                 78,32,45,32,49,44,32,80,111,110,103,95,78,111,100,101,41,46,
                 10,10,112,111,110,103,40,41,32,45,62,10,32,32,32,32,114,101,
                 99,101,105,118,101,10,32,32,32,32,32,32,32,32,102,105,110,
                 105,115,104,101,100,32,45,62,10,32,32,32,32,32,32,32,32,32,
                 32,32,32,105,111,58,102,111,114,109,97,116,40,34,80,111,110,
                 103,32,102,105,110,105,115,104,101,100,126,110,34,44,32,91,
                 93,41,59,10,32,32,32,32,32,32,32,32,123,112,105,110,103,44,
                 32,80,105,110,103,95,80,73,68,125,32,45,62,10,32,32,32,32,32,
                 32,32,32,32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,
                 80,111,110,103,32,114,101,99,101,105,118,101,100,32,112,105,
                 110,103,126,110,34,44,32,91,93,41,44,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,80,105,110,103,95,80,73,68,32,33,32,112,111,
                 110,103,44,10,32,32,32,32,32,32,32,32,32,32,32,32,112,111,
                 110,103,40,41,10,32,32,32,32,101,110,100,46,10,10,115,116,97,
                 114,116,40,80,105,110,103,95,78,111,100,101,41,32,45,62,10,
                 32,32,32,32,114,101,103,105,115,116,101,114,40,112,111,110,
                 103,44,32,115,112,97,119,110,40,116,117,116,49,56,44,32,112,
                 111,110,103,44,32,91,93,41,41,44,10,32,32,32,32,115,112,97,
                 119,110,40,80,105,110,103,95,78,111,100,101,44,32,116,117,
                 116,49,56,44,32,112,105,110,103,44,32,91,51,44,32,110,111,
                 100,101,40,41,93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [131,65,115,115,117,109,105,110,103,32,97,110,32,69,114,108,
                 97,110,103,32,115,121,115,116,101,109,32,99,97,108,108,101,
                 100,32,112,105,110,103,32,40,98,117,116,32,110,111,116,32,
                 116,104,101,32,34,112,105,110,103,34,32,112,114,111,99,101,
                 115,115,41,32,104,97,115,32,97,108,114,101,97,100,121,32,98,
                 101,101,110,32,115,116,97,114,116,101,100,32,111,110,32,107,
                 111,115,107,101,110,44,32,116,104,101,110,32,111,110,32,103,
                 111,108,108,117,109,32,116,104,105,115,32,105,115,32,100,111,
                 110,101,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [17,10,40,112,111,110,103,64,103,111,108,108,117,109,41,49,62,
                 32]},
               {text,
                [25,116,117,116,49,56,58,115,116,97,114,116,40,112,105,110,
                 103,64,107,111,115,107,101,110,41,46]},
               {text,[1,10]},
               {text,
                [153,60,51,57,51,52,46,51,57,46,48,62,10,80,111,110,103,32,
                 114,101,99,101,105,118,101,100,32,112,105,110,103,10,80,105,
                 110,103,32,114,101,99,101,105,118,101,100,32,112,111,110,103,
                 10,80,111,110,103,32,114,101,99,101,105,118,101,100,32,112,
                 105,110,103,10,80,105,110,103,32,114,101,99,101,105,118,101,
                 100,32,112,111,110,103,10,80,111,110,103,32,114,101,99,101,
                 105,118,101,100,32,112,105,110,103,10,80,105,110,103,32,114,
                 101,99,101,105,118,101,100,32,112,111,110,103,10,80,111,110,
                 103,32,102,105,110,105,115,104,101,100,10,112,105,110,103,32,
                 102,105,110,105,115,104,101,100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [152,78,111,116,105,99,101,32,116,104,97,116,32,97,108,108,32,
                 116,104,101,32,111,117,116,112,117,116,32,105,115,32,114,101,
                 99,101,105,118,101,100,32,111,110,32,103,111,108,108,117,109,
                 46,32,84,104,105,115,32,105,115,32,98,101,99,97,117,115,101,
                 32,116,104,101,32,73,47,79,32,115,121,115,116,101,109,32,102,
                 105,110,100,115,32,111,117,116,32,119,104,101,114,101,32,116,
                 104,101,32,112,114,111,99,101,115,115,32,105,115,32,115,112,
                 97,119,110,101,100,32,102,114,111,109,32,97,110,100,32,115,
                 101,110,100,115,32,97,108,108,32,111,117,116,112,117,116,32,
                 116,104,101,114,101,46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [21,35,35,35,35,32,65,32,76,97,114,103,101,114,32,69,120,97,109,
             112,108,101]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "¥Now for a larger example with a simple \"messenger\". The messenger is a program that allows users to log in on different nodes and send simple messages to each other."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"&Before starting, notice the following:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "¢This example only shows the message passing logic - no attempt has been made to provide a nice graphical user interface, although this can also be done in Erlang."}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [145,84,104,105,115,32,115,111,114,116,32,111,102,32,112,114,
                  111,98,108,101,109,32,99,97,110,32,98,101,32,115,111,108,
                  118,101,100,32,101,97,115,105,101,114,32,98,121,32,117,115,
                  101,32,111,102,32,116,104,101,32,102,97,99,105,108,105,116,
                  105,101,115,32,105,110,32,79,84,80,44,32,119,104,105,99,104,
                  32,97,108,115,111,32,112,114,111,118,105,100,101,32,109,101,
                  116,104,111,100,115,32,102,111,114,32,117,112,100,97,116,
                  105,110,103,32,99,111,100,101,32,111,110,32,116,104,101,32,
                  102,108,121,32,97,110,100,32,115,111,32,111,110,32,40,115,
                  101,101]}],
               0,false},
              {text,
               "Q[OTP Design Principles](../doc/design_principles/des_princ#otp design principles)"},
              {sep,[{text,[2,41,46]}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [144,84,104,101,32,102,105,114,115,116,32,112,114,111,103,114,
               97,109,32,99,111,110,116,97,105,110,115,32,115,111,109,101,32,
               105,110,97,100,101,113,117,97,99,105,101,115,32,114,101,103,97,
               114,100,105,110,103,32,104,97,110,100,108,105,110,103,32,111,
               102,32,110,111,100,101,115,32,119,104,105,99,104,32,100,105,
               115,97,112,112,101,97,114,46,32,84,104,101,115,101,32,97,114,
               101,32,99,111,114,114,101,99,116,101,100,32,105,110,32,97,32,
               108,97,116,101,114,32,118,101,114,115,105,111,110,32,111,102,
               32,116,104,101,32,112,114,111,103,114,97,109,46]}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ßThe messenger is set up by allowing \"clients\" to connect to a central server and say who and where they are. That is, a user does not need to know the name of the Erlang node where another user is located to send a message."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[4,70,105,108,101]}],0,false},
               {text,
                [15,42,109,101,115,115,101,110,103,101,114,46,101,114,108,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {text,
         [19,60,97,32,110,97,109,101,61,34,101,120,34,62,101,120,60,47,97,62]},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [5637,10,37,37,37,32,77,101,115,115,97,103,101,32,112,97,115,
                 115,105,110,103,32,117,116,105,108,105,116,121,46,32,32,10,
                 37,37,37,32,85,115,101,114,32,105,110,116,101,114,102,97,99,
                 101,58,10,37,37,37,32,108,111,103,111,110,40,78,97,109,101,
                 41,10,37,37,37,32,32,32,32,32,79,110,101,32,117,115,101,114,
                 32,97,116,32,97,32,116,105,109,101,32,99,97,110,32,108,111,
                 103,32,105,110,32,102,114,111,109,32,101,97,99,104,32,69,114,
                 108,97,110,103,32,110,111,100,101,32,105,110,32,116,104,101,
                 10,37,37,37,32,32,32,32,32,115,121,115,116,101,109,32,109,
                 101,115,115,101,110,103,101,114,58,32,97,110,100,32,99,104,
                 111,111,115,101,32,97,32,115,117,105,116,97,98,108,101,32,78,
                 97,109,101,46,32,73,102,32,116,104,101,32,78,97,109,101,10,
                 37,37,37,32,32,32,32,32,105,115,32,97,108,114,101,97,100,121,
                 32,108,111,103,103,101,100,32,105,110,32,97,116,32,97,110,
                 111,116,104,101,114,32,110,111,100,101,32,111,114,32,105,102,
                 32,115,111,109,101,111,110,101,32,101,108,115,101,32,105,115,
                 10,37,37,37,32,32,32,32,32,97,108,114,101,97,100,121,32,108,
                 111,103,103,101,100,32,105,110,32,97,116,32,116,104,101,32,
                 115,97,109,101,32,110,111,100,101,44,32,108,111,103,105,110,
                 32,119,105,108,108,32,98,101,32,114,101,106,101,99,116,101,
                 100,10,37,37,37,32,32,32,32,32,119,105,116,104,32,97,32,115,
                 117,105,116,97,98,108,101,32,101,114,114,111,114,32,109,101,
                 115,115,97,103,101,46,10,37,37,37,32,108,111,103,111,102,102,
                 40,41,10,37,37,37,32,32,32,32,32,76,111,103,115,32,111,102,
                 102,32,97,110,121,98,111,100,121,32,97,116,32,116,104,97,116,
                 32,110,111,100,101,10,37,37,37,32,109,101,115,115,97,103,101,
                 40,84,111,78,97,109,101,44,32,77,101,115,115,97,103,101,41,
                 10,37,37,37,32,32,32,32,32,115,101,110,100,115,32,77,101,115,
                 115,97,103,101,32,116,111,32,84,111,78,97,109,101,46,32,69,
                 114,114,111,114,32,109,101,115,115,97,103,101,115,32,105,102,
                 32,116,104,101,32,117,115,101,114,32,111,102,32,116,104,105,
                 115,32,10,37,37,37,32,32,32,32,32,102,117,110,99,116,105,111,
                 110,32,105,115,32,110,111,116,32,108,111,103,103,101,100,32,
                 111,110,32,111,114,32,105,102,32,84,111,78,97,109,101,32,105,
                 115,32,110,111,116,32,108,111,103,103,101,100,32,111,110,32,
                 97,116,10,37,37,37,32,32,32,32,32,97,110,121,32,110,111,100,
                 101,46,10,37,37,37,10,37,37,37,32,79,110,101,32,110,111,100,
                 101,32,105,110,32,116,104,101,32,110,101,116,119,111,114,107,
                 32,111,102,32,69,114,108,97,110,103,32,110,111,100,101,115,
                 32,114,117,110,115,32,97,32,115,101,114,118,101,114,32,119,
                 104,105,99,104,32,109,97,105,110,116,97,105,110,115,10,37,37,
                 37,32,100,97,116,97,32,97,98,111,117,116,32,116,104,101,32,
                 108,111,103,103,101,100,32,111,110,32,117,115,101,114,115,46,
                 32,84,104,101,32,115,101,114,118,101,114,32,105,115,32,114,
                 101,103,105,115,116,101,114,101,100,32,97,115,32,34,109,101,
                 115,115,101,110,103,101,114,34,10,37,37,37,32,69,97,99,104,
                 32,110,111,100,101,32,119,104,101,114,101,32,116,104,101,114,
                 101,32,105,115,32,97,32,117,115,101,114,32,108,111,103,103,
                 101,100,32,111,110,32,114,117,110,115,32,97,32,99,108,105,
                 101,110,116,32,112,114,111,99,101,115,115,32,114,101,103,105,
                 115,116,101,114,101,100,10,37,37,37,32,97,115,32,34,109,101,
                 115,115,95,99,108,105,101,110,116,34,32,10,37,37,37,10,37,37,
                 37,32,80,114,111,116,111,99,111,108,32,98,101,116,119,101,
                 101,110,32,116,104,101,32,99,108,105,101,110,116,32,112,114,
                 111,99,101,115,115,101,115,32,97,110,100,32,116,104,101,32,
                 115,101,114,118,101,114,10,37,37,37,32,45,45,45,45,45,45,45,
                 45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
                 45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
                 45,45,45,45,45,10,37,37,37,32,10,37,37,37,32,84,111,32,115,
                 101,114,118,101,114,58,32,123,67,108,105,101,110,116,80,105,
                 100,44,32,108,111,103,111,110,44,32,85,115,101,114,78,97,109,
                 101,125,10,37,37,37,32,82,101,112,108,121,32,123,109,101,115,
                 115,101,110,103,101,114,44,32,115,116,111,112,44,32,117,115,
                 101,114,95,101,120,105,115,116,115,95,97,116,95,111,116,104,
                 101,114,95,110,111,100,101,125,32,115,116,111,112,115,32,116,
                 104,101,32,99,108,105,101,110,116,10,37,37,37,32,82,101,112,
                 108,121,32,123,109,101,115,115,101,110,103,101,114,44,32,108,
                 111,103,103,101,100,95,111,110,125,32,108,111,103,111,110,32,
                 119,97,115,32,115,117,99,99,101,115,115,102,117,108,10,37,37,
                 37,10,37,37,37,32,84,111,32,115,101,114,118,101,114,58,32,
                 123,67,108,105,101,110,116,80,105,100,44,32,108,111,103,111,
                 102,102,125,10,37,37,37,32,82,101,112,108,121,58,32,123,109,
                 101,115,115,101,110,103,101,114,44,32,108,111,103,103,101,
                 100,95,111,102,102,125,10,37,37,37,10,37,37,37,32,84,111,32,
                 115,101,114,118,101,114,58,32,123,67,108,105,101,110,116,80,
                 105,100,44,32,108,111,103,111,102,102,125,10,37,37,37,32,82,
                 101,112,108,121,58,32,110,111,32,114,101,112,108,121,10,37,
                 37,37,10,37,37,37,32,84,111,32,115,101,114,118,101,114,58,32,
                 123,67,108,105,101,110,116,80,105,100,44,32,109,101,115,115,
                 97,103,101,95,116,111,44,32,84,111,78,97,109,101,44,32,77,
                 101,115,115,97,103,101,125,32,115,101,110,100,32,97,32,109,
                 101,115,115,97,103,101,10,37,37,37,32,82,101,112,108,121,58,
                 32,123,109,101,115,115,101,110,103,101,114,44,32,115,116,111,
                 112,44,32,121,111,117,95,97,114,101,95,110,111,116,95,108,
                 111,103,103,101,100,95,111,110,125,32,115,116,111,112,115,32,
                 116,104,101,32,99,108,105,101,110,116,10,37,37,37,32,82,101,
                 112,108,121,58,32,123,109,101,115,115,101,110,103,101,114,44,
                 32,114,101,99,101,105,118,101,114,95,110,111,116,95,102,111,
                 117,110,100,125,32,110,111,32,117,115,101,114,32,119,105,116,
                 104,32,116,104,105,115,32,110,97,109,101,32,108,111,103,103,
                 101,100,32,111,110,10,37,37,37,32,82,101,112,108,121,58,32,
                 123,109,101,115,115,101,110,103,101,114,44,32,115,101,110,
                 116,125,32,77,101,115,115,97,103,101,32,104,97,115,32,98,101,
                 101,110,32,115,101,110,116,32,40,98,117,116,32,110,111,32,
                 103,117,97,114,97,110,116,101,101,41,10,37,37,37,10,37,37,37,
                 32,84,111,32,99,108,105,101,110,116,58,32,123,109,101,115,
                 115,97,103,101,95,102,114,111,109,44,32,78,97,109,101,44,32,
                 77,101,115,115,97,103,101,125,44,10,37,37,37,10,37,37,37,32,
                 80,114,111,116,111,99,111,108,32,98,101,116,119,101,101,110,
                 32,116,104,101,32,34,99,111,109,109,97,110,100,115,34,32,97,
                 110,100,32,116,104,101,32,99,108,105,101,110,116,10,37,37,37,
                 32,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
                 45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
                 45,45,45,45,45,45,45,10,37,37,37,10,37,37,37,32,83,116,97,
                 114,116,101,100,58,32,109,101,115,115,101,110,103,101,114,58,
                 99,108,105,101,110,116,40,83,101,114,118,101,114,95,78,111,
                 100,101,44,32,78,97,109,101,41,10,37,37,37,32,84,111,32,99,
                 108,105,101,110,116,58,32,108,111,103,111,102,102,10,37,37,
                 37,32,84,111,32,99,108,105,101,110,116,58,32,123,109,101,115,
                 115,97,103,101,95,116,111,44,32,84,111,78,97,109,101,44,32,
                 77,101,115,115,97,103,101,125,10,37,37,37,10,37,37,37,32,67,
                 111,110,102,105,103,117,114,97,116,105,111,110,58,32,99,104,
                 97,110,103,101,32,116,104,101,32,115,101,114,118,101,114,95,
                 110,111,100,101,40,41,32,102,117,110,99,116,105,111,110,32,
                 116,111,32,114,101,116,117,114,110,32,116,104,101,10,37,37,
                 37,32,110,97,109,101,32,111,102,32,116,104,101,32,110,111,
                 100,101,32,119,104,101,114,101,32,116,104,101,32,109,101,115,
                 115,101,110,103,101,114,32,115,101,114,118,101,114,32,114,
                 117,110,115,10,10,45,109,111,100,117,108,101,40,109,101,115,
                 115,101,110,103,101,114,41,46,10,45,101,120,112,111,114,116,
                 40,91,115,116,97,114,116,95,115,101,114,118,101,114,47,48,44,
                 32,115,101,114,118,101,114,47,49,44,32,108,111,103,111,110,
                 47,49,44,32,108,111,103,111,102,102,47,48,44,32,109,101,115,
                 115,97,103,101,47,50,44,32,99,108,105,101,110,116,47,50,93,
                 41,46,10,10,37,37,37,32,67,104,97,110,103,101,32,116,104,101,
                 32,102,117,110,99,116,105,111,110,32,98,101,108,111,119,32,
                 116,111,32,114,101,116,117,114,110,32,116,104,101,32,110,97,
                 109,101,32,111,102,32,116,104,101,32,110,111,100,101,32,119,
                 104,101,114,101,32,116,104,101,10,37,37,37,32,109,101,115,
                 115,101,110,103,101,114,32,115,101,114,118,101,114,32,114,
                 117,110,115,10,115,101,114,118,101,114,95,110,111,100,101,40,
                 41,32,45,62,10,32,32,32,32,109,101,115,115,101,110,103,101,
                 114,64,115,117,112,101,114,46,10,10,37,37,37,32,84,104,105,
                 115,32,105,115,32,116,104,101,32,115,101,114,118,101,114,32,
                 112,114,111,99,101,115,115,32,102,111,114,32,116,104,101,32,
                 34,109,101,115,115,101,110,103,101,114,34,10,37,37,37,32,116,
                 104,101,32,117,115,101,114,32,108,105,115,116,32,104,97,115,
                 32,116,104,101,32,102,111,114,109,97,116,32,91,123,67,108,
                 105,101,110,116,80,105,100,49,44,32,78,97,109,101,49,125,44,
                 123,67,108,105,101,110,116,80,105,100,50,50,44,32,78,97,109,
                 101,50,125,44,46,46,46,93,10,115,101,114,118,101,114,40,85,
                 115,101,114,95,76,105,115,116,41,32,45,62,10,32,32,32,32,114,
                 101,99,101,105,118,101,10,32,32,32,32,32,32,32,32,123,70,114,
                 111,109,44,32,108,111,103,111,110,44,32,78,97,109,101,125,32,
                 45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,78,101,119,95,
                 85,115,101,114,95,76,105,115,116,32,61,32,115,101,114,118,
                 101,114,95,108,111,103,111,110,40,70,114,111,109,44,32,78,97,
                 109,101,44,32,85,115,101,114,95,76,105,115,116,41,44,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,115,101,114,118,101,114,40,
                 78,101,119,95,85,115,101,114,95,76,105,115,116,41,59,10,32,
                 32,32,32,32,32,32,32,123,70,114,111,109,44,32,108,111,103,
                 111,102,102,125,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,78,101,119,95,85,115,101,114,95,76,105,115,116,32,61,32,
                 115,101,114,118,101,114,95,108,111,103,111,102,102,40,70,114,
                 111,109,44,32,85,115,101,114,95,76,105,115,116,41,44,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,115,101,114,118,101,114,40,
                 78,101,119,95,85,115,101,114,95,76,105,115,116,41,59,10,32,
                 32,32,32,32,32,32,32,123,70,114,111,109,44,32,109,101,115,
                 115,97,103,101,95,116,111,44,32,84,111,44,32,77,101,115,115,
                 97,103,101,125,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,115,101,114,118,101,114,95,116,114,97,110,115,102,101,114,
                 40,70,114,111,109,44,32,84,111,44,32,77,101,115,115,97,103,
                 101,44,32,85,115,101,114,95,76,105,115,116,41,44,10,32,32,32,
                 32,32,32,32,32,32,32,32,32,105,111,58,102,111,114,109,97,116,
                 40,34,108,105,115,116,32,105,115,32,110,111,119,58,32,126,
                 112,126,110,34,44,32,91,85,115,101,114,95,76,105,115,116,93,
                 41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,115,101,114,118,
                 101,114,40,85,115,101,114,95,76,105,115,116,41,10,32,32,32,
                 32,101,110,100,46,10,10,37,37,37,32,83,116,97,114,116,32,116,
                 104,101,32,115,101,114,118,101,114,10,115,116,97,114,116,95,
                 115,101,114,118,101,114,40,41,32,45,62,10,32,32,32,32,114,
                 101,103,105,115,116,101,114,40,109,101,115,115,101,110,103,
                 101,114,44,32,115,112,97,119,110,40,109,101,115,115,101,110,
                 103,101,114,44,32,115,101,114,118,101,114,44,32,91,91,93,93,
                 41,41,46,10,10,10,37,37,37,32,83,101,114,118,101,114,32,97,
                 100,100,115,32,97,32,110,101,119,32,117,115,101,114,32,116,
                 111,32,116,104,101,32,117,115,101,114,32,108,105,115,116,10,
                 115,101,114,118,101,114,95,108,111,103,111,110,40,70,114,111,
                 109,44,32,78,97,109,101,44,32,85,115,101,114,95,76,105,115,
                 116,41,32,45,62,10,32,32,32,32,37,37,32,99,104,101,99,107,32,
                 105,102,32,108,111,103,103,101,100,32,111,110,32,97,110,121,
                 119,104,101,114,101,32,101,108,115,101,10,32,32,32,32,99,97,
                 115,101,32,108,105,115,116,115,58,107,101,121,109,101,109,98,
                 101,114,40,78,97,109,101,44,32,50,44,32,85,115,101,114,95,76,
                 105,115,116,41,32,111,102,10,32,32,32,32,32,32,32,32,116,114,
                 117,101,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,70,
                 114,111,109,32,33,32,123,109,101,115,115,101,110,103,101,114,
                 44,32,115,116,111,112,44,32,117,115,101,114,95,101,120,105,
                 115,116,115,95,97,116,95,111,116,104,101,114,95,110,111,100,
                 101,125,44,32,32,37,114,101,106,101,99,116,32,108,111,103,
                 111,110,10,32,32,32,32,32,32,32,32,32,32,32,32,85,115,101,
                 114,95,76,105,115,116,59,10,32,32,32,32,32,32,32,32,102,97,
                 108,115,101,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 70,114,111,109,32,33,32,123,109,101,115,115,101,110,103,101,
                 114,44,32,108,111,103,103,101,100,95,111,110,125,44,10,32,32,
                 32,32,32,32,32,32,32,32,32,32,91,123,70,114,111,109,44,32,78,
                 97,109,101,125,32,124,32,85,115,101,114,95,76,105,115,116,93,
                 32,32,32,32,32,32,32,32,37,97,100,100,32,117,115,101,114,32,
                 116,111,32,116,104,101,32,108,105,115,116,10,32,32,32,32,101,
                 110,100,46,10,10,37,37,37,32,83,101,114,118,101,114,32,100,
                 101,108,101,116,101,115,32,97,32,117,115,101,114,32,102,114,
                 111,109,32,116,104,101,32,117,115,101,114,32,108,105,115,116,
                 10,115,101,114,118,101,114,95,108,111,103,111,102,102,40,70,
                 114,111,109,44,32,85,115,101,114,95,76,105,115,116,41,32,45,
                 62,10,32,32,32,32,108,105,115,116,115,58,107,101,121,100,101,
                 108,101,116,101,40,70,114,111,109,44,32,49,44,32,85,115,101,
                 114,95,76,105,115,116,41,46,10,10,10,37,37,37,32,83,101,114,
                 118,101,114,32,116,114,97,110,115,102,101,114,115,32,97,32,
                 109,101,115,115,97,103,101,32,98,101,116,119,101,101,110,32,
                 117,115,101,114,10,115,101,114,118,101,114,95,116,114,97,110,
                 115,102,101,114,40,70,114,111,109,44,32,84,111,44,32,77,101,
                 115,115,97,103,101,44,32,85,115,101,114,95,76,105,115,116,41,
                 32,45,62,10,32,32,32,32,37,37,32,99,104,101,99,107,32,116,
                 104,97,116,32,116,104,101,32,117,115,101,114,32,105,115,32,
                 108,111,103,103,101,100,32,111,110,32,97,110,100,32,119,104,
                 111,32,104,101,32,105,115,10,32,32,32,32,99,97,115,101,32,
                 108,105,115,116,115,58,107,101,121,115,101,97,114,99,104,40,
                 70,114,111,109,44,32,49,44,32,85,115,101,114,95,76,105,115,
                 116,41,32,111,102,10,32,32,32,32,32,32,32,32,102,97,108,115,
                 101,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,70,114,
                 111,109,32,33,32,123,109,101,115,115,101,110,103,101,114,44,
                 32,115,116,111,112,44,32,121,111,117,95,97,114,101,95,110,
                 111,116,95,108,111,103,103,101,100,95,111,110,125,59,10,32,
                 32,32,32,32,32,32,32,123,118,97,108,117,101,44,32,123,70,114,
                 111,109,44,32,78,97,109,101,125,125,32,45,62,10,32,32,32,32,
                 32,32,32,32,32,32,32,32,115,101,114,118,101,114,95,116,114,
                 97,110,115,102,101,114,40,70,114,111,109,44,32,78,97,109,101,
                 44,32,84,111,44,32,77,101,115,115,97,103,101,44,32,85,115,
                 101,114,95,76,105,115,116,41,10,32,32,32,32,101,110,100,46,
                 10,37,37,37,32,73,102,32,116,104,101,32,117,115,101,114,32,
                 101,120,105,115,116,115,44,32,115,101,110,100,32,116,104,101,
                 32,109,101,115,115,97,103,101,10,115,101,114,118,101,114,95,
                 116,114,97,110,115,102,101,114,40,70,114,111,109,44,32,78,97,
                 109,101,44,32,84,111,44,32,77,101,115,115,97,103,101,44,32,
                 85,115,101,114,95,76,105,115,116,41,32,45,62,10,32,32,32,32,
                 37,37,32,70,105,110,100,32,116,104,101,32,114,101,99,101,105,
                 118,101,114,32,97,110,100,32,115,101,110,100,32,116,104,101,
                 32,109,101,115,115,97,103,101,10,32,32,32,32,99,97,115,101,
                 32,108,105,115,116,115,58,107,101,121,115,101,97,114,99,104,
                 40,84,111,44,32,50,44,32,85,115,101,114,95,76,105,115,116,41,
                 32,111,102,10,32,32,32,32,32,32,32,32,102,97,108,115,101,32,
                 45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,70,114,111,109,
                 32,33,32,123,109,101,115,115,101,110,103,101,114,44,32,114,
                 101,99,101,105,118,101,114,95,110,111,116,95,102,111,117,110,
                 100,125,59,10,32,32,32,32,32,32,32,32,123,118,97,108,117,101,
                 44,32,123,84,111,80,105,100,44,32,84,111,125,125,32,45,62,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,84,111,80,105,100,32,33,
                 32,123,109,101,115,115,97,103,101,95,102,114,111,109,44,32,
                 78,97,109,101,44,32,77,101,115,115,97,103,101,125,44,32,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,70,114,111,109,32,33,32,
                 123,109,101,115,115,101,110,103,101,114,44,32,115,101,110,
                 116,125,32,10,32,32,32,32,101,110,100,46,10,10,10,37,37,37,
                 32,85,115,101,114,32,67,111,109,109,97,110,100,115,10,108,
                 111,103,111,110,40,78,97,109,101,41,32,45,62,10,32,32,32,32,
                 99,97,115,101,32,119,104,101,114,101,105,115,40,109,101,115,
                 115,95,99,108,105,101,110,116,41,32,111,102,32,10,32,32,32,
                 32,32,32,32,32,117,110,100,101,102,105,110,101,100,32,45,62,
                 10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,103,105,115,
                 116,101,114,40,109,101,115,115,95,99,108,105,101,110,116,44,
                 32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,115,112,97,119,110,40,109,101,115,115,101,110,103,
                 101,114,44,32,99,108,105,101,110,116,44,32,91,115,101,114,
                 118,101,114,95,110,111,100,101,40,41,44,32,78,97,109,101,93,
                 41,41,59,10,32,32,32,32,32,32,32,32,95,32,45,62,32,97,108,
                 114,101,97,100,121,95,108,111,103,103,101,100,95,111,110,10,
                 32,32,32,32,101,110,100,46,10,10,108,111,103,111,102,102,40,
                 41,32,45,62,10,32,32,32,32,109,101,115,115,95,99,108,105,101,
                 110,116,32,33,32,108,111,103,111,102,102,46,10,10,109,101,
                 115,115,97,103,101,40,84,111,78,97,109,101,44,32,77,101,115,
                 115,97,103,101,41,32,45,62,10,32,32,32,32,99,97,115,101,32,
                 119,104,101,114,101,105,115,40,109,101,115,115,95,99,108,105,
                 101,110,116,41,32,111,102,32,37,32,84,101,115,116,32,105,102,
                 32,116,104,101,32,99,108,105,101,110,116,32,105,115,32,114,
                 117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,117,110,
                 100,101,102,105,110,101,100,32,45,62,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,110,111,116,95,108,111,103,103,101,100,95,111,
                 110,59,10,32,32,32,32,32,32,32,32,95,32,45,62,32,109,101,115,
                 115,95,99,108,105,101,110,116,32,33,32,123,109,101,115,115,
                 97,103,101,95,116,111,44,32,84,111,78,97,109,101,44,32,77,
                 101,115,115,97,103,101,125,44,10,32,32,32,32,32,32,32,32,32,
                 32,32,32,32,111,107,10,101,110,100,46,10,10,10,37,37,37,32,
                 84,104,101,32,99,108,105,101,110,116,32,112,114,111,99,101,
                 115,115,32,119,104,105,99,104,32,114,117,110,115,32,111,110,
                 32,101,97,99,104,32,115,101,114,118,101,114,32,110,111,100,
                 101,10,99,108,105,101,110,116,40,83,101,114,118,101,114,95,
                 78,111,100,101,44,32,78,97,109,101,41,32,45,62,10,32,32,32,
                 32,123,109,101,115,115,101,110,103,101,114,44,32,83,101,114,
                 118,101,114,95,78,111,100,101,125,32,33,32,123,115,101,108,
                 102,40,41,44,32,108,111,103,111,110,44,32,78,97,109,101,125,
                 44,10,32,32,32,32,97,119,97,105,116,95,114,101,115,117,108,
                 116,40,41,44,10,32,32,32,32,99,108,105,101,110,116,40,83,101,
                 114,118,101,114,95,78,111,100,101,41,46,10,10,99,108,105,101,
                 110,116,40,83,101,114,118,101,114,95,78,111,100,101,41,32,45,
                 62,10,32,32,32,32,114,101,99,101,105,118,101,10,32,32,32,32,
                 32,32,32,32,108,111,103,111,102,102,32,45,62,10,32,32,32,32,
                 32,32,32,32,32,32,32,32,123,109,101,115,115,101,110,103,101,
                 114,44,32,83,101,114,118,101,114,95,78,111,100,101,125,32,33,
                 32,123,115,101,108,102,40,41,44,32,108,111,103,111,102,102,
                 125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,101,120,105,
                 116,40,110,111,114,109,97,108,41,59,10,32,32,32,32,32,32,32,
                 32,123,109,101,115,115,97,103,101,95,116,111,44,32,84,111,78,
                 97,109,101,44,32,77,101,115,115,97,103,101,125,32,45,62,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,123,109,101,115,115,101,
                 110,103,101,114,44,32,83,101,114,118,101,114,95,78,111,100,
                 101,125,32,33,32,123,115,101,108,102,40,41,44,32,109,101,115,
                 115,97,103,101,95,116,111,44,32,84,111,78,97,109,101,44,32,
                 77,101,115,115,97,103,101,125,44,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,97,119,97,105,116,95,114,101,115,117,108,116,40,
                 41,59,10,32,32,32,32,32,32,32,32,123,109,101,115,115,97,103,
                 101,95,102,114,111,109,44,32,70,114,111,109,78,97,109,101,44,
                 32,77,101,115,115,97,103,101,125,32,45,62,10,32,32,32,32,32,
                 32,32,32,32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,
                 77,101,115,115,97,103,101,32,102,114,111,109,32,126,112,58,
                 32,126,112,126,110,34,44,32,91,70,114,111,109,78,97,109,101,
                 44,32,77,101,115,115,97,103,101,93,41,10,32,32,32,32,101,110,
                 100,44,10,32,32,32,32,99,108,105,101,110,116,40,83,101,114,
                 118,101,114,95,78,111,100,101,41,46,10,10,37,37,37,32,119,97,
                 105,116,32,102,111,114,32,97,32,114,101,115,112,111,110,115,
                 101,32,102,114,111,109,32,116,104,101,32,115,101,114,118,101,
                 114,10,97,119,97,105,116,95,114,101,115,117,108,116,40,41,32,
                 45,62,10,32,32,32,32,114,101,99,101,105,118,101,10,32,32,32,
                 32,32,32,32,32,123,109,101,115,115,101,110,103,101,114,44,32,
                 115,116,111,112,44,32,87,104,121,125,32,45,62,32,37,32,83,
                 116,111,112,32,116,104,101,32,99,108,105,101,110,116,32,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,111,114,
                 109,97,116,40,34,126,112,126,110,34,44,32,91,87,104,121,93,
                 41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,101,120,105,116,
                 40,110,111,114,109,97,108,41,59,10,32,32,32,32,32,32,32,32,
                 123,109,101,115,115,101,110,103,101,114,44,32,87,104,97,116,
                 125,32,45,62,32,32,37,32,78,111,114,109,97,108,32,114,101,
                 115,112,111,110,115,101,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,105,111,58,102,111,114,109,97,116,40,34,126,112,126,110,
                 34,44,32,91,87,104,97,116,93,41,10,32,32,32,32,101,110,100,
                 46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"!To use this program, you need to:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,"\rConfigure the"}],0,false},
             {text,
              [15,42,115,101,114,118,101,114,95,110,111,100,101,40,41,42]},
             {sep,[{text,"\tfunction."}],0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                [24,67,111,112,121,32,116,104,101,32,99,111,109,112,105,108,
                 101,100,32,99,111,100,101,32,40]}],
              0,false},
             {text,
              [16,42,109,101,115,115,101,110,103,101,114,46,98,101,97,109,42]},
             {sep,
              [{text,
                ";) to the directory on each computer where you start Erlang."}],
              0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÍIn the following example using this program, nodes are started on four different computers. If you do not have that many machines available on your network, you can start several nodes on the same machine."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "RFour Erlang nodes are started up: messenger@super, c1@bilbo, c2@kosken, c3@gollum."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"2First the server at messenger@super is started up:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [21,10,40,109,101,115,115,101,110,103,101,114,64,115,117,112,
                 101,114,41,49,62,32]},
               {text,
                [25,109,101,115,115,101,110,103,101,114,58,115,116,97,114,116,
                 95,115,101,114,118,101,114,40,41,46]},
               {text,[5,10,116,114,117,101]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [30,78,111,119,32,80,101,116,101,114,32,108,111,103,115,32,
                 111,110,32,97,116,32,99,49,64,98,105,108,98,111,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[14,10,40,99,49,64,98,105,108,98,111,41,49,62,32]},
               {text,
                [23,109,101,115,115,101,110,103,101,114,58,108,111,103,111,
                 110,40,112,101,116,101,114,41,46]},
               {text,
                [15,10,116,114,117,101,10,108,111,103,103,101,100,95,111,
                 110]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"\eJames logs on at c2@kosken:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[15,10,40,99,50,64,107,111,115,107,101,110,41,49,62,32]},
               {text,
                [23,109,101,115,115,101,110,103,101,114,58,108,111,103,111,
                 110,40,106,97,109,101,115,41,46]},
               {text,
                [15,10,116,114,117,101,10,108,111,103,103,101,100,95,111,
                 110]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [30,65,110,100,32,70,114,101,100,32,108,111,103,115,32,111,
                 110,32,97,116,32,99,51,64,103,111,108,108,117,109,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[15,10,40,99,51,64,103,111,108,108,117,109,41,49,62,32]},
               {text,
                [22,109,101,115,115,101,110,103,101,114,58,108,111,103,111,
                 110,40,102,114,101,100,41,46]},
               {text,
                [15,10,116,114,117,101,10,108,111,103,103,101,100,95,111,
                 110]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [31,78,111,119,32,80,101,116,101,114,32,115,101,110,100,115,
                 32,70,114,101,100,32,97,32,109,101,115,115,97,103,101,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[14,10,40,99,49,64,98,105,108,98,111,41,50,62,32]},
               {text,"!messenger:message(fred, \"hello\")."},
               {text,"\b\nok\nsent"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "DFred receives the message and sends a message to Peter and logs off:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"+\nMessage from peter: \"hello\"\n(c3@gollum)2> "},
               {text,".messenger:message(peter, \"go away, I'm busy\")."},
               {text,
                [23,10,111,107,10,115,101,110,116,10,40,99,51,64,103,111,108,
                 108,117,109,41,51,62,32]},
               {text,
                [19,109,101,115,115,101,110,103,101,114,58,108,111,103,111,
                 102,102,40,41,46]},
               {text,[7,10,108,111,103,111,102,102]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"*James now tries to send a message to Fred:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[15,10,40,99,50,64,107,111,115,107,101,110,41,50,62,32]},
               {text,"2messenger:message(fred, \"peter doesn't like you\")."},
               {text,
                [22,10,111,107,10,114,101,99,101,105,118,101,114,95,110,111,
                 116,95,102,111,117,110,100]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,".But this fails as Fred has already logged off."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "HFirst let us look at some of the new concepts that have been introduced."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,84,104,101,114,101,32,97,114,101,32,116,119,111,32,118,
                   101,114,115,105,111,110,115,32,111,102,32,116,104,101]}],
                0,false},
               {text,
                [17,42,115,101,114,118,101,114,95,116,114,97,110,115,102,101,
                 114,42]},
               {sep,[{text,"#function: one with four arguments ("}],0,false},
               {text,
                [19,42,115,101,114,118,101,114,95,116,114,97,110,115,102,101,
                 114,47,52,42]},
               {sep,
                [{text,
                  [21,41,32,97,110,100,32,111,110,101,32,119,105,116,104,32,
                   102,105,118,101,32,40]}],
                0,false},
               {text,
                [19,42,115,101,114,118,101,114,95,116,114,97,110,115,102,101,
                 114,47,53,42]},
               {sep,
                [{text,
                  ":). These are regarded by Erlang as two separate functions."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [23,78,111,116,105,99,101,32,104,111,119,32,116,111,32,119,
                   114,105,116,101,32,116,104,101]}],
                0,false},
               {text,"\b*server*"},
               {sep,
                [{text,")function so that it calls itself, through"}],
                0,false},
               {text,
                [19,42,115,101,114,118,101,114,40,85,115,101,114,95,76,105,
                 115,116,41,42]},
               {sep,
                [{text,
                  [366,44,32,97,110,100,32,116,104,117,115,32,99,114,101,97,
                   116,101,115,32,97,32,108,111,111,112,46,32,84,104,101,32,
                   69,114,108,97,110,103,32,99,111,109,112,105,108,101,114,32,
                   105,115,32,34,99,108,101,118,101,114,34,32,97,110,100,32,
                   111,112,116,105,109,105,122,101,115,32,116,104,101,32,99,
                   111,100,101,32,115,111,32,116,104,97,116,32,116,104,105,
                   115,32,114,101,97,108,108,121,32,105,115,32,97,32,115,111,
                   114,116,32,111,102,32,108,111,111,112,32,97,110,100,32,110,
                   111,116,32,97,32,112,114,111,112,101,114,32,102,117,110,99,
                   116,105,111,110,32,99,97,108,108,46,32,66,117,116,32,116,
                   104,105,115,32,111,110,108,121,32,119,111,114,107,115,32,
                   105,102,32,116,104,101,114,101,32,105,115,32,110,111,32,99,
                   111,100,101,32,97,102,116,101,114,32,116,104,101,32,99,97,
                   108,108,46,32,79,116,104,101,114,119,105,115,101,44,32,116,
                   104,101,32,99,111,109,112,105,108,101,114,32,101,120,112,
                   101,99,116,115,32,116,104,101,32,99,97,108,108,32,116,111,
                   32,114,101,116,117,114,110,32,97,110,100,32,109,97,107,101,
                   32,97,32,112,114,111,112,101,114,32,102,117,110,99,116,105,
                   111,110,32,99,97,108,108,46,32,84,104,105,115,32,119,111,
                   117,108,100,32,114,101,115,117,108,116,32,105,110,32,116,
                   104,101,32,112,114,111,99,101,115,115,32,103,101,116,116,
                   105,110,103,32,98,105,103,103,101,114,32,97,110,100,32,98,
                   105,103,103,101,114,32,102,111,114,32,101,118,101,114,121,
                   32,108,111,111,112,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [16,70,117,110,99,116,105,111,110,115,32,105,110,32,116,104,
                   101]}],
                0,false},
               {text,[7,42,108,105,115,116,115,42]},
               {sep,
                [{text,
                  "]module are used. This is a very useful module and a study of the manual page is recommended ("}],
                0,false},
               {text,
                [16,42,101,114,108,32,45,109,97,110,32,108,105,115,116,115,
                 42]},
               {sep,[{text,[2,41,46]}],0,false},
               {text,"%*lists:keymember(Key,Position,Lists)*"},
               {sep,
                [{text,"+looks through a list of tuples and looks at"}],
                0,false},
               {text,"\n*Position*"},
               {sep,
                [{text,")in each tuple to see if it is the same as"}],
                0,false},
               {text,[5,42,75,101,121,42]},
               {sep,
                [{text,
                  "K. The first element is position 1. If it finds a tuple where the element at"}],
                0,false},
               {text,"\n*Position*"},
               {sep,
                [{text,
                  [14,105,115,32,116,104,101,32,115,97,109,101,32,97,115]}],
                0,false},
               {text,[5,42,75,101,121,42]},
               {sep,[{text,"\f, it returns"}],0,false},
               {text,[6,42,116,114,117,101,42]},
               {sep,[{text,"\v, otherwise"}],0,false},
               {text,[7,42,102,97,108,115,101,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,51,62,32]},
               {text,
                "9lists:keymember(a, 2, [{x,y,z},{b,b,b},{b,a,c},{q,r,s}])."},
               {text,"\t\ntrue\n4> "},
               {text,
                "9lists:keymember(p, 2, [{x,y,z},{b,b,b},{b,a,c},{q,r,s}])."},
               {text,[6,10,102,97,108,115,101]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [17,42,108,105,115,116,115,58,107,101,121,100,101,108,101,116,
                 101,42]},
               {sep,
                [{text,
                  "`works in the same way but deletes the first tuple found (if any) and returns the remaining list:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,53,62,32]},
               {text,
                "9lists:keydelete(a, 2, [{x,y,z},{b,b,b},{b,a,c},{q,r,s}])."},
               {text,
                [26,10,91,123,120,44,121,44,122,125,44,123,98,44,98,44,98,125,
                 44,123,113,44,114,44,115,125,93]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [17,42,108,105,115,116,115,58,107,101,121,115,101,97,114,99,
                 104,42]},
               {sep,[{text,[7,105,115,32,108,105,107,101]}],0,false},
               {text,
                [17,42,108,105,115,116,115,58,107,101,121,109,101,109,98,101,
                 114,42]},
               {sep,
                [{text,
                  [16,44,32,98,117,116,32,105,116,32,114,101,116,117,114,110,
                   115]}],
                0,false},
               {text,
                [21,42,123,118,97,108,117,101,44,84,117,112,108,101,95,70,111,
                 117,110,100,125,42]},
               {sep,[{text,"\vor the atom"}],0,false},
               {text,[7,42,102,97,108,115,101,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"+There are many very useful functions in the"}],
                0,false},
               {text,[7,42,108,105,115,116,115,42]},
               {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "5An Erlang process (conceptually) runs until it does a"}],
                0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,
                  "½and there is no message which it wants to receive in the message queue. \"conceptually\" is used here because the Erlang system shares the CPU time between the active processes in the system."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÍA process terminates when there is nothing more for it to do, that is, the last function it calls simply returns and does not call another function. Another way for a process to terminate is for it to call"}],
                0,false},
               {text,"\b*exit/1*"},
               {sep,
                [{text,
                  [17,46,32,84,104,101,32,97,114,103,117,109,101,110,116,32,
                   116,111]}],
                0,false},
               {text,"\b*exit/1*"},
               {sep,
                [{text,
                  "Ahas a special meaning, which is discussed later. In this example,"}],
                0,false},
               {text,[14,42,101,120,105,116,40,110,111,114,109,97,108,41,42]},
               {sep,
                [{text,
                  "Qis done, which has the same effect as a process running out of functions to call."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[7,84,104,101,32,66,73,70]}],0,false},
               {text,
                [25,42,119,104,101,114,101,105,115,40,82,101,103,105,115,116,
                 101,114,101,100,78,97,109,101,41,42]},
               {sep,
                [{text,"&checks if a registered process of name"}],
                0,false},
               {text,
                [16,42,82,101,103,105,115,116,101,114,101,100,78,97,109,101,
                 42]},
               {sep,
                [{text,
                  "Yexists. If it exists, the pid of that process is returned. If it does not exist, the atom"}],
                0,false},
               {text,"\v*undefined*"},
               {sep,[{text,"\fis returned."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [158,89,111,117,32,115,104,111,117,108,100,32,98,121,32,110,
                 111,119,32,98,101,32,97,98,108,101,32,116,111,32,117,110,100,
                 101,114,115,116,97,110,100,32,109,111,115,116,32,111,102,32,
                 116,104,101,32,99,111,100,101,32,105,110,32,116,104,101,32,
                 109,101,115,115,101,110,103,101,114,45,109,111,100,117,108,
                 101,46,32,76,101,116,32,117,115,32,115,116,117,100,121,32,
                 111,110,101,32,99,97,115,101,32,105,110,32,100,101,116,97,
                 105,108,58,32,97,32,109,101,115,115,97,103,101,32,105,115,32,
                 115,101,110,116,32,102,114,111,109,32,111,110,101,32,117,115,
                 101,114,32,116,111,32,97,110,111,116,104,101,114,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                ";The first user \"sends\" the message in the example above by:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"!\nmessenger:message(fred, \"hello\")"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"-After testing that the client process exists:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [22,10,119,104,101,114,101,105,115,40,109,101,115,115,95,99,
                 108,105,101,110,116,41,32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,65,110,100,32,97,32,109,101,115,115,97,103,101,32,105,
                   115,32,115,101,110,116,32,116,111]}],
                0,false},
               {text,"\r*mess_client*"},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"*\nmess_client ! {message_to, fred, \"hello\"}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,".The client sends the message to the server by:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "D\n{messenger, messenger@super} ! {self(), message_to, fred, \"hello\"},"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"&And waits for a reply from the server."}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"+The server receives this message and calls:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"1\nserver_transfer(From, fred, \"hello\", User_List),"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,84,104,105,115,32,99,104,101,99,107,115,32,116,104,97,
                   116,32,116,104,101,32,112,105,100]}],
                0,false},
               {text,[6,42,70,114,111,109,42]},
               {sep,[{text,"\tis in the"}],0,false},
               {text,"\v*User_List*"},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"%\nlists:keysearch(From, 1, User_List) "}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,"\v*keysearch*"},
               {sep,
                [{text,
                  [16,114,101,116,117,114,110,115,32,116,104,101,32,97,116,
                   111,109]}],
                0,false},
               {text,[7,42,102,97,108,115,101,42]},
               {sep,
                [{text,
                  "@, some error has occurred and the server sends back the message:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"0\nFrom ! {messenger, stop, you_are_not_logged_on}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"2This is received by the client, which in turn does"}],
                0,false},
               {text,[14,42,101,120,105,116,40,110,111,114,109,97,108,41,42]},
               {sep,
                [{text,
                  [18,97,110,100,32,116,101,114,109,105,110,97,116,101,115,46,
                   32,73,102]}],
                0,false},
               {text,"\v*keysearch*"},
               {sep,[{text,[7,114,101,116,117,114,110,115]}],0,false},
               {text,
                [21,42,123,118,97,108,117,101,44,123,70,114,111,109,44,78,97,
                 109,101,125,125,42]},
               {sep,
                [{text,
                  "Qit is certain that the user is logged on and that his name (peter) is in variable"}],
                0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [16,76,101,116,32,117,115,32,110,111,119,32,99,97,108,108,
                 58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "7\nserver_transfer(From, peter, fred, \"hello\", User_List)"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [22,78,111,116,105,99,101,32,116,104,97,116,32,97,115,32,
                   116,104,105,115,32,105,115]}],
                0,false},
               {text,
                [19,42,115,101,114,118,101,114,95,116,114,97,110,115,102,101,
                 114,47,53,42]},
               {sep,
                [{text,"-, it is not the same as the previous function"}],
                0,false},
               {text,
                [19,42,115,101,114,118,101,114,95,116,114,97,110,115,102,101,
                 114,47,52,42]},
               {sep,[{text,"\t. Another"}],0,false},
               {text,"\v*keysearch*"},
               {sep,[{text,"\nis done on"}],0,false},
               {text,"\v*User_List*"},
               {sep,
                [{text,
                  "4to find the pid of the client corresponding to fred:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"$\nlists:keysearch(fred, 2, User_List)"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "`This time argument 2 is used, which is the second element in the tuple. If this returns the atom"}],
                0,false},
               {text,[7,42,102,97,108,115,101,42]},
               {sep,
                [{text,
                  ":, fred is not logged on and the following message is sent:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"(\nFrom ! {messenger, receiver_not_found};"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [31,84,104,105,115,32,105,115,32,114,101,99,101,105,118,101,
                 100,32,98,121,32,116,104,101,32,99,108,105,101,110,116,46]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,"\v*keysearch*"},
               {sep,[{text,"\breturns:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [23,10,123,118,97,108,117,101,44,32,123,84,111,80,105,100,44,
                 32,102,114,101,100,125,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"/The following message is sent to fred's client:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,")\nToPid ! {message_from, peter, \"hello\"}, "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"0The following message is sent to peter's client:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [26,10,70,114,111,109,32,33,32,123,109,101,115,115,101,110,
                 103,101,114,44,32,115,101,110,116,125,32]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"1Fred's client receives the message and prints it:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "[\n{message_from, peter, \"hello\"} ->\n    io:format(\"Message from ~p: ~p~n\", [peter, \"hello\"])"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"*Peter's client receives the message in the"}],
                0,false},
               {text,[14,42,97,119,97,105,116,95,114,101,115,117,108,116,42]},
               {sep,[{text,"\tfunction."}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "6Several things are wrong with the messenger example in"}],
              0,false},
             {text,"\"[A Larger Example](./conc_prog#ex)"},
             {sep,
              [{text,
                "u. For example, if a node where a user is logged on goes down without doing a logoff, the user remains in the server's"}],
              0,false},
             {text,"\v*User_List*"},
             {sep,
              [{text,
                [134,44,32,98,117,116,32,116,104,101,32,99,108,105,101,110,
                 116,32,100,105,115,97,112,112,101,97,114,115,46,32,84,104,
                 105,115,32,109,97,107,101,115,32,105,116,32,105,109,112,111,
                 115,115,105,98,108,101,32,102,111,114,32,116,104,101,32,117,
                 115,101,114,32,116,111,32,108,111,103,32,111,110,32,97,103,
                 97,105,110,32,97,115,32,116,104,101,32,115,101,114,118,101,
                 114,32,116,104,105,110,107,115,32,116,104,101,32,117,115,101,
                 114,32,97,108,114,101,97,100,121,32,105,115,32,108,111,103,
                 103,101,100,32,111,110,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "}Or what happens if the server goes down in the middle of sending a message, leaving the sending client hanging forever in the"}],
              0,false},
             {text,[14,42,97,119,97,105,116,95,114,101,115,117,108,116,42]},
             {sep,[{text,"\tfunction?"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,[14,35,35,35,35,32,84,105,109,101,45,111,117,116,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÔBefore improving the messenger program, let us look at some general principles, using the ping pong program as an example. Recall that when \"ping\" finishes, it tells \"pong\" that it has done so by sending the atom"}],
                0,false},
               {text,"\n*finished*"},
               {sep,
                [{text,
                  "Ías a message to \"pong\" so that \"pong\" can also finish. Another way to let \"pong\" finish is to make \"pong\" exit if it does not receive a message from ping within a certain time. This can be done by adding a"}],
                0,false},
               {text,"\f**time-out**"},
               {sep,[{text,[2,116,111]}],0,false},
               {text,[6,42,112,111,110,103,42]},
               {sep,[{text,"\"as shown in the following example:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [662,10,45,109,111,100,117,108,101,40,116,117,116,49,57,41,46,
                 10,10,45,101,120,112,111,114,116,40,91,115,116,97,114,116,95,
                 112,105,110,103,47,49,44,32,115,116,97,114,116,95,112,111,
                 110,103,47,48,44,32,32,112,105,110,103,47,50,44,32,112,111,
                 110,103,47,48,93,41,46,10,10,112,105,110,103,40,48,44,32,80,
                 111,110,103,95,78,111,100,101,41,32,45,62,10,32,32,32,32,105,
                 111,58,102,111,114,109,97,116,40,34,112,105,110,103,32,102,
                 105,110,105,115,104,101,100,126,110,34,44,32,91,93,41,59,10,
                 10,112,105,110,103,40,78,44,32,80,111,110,103,95,78,111,100,
                 101,41,32,45,62,10,32,32,32,32,123,112,111,110,103,44,32,80,
                 111,110,103,95,78,111,100,101,125,32,33,32,123,112,105,110,
                 103,44,32,115,101,108,102,40,41,125,44,10,32,32,32,32,114,
                 101,99,101,105,118,101,10,32,32,32,32,32,32,32,32,112,111,
                 110,103,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,105,
                 111,58,102,111,114,109,97,116,40,34,80,105,110,103,32,114,
                 101,99,101,105,118,101,100,32,112,111,110,103,126,110,34,44,
                 32,91,93,41,10,32,32,32,32,101,110,100,44,10,32,32,32,32,112,
                 105,110,103,40,78,32,45,32,49,44,32,80,111,110,103,95,78,111,
                 100,101,41,46,10,10,112,111,110,103,40,41,32,45,62,10,32,32,
                 32,32,114,101,99,101,105,118,101,10,32,32,32,32,32,32,32,32,
                 123,112,105,110,103,44,32,80,105,110,103,95,80,73,68,125,32,
                 45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,
                 111,114,109,97,116,40,34,80,111,110,103,32,114,101,99,101,
                 105,118,101,100,32,112,105,110,103,126,110,34,44,32,91,93,41,
                 44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,105,110,103,95,
                 80,73,68,32,33,32,112,111,110,103,44,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,112,111,110,103,40,41,10,32,32,32,32,97,102,
                 116,101,114,32,53,48,48,48,32,45,62,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,80,
                 111,110,103,32,116,105,109,101,100,32,111,117,116,126,110,34,
                 44,32,91,93,41,10,32,32,32,32,101,110,100,46,10,10,115,116,
                 97,114,116,95,112,111,110,103,40,41,32,45,62,10,32,32,32,32,
                 114,101,103,105,115,116,101,114,40,112,111,110,103,44,32,115,
                 112,97,119,110,40,116,117,116,49,57,44,32,112,111,110,103,44,
                 32,91,93,41,41,46,10,10,115,116,97,114,116,95,112,105,110,
                 103,40,80,111,110,103,95,78,111,100,101,41,32,45,62,10,32,32,
                 32,32,115,112,97,119,110,40,116,117,116,49,57,44,32,112,105,
                 110,103,44,32,91,51,44,32,80,111,110,103,95,78,111,100,101,
                 93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#After this is compiled and the file"}],0,false},
               {text,"\f*tut19.beam*"},
               {sep,
                [{text,
                  "Ois copied to the necessary directories, the following is seen on (pong@kosken):"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [17,10,40,112,111,110,103,64,107,111,115,107,101,110,41,49,62,
                 32]},
               {text,
                [19,116,117,116,49,57,58,115,116,97,114,116,95,112,111,110,
                 103,40,41,46]},
               {text,
                "M\ntrue\nPong received ping\nPong received ping\nPong received ping\nPong timed out"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"+And the following is seen on (ping@gollum):"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [17,10,40,112,105,110,103,64,103,111,108,108,117,109,41,49,62,
                 32]},
               {text,
                [30,116,117,116,49,57,58,115,116,97,114,116,95,112,105,110,
                 103,40,112,111,110,103,64,107,111,115,107,101,110,41,46]},
               {text,[1,10]},
               {text,
                "R<0.36.0>\nPing received pong\nPing received pong\nPing received pong\nping finished   "}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [23,84,104,101,32,116,105,109,101,45,111,117,116,32,105,115,
                 32,115,101,116,32,105,110,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "Þ\npong() ->\n    receive\n        {ping, Ping_PID} ->\n            io:format(\"Pong received ping~n\", []),\n            Ping_PID ! pong,\n            pong()\n    after 5000 ->\n            io:format(\"Pong timed out~n\", [])\n    end."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [14,84,104,101,32,116,105,109,101,45,111,117,116,32,40]}],
                0,false},
               {text,"\f*after 5000*"},
               {sep,
                [{text,
                  [17,41,32,105,115,32,115,116,97,114,116,101,100,32,119,104,
                   101,110]}],
                0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,"'is entered. The time-out is canceled if"}],
                0,false},
               {text,
                [17,42,123,112,105,110,103,44,80,105,110,103,95,80,73,68,125,
                 42]},
               {sep,
                [{text,
                  [15,105,115,32,114,101,99,101,105,118,101,100,46,32,73,
                   102]}],
                0,false},
               {text,
                [17,42,123,112,105,110,103,44,80,105,110,103,95,80,73,68,125,
                 42]},
               {sep,
                [{text,
                  "Uis not received, the actions following the time-out are done after 5000 milliseconds."}],
                0,false},
               {text,[7,42,97,102,116,101,114,42]},
               {sep,
                [{text,
                  [19,109,117,115,116,32,98,101,32,108,97,115,116,32,105,110,
                   32,116,104,101]}],
                0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,
                  "H, that is, preceded by all other message reception specifications in the"}],
                0,false},
               {text,"\t*receive*"},
               {sep,
                [{text,
                  "S. It is also possible to call a function that returned an integer for the time-out:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [24,10,97,102,116,101,114,32,112,111,110,103,95,116,105,109,
                 101,111,117,116,40,41,32,45,62]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [394,73,110,32,103,101,110,101,114,97,108,44,32,116,104,101,
                 114,101,32,97,114,101,32,98,101,116,116,101,114,32,119,97,
                 121,115,32,116,104,97,110,32,117,115,105,110,103,32,116,105,
                 109,101,45,111,117,116,115,32,116,111,32,115,117,112,101,114,
                 118,105,115,101,32,112,97,114,116,115,32,111,102,32,97,32,
                 100,105,115,116,114,105,98,117,116,101,100,32,69,114,108,97,
                 110,103,32,115,121,115,116,101,109,46,32,84,105,109,101,45,
                 111,117,116,115,32,97,114,101,32,117,115,117,97,108,108,121,
                 32,97,112,112,114,111,112,114,105,97,116,101,32,116,111,32,
                 115,117,112,101,114,118,105,115,101,32,101,120,116,101,114,
                 110,97,108,32,101,118,101,110,116,115,44,32,102,111,114,32,
                 101,120,97,109,112,108,101,44,32,105,102,32,121,111,117,32,
                 104,97,118,101,32,101,120,112,101,99,116,101,100,32,97,32,
                 109,101,115,115,97,103,101,32,102,114,111,109,32,115,111,109,
                 101,32,101,120,116,101,114,110,97,108,32,115,121,115,116,101,
                 109,32,119,105,116,104,105,110,32,97,32,115,112,101,99,105,
                 102,105,101,100,32,116,105,109,101,46,32,70,111,114,32,101,
                 120,97,109,112,108,101,44,32,97,32,116,105,109,101,45,111,
                 117,116,32,99,97,110,32,98,101,32,117,115,101,100,32,116,111,
                 32,108,111,103,32,97,32,117,115,101,114,32,111,117,116,32,
                 111,102,32,116,104,101,32,109,101,115,115,101,110,103,101,
                 114,32,115,121,115,116,101,109,32,105,102,32,116,104,101,121,
                 32,104,97,118,101,32,110,111,116,32,97,99,99,101,115,115,101,
                 100,32,105,116,32,102,111,114,44,32,115,97,121,44,32,116,101,
                 110,32,109,105,110,117,116,101,115,46]}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,35,35,32,69,114,114,111,114,32,72,97,110,100,108,105,
             110,103]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [153,66,101,102,111,114,101,32,103,111,105,110,103,32,105,
                   110,116,111,32,100,101,116,97,105,108,115,32,111,102,32,
                   116,104,101,32,115,117,112,101,114,118,105,115,105,111,110,
                   32,97,110,100,32,101,114,114,111,114,32,104,97,110,100,108,
                   105,110,103,32,105,110,32,97,110,32,69,114,108,97,110,103,
                   32,115,121,115,116,101,109,44,32,108,101,116,32,117,115,32,
                   115,101,101,32,104,111,119,32,69,114,108,97,110,103,32,112,
                   114,111,99,101,115,115,101,115,32,116,101,114,109,105,110,
                   97,116,101,44,32,111,114,32,105,110,32,69,114,108,97,110,
                   103,32,116,101,114,109,105,110,111,108,111,103,121,44]}],
                0,false},
               {text,"\b**exit**"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,65,32,112,114,111,99,101,115,115,32,119,104,105,99,104,
                   32,101,120,101,99,117,116,101,115]}],
                0,false},
               {text,[14,42,101,120,105,116,40,110,111,114,109,97,108,41,42]},
               {sep,
                [{text,"(or simply runs out of things to do has a"}],
                0,false},
               {text,"\n**normal**"},
               {sep,[{text,[5,101,120,105,116,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "±A process which encounters a runtime error (for example, divide by zero, bad match, trying to call a function that does not exist and so on) exits with an error, that is, has an"}],
                0,false},
               {text,"\f**abnormal**"},
               {sep,
                [{text,
                  [30,101,120,105,116,46,32,65,32,112,114,111,99,101,115,115,
                   32,119,104,105,99,104,32,101,120,101,99,117,116,101,115]}],
                0,false},
               {text,"%[exit(Reason)](../erts/erlang#exit/1)"},
               {sep,[{text,[5,119,104,101,114,101]}],0,false},
               {text,"\b*Reason*"},
               {sep,[{text,"\"is any Erlang term except the atom"}],0,false},
               {text,"\b*normal*"},
               {sep,
                [{text,
                  [28,44,32,97,108,115,111,32,104,97,115,32,97,110,32,97,98,
                   110,111,114,109,97,108,32,101,120,105,116,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "PAn Erlang process can set up links to other Erlang processes. If a process calls"}],
                0,false},
               {text,"([link(Other_Pid)](../erts/erlang#link/1)"},
               {sep,
                [{text,
                  "Eit sets up a bidirectional link between itself and the process called"}],
                0,false},
               {text,"\v*Other_Pid*"},
               {sep,
                [{text,
                  "8. When a process terminates, it sends something called a"}],
                0,false},
               {text,"\n**signal**"},
               {sep,
                [{text,"%to all the processes it has links to."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "RThe signal carries information about the pid it was sent from and the exit reason."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "WThe default behaviour of a process that receives a normal exit is to ignore the signal."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "RThe default behaviour in the two other cases (that is, abnormal exit) above is to:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {text,"-Bypass all messages to the receiving process."}],
           0,false},
          {sep,
           [{text,[1,42]},{text,"\eKill the receiving process."}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {text,
            "CPropagate the same error signal to the links of the killed process."}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [270,73,110,32,116,104,105,115,32,119,97,121,32,121,111,117,
                   32,99,97,110,32,99,111,110,110,101,99,116,32,97,108,108,32,
                   112,114,111,99,101,115,115,101,115,32,105,110,32,97,32,116,
                   114,97,110,115,97,99,116,105,111,110,32,116,111,103,101,
                   116,104,101,114,32,117,115,105,110,103,32,108,105,110,107,
                   115,46,32,73,102,32,111,110,101,32,111,102,32,116,104,101,
                   32,112,114,111,99,101,115,115,101,115,32,101,120,105,116,
                   115,32,97,98,110,111,114,109,97,108,108,121,44,32,97,108,
                   108,32,116,104,101,32,112,114,111,99,101,115,115,101,115,
                   32,105,110,32,116,104,101,32,116,114,97,110,115,97,99,116,
                   105,111,110,32,97,114,101,32,107,105,108,108,101,100,46,32,
                   65,115,32,105,116,32,105,115,32,111,102,116,101,110,32,119,
                   97,110,116,101,100,32,116,111,32,99,114,101,97,116,101,32,
                   97,32,112,114,111,99,101,115,115,32,97,110,100,32,108,105,
                   110,107,32,116,111,32,105,116,32,97,116,32,116,104,101,32,
                   115,97,109,101,32,116,105,109,101,44,32,116,104,101,114,
                   101,32,105,115,32,97,32,115,112,101,99,105,97,108,32,66,73,
                   70,44]}],
                0,false},
               {text,")[spawn_link](../erts/erlang#spawn_link/1)"},
               {sep,
                [{text,
                  [21,116,104,97,116,32,100,111,101,115,32,116,104,101,32,115,
                   97,109,101,32,97,115]}],
                0,false},
               {text,[7,42,115,112,97,119,110,42]},
               {sep,
                [{text,"1, but also creates a link to the spawned process."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "HNow an example of the ping pong example using links to terminate \"pong\":"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [588,10,45,109,111,100,117,108,101,40,116,117,116,50,48,41,46,
                 10,10,45,101,120,112,111,114,116,40,91,115,116,97,114,116,47,
                 49,44,32,32,112,105,110,103,47,50,44,32,112,111,110,103,47,
                 48,93,41,46,10,10,112,105,110,103,40,78,44,32,80,111,110,103,
                 95,80,105,100,41,32,45,62,10,32,32,32,32,108,105,110,107,40,
                 80,111,110,103,95,80,105,100,41,44,10,32,32,32,32,112,105,
                 110,103,49,40,78,44,32,80,111,110,103,95,80,105,100,41,46,10,
                 10,112,105,110,103,49,40,48,44,32,95,41,32,45,62,10,32,32,32,
                 32,101,120,105,116,40,112,105,110,103,41,59,10,10,112,105,
                 110,103,49,40,78,44,32,80,111,110,103,95,80,105,100,41,32,45,
                 62,10,32,32,32,32,80,111,110,103,95,80,105,100,32,33,32,123,
                 112,105,110,103,44,32,115,101,108,102,40,41,125,44,10,32,32,
                 32,32,114,101,99,101,105,118,101,10,32,32,32,32,32,32,32,32,
                 112,111,110,103,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,105,111,58,102,111,114,109,97,116,40,34,80,105,110,103,32,
                 114,101,99,101,105,118,101,100,32,112,111,110,103,126,110,34,
                 44,32,91,93,41,10,32,32,32,32,101,110,100,44,10,32,32,32,32,
                 112,105,110,103,49,40,78,32,45,32,49,44,32,80,111,110,103,95,
                 80,105,100,41,46,10,10,112,111,110,103,40,41,32,45,62,10,32,
                 32,32,32,114,101,99,101,105,118,101,10,32,32,32,32,32,32,32,
                 32,123,112,105,110,103,44,32,80,105,110,103,95,80,73,68,125,
                 32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,
                 102,111,114,109,97,116,40,34,80,111,110,103,32,114,101,99,
                 101,105,118,101,100,32,112,105,110,103,126,110,34,44,32,91,
                 93,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,80,105,110,
                 103,95,80,73,68,32,33,32,112,111,110,103,44,10,32,32,32,32,
                 32,32,32,32,32,32,32,32,112,111,110,103,40,41,10,32,32,32,32,
                 101,110,100,46,10,10,115,116,97,114,116,40,80,105,110,103,95,
                 78,111,100,101,41,32,45,62,10,32,32,32,32,80,111,110,103,80,
                 73,68,32,61,32,115,112,97,119,110,40,116,117,116,50,48,44,32,
                 112,111,110,103,44,32,91,93,41,44,10,32,32,32,32,115,112,97,
                 119,110,40,80,105,110,103,95,78,111,100,101,44,32,116,117,
                 116,50,48,44,32,112,105,110,103,44,32,91,51,44,32,80,111,110,
                 103,80,73,68,93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"\r\n(s1@bill)3> "},
               {text,
                [23,116,117,116,50,48,58,115,116,97,114,116,40,115,50,64,107,
                 111,115,107,101,110,41,46]},
               {text,
                [20,10,80,111,110,103,32,114,101,99,101,105,118,101,100,32,
                 112,105,110,103,10]},
               {text,
                "j<3820.41.0>\nPing received pong\nPong received ping\nPing received pong\nPong received ping\nPing received pong"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "eThis is a slight modification of the ping pong program where both processes are spawned from the same"}],
                0,false},
               {text,"\t*start/1*"},
               {sep,
                [{text,
                  "Yfunction, and the \"ping\" process can be spawned on a separate node. Notice the use of the"}],
                0,false},
               {text,[6,42,108,105,110,107,42]},
               {sep,
                [{text,
                  [17,66,73,70,46,32,34,80,105,110,103,34,32,99,97,108,108,
                   115]}],
                0,false},
               {text,"\f*exit(ping)*"},
               {sep,
                [{text,
                  "\\when it finishes and this causes an exit signal to be sent to \"pong\", which also terminates."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "ÅIt is possible to modify the default behaviour of a process so that it does not get killed when it receives abnormal exit signals. Instead, all signals are turned into normal messages on the format"}],
                0,false},
               {text,
                [25,42,123,39,69,88,73,84,39,44,70,114,111,109,80,73,68,44,82,
                 101,97,115,111,110,125,42]},
               {sep,
                [{text,
                  "Wand added to the end of the receiving process' message queue. This behaviour is set by:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [30,10,112,114,111,99,101,115,115,95,102,108,97,103,40,116,
                 114,97,112,95,101,120,105,116,44,32,116,114,117,101,41]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"*There are several other process flags, see"}],
                0,false},
               {text,"*[erlang(3)](../erts/erlang#process_flag/2)"},
               {sep,
                [{text,
                  "à. Changing the default behaviour of a process in this way is usually not done in standard user programs, but is left to the supervisory programs in OTP. However, the ping pong program is modified to illustrate exit trapping."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [760,10,45,109,111,100,117,108,101,40,116,117,116,50,49,41,46,
                 10,10,45,101,120,112,111,114,116,40,91,115,116,97,114,116,47,
                 49,44,32,32,112,105,110,103,47,50,44,32,112,111,110,103,47,
                 48,93,41,46,10,10,112,105,110,103,40,78,44,32,80,111,110,103,
                 95,80,105,100,41,32,45,62,10,32,32,32,32,108,105,110,107,40,
                 80,111,110,103,95,80,105,100,41,44,32,10,32,32,32,32,112,105,
                 110,103,49,40,78,44,32,80,111,110,103,95,80,105,100,41,46,10,
                 10,112,105,110,103,49,40,48,44,32,95,41,32,45,62,10,32,32,32,
                 32,101,120,105,116,40,112,105,110,103,41,59,10,10,112,105,
                 110,103,49,40,78,44,32,80,111,110,103,95,80,105,100,41,32,45,
                 62,10,32,32,32,32,80,111,110,103,95,80,105,100,32,33,32,123,
                 112,105,110,103,44,32,115,101,108,102,40,41,125,44,10,32,32,
                 32,32,114,101,99,101,105,118,101,10,32,32,32,32,32,32,32,32,
                 112,111,110,103,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,105,111,58,102,111,114,109,97,116,40,34,80,105,110,103,32,
                 114,101,99,101,105,118,101,100,32,112,111,110,103,126,110,34,
                 44,32,91,93,41,10,32,32,32,32,101,110,100,44,10,32,32,32,32,
                 112,105,110,103,49,40,78,32,45,32,49,44,32,80,111,110,103,95,
                 80,105,100,41,46,10,10,112,111,110,103,40,41,32,45,62,10,32,
                 32,32,32,112,114,111,99,101,115,115,95,102,108,97,103,40,116,
                 114,97,112,95,101,120,105,116,44,32,116,114,117,101,41,44,32,
                 10,32,32,32,32,112,111,110,103,49,40,41,46,10,10,112,111,110,
                 103,49,40,41,32,45,62,10,32,32,32,32,114,101,99,101,105,118,
                 101,10,32,32,32,32,32,32,32,32,123,112,105,110,103,44,32,80,
                 105,110,103,95,80,73,68,125,32,45,62,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,80,
                 111,110,103,32,114,101,99,101,105,118,101,100,32,112,105,110,
                 103,126,110,34,44,32,91,93,41,44,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,80,105,110,103,95,80,73,68,32,33,32,112,111,110,
                 103,44,10,32,32,32,32,32,32,32,32,32,32,32,32,112,111,110,
                 103,49,40,41,59,10,32,32,32,32,32,32,32,32,123,39,69,88,73,
                 84,39,44,32,70,114,111,109,44,32,82,101,97,115,111,110,125,
                 32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,
                 102,111,114,109,97,116,40,34,112,111,110,103,32,101,120,105,
                 116,105,110,103,44,32,103,111,116,32,126,112,126,110,34,44,
                 32,91,123,39,69,88,73,84,39,44,32,70,114,111,109,44,32,82,
                 101,97,115,111,110,125,93,41,10,32,32,32,32,101,110,100,46,
                 10,10,115,116,97,114,116,40,80,105,110,103,95,78,111,100,101,
                 41,32,45,62,10,32,32,32,32,80,111,110,103,80,73,68,32,61,32,
                 115,112,97,119,110,40,116,117,116,50,49,44,32,112,111,110,
                 103,44,32,91,93,41,44,10,32,32,32,32,115,112,97,119,110,40,
                 80,105,110,103,95,78,111,100,101,44,32,116,117,116,50,49,44,
                 32,112,105,110,103,44,32,91,51,44,32,80,111,110,103,80,73,68,
                 93,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"\r\n(s1@bill)1> "},
               {text,
                [23,116,117,116,50,49,58,115,116,97,114,116,40,115,50,64,103,
                 111,108,108,117,109,41,46]},
               {text,[1,10]},
               {text,
                [152,60,51,56,50,48,46,51,57,46,48,62,10,80,111,110,103,32,
                 114,101,99,101,105,118,101,100,32,112,105,110,103,10,80,105,
                 110,103,32,114,101,99,101,105,118,101,100,32,112,111,110,103,
                 10,80,111,110,103,32,114,101,99,101,105,118,101,100,32,112,
                 105,110,103,10,80,105,110,103,32,114,101,99,101,105,118,101,
                 100,32,112,111,110,103,10,80,111,110,103,32,114,101,99,101,
                 105,118,101,100,32,112,105,110,103,10,80,105,110,103,32,114,
                 101,99,101,105,118,101,100,32,112,111,110,103,10,112,111,110,
                 103,32,101,120,105,116,105,110,103,44,32,103,111,116,32,123,
                 39,69,88,73,84,39,44]},
               {text,
                [17,60,51,56,50,48,46,51,57,46,48,62,44,112,105,110,103,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"-#### The Larger Example with Robustness Added"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "NLet us return to the messenger program and add changes to make it more robust:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [5734,10,37,37,37,32,77,101,115,115,97,103,101,32,112,97,115,
                 115,105,110,103,32,117,116,105,108,105,116,121,46,32,32,10,
                 37,37,37,32,85,115,101,114,32,105,110,116,101,114,102,97,99,
                 101,58,10,37,37,37,32,108,111,103,105,110,40,78,97,109,101,
                 41,10,37,37,37,32,32,32,32,32,79,110,101,32,117,115,101,114,
                 32,97,116,32,97,32,116,105,109,101,32,99,97,110,32,108,111,
                 103,32,105,110,32,102,114,111,109,32,101,97,99,104,32,69,114,
                 108,97,110,103,32,110,111,100,101,32,105,110,32,116,104,101,
                 10,37,37,37,32,32,32,32,32,115,121,115,116,101,109,32,109,
                 101,115,115,101,110,103,101,114,58,32,97,110,100,32,99,104,
                 111,111,115,101,32,97,32,115,117,105,116,97,98,108,101,32,78,
                 97,109,101,46,32,73,102,32,116,104,101,32,78,97,109,101,10,
                 37,37,37,32,32,32,32,32,105,115,32,97,108,114,101,97,100,121,
                 32,108,111,103,103,101,100,32,105,110,32,97,116,32,97,110,
                 111,116,104,101,114,32,110,111,100,101,32,111,114,32,105,102,
                 32,115,111,109,101,111,110,101,32,101,108,115,101,32,105,115,
                 10,37,37,37,32,32,32,32,32,97,108,114,101,97,100,121,32,108,
                 111,103,103,101,100,32,105,110,32,97,116,32,116,104,101,32,
                 115,97,109,101,32,110,111,100,101,44,32,108,111,103,105,110,
                 32,119,105,108,108,32,98,101,32,114,101,106,101,99,116,101,
                 100,10,37,37,37,32,32,32,32,32,119,105,116,104,32,97,32,115,
                 117,105,116,97,98,108,101,32,101,114,114,111,114,32,109,101,
                 115,115,97,103,101,46,10,37,37,37,32,108,111,103,111,102,102,
                 40,41,10,37,37,37,32,32,32,32,32,76,111,103,115,32,111,102,
                 102,32,97,110,121,98,111,100,121,32,97,116,32,116,104,97,116,
                 32,110,111,100,101,10,37,37,37,32,109,101,115,115,97,103,101,
                 40,84,111,78,97,109,101,44,32,77,101,115,115,97,103,101,41,
                 10,37,37,37,32,32,32,32,32,115,101,110,100,115,32,77,101,115,
                 115,97,103,101,32,116,111,32,84,111,78,97,109,101,46,32,69,
                 114,114,111,114,32,109,101,115,115,97,103,101,115,32,105,102,
                 32,116,104,101,32,117,115,101,114,32,111,102,32,116,104,105,
                 115,32,10,37,37,37,32,32,32,32,32,102,117,110,99,116,105,111,
                 110,32,105,115,32,110,111,116,32,108,111,103,103,101,100,32,
                 111,110,32,111,114,32,105,102,32,84,111,78,97,109,101,32,105,
                 115,32,110,111,116,32,108,111,103,103,101,100,32,111,110,32,
                 97,116,10,37,37,37,32,32,32,32,32,97,110,121,32,110,111,100,
                 101,46,10,37,37,37,10,37,37,37,32,79,110,101,32,110,111,100,
                 101,32,105,110,32,116,104,101,32,110,101,116,119,111,114,107,
                 32,111,102,32,69,114,108,97,110,103,32,110,111,100,101,115,
                 32,114,117,110,115,32,97,32,115,101,114,118,101,114,32,119,
                 104,105,99,104,32,109,97,105,110,116,97,105,110,115,10,37,37,
                 37,32,100,97,116,97,32,97,98,111,117,116,32,116,104,101,32,
                 108,111,103,103,101,100,32,111,110,32,117,115,101,114,115,46,
                 32,84,104,101,32,115,101,114,118,101,114,32,105,115,32,114,
                 101,103,105,115,116,101,114,101,100,32,97,115,32,34,109,101,
                 115,115,101,110,103,101,114,34,10,37,37,37,32,69,97,99,104,
                 32,110,111,100,101,32,119,104,101,114,101,32,116,104,101,114,
                 101,32,105,115,32,97,32,117,115,101,114,32,108,111,103,103,
                 101,100,32,111,110,32,114,117,110,115,32,97,32,99,108,105,
                 101,110,116,32,112,114,111,99,101,115,115,32,114,101,103,105,
                 115,116,101,114,101,100,10,37,37,37,32,97,115,32,34,109,101,
                 115,115,95,99,108,105,101,110,116,34,32,10,37,37,37,10,37,37,
                 37,32,80,114,111,116,111,99,111,108,32,98,101,116,119,101,
                 101,110,32,116,104,101,32,99,108,105,101,110,116,32,112,114,
                 111,99,101,115,115,101,115,32,97,110,100,32,116,104,101,32,
                 115,101,114,118,101,114,10,37,37,37,32,45,45,45,45,45,45,45,
                 45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
                 45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
                 45,45,45,45,45,10,37,37,37,32,10,37,37,37,32,84,111,32,115,
                 101,114,118,101,114,58,32,123,67,108,105,101,110,116,80,105,
                 100,44,32,108,111,103,111,110,44,32,85,115,101,114,78,97,109,
                 101,125,10,37,37,37,32,82,101,112,108,121,32,123,109,101,115,
                 115,101,110,103,101,114,44,32,115,116,111,112,44,32,117,115,
                 101,114,95,101,120,105,115,116,115,95,97,116,95,111,116,104,
                 101,114,95,110,111,100,101,125,32,115,116,111,112,115,32,116,
                 104,101,32,99,108,105,101,110,116,10,37,37,37,32,82,101,112,
                 108,121,32,123,109,101,115,115,101,110,103,101,114,44,32,108,
                 111,103,103,101,100,95,111,110,125,32,108,111,103,111,110,32,
                 119,97,115,32,115,117,99,99,101,115,115,102,117,108,10,37,37,
                 37,10,37,37,37,32,87,104,101,110,32,116,104,101,32,99,108,
                 105,101,110,116,32,116,101,114,109,105,110,97,116,101,115,32,
                 102,111,114,32,115,111,109,101,32,114,101,97,115,111,110,10,
                 37,37,37,32,84,111,32,115,101,114,118,101,114,58,32,123,39,
                 69,88,73,84,39,44,32,67,108,105,101,110,116,80,105,100,44,32,
                 82,101,97,115,111,110,125,10,37,37,37,10,37,37,37,32,84,111,
                 32,115,101,114,118,101,114,58,32,123,67,108,105,101,110,116,
                 80,105,100,44,32,109,101,115,115,97,103,101,95,116,111,44,32,
                 84,111,78,97,109,101,44,32,77,101,115,115,97,103,101,125,32,
                 115,101,110,100,32,97,32,109,101,115,115,97,103,101,10,37,37,
                 37,32,82,101,112,108,121,58,32,123,109,101,115,115,101,110,
                 103,101,114,44,32,115,116,111,112,44,32,121,111,117,95,97,
                 114,101,95,110,111,116,95,108,111,103,103,101,100,95,111,110,
                 125,32,115,116,111,112,115,32,116,104,101,32,99,108,105,101,
                 110,116,10,37,37,37,32,82,101,112,108,121,58,32,123,109,101,
                 115,115,101,110,103,101,114,44,32,114,101,99,101,105,118,101,
                 114,95,110,111,116,95,102,111,117,110,100,125,32,110,111,32,
                 117,115,101,114,32,119,105,116,104,32,116,104,105,115,32,110,
                 97,109,101,32,108,111,103,103,101,100,32,111,110,10,37,37,37,
                 32,82,101,112,108,121,58,32,123,109,101,115,115,101,110,103,
                 101,114,44,32,115,101,110,116,125,32,77,101,115,115,97,103,
                 101,32,104,97,115,32,98,101,101,110,32,115,101,110,116,32,40,
                 98,117,116,32,110,111,32,103,117,97,114,97,110,116,101,101,
                 41,10,37,37,37,10,37,37,37,32,84,111,32,99,108,105,101,110,
                 116,58,32,123,109,101,115,115,97,103,101,95,102,114,111,109,
                 44,32,78,97,109,101,44,32,77,101,115,115,97,103,101,125,44,
                 10,37,37,37,10,37,37,37,32,80,114,111,116,111,99,111,108,32,
                 98,101,116,119,101,101,110,32,116,104,101,32,34,99,111,109,
                 109,97,110,100,115,34,32,97,110,100,32,116,104,101,32,99,108,
                 105,101,110,116,10,37,37,37,32,45,45,45,45,45,45,45,45,45,45,
                 45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,
                 45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,32,10,37,37,
                 37,10,37,37,37,32,83,116,97,114,116,101,100,58,32,109,101,
                 115,115,101,110,103,101,114,58,99,108,105,101,110,116,40,83,
                 101,114,118,101,114,95,78,111,100,101,44,32,78,97,109,101,41,
                 10,37,37,37,32,84,111,32,99,108,105,101,110,116,58,32,108,
                 111,103,111,102,102,10,37,37,37,32,84,111,32,99,108,105,101,
                 110,116,58,32,123,109,101,115,115,97,103,101,95,116,111,44,
                 32,84,111,78,97,109,101,44,32,77,101,115,115,97,103,101,125,
                 10,37,37,37,10,37,37,37,32,67,111,110,102,105,103,117,114,97,
                 116,105,111,110,58,32,99,104,97,110,103,101,32,116,104,101,
                 32,115,101,114,118,101,114,95,110,111,100,101,40,41,32,102,
                 117,110,99,116,105,111,110,32,116,111,32,114,101,116,117,114,
                 110,32,116,104,101,10,37,37,37,32,110,97,109,101,32,111,102,
                 32,116,104,101,32,110,111,100,101,32,119,104,101,114,101,32,
                 116,104,101,32,109,101,115,115,101,110,103,101,114,32,115,
                 101,114,118,101,114,32,114,117,110,115,10,10,45,109,111,100,
                 117,108,101,40,109,101,115,115,101,110,103,101,114,41,46,10,
                 45,101,120,112,111,114,116,40,91,115,116,97,114,116,95,115,
                 101,114,118,101,114,47,48,44,32,115,101,114,118,101,114,47,
                 48,44,32,10,32,32,32,32,32,32,32,32,32,108,111,103,111,110,
                 47,49,44,32,108,111,103,111,102,102,47,48,44,32,109,101,115,
                 115,97,103,101,47,50,44,32,99,108,105,101,110,116,47,50,93,
                 41,46,10,10,37,37,37,32,67,104,97,110,103,101,32,116,104,101,
                 32,102,117,110,99,116,105,111,110,32,98,101,108,111,119,32,
                 116,111,32,114,101,116,117,114,110,32,116,104,101,32,110,97,
                 109,101,32,111,102,32,116,104,101,32,110,111,100,101,32,119,
                 104,101,114,101,32,116,104,101,10,37,37,37,32,109,101,115,
                 115,101,110,103,101,114,32,115,101,114,118,101,114,32,114,
                 117,110,115,10,115,101,114,118,101,114,95,110,111,100,101,40,
                 41,32,45,62,10,32,32,32,32,109,101,115,115,101,110,103,101,
                 114,64,115,117,112,101,114,46,10,10,37,37,37,32,84,104,105,
                 115,32,105,115,32,116,104,101,32,115,101,114,118,101,114,32,
                 112,114,111,99,101,115,115,32,102,111,114,32,116,104,101,32,
                 34,109,101,115,115,101,110,103,101,114,34,10,37,37,37,32,116,
                 104,101,32,117,115,101,114,32,108,105,115,116,32,104,97,115,
                 32,116,104,101,32,102,111,114,109,97,116,32,91,123,67,108,
                 105,101,110,116,80,105,100,49,44,32,78,97,109,101,49,125,44,
                 123,67,108,105,101,110,116,80,105,100,50,50,44,32,78,97,109,
                 101,50,125,44,46,46,46,93,10,115,101,114,118,101,114,40,41,
                 32,45,62,10,32,32,32,32,112,114,111,99,101,115,115,95,102,
                 108,97,103,40,116,114,97,112,95,101,120,105,116,44,32,116,
                 114,117,101,41,44,10,32,32,32,32,115,101,114,118,101,114,40,
                 91,93,41,46,10,10,115,101,114,118,101,114,40,85,115,101,114,
                 95,76,105,115,116,41,32,45,62,10,32,32,32,32,114,101,99,101,
                 105,118,101,10,32,32,32,32,32,32,32,32,123,70,114,111,109,44,
                 32,108,111,103,111,110,44,32,78,97,109,101,125,32,45,62,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,78,101,119,95,85,115,101,
                 114,95,76,105,115,116,32,61,32,115,101,114,118,101,114,95,
                 108,111,103,111,110,40,70,114,111,109,44,32,78,97,109,101,44,
                 32,85,115,101,114,95,76,105,115,116,41,44,10,32,32,32,32,32,
                 32,32,32,32,32,32,32,115,101,114,118,101,114,40,78,101,119,
                 95,85,115,101,114,95,76,105,115,116,41,59,10,32,32,32,32,32,
                 32,32,32,123,39,69,88,73,84,39,44,32,70,114,111,109,44,32,95,
                 125,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,78,101,
                 119,95,85,115,101,114,95,76,105,115,116,32,61,32,115,101,114,
                 118,101,114,95,108,111,103,111,102,102,40,70,114,111,109,44,
                 32,85,115,101,114,95,76,105,115,116,41,44,10,32,32,32,32,32,
                 32,32,32,32,32,32,32,115,101,114,118,101,114,40,78,101,119,
                 95,85,115,101,114,95,76,105,115,116,41,59,10,32,32,32,32,32,
                 32,32,32,123,70,114,111,109,44,32,109,101,115,115,97,103,101,
                 95,116,111,44,32,84,111,44,32,77,101,115,115,97,103,101,125,
                 32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,115,101,114,
                 118,101,114,95,116,114,97,110,115,102,101,114,40,70,114,111,
                 109,44,32,84,111,44,32,77,101,115,115,97,103,101,44,32,85,
                 115,101,114,95,76,105,115,116,41,44,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,108,
                 105,115,116,32,105,115,32,110,111,119,58,32,126,112,126,110,
                 34,44,32,91,85,115,101,114,95,76,105,115,116,93,41,44,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,115,101,114,118,101,114,40,
                 85,115,101,114,95,76,105,115,116,41,10,32,32,32,32,101,110,
                 100,46,10,10,37,37,37,32,83,116,97,114,116,32,116,104,101,32,
                 115,101,114,118,101,114,10,115,116,97,114,116,95,115,101,114,
                 118,101,114,40,41,32,45,62,10,32,32,32,32,114,101,103,105,
                 115,116,101,114,40,109,101,115,115,101,110,103,101,114,44,32,
                 115,112,97,119,110,40,109,101,115,115,101,110,103,101,114,44,
                 32,115,101,114,118,101,114,44,32,91,93,41,41,46,10,10,37,37,
                 37,32,83,101,114,118,101,114,32,97,100,100,115,32,97,32,110,
                 101,119,32,117,115,101,114,32,116,111,32,116,104,101,32,117,
                 115,101,114,32,108,105,115,116,10,115,101,114,118,101,114,95,
                 108,111,103,111,110,40,70,114,111,109,44,32,78,97,109,101,44,
                 32,85,115,101,114,95,76,105,115,116,41,32,45,62,10,32,32,32,
                 32,37,37,32,99,104,101,99,107,32,105,102,32,108,111,103,103,
                 101,100,32,111,110,32,97,110,121,119,104,101,114,101,32,101,
                 108,115,101,10,32,32,32,32,99,97,115,101,32,108,105,115,116,
                 115,58,107,101,121,109,101,109,98,101,114,40,78,97,109,101,
                 44,32,50,44,32,85,115,101,114,95,76,105,115,116,41,32,111,
                 102,10,32,32,32,32,32,32,32,32,116,114,117,101,32,45,62,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,70,114,111,109,32,33,32,
                 123,109,101,115,115,101,110,103,101,114,44,32,115,116,111,
                 112,44,32,117,115,101,114,95,101,120,105,115,116,115,95,97,
                 116,95,111,116,104,101,114,95,110,111,100,101,125,44,32,32,
                 37,114,101,106,101,99,116,32,108,111,103,111,110,10,32,32,32,
                 32,32,32,32,32,32,32,32,32,85,115,101,114,95,76,105,115,116,
                 59,10,32,32,32,32,32,32,32,32,102,97,108,115,101,32,45,62,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,70,114,111,109,32,33,32,
                 123,109,101,115,115,101,110,103,101,114,44,32,108,111,103,
                 103,101,100,95,111,110,125,44,10,32,32,32,32,32,32,32,32,32,
                 32,32,32,108,105,110,107,40,70,114,111,109,41,44,10,32,32,32,
                 32,32,32,32,32,32,32,32,32,91,123,70,114,111,109,44,32,78,97,
                 109,101,125,32,124,32,85,115,101,114,95,76,105,115,116,93,32,
                 32,32,32,32,32,32,32,37,97,100,100,32,117,115,101,114,32,116,
                 111,32,116,104,101,32,108,105,115,116,10,32,32,32,32,101,110,
                 100,46,10,10,37,37,37,32,83,101,114,118,101,114,32,100,101,
                 108,101,116,101,115,32,97,32,117,115,101,114,32,102,114,111,
                 109,32,116,104,101,32,117,115,101,114,32,108,105,115,116,10,
                 115,101,114,118,101,114,95,108,111,103,111,102,102,40,70,114,
                 111,109,44,32,85,115,101,114,95,76,105,115,116,41,32,45,62,
                 10,32,32,32,32,108,105,115,116,115,58,107,101,121,100,101,
                 108,101,116,101,40,70,114,111,109,44,32,49,44,32,85,115,101,
                 114,95,76,105,115,116,41,46,10,10,10,37,37,37,32,83,101,114,
                 118,101,114,32,116,114,97,110,115,102,101,114,115,32,97,32,
                 109,101,115,115,97,103,101,32,98,101,116,119,101,101,110,32,
                 117,115,101,114,10,115,101,114,118,101,114,95,116,114,97,110,
                 115,102,101,114,40,70,114,111,109,44,32,84,111,44,32,77,101,
                 115,115,97,103,101,44,32,85,115,101,114,95,76,105,115,116,41,
                 32,45,62,10,32,32,32,32,37,37,32,99,104,101,99,107,32,116,
                 104,97,116,32,116,104,101,32,117,115,101,114,32,105,115,32,
                 108,111,103,103,101,100,32,111,110,32,97,110,100,32,119,104,
                 111,32,104,101,32,105,115,10,32,32,32,32,99,97,115,101,32,
                 108,105,115,116,115,58,107,101,121,115,101,97,114,99,104,40,
                 70,114,111,109,44,32,49,44,32,85,115,101,114,95,76,105,115,
                 116,41,32,111,102,10,32,32,32,32,32,32,32,32,102,97,108,115,
                 101,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,70,114,
                 111,109,32,33,32,123,109,101,115,115,101,110,103,101,114,44,
                 32,115,116,111,112,44,32,121,111,117,95,97,114,101,95,110,
                 111,116,95,108,111,103,103,101,100,95,111,110,125,59,10,32,
                 32,32,32,32,32,32,32,123,118,97,108,117,101,44,32,123,95,44,
                 32,78,97,109,101,125,125,32,45,62,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,115,101,114,118,101,114,95,116,114,97,110,115,
                 102,101,114,40,70,114,111,109,44,32,78,97,109,101,44,32,84,
                 111,44,32,77,101,115,115,97,103,101,44,32,85,115,101,114,95,
                 76,105,115,116,41,10,32,32,32,32,101,110,100,46,10,10,37,37,
                 37,32,73,102,32,116,104,101,32,117,115,101,114,32,101,120,
                 105,115,116,115,44,32,115,101,110,100,32,116,104,101,32,109,
                 101,115,115,97,103,101,10,115,101,114,118,101,114,95,116,114,
                 97,110,115,102,101,114,40,70,114,111,109,44,32,78,97,109,101,
                 44,32,84,111,44,32,77,101,115,115,97,103,101,44,32,85,115,
                 101,114,95,76,105,115,116,41,32,45,62,10,32,32,32,32,37,37,
                 32,70,105,110,100,32,116,104,101,32,114,101,99,101,105,118,
                 101,114,32,97,110,100,32,115,101,110,100,32,116,104,101,32,
                 109,101,115,115,97,103,101,10,32,32,32,32,99,97,115,101,32,
                 108,105,115,116,115,58,107,101,121,115,101,97,114,99,104,40,
                 84,111,44,32,50,44,32,85,115,101,114,95,76,105,115,116,41,32,
                 111,102,10,32,32,32,32,32,32,32,32,102,97,108,115,101,32,45,
                 62,10,32,32,32,32,32,32,32,32,32,32,32,32,70,114,111,109,32,
                 33,32,123,109,101,115,115,101,110,103,101,114,44,32,114,101,
                 99,101,105,118,101,114,95,110,111,116,95,102,111,117,110,100,
                 125,59,10,32,32,32,32,32,32,32,32,123,118,97,108,117,101,44,
                 32,123,84,111,80,105,100,44,32,84,111,125,125,32,45,62,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,84,111,80,105,100,32,33,32,
                 123,109,101,115,115,97,103,101,95,102,114,111,109,44,32,78,
                 97,109,101,44,32,77,101,115,115,97,103,101,125,44,32,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,70,114,111,109,32,33,32,123,
                 109,101,115,115,101,110,103,101,114,44,32,115,101,110,116,
                 125,32,10,32,32,32,32,101,110,100,46,10,10,37,37,37,32,85,
                 115,101,114,32,67,111,109,109,97,110,100,115,10,108,111,103,
                 111,110,40,78,97,109,101,41,32,45,62,10,32,32,32,32,99,97,
                 115,101,32,119,104,101,114,101,105,115,40,109,101,115,115,95,
                 99,108,105,101,110,116,41,32,111,102,32,10,32,32,32,32,32,32,
                 32,32,117,110,100,101,102,105,110,101,100,32,45,62,10,32,32,
                 32,32,32,32,32,32,32,32,32,32,114,101,103,105,115,116,101,
                 114,40,109,101,115,115,95,99,108,105,101,110,116,44,32,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 115,112,97,119,110,40,109,101,115,115,101,110,103,101,114,44,
                 32,99,108,105,101,110,116,44,32,91,115,101,114,118,101,114,
                 95,110,111,100,101,40,41,44,32,78,97,109,101,93,41,41,59,10,
                 32,32,32,32,32,32,32,32,95,32,45,62,32,97,108,114,101,97,100,
                 121,95,108,111,103,103,101,100,95,111,110,10,32,32,32,32,101,
                 110,100,46,10,10,108,111,103,111,102,102,40,41,32,45,62,10,
                 32,32,32,32,109,101,115,115,95,99,108,105,101,110,116,32,33,
                 32,108,111,103,111,102,102,46,10,10,109,101,115,115,97,103,
                 101,40,84,111,78,97,109,101,44,32,77,101,115,115,97,103,101,
                 41,32,45,62,10,32,32,32,32,99,97,115,101,32,119,104,101,114,
                 101,105,115,40,109,101,115,115,95,99,108,105,101,110,116,41,
                 32,111,102,32,37,32,84,101,115,116,32,105,102,32,116,104,101,
                 32,99,108,105,101,110,116,32,105,115,32,114,117,110,110,105,
                 110,103,10,32,32,32,32,32,32,32,32,117,110,100,101,102,105,
                 110,101,100,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 110,111,116,95,108,111,103,103,101,100,95,111,110,59,10,32,
                 32,32,32,32,32,32,32,95,32,45,62,32,109,101,115,115,95,99,
                 108,105,101,110,116,32,33,32,123,109,101,115,115,97,103,101,
                 95,116,111,44,32,84,111,78,97,109,101,44,32,77,101,115,115,
                 97,103,101,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 111,107,10,101,110,100,46,10,10,37,37,37,32,84,104,101,32,99,
                 108,105,101,110,116,32,112,114,111,99,101,115,115,32,119,104,
                 105,99,104,32,114,117,110,115,32,111,110,32,101,97,99,104,32,
                 117,115,101,114,32,110,111,100,101,10,99,108,105,101,110,116,
                 40,83,101,114,118,101,114,95,78,111,100,101,44,32,78,97,109,
                 101,41,32,45,62,10,32,32,32,32,123,109,101,115,115,101,110,
                 103,101,114,44,32,83,101,114,118,101,114,95,78,111,100,101,
                 125,32,33,32,123,115,101,108,102,40,41,44,32,108,111,103,111,
                 110,44,32,78,97,109,101,125,44,10,32,32,32,32,97,119,97,105,
                 116,95,114,101,115,117,108,116,40,41,44,10,32,32,32,32,99,
                 108,105,101,110,116,40,83,101,114,118,101,114,95,78,111,100,
                 101,41,46,10,10,99,108,105,101,110,116,40,83,101,114,118,101,
                 114,95,78,111,100,101,41,32,45,62,10,32,32,32,32,114,101,99,
                 101,105,118,101,10,32,32,32,32,32,32,32,32,108,111,103,111,
                 102,102,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,101,
                 120,105,116,40,110,111,114,109,97,108,41,59,10,32,32,32,32,
                 32,32,32,32,123,109,101,115,115,97,103,101,95,116,111,44,32,
                 84,111,78,97,109,101,44,32,77,101,115,115,97,103,101,125,32,
                 45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,123,109,101,115,
                 115,101,110,103,101,114,44,32,83,101,114,118,101,114,95,78,
                 111,100,101,125,32,33,32,123,115,101,108,102,40,41,44,32,109,
                 101,115,115,97,103,101,95,116,111,44,32,84,111,78,97,109,101,
                 44,32,77,101,115,115,97,103,101,125,44,10,32,32,32,32,32,32,
                 32,32,32,32,32,32,97,119,97,105,116,95,114,101,115,117,108,
                 116,40,41,59,10,32,32,32,32,32,32,32,32,123,109,101,115,115,
                 97,103,101,95,102,114,111,109,44,32,70,114,111,109,78,97,109,
                 101,44,32,77,101,115,115,97,103,101,125,32,45,62,10,32,32,32,
                 32,32,32,32,32,32,32,32,32,105,111,58,102,111,114,109,97,116,
                 40,34,77,101,115,115,97,103,101,32,102,114,111,109,32,126,
                 112,58,32,126,112,126,110,34,44,32,91,70,114,111,109,78,97,
                 109,101,44,32,77,101,115,115,97,103,101,93,41,10,32,32,32,32,
                 101,110,100,44,10,32,32,32,32,99,108,105,101,110,116,40,83,
                 101,114,118,101,114,95,78,111,100,101,41,46,10,10,37,37,37,
                 32,119,97,105,116,32,102,111,114,32,97,32,114,101,115,112,
                 111,110,115,101,32,102,114,111,109,32,116,104,101,32,115,101,
                 114,118,101,114,10,97,119,97,105,116,95,114,101,115,117,108,
                 116,40,41,32,45,62,10,32,32,32,32,114,101,99,101,105,118,101,
                 10,32,32,32,32,32,32,32,32,123,109,101,115,115,101,110,103,
                 101,114,44,32,115,116,111,112,44,32,87,104,121,125,32,45,62,
                 32,37,32,83,116,111,112,32,116,104,101,32,99,108,105,101,110,
                 116,32,10,32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,
                 111,114,109,97,116,40,34,126,112,126,110,34,44,32,91,87,104,
                 121,93,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,101,120,
                 105,116,40,110,111,114,109,97,108,41,59,10,32,32,32,32,32,32,
                 32,32,123,109,101,115,115,101,110,103,101,114,44,32,87,104,
                 97,116,125,32,45,62,32,32,37,32,78,111,114,109,97,108,32,114,
                 101,115,112,111,110,115,101,10,32,32,32,32,32,32,32,32,32,32,
                 32,32,105,111,58,102,111,114,109,97,116,40,34,126,112,126,
                 110,34,44,32,91,87,104,97,116,93,41,10,32,32,32,32,97,102,
                 116,101,114,32,53,48,48,48,32,45,62,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,78,
                 111,32,114,101,115,112,111,110,115,101,32,102,114,111,109,32,
                 115,101,114,118,101,114,126,110,34,44,32,91,93,41,44,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,101,120,105,116,40,116,105,
                 109,101,111,117,116,41,10,32,32,32,32,101,110,100,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text," The following changes are added:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "@The messenger server traps exits. If it receives an exit signal,"}],
                0,false},
               {text,
                [22,42,123,39,69,88,73,84,39,44,70,114,111,109,44,82,101,97,
                 115,111,110,125,42]},
               {sep,
                [{text,
                  "e, this means that a client process has terminated or is unreachable for one of the following reasons:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {text,
              ":The user has logged off (the \"logoff\" message is removed)."}],
            0,false},
           {sep,
            [{text,[1,42]},
             {text,"/The network connection to the client is broken."}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {text,
             ";The node on which the client process resides has gone down."}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {text,"5The client processes has done some illegal operation."}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"1If an exit signal is received as above, the tuple"}],
                0,false},
               {text,"\r*{From,Name}*"},
               {sep,[{text,"\eis deleted from the servers"}],0,false},
               {text,"\v*User_List*"},
               {sep,[{text,"\tusing the"}],0,false},
               {text,
                [15,42,115,101,114,118,101,114,95,108,111,103,111,102,102,42]},
               {sep,
                [{text,
                  [152,102,117,110,99,116,105,111,110,46,32,73,102,32,116,104,
                   101,32,110,111,100,101,32,111,110,32,119,104,105,99,104,32,
                   116,104,101,32,115,101,114,118,101,114,32,114,117,110,115,
                   32,103,111,101,115,32,100,111,119,110,44,32,97,110,32,101,
                   120,105,116,32,115,105,103,110,97,108,32,40,97,117,116,111,
                   109,97,116,105,99,97,108,108,121,32,103,101,110,101,114,97,
                   116,101,100,32,98,121,32,116,104,101,32,115,121,115,116,
                   101,109,41,32,105,115,32,115,101,110,116,32,116,111,32,97,
                   108,108,32,111,102,32,116,104,101,32,99,108,105,101,110,
                   116,32,112,114,111,99,101,115,115,101,115,58]}],
                0,false},
               {text,"$*{'EXIT',MessengerPID,noconnection}*"},
               {sep,
                [{text,".causing all the client processes to terminate."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  ";Also, a time-out of five seconds has been introduced in the"}],
                0,false},
               {text,[14,42,97,119,97,105,116,95,114,101,115,117,108,116,42]},
               {sep,
                [{text,
                  "¼function. That is, if the server does not reply within five seconds (5000 ms), the client terminates. This is only needed in the logon sequence before the client and the server are linked."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "¥An interesting case is if the client terminates before the server links to it. This is taken care of because linking to a non-existent process causes an exit signal,"}],
                0,false},
               {text,
                [22,42,123,39,69,88,73,84,39,44,70,114,111,109,44,110,111,112,
                 114,111,99,125,42]},
               {sep,
                [{text,
                  "k, to be automatically generated. This is as if the process terminated immediately after the link operation."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "uLarger programs are usually written as a collection of files with a well-defined interface between the various parts."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,"2#### The Larger Example Divided into Several Files"},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "mTo illustrate this, the messenger example from the previous section is divided into the following five files:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {above,
            {sep,
             [{text,[1,42]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [17,42,109,101,115,115,95,99,111,110,102,105,103,46,
                         104,114,108,42]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,"\"Header file for configuration data"}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [20,42,109,101,115,115,95,105,110,116,101,114,102,97,
                         99,101,46,104,114,108,42]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        ":Interface definitions between the client and the messenger"}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text,
                       [20,42,117,115,101,114,95,105,110,116,101,114,102,97,
                        99,101,46,101,114,108,42]}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text," Functions for the user interface"}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      [17,42,109,101,115,115,95,99,108,105,101,110,116,46,101,
                       114,108,42]}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,".Functions for the client side of the messenger"}],
                    0,false}],
                  0,true},
                 null},
                null}}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [17,42,109,101,115,115,95,115,101,114,118,101,114,46,101,
                      114,108,42]}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,".Functions for the server side of the messenger"}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [128,87,104,105,108,101,32,100,111,105,110,103,32,116,104,
                   105,115,44,32,116,104,101,32,109,101,115,115,97,103,101,32,
                   112,97,115,115,105,110,103,32,105,110,116,101,114,102,97,
                   99,101,32,98,101,116,119,101,101,110,32,116,104,101,32,115,
                   104,101,108,108,44,32,116,104,101,32,99,108,105,101,110,
                   116,44,32,97,110,100,32,116,104,101,32,115,101,114,118,101,
                   114,32,105,115,32,99,108,101,97,110,101,100,32,117,112,32,
                   97,110,100,32,105,115,32,100,101,102,105,110,101,100,32,
                   117,115,105,110,103]}],
                0,false},
               {text,"\v**records**"},
               {sep,[{text,[7,46,32,65,108,115,111,44]}],0,false},
               {text,"\n**macros**"},
               {sep,
                [{text,
                  [15,97,114,101,32,105,110,116,114,111,100,117,99,101,100,
                   58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [140,10,37,37,37,45,45,45,45,70,73,76,69,32,109,101,115,115,
                 95,99,111,110,102,105,103,46,104,114,108,45,45,45,45,10,10,
                 37,37,37,32,67,111,110,102,105,103,117,114,101,32,116,104,
                 101,32,108,111,99,97,116,105,111,110,32,111,102,32,116,104,
                 101,32,115,101,114,118,101,114,32,110,111,100,101,44,10,45,
                 100,101,102,105,110,101,40,115,101,114,118,101,114,95,110,
                 111,100,101,44,32,109,101,115,115,101,110,103,101,114,64,115,
                 117,112,101,114,41,46,10,10,37,37,37,45,45,45,45,69,78,68,32,
                 70,73,76,69,45,45,45,45]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [1003,10,37,37,37,45,45,45,45,70,73,76,69,32,109,101,115,115,
                 95,105,110,116,101,114,102,97,99,101,46,104,114,108,45,45,45,
                 45,10,10,37,37,37,32,77,101,115,115,97,103,101,32,105,110,
                 116,101,114,102,97,99,101,32,98,101,116,119,101,101,110,32,
                 99,108,105,101,110,116,32,97,110,100,32,115,101,114,118,101,
                 114,32,97,110,100,32,99,108,105,101,110,116,32,115,104,101,
                 108,108,32,102,111,114,10,37,37,37,32,109,101,115,115,101,
                 110,103,101,114,32,112,114,111,103,114,97,109,32,10,10,37,37,
                 37,77,101,115,115,97,103,101,115,32,102,114,111,109,32,67,
                 108,105,101,110,116,32,116,111,32,115,101,114,118,101,114,32,
                 114,101,99,101,105,118,101,100,32,105,110,32,115,101,114,118,
                 101,114,47,49,32,102,117,110,99,116,105,111,110,46,10,45,114,
                 101,99,111,114,100,40,108,111,103,111,110,44,123,99,108,105,
                 101,110,116,95,112,105,100,44,32,117,115,101,114,110,97,109,
                 101,125,41,46,10,45,114,101,99,111,114,100,40,109,101,115,
                 115,97,103,101,44,123,99,108,105,101,110,116,95,112,105,100,
                 44,32,116,111,95,110,97,109,101,44,32,109,101,115,115,97,103,
                 101,125,41,46,10,37,37,37,32,123,39,69,88,73,84,39,44,32,67,
                 108,105,101,110,116,80,105,100,44,32,82,101,97,115,111,110,
                 125,32,32,40,99,108,105,101,110,116,32,116,101,114,109,105,
                 110,97,116,101,100,32,111,114,32,117,110,114,101,97,99,104,
                 97,98,108,101,46,10,10,37,37,37,32,77,101,115,115,97,103,101,
                 115,32,102,114,111,109,32,83,101,114,118,101,114,32,116,111,
                 32,67,108,105,101,110,116,44,32,114,101,99,101,105,118,101,
                 100,32,105,110,32,97,119,97,105,116,95,114,101,115,117,108,
                 116,47,48,32,102,117,110,99,116,105,111,110,32,10,45,114,101,
                 99,111,114,100,40,97,98,111,114,116,95,99,108,105,101,110,
                 116,44,123,109,101,115,115,97,103,101,125,41,46,10,37,37,37,
                 32,77,101,115,115,97,103,101,115,32,97,114,101,58,32,117,115,
                 101,114,95,101,120,105,115,116,115,95,97,116,95,111,116,104,
                 101,114,95,110,111,100,101,44,32,10,37,37,37,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,121,111,117,95,97,114,101,95,
                 110,111,116,95,108,111,103,103,101,100,95,111,110,10,45,114,
                 101,99,111,114,100,40,115,101,114,118,101,114,95,114,101,112,
                 108,121,44,123,109,101,115,115,97,103,101,125,41,46,10,37,37,
                 37,32,77,101,115,115,97,103,101,115,32,97,114,101,58,32,108,
                 111,103,103,101,100,95,111,110,10,37,37,37,32,32,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,114,101,99,101,105,118,101,114,95,
                 110,111,116,95,102,111,117,110,100,10,37,37,37,32,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,115,101,110,116,32,32,40,77,
                 101,115,115,97,103,101,32,104,97,115,32,98,101,101,110,32,
                 115,101,110,116,32,40,110,111,32,103,117,97,114,97,110,116,
                 101,101,41,10,37,37,37,32,77,101,115,115,97,103,101,115,32,
                 102,114,111,109,32,83,101,114,118,101,114,32,116,111,32,67,
                 108,105,101,110,116,32,114,101,99,101,105,118,101,100,32,105,
                 110,32,99,108,105,101,110,116,47,49,32,102,117,110,99,116,
                 105,111,110,10,45,114,101,99,111,114,100,40,109,101,115,115,
                 97,103,101,95,102,114,111,109,44,123,102,114,111,109,95,110,
                 97,109,101,44,32,109,101,115,115,97,103,101,125,41,46,10,10,
                 37,37,37,32,77,101,115,115,97,103,101,115,32,102,114,111,109,
                 32,115,104,101,108,108,32,116,111,32,67,108,105,101,110,116,
                 32,114,101,99,101,105,118,101,100,32,105,110,32,99,108,105,
                 101,110,116,47,49,32,102,117,110,99,116,105,111,110,10,37,37,
                 37,32,115,112,97,119,110,40,109,101,115,115,95,99,108,105,
                 101,110,116,44,32,99,108,105,101,110,116,44,32,91,115,101,
                 114,118,101,114,95,110,111,100,101,40,41,44,32,78,97,109,101,
                 93,41,10,45,114,101,99,111,114,100,40,109,101,115,115,97,103,
                 101,95,116,111,44,123,116,111,95,110,97,109,101,44,32,109,
                 101,115,115,97,103,101,125,41,46,10,37,37,37,32,108,111,103,
                 111,102,102,10,10,37,37,37,45,45,45,45,69,78,68,32,70,73,76,
                 69,45,45,45,45]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [1280,10,37,37,37,45,45,45,45,70,73,76,69,32,117,115,101,114,
                 95,105,110,116,101,114,102,97,99,101,46,101,114,108,45,45,45,
                 45,10,10,37,37,37,32,85,115,101,114,32,105,110,116,101,114,
                 102,97,99,101,32,116,111,32,116,104,101,32,109,101,115,115,
                 101,110,103,101,114,32,112,114,111,103,114,97,109,10,37,37,
                 37,32,108,111,103,105,110,40,78,97,109,101,41,10,37,37,37,32,
                 32,32,32,32,79,110,101,32,117,115,101,114,32,97,116,32,97,32,
                 116,105,109,101,32,99,97,110,32,108,111,103,32,105,110,32,
                 102,114,111,109,32,101,97,99,104,32,69,114,108,97,110,103,32,
                 110,111,100,101,32,105,110,32,116,104,101,10,37,37,37,32,32,
                 32,32,32,115,121,115,116,101,109,32,109,101,115,115,101,110,
                 103,101,114,58,32,97,110,100,32,99,104,111,111,115,101,32,97,
                 32,115,117,105,116,97,98,108,101,32,78,97,109,101,46,32,73,
                 102,32,116,104,101,32,78,97,109,101,10,37,37,37,32,32,32,32,
                 32,105,115,32,97,108,114,101,97,100,121,32,108,111,103,103,
                 101,100,32,105,110,32,97,116,32,97,110,111,116,104,101,114,
                 32,110,111,100,101,32,111,114,32,105,102,32,115,111,109,101,
                 111,110,101,32,101,108,115,101,32,105,115,10,37,37,37,32,32,
                 32,32,32,97,108,114,101,97,100,121,32,108,111,103,103,101,
                 100,32,105,110,32,97,116,32,116,104,101,32,115,97,109,101,32,
                 110,111,100,101,44,32,108,111,103,105,110,32,119,105,108,108,
                 32,98,101,32,114,101,106,101,99,116,101,100,10,37,37,37,32,
                 32,32,32,32,119,105,116,104,32,97,32,115,117,105,116,97,98,
                 108,101,32,101,114,114,111,114,32,109,101,115,115,97,103,101,
                 46,10,10,37,37,37,32,108,111,103,111,102,102,40,41,10,37,37,
                 37,32,32,32,32,32,76,111,103,115,32,111,102,102,32,97,110,
                 121,98,111,100,121,32,97,116,32,116,104,97,116,32,110,111,
                 100,101,10,10,37,37,37,32,109,101,115,115,97,103,101,40,84,
                 111,78,97,109,101,44,32,77,101,115,115,97,103,101,41,10,37,
                 37,37,32,32,32,32,32,115,101,110,100,115,32,77,101,115,115,
                 97,103,101,32,116,111,32,84,111,78,97,109,101,46,32,69,114,
                 114,111,114,32,109,101,115,115,97,103,101,115,32,105,102,32,
                 116,104,101,32,117,115,101,114,32,111,102,32,116,104,105,115,
                 32,10,37,37,37,32,32,32,32,32,102,117,110,99,116,105,111,110,
                 32,105,115,32,110,111,116,32,108,111,103,103,101,100,32,111,
                 110,32,111,114,32,105,102,32,84,111,78,97,109,101,32,105,115,
                 32,110,111,116,32,108,111,103,103,101,100,32,111,110,32,97,
                 116,10,37,37,37,32,32,32,32,32,97,110,121,32,110,111,100,101,
                 46,10,10,45,109,111,100,117,108,101,40,117,115,101,114,95,
                 105,110,116,101,114,102,97,99,101,41,46,10,45,101,120,112,
                 111,114,116,40,91,108,111,103,111,110,47,49,44,32,108,111,
                 103,111,102,102,47,48,44,32,109,101,115,115,97,103,101,47,50,
                 93,41,46,10,45,105,110,99,108,117,100,101,40,34,109,101,115,
                 115,95,105,110,116,101,114,102,97,99,101,46,104,114,108,34,
                 41,46,10,45,105,110,99,108,117,100,101,40,34,109,101,115,115,
                 95,99,111,110,102,105,103,46,104,114,108,34,41,46,10,10,108,
                 111,103,111,110,40,78,97,109,101,41,32,45,62,10,32,32,32,32,
                 99,97,115,101,32,119,104,101,114,101,105,115,40,109,101,115,
                 115,95,99,108,105,101,110,116,41,32,111,102,32,10,32,32,32,
                 32,32,32,32,32,117,110,100,101,102,105,110,101,100,32,45,62,
                 10,32,32,32,32,32,32,32,32,32,32,32,32,114,101,103,105,115,
                 116,101,114,40,109,101,115,115,95,99,108,105,101,110,116,44,
                 32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,32,32,115,112,97,119,110,40,109,101,115,115,95,99,108,105,
                 101,110,116,44,32,99,108,105,101,110,116,44,32,91,63,115,101,
                 114,118,101,114,95,110,111,100,101,44,32,78,97,109,101,93,41,
                 41,59,10,32,32,32,32,32,32,32,32,95,32,45,62,32,97,108,114,
                 101,97,100,121,95,108,111,103,103,101,100,95,111,110,10,32,
                 32,32,32,101,110,100,46,10,10,108,111,103,111,102,102,40,41,
                 32,45,62,10,32,32,32,32,109,101,115,115,95,99,108,105,101,
                 110,116,32,33,32,108,111,103,111,102,102,46,10,10,109,101,
                 115,115,97,103,101,40,84,111,78,97,109,101,44,32,77,101,115,
                 115,97,103,101,41,32,45,62,10,32,32,32,32,99,97,115,101,32,
                 119,104,101,114,101,105,115,40,109,101,115,115,95,99,108,105,
                 101,110,116,41,32,111,102,32,37,32,84,101,115,116,32,105,102,
                 32,116,104,101,32,99,108,105,101,110,116,32,105,115,32,114,
                 117,110,110,105,110,103,10,32,32,32,32,32,32,32,32,117,110,
                 100,101,102,105,110,101,100,32,45,62,10,32,32,32,32,32,32,32,
                 32,32,32,32,32,110,111,116,95,108,111,103,103,101,100,95,111,
                 110,59,10,32,32,32,32,32,32,32,32,95,32,45,62,32,109,101,115,
                 115,95,99,108,105,101,110,116,32,33,32,35,109,101,115,115,97,
                 103,101,95,116,111,123,116,111,95,110,97,109,101,61,84,111,
                 78,97,109,101,44,32,109,101,115,115,97,103,101,61,77,101,115,
                 115,97,103,101,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 32,111,107,10,101,110,100,46,10,10,37,37,37,45,45,45,45,69,
                 78,68,32,70,73,76,69,45,45,45,45]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [1117,10,37,37,37,45,45,45,45,70,73,76,69,32,109,101,115,115,
                 95,99,108,105,101,110,116,46,101,114,108,45,45,45,45,10,10,
                 37,37,37,32,84,104,101,32,99,108,105,101,110,116,32,112,114,
                 111,99,101,115,115,32,119,104,105,99,104,32,114,117,110,115,
                 32,111,110,32,101,97,99,104,32,117,115,101,114,32,110,111,
                 100,101,10,10,45,109,111,100,117,108,101,40,109,101,115,115,
                 95,99,108,105,101,110,116,41,46,10,45,101,120,112,111,114,
                 116,40,91,99,108,105,101,110,116,47,50,93,41,46,10,45,105,
                 110,99,108,117,100,101,40,34,109,101,115,115,95,105,110,116,
                 101,114,102,97,99,101,46,104,114,108,34,41,46,10,10,99,108,
                 105,101,110,116,40,83,101,114,118,101,114,95,78,111,100,101,
                 44,32,78,97,109,101,41,32,45,62,10,32,32,32,32,123,109,101,
                 115,115,101,110,103,101,114,44,32,83,101,114,118,101,114,95,
                 78,111,100,101,125,32,33,32,35,108,111,103,111,110,123,99,
                 108,105,101,110,116,95,112,105,100,61,115,101,108,102,40,41,
                 44,32,117,115,101,114,110,97,109,101,61,78,97,109,101,125,44,
                 10,32,32,32,32,97,119,97,105,116,95,114,101,115,117,108,116,
                 40,41,44,10,32,32,32,32,99,108,105,101,110,116,40,83,101,114,
                 118,101,114,95,78,111,100,101,41,46,10,10,99,108,105,101,110,
                 116,40,83,101,114,118,101,114,95,78,111,100,101,41,32,45,62,
                 10,32,32,32,32,114,101,99,101,105,118,101,10,32,32,32,32,32,
                 32,32,32,108,111,103,111,102,102,32,45,62,10,32,32,32,32,32,
                 32,32,32,32,32,32,32,101,120,105,116,40,110,111,114,109,97,
                 108,41,59,10,32,32,32,32,32,32,32,32,35,109,101,115,115,97,
                 103,101,95,116,111,123,116,111,95,110,97,109,101,61,84,111,
                 78,97,109,101,44,32,109,101,115,115,97,103,101,61,77,101,115,
                 115,97,103,101,125,32,45,62,10,32,32,32,32,32,32,32,32,32,32,
                 32,32,123,109,101,115,115,101,110,103,101,114,44,32,83,101,
                 114,118,101,114,95,78,111,100,101,125,32,33,32,10,32,32,32,
                 32,32,32,32,32,32,32,32,32,32,32,32,32,35,109,101,115,115,97,
                 103,101,123,99,108,105,101,110,116,95,112,105,100,61,115,101,
                 108,102,40,41,44,32,116,111,95,110,97,109,101,61,84,111,78,
                 97,109,101,44,32,109,101,115,115,97,103,101,61,77,101,115,
                 115,97,103,101,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 97,119,97,105,116,95,114,101,115,117,108,116,40,41,59,10,32,
                 32,32,32,32,32,32,32,123,109,101,115,115,97,103,101,95,102,
                 114,111,109,44,32,70,114,111,109,78,97,109,101,44,32,77,101,
                 115,115,97,103,101,125,32,45,62,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,105,111,58,102,111,114,109,97,116,40,34,77,101,
                 115,115,97,103,101,32,102,114,111,109,32,126,112,58,32,126,
                 112,126,110,34,44,32,91,70,114,111,109,78,97,109,101,44,32,
                 77,101,115,115,97,103,101,93,41,10,32,32,32,32,101,110,100,
                 44,10,32,32,32,32,99,108,105,101,110,116,40,83,101,114,118,
                 101,114,95,78,111,100,101,41,46,10,10,37,37,37,32,119,97,105,
                 116,32,102,111,114,32,97,32,114,101,115,112,111,110,115,101,
                 32,102,114,111,109,32,116,104,101,32,115,101,114,118,101,114,
                 10,97,119,97,105,116,95,114,101,115,117,108,116,40,41,32,45,
                 62,10,32,32,32,32,114,101,99,101,105,118,101,10,32,32,32,32,
                 32,32,32,32,35,97,98,111,114,116,95,99,108,105,101,110,116,
                 123,109,101,115,115,97,103,101,61,87,104,121,125,32,45,62,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,111,114,
                 109,97,116,40,34,126,112,126,110,34,44,32,91,87,104,121,93,
                 41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,101,120,105,116,
                 40,110,111,114,109,97,108,41,59,10,32,32,32,32,32,32,32,32,
                 35,115,101,114,118,101,114,95,114,101,112,108,121,123,109,
                 101,115,115,97,103,101,61,87,104,97,116,125,32,45,62,10,32,
                 32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,111,114,109,
                 97,116,40,34,126,112,126,110,34,44,32,91,87,104,97,116,93,41,
                 10,32,32,32,32,97,102,116,101,114,32,53,48,48,48,32,45,62,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,105,111,58,102,111,114,
                 109,97,116,40,34,78,111,32,114,101,115,112,111,110,115,101,
                 32,102,114,111,109,32,115,101,114,118,101,114,126,110,34,44,
                 32,91,93,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,101,
                 120,105,116,40,116,105,109,101,111,117,116,41,10,32,32,32,32,
                 101,110,100,46,10,10,37,37,37,45,45,45,45,69,78,68,32,70,73,
                 76,69,45,45,45]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [2337,10,37,37,37,45,45,45,45,70,73,76,69,32,109,101,115,115,
                 95,115,101,114,118,101,114,46,101,114,108,45,45,45,45,10,10,
                 37,37,37,32,84,104,105,115,32,105,115,32,116,104,101,32,115,
                 101,114,118,101,114,32,112,114,111,99,101,115,115,32,111,102,
                 32,116,104,101,32,109,101,115,115,101,110,103,101,114,32,115,
                 101,114,118,105,99,101,10,10,45,109,111,100,117,108,101,40,
                 109,101,115,115,95,115,101,114,118,101,114,41,46,10,45,101,
                 120,112,111,114,116,40,91,115,116,97,114,116,95,115,101,114,
                 118,101,114,47,48,44,32,115,101,114,118,101,114,47,48,93,41,
                 46,10,45,105,110,99,108,117,100,101,40,34,109,101,115,115,95,
                 105,110,116,101,114,102,97,99,101,46,104,114,108,34,41,46,10,
                 10,115,101,114,118,101,114,40,41,32,45,62,10,32,32,32,32,112,
                 114,111,99,101,115,115,95,102,108,97,103,40,116,114,97,112,
                 95,101,120,105,116,44,32,116,114,117,101,41,44,10,32,32,32,
                 32,115,101,114,118,101,114,40,91,93,41,46,10,10,37,37,37,32,
                 116,104,101,32,117,115,101,114,32,108,105,115,116,32,104,97,
                 115,32,116,104,101,32,102,111,114,109,97,116,32,91,123,67,
                 108,105,101,110,116,80,105,100,49,44,32,78,97,109,101,49,125,
                 44,123,67,108,105,101,110,116,80,105,100,50,50,44,32,78,97,
                 109,101,50,125,44,46,46,46,93,10,115,101,114,118,101,114,40,
                 85,115,101,114,95,76,105,115,116,41,32,45,62,10,32,32,32,32,
                 105,111,58,102,111,114,109,97,116,40,34,85,115,101,114,32,
                 108,105,115,116,32,61,32,126,112,126,110,34,44,32,91,85,115,
                 101,114,95,76,105,115,116,93,41,44,10,32,32,32,32,114,101,99,
                 101,105,118,101,10,32,32,32,32,32,32,32,32,35,108,111,103,
                 111,110,123,99,108,105,101,110,116,95,112,105,100,61,70,114,
                 111,109,44,32,117,115,101,114,110,97,109,101,61,78,97,109,
                 101,125,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,78,
                 101,119,95,85,115,101,114,95,76,105,115,116,32,61,32,115,101,
                 114,118,101,114,95,108,111,103,111,110,40,70,114,111,109,44,
                 32,78,97,109,101,44,32,85,115,101,114,95,76,105,115,116,41,
                 44,10,32,32,32,32,32,32,32,32,32,32,32,32,115,101,114,118,
                 101,114,40,78,101,119,95,85,115,101,114,95,76,105,115,116,41,
                 59,10,32,32,32,32,32,32,32,32,123,39,69,88,73,84,39,44,32,70,
                 114,111,109,44,32,95,125,32,45,62,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,78,101,119,95,85,115,101,114,95,76,105,115,116,
                 32,61,32,115,101,114,118,101,114,95,108,111,103,111,102,102,
                 40,70,114,111,109,44,32,85,115,101,114,95,76,105,115,116,41,
                 44,10,32,32,32,32,32,32,32,32,32,32,32,32,115,101,114,118,
                 101,114,40,78,101,119,95,85,115,101,114,95,76,105,115,116,41,
                 59,10,32,32,32,32,32,32,32,32,35,109,101,115,115,97,103,101,
                 123,99,108,105,101,110,116,95,112,105,100,61,70,114,111,109,
                 44,32,116,111,95,110,97,109,101,61,84,111,44,32,109,101,115,
                 115,97,103,101,61,77,101,115,115,97,103,101,125,32,45,62,10,
                 32,32,32,32,32,32,32,32,32,32,32,32,115,101,114,118,101,114,
                 95,116,114,97,110,115,102,101,114,40,70,114,111,109,44,32,84,
                 111,44,32,77,101,115,115,97,103,101,44,32,85,115,101,114,95,
                 76,105,115,116,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                 115,101,114,118,101,114,40,85,115,101,114,95,76,105,115,116,
                 41,10,32,32,32,32,101,110,100,46,10,10,37,37,37,32,83,116,97,
                 114,116,32,116,104,101,32,115,101,114,118,101,114,10,115,116,
                 97,114,116,95,115,101,114,118,101,114,40,41,32,45,62,10,32,
                 32,32,32,114,101,103,105,115,116,101,114,40,109,101,115,115,
                 101,110,103,101,114,44,32,115,112,97,119,110,40,63,77,79,68,
                 85,76,69,44,32,115,101,114,118,101,114,44,32,91,93,41,41,46,
                 10,10,37,37,37,32,83,101,114,118,101,114,32,97,100,100,115,
                 32,97,32,110,101,119,32,117,115,101,114,32,116,111,32,116,
                 104,101,32,117,115,101,114,32,108,105,115,116,10,115,101,114,
                 118,101,114,95,108,111,103,111,110,40,70,114,111,109,44,32,
                 78,97,109,101,44,32,85,115,101,114,95,76,105,115,116,41,32,
                 45,62,10,32,32,32,32,37,37,32,99,104,101,99,107,32,105,102,
                 32,108,111,103,103,101,100,32,111,110,32,97,110,121,119,104,
                 101,114,101,32,101,108,115,101,10,32,32,32,32,99,97,115,101,
                 32,108,105,115,116,115,58,107,101,121,109,101,109,98,101,114,
                 40,78,97,109,101,44,32,50,44,32,85,115,101,114,95,76,105,115,
                 116,41,32,111,102,10,32,32,32,32,32,32,32,32,116,114,117,101,
                 32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,70,114,111,
                 109,32,33,32,35,97,98,111,114,116,95,99,108,105,101,110,116,
                 123,109,101,115,115,97,103,101,61,117,115,101,114,95,101,120,
                 105,115,116,115,95,97,116,95,111,116,104,101,114,95,110,111,
                 100,101,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,85,115,
                 101,114,95,76,105,115,116,59,10,32,32,32,32,32,32,32,32,102,
                 97,108,115,101,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,
                 32,70,114,111,109,32,33,32,35,115,101,114,118,101,114,95,114,
                 101,112,108,121,123,109,101,115,115,97,103,101,61,108,111,
                 103,103,101,100,95,111,110,125,44,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,108,105,110,107,40,70,114,111,109,41,44,10,32,32,
                 32,32,32,32,32,32,32,32,32,32,91,123,70,114,111,109,44,32,78,
                 97,109,101,125,32,124,32,85,115,101,114,95,76,105,115,116,93,
                 32,32,32,32,32,32,32,32,37,97,100,100,32,117,115,101,114,32,
                 116,111,32,116,104,101,32,108,105,115,116,10,32,32,32,32,101,
                 110,100,46,10,10,37,37,37,32,83,101,114,118,101,114,32,100,
                 101,108,101,116,101,115,32,97,32,117,115,101,114,32,102,114,
                 111,109,32,116,104,101,32,117,115,101,114,32,108,105,115,116,
                 10,115,101,114,118,101,114,95,108,111,103,111,102,102,40,70,
                 114,111,109,44,32,85,115,101,114,95,76,105,115,116,41,32,45,
                 62,10,32,32,32,32,108,105,115,116,115,58,107,101,121,100,101,
                 108,101,116,101,40,70,114,111,109,44,32,49,44,32,85,115,101,
                 114,95,76,105,115,116,41,46,10,10,37,37,37,32,83,101,114,118,
                 101,114,32,116,114,97,110,115,102,101,114,115,32,97,32,109,
                 101,115,115,97,103,101,32,98,101,116,119,101,101,110,32,117,
                 115,101,114,10,115,101,114,118,101,114,95,116,114,97,110,115,
                 102,101,114,40,70,114,111,109,44,32,84,111,44,32,77,101,115,
                 115,97,103,101,44,32,85,115,101,114,95,76,105,115,116,41,32,
                 45,62,10,32,32,32,32,37,37,32,99,104,101,99,107,32,116,104,
                 97,116,32,116,104,101,32,117,115,101,114,32,105,115,32,108,
                 111,103,103,101,100,32,111,110,32,97,110,100,32,119,104,111,
                 32,104,101,32,105,115,10,32,32,32,32,99,97,115,101,32,108,
                 105,115,116,115,58,107,101,121,115,101,97,114,99,104,40,70,
                 114,111,109,44,32,49,44,32,85,115,101,114,95,76,105,115,116,
                 41,32,111,102,10,32,32,32,32,32,32,32,32,102,97,108,115,101,
                 32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,70,114,111,
                 109,32,33,32,35,97,98,111,114,116,95,99,108,105,101,110,116,
                 123,109,101,115,115,97,103,101,61,121,111,117,95,97,114,101,
                 95,110,111,116,95,108,111,103,103,101,100,95,111,110,125,59,
                 10,32,32,32,32,32,32,32,32,123,118,97,108,117,101,44,32,123,
                 95,44,32,78,97,109,101,125,125,32,45,62,10,32,32,32,32,32,32,
                 32,32,32,32,32,32,115,101,114,118,101,114,95,116,114,97,110,
                 115,102,101,114,40,70,114,111,109,44,32,78,97,109,101,44,32,
                 84,111,44,32,77,101,115,115,97,103,101,44,32,85,115,101,114,
                 95,76,105,115,116,41,10,32,32,32,32,101,110,100,46,10,37,37,
                 37,32,73,102,32,116,104,101,32,117,115,101,114,32,101,120,
                 105,115,116,115,44,32,115,101,110,100,32,116,104,101,32,109,
                 101,115,115,97,103,101,10,115,101,114,118,101,114,95,116,114,
                 97,110,115,102,101,114,40,70,114,111,109,44,32,78,97,109,101,
                 44,32,84,111,44,32,77,101,115,115,97,103,101,44,32,85,115,
                 101,114,95,76,105,115,116,41,32,45,62,10,32,32,32,32,37,37,
                 32,70,105,110,100,32,116,104,101,32,114,101,99,101,105,118,
                 101,114,32,97,110,100,32,115,101,110,100,32,116,104,101,32,
                 109,101,115,115,97,103,101,10,32,32,32,32,99,97,115,101,32,
                 108,105,115,116,115,58,107,101,121,115,101,97,114,99,104,40,
                 84,111,44,32,50,44,32,85,115,101,114,95,76,105,115,116,41,32,
                 111,102,10,32,32,32,32,32,32,32,32,102,97,108,115,101,32,45,
                 62,10,32,32,32,32,32,32,32,32,32,32,32,32,70,114,111,109,32,
                 33,32,35,115,101,114,118,101,114,95,114,101,112,108,121,123,
                 109,101,115,115,97,103,101,61,114,101,99,101,105,118,101,114,
                 95,110,111,116,95,102,111,117,110,100,125,59,10,32,32,32,32,
                 32,32,32,32,123,118,97,108,117,101,44,32,123,84,111,80,105,
                 100,44,32,84,111,125,125,32,45,62,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,84,111,80,105,100,32,33,32,35,109,101,115,115,97,
                 103,101,95,102,114,111,109,123,102,114,111,109,95,110,97,109,
                 101,61,78,97,109,101,44,32,109,101,115,115,97,103,101,61,77,
                 101,115,115,97,103,101,125,44,32,10,32,32,32,32,32,32,32,32,
                 32,32,32,32,70,114,111,109,32,33,32,32,35,115,101,114,118,
                 101,114,95,114,101,112,108,121,123,109,101,115,115,97,103,
                 101,61,115,101,110,116,125,32,10,32,32,32,32,101,110,100,46,
                 10,10,37,37,37,45,45,45,45,69,78,68,32,70,73,76,69,45,45,
                 45]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [17,35,35,35,35,32,72,101,97,100,101,114,32,70,105,108,101,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,")As shown above, some files have extension"}],
                0,false},
               {text,[6,42,46,104,114,108,42]},
               {sep,
                [{text,"1. These are header files that are included in the"}],
                0,false},
               {text,[6,42,46,101,114,108,42]},
               {sep,[{text,"\tfiles by:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [23,10,45,105,110,99,108,117,100,101,40,34,70,105,108,101,95,
                 78,97,109,101,34,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\ffor example:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text," \n-include(\"mess_interface.hrl\")."}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "|In the case above the file is fetched from the same directory as all the other files in the messenger example. (\\*manual\\*)."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "f.hrl files can contain any valid Erlang code but are most often used for record and macro definitions."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\f#### Records"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [23,65,32,114,101,99,111,114,100,32,105,115,32,100,101,102,
                 105,110,101,100,32,97,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "I\n-record(name_of_record,{field_name1, field_name2, field_name3, ......})."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\fFor example:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"(\n-record(message_to,{to_name, message})."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [22,84,104,105,115,32,105,115,32,101,113,117,105,118,97,108,
                 101,110,116,32,116,111,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [31,10,123,109,101,115,115,97,103,101,95,116,111,44,32,84,111,
                 95,78,97,109,101,44,32,77,101,115,115,97,103,101,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"4Creating a record is best illustrated by an example:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"+\n#message_to{message=\"hello\", to_name=fred)"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\rThis creates:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [28,10,123,109,101,115,115,97,103,101,95,116,111,44,32,102,
                 114,101,100,44,32,34,104,101,108,108,111,34,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [523,78,111,116,105,99,101,32,116,104,97,116,32,121,111,117,
                   32,100,111,32,110,111,116,32,104,97,118,101,32,116,111,32,
                   119,111,114,114,121,32,97,98,111,117,116,32,116,104,101,32,
                   111,114,100,101,114,32,121,111,117,32,97,115,115,105,103,
                   110,32,118,97,108,117,101,115,32,116,111,32,116,104,101,32,
                   118,97,114,105,111,117,115,32,112,97,114,116,115,32,111,
                   102,32,116,104,101,32,114,101,99,111,114,100,115,32,119,
                   104,101,110,32,121,111,117,32,99,114,101,97,116,101,32,105,
                   116,46,32,84,104,101,32,97,100,118,97,110,116,97,103,101,
                   32,111,102,32,117,115,105,110,103,32,114,101,99,111,114,
                   100,115,32,105,115,32,116,104,97,116,32,98,121,32,112,108,
                   97,99,105,110,103,32,116,104,101,105,114,32,100,101,102,
                   105,110,105,116,105,111,110,115,32,105,110,32,104,101,97,
                   100,101,114,32,102,105,108,101,115,32,121,111,117,32,99,97,
                   110,32,99,111,110,118,101,110,105,101,110,116,108,121,32,
                   100,101,102,105,110,101,32,105,110,116,101,114,102,97,99,
                   101,115,32,116,104,97,116,32,97,114,101,32,101,97,115,121,
                   32,116,111,32,99,104,97,110,103,101,46,32,70,111,114,32,
                   101,120,97,109,112,108,101,44,32,105,102,32,121,111,117,32,
                   119,97,110,116,32,116,111,32,97,100,100,32,97,32,110,101,
                   119,32,102,105,101,108,100,32,116,111,32,116,104,101,32,
                   114,101,99,111,114,100,44,32,121,111,117,32,111,110,108,
                   121,32,104,97,118,101,32,116,111,32,99,104,97,110,103,101,
                   32,116,104,101,32,99,111,100,101,32,119,104,101,114,101,32,
                   116,104,101,32,110,101,119,32,102,105,101,108,100,32,105,
                   115,32,117,115,101,100,32,97,110,100,32,110,111,116,32,97,
                   116,32,101,118,101,114,121,32,112,108,97,99,101,32,116,104,
                   101,32,114,101,99,111,114,100,32,105,115,32,114,101,102,
                   101,114,114,101,100,32,116,111,46,32,73,102,32,121,111,117,
                   32,108,101,97,118,101,32,111,117,116,32,97,32,102,105,101,
                   108,100,32,119,104,101,110,32,99,114,101,97,116,105,110,
                   103,32,97,32,114,101,99,111,114,100,44,32,105,116,32,103,
                   101,116,115,32,116,104,101,32,118,97,108,117,101,32,111,
                   102,32,116,104,101,32,97,116,111,109]}],
                0,false},
               {text,"\v*undefined*"},
               {sep,
                [{text,[14,46,32,40,92,42,109,97,110,117,97,108,92,42,41]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "XPattern matching with records is very similar to creating records. For example, inside a"}],
                0,false},
               {text,[6,42,99,97,115,101,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"\t*receive*"},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,"0\n#message_to{to_name=ToName, message=Message} ->"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [20,84,104,105,115,32,105,115,32,116,104,101,32,115,97,109,
                 101,32,97,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [30,10,123,109,101,115,115,97,103,101,95,116,111,44,32,84,111,
                 78,97,109,101,44,32,77,101,115,115,97,103,101,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,"\v#### Macros"},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "GAnother thing that has been added to the messenger is a macro. The file"}],
                0,false},
               {text,
                [17,42,109,101,115,115,95,99,111,110,102,105,103,46,104,114,
                 108,42]},
               {sep,
                [{text,
                  [24,99,111,110,116,97,105,110,115,32,116,104,101,32,100,101,
                   102,105,110,105,116,105,111,110,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "V\n%%% Configure the location of the server node,\n-define(server_node, messenger@super)."}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,84,104,105,115,32,102,105,108,101,32,105,115,32,105,110,
                   99,108,117,100,101,100,32,105,110]}],
                0,false},
               {text,
                [17,42,109,101,115,115,95,115,101,114,118,101,114,46,101,114,
                 108,42]},
               {sep,[{text,[1,58]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                [29,10,45,105,110,99,108,117,100,101,40,34,109,101,115,115,95,
                 99,111,110,102,105,103,46,104,114,108,34,41,46]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [19,69,118,101,114,121,32,111,99,99,117,114,114,101,110,99,
                   101,32,111,102]}],
                0,false},
               {text,[14,42,63,115,101,114,118,101,114,95,110,111,100,101,42]},
               {sep,[{text,[2,105,110]}],0,false},
               {text,
                [17,42,109,101,115,115,95,115,101,114,118,101,114,46,101,114,
                 108,42]},
               {sep,
                [{text,
                  [18,105,115,32,110,111,119,32,114,101,112,108,97,99,101,100,
                   32,98,121]}],
                0,false},
               {text,
                [17,42,109,101,115,115,101,110,103,101,114,64,115,117,112,101,
                 114,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "6A macro is also used when spawning the server process:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,[{text,"\e\nspawn(?MODULE, server, [])"}],0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "KThis is a standard macro (that is, defined by the system, not by the user)."}],
                0,false},
               {text,"\t*?MODULE*"},
               {sep,
                [{text,
                  "Bis always replaced by the name of the current module (that is, the"}],
                0,false},
               {text,"\t*-module*"},
               {sep,
                [{text,
                  [128,100,101,102,105,110,105,116,105,111,110,32,110,101,97,
                   114,32,116,104,101,32,115,116,97,114,116,32,111,102,32,116,
                   104,101,32,102,105,108,101,41,46,32,84,104,101,114,101,32,
                   97,114,101,32,109,111,114,101,32,97,100,118,97,110,99,101,
                   100,32,119,97,121,115,32,111,102,32,117,115,105,110,103,32,
                   109,97,99,114,111,115,32,119,105,116,104,44,32,102,111,114,
                   32,101,120,97,109,112,108,101,44,32,112,97,114,97,109,101,
                   116,101,114,115,32,40,92,42,109,97,110,117,97,108,92,42,41,
                   46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [18,84,104,101,32,116,104,114,101,101,32,69,114,108,97,110,
                   103,32,40]}],
                0,false},
               {text,[6,42,46,101,114,108,42]},
               {sep,
                [{text,
                  "R) files in the messenger example are individually compiled into object code file ("}],
                0,false},
               {text,[7,42,46,98,101,97,109,42]},
               {sep,
                [{text,
                  [261,41,46,32,84,104,101,32,69,114,108,97,110,103,32,115,
                   121,115,116,101,109,32,108,111,97,100,115,32,97,110,100,32,
                   108,105,110,107,115,32,116,104,101,115,101,32,102,105,108,
                   101,115,32,105,110,116,111,32,116,104,101,32,115,121,115,
                   116,101,109,32,119,104,101,110,32,116,104,101,121,32,97,
                   114,101,32,114,101,102,101,114,114,101,100,32,116,111,32,
                   100,117,114,105,110,103,32,101,120,101,99,117,116,105,111,
                   110,32,111,102,32,116,104,101,32,99,111,100,101,46,32,73,
                   110,32,116,104,105,115,32,99,97,115,101,44,32,116,104,101,
                   121,32,97,114,101,32,115,105,109,112,108,121,32,112,117,
                   116,32,105,110,32,111,117,114,32,99,117,114,114,101,110,
                   116,32,119,111,114,107,105,110,103,32,100,105,114,101,99,
                   116,111,114,121,32,40,116,104,97,116,32,105,115,44,32,116,
                   104,101,32,112,108,97,99,101,32,121,111,117,32,104,97,118,
                   101,32,100,111,110,101,32,34,99,100,34,32,116,111,41,46,32,
                   84,104,101,114,101,32,97,114,101,32,119,97,121,115,32,111,
                   102,32,112,117,116,116,105,110,103,32,116,104,101]}],
                0,false},
               {text,[7,42,46,98,101,97,109,42]},
               {sep,[{text,"\efiles in other directories."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "~In the messenger example, no assumptions have been made about what the message being sent is. It can be any valid Erlang term."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}],
   0,false},
  null,null],
 0,false}
