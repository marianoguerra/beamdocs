{above,
 {above,
  {above,
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [19,35,35,32,80,97,116,116,101,114,110,32,77,97,116,99,104,105,110,
          103]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"/Pattern matching in function head as well as in"}],
             0,false},
            {text,[6,42,99,97,115,101,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\t*receive*"},
            {sep,
             [{text,
               "nclauses are optimized by the compiler. With a few exceptions, there is nothing to gain by rearranging clauses."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "¤One exception is pattern matching of binaries. The compiler does not rearrange clauses that match binaries. Placing the clause that matches against the empty binary"}],
             0,false},
            {text,"\b**last**"},
            {sep,
             [{text,"*is usually slightly faster than placing it"}],
             0,false},
            {text,"\t**first**"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "FThe following is a rather unnatural example to show another exception:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\n**DO NOT**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[6,96,96,96,101,114,108]},
          {sep,
           [{text,
             "®\natom_map1(one) -> 1;\natom_map1(two) -> 2;\natom_map1(three) -> 3;\natom_map1(Int) when is_integer(Int) -> Int;\natom_map1(four) -> 4;\natom_map1(five) -> 5;\natom_map1(six) -> 6."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+The problem is the clause with the variable"}],
             0,false},
            {text,[5,42,73,110,116,42]},
            {sep,
             [{text,
               "7. As a variable can match anything, including the atoms"}],
             0,false},
            {text,[6,42,102,111,117,114,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,[6,42,102,105,118,101,42]},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,[5,42,115,105,120,42]},
            {sep,
             [{text,
               "n, which the following clauses also match, the compiler must generate suboptimal code that executes as follows:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,"%First, the input value is compared to"}],0,false},
            {text,[5,42,111,110,101,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,[5,42,116,119,111,42]},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,[7,42,116,104,114,101,101,42]},
            {sep,
             [{text,
               "¯(using a single instruction that does a binary search; thus, quite efficient even if there are many values) to select which one of the first three clauses to execute (if any)."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {text,
           "_If none of the first three clauses match, the fourth clause match as a variable always matches."}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,
              [17,73,102,32,116,104,101,32,103,117,97,114,100,32,116,101,115,
               116]}],
            0,false},
           {text,
            [17,42,105,115,95,105,110,116,101,103,101,114,40,73,110,116,41,
             42]},
           {sep,[{text,"(succeeds, the fourth clause is executed."}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,"7If the guard test fails, the input value is compared to"}],
           0,false},
          {text,[6,42,102,111,117,114,42]},
          {sep,[{text,[1,44]}],0,false},
          {text,[6,42,102,105,118,101,42]},
          {sep,[{text,[5,44,32,97,110,100]}],0,false},
          {text,[5,42,115,105,120,42]},
          {sep,
           [{text,"5, and the appropriate clause is selected. (There is a"}],
           0,false},
          {text,
           [17,42,102,117,110,99,116,105,111,110,95,99,108,97,117,115,101,42]},
          {sep,[{text,")exception if none of the values matched.)"}],0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [20,82,101,119,114,105,116,105,110,103,32,116,111,32,101,105,116,
              104,101,114,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,[{sep,[{text,[6,42,42,68,79,42,42]}],0,false}],0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[6,96,96,96,101,114,108]},
          {sep,
           [{text,
             "®\natom_map2(one) -> 1;\natom_map2(two) -> 2;\natom_map2(three) -> 3;\natom_map2(four) -> 4;\natom_map2(five) -> 5;\natom_map2(six) -> 6;\natom_map2(Int) when is_integer(Int) -> Int."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,[3,111,114,58]}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,[{sep,[{text,[6,42,42,68,79,42,42]}],0,false}],0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[6,96,96,96,101,114,108]},
          {sep,
           [{text,
             "®\natom_map3(Int) when is_integer(Int) -> Int;\natom_map3(one) -> 1;\natom_map3(two) -> 2;\natom_map3(three) -> 3;\natom_map3(four) -> 4;\natom_map3(five) -> 5;\natom_map3(six) -> 6."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",gives slightly more efficient matching code."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [16,65,110,111,116,104,101,114,32,101,120,97,109,112,108,101,
              58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\n**DO NOT**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[6,96,96,96,101,114,108]},
          {sep,
           [{text,
             [149,10,109,97,112,95,112,97,105,114,115,49,40,95,77,97,112,44,
              32,91,93,44,32,89,115,41,32,45,62,10,32,32,32,32,89,115,59,10,
              109,97,112,95,112,97,105,114,115,49,40,95,77,97,112,44,32,88,
              115,44,32,91,93,32,41,32,45,62,10,32,32,32,32,88,115,59,10,109,
              97,112,95,112,97,105,114,115,49,40,77,97,112,44,32,91,88,124,88,
              115,93,44,32,91,89,124,89,115,93,41,32,45,62,10,32,32,32,32,91,
              77,97,112,40,88,44,32,89,41,124,109,97,112,95,112,97,105,114,
              115,49,40,77,97,112,44,32,88,115,44,32,89,115,41,93,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [21,84,104,101,32,102,105,114,115,116,32,97,114,103,117,109,
                101,110,116,32,105,115]}],
             0,false},
            {text,[7,42,42,110,111,116,42,42]},
            {sep,
             [{text,
               "sa problem. It is variable, but it is a variable in all clauses. The problem is the variable in the second argument,"}],
             0,false},
            {text,[4,42,88,115,42]},
            {sep,
             [{text,
               "µ, in the middle clause. Because the variable can match anything, the compiler is not allowed to rearrange the clauses, but must generate code that matches them in the order written."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "WIf the function is rewritten as follows, the compiler is free to rearrange the clauses:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,[{sep,[{text,[6,42,42,68,79,42,42]}],0,false}],0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[6,96,96,96,101,114,108]},
          {sep,
           [{text,
             [155,10,109,97,112,95,112,97,105,114,115,50,40,95,77,97,112,44,
              32,91,93,44,32,89,115,41,32,45,62,10,32,32,32,32,89,115,59,10,
              109,97,112,95,112,97,105,114,115,50,40,95,77,97,112,44,32,91,95,
              124,95,93,61,88,115,44,32,91,93,32,41,32,45,62,10,32,32,32,32,
              88,115,59,10,109,97,112,95,112,97,105,114,115,50,40,77,97,112,
              44,32,91,88,124,88,115,93,44,32,91,89,124,89,115,93,41,32,45,62,
              10,32,32,32,32,91,77,97,112,40,88,44,32,89,41,124,109,97,112,95,
              112,97,105,114,115,50,40,77,97,112,44,32,88,115,44,32,89,115,41,
              93,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"0The compiler will generate code similar to this:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,")**DO NOT (already done by the compiler)**"}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[6,96,96,96,101,114,108]},
          {sep,
           [{text,
             [264,10,101,120,112,108,105,99,105,116,95,109,97,112,95,112,97,
              105,114,115,40,77,97,112,44,32,88,115,48,44,32,89,115,48,41,32,
              45,62,10,32,32,32,32,99,97,115,101,32,88,115,48,32,111,102,10,9,
              91,88,124,88,115,93,32,45,62,10,9,32,32,32,32,99,97,115,101,32,
              89,115,48,32,111,102,10,9,9,91,89,124,89,115,93,32,45,62,10,9,9,
              32,32,32,32,91,77,97,112,40,88,44,32,89,41,124,101,120,112,108,
              105,99,105,116,95,109,97,112,95,112,97,105,114,115,40,77,97,112,
              44,32,88,115,44,32,89,115,41,93,59,10,9,9,91,93,32,45,62,10,9,9,
              32,32,32,32,88,115,48,10,9,32,32,32,32,101,110,100,59,10,9,91,
              93,32,45,62,10,9,32,32,32,32,89,115,48,10,32,32,32,32,101,110,
              100,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "°This is slightly faster for probably the most common case that the input lists are not empty or very short. (Another advantage is that Dialyzer can deduce a better type for the"}],
             0,false},
            {text,[4,42,88,115,42]},
            {sep,[{text,"\nvariable.)"}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[17,35,35,32,70,117,110,99,116,105,111,110,32,67,97,108,108,115]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [133,84,104,105,115,32,105,115,32,97,110,32,105,110,116,101,110,
             116,105,111,110,97,108,108,121,32,114,111,117,103,104,32,103,117,
             105,100,101,32,116,111,32,116,104,101,32,114,101,108,97,116,105,
             118,101,32,99,111,115,116,115,32,111,102,32,100,105,102,102,101,
             114,101,110,116,32,99,97,108,108,115,46,32,73,116,32,105,115,32,
             98,97,115,101,100,32,111,110,32,98,101,110,99,104,109,97,114,107,
             32,102,105,103,117,114,101,115,32,114,117,110,32,111,110,32,83,
             111,108,97,114,105,115,47,83,112,97,114,99,58]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,[{text,"&Calls to local or external functions ("}],0,false},
          {text,[7,42,102,111,111,40,41,42]},
          {sep,[{text,[1,44]}],0,false},
          {text,"\t*m:foo()*"},
          {sep,
           [{text,
             [24,41,32,97,114,101,32,116,104,101,32,102,97,115,116,101,115,
              116,32,99,97,108,108,115,46]}],
           0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,[{text,"\eCalling or applying a fun ("}],0,false},
          {text,[7,42,70,117,110,40,41,42]},
          {sep,[{text,[1,44]}],0,false},
          {text,[16,42,97,112,112,108,121,40,70,117,110,44,32,91,93,41,42]},
          {sep,[{text,"\n) is about"}],0,false},
          {text,[15,42,42,116,104,114,101,101,32,116,105,109,101,115,42,42]},
          {sep,[{text,")as expensive as calling a local function."}],0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{text,
            [31,65,112,112,108,121,105,110,103,32,97,110,32,101,120,112,111,
             114,116,101,100,32,102,117,110,99,116,105,111,110,32,40]}],
          0,false},
         {text,"\f*Mod:Name()*"},
         {sep,[{text,[1,44]}],0,false},
         {text,
          [22,42,97,112,112,108,121,40,77,111,100,44,32,78,97,109,101,44,32,
           91,93,41,42]},
         {sep,
          [{text,"7) is about twice as expensive as calling a fun or about"}],
          0,false},
         {text,"\r**six times**"},
         {sep,[{text,")as expensive as calling a local function."}],0,false}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"### Notes and Implementation Details"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [144,67,97,108,108,105,110,103,32,97,110,100,32,97,112,112,108,
               121,105,110,103,32,97,32,102,117,110,32,100,111,101,115,32,110,
               111,116,32,105,110,118,111,108,118,101,32,97,110,121,32,104,97,
               115,104,45,116,97,98,108,101,32,108,111,111,107,117,112,46,32,
               65,32,102,117,110,32,99,111,110,116,97,105,110,115,32,97,110,
               32,40,105,110,100,105,114,101,99,116,41,32,112,111,105,110,116,
               101,114,32,116,111,32,116,104,101,32,102,117,110,99,116,105,
               111,110,32,116,104,97,116,32,105,109,112,108,101,109,101,110,
               116,115,32,116,104,101,32,102,117,110,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\t*apply/3*"},
             {sep,
              [{text,
                [130,109,117,115,116,32,108,111,111,107,32,117,112,32,116,104,
                 101,32,99,111,100,101,32,102,111,114,32,116,104,101,32,102,
                 117,110,99,116,105,111,110,32,116,111,32,101,120,101,99,117,
                 116,101,32,105,110,32,97,32,104,97,115,104,32,116,97,98,108,
                 101,46,32,73,116,32,105,115,32,116,104,101,114,101,102,111,
                 114,101,32,97,108,119,97,121,115,32,115,108,111,119,101,114,
                 32,116,104,97,110,32,97,32,100,105,114,101,99,116,32,99,97,
                 108,108,32,111,114,32,97,32,102,117,110,32,99,97,108,108,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "JIt no longer matters (from a performance point of view) whether you write:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[6,96,96,96,101,114,108]},
           {sep,
            [{text,
              [28,10,77,111,100,117,108,101,58,70,117,110,99,116,105,111,110,
               40,65,114,103,49,44,32,65,114,103,50,41]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,[3,111,114,58]}],0,false}],0,true},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[6,96,96,96,101,114,108]},
           {sep,[{text,"%\napply(Module, Function, [Arg1,Arg2])"}],0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "AThe compiler internally rewrites the latter code into the former."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "lThe following code is slightly slower because the shape of the list of arguments is unknown at compile time."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[6,96,96,96,101,114,108]},
           {sep,[{text,"#\napply(Module, Function, Arguments)"}],0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,77,101,109,111,114,121,32,85,115,97,103,101,32,105,110,32,
        82,101,99,117,114,115,105,111,110]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [129,87,104,101,110,32,119,114,105,116,105,110,103,32,114,101,99,
            117,114,115,105,118,101,32,102,117,110,99,116,105,111,110,115,44,
            32,105,116,32,105,115,32,112,114,101,102,101,114,97,98,108,101,32,
            116,111,32,109,97,107,101,32,116,104,101,109,32,116,97,105,108,45,
            114,101,99,117,114,115,105,118,101,32,115,111,32,116,104,97,116,
            32,116,104,101,121,32,99,97,110,32,101,120,101,99,117,116,101,32,
            105,110,32,99,111,110,115,116,97,110,116,32,109,101,109,111,114,
            121,32,115,112,97,99,101,58]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{sep,[{sep,[{text,[6,42,42,68,79,42,42]}],0,false}],0,true},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "º\nlist_length(List) ->\n    list_length(List, 0).\n\nlist_length([], AccLen) -> \n    AccLen; % Base case\n\nlist_length([_|Tail], AccLen) ->\n    list_length(Tail, AccLen + 1). % Tail-recursive"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{sep,[{sep,[{text,"\n**DO NOT**"}],0,false}],0,true},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "q\nlist_length([]) ->\n    0. % Base case\nlist_length([_ | Tail]) ->\n    list_length(Tail) + 1. % Not tail-recursive"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}}],
  0,false}}
