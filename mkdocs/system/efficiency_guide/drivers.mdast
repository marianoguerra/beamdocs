{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\t# Drivers"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "IThis section provides a brief overview on how to write efficient drivers."}],
            0,false}],
          0,true},
         null},
        null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "<It is assumed that you have a good understanding of drivers."}],
           0,false}],
         0,true},
        null},
       null}}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [26,35,35,32,68,114,105,118,101,114,115,32,97,110,100,32,67,111,110,
           99,117,114,114,101,110,99,121]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "KThe runtime system always takes a lock before running any code in a driver."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "¤By default, that lock is at the driver level, that is, if several ports have been opened to the same driver, only code for one port at the same time can be running."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "BA driver can be configured to have one lock for each port instead."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [263,73,102,32,97,32,100,114,105,118,101,114,32,105,115,32,117,
               115,101,100,32,105,110,32,97,32,102,117,110,99,116,105,111,110,
               97,108,32,119,97,121,32,40,116,104,97,116,32,105,115,44,32,104,
               111,108,100,115,32,110,111,32,115,116,97,116,101,44,32,98,117,
               116,32,111,110,108,121,32,100,111,101,115,32,115,111,109,101,
               32,104,101,97,118,121,32,99,97,108,99,117,108,97,116,105,111,
               110,32,97,110,100,32,114,101,116,117,114,110,115,32,97,32,114,
               101,115,117,108,116,41,44,32,115,101,118,101,114,97,108,32,112,
               111,114,116,115,32,119,105,116,104,32,114,101,103,105,115,116,
               101,114,101,100,32,110,97,109,101,115,32,99,97,110,32,98,101,
               32,111,112,101,110,101,100,32,98,101,102,111,114,101,104,97,
               110,100,44,32,97,110,100,32,116,104,101,32,112,111,114,116,32,
               116,111,32,98,101,32,117,115,101,100,32,99,97,110,32,98,101,32,
               99,104,111,115,101,110,32,98,97,115,101,100,32,111,110,32,116,
               104,101,32,115,99,104,101,100,117,108,101,114,32,73,68,32,97,
               115,32,102,111,108,108,111,119,115,58]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [427,10,45,100,101,102,105,110,101,40,80,79,82,84,95,78,65,77,
               69,83,40,41,44,10,9,123,115,111,109,101,95,100,114,105,118,101,
               114,95,48,49,44,32,115,111,109,101,95,100,114,105,118,101,114,
               95,48,50,44,32,115,111,109,101,95,100,114,105,118,101,114,95,
               48,51,44,32,115,111,109,101,95,100,114,105,118,101,114,95,48,
               52,44,10,9,32,115,111,109,101,95,100,114,105,118,101,114,95,48,
               53,44,32,115,111,109,101,95,100,114,105,118,101,114,95,48,54,
               44,32,115,111,109,101,95,100,114,105,118,101,114,95,48,55,44,
               32,115,111,109,101,95,100,114,105,118,101,114,95,48,56,44,10,9,
               32,115,111,109,101,95,100,114,105,118,101,114,95,48,57,44,32,
               115,111,109,101,95,100,114,105,118,101,114,95,49,48,44,32,115,
               111,109,101,95,100,114,105,118,101,114,95,49,49,44,32,115,111,
               109,101,95,100,114,105,118,101,114,95,49,50,44,10,9,32,115,111,
               109,101,95,100,114,105,118,101,114,95,49,51,44,32,115,111,109,
               101,95,100,114,105,118,101,114,95,49,52,44,32,115,111,109,101,
               95,100,114,105,118,101,114,95,49,53,44,32,115,111,109,101,95,
               100,114,105,118,101,114,95,49,54,125,41,46,10,10,99,108,105,
               101,110,116,95,112,111,114,116,40,41,32,45,62,10,32,32,32,32,
               101,108,101,109,101,110,116,40,101,114,108,97,110,103,58,115,
               121,115,116,101,109,95,105,110,102,111,40,115,99,104,101,100,
               117,108,101,114,95,105,100,41,32,114,101,109,32,116,117,112,
               108,101,95,115,105,122,101,40,63,80,79,82,84,95,78,65,77,69,83,
               40,41,41,32,43,32,49,44,10,9,32,32,32,32,63,80,79,82,84,95,78,
               65,77,69,83,40,41,41,46]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "yAs long as there are no more than 16 schedulers, there will never be any lock contention on the port lock for the driver."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"2## Avoiding Copying Binaries When Calling a Driver"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "PThere are basically two ways to avoid copying a binary that is sent to a driver:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[6,73,102,32,116,104,101]}],0,false},
                 {text,[6,42,68,97,116,97,42]},
                 {sep,[{text,"\fargument for"}],0,false},
                 {text,"/[port_control/3](../erts/erlang#port_control/3)"},
                 {sep,
                  [{text,
                    "xis a binary, the driver will be passed a pointer to the contents of the binary and the binary will not be copied. If the"}],
                  0,false},
                 {text,[6,42,68,97,116,97,42]},
                 {sep,
                  [{text,
                    "^argument is an iolist (list of binaries and lists), all binaries in the iolist will be copied."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [131,84,104,101,114,101,102,111,114,101,44,32,105,102,32,
                     121,111,117,32,119,97,110,116,32,116,111,32,115,101,110,
                     100,32,98,111,116,104,32,97,32,112,114,101,45,101,120,
                     105,115,116,105,110,103,32,98,105,110,97,114,121,32,97,
                     110,100,32,115,111,109,101,32,101,120,116,114,97,32,100,
                     97,116,97,32,116,111,32,97,32,100,114,105,118,101,114,32,
                     119,105,116,104,111,117,116,32,99,111,112,121,105,110,
                     103,32,116,104,101,32,98,105,110,97,114,121,44,32,121,
                     111,117,32,109,117,115,116,32,99,97,108,108]}],
                  0,false},
                 {text,
                  [16,42,112,111,114,116,95,99,111,110,116,114,111,108,47,51,
                   42]},
                 {sep,
                  [{text,
                    "Ýtwice; once with the binary and once with the extra data. However, that will only work if there is only one process communicating with the port (because otherwise another process can call the driver in-between the calls)."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,[{text,"\fImplement an"}],0,false},
          {text,"\t*outputv*"},
          {sep,
           [{text,
             [23,99,97,108,108,98,97,99,107,32,40,105,110,115,116,101,97,100,
              32,111,102,32,97,110]}],
           0,false},
          {text,"\b*output*"},
          {sep,
           [{text,"+callback) in the driver. If a driver has an"}],
           0,false},
          {text,"\t*outputv*"},
          {sep,
           [{text,"2callback, refc binaries passed in an iolist in the"}],
           0,false},
          {text,[6,42,68,97,116,97,42]},
          {sep,[{text,"\fargument for"}],0,false},
          {text,"/[port_command/2](../erts/erlang#port_command/2)"},
          {sep,
           [{text,"+will be passed as references to the driver."}],
           0,false}],
         0,false}],
       0,false}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,")## Returning Small Binaries from a Driver"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "àThe runtime system can represent binaries up to 64 bytes as heap binaries. They are always copied when sent in messages, but they require less memory if they are not sent to another process and garbage collection is cheaper."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [155,73,102,32,121,111,117,32,107,110,111,119,32,116,104,97,116,
               32,116,104,101,32,98,105,110,97,114,105,101,115,32,121,111,117,
               32,114,101,116,117,114,110,32,97,114,101,32,97,108,119,97,121,
               115,32,115,109,97,108,108,44,32,121,111,117,32,97,114,101,32,
               97,100,118,105,115,101,100,32,116,111,32,117,115,101,32,100,
               114,105,118,101,114,32,65,80,73,32,99,97,108,108,115,32,116,
               104,97,116,32,100,111,32,110,111,116,32,114,101,113,117,105,
               114,101,32,97,32,112,114,101,45,97,108,108,111,99,97,116,101,
               100,32,98,105,110,97,114,121,44,32,102,111,114,32,101,120,97,
               109,112,108,101,44]}],
            0,false},
           {text,"3[driver_output()](../erts/erl_driver#driver_output)"},
           {sep,[{text,[2,111,114]}],0,false},
           {text,
            "?[erl_drv_output_term()](../erts/erl_driver#erl_drv_output_term)"},
           {sep,[{text,"\v, using the"}],0,false},
           {text,
            [20,42,69,82,76,95,68,82,86,95,66,85,70,50,66,73,78,65,82,89,42]},
           {sep,
            [{text,
              "8format, to allow the runtime to construct a heap binary."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"9## Returning Large Binaries without Copying from a Driver"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "ÀTo avoid copying data when a large binary is sent or returned from the driver to an Erlang process, the driver must first allocate the binary and then send it to an Erlang process in some way."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[3,85,115,101]}],0,false},
          {text,
           "?[driver_alloc_binary()](../erts/erl_driver#driver_alloc_binary)"},
          {sep,
           [{text,
             [21,116,111,32,97,108,108,111,99,97,116,101,32,97,32,98,105,110,
              97,114,121,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,"4There are several ways to send a binary created with"}],
           0,false},
          {text,
           [23,42,100,114,105,118,101,114,95,97,108,108,111,99,95,98,105,110,
            97,114,121,40,41,42]},
          {sep,[{text,[1,58]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,[{text,"\bFrom the"}],0,false},
         {text,"\t*control*"},
         {sep,[{text,"%callback, a binary can be returned if"}],0,false},
         {text,
          "E[set_port_control_flags()](../erts/erl_driver#set_port_control_flags)"},
         {sep,[{text,"#has been called with the flag value"}],0,false},
         {text,
          [26,42,80,79,82,84,95,67,79,78,84,82,79,76,95,70,76,65,71,95,66,73,
           78,65,82,89,42]},
         {sep,[{text,[1,46]}],0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,[{text," A single binary can be sent with"}],0,false},
         {text,
          "A[driver_output_binary()](../erts/erl_driver#driver_output_binary)"},
         {sep,[{text,[1,46]}],0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,[{text,[5,85,115,105,110,103]}],0,false},
        {text,
         "?[erl_drv_output_term()](../erts/erl_driver#erl_drv_output_term)"},
        {sep,[{text,[2,111,114]}],0,false},
        {text,";[erl_drv_send_term()](../erts/erl_driver#erl_drv_send_term)"},
        {sep,
         [{text,"-, a binary can be included in an Erlang term."}],
         0,false}],
       0,false}],
     0,false}}],
  0,false}}
