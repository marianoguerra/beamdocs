{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\b# mnesia"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\b# mnesia"},null},null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"%A distributed telecommunications DBMS"}],0,false}],
         0,true},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "\\The following are some of the most important and attractive capabilities provided by Mnesia:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {sep,
                   [{text,[1,42]},
                    {text,
                     "[A relational/object hybrid data model that is suitable for telecommunications applications."}],
                   0,false},
                  {sep,
                   [{text,[1,42]},
                    {text,
                     "KA DBMS query language, Query List Comprehension (QLC) as an add-on library."}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {text,
                    "JPersistence. Tables can be coherently kept on disc and in the main memory."}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {text,
                   "7Replication. Tables can be replicated at several nodes."}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {text,
                  "oAtomic transactions. A series of table manipulation operations can be grouped into a single atomic transaction."}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {text,
                 "]Location transparency. Programs can be written without knowledge of the actual data location."}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {text,"'Extremely fast real-time data searches."}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {text,
               "bSchema manipulation routines. The DBMS can be reconfigured at runtime without stopping the system."}],
             0,false}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "qThis Reference Manual describes the Mnesia API. This includes functions that define and manipulate Mnesia tables."}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "Â«All functions in this Reference Manual can be used in any combination with queries using the list comprehension notation. For information about the query notation, see the"}],
                   0,false},
                  {text,"\f[qlc](./qlc)"},
                  {sep,
                   [{text,
                     [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,
                      32,83,84,68,76,73,66,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   [303,68,97,116,97,32,105,110,32,77,110,101,115,105,97,32,
                    105,115,32,111,114,103,97,110,105,122,101,100,32,97,115,
                    32,97,32,115,101,116,32,111,102,32,116,97,98,108,101,115,
                    46,32,69,97,99,104,32,116,97,98,108,101,32,104,97,115,32,
                    97,32,110,97,109,101,32,116,104,97,116,32,109,117,115,116,
                    32,98,101,32,97,110,32,97,116,111,109,46,32,69,97,99,104,
                    32,116,97,98,108,101,32,105,115,32,109,97,100,101,32,117,
                    112,32,111,102,32,69,114,108,97,110,103,32,114,101,99,111,
                    114,100,115,46,32,84,104,101,32,117,115,101,114,32,105,
                    115,32,114,101,115,112,111,110,115,105,98,108,101,32,102,
                    111,114,32,116,104,101,32,114,101,99,111,114,100,32,100,
                    101,102,105,110,105,116,105,111,110,115,46,32,69,97,99,
                    104,32,116,97,98,108,101,32,97,108,115,111,32,104,97,115,
                    32,97,32,115,101,116,32,111,102,32,112,114,111,112,101,
                    114,116,105,101,115,46,32,84,104,101,32,102,111,108,108,
                    111,119,105,110,103,32,97,114,101,32,115,111,109,101,32,
                    111,102,32,116,104,101,32,112,114,111,112,101,114,116,105,
                    101,115,32,116,104,97,116,32,97,114,101,32,97,115,115,111,
                    99,105,97,116,101,100,32,119,105,116,104,32,101,97,99,104,
                    32,116,97,98,108,101,58]}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,[6,42,116,121,112,101,42]},
                               {sep,
                                [{text,
                                  [21,46,32,69,97,99,104,32,116,97,98,108,101,
                                   32,99,97,110,32,104,97,118,101]}],
                                0,false},
                               {text,[5,42,115,101,116,42]},
                               {sep,[{text,[1,44]}],0,false},
                               {text,"\r*ordered_set*"},
                               {sep,[{text,[4,44,32,111,114]}],0,false},
                               {text,[5,42,98,97,103,42]},
                               {sep,
                                [{text," semantics. Notice that currently"}],
                                0,false},
                               {text,"\r*ordered_set*"},
                               {sep,
                                [{text,
                                  [20,105,115,32,110,111,116,32,115,117,112,
                                   112,111,114,116,101,100,32,102,111,114]}],
                                0,false},
                               {text,
                                [18,42,100,105,115,99,95,111,110,108,121,95,
                                 99,111,112,105,101,115,42]},
                               {sep,[{text,[1,46]}],0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  [21,73,102,32,97,32,116,97,98,108,101,32,
                                   105,115,32,111,102,32,116,121,112,101]}],
                                0,false},
                               {text,[5,42,115,101,116,42]},
                               {sep,
                                [{text,
                                  "/, each key leads to either one or zero records."}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  [128,73,102,32,97,32,110,101,119,32,105,116,
                                   101,109,32,105,115,32,105,110,115,101,114,
                                   116,101,100,32,119,105,116,104,32,116,104,
                                   101,32,115,97,109,101,32,107,101,121,32,97,
                                   115,32,97,110,32,101,120,105,115,116,105,
                                   110,103,32,114,101,99,111,114,100,44,32,
                                   116,104,101,32,111,108,100,32,114,101,99,
                                   111,114,100,32,105,115,32,111,118,101,114,
                                   119,114,105,116,116,101,110,46,32,72,111,
                                   119,101,118,101,114,44,32,105,102,32,97,32,
                                   116,97,98,108,101,32,105,115,32,111,102,32,
                                   116,121,112,101]}],
                                0,false},
                               {text,[5,42,98,97,103,42]},
                               {sep,
                                [{text,
                                  ":, each key can map to several records. All records in type"}],
                                0,false},
                               {text,[5,42,98,97,103,42]},
                               {sep,
                                [{text,
                                  "3tables are unique, only the keys can be duplicated."}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}}],
                       0,false}],
                     0,false},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{text,"\r*record_name*"},
                        {sep,
                         [{text,
                           "o. All records stored in a table must have the same name. The records must be instances of the same record type."}],
                         0,false}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,"\f*ram_copies*"},
                       {sep,
                        [{text,
                          "A. A table can be replicated on a number of Erlang nodes. Property"}],
                        0,false},
                       {text,"\f*ram_copies*"},
                       {sep,
                        [{text,
                          "Ãspecifies a list of Erlang nodes where RAM copies are kept. These copies can be dumped to disc at regular intervals. However, updates to these copies are not written to disc on a transaction basis."}],
                        0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,"\r*disc_copies*"},
                      {sep,
                       [{text,
                         "Ã. This property specifies a list of Erlang nodes where the table is kept in RAM and on disc. All updates of the table are performed in the actual table and are also logged to disc. If a table is of type"}],
                       0,false},
                      {text,"\r*disc_copies*"},
                      {sep,
                       [{text,
                         [131,97,116,32,97,32,99,101,114,116,97,105,110,32,
                          110,111,100,101,44,32,116,104,101,32,101,110,116,
                          105,114,101,32,116,97,98,108,101,32,105,115,32,114,
                          101,115,105,100,101,110,116,32,105,110,32,82,65,77,
                          32,109,101,109,111,114,121,32,97,110,100,32,111,110,
                          32,100,105,115,99,46,32,69,97,99,104,32,116,114,97,
                          110,115,97,99,116,105,111,110,32,112,101,114,102,
                          111,114,109,101,100,32,111,110,32,116,104,101,32,
                          116,97,98,108,101,32,105,115,32,97,112,112,101,110,
                          100,101,100,32,116,111,32,97]}],
                       0,false},
                      {text,[5,42,76,79,71,42]},
                      {sep,
                       [{text,"$file and written into the RAM table."}],
                       0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      [18,42,100,105,115,99,95,111,110,108,121,95,99,111,112,
                       105,101,115,42]},
                     {sep,
                      [{text,
                        "|. Some, or all, table replicas can be kept on disc only. These replicas are considerably slower than the RAM-based replicas."}],
                      0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,[7,42,105,110,100,101,120,42]},
                    {sep,
                     [{text,
                       [146,46,32,84,104,105,115,32,105,115,32,97,32,108,105,
                        115,116,32,111,102,32,97,116,116,114,105,98,117,116,
                        101,32,110,97,109,101,115,44,32,111,114,32,105,110,
                        116,101,103,101,114,115,44,32,119,104,105,99,104,32,
                        115,112,101,99,105,102,121,32,116,104,101,32,116,117,
                        112,108,101,32,112,111,115,105,116,105,111,110,115,32,
                        111,110,32,119,104,105,99,104,32,77,110,101,115,105,
                        97,32,105,115,32,116,111,32,98,117,105,108,100,32,97,
                        110,100,32,109,97,105,110,116,97,105,110,32,97,110,32,
                        101,120,116,114,97,32,105,110,100,101,120,32,116,97,
                        98,108,101,46]}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [15,42,108,111,99,97,108,95,99,111,110,116,101,110,116,
                     42]},
                   {sep,
                    [{text,
                      "L. When an application requires tables whose contents are local to each node,"}],
                    0,false},
                   {text,
                    [15,42,108,111,99,97,108,95,99,111,110,116,101,110,116,
                     42]},
                   {sep,
                    [{text,
                      "Â¯tables can be used. The table name is known to all Mnesia nodes, but its content is unique on each node. This means that access to such a table must be done locally. Set field"}],
                    0,false},
                   {text,
                    [15,42,108,111,99,97,108,95,99,111,110,116,101,110,116,
                     42]},
                   {sep,[{text,[2,116,111]}],0,false},
                   {text,[6,42,116,114,117,101,42]},
                   {sep,[{text,"\rto enable the"}],0,false},
                   {text,
                    [15,42,108,111,99,97,108,95,99,111,110,116,101,110,116,
                     42]},
                   {sep,
                    [{text,
                      [20,98,101,104,97,118,105,111,114,46,32,68,101,102,97,
                       117,108,116,32,105,115]}],
                    0,false},
                   {text,[7,42,102,97,108,115,101,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\n*majority*"},
                  {sep,
                   [{text,
                     [19,46,32,84,104,105,115,32,97,116,116,114,105,98,117,
                      116,101,32,105,115]}],
                   0,false},
                  {text,[6,42,116,114,117,101,42]},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,[7,42,102,97,108,115,101,42]},
                  {sep,[{text,"\f; default is"}],0,false},
                  {text,[7,42,102,97,108,115,101,42]},
                  {sep,[{text,[6,46,32,87,104,101,110]}],0,false},
                  {text,[6,42,116,114,117,101,42]},
                  {sep,
                   [{text,
                     "Ã, a majority of the table replicas must be available for an update to succeed. Majority checking can be enabled on tables with mission-critical data, where it is vital to avoid inconsistencies because of network splits."}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,[6,42,115,110,109,112,42]},
                 {sep,
                  [{text,
                    "Â·. Each (set-based) Mnesia table can be automatically turned into a Simple Network Management Protocol (SNMP) ordered table as well. This property specifies the types of the SNMP keys."}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,"\f*attributes*"},
                {sep,
                 [{text,
                   "M. The names of the attributes for the records that are inserted in the table."}],
                 0,false}],
               0,false}],
             0,false}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "QFor information about the complete set of table properties and their details, see"}],
                   0,false},
                  {text,
                   [23,42,109,110,101,115,105,97,58,99,114,101,97,116,101,95,
                    116,97,98,108,101,47,50,42]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "yThis Reference Manual uses a table of persons to illustrate various examples. The following record definition is assumed:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [148,10,45,114,101,99,111,114,100,40,112,101,114,115,111,
                    110,44,32,123,110,97,109,101,44,10,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,97,103,101,32,61,32,48,44,
                    10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,
                    100,100,114,101,115,115,32,61,32,117,110,107,110,111,119,
                    110,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,115,97,108,97,114,121,32,61,32,48,44,10,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,99,104,105,108,100,
                    114,101,110,32,61,32,91,93,125,41,44]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "@The first record attribute is the primary key, or key for short."}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "dThe function descriptions are sorted in alphabetical order. It is recommended to start to read about"}],
                   0,false},
                  {text,
                   [23,42,109,110,101,115,105,97,58,99,114,101,97,116,101,95,
                    116,97,98,108,101,47,50,42]},
                  {sep,[{text,[1,44]}],0,false},
                  {text,
                   [15,42,109,110,101,115,105,97,58,108,111,99,107,47,50,42]},
                  {sep,[{text,[5,44,32,97,110,100]}],0,false},
                  {text,
                   [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,
                    121,47,52,42]},
                  {sep,
                   [{text,"-before you continue and learn about the rest."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [138,87,114,105,116,105,110,103,32,111,114,32,100,101,
                      108,101,116,105,110,103,32,105,110,32,116,114,97,110,
                      115,97,99,116,105,111,110,45,99,111,110,116,101,120,116,
                      32,99,114,101,97,116,101,115,32,97,32,108,111,99,97,108,
                      32,99,111,112,121,32,111,102,32,101,97,99,104,32,109,
                      111,100,105,102,105,101,100,32,114,101,99,111,114,100,
                      32,100,117,114,105,110,103,32,116,104,101,32,116,114,97,
                      110,115,97,99,116,105,111,110,46,32,68,117,114,105,110,
                      103,32,105,116,101,114,97,116,105,111,110,44,32,116,104,
                      97,116,32,105,115,44]}],
                   0,false},
                  {text,
                   [19,42,109,110,101,115,105,97,58,102,111,108,100,91,108,
                    114,93,47,52,42]},
                  {sep,[{text,[1,44]}],0,false},
                  {text,
                   [15,42,109,110,101,115,105,97,58,110,101,120,116,47,50,42]},
                  {sep,[{text,[1,44]}],0,false},
                  {text,
                   [15,42,109,110,101,115,105,97,58,112,114,101,118,47,50,42]},
                  {sep,[{text,[5,44,32,97,110,100]}],0,false},
                  {text,
                   [30,42,109,110,101,115,105,97,58,115,110,109,112,95,103,
                    101,116,95,110,101,120,116,95,105,110,100,101,120,47,50,
                    42]},
                  {sep,
                   [{text,
                     "[, Mnesia compensates for every written or deleted record, which can reduce the performance."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "gIf possible, avoid writing or deleting records in the same transaction before iterating over the table."}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\v# Functions"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"%## abort(Reason) -> transaction abort"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"#Terminates the current transaction."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"/Makes the transaction silently return the tuple"}],
               0,false},
              {text,
               [19,42,123,97,98,111,114,116,101,100,44,32,82,101,97,115,111,
                110,125,42]},
              {sep,
               [{text,
                 "W. Termination of a Mnesia transaction means that an exception is thrown to an enclosing"}],
               0,false},
              {text,[7,42,99,97,116,99,104,42]},
              {sep,
               [{text,
                 [22,46,32,84,104,117,115,44,32,116,104,101,32,101,120,112,
                  114,101,115,115,105,111,110]}],
               0,false},
              {text,
               [23,42,99,97,116,99,104,32,109,110,101,115,105,97,58,97,98,111,
                114,116,40,120,41,42]},
              {sep,[{text,"#does not terminate the transaction."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "@## activate_checkpoint(Args) -> {ok,Name,Nodes} | {error,Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [23,65,99,116,105,118,97,116,101,115,32,97,32,99,104,101,99,107,
              112,111,105,110,116,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"5<a name=\"activate_checkpoint\">activate_checkpoint</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [286,65,32,99,104,101,99,107,112,111,105,110,116,32,105,115,32,
                97,32,99,111,110,115,105,115,116,101,110,116,32,118,105,101,
                119,32,111,102,32,116,104,101,32,115,121,115,116,101,109,46,
                32,65,32,99,104,101,99,107,112,111,105,110,116,32,99,97,110,
                32,98,101,32,97,99,116,105,118,97,116,101,100,32,111,110,32,
                97,32,115,101,116,32,111,102,32,116,97,98,108,101,115,46,32,
                84,104,105,115,32,99,104,101,99,107,112,111,105,110,116,32,99,
                97,110,32,116,104,101,110,32,98,101,32,116,114,97,118,101,114,
                115,101,100,32,97,110,100,32,112,114,101,115,101,110,116,115,
                32,97,32,118,105,101,119,32,111,102,32,116,104,101,32,115,121,
                115,116,101,109,32,97,115,32,105,116,32,101,120,105,115,116,
                101,100,32,97,116,32,116,104,101,32,116,105,109,101,32,119,
                104,101,110,32,116,104,101,32,99,104,101,99,107,112,111,105,
                110,116,32,119,97,115,32,97,99,116,105,118,97,116,101,100,44,
                32,101,118,101,110,32,105,102,32,116,104,101,32,116,97,98,108,
                101,115,32,97,114,101,32,98,101,105,110,103,32,111,114,32,104,
                97,118,101,32,98,101,101,110,32,109,97,110,105,112,117,108,97,
                116,101,100,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,[6,42,65,114,103,115,42]},
              {sep,[{text,"\"is a list of the following tuples:"}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\r*{name,Name}*"},
               {sep,[{text,[1,46]}],0,false},
               {text,[6,42,78,97,109,101,42]},
               {sep,
                [{text,
                  "Ãis the checkpoint name. Each checkpoint must have a name that is unique to the associated nodes. The name can be reused only once the checkpoint has been deactivated. By default, a name that is probably unique is generated."}],
                0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,[15,42,123,109,97,120,44,77,97,120,84,97,98,115,125,42]},
               {sep,[{text,[1,46]}],0,false},
               {text,"\t*MaxTabs*"},
               {sep,
                [{text,
                  "Iis a list of tables that are to be included in the checkpoint. Default is"}],
                0,false},
               {text,[4,42,91,93,42]},
               {sep,
                [{text,
                  [258,46,32,70,111,114,32,116,104,101,115,101,32,116,97,98,
                   108,101,115,44,32,116,104,101,32,114,101,100,117,110,100,
                   97,110,99,121,32,105,115,32,109,97,120,105,109,105,122,101,
                   100,32,97,110,100,32,99,104,101,99,107,112,111,105,110,116,
                   32,105,110,102,111,114,109,97,116,105,111,110,32,105,115,
                   32,114,101,116,97,105,110,101,100,32,116,111,103,101,116,
                   104,101,114,32,119,105,116,104,32,97,108,108,32,114,101,
                   112,108,105,99,97,115,46,32,84,104,101,32,99,104,101,99,
                   107,112,111,105,110,116,32,98,101,99,111,109,101,115,32,
                   109,111,114,101,32,102,97,117,108,116,32,116,111,108,101,
                   114,97,110,116,32,105,102,32,116,104,101,32,116,97,98,108,
                   101,115,32,104,97,118,101,32,115,101,118,101,114,97,108,32,
                   114,101,112,108,105,99,97,115,46,32,87,104,101,110,32,97,
                   32,110,101,119,32,114,101,112,108,105,99,97,32,105,115,32,
                   97,100,100,101,100,32,98,121,32,116,104,101,32,115,99,104,
                   101,109,97,32,109,97,110,105,112,117,108,97,116,105,111,
                   110,32,102,117,110,99,116,105,111,110]}],
                0,false},
               {text,
                [25,42,109,110,101,115,105,97,58,97,100,100,95,116,97,98,108,
                 101,95,99,111,112,121,47,51,42]},
               {sep,
                [{text,",, a retainer is also attached automatically."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,[15,42,123,109,105,110,44,77,105,110,84,97,98,115,125,42]},
              {sep,[{text,[1,46]}],0,false},
              {text,"\t*MinTabs*"},
              {sep,
               [{text,
                 "Ãis a list of tables that are to be included in the checkpoint. Default is []. For these tables, the redundancy is minimized and the checkpoint information is only retained with one replica, preferably on the local node."}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [21,42,123,97,108,108,111,119,95,114,101,109,111,116,101,44,66,
               111,111,108,125,42]},
             {sep,[{text,[1,46]}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,
              [{text,
                "nmeans that all retainers must be local. The checkpoint cannot be activated if a table does not reside locally."}],
              0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,
              [{text,
                "8allows retainers to be allocated on any node. Default is"}],
              0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\e*{ram_overrides_dump,Bool}*"},
            {sep,
             [{text,
               [21,46,32,79,110,108,121,32,97,112,112,108,105,99,97,98,108,
                101,32,102,111,114]}],
             0,false},
            {text,"\f*ram_copies*"},
            {sep,[{text,[1,46]}],0,false},
            {text,[6,42,66,111,111,108,42]},
            {sep,
             [{text,
               "Uallows you to choose to back up the table state as it is in RAM, or as it is on disc."}],
             0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,
               [137,109,101,97,110,115,32,116,104,97,116,32,116,104,101,32,
                108,97,116,101,115,116,32,99,111,109,109,105,116,116,101,100,
                32,114,101,99,111,114,100,115,32,105,110,32,82,65,77,32,97,
                114,101,32,116,111,32,98,101,32,105,110,99,108,117,100,101,
                100,32,105,110,32,116,104,101,32,99,104,101,99,107,112,111,
                105,110,116,46,32,84,104,101,115,101,32,97,114,101,32,116,104,
                101,32,114,101,99,111,114,100,115,32,116,104,97,116,32,116,
                104,101,32,97,112,112,108,105,99,97,116,105,111,110,32,97,99,
                99,101,115,115,101,115,46]}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text," means that the records dumped to"}],0,false},
            {text,[5,42,68,65,84,42]},
            {sep,
             [{text,
               "[files are to be included in the checkpoint. These records are loaded at startup. Default is"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
              {text,
               [17,42,123,111,107,44,78,97,109,101,44,78,111,100,101,115,125,
                42]},
              {sep,[{text,[2,111,114]}],0,false},
              {text,
               [16,42,123,101,114,114,111,114,44,82,101,97,115,111,110,125,
                42]},
              {sep,[{text,[1,46]}],0,false},
              {text,[6,42,78,97,109,101,42]},
              {sep,
               [{text,",is the (possibly generated) checkpoint name."}],
               0,false},
              {text,[7,42,78,111,100,101,115,42]},
              {sep,
               [{text,
                 "xare the nodes that are involved in the checkpoint. Only nodes that keep a checkpoint retainer know about the checkpoint."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "F## activity(AccessContext, Fun [, Args]) -> ResultOfFun | exit(Reason)"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bExecutes"}],0,false},
            {text,[5,42,70,117,110,42]},
            {sep,[{text,[2,105,110]}],0,false},
            {text,[15,42,65,99,99,101,115,115,67,111,110,116,101,120,116,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"'<a name=\"activity_2_3\">activity_2_3</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,"6*mnesia:activity(AccessContext, Fun, Args, AccessMod)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,"\v*AccessMod*"},
              {sep,
               [{text,"1is the default access callback module obtained by"}],
               0,false},
              {text,"#*mnesia:system_info(access_module)*"},
              {sep,[{text,[1,46]}],0,false},
              {text,[6,42,65,114,103,115,42]},
              {sep,[{text,"\vdefaults to"}],0,false},
              {text,[4,42,91,93,42]},
              {sep,[{text,"\r(empty list)."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "N## activity(AccessContext, Fun, Args, AccessMod) -> ResultOfFun | exit(Reason)"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bExecutes"}],0,false},
            {text,[5,42,70,117,110,42]},
            {sep,[{text,[2,105,110]}],0,false},
            {text,[15,42,65,99,99,101,115,115,67,111,110,116,101,120,116,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"#<a name=\"activity_4\">activity_4</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [30,69,120,101,99,117,116,101,115,32,116,104,101,32,102,117,
                  110,99,116,105,111,110,97,108,32,111,98,106,101,99,116]}],
               0,false},
              {text,[5,42,70,117,110,42]},
              {sep,[{text,"\rwith argument"}],0,false},
              {text,[6,42,65,114,103,115,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "}The code that executes inside the activity can consist of a series of table manipulation functions, which are performed in an"}],
               0,false},
              {text,
               [15,42,65,99,99,101,115,115,67,111,110,116,101,120,116,42]},
              {sep,
               [{text,
                 "9. Currently, the following access contexts are supported:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {text,[4,60,100,108,62]},
         {nest,4,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,[{text,"\vtransaction"}],0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,[{text,"\tShort for"}],0,false},
                                   {text,
                                    [23,123,116,114,97,110,115,97,99,116,105,
                                     111,110,44,32,105,110,102,105,110,105,
                                     116,121,125]}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,
                              [22,123,116,114,97,110,115,97,99,116,105,111,
                               110,44,32,82,101,116,114,105,101,115,125]}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,[{text,[5,67,97,108,108,115]}],0,false},
                                 {text,
                                  "&mnesia:transaction(Fun, Args, Retries)"},
                                 {sep,
                                  [{text,
                                    [29,46,32,78,111,116,105,99,101,32,116,
                                     104,97,116,32,116,104,101,32,114,101,115,
                                     117,108,116,32,102,114,111,109]}],
                                  0,false},
                                 {text,[3,70,117,110]},
                                 {sep,
                                  [{text,
                                    "iis returned if the transaction is successful (atomic), otherwise the function exits with an abort reason."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,
                            [16,115,121,110,99,95,116,114,97,110,115,97,99,
                             116,105,111,110]}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,[{text,"\tShort for"}],0,false},
                               {text,
                                [28,123,115,121,110,99,95,116,114,97,110,115,
                                 97,99,116,105,111,110,44,32,105,110,102,105,
                                 110,105,116,121,125]}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,[{text,"\e{sync_transaction, Retries}"}],0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,[{text,[5,67,97,108,108,115]}],0,false},
                             {text,
                              "+mnesia:sync_transaction(Fun, Args, Retries)"},
                             {sep,
                              [{text,
                                [29,46,32,78,111,116,105,99,101,32,116,104,97,
                                 116,32,116,104,101,32,114,101,115,117,108,
                                 116,32,102,114,111,109]}],
                              0,false},
                             {text,[3,70,117,110]},
                             {sep,
                              [{text,
                                "iis returned if the transaction is successful (atomic), otherwise the function exits with an abort reason."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,"\vasync_dirty"}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,[{text,[5,67,97,108,108,115]}],0,false},
                           {text,
                            [29,109,110,101,115,105,97,58,97,115,121,110,99,
                             95,100,105,114,116,121,40,70,117,110,44,32,65,
                             114,103,115,41]},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\nsync_dirty"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,[{text,[5,67,97,108,108,115]}],0,false},
                         {text,
                          [28,109,110,101,115,105,97,58,115,121,110,99,95,100,
                           105,114,116,121,40,70,117,110,44,32,65,114,103,115,
                           41]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[3,101,116,115]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,[{text,[5,67,97,108,108,115]}],0,false},
                       {text,
                        [21,109,110,101,115,105,97,58,101,116,115,40,70,117,
                         110,44,32,65,114,103,115,41]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}}}},
        {text,[5,60,47,100,108,62]}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [15,84,104,105,115,32,102,117,110,99,116,105,111,110,32,40]}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,"0) differs in an important way from the functions"}],
               0,false},
              {text,
               [20,42,109,110,101,115,105,97,58,116,114,97,110,115,97,99,116,
                105,111,110,42]},
              {sep,[{text,[1,44]}],0,false},
              {text,
               [25,42,109,110,101,115,105,97,58,115,121,110,99,95,116,114,97,
                110,115,97,99,116,105,111,110,42]},
              {sep,[{text,[1,44]}],0,false},
              {text,
               [20,42,109,110,101,115,105,97,58,97,115,121,110,99,95,100,105,
                114,116,121,42]},
              {sep,[{text,[1,44]}],0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,115,121,110,99,95,100,105,114,
                116,121,42]},
              {sep,[{text,[5,44,32,97,110,100]}],0,false},
              {text,"\f*mnesia:ets*"},
              {sep,[{text,"\n. Argument"}],0,false},
              {text,"\v*AccessMod*"},
              {sep,
               [{text,
                 "6is the name of a callback module, which implements the"}],
               0,false},
              {text,[15,42,109,110,101,115,105,97,95,97,99,99,101,115,115,42]},
              {sep,[{text,"\tbehavior."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"1Mnesia forwards calls to the following functions:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {sep,
                     [{text,[1,42]},
                      {text,
                       "5mnesia:lock/2 (read_lock_table/1, write_lock_table/1)"}],
                     0,false},
                    {sep,
                     [{text,[1,42]},
                      {text,"#mnesia:write/3 (write/1, s_write/1)"}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {text,"&mnesia:delete/3 (delete/1, s_delete/1)"}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {text,
                     ";mnesia:delete_object/3 (delete_object/1, s_delete_object/1)"}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {text,
                    [31,109,110,101,115,105,97,58,114,101,97,100,47,51,32,40,
                     114,101,97,100,47,49,44,32,119,114,101,97,100,47,49,41]}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {text,"&mnesia:match_object/3 (match_object/1)"}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {text,
                  [17,109,110,101,115,105,97,58,97,108,108,95,107,101,121,115,
                   47,49]}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {text,
                 [14,109,110,101,115,105,97,58,102,105,114,115,116,47,49]}],
               0,false}},
             {sep,[{text,[1,42]},{text,"\rmnesia:last/1"}],0,false}},
            {sep,[{text,[1,42]},{text,"\rmnesia:prev/2"}],0,false}},
           {sep,[{text,[1,42]},{text,"\rmnesia:next/2"}],0,false}},
          {sep,
           [{text,[1,42]},
            {text,"2mnesia:index_match_object/4 (index_match_object/2)"}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {text,
            [19,109,110,101,115,105,97,58,105,110,100,101,120,95,114,101,97,
             100,47,51]}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {text,
           [19,109,110,101,115,105,97,58,116,97,98,108,101,95,105,110,102,111,
            47,50]}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [21,116,111,32,116,104,101,32,99,111,114,114,101,115,112,111,
                110,100,105,110,103,58]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {sep,
                     [{text,[1,42]},
                      {text,
                       "6AccessMod:lock(ActivityId, Opaque, LockItem, LockKind)"}],
                     0,false},
                    {sep,
                     [{text,[1,42]},
                      {text,
                       "7AccessMod:write(ActivityId, Opaque, Tab, Rec, LockKind)"}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {text,
                      "8AccessMod:delete(ActivityId, Opaque, Tab, Key, LockKind)"}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {text,
                     "AAccessMod:delete_object(ActivityId, Opaque, Tab, RecXS, LockKind)"}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {text,
                    "6AccessMod:read(ActivityId, Opaque, Tab, Key, LockKind)"}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {text,
                   "BAccessMod:match_object(ActivityId, Opaque, Tab, Pattern, LockKind)"}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {text,
                  "5AccessMod:all_keys(ActivityId, Opaque, Tab, LockKind)"}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {text,"(AccessMod:first(ActivityId, Opaque, Tab)"}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {text,"'AccessMod:last(ActivityId, Opaque, Tab)"}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {text,",AccessMod:prev(ActivityId, Opaque, Tab, Key)"}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {text,",AccessMod:next(ActivityId, Opaque, Tab, Key)"}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {text,
             "NAccessMod:index_match_object(ActivityId, Opaque, Tab, Pattern, Attr, LockKind)"}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {text,
            "KAccessMod:index_read(ActivityId, Opaque, Tab, SecondaryKey, Attr, LockKind)"}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {text,"7AccessMod:table_info(ActivityId, Opaque, Tab, InfoItem)"}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\f*ActivityId*"},
              {sep,
               [{text,
                 "iis a record that represents the identity of the enclosing Mnesia activity. The first field (obtained with"}],
               0,false},
              {text,
               [24,42,101,108,101,109,101,110,116,40,49,44,32,65,99,116,105,
                118,105,116,121,73,100,41,42]},
              {sep,
               [{text,
                 "B) contains an atom, which can be interpreted as the activity type:"}],
               0,false},
              {text,[5,42,101,116,115,42]},
              {sep,[{text,[1,44]}],0,false},
              {text,"\r*async_dirty*"},
              {sep,[{text,[1,44]}],0,false},
              {text,"\f*sync_dirty*"},
              {sep,[{text,[4,44,32,111,114]}],0,false},
              {text,[5,42,116,105,100,42]},
              {sep,[{text,[1,46]}],0,false},
              {text,[5,42,116,105,100,42]},
              {sep,
               [{text,
                 "qmeans that the activity is a transaction. The structure of the rest of the identity record is internal to Mnesia."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\b*Opaque*"},
              {sep,
               [{text,
                 "7is an opaque data structure that is internal to Mnesia."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "A## add_table_copy(Tab, Node, Type) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," Copies a table to a remote node."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"+<a name=\"add_table_copy\">add_table_copy</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,")Makes another copy of a table at the node"}],
               0,false},
              {text,[6,42,78,111,100,101,42]},
              {sep,[{text,"\n. Argument"}],0,false},
              {text,[6,42,84,121,112,101,42]},
              {sep,[{text,"\emust be either of the atoms"}],0,false},
              {text,"\f*ram_copies*"},
              {sep,[{text,[1,44]}],0,false},
              {text,"\r*disc_copies*"},
              {sep,[{text,[4,44,32,111,114]}],0,false},
              {text,
               [18,42,100,105,115,99,95,111,110,108,121,95,99,111,112,105,101,
                115,42]},
              {sep,
               [{text,
                 "D. For example, the following call ensures that a disc replica of the"}],
               0,false},
              {text,"\b*person*"},
              {sep,
               [{text,
                 [25,116,97,98,108,101,32,97,108,115,111,32,101,120,105,115,
                  116,115,32,97,116,32,110,111,100,101]}],
               0,false},
              {text,[6,42,78,111,100,101,42]},
              {sep,[{text,[1,58]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,"1\nmnesia:add_table_copy(person, Node, disc_copies)"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "BThis function can also be used to add a replica of the table named"}],
               0,false},
              {text,"\b*schema*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "@## add_table_index(Tab, AttrName) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [29,67,114,101,97,116,101,115,32,97,110,32,105,110,100,101,120,
              32,102,111,114,32,97,32,116,97,98,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"add_table_index\">add_table_index</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [273,84,97,98,108,101,32,105,110,100,101,120,101,115,32,99,
                  97,110,32,98,101,32,117,115,101,100,32,119,104,101,110,101,
                  118,101,114,32,116,104,101,32,117,115,101,114,32,119,97,110,
                  116,115,32,116,111,32,117,115,101,32,102,114,101,113,117,
                  101,110,116,108,121,32,115,111,109,101,32,111,116,104,101,
                  114,32,102,105,101,108,100,32,116,104,97,110,32,116,104,101,
                  32,107,101,121,32,102,105,101,108,100,32,116,111,32,108,111,
                  111,107,32,117,112,32,114,101,99,111,114,100,115,46,32,73,
                  102,32,116,104,105,115,32,111,116,104,101,114,32,102,105,
                  101,108,100,32,104,97,115,32,97,110,32,97,115,115,111,99,
                  105,97,116,101,100,32,105,110,100,101,120,44,32,116,104,101,
                  115,101,32,108,111,111,107,117,112,115,32,99,97,110,32,111,
                  99,99,117,114,32,105,110,32,99,111,110,115,116,97,110,116,
                  32,116,105,109,101,32,97,110,100,32,115,112,97,99,101,46,32,
                  70,111,114,32,101,120,97,109,112,108,101,44,32,105,102,32,
                  121,111,117,114,32,97,112,112,108,105,99,97,116,105,111,110,
                  32,119,105,115,104,101,115,32,116,111,32,117,115,101,32,102,
                  105,101,108,100]}],
               0,false},
              {text,[5,42,97,103,101,42]},
              {sep,
               [{text,
                 "dto find efficiently all persons with a specific age, it can be a good idea to have an index on field"}],
               0,false},
              {text,[5,42,97,103,101,42]},
              {sep,
               [{text,"+. This can be done with the following call:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,[{text,"$\nmnesia:add_table_index(person, age)"}],0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [156,73,110,100,101,120,101,115,32,100,111,32,110,111,116,32,
                99,111,109,101,32,102,111,114,32,102,114,101,101,46,32,84,104,
                101,121,32,111,99,99,117,112,121,32,115,112,97,99,101,32,116,
                104,97,116,32,105,115,32,112,114,111,112,111,114,116,105,111,
                110,97,108,32,116,111,32,116,104,101,32,116,97,98,108,101,32,
                115,105,122,101,44,32,97,110,100,32,116,104,101,121,32,99,97,
                117,115,101,32,105,110,115,101,114,116,105,111,110,115,32,105,
                110,116,111,32,116,104,101,32,116,97,98,108,101,32,116,111,32,
                101,120,101,99,117,116,101,32,115,108,105,103,104,116,108,121,
                32,115,108,111,119,101,114,46]}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"/## all_keys(Tab) -> KeyList | transaction abort"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [28,82,101,116,117,114,110,115,32,97,108,108,32,107,101,121,115,
              32,105,110,32,97,32,116,97,98,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [31,60,97,32,110,97,109,101,61,34,97,108,108,95,107,101,121,115,34,62,
         97,108,108,95,107,101,121,115,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"-Returns a list of all keys in the table named"}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,
               [{text,
                 "P. The semantics of this function is context-sensitive. For more information, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 "F. In transaction-context, it acquires a read lock on the entire table."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,";## async_dirty(Fun, [, Args]) -> ResultOfFun | exit(Reason)"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\tCalls the"}],0,false},
            {text,[5,42,70,117,110,42]},
            {sep,
             [{text,"4in a context that is not protected by a transaction."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"%<a name=\"async_dirty\">async_dirty</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\tCalls the"}],0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 "_in a context that is not protected by a transaction. The Mnesia function calls performed in the"}],
               0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 [279,97,114,101,32,109,97,112,112,101,100,32,116,111,32,116,
                  104,101,32,99,111,114,114,101,115,112,111,110,100,105,110,
                  103,32,100,105,114,116,121,32,102,117,110,99,116,105,111,
                  110,115,46,32,84,104,105,115,32,115,116,105,108,108,32,105,
                  110,118,111,108,118,101,115,32,108,111,103,103,105,110,103,
                  44,32,114,101,112,108,105,99,97,116,105,111,110,44,32,97,
                  110,100,32,115,117,98,115,99,114,105,112,116,105,111,110,
                  115,44,32,98,117,116,32,116,104,101,114,101,32,105,115,32,
                  110,111,32,108,111,99,107,105,110,103,44,32,108,111,99,97,
                  108,32,116,114,97,110,115,97,99,116,105,111,110,32,115,116,
                  111,114,97,103,101,44,32,111,114,32,99,111,109,109,105,116,
                  32,112,114,111,116,111,99,111,108,115,32,105,110,118,111,
                  108,118,101,100,46,32,67,104,101,99,107,112,111,105,110,116,
                  32,114,101,116,97,105,110,101,114,115,32,97,110,100,32,105,
                  110,100,101,120,101,115,32,97,114,101,32,117,112,100,97,116,
                  101,100,44,32,98,117,116,32,116,104,101,121,32,97,114,101,
                  32,117,112,100,97,116,101,100,32,100,105,114,116,121,46,32,
                  65,115,32,102,111,114,32,110,111,114,109,97,108]}],
               0,false},
              {text,
               [16,42,109,110,101,115,105,97,58,100,105,114,116,121,95,42,42]},
              {sep,
               [{text,
                 "Noperations, the operations are performed semi-asynchronously. For details, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 [21,97,110,100,32,116,104,101,32,85,115,101,114,39,115,32,71,
                  117,105,100,101,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [486,84,104,101,32,77,110,101,115,105,97,32,116,97,98,108,101,
                115,32,99,97,110,32,98,101,32,109,97,110,105,112,117,108,97,
                116,101,100,32,119,105,116,104,111,117,116,32,117,115,105,110,
                103,32,116,114,97,110,115,97,99,116,105,111,110,115,46,32,84,
                104,105,115,32,104,97,115,32,115,111,109,101,32,115,101,114,
                105,111,117,115,32,100,105,115,97,100,118,97,110,116,97,103,
                101,115,44,32,98,117,116,32,105,115,32,99,111,110,115,105,100,
                101,114,97,98,108,121,32,102,97,115,116,101,114,44,32,97,115,
                32,116,104,101,32,116,114,97,110,115,97,99,116,105,111,110,32,
                109,97,110,97,103,101,114,32,105,115,32,110,111,116,32,105,
                110,118,111,108,118,101,100,32,97,110,100,32,110,111,32,108,
                111,99,107,115,32,97,114,101,32,115,101,116,46,32,65,32,100,
                105,114,116,121,32,111,112,101,114,97,116,105,111,110,32,100,
                111,101,115,44,32,104,111,119,101,118,101,114,44,32,103,117,
                97,114,97,110,116,101,101,32,97,32,99,101,114,116,97,105,110,
                32,108,101,118,101,108,32,111,102,32,99,111,110,115,105,115,
                116,101,110,99,121,44,32,97,110,100,32,116,104,101,32,100,105,
                114,116,121,32,111,112,101,114,97,116,105,111,110,115,32,99,
                97,110,110,111,116,32,114,101,116,117,114,110,32,103,97,114,
                98,108,101,100,32,114,101,99,111,114,100,115,46,32,65,108,108,
                32,100,105,114,116,121,32,111,112,101,114,97,116,105,111,110,
                115,32,112,114,111,118,105,100,101,32,108,111,99,97,116,105,
                111,110,32,116,114,97,110,115,112,97,114,101,110,99,121,32,
                116,111,32,116,104,101,32,112,114,111,103,114,97,109,109,101,
                114,44,32,97,110,100,32,97,32,112,114,111,103,114,97,109,32,
                100,111,101,115,32,110,111,116,32,104,97,118,101,32,116,111,
                32,98,101,32,97,119,97,114,101,32,111,102,32,116,104,101,32,
                119,104,101,114,101,97,98,111,117,116,115,32,111,102,32,97,32,
                99,101,114,116,97,105,110,32,116,97,98,108,101,32,116,111,32,
                102,117,110,99,116,105,111,110,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "eNotice that it is more than ten times more efficient to read records dirty than within a transaction."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "Ã Depending on the application, it can be a good idea to use the dirty functions for certain operations. Almost all Mnesia functions that can be called within transactions have a dirty equivalent, which is much more efficient."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "Ã¤However, notice that there is a risk that the database can be left in an inconsistent state if dirty operations are used to update it. Dirty operations are only to be used for performance reasons when it is absolutely necessary."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [29,78,111,116,105,99,101,32,116,104,97,116,32,99,97,108,108,
                  105,110,103,32,40,110,101,115,116,105,110,103,41]}],
               0,false},
              {text,
               [22,42,109,110,101,115,105,97,58,91,97,93,115,121,110,99,95,
                100,105,114,116,121,42]},
              {sep,
               [{text,
                 "@inside a transaction-context inherits the transaction semantics."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"6## backup(Opaque [, BackupMod]) -> ok | {error,Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$Backs up all tables in the database."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"\e<a name=\"backup\">backup</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [139,65,99,116,105,118,97,116,101,115,32,97,32,110,101,119,
                  32,99,104,101,99,107,112,111,105,110,116,32,99,111,118,101,
                  114,105,110,103,32,97,108,108,32,77,110,101,115,105,97,32,
                  116,97,98,108,101,115,44,32,105,110,99,108,117,100,105,110,
                  103,32,116,104,101,32,115,99,104,101,109,97,44,32,119,105,
                  116,104,32,109,97,120,105,109,117,109,32,100,101,103,114,
                  101,101,32,111,102,32,114,101,100,117,110,100,97,110,99,121,
                  44,32,97,110,100,32,112,101,114,102,111,114,109,115,32,97,
                  32,98,97,99,107,117,112,32,117,115,105,110,103]}],
               0,false},
              {text,
               [23,42,98,97,99,107,117,112,95,99,104,101,99,107,112,111,105,
                110,116,47,50,47,51,42]},
              {sep,
               [{text,"1. The default value of the backup callback module"}],
               0,false},
              {text,"\v*BackupMod*"},
              {sep,
               [{text,
                 [14,105,115,32,111,98,116,97,105,110,101,100,32,98,121]}],
               0,false},
              {text,"#*mnesia:system_info(backup_module)*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "G## backup_checkpoint(Name, Opaque [, BackupMod]) -> ok | {error,Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$Backs up all tables in a checkpoint."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"1<a name=\"backup_checkpoint\">backup_checkpoint</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 ">The tables are backed up to external media using backup module"}],
               0,false},
              {text,"\v*BackupMod*"},
              {sep,
               [{text,
                 "Z. Tables with the local contents property are backed up as they exist on the current node."}],
               0,false},
              {text,"\v*BackupMod*"},
              {sep,
               [{text,"1is the default backup callback module obtained by"}],
               0,false},
              {text,"#*mnesia:system_info(backup_module)*"},
              {sep,
               [{text,
                 "9. For information about the exact callback interface (the"}],
               0,false},
              {text,
               [24,42,109,110,101,115,105,97,95,98,97,99,107,117,112,32,98,
                101,104,97,118,105,111,114,42]},
              {sep,
               [{text,
                 [24,41,44,32,115,101,101,32,116,104,101,32,85,115,101,114,39,
                  115,32,71,117,105,100,101,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "F## change_config(Config, Value) -> {error, Reason} | {ok, ReturnValue}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Changes a configuration parameter."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,")<a name=\"change_config\">change_config</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\b*Config*"},
              {sep,
               [{text,
                 ";is to be an atom of the following configuration parameters:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {text,[4,60,100,108,62]},
         {nest,4,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     [14,101,120,116,114,97,95,100,98,95,110,111,100,101,
                      115]}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,[5,86,97,108,117,101]},
                           {sep,
                            [{text,
                              "7is a list of nodes that Mnesia is to try to connect to."}],
                            0,false},
                           {text,"\vReturnValue"},
                           {sep,
                            [{text,
                              [17,105,115,32,116,104,111,115,101,32,110,111,
                               100,101,115,32,105,110]}],
                            0,false},
                           {text,[5,86,97,108,117,101]},
                           {sep,
                            [{text,
                              [28,116,104,97,116,32,77,110,101,115,105,97,32,
                               105,115,32,99,111,110,110,101,99,116,101,100,
                               32,116,111,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "Ã§Notice that this function must only be used to connect to newly started RAM nodes (N.D.R.S.N.) with an empty schema. If, for example, this function is used after the network has been partitioned, it can lead to inconsistent tables."}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "INotice that Mnesia can be connected to other nodes than those returned in"}],
                            0,false},
                           {text,"\vReturnValue"},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,"\rdc_dump_limit"}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,[5,86,97,108,117,101]},
                       {sep,
                        [{text,"#is a number. See the description in"}],
                        0,false},
                       {text," Section Configuration Parameters"},
                       {sep,[{text,[1,46]}],0,false},
                       {text,"\vReturnValue"},
                       {sep,
                        [{text,
                          "qis the new value. Notice that this configuration parameter is not persistent. It is lost when Mnesia has stopped."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}}}},
        {text,[5,60,47,100,108,62]}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "K## change_table_access_mode(Tab, AccessMode) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"&Changes the access mode for the table."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        "?<a name=\"change_table_access_mode\">change_table_access_mode</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\r*AcccessMode*"},
              {sep,
               [{text,
                 [22,105,115,32,98,121,32,100,101,102,97,117,108,116,32,116,
                  104,101,32,97,116,111,109]}],
               0,false},
              {text,"\f*read_write*"},
              {sep,[{text,"\"but it can also be set to the atom"}],0,false},
              {text,"\v*read_only*"},
              {sep,[{text,[4,46,32,73,102]}],0,false},
              {text,"\f*AccessMode*"},
              {sep,[{text,"\tis set to"}],0,false},
              {text,"\v*read_only*"},
              {sep,
               [{text,
                 "K, updates to the table cannot be performed. At startup, Mnesia always loads"}],
               0,false},
              {text,"\v*read_only*"},
              {sep,
               [{text,
                 "Mtables locally regardless of when and if Mnesia is terminated on other nodes."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "G## change_table_copy_type(Tab, Node, To) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$Changes the storage type of a table."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,";<a name=\"change_table_copy_type\">change_table_copy_type</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,{sep,[{sep,[{text,"\fFor example:"}],0,false}],0,true},null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               ";\nmnesia:change_table_copy_type(person, node(), disc_copies)"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [14,84,114,97,110,115,102,111,114,109,115,32,116,104,101]}],
               0,false},
              {text,"\b*person*"},
              {sep,
               [{text,"1table from a RAM table into a disc-based table at"}],
               0,false},
              {text,[6,42,78,111,100,101,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "LThis function can also be used to change the storage type of the table named"}],
               0,false},
              {text,"\b*schema*"},
              {sep,[{text," . The schema table can only have"}],0,false},
              {text,"\f*ram_copies*"},
              {sep,[{text,[2,111,114]}],0,false},
              {text,"\r*disc_copies*"},
              {sep,
               [{text,
                 "9as the storage type. If the storage type of the schema is"}],
               0,false},
              {text,"\f*ram_copies*"},
              {sep,
               [{text,"3, no other table can be disc-resident on that node."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "I## change_table_load_order(Tab, LoadOrder) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,".Changes the load order priority for the table."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        "=<a name=\"change_table_load_order\">change_table_load_order</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[3,84,104,101]}],0,false},
              {text,"\v*LoadOrder*"},
              {sep,
               [{text,
                 [22,112,114,105,111,114,105,116,121,32,105,115,32,98,121,32,
                  100,101,102,97,117,108,116]}],
               0,false},
              {text,[3,42,48,42]},
              {sep,
               [{text,
                 "A(zero) but can be set to any integer. The tables with the highest"}],
               0,false},
              {text,"\v*LoadOrder*"},
              {sep,[{text,"%priority are loaded first at startup."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "F## change_table_majority(Tab, Majority) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"1Changes the majority check setting for the table."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\n*Majority*"},
              {sep,
               [{text,
                 [29,109,117,115,116,32,98,101,32,97,32,98,111,111,108,101,97,
                  110,46,32,68,101,102,97,117,108,116,32,105,115]}],
               0,false},
              {text,[7,42,102,97,108,115,101,42]},
              {sep,[{text,[6,46,32,87,104,101,110]}],0,false},
              {text,[6,42,116,114,117,101,42]},
              {sep,
               [{text,
                 "n, a majority of the table replicas must be available for an update to succeed. When used on fragmented tables,"}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,
               [{text,
                 "kmust be the base table name. Directly changing the majority setting on individual fragments is not allowed."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"2## clear_table(Tab) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [31,68,101,108,101,116,101,115,32,97,108,108,32,101,110,116,114,
              105,101,115,32,105,110,32,97,32,116,97,98,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"%<a name=\"clear_table\">clear_table</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," Deletes all entries in the table"}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"2## create_schema(DiscNodes) -> ok | {error,Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Creates a new schema on the specified nodes."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,")<a name=\"create_schema\">create_schema</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [265,67,114,101,97,116,101,115,32,97,32,110,101,119,32,100,97,
                116,97,98,97,115,101,32,111,110,32,100,105,115,99,46,32,86,97,
                114,105,111,117,115,32,102,105,108,101,115,32,97,114,101,32,
                99,114,101,97,116,101,100,32,105,110,32,116,104,101,32,108,
                111,99,97,108,32,77,110,101,115,105,97,32,100,105,114,101,99,
                116,111,114,121,32,111,102,32,101,97,99,104,32,110,111,100,
                101,46,32,78,111,116,105,99,101,32,116,104,97,116,32,116,104,
                101,32,100,105,114,101,99,116,111,114,121,32,109,117,115,116,
                32,98,101,32,117,110,105,113,117,101,32,102,111,114,32,101,97,
                99,104,32,110,111,100,101,46,32,84,119,111,32,110,111,100,101,
                115,32,109,117,115,116,32,110,101,118,101,114,32,115,104,97,
                114,101,32,116,104,101,32,115,97,109,101,32,100,105,114,101,
                99,116,111,114,121,46,32,73,102,32,112,111,115,115,105,98,108,
                101,44,32,117,115,101,32,97,32,108,111,99,97,108,32,100,105,
                115,99,32,100,101,118,105,99,101,32,116,111,32,105,109,112,
                114,111,118,101,32,112,101,114,102,111,114,109,97,110,99,101,
                46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [24,42,109,110,101,115,105,97,58,99,114,101,97,116,101,95,115,
                99,104,101,109,97,47,49,42]},
              {sep,
               [{text,")fails if any of the Erlang nodes given as"}],
               0,false},
              {text,"\v*DiscNodes*"},
              {sep,
               [{text,
                 "jare not alive, if Mnesia is running on any of the nodes, or if any of the nodes already have a schema. Use"}],
               0,false},
              {text,
               [24,42,109,110,101,115,105,97,58,100,101,108,101,116,101,95,
                115,99,104,101,109,97,47,49,42]},
              {sep,[{text,"!to get rid of old faulty schemas."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "6Notice that only nodes with disc are to be included in"}],
               0,false},
              {text,"\v*DiscNodes*"},
              {sep,
               [{text,
                 "r. Disc-less nodes, that is, nodes where all tables including the schema only resides in RAM, must not be included."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "A## create_table(Name, TabDef) -> {atomic, ok} | {aborted, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,67,114,101,97,116,101,115,32,97,32,77,110,101,115,105,97,
                32,116,97,98,108,101,32,99,97,108,108,101,100]}],
             0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text,"(with properties as described by argument"}],0,false},
            {text,"\b*TabDef*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"'<a name=\"create_table\">create_table</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [29,67,114,101,97,116,101,115,32,97,32,77,110,101,115,105,97,
                  32,116,97,98,108,101,32,99,97,108,108,101,100]}],
               0,false},
              {text,[6,42,78,97,109,101,42]},
              {sep,
               [{text,
                 [21,97,99,99,111,114,100,105,110,103,32,116,111,32,97,114,
                  103,117,109,101,110,116]}],
               0,false},
              {text,"\b*TabDef*"},
              {sep,
               [{text,
                 [29,46,32,84,104,105,115,32,108,105,115,116,32,109,117,115,
                  116,32,98,101,32,97,32,108,105,115,116,32,111,102]}],
               0,false},
              {text,[15,42,123,73,116,101,109,44,32,86,97,108,117,101,125,42]},
              {sep,
               [{text,"/tuples, where the following values are allowed:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               [21,42,123,97,99,99,101,115,115,95,109,111,100,
                                101,44,32,65,116,111,109,125,42]},
                              {sep,
                               [{text,
                                 "(. The access mode is by default the atom"}],
                               0,false},
                              {text,"\f*read_write*"},
                              {sep,
                               [{text,"\"but it can also be set to the atom"}],
                               0,false},
                              {text,"\v*read_only*"},
                              {sep,[{text,[4,46,32,73,102]}],0,false},
                              {text,"\f*AccessMode*"},
                              {sep,[{text,"\tis set to"}],0,false},
                              {text,"\v*read_only*"},
                              {sep,
                               [{text,
                                 "+, updates to the table cannot be performed."}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 [31,65,116,32,115,116,97,114,116,117,112,44,
                                  32,77,110,101,115,105,97,32,97,108,119,97,
                                  121,115,32,108,111,97,100,115]}],
                               0,false},
                              {text,"\v*read_only*"},
                              {sep,
                               [{text,
                                 [151,116,97,98,108,101,32,108,111,99,97,108,
                                  108,121,32,114,101,103,97,114,100,108,101,
                                  115,115,32,111,102,32,119,104,101,110,32,97,
                                  110,100,32,105,102,32,77,110,101,115,105,97,
                                  32,105,115,32,116,101,114,109,105,110,97,
                                  116,101,100,32,111,110,32,111,116,104,101,
                                  114,32,110,111,100,101,115,46,32,84,104,105,
                                  115,32,97,114,103,117,109,101,110,116,32,
                                  114,101,116,117,114,110,115,32,116,104,101,
                                  32,97,99,99,101,115,115,32,109,111,100,101,
                                  32,111,102,32,116,104,101,32,116,97,98,108,
                                  101,46,32,84,104,101,32,97,99,99,101,115,
                                  115,32,109,111,100,101,32,99,97,110,32,98,
                                  101]}],
                               0,false},
                              {text,"\v*read_only*"},
                              {sep,[{text,[2,111,114]}],0,false},
                              {text,"\f*read_write*"},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}}],
                      0,false}],
                    0,false},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               [24,42,123,97,116,116,114,105,98,117,116,101,
                                115,44,32,65,116,111,109,76,105,115,116,125,
                                42]},
                              {sep,
                               [{text,
                                 "dis a list of the attribute names for the records that are supposed to populate the table. Default is"}],
                               0,false},
                              {text,"\f*[key, val]*"},
                              {sep,
                               [{text,
                                 "J. The table must at least have one extra attribute in addition to the key."}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 [144,87,104,101,110,32,97,99,99,101,115,115,
                                  105,110,103,32,115,105,110,103,108,101,32,
                                  97,116,116,114,105,98,117,116,101,115,32,
                                  105,110,32,97,32,114,101,99,111,114,100,44,
                                  32,105,116,32,105,115,32,110,111,116,32,110,
                                  101,99,101,115,115,97,114,121,44,32,111,114,
                                  32,101,118,101,110,32,114,101,99,111,109,
                                  109,101,110,100,101,100,44,32,116,111,32,
                                  104,97,114,100,32,99,111,100,101,32,97,110,
                                  121,32,97,116,116,114,105,98,117,116,101,32,
                                  110,97,109,101,115,32,97,115,32,97,116,111,
                                  109,115,46,32,85,115,101,32,99,111,110,115,
                                  116,114,117,99,116]}],
                               0,false},
                              {text,"!*record_info(fields, RecordName)*"},
                              {sep,
                               [{text,
                                 "+instead. It can be used for records of type"}],
                               0,false},
                              {text,"\f*RecordName*"},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              [25,42,123,100,105,115,99,95,99,111,112,105,101,
                               115,44,32,78,111,100,101,108,105,115,116,125,
                               42]},
                             {sep,
                              [{text,[7,44,32,119,104,101,114,101]}],
                              0,false},
                             {text,"\n*Nodelist*"},
                             {sep,
                              [{text,
                                "fis a list of the nodes where this table is supposed to have disc copies. If a table replica is of type"}],
                              0,false},
                             {text,"\r*disc_copies*"},
                             {sep,
                              [{text,
                                "t, all write operations on this particular replica of the table are written to disc and to the RAM copy of the table."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "1It is possible to have a replicated table of type"}],
                              0,false},
                             {text,"\r*disc_copies*"},
                             {sep,
                              [{text,
                                "8on one node and another type on another node. Default is"}],
                              0,false},
                             {text,[4,42,91,93,42]},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      [30,42,123,100,105,115,99,95,111,110,108,121,95,99,111,
                       112,105,101,115,44,32,78,111,100,101,108,105,115,116,
                       125,42]},
                     {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                     {text,"\n*Nodelist*"},
                     {sep,
                      [{text,
                        ";is a list of the nodes where this table is supposed to have"}],
                      0,false},
                     {text,
                      [18,42,100,105,115,99,95,111,110,108,121,95,99,111,112,
                       105,101,115,42]},
                     {sep,
                      [{text,
                        "Ã. A disc only table replica is kept on disc only and unlike the other replica types, the contents of the replica do not reside in RAM. These replicas are considerably slower than replicas held in RAM."}],
                      0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [18,42,123,105,110,100,101,120,44,32,73,110,116,108,105,
                      115,116,125,42]},
                    {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                    {text,"\t*Intlist*"},
                    {sep,
                     [{text,
                       "yis a list of attribute names (atoms) or record fields for which Mnesia is to build and maintain an extra index table. The"}],
                     0,false},
                    {text,[5,42,113,108,99,42]},
                    {sep,
                     [{text,
                       [14,113,117,101,114,121,32,99,111,109,112,105,108,101,
                        114]}],
                     0,false},
                    {text,[7,42,42,109,97,121,42,42]},
                    {sep,
                     [{text,
                       ";be able to optimize queries if there are indexes available."}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [23,42,123,108,111,97,100,95,111,114,100,101,114,44,32,73,
                     110,116,101,103,101,114,125,42]},
                   {sep,
                    [{text,"'. The load order priority is by default"}],
                    0,false},
                   {text,[3,42,48,42]},
                   {sep,
                    [{text,
                      "r(zero) but can be set to any integer. The tables with the highest load order priority are loaded first at startup."}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [18,42,123,109,97,106,111,114,105,116,121,44,32,70,108,97,
                    103,125,42]},
                  {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                  {text,[6,42,70,108,97,103,42]},
                  {sep,
                   [{text,
                     [21,109,117,115,116,32,98,101,32,97,32,98,111,111,108,
                      101,97,110,46,32,73,102]}],
                   0,false},
                  {text,[6,42,116,114,117,101,42]},
                  {sep,
                   [{text,
                     "Ã, any (non-dirty) update to the table is aborted, unless a majority of the table replicas are available for the commit. When used on a fragmented table, all fragments are given the same the same majority setting."}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [24,42,123,114,97,109,95,99,111,112,105,101,115,44,32,78,
                   111,100,101,108,105,115,116,125,42]},
                 {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                 {text,"\n*Nodelist*"},
                 {sep,
                  [{text,
                    "_is a list of the nodes where this table is supposed to have RAM copies. A table replica of type"}],
                  0,false},
                 {text,"\f*ram_copies*"},
                 {sep,
                  [{text,
                    "2is not written to disc on a per transaction basis."}],
                  0,false},
                 {text,"\f*ram_copies*"},
                 {sep,
                  [{text,"0replicas can be dumped to disc with the function"}],
                  0,false},
                 {text,
                  [26,42,109,110,101,115,105,97,58,100,117,109,112,95,116,97,
                   98,108,101,115,40,84,97,98,115,41,42]},
                 {sep,
                  [{text,"%. Default value for this attribute is"}],
                  0,false},
                 {text,"\n*[node()]*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [21,42,123,114,101,99,111,114,100,95,110,97,109,101,44,32,78,
                  97,109,101,125,42]},
                {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                {text,[6,42,78,97,109,101,42]},
                {sep,
                 [{text,
                   [138,109,117,115,116,32,98,101,32,97,110,32,97,116,111,109,
                    46,32,65,108,108,32,114,101,99,111,114,100,115,32,115,116,
                    111,114,101,100,32,105,110,32,116,104,101,32,116,97,98,
                    108,101,32,109,117,115,116,32,104,97,118,101,32,116,104,
                    105,115,32,110,97,109,101,32,97,115,32,116,104,101,32,102,
                    105,114,115,116,32,101,108,101,109,101,110,116,46,32,73,
                    116,32,100,101,102,97,117,108,116,115,32,116,111,32,116,
                    104,101,32,115,97,109,101,32,110,97,109,101,32,97,115,32,
                    116,104,101,32,116,97,98,108,101,32,110,97,109,101,46]}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [20,42,123,115,110,109,112,44,32,83,110,109,112,83,116,114,
                 117,99,116,125,42]},
               {sep,
                [{text,
                  [22,46,32,70,111,114,32,97,32,100,101,115,99,114,105,112,
                   116,105,111,110,32,111,102]}],
                0,false},
               {text,"\f*SnmpStruct*"},
               {sep,[{text,[5,44,32,115,101,101]}],0,false},
               {text,
                [26,42,109,110,101,115,105,97,58,115,110,109,112,95,111,112,
                 101,110,95,116,97,98,108,101,47,50,42]},
               {sep,[{text,"!. If this attribute is present in"}],0,false},
               {text,"\t*ArgList*"},
               {sep,[{text,[2,116,111]}],0,false},
               {text,
                [23,42,109,110,101,115,105,97,58,99,114,101,97,116,101,95,116,
                 97,98,108,101,47,50,42]},
               {sep,
                [{text,
                  [303,44,32,116,104,101,32,116,97,98,108,101,32,105,115,32,
                   105,109,109,101,100,105,97,116,101,108,121,32,97,99,99,101,
                   115,115,105,98,108,101,32,98,121,32,83,78,77,80,46,32,84,
                   104,101,114,101,102,111,114,101,32,97,112,112,108,105,99,
                   97,116,105,111,110,115,32,116,104,97,116,32,117,115,101,32,
                   83,78,77,80,32,116,111,32,109,97,110,105,112,117,108,97,
                   116,101,32,97,110,100,32,99,111,110,116,114,111,108,32,116,
                   104,101,32,115,121,115,116,101,109,32,99,97,110,32,98,101,
                   32,100,101,115,105,103,110,101,100,32,101,97,115,105,108,
                   121,44,32,115,105,110,99,101,32,77,110,101,115,105,97,32,
                   112,114,111,118,105,100,101,115,32,97,32,100,105,114,101,
                   99,116,32,109,97,112,112,105,110,103,32,98,101,116,119,101,
                   101,110,32,116,104,101,32,108,111,103,105,99,97,108,32,116,
                   97,98,108,101,115,32,116,104,97,116,32,109,97,107,101,32,
                   117,112,32,97,110,32,83,78,77,80,32,99,111,110,116,114,111,
                   108,32,97,112,112,108,105,99,97,116,105,111,110,32,97,110,
                   100,32,116,104,101,32,112,104,121,115,105,99,97,108,32,100,
                   97,116,97,32,116,104,97,116,32,109,97,107,101,115,32,117,
                   112,32,97,32,77,110,101,115,105,97,32,116,97,98,108,101,
                   46]}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,".*{storage_properties, [{Backend, Properties}]*"},
                     {sep,
                      [{text,
                        "1forwards more properties to the back end storage."}],
                      0,false},
                     {text,"\t*Backend*"},
                     {sep,
                      [{text,
                        [16,99,97,110,32,99,117,114,114,101,110,116,108,121,
                         32,98,101]}],
                      0,false},
                     {text,[5,42,101,116,115,42]},
                     {sep,[{text,[2,111,114]}],0,false},
                     {text,[6,42,100,101,116,115,42]},
                     {sep,[{text,[1,46]}],0,false},
                     {text,"\f*Properties*"},
                     {sep,
                      [{text,
                        "His a list of options sent to the back end storage during table creation."}],
                      0,false},
                     {text,"\f*Properties*"},
                     {sep,
                      [{text,
                        "9cannot contain properties already used by Mnesia, such as"}],
                      0,false},
                     {text,[6,42,116,121,112,101,42]},
                     {sep,[{text,[2,111,114]}],0,false},
                     {text,"\r*named_table*"},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,[{sep,[{text,"\fFor example:"}],0,false}],0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      "Â¬\nmnesia:create_table(table, [{ram_copies, [node()]}, {disc_only_copies, nodes()},\n       {storage_properties,\n        [{ets, [compressed]}, {dets, [{auto_save, 5000}]} ]}])"}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [14,42,123,116,121,112,101,44,32,84,121,112,101,125,42]},
                    {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                    {text,[6,42,84,121,112,101,42]},
                    {sep,[{text,"\emust be either of the atoms"}],0,false},
                    {text,[5,42,115,101,116,42]},
                    {sep,[{text,[1,44]}],0,false},
                    {text,"\r*ordered_set*"},
                    {sep,[{text,[4,44,32,111,114]}],0,false},
                    {text,[5,42,98,97,103,42]},
                    {sep,[{text,"\f. Default is"}],0,false},
                    {text,[5,42,115,101,116,42]},
                    {sep,[{text,[6,46,32,73,110,32,97]}],0,false},
                    {text,[5,42,115,101,116,42]},
                    {sep,
                     [{text,"$, all records have unique keys. In a"}],
                     0,false},
                    {text,[5,42,98,97,103,42]},
                    {sep,
                     [{text,
                       [153,44,32,115,101,118,101,114,97,108,32,114,101,99,
                        111,114,100,115,32,99,97,110,32,104,97,118,101,32,116,
                        104,101,32,115,97,109,101,32,107,101,121,44,32,98,117,
                        116,32,116,104,101,32,114,101,99,111,114,100,32,99,
                        111,110,116,101,110,116,32,105,115,32,117,110,105,113,
                        117,101,46,32,73,102,32,97,32,110,111,110,45,117,110,
                        105,113,117,101,32,114,101,99,111,114,100,32,105,115,
                        32,115,116,111,114,101,100,44,32,116,104,101,32,111,
                        108,100,32,99,111,110,102,108,105,99,116,105,110,103,
                        32,114,101,99,111,114,100,115,32,97,114,101,32,111,
                        118,101,114,119,114,105,116,116,101,110,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [21,78,111,116,105,99,101,32,116,104,97,116,32,99,117,
                        114,114,101,110,116,108,121]}],
                     0,false},
                    {text,"\r*ordered_set*"},
                    {sep,
                     [{text,
                       [20,105,115,32,110,111,116,32,115,117,112,112,111,114,
                        116,101,100,32,102,111,114]}],
                     0,false},
                    {text,
                     [18,42,100,105,115,99,95,111,110,108,121,95,99,111,112,
                      105,101,115,42]},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [23,42,123,108,111,99,97,108,95,99,111,110,116,101,110,116,44,32,
              66,111,111,108,125,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,[6,42,66,111,111,108,42]},
            {sep,[{text,[2,105,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,"\f. Default is"}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"+For example, the following call creates the"}],
               0,false},
              {text,"\b*person*"},
              {sep,
               [{text,
                 "7table (defined earlier) and replicates it on two nodes:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "k\nmnesia:create_table(person,\n    [{ram_copies, [N1, N2]},\n     {attributes, record_info(fields, person)}])."}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "WIf it is required that Mnesia must build and maintain an extra index table on attribute"}],
               0,false},
              {text,"\t*address*"},
              {sep,[{text,"\nof all the"}],0,false},
              {text,"\b*person*"},
              {sep,
               [{text,
                 "Krecords that are inserted in the table, the following code would be issued:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [136,10,109,110,101,115,105,97,58,99,114,101,97,116,101,95,116,
                97,98,108,101,40,112,101,114,115,111,110,44,10,32,32,32,32,91,
                123,114,97,109,95,99,111,112,105,101,115,44,32,91,78,49,44,32,
                78,50,93,125,44,10,32,32,32,32,32,123,105,110,100,101,120,44,
                32,91,97,100,100,114,101,115,115,93,125,44,10,32,32,32,32,32,
                123,97,116,116,114,105,98,117,116,101,115,44,32,114,101,99,
                111,114,100,95,105,110,102,111,40,102,105,101,108,100,115,44,
                32,112,101,114,115,111,110,41,125,93,41,46,10,32,32,32]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [20,84,104,101,32,115,112,101,99,105,102,105,99,97,116,105,
                  111,110,32,111,102]}],
               0,false},
              {text,[7,42,105,110,100,101,120,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,"\f*attributes*"},
              {sep,
               [{text,
                 [20,99,97,110,32,98,101,32,104,97,114,100,45,99,111,100,101,
                  100,32,97,115]}],
               0,false},
              {text,[14,42,123,105,110,100,101,120,44,32,91,50,93,125,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,"6*{attributes, [name, age, address, salary, children]}*"},
              {sep,
               [{text,
                 [15,44,32,114,101,115,112,101,99,116,105,118,101,108,121,
                  46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [23,42,109,110,101,115,105,97,58,99,114,101,97,116,101,95,116,
                97,98,108,101,47,50,42]},
              {sep,
               [{text,
                 [29,119,114,105,116,101,115,32,114,101,99,111,114,100,115,32,
                  105,110,116,111,32,116,104,101,32,116,97,98,108,101]}],
               0,false},
              {text,"\b*schema*"},
              {sep,
               [{text,
                 "Ã. This function, and all other schema manipulation functions, are implemented with the normal transaction management system. This guarantees that schema updates are performed on all nodes in an atomic manner."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"6## deactivate_checkpoint(Name) -> ok | {error, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [25,68,101,97,99,116,105,118,97,116,101,115,32,97,32,99,104,101,
              99,107,112,111,105,110,116,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"9<a name=\"deactivate_checkpoint\">deactivate_checkpoint</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "Ã¤The checkpoint is automatically deactivated when some of the tables involved have no retainer attached to them. This can occur when nodes go down or when a replica is deleted. Checkpoints are also deactivated with this function."}],
               0,false},
              {text,[6,42,78,97,109,101,42]},
              {sep,[{text,"$is the name of an active checkpoint."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,";## del_table_copy(Tab, Node) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [28,68,101,108,101,116,101,115,32,116,104,101,32,114,101,112,
                108,105,99,97,32,111,102,32,116,97,98,108,101]}],
             0,false},
            {text,[5,42,84,97,98,42]},
            {sep,[{text,[7,97,116,32,110,111,100,101]}],0,false},
            {text,[6,42,78,111,100,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"+<a name=\"del_table_copy\">del_table_copy</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [28,68,101,108,101,116,101,115,32,116,104,101,32,114,101,112,
                  108,105,99,97,32,111,102,32,116,97,98,108,101]}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[7,97,116,32,110,111,100,101]}],0,false},
              {text,[6,42,78,111,100,101,42]},
              {sep,
               [{text,
                 "U. When the last replica is deleted with this function, the table disappears entirely."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "EThis function can also be used to delete a replica of the table named"}],
               0,false},
              {text,"\b*schema*"},
              {sep,
               [{text,
                 "X. The Mnesia node is then removed. Notice that Mnesia must be stopped on the node first."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "@## del_table_index(Tab, AttrName) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [28,68,101,108,101,116,101,115,32,97,110,32,105,110,100,101,120,
              32,105,110,32,97,32,116,97,98,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"del_table_index\">del_table_index</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"(Deletes the index on attribute with name"}],
               0,false},
              {text,"\n*AttrName*"},
              {sep,[{text,"\vin a table."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"/## delete({Tab, Key}) -> transaction abort | ok"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [28,68,101,108,101,116,101,115,32,97,108,108,32,114,101,99,111,
                114,100,115,32,105,110,32,116,97,98,108,101]}],
             0,false},
            {text,[5,42,84,97,98,42]},
            {sep,[{text,"\fwith the key"}],0,false},
            {text,[5,42,75,101,121,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [31,60,97,32,110,97,109,101,61,34,100,101,108,101,116,101,95,50,34,62,
         100,101,108,101,116,101,95,50,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text," *mnesia:delete(Tab, Key, write)*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"7## delete(Tab, Key, LockKind) -> transaction abort | ok"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [28,68,101,108,101,116,101,115,32,97,108,108,32,114,101,99,111,
                114,100,115,32,105,110,32,116,97,98,108,101]}],
             0,false},
            {text,[5,42,84,97,98,42]},
            {sep,[{text,"\fwith the key"}],0,false},
            {text,[5,42,75,101,121,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [31,60,97,32,110,97,109,101,61,34,100,101,108,101,116,101,95,51,34,62,
         100,101,108,101,116,101,95,51,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [28,68,101,108,101,116,101,115,32,97,108,108,32,114,101,99,
                  111,114,100,115,32,105,110,32,116,97,98,108,101]}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,"\fwith the key"}],0,false},
              {text,[5,42,75,101,121,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "EThe semantics of this function is context-sensitive. For details, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 "4. In transaction-context, it acquires a lock of type"}],
               0,false},
              {text,"\n*LockKind*"},
              {sep,
               [{text,"(in the record. Currently, the lock types"}],
               0,false},
              {text,[7,42,119,114,105,116,101,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,[14,42,115,116,105,99,107,121,95,119,114,105,116,101,42]},
              {sep,
               [{text,
                 [14,97,114,101,32,115,117,112,112,111,114,116,101,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"2## delete_object(Record) -> transaction abort | ok"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [16,68,101,108,101,116,101,32,97,32,114,101,99,111,114,100,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"delete_object_1\">delete_object_1</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,"**mnesia:delete_object(Tab, Record, write)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [20,42,101,108,101,109,101,110,116,40,49,44,32,82,101,99,111,
                114,100,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "A## delete_object(Tab, Record, LockKind) -> transaction abort | ok"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [17,68,101,108,101,116,101,115,32,97,32,114,101,99,111,114,100,
              46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"delete_object_3\">delete_object_3</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [21,73,102,32,97,32,116,97,98,108,101,32,105,115,32,111,102,
                  32,116,121,112,101]}],
               0,false},
              {text,[5,42,98,97,103,42]},
              {sep,
               [{text,
                 "v, it can sometimes be needed to delete only some of the records with a certain key. This can be done with the function"}],
               0,false},
              {text,
               [17,42,100,101,108,101,116,101,95,111,98,106,101,99,116,47,51,
                42]},
              {sep,
               [{text,
                 "6. A complete record must be supplied to this function."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "EThe semantics of this function is context-sensitive. For details, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 "4. In transaction-context, it acquires a lock of type"}],
               0,false},
              {text,"\n*LockKind*"},
              {sep,
               [{text,"(on the record. Currently, the lock types"}],
               0,false},
              {text,[7,42,119,114,105,116,101,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,[14,42,115,116,105,99,107,121,95,119,114,105,116,101,42]},
              {sep,
               [{text,
                 [14,97,114,101,32,115,117,112,112,111,114,116,101,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"2## delete_schema(DiscNodes) -> ok | {error,Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"&Deletes the schema on the given nodes."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,")<a name=\"delete_schema\">delete_schema</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [31,68,101,108,101,116,101,115,32,97,32,100,97,116,97,98,97,
                  115,101,32,99,114,101,97,116,101,100,32,119,105,116,104]}],
               0,false},
              {text,
               [24,42,109,110,101,115,105,97,58,99,114,101,97,116,101,95,115,
                99,104,101,109,97,47,49,42]},
              {sep,[{text,[1,46]}],0,false},
              {text,
               [24,42,109,110,101,115,105,97,58,100,101,108,101,116,101,95,
                115,99,104,101,109,97,47,49,42]},
              {sep,
               [{text,")fails if any of the Erlang nodes given as"}],
               0,false},
              {text,"\v*DiscNodes*"},
              {sep,
               [{text,
                 ";are not alive, or if Mnesia is running on any of the nodes."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [136,65,102,116,101,114,32,116,104,101,32,100,97,116,97,98,
                  97,115,101,32,105,115,32,100,101,108,101,116,101,100,44,32,
                  105,116,32,99,97,110,32,115,116,105,108,108,32,98,101,32,
                  112,111,115,115,105,98,108,101,32,116,111,32,115,116,97,114,
                  116,32,77,110,101,115,105,97,32,97,115,32,97,32,100,105,115,
                  99,45,108,101,115,115,32,110,111,100,101,46,32,84,104,105,
                  115,32,100,101,112,101,110,100,115,32,111,110,32,104,111,
                  119,32,99,111,110,102,105,103,117,114,97,116,105,111,110,32,
                  112,97,114,97,109,101,116,101,114]}],
               0,false},
              {text,
               [17,42,115,99,104,101,109,97,95,108,111,99,97,116,105,111,110,
                42]},
              {sep,[{text,[7,105,115,32,115,101,116,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,
             [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
              105,110,103,34]},
            {sep,
             [{text,[4,32,32,32,32]},
              {sep,
               [{sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "sUse this function with extreme caution, as it makes existing persistent data obsolete. Think twice before using it."}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false}],
               0,true}],
             0,false}},
           {text,[0]}},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"8## delete_table(Tab) -> {aborted, Reason} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,")Deletes permanently all replicas of table"}],
             0,false},
            {text,[5,42,84,97,98,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"'<a name=\"delete_table\">delete_table</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,")Permanently deletes all replicas of table"}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,";## dirty_all_keys(Tab) -> KeyList | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"*Dirty search for all record keys in table."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"delete_all_keys\">delete_all_keys</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," Dirty equivalent of the function"}],0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,108,108,95,107,101,121,115,
                47,49,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,";## dirty_delete({Tab, Key}) -> ok | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [25,68,105,114,116,121,32,100,101,108,101,116,101,32,111,102,32,
              97,32,114,101,99,111,114,100,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"'<a name=\"dirty_delete\">dirty_delete</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,
               [31,42,109,110,101,115,105,97,58,100,105,114,116,121,95,100,
                101,108,101,116,101,40,84,97,98,44,32,75,101,121,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"9## dirty_delete(Tab, Key) -> ok | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [25,68,105,114,116,121,32,100,101,108,101,116,101,32,111,102,32,
              97,32,114,101,99,111,114,100,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," Dirty equivalent of the function"}],0,false},
              {text,
               [17,42,109,110,101,115,105,97,58,100,101,108,101,116,101,47,51,
                42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [30,35,35,32,100,105,114,116,121,95,100,101,108,101,116,101,95,111,
          98,106,101,99,116,40,82,101,99,111,114,100,41]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [25,68,105,114,116,121,32,100,101,108,101,116,101,32,111,102,32,
              97,32,114,101,99,111,114,100,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"9<a name=\"dirty_delete_object_1\">dirty_delete_object_1</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,")*mnesia:dirty_delete_object(Tab, Record)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [20,42,101,108,101,109,101,110,116,40,49,44,32,82,101,99,111,
                114,100,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"### dirty_delete_object(Tab, Record)"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [25,68,105,114,116,121,32,100,101,108,101,116,101,32,111,102,32,
              97,32,114,101,99,111,114,100,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," Dirty equivalent of the function"}],0,false},
              {text,
               [24,42,109,110,101,115,105,97,58,100,101,108,101,116,101,95,
                111,98,106,101,99,116,47,51,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"5## dirty_first(Tab) ->  Key | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"0Returns the key for the first record in a table."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"%<a name=\"dirty_first\">dirty_first</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\nRecords in"}],0,false},
              {text,[5,42,115,101,116,42]},
              {sep,[{text,[2,111,114]}],0,false},
              {text,[5,42,98,97,103,42]},
              {sep,
               [{text,
                 "Â¨tables are not ordered. However, there is an ordering of the records that is unknown to the user. Therefore, a table can be traversed by this function with the function"}],
               0,false},
              {text,
               [21,42,109,110,101,115,105,97,58,100,105,114,116,121,95,110,
                101,120,116,47,50,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "DIf there are no records in the table, this function returns the atom"}],
               0,false},
              {text,
               [17,42,39,36,101,110,100,95,111,102,95,116,97,98,108,101,39,
                42]},
              {sep,
               [{text,
                 "k. It is therefore highly undesirable, but not disallowed, to use this atom as the key for any user records."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,")## dirty_index_match_object(Pattern, Pos)"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," Dirty pattern match using index."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        "C<a name=\"dirty_index_match_object_2\">dirty_index_match_object_2</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[6,83,116,97,114,116,115]}],0,false},
              {text,"4*mnesia:dirty_index_match_object(Tab, Pattern, Pos)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [21,42,101,108,101,109,101,110,116,40,49,44,32,80,97,116,116,
                101,114,110,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,".## dirty_index_match_object(Tab, Pattern, Pos)"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," Dirty pattern match using index."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," Dirty equivalent of the function"}],0,false},
              {text,
               [29,42,109,110,101,115,105,97,58,105,110,100,101,120,95,109,97,
                116,99,104,95,111,98,106,101,99,116,47,52,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"+## dirty_index_read(Tab, SecondaryKey, Pos)"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [23,68,105,114,116,121,32,114,101,97,100,32,117,115,105,110,103,
              32,105,110,100,101,120,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"/<a name=\"dirty_index_read\">dirty_index_read</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," Dirty equivalent of the function"}],0,false},
              {text,
               [21,42,109,110,101,115,105,97,58,105,110,100,101,120,95,114,
                101,97,100,47,51,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"3## dirty_last(Tab) -> Key | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"/Returns the key for the last record in a table."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"#<a name=\"dirty_last\">dirty_last</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,87,111,114,107,115,32,101,120,97,99,116,108,121,32,108,
                  105,107,101]}],
               0,false},
              {text,
               [22,42,109,110,101,115,105,97,58,100,105,114,116,121,95,102,
                105,114,115,116,47,49,42]},
              {sep,
               [{text,
                 "8but returns the last object in Erlang term order for the"}],
               0,false},
              {text,"\r*ordered_set*"},
              {sep,[{text,"&table type. For all other table types,"}],0,false},
              {text,
               [22,42,109,110,101,115,105,97,58,100,105,114,116,121,95,102,
                105,114,115,116,47,49,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,
               [21,42,109,110,101,115,105,97,58,100,105,114,116,121,95,108,97,
                115,116,47,49,42]},
              {sep,[{text,"\rare synonyms."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "F## dirty_match_object(Pattern) -> RecordList | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [28,68,105,114,116,121,32,112,97,116,116,101,114,110,32,109,97,
              116,99,104,32,112,97,116,116,101,114,110,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"7<a name=\"dirty_match_object_1\">dirty_match_object_1</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,")*mnesia:dirty_match_object(Tab, Pattern)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [21,42,101,108,101,109,101,110,116,40,49,44,32,80,97,116,116,
                101,114,110,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "K## dirty_match_object(Tab, Pattern) -> RecordList | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [28,68,105,114,116,121,32,112,97,116,116,101,114,110,32,109,97,
              116,99,104,32,112,97,116,116,101,114,110,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," Dirty equivalent of the function"}],0,false},
              {text,
               [23,42,109,110,101,115,105,97,58,109,97,116,99,104,95,111,98,
                106,101,99,116,47,51,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"8## dirty_next(Tab, Key) -> Key | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [31,82,101,116,117,114,110,32,116,104,101,32,110,101,120,116,32,
              107,101,121,32,105,110,32,97,32,116,97,98,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"#<a name=\"dirty_next\">dirty_next</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "|Traverses a table and performs operations on all records in the table. When the end of the table is reached, the special key"}],
               0,false},
              {text,
               [17,42,39,36,101,110,100,95,111,102,95,116,97,98,108,101,39,
                42]},
              {sep,
               [{text,
                 "Ã§is returned. Otherwise, the function returns a key that can be used to read the actual record. The behavior is undefined if another Erlang process performs write operations on the table while it is being traversed with the function"}],
               0,false},
              {text,
               [21,42,109,110,101,115,105,97,58,100,105,114,116,121,95,110,
                101,120,116,47,50,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"8## dirty_prev(Tab, Key) -> Key | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$Returns the previous key in a table."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"#<a name=\"dirty_prev\">dirty_prev</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,87,111,114,107,115,32,101,120,97,99,116,108,121,32,108,
                  105,107,101]}],
               0,false},
              {text,
               [21,42,109,110,101,115,105,97,58,100,105,114,116,121,95,110,
                101,120,116,47,50,42]},
              {sep,
               [{text,
                 "<but returns the previous object in Erlang term order for the"}],
               0,false},
              {text,"\r*ordered_set*"},
              {sep,[{text,"&table type. For all other table types,"}],0,false},
              {text,
               [21,42,109,110,101,115,105,97,58,100,105,114,116,121,95,110,
                101,120,116,47,50,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,
               [21,42,109,110,101,115,105,97,58,100,105,114,116,121,95,112,
                114,101,118,47,50,42]},
              {sep,[{text,"\rare synonyms."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "?## dirty_read({Tab, Key}) -> ValueList | exit({aborted, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [22,68,105,114,116,121,32,114,101,97,100,32,111,102,32,114,101,
              99,111,114,100,115,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"#<a name=\"dirty_read\">dirty_read</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,
               [29,42,109,110,101,115,105,97,58,100,105,114,116,121,95,114,
                101,97,100,40,84,97,98,44,32,75,101,121,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "=## dirty_read(Tab, Key) -> ValueList | exit({aborted, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [22,68,105,114,116,121,32,114,101,97,100,32,111,102,32,114,101,
              99,111,114,100,115,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," Dirty equivalent of the function"}],0,false},
              {text,[15,42,109,110,101,115,105,97,58,114,101,97,100,47,51,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "E## dirty_select(Tab, MatchSpec) -> ValueList | exit({aborted, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [28,68,105,114,116,121,32,109,97,116,99,104,101,115,32,116,104,
                101,32,111,98,106,101,99,116,115,32,105,110]}],
             0,false},
            {text,[5,42,84,97,98,42]},
            {sep,[{text,[7,97,103,97,105,110,115,116]}],0,false},
            {text,"\v*MatchSpec*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"'<a name=\"dirty_select\">dirty_select</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," Dirty equivalent of the function"}],0,false},
              {text,
               [17,42,109,110,101,115,105,97,58,115,101,108,101,99,116,47,50,
                42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "@## dirty_slot(Tab, Slot) -> RecordList | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"4Returns the list of records that are associated with"}],
             0,false},
            {text,[6,42,83,108,111,116,42]},
            {sep,[{text,"\vin a table."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"#<a name=\"dirty_slot\">dirty_slot</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "5Traverses a table in a manner similar to the function"}],
               0,false},
              {text,
               [21,42,109,110,101,115,105,97,58,100,105,114,116,121,95,110,
                101,120,116,47,50,42]},
              {sep,
               [{text,
                 "`. A table has a number of slots that range from 0 (zero) to an unknown upper bound. The function"}],
               0,false},
              {text,
               [21,42,109,110,101,115,105,97,58,100,105,114,116,121,95,115,
                108,111,116,47,50,42]},
              {sep,
               [{text,
                 [24,114,101,116,117,114,110,115,32,116,104,101,32,115,112,
                  101,99,105,97,108,32,97,116,111,109]}],
               0,false},
              {text,
               [17,42,39,36,101,110,100,95,111,102,95,116,97,98,108,101,39,
                42]},
              {sep,
               [{text,
                 [156,119,104,101,110,32,116,104,101,32,101,110,100,32,111,
                  102,32,116,104,101,32,116,97,98,108,101,32,105,115,32,114,
                  101,97,99,104,101,100,46,32,84,104,101,32,98,101,104,97,118,
                  105,111,114,32,111,102,32,116,104,105,115,32,102,117,110,99,
                  116,105,111,110,32,105,115,32,117,110,100,101,102,105,110,
                  101,100,32,105,102,32,97,32,119,114,105,116,101,32,111,112,
                  101,114,97,116,105,111,110,32,105,115,32,112,101,114,102,
                  111,114,109,101,100,32,111,110,32,116,104,101,32,116,97,98,
                  108,101,32,119,104,105,108,101,32,105,116,32,105,115,32,98,
                  101,105,110,103,32,116,114,97,118,101,114,115,101,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "M## dirty_update_counter({Tab, Key}, Incr) -> NewVal | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"!Dirty update of a counter record."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"7<a name=\"dirty_update_counter\">dirty_update_counter</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,"-*mnesia:dirty_update_counter(Tab, Key, Incr)*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "K## dirty_update_counter(Tab, Key, Incr) -> NewVal | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"!Dirty update of a counter record."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "CMnesia has no special counter records. However, records of the form"}],
               0,false},
              {text,
               [21,42,123,84,97,98,44,32,75,101,121,44,32,73,110,116,101,103,
                101,114,125,42]},
              {sep,
               [{text,
                 "5can be used as (possibly disc-resident) counters when"}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[4,105,115,32,97]}],0,false},
              {text,[5,42,115,101,116,42]},
              {sep,
               [{text,
                 [281,46,32,84,104,105,115,32,102,117,110,99,116,105,111,110,
                  32,117,112,100,97,116,101,115,32,97,32,99,111,117,110,116,
                  101,114,32,119,105,116,104,32,97,32,112,111,115,105,116,105,
                  118,101,32,111,114,32,110,101,103,97,116,105,118,101,32,110,
                  117,109,98,101,114,46,32,72,111,119,101,118,101,114,44,32,
                  99,111,117,110,116,101,114,115,32,99,97,110,32,110,101,118,
                  101,114,32,98,101,99,111,109,101,32,108,101,115,115,32,116,
                  104,97,110,32,122,101,114,111,46,32,84,104,101,114,101,32,
                  97,114,101,32,116,119,111,32,115,105,103,110,105,102,105,99,
                  97,110,116,32,100,105,102,102,101,114,101,110,99,101,115,32,
                  98,101,116,119,101,101,110,32,116,104,105,115,32,102,117,
                  110,99,116,105,111,110,32,97,110,100,32,116,104,101,32,97,
                  99,116,105,111,110,32,111,102,32,102,105,114,115,116,32,114,
                  101,97,100,105,110,103,32,116,104,101,32,114,101,99,111,114,
                  100,44,32,112,101,114,102,111,114,109,105,110,103,32,116,
                  104,101,32,97,114,105,116,104,109,101,116,105,99,115,44,32,
                  97,110,100,32,116,104,101,110,32,119,114,105,116,105,110,
                  103,32,116,104,101,32,114,101,99,111,114,100,58]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {sep,
         [{text,[1,42]},
          {text,
           [26,73,116,32,105,115,32,109,117,99,104,32,109,111,114,101,32,101,
            102,102,105,99,105,101,110,116,46]}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [31,42,109,110,101,115,105,97,58,100,105,114,116,121,95,117,112,
              100,97,116,101,95,99,111,117,110,116,101,114,47,51,42]},
            {sep,
             [{text,
               "Ris performed as an atomic operation although it is not protected by a transaction."}],
             0,false}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [24,73,102,32,116,119,111,32,112,114,111,99,101,115,115,101,
                  115,32,112,101,114,102,111,114,109]}],
               0,false},
              {text,
               [31,42,109,110,101,115,105,97,58,100,105,114,116,121,95,117,
                112,100,97,116,101,95,99,111,117,110,116,101,114,47,51,42]},
              {sep,
               [{text,
                 "esimultaneously, both updates take effect without the risk of losing one of the updates. The new value"}],
               0,false},
              {text,"\b*NewVal*"},
              {sep,[{text,"\eof the counter is returned."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[2,73,102]}],0,false},
              {text,[5,42,75,101,121,42]},
              {sep,
               [{text,"1do not exists, a new record is created with value"}],
               0,false},
              {text,[6,42,73,110,99,114,42]},
              {sep,
               [{text,"1if it is larger than 0, otherwise it is set to 0."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"6## dirty_write(Record) -> ok | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [24,68,105,114,116,121,32,119,114,105,116,101,32,111,102,32,97,
              32,114,101,99,111,114,100,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,")<a name=\"dirty_write_1\">dirty_write_1</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,"!*mnesia:dirty_write(Tab, Record)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [20,42,101,108,101,109,101,110,116,40,49,44,32,82,101,99,111,
                114,100,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,";## dirty_write(Tab, Record) -> ok | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [24,68,105,114,116,121,32,119,114,105,116,101,32,111,102,32,97,
              32,114,101,99,111,114,100,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," Dirty equivalent of the function"}],0,false},
              {text,
               [16,42,109,110,101,115,105,97,58,119,114,105,116,101,47,51,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [23,35,35,32,100,117,109,112,95,108,111,103,40,41,32,45,62,32,100,
          117,109,112,101,100]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"5Performs a user-initiated dump of the local log file."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [31,60,97,32,110,97,109,101,61,34,100,117,109,112,95,108,111,103,34,
         62,100,117,109,112,95,108,111,103,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "Â¢Performs a user-initiated dump of the local log file. This is usually not necessary, as Mnesia by default manages this automatically. See configuration parameters"}],
               0,false},
              {text,"3[dump_log_time_threshold](#dump_log_time_threshold)"},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,"5[dump_log_write_threshold](#dump_log_write_threshold)"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,";## dump_tables(TabList) -> {atomic, ok} | {aborted, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [29,68,117,109,112,115,32,97,108,108,32,82,65,77,32,116,97,98,
              108,101,115,32,116,111,32,100,105,115,99,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"%<a name=\"dump_tables\">dump_tables</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [14,68,117,109,112,115,32,97,32,115,101,116,32,111,102]}],
               0,false},
              {text,"\f*ram_copies*"},
              {sep,
               [{text,
                 "Ãtables to disc. The next time the system is started, these tables are initiated with the data found in the files that are the result of this dump. None of the tables can have disc-resident replicas."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [29,35,35,32,100,117,109,112,95,116,111,95,116,101,120,116,102,105,
          108,101,40,70,105,108,101,110,97,109,101,41]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$Dumps local tables into a text file."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"/<a name=\"dump_to_textfile\">dump_to_textfile</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [131,68,117,109,112,115,32,97,108,108,32,108,111,99,97,108,
                  32,116,97,98,108,101,115,32,111,102,32,97,32,77,110,101,115,
                  105,97,32,115,121,115,116,101,109,32,105,110,116,111,32,97,
                  32,116,101,120,116,32,102,105,108,101,44,32,119,104,105,99,
                  104,32,99,97,110,32,98,101,32,101,100,105,116,101,100,32,40,
                  98,121,32,97,32,110,111,114,109,97,108,32,116,101,120,116,
                  32,101,100,105,116,111,114,41,32,97,110,100,32,116,104,101,
                  110,32,98,101,32,114,101,108,111,97,100,101,100,32,119,105,
                  116,104]}],
               0,false},
              {text,
               [24,42,109,110,101,115,105,97,58,108,111,97,100,95,116,101,120,
                116,102,105,108,101,47,49,42]},
              {sep,
               [{text,
                 "a. Only use this function for educational purposes. Use other functions to deal with real backups."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"%## error_description(Error) -> String"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"6Returns a string describing a particular Mnesia error."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"1<a name=\"error_description\">error_description</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "WAll Mnesia transactions, including all the schema update functions, either return value"}],
               0,false},
              {text,[15,42,123,97,116,111,109,105,99,44,32,86,97,108,125,42]},
              {sep,[{text,"\for the tuple"}],0,false},
              {text,
               [19,42,123,97,98,111,114,116,101,100,44,32,82,101,97,115,111,
                110,125,42]},
              {sep,[{text,[1,46]}],0,false},
              {text,"\b*Reason*"},
              {sep,
               [{text,
                 ">can be either of the atoms in the following list. The function"}],
               0,false},
              {text,
               [21,42,101,114,114,111,114,95,100,101,115,99,114,105,112,116,
                105,111,110,47,49,42]},
              {sep,
               [{text,
                 "6returns a descriptive string that describes the error."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,
                           [20,42,110,101,115,116,101,100,95,116,114,97,110,
                            115,97,99,116,105,111,110,42]},
                          {sep,
                           [{text,
                             "6. Nested transactions are not allowed in this context."}],
                           0,false}],
                         0,false}],
                       0,false},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,"\b*badarg*"},
                          {sep,
                           [{text,
                             "-. Bad or invalid argument, possibly bad type."}],
                           0,false}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          [16,42,110,111,95,116,114,97,110,115,97,99,116,105,
                           111,110,42]},
                         {sep,
                          [{text,
                            "-. Operation not allowed outside transactions."}],
                          0,false}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{text,
                         [15,42,99,111,109,98,105,110,101,95,101,114,114,111,
                          114,42]},
                        {sep,
                         [{text,"#. Table options illegally combined."}],
                         0,false}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,"\v*bad_index*"},
                       {sep,
                        [{text,
                          "-. Index already exists, or was out of bounds."}],
                        0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       [16,42,97,108,114,101,97,100,121,95,101,120,105,115,
                        116,115,42]},
                      {sep,
                       [{text,
                         ".. Schema option to be activated is already on."}],
                       0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      [14,42,105,110,100,101,120,95,101,120,105,115,116,115,
                       42]},
                     {sep,
                      [{text,
                        ">. Some operations cannot be performed on tables with an index."}],
                      0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,"\v*no_exists*"},
                    {sep,
                     [{text,
                       ">. Tried to perform operation on non-existing (not-alive) item."}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [14,42,115,121,115,116,101,109,95,108,105,109,105,116,42]},
                   {sep,
                    [{text,
                      [31,46,32,65,32,115,121,115,116,101,109,32,108,105,109,
                       105,116,32,119,97,115,32,101,120,104,97,117,115,116,
                       101,100,46]}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\r*mnesia_down*"},
                  {sep,
                   [{text,
                     "Â«. A transaction involves records on a remote node, which became unavailable before the transaction was completed. Records are no longer available elsewhere in the network."}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [15,42,110,111,116,95,97,95,100,98,95,110,111,100,101,42]},
                 {sep,
                  [{text,
                    "9. A node was mentioned that does not exist in the schema."}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,"\n*bad_type*"},
                {sep,[{text,"!. Bad type specified in argument."}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [18,42,110,111,100,101,95,110,111,116,95,114,117,110,110,105,
                 110,103,42]},
               {sep,
                [{text,
                  [22,46,32,78,111,100,101,32,105,115,32,110,111,116,32,114,
                   117,110,110,105,110,103,46]}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [23,42,116,114,117,110,99,97,116,101,100,95,98,105,110,97,114,
                121,95,102,105,108,101,42]},
              {sep,[{text,"\e. Truncated binary in file."}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"\b*active*"},
             {sep,
              [{text,
                "E. Some delete operations require that all active records are removed."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\t*illegal*"},
            {sep,
             [{text,"). Operation not supported on this record."}],
             0,false}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,[7,42,69,114,114,111,114,42]},
              {sep,[{text,[6,99,97,110,32,98,101]}],0,false},
              {text,"\b*Reason*"},
              {sep,[{text,[1,44]}],0,false},
              {text,
               [17,42,123,101,114,114,111,114,44,32,82,101,97,115,111,110,125,
                42]},
              {sep,[{text,[4,44,32,111,114]}],0,false},
              {text,
               [19,42,123,97,98,111,114,116,101,100,44,32,82,101,97,115,111,
                110,125,42]},
              {sep,[{text,[1,46]}],0,false},
              {text,"\b*Reason*"},
              {sep,
               [{text,
                 [30,99,97,110,32,98,101,32,97,110,32,97,116,111,109,32,111,
                  114,32,97,32,116,117,112,108,101,32,119,105,116,104]}],
               0,false},
              {text,"\b*Reason*"},
              {sep,
               [{text,
                 [30,97,115,32,97,110,32,97,116,111,109,32,105,110,32,116,104,
                  101,32,102,105,114,115,116,32,102,105,101,108,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [127,84,104,101,32,102,111,108,108,111,119,105,110,103,32,101,
                120,97,109,112,108,101,115,32,105,108,108,117,115,116,114,97,
                116,101,32,97,32,102,117,110,99,116,105,111,110,32,116,104,97,
                116,32,114,101,116,117,114,110,115,32,97,110,32,101,114,114,
                111,114,44,32,97,110,100,32,116,104,101,32,109,101,116,104,
                111,100,32,116,111,32,114,101,116,114,105,101,118,101,32,109,
                111,114,101,32,100,101,116,97,105,108,101,100,32,101,114,114,
                111,114,32,105,110,102,111,114,109,97,116,105,111,110,58]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,"\fThe function"}],0,false},
            {text,
             "A[mnesia:create_table(bar, [{attributes, 3.14}])](#create_table/2)"},
            {sep,
             [{text,
               [17,114,101,116,117,114,110,115,32,116,104,101,32,116,117,112,
                108,101]}],
             0,false},
            {text,
             [18,42,123,97,98,111,114,116,101,100,44,82,101,97,115,111,110,
              125,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,"\b*Reason*"},
            {sep,[{text,"\fis the tuple"}],0,false},
            {text,
             [24,42,123,98,97,100,95,116,121,112,101,44,98,97,114,44,51,46,49,
              52,48,48,48,125,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,"\fThe function"}],0,false},
            {text,"8[mnesia:error_description(Reason)](#error_description/1)"},
            {sep,
             [{text,
               [16,114,101,116,117,114,110,115,32,116,104,101,32,116,101,114,
                109]}],
             0,false},
            {text,"5*{\"Bad type on some provided arguments\",bar,3.14000}*"},
            {sep,
             [{text,"5, which is an error description suitable for display."}],
             0,false}],
           0,false}],
         0,false}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"3## ets(Fun, [, Args]) -> ResultOfFun | exit(Reason)"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\tCalls the"}],0,false},
            {text,[5,42,70,117,110,42]},
            {sep,
             [{text,
               "8in a raw context that is not protected by a transaction."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [21,60,97,32,110,97,109,101,61,34,101,116,115,34,62,101,116,115,60,47,
         97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\tCalls the"}],0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 "ein a raw context that is not protected by a transaction. The Mnesia function call is performed in the"}],
               0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 "_and performed directly on the local ETS tables on the assumption that the local storage type is"}],
               0,false},
              {text,"\f*ram_copies*"},
              {sep,
               [{text,
                 "Â±and the tables are not replicated to other nodes. Subscriptions are not triggered and checkpoints are not updated, but it is extremely fast. This function can also be applied to"}],
               0,false},
              {text,"\r*disc_copies*"},
              {sep,
               [{text,
                 "8tables if all operations are read only. For details, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 [21,97,110,100,32,116,104,101,32,85,115,101,114,39,115,32,71,
                  117,105,100,101,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [31,78,111,116,105,99,101,32,116,104,97,116,32,99,97,108,108,
                  105,110,103,32,40,110,101,115,116,105,110,103,41,32,97]}],
               0,false},
              {text,"\f*mnesia:ets*"},
              {sep,
               [{text,
                 "@inside a transaction-context inherits the transaction semantics."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,")## first(Tab) ->  Key | transaction abort"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"0Returns the key for the first record in a table."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [25,60,97,32,110,97,109,101,61,34,102,105,114,115,116,34,62,102,105,
         114,115,116,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\nRecords in"}],0,false},
              {text,[5,42,115,101,116,42]},
              {sep,[{text,[2,111,114]}],0,false},
              {text,[5,42,98,97,103,42]},
              {sep,
               [{text,
                 "Â§tables are not ordered. However, there is an ordering of the records that is unknown to the user. A table can therefore be traversed by this function with the function"}],
               0,false},
              {text,
               [15,42,109,110,101,115,105,97,58,110,101,120,116,47,50,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "DIf there are no records in the table, this function returns the atom"}],
               0,false},
              {text,
               [17,42,39,36,101,110,100,95,111,102,95,116,97,98,108,101,39,
                42]},
              {sep,
               [{text,
                 "k. It is therefore highly undesirable, but not disallowed, to use this atom as the key for any user records."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"<## foldl(Function, Acc, Table) -> NewAcc | transaction abort"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[5,67,97,108,108,115]}],0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,
               [18,102,111,114,32,101,97,99,104,32,114,101,99,111,114,100,32,
                105,110]}],
             0,false},
            {text,[7,42,84,97,98,108,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [25,60,97,32,110,97,109,101,61,34,102,111,108,100,108,34,62,102,111,
         108,100,108,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [23,73,116,101,114,97,116,101,115,32,111,118,101,114,32,116,
                  104,101,32,116,97,98,108,101]}],
               0,false},
              {text,[7,42,84,97,98,108,101,42]},
              {sep,[{text,"\tand calls"}],0,false},
              {text,
               [26,42,70,117,110,99,116,105,111,110,40,82,101,99,111,114,100,
                44,32,78,101,119,65,99,99,41,42]},
              {sep,[{text,"\bfor each"}],0,false},
              {text,"\b*Record*"},
              {sep,[{text,"$in the table. The term returned from"}],0,false},
              {text,"\n*Function*"},
              {sep,
               [{text,"2is used as the second argument in the next call to"}],
               0,false},
              {text,"\n*Function*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,[7,42,102,111,108,100,108,42]},
              {sep,
               [{text,")returns the same term as the last call to"}],
               0,false},
              {text,"\n*Function*"},
              {sep,[{text,"\treturned."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"<## foldr(Function, Acc, Table) -> NewAcc | transaction abort"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[5,67,97,108,108,115]}],0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,
               [18,102,111,114,32,101,97,99,104,32,114,101,99,111,114,100,32,
                105,110]}],
             0,false},
            {text,[7,42,84,97,98,108,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [25,60,97,32,110,97,109,101,61,34,102,111,108,100,114,34,62,102,111,
         108,100,114,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,87,111,114,107,115,32,101,120,97,99,116,108,121,32,108,
                  105,107,101]}],
               0,false},
              {text,"\t*foldl/3*"},
              {sep,
               [{text,
                 "4but iterates the table in the opposite order for the"}],
               0,false},
              {text,"\r*ordered_set*"},
              {sep,[{text,"&table type. For all other table types,"}],0,false},
              {text,"\t*foldr/3*"},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,"\t*foldl/3*"},
              {sep,[{text,"\rare synonyms."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"2## force_load_table(Tab) -> yes | ErrorDescription"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Forces a table to be loaded into the system."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"/<a name=\"force_load_table\">force_load_table</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [278,84,104,101,32,77,110,101,115,105,97,32,97,108,103,111,114,
                105,116,104,109,32,102,111,114,32,116,97,98,108,101,32,108,
                111,97,100,32,99,97,110,32,108,101,97,100,32,116,111,32,97,32,
                115,105,116,117,97,116,105,111,110,32,119,104,101,114,101,32,
                97,32,116,97,98,108,101,32,99,97,110,110,111,116,32,98,101,32,
                108,111,97,100,101,100,46,32,84,104,105,115,32,115,105,116,
                117,97,116,105,111,110,32,111,99,99,117,114,115,32,119,104,
                101,110,32,97,32,110,111,100,101,32,105,115,32,115,116,97,114,
                116,101,100,32,97,110,100,32,77,110,101,115,105,97,32,99,111,
                110,99,108,117,100,101,115,44,32,111,114,32,115,117,115,112,
                101,99,116,115,44,32,116,104,97,116,32,97,110,111,116,104,101,
                114,32,99,111,112,121,32,111,102,32,116,104,101,32,116,97,98,
                108,101,32,119,97,115,32,97,99,116,105,118,101,32,97,102,116,
                101,114,32,116,104,105,115,32,108,111,99,97,108,32,99,111,112,
                121,32,98,101,99,97,109,101,32,105,110,97,99,116,105,118,101,
                32,98,101,99,97,117,115,101,32,111,102,32,97,32,115,121,115,
                116,101,109,32,99,114,97,115,104,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [317,73,102,32,116,104,105,115,32,115,105,116,117,97,116,105,
                111,110,32,105,115,32,110,111,116,32,97,99,99,101,112,116,97,
                98,108,101,44,32,116,104,105,115,32,102,117,110,99,116,105,
                111,110,32,99,97,110,32,98,101,32,117,115,101,100,32,116,111,
                32,111,118,101,114,114,105,100,101,32,116,104,101,32,115,116,
                114,97,116,101,103,121,32,111,102,32,116,104,101,32,77,110,
                101,115,105,97,32,116,97,98,108,101,32,108,111,97,100,32,97,
                108,103,111,114,105,116,104,109,46,32,84,104,105,115,32,99,97,
                110,32,108,101,97,100,32,116,111,32,97,32,115,105,116,117,97,
                116,105,111,110,32,119,104,101,114,101,32,115,111,109,101,32,
                116,114,97,110,115,97,99,116,105,111,110,32,101,102,102,101,
                99,116,115,32,97,114,101,32,108,111,115,116,32,119,105,116,
                104,32,97,110,32,105,110,99,111,110,115,105,115,116,101,110,
                116,32,100,97,116,97,98,97,115,101,32,97,115,32,114,101,115,
                117,108,116,44,32,98,117,116,32,102,111,114,32,115,111,109,
                101,32,97,112,112,108,105,99,97,116,105,111,110,115,32,104,
                105,103,104,32,97,118,97,105,108,97,98,105,108,105,116,121,32,
                105,115,32,109,111,114,101,32,105,109,112,111,114,116,97,110,
                116,32,116,104,97,110,32,99,111,110,115,105,115,116,101,110,
                116,32,100,97,116,97,46]}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "B## index_match_object(Pattern, Pos) -> transaction abort | ObjList"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Matches records and uses index information."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"7<a name=\"index_match_object_2\">index_match_object_2</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[6,83,116,97,114,116,115]}],0,false},
              {text,"4*mnesia:index_match_object(Tab, Pattern, Pos, read)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [21,42,101,108,101,109,101,110,116,40,49,44,32,80,97,116,116,
                101,114,110,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "Q## index_match_object(Tab, Pattern, Pos, LockKind) -> transaction abort | ObjList"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Matches records and uses index information."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"7<a name=\"index_match_object_4\">index_match_object_4</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"#In a manner similar to the function"}],0,false},
              {text,
               [21,42,109,110,101,115,105,97,58,105,110,100,101,120,95,114,
                101,97,100,47,51,42]},
              {sep,
               [{text,
                 [137,44,32,97,110,121,32,105,110,100,101,120,32,105,110,102,
                  111,114,109,97,116,105,111,110,32,99,97,110,32,98,101,32,
                  117,115,101,100,32,119,104,101,110,32,116,114,121,105,110,
                  103,32,116,111,32,109,97,116,99,104,32,114,101,99,111,114,
                  100,115,46,32,84,104,105,115,32,102,117,110,99,116,105,111,
                  110,32,116,97,107,101,115,32,97,32,112,97,116,116,101,114,
                  110,32,116,104,97,116,32,111,98,101,121,115,32,116,104,101,
                  32,115,97,109,101,32,114,117,108,101,115,32,97,115,32,116,
                  104,101,32,102,117,110,99,116,105,111,110]}],
               0,false},
              {text,
               [23,42,109,110,101,115,105,97,58,109,97,116,99,104,95,111,98,
                106,101,99,116,47,51,42]},
              {sep,
               [{text,
                 ">, except that this function requires the following conditions:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,"\tThe table"}],0,false},
            {text,[5,42,84,97,98,42]},
            {sep,
             [{text,
               [30,109,117,115,116,32,104,97,118,101,32,97,110,32,105,110,100,
                101,120,32,111,110,32,112,111,115,105,116,105,111,110]}],
             0,false},
            {text,[5,42,80,111,115,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               [23,84,104,101,32,101,108,101,109,101,110,116,32,105,110,32,
                112,111,115,105,116,105,111,110]}],
             0,false},
            {text,[5,42,80,111,115,42]},
            {sep,[{text,[2,105,110]}],0,false},
            {text,"\t*Pattern*"},
            {sep,
             [{text,[14,109,117,115,116,32,98,101,32,98,111,117,110,100,46]}],
             0,false},
            {text,[5,42,80,111,115,42]},
            {sep,
             [{text,
               [15,105,115,32,97,110,32,105,110,116,101,103,101,114,32,40]}],
             0,false},
            {text,[15,42,35,114,101,99,111,114,100,46,70,105,101,108,100,42]},
            {sep,
             [{text,
               [23,41,32,111,114,32,97,110,32,97,116,116,114,105,98,117,116,
                101,32,110,97,109,101,46]}],
             0,false}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "bThe two index search functions described here are automatically started when searching tables with"}],
               0,false},
              {text,[5,42,113,108,99,42]},
              {sep,
               [{text,
                 "5list comprehensions and also when using the low-level"}],
               0,false},
              {text,
               [29,42,109,110,101,115,105,97,58,91,100,105,114,116,121,95,93,
                109,97,116,99,104,95,111,98,106,101,99,116,42]},
              {sep,[{text,"\nfunctions."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "EThe semantics of this function is context-sensitive. For details, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 "4. In transaction-context, it acquires a lock of type"}],
               0,false},
              {text,"\n*LockKind*"},
              {sep,
               [{text,
                 "Con the entire table or on a single record. Currently, the lock type"}],
               0,false},
              {text,[6,42,114,101,97,100,42]},
              {sep,[{text,"\ris supported."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "G## index_read(Tab, SecondaryKey, Pos) -> transaction abort | RecordList"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Reads records through index table."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"#<a name=\"index_read\">index_read</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,")Assume that there is an index on position"}],
               0,false},
              {text,[5,42,80,111,115,42]},
              {sep,
               [{text,
                 "Â©for a certain record type. This function can be used to read the records without knowing the actual key for the record. For example, with an index in position 1 of table"}],
               0,false},
              {text,"\b*person*"},
              {sep,[{text,"\n, the call"}],0,false},
              {text,",*mnesia:index_read(person, 36, #person.age)*"},
              {sep,
               [{text,"*returns a list of all persons with age 36."}],
               0,false},
              {text,[5,42,80,111,115,42]},
              {sep,
               [{text,
                 "9can also be an attribute name (atom), but if the notation"}],
               0,false},
              {text,"$*mnesia:index_read(person, 36, age)*"},
              {sep,
               [{text,
                 "Fis used, the field position is searched for in runtime, for each call."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "EThe semantics of this function is context-sensitive. For details, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 "F. In transaction-context, it acquires a read lock on the entire table."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[15,35,35,32,105,110,102,111,40,41,32,45,62,32,111,107]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"*Prints system information on the terminal."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [23,60,97,32,110,97,109,101,61,34,105,110,102,111,34,62,105,110,102,
         111,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "Â Prints system information on the terminal. This function can be used even if Mnesia is not started. However, more information is displayed if Mnesia is started."}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"2## install_fallback(Opaque) -> ok | {error,Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,73,110,115,116,97,108,108,115,32,97,32,98,97,99,107,117,112,
              32,97,115,32,102,97,108,108,98,97,99,107,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"3<a name=\"install_fallback_1\">install_fallback_1</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,"'*mnesia:install_fallback(Opaque, Args)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[6,42,65,114,103,115,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [19,42,91,123,115,99,111,112,101,44,32,103,108,111,98,97,108,
                125,93,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         ">## install_fallback(Opaque), BackupMod) -> ok | {error,Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,73,110,115,116,97,108,108,115,32,97,32,98,97,99,107,117,112,
              32,97,115,32,102,97,108,108,98,97,99,107,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,"'*mnesia:install_fallback(Opaque, Args)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[6,42,65,114,103,115,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,"(*[{scope, global}, {module, BackupMod}]*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"8## install_fallback(Opaque, Args) -> ok | {error,Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,73,110,115,116,97,108,108,115,32,97,32,98,97,99,107,117,112,
              32,97,115,32,102,97,108,108,98,97,99,107,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [345,73,110,115,116,97,108,108,115,32,97,32,98,97,99,107,117,
                112,32,97,115,32,102,97,108,108,98,97,99,107,46,32,84,104,101,
                32,102,97,108,108,98,97,99,107,32,105,115,32,117,115,101,100,
                32,116,111,32,114,101,115,116,111,114,101,32,116,104,101,32,
                100,97,116,97,98,97,115,101,32,97,116,32,116,104,101,32,110,
                101,120,116,32,115,116,97,114,116,117,112,46,32,73,110,115,
                116,97,108,108,97,116,105,111,110,32,111,102,32,102,97,108,
                108,98,97,99,107,115,32,114,101,113,117,105,114,101,115,32,69,
                114,108,97,110,103,32,116,111,32,98,101,32,111,112,101,114,97,
                116,105,111,110,97,108,32,111,110,32,97,108,108,32,116,104,
                101,32,105,110,118,111,108,118,101,100,32,110,111,100,101,115,
                44,32,98,117,116,32,105,116,32,100,111,101,115,32,110,111,116,
                32,109,97,116,116,101,114,32,105,102,32,77,110,101,115,105,97,
                32,105,115,32,114,117,110,110,105,110,103,32,111,114,32,110,
                111,116,46,32,84,104,101,32,105,110,115,116,97,108,108,97,116,
                105,111,110,32,111,102,32,116,104,101,32,102,97,108,108,98,97,
                99,107,32,102,97,105,108,115,32,105,102,32,116,104,101,32,108,
                111,99,97,108,32,110,111,100,101,32,105,115,32,110,111,116,32,
                111,110,101,32,111,102,32,116,104,101,32,100,105,115,99,45,
                114,101,115,105,100,101,110,116,32,110,111,100,101,115,32,105,
                110,32,116,104,101,32,98,97,99,107,117,112,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,[6,42,65,114,103,115,42]},
              {sep,[{text,"\"is a list of the following tuples:"}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [21,42,123,109,111,100,117,108,101,44,32,66,97,99,107,117,112,
               77,111,100,125,42]},
             {sep,
              [{text,
                "P. All accesses of the backup media are performed through a callback module named"}],
              0,false},
             {text,"\v*BackupMod*"},
             {sep,[{text,"\n. Argument"}],0,false},
             {text,"\b*Opaque*"},
             {sep,
              [{text,
                "ois forwarded to the callback module, which can interpret it as it wishes. The default callback module is called"}],
              0,false},
             {text,[15,42,109,110,101,115,105,97,95,98,97,99,107,117,112,42]},
             {sep,
              [{text,
                [26,97,110,100,32,105,116,32,105,110,116,101,114,112,114,101,
                 116,115,32,97,114,103,117,109,101,110,116]}],
              0,false},
             {text,"\b*Opaque*"},
             {sep,
              [{text,
                "eas a local filename. The default for this module is also configurable through configuration parameter"}],
              0,false},
             {text,
              [23,42,45,109,110,101,115,105,97,32,109,110,101,115,105,97,95,
               98,97,99,107,117,112,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [16,42,123,115,99,111,112,101,44,32,83,99,111,112,101,
                      125,42]},
                    {sep,[{text,[5,46,32,84,104,101]}],0,false},
                    {text,[7,42,83,99,111,112,101,42]},
                    {sep,
                     [{text,
                       [23,111,102,32,97,32,102,97,108,108,98,97,99,107,32,
                        105,115,32,101,105,116,104,101,114]}],
                     0,false},
                    {text,"\b*global*"},
                    {sep,
                     [{text,
                       [26,102,111,114,32,116,104,101,32,101,110,116,105,114,
                        101,32,100,97,116,97,98,97,115,101,32,111,114]}],
                     0,false},
                    {text,[7,42,108,111,99,97,108,42]},
                    {sep,
                     [{text,
                       "Ã·for one node. By default, the installation of a fallback is a global operation, which either is performed on all nodes with a disc-resident schema or none. Which nodes that are disc-resident is determined from the schema information in the backup."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,[{text,[2,73,102]}],0,false},
                    {text,[7,42,83,99,111,112,101,42]},
                    {sep,
                     [{text,
                       [19,111,102,32,116,104,101,32,111,112,101,114,97,116,
                        105,111,110,32,105,115]}],
                     0,false},
                    {text,[7,42,108,111,99,97,108,42]},
                    {sep,
                     [{text,
                       "3, the fallback is only installed on the local node."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    [28,42,123,109,110,101,115,105,97,95,100,105,114,44,32,65,
                     108,116,101,114,110,97,116,101,68,105,114,125,42]},
                   {sep,
                    [{text,
                      "A. This argument is only valid if the scope of the installation is"}],
                    0,false},
                   {text,[7,42,108,111,99,97,108,42]},
                   {sep,
                    [{text,
                      "y. Normally the installation of a fallback is targeted to the Mnesia directory, as configured with configuration parameter"}],
                    0,false},
                   {text,"\r*-mnesia dir*"},
                   {sep,[{text," . But by explicitly supplying an"}],0,false},
                   {text,
                    [14,42,65,108,116,101,114,110,97,116,101,68,105,114,42]},
                   {sep,
                    [{text,
                      "Ã², the fallback is installed there regardless of the Mnesia directory configuration parameter setting. After installation of a fallback on an alternative Mnesia directory, that directory is fully prepared for use as an active Mnesia directory."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "ÃThis is a dangerous feature that must be used with care. By unintentional mixing of directories, you can easily end up with an inconsistent database, if the same backup is installed on more than one directory."}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,false}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [30,35,35,32,105,115,95,116,114,97,110,115,97,99,116,105,111,110,40,
          41,32,45,62,32,98,111,111,108,101,97,110]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Checks if code is running in a transaction."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"+<a name=\"is_transaction\">is_transaction</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "GWhen this function is executed inside a transaction-context, it returns"}],
               0,false},
              {text,[6,42,116,114,117,101,42]},
              {sep,[{text,"\v, otherwise"}],0,false},
              {text,[7,42,102,97,108,115,101,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"'## last(Tab) -> Key | transaction abort"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"/Returns the key for the last record in a table."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,87,111,114,107,115,32,101,120,97,99,116,108,121,32,108,
                  105,107,101]}],
               0,false},
              {text,
               [16,42,109,110,101,115,105,97,58,102,105,114,115,116,47,49,42]},
              {sep,
               [{text,
                 ":, but returns the last object in Erlang term order for the"}],
               0,false},
              {text,"\r*ordered_set*"},
              {sep,[{text,"&table type. For all other table types,"}],0,false},
              {text,
               [16,42,109,110,101,115,105,97,58,102,105,114,115,116,47,49,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,[15,42,109,110,101,115,105,97,58,108,97,115,116,47,49,42]},
              {sep,[{text,"\rare synonyms."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [26,35,35,32,108,111,97,100,95,116,101,120,116,102,105,108,101,40,70,
          105,108,101,110,97,109,101,41]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,76,111,97,100,115,32,116,97,98,108,101,115,32,102,114,111,
              109,32,97,32,116,101,120,116,32,102,105,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,")<a name=\"load_textfile\">load_textfile</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "MLoads a series of definitions and data found in the text file (generated with"}],
               0,false},
              {text,"\e*mnesia:dump_to_textfile/1*"},
              {sep,
               [{text,
                 "Ã) into Mnesia. This function also starts Mnesia and possibly creates a new schema. This function is intended for educational purposes only. It is recommended to use other functions to deal with real backups."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "=## lock(LockItem, LockKind) -> Nodes | ok | transaction abort"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [19,69,120,112,108,105,99,105,116,32,103,114,97,98,32,108,111,99,
              107,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [23,60,97,32,110,97,109,101,61,34,108,111,99,107,34,62,108,111,99,107,
         60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [374,87,114,105,116,101,32,108,111,99,107,115,32,97,114,101,32,
                110,111,114,109,97,108,108,121,32,97,99,113,117,105,114,101,
                100,32,111,110,32,97,108,108,32,110,111,100,101,115,32,119,
                104,101,114,101,32,97,32,114,101,112,108,105,99,97,32,111,102,
                32,116,104,101,32,116,97,98,108,101,32,114,101,115,105,100,
                101,115,32,40,97,110,100,32,105,115,32,97,99,116,105,118,101,
                41,46,32,82,101,97,100,32,108,111,99,107,115,32,97,114,101,32,
                97,99,113,117,105,114,101,100,32,111,110,32,111,110,101,32,
                110,111,100,101,32,40,116,104,101,32,108,111,99,97,108,32,110,
                111,100,101,32,105,102,32,97,32,108,111,99,97,108,32,114,101,
                112,108,105,99,97,32,101,120,105,115,116,115,41,46,32,77,111,
                115,116,32,111,102,32,116,104,101,32,99,111,110,116,101,120,
                116,45,115,101,110,115,105,116,105,118,101,32,97,99,99,101,
                115,115,32,102,117,110,99,116,105,111,110,115,32,97,99,113,
                117,105,114,101,32,97,110,32,105,109,112,108,105,99,105,116,
                32,108,111,99,107,32,105,102,32,116,104,101,121,32,97,114,101,
                32,115,116,97,114,116,101,100,32,105,110,32,97,32,116,114,97,
                110,115,97,99,116,105,111,110,45,99,111,110,116,101,120,116,
                46,32,84,104,101,32,103,114,97,110,117,108,97,114,105,116,121,
                32,111,102,32,97,32,108,111,99,107,32,99,97,110,32,101,105,
                116,104,101,114,32,98,101,32,97,32,115,105,110,103,108,101,32,
                114,101,99,111,114,100,32,111,114,32,97,110,32,101,110,116,
                105,114,101,32,116,97,98,108,101,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "ÃThe normal use is to call the function without checking the return value, as it exits if it fails and the transaction is restarted by the transaction manager. It returns all the locked nodes if a write lock is acquired and"}],
               0,false},
              {text,[4,42,111,107,42]},
              {sep,
               [{text,
                 [22,105,102,32,105,116,32,119,97,115,32,97,32,114,101,97,100,
                  32,108,111,99,107,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\fThe function"}],0,false},
              {text,[15,42,109,110,101,115,105,97,58,108,111,99,107,47,50,42]},
              {sep,
               [{text,
                 "Â¶is intended to support explicit locking on tables, but is also intended for situations when locks need to be acquired regardless of how tables are replicated. Currently, two kinds of"}],
               0,false},
              {text,"\n*LockKind*"},
              {sep,
               [{text,
                 [14,97,114,101,32,115,117,112,112,111,114,116,101,100,58]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {text,[4,60,100,108,62]},
         {nest,4,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[5,119,114,105,116,101]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "Â­Write locks are exclusive. This means that if one transaction manages to acquire a write lock on an item, no other transaction can acquire any kind of lock on the same item."}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[4,114,101,97,100]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [357,82,101,97,100,32,108,111,99,107,115,32,99,97,110,
                         32,98,101,32,115,104,97,114,101,100,46,32,84,104,105,
                         115,32,109,101,97,110,115,32,116,104,97,116,32,105,
                         102,32,111,110,101,32,116,114,97,110,115,97,99,116,
                         105,111,110,32,109,97,110,97,103,101,115,32,116,111,
                         32,97,99,113,117,105,114,101,32,97,32,114,101,97,100,
                         32,108,111,99,107,32,111,110,32,97,110,32,105,116,
                         101,109,44,32,111,116,104,101,114,32,116,114,97,110,
                         115,97,99,116,105,111,110,115,32,99,97,110,32,97,108,
                         115,111,32,97,99,113,117,105,114,101,32,97,32,114,
                         101,97,100,32,108,111,99,107,32,111,110,32,116,104,
                         101,32,115,97,109,101,32,105,116,101,109,46,32,72,
                         111,119,101,118,101,114,44,32,105,102,32,115,111,109,
                         101,111,110,101,32,104,97,115,32,97,32,114,101,97,
                         100,32,108,111,99,107,44,32,110,111,32,111,110,101,
                         32,99,97,110,32,97,99,113,117,105,114,101,32,97,32,
                         119,114,105,116,101,32,108,111,99,107,32,97,116,32,
                         116,104,101,32,115,97,109,101,32,105,116,101,109,46,
                         32,73,102,32,115,111,109,101,111,110,101,32,104,97,
                         115,32,97,32,119,114,105,116,101,32,108,111,99,107,
                         44,32,110,111,32,111,110,101,32,99,97,110,32,97,99,
                         113,117,105,114,101,32,101,105,116,104,101,114,32,97,
                         32,114,101,97,100,32,108,111,99,107,32,111,114,32,97,
                         32,119,114,105,116,101,32,108,111,99,107,32,97,116,
                         32,116,104,101,32,115,97,109,101,32,105,116,101,109,
                         46]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}}}},
        {text,[5,60,47,100,108,62]}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "ÃConflicting lock requests are automatically queued if there is no risk of a deadlock. Otherwise the transaction must be terminated and executed again. Mnesia does this automatically as long as the upper limit of the maximum"}],
               0,false},
              {text,"\t*retries*"},
              {sep,[{text," is not reached. For details, see"}],0,false},
              {text,
               [22,42,109,110,101,115,105,97,58,116,114,97,110,115,97,99,116,
                105,111,110,47,51,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [135,70,111,114,32,116,104,101,32,115,97,107,101,32,111,102,32,
                99,111,109,112,108,101,116,101,110,101,115,115,44,32,115,116,
                105,99,107,121,32,119,114,105,116,101,32,108,111,99,107,115,
                32,97,114,101,32,97,108,115,111,32,100,101,115,99,114,105,98,
                101,100,32,104,101,114,101,32,101,118,101,110,32,105,102,32,
                97,32,115,116,105,99,107,121,32,119,114,105,116,101,32,108,
                111,99,107,32,105,115,32,110,111,116,32,115,117,112,112,111,
                114,116,101,100,32,98,121,32,116,104,105,115,32,102,117,110,
                99,116,105,111,110,58]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {text,[4,60,100,108,62]},
         {nest,4,
          {above,
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,"\fsticky_write"}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "Ã¾Sticky write locks are a mechanism that can be used to optimize write lock acquisition. If your application uses replicated tables mainly for fault tolerance (as opposed to read access optimization purpose), sticky locks can be the best option available."}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          [311,87,104,101,110,32,97,32,115,116,105,99,107,121,
                           32,119,114,105,116,101,32,108,111,99,107,32,105,
                           115,32,97,99,113,117,105,114,101,100,44,32,97,108,
                           108,32,110,111,100,101,115,32,97,114,101,32,105,
                           110,102,111,114,109,101,100,32,119,104,105,99,104,
                           32,110,111,100,101,32,105,115,32,108,111,99,107,
                           101,100,46,32,84,104,101,110,44,32,115,116,105,99,
                           107,121,32,108,111,99,107,32,114,101,113,117,101,
                           115,116,115,32,102,114,111,109,32,116,104,101,32,
                           115,97,109,101,32,110,111,100,101,32,97,114,101,32,
                           112,101,114,102,111,114,109,101,100,32,97,115,32,
                           97,32,108,111,99,97,108,32,111,112,101,114,97,116,
                           105,111,110,32,119,105,116,104,111,117,116,32,97,
                           110,121,32,99,111,109,109,117,110,105,99,97,116,
                           105,111,110,32,119,105,116,104,32,111,116,104,101,
                           114,32,110,111,100,101,115,46,32,84,104,101,32,115,
                           116,105,99,107,121,32,108,111,99,107,32,108,105,
                           110,103,101,114,115,32,111,110,32,116,104,101,32,
                           110,111,100,101,32,101,118,101,110,32,97,102,116,
                           101,114,32,116,104,101,32,116,114,97,110,115,97,99,
                           116,105,111,110,32,101,110,100,115,46,32,70,111,
                           114,32,100,101,116,97,105,108,115,44,32,115,101,
                           101,32,116,104,101,32,85,115,101,114,39,115,32,71,
                           117,105,100,101,46]}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}}}},
        {text,[5,60,47,100,108,62]}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,".Currently, this function supports two kinds of"}],
               0,false},
              {text,"\n*LockItem*"},
              {sep,[{text,[1,58]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {text,[4,60,100,108,62]},
         {nest,4,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\f{table, Tab}"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [28,84,104,105,115,32,97,99,113,117,105,114,101,
                             115,32,97,32,108,111,99,107,32,111,102,32,116,
                             121,112,101]}],
                          0,false},
                         {text,"\bLockKind"},
                         {sep,
                          [{text,
                            [19,111,110,32,116,104,101,32,101,110,116,105,114,
                             101,32,116,97,98,108,101]}],
                          0,false},
                         {text,[3,84,97,98]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{text,
                    [26,123,103,108,111,98,97,108,44,32,71,108,111,98,97,108,
                     75,101,121,44,32,78,111,100,101,115,125]}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [28,84,104,105,115,32,97,99,113,117,105,114,101,115,
                           32,97,32,108,111,99,107,32,111,102,32,116,121,112,
                           101]}],
                        0,false},
                       {text,"\bLockKind"},
                       {sep,
                        [{text,
                          [22,111,110,32,116,104,101,32,103,108,111,98,97,108,
                           32,114,101,115,111,117,114,99,101]}],
                        0,false},
                       {text,"\tGlobalKey"},
                       {sep,
                        [{text,
                          "1. The lock is acquired on all active nodes in the"}],
                        0,false},
                       {text,[5,78,111,100,101,115]},
                       {sep,[{text,[5,108,105,115,116,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}}}},
        {text,[5,60,47,100,108,62]}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "7Locks are released when the outermost transaction ends."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "EThe semantics of this function is context-sensitive. For details, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 "N. In transaction-context, it acquires locks, otherwise it ignores the request."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"7## match_object(Pattern) -> transaction abort | RecList"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,77,97,116,99,104,101,115]}],0,false},
            {text,"\t*Pattern*"},
            {sep,[{text,"\ffor records."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"+<a name=\"match_object_1\">match_object_1</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,")*mnesia:match_object(Tab, Pattern, read)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [21,42,101,108,101,109,101,110,116,40,49,44,32,80,97,116,116,
                101,114,110,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "F## match_object(Tab, Pattern, LockKind) -> transaction abort | RecList"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,77,97,116,99,104,101,115]}],0,false},
            {text,"\t*Pattern*"},
            {sep,[{text,"\ffor records."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"+<a name=\"match_object_3\">match_object_3</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "8Takes a pattern with \"don't care\" variables denoted as a"}],
               0,false},
              {text,[5,42,39,95,39,42]},
              {sep,
               [{text,
                 "Ã¶parameter. This function returns a list of records that matched the pattern. Since the second element of a record in a table is considered to be the key for the record, the performance of this function depends on whether this key is bound or not."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [21,70,111,114,32,101,120,97,109,112,108,101,44,32,116,104,
                  101,32,99,97,108,108]}],
               0,false},
              {text,
               "@*mnesia:match_object(person, {person, '_', 36, '_', '_'}, read)*"},
              {sep,
               [{text,",returns a list of all person records with an"}],
               0,false},
              {text,[5,42,97,103,101,42]},
              {sep,[{text,"\ffield of 36."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\fThe function"}],0,false},
              {text,
               [23,42,109,110,101,115,105,97,58,109,97,116,99,104,95,111,98,
                106,101,99,116,47,51,42]},
              {sep,
               [{text,
                 "iautomatically uses indexes if these exist. However, no heuristics are performed to select the best index."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "EThe semantics of this function is context-sensitive. For details, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 "4. In transaction-context, it acquires a lock of type"}],
               0,false},
              {text,"\n*LockKind*"},
              {sep,
               [{text,
                 "@on the entire table or a single record. Currently, the lock type"}],
               0,false},
              {text,[6,42,114,101,97,100,42]},
              {sep,[{text,"\ris supported."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "E## move_table_copy(Tab, From, To) -> {aborted, Reason} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,77,111,118,101,115,32,116,104,101,32,99,111,112,121,32,111,
                102,32,116,97,98,108,101]}],
             0,false},
            {text,[5,42,84,97,98,42]},
            {sep,[{text,"\tfrom node"}],0,false},
            {text,[6,42,70,114,111,109,42]},
            {sep,[{text,[7,116,111,32,110,111,100,101]}],0,false},
            {text,[4,42,84,111,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"move_table_copy\">move_table_copy</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [23,77,111,118,101,115,32,116,104,101,32,99,111,112,121,32,
                  111,102,32,116,97,98,108,101]}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,"\tfrom node"}],0,false},
              {text,[6,42,70,114,111,109,42]},
              {sep,[{text,[7,116,111,32,110,111,100,101]}],0,false},
              {text,[4,42,84,111,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "Â¼The storage type is preserved. For example, a RAM table moved from one node remains a RAM on the new node. Other transactions can still read and write in the table while it is being moved."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [31,84,104,105,115,32,102,117,110,99,116,105,111,110,32,99,
                  97,110,110,111,116,32,98,101,32,117,115,101,100,32,111,
                  110]}],
               0,false},
              {text,
               [15,42,108,111,99,97,108,95,99,111,110,116,101,110,116,42]},
              {sep,[{text,[7,116,97,98,108,101,115,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,",## next(Tab, Key) -> Key | transaction abort"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," Returns the next key in a table."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [23,60,97,32,110,97,109,101,61,34,110,101,120,116,34,62,110,101,120,
         116,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "|Traverses a table and performs operations on all records in the table. When the end of the table is reached, the special key"}],
               0,false},
              {text,
               [17,42,39,36,101,110,100,95,111,102,95,116,97,98,108,101,39,
                42]},
              {sep,
               [{text,
                 "]is returned. Otherwise the function returns a key that can be used to read the actual record."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,",## prev(Tab, Key) -> Key | transaction abort"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$Returns the previous key in a table."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,87,111,114,107,115,32,101,120,97,99,116,108,121,32,108,
                  105,107,101]}],
               0,false},
              {text,
               [15,42,109,110,101,115,105,97,58,110,101,120,116,47,50,42]},
              {sep,
               [{text,
                 ">, but returns the previous object in Erlang term order for the"}],
               0,false},
              {text,"\r*ordered_set*"},
              {sep,[{text,"&table type. For all other table types,"}],0,false},
              {text,
               [15,42,109,110,101,115,105,97,58,110,101,120,116,47,50,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,
               [15,42,109,110,101,115,105,97,58,112,114,101,118,47,50,42]},
              {sep,[{text,"\rare synonyms."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"5## read({Tab, Key}) -> transaction abort | RecordList"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Reads records(s) with a given key."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"\e<a name=\"read_2\">read_2</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [14,67,97,108,108,115,32,102,117,110,99,116,105,111,110]}],
               0,false},
              {text,
               [29,42,109,110,101,115,105,97,58,114,101,97,100,40,84,97,98,44,
                32,75,101,121,44,32,114,101,97,100,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"3## read(Tab, Key) -> transaction abort | RecordList"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Reads records(s) with a given key."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [14,67,97,108,108,115,32,102,117,110,99,116,105,111,110]}],
               0,false},
              {text,
               [29,42,109,110,101,115,105,97,58,114,101,97,100,40,84,97,98,44,
                32,75,101,121,44,32,114,101,97,100,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "=## read(Tab, Key, LockKind) -> transaction abort | RecordList"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Reads records(s) with a given key."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"\e<a name=\"read_3\">read_3</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [28,82,101,97,100,115,32,97,108,108,32,114,101,99,111,114,
                  100,115,32,102,114,111,109,32,116,97,98,108,101]}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,"\bwith key"}],0,false},
              {text,[5,42,75,101,121,42]},
              {sep,
               [{text,
                 "D. This function has the same semantics regardless of the location of"}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,
               [{text,
                 [25,46,32,73,102,32,116,104,101,32,116,97,98,108,101,32,105,
                  115,32,111,102,32,116,121,112,101]}],
               0,false},
              {text,[5,42,98,97,103,42]},
              {sep,
               [{text,
                 [14,44,32,116,104,101,32,102,117,110,99,116,105,111,110]}],
               0,false},
              {text,
               [23,42,109,110,101,115,105,97,58,114,101,97,100,40,84,97,98,44,
                32,75,101,121,41,42]},
              {sep,
               [{text,
                 "<can return an arbitrarily long list. If the table is of type"}],
               0,false},
              {text,[5,42,115,101,116,42]},
              {sep,[{text,"$, the list is either of length 1, or"}],0,false},
              {text,[4,42,91,93,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "EThe semantics of this function is context-sensitive. For details, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 "4. In transaction-context, it acquires a lock of type"}],
               0,false},
              {text,"\n*LockKind*"},
              {sep,[{text,"\e. Currently, the lock types"}],0,false},
              {text,[6,42,114,101,97,100,42]},
              {sep,[{text,[1,44]}],0,false},
              {text,[7,42,119,114,105,116,101,42]},
              {sep,[{text,[5,44,32,97,110,100]}],0,false},
              {text,[14,42,115,116,105,99,107,121,95,119,114,105,116,101,42]},
              {sep,
               [{text,
                 [14,97,114,101,32,115,117,112,112,111,114,116,101,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "CIf the user wants to update the record, it is more efficient to use"}],
               0,false},
              {text,
               [20,42,119,114,105,116,101,47,115,116,105,99,107,121,95,119,
                114,105,116,101,42]},
              {sep,[{text,[6,97,115,32,116,104,101]}],0,false},
              {text,"\n*LockKind*"},
              {sep,
               [{text,
                 "Â¨. If majority checking is active on the table, it is checked as soon as a write lock is attempted. This can be used to end quickly if the majority condition is not met."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"1## read_lock_table(Tab) -> ok | transaction abort"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$Sets a read lock on an entire table."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"read_lock_table\">read_lock_table</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,67,97,108,108,115,32,116,104,101,32,102,117,110,99,116,
                  105,111,110]}],
               0,false},
              {text,"!*mnesia:lock({table, Tab}, read)*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [28,35,35,32,114,101,112,111,114,116,95,101,118,101,110,116,40,69,
          118,101,110,116,41,32,45,62,32,111,107]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"1Reports a user event to the Mnesia event handler."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"'<a name=\"report_event\">report_event</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "Â¹When tracing a system of Mnesia applications it is useful to be able to interleave Mnesia own events with application-related events that give information about the application context."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [151,87,104,101,110,101,118,101,114,32,116,104,101,32,97,112,
                  112,108,105,99,97,116,105,111,110,32,98,101,103,105,110,115,
                  32,97,32,110,101,119,32,97,110,100,32,100,101,109,97,110,
                  100,105,110,103,32,77,110,101,115,105,97,32,116,97,115,107,
                  44,32,111,114,32,105,102,32,105,116,32,101,110,116,101,114,
                  115,32,97,32,110,101,119,32,105,110,116,101,114,101,115,116,
                  105,110,103,32,112,104,97,115,101,32,105,110,32,105,116,115,
                  32,101,120,101,99,117,116,105,111,110,44,32,105,116,32,99,
                  97,110,32,98,101,32,97,32,103,111,111,100,32,105,100,101,97,
                  32,116,111,32,117,115,101]}],
               0,false},
              {text,
               [23,42,109,110,101,115,105,97,58,114,101,112,111,114,116,95,
                101,118,101,110,116,47,49,42]},
              {sep,[{text,[1,46]}],0,false},
              {text,[7,42,69,118,101,110,116,42]},
              {sep,
               [{text,
                 [31,99,97,110,32,98,101,32,97,110,121,32,116,101,114,109,32,
                  97,110,100,32,103,101,110,101,114,97,116,101,115,32,97]}],
               0,false},
              {text,
               [22,42,123,109,110,101,115,105,97,95,117,115,101,114,44,32,69,
                118,101,110,116,125,42]},
              {sep,
               [{text,
                 "?event for any processes that subscribe to Mnesia system events."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "E## restore(Opaque, Args) -> {atomic, RestoredTabs} |{aborted, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [25,79,110,108,105,110,101,32,114,101,115,116,111,114,101,32,111,
              102,32,98,97,99,107,117,112,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [29,60,97,32,110,97,109,101,61,34,114,101,115,116,111,114,101,34,62,
         114,101,115,116,111,114,101,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "ZWith this function, tables can be restored online from a backup without restarting Mnesia."}],
               0,false},
              {text,"\b*Opaque*"},
              {sep,[{text,"\"is forwarded to the backup module."}],0,false},
              {text,[6,42,65,114,103,115,42]},
              {sep,[{text,"\"is a list of the following tuples:"}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {above,
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [20,42,123,109,111,100,117,108,101,44,66,97,99,107,117,112,
                  77,111,100,125,42]},
                {sep,
                 [{text,
                   [19,46,32,84,104,101,32,98,97,99,107,117,112,32,109,111,
                    100,117,108,101]}],
                 0,false},
                {text,"\v*BackupMod*"},
                {sep,
                 [{text,
                   "Ris used to access the backup media. If omitted, the default backup module is used."}],
                 0,false}],
               0,false}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [24,42,123,115,107,105,112,95,116,97,98,108,101,115,44,32,84,
                  97,98,76,105,115,116,125,42]},
                {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                {text,"\t*TabList*"},
                {sep,
                 [{text,
                   ";is a list of tables that is not to be read from the backup."}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [25,42,123,99,108,101,97,114,95,116,97,98,108,101,115,44,32,
                 84,97,98,76,105,115,116,125,42]},
               {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
               {text,"\t*TabList*"},
               {sep,
                [{text,
                  "Ãµis a list of tables that is to be cleared before the records from the backup are inserted. That is, all records in the tables are deleted before the tables are restored. Schema information about the tables is not cleared or read from the backup."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [24,42,123,107,101,101,112,95,116,97,98,108,101,115,44,32,84,
                97,98,76,105,115,116,125,42]},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,"\t*TabList*"},
              {sep,
               [{text,
                 "Ã´is a list of tables that is not to be cleared before the records from the backup are inserted. That is, the records in the backup are added to the records in the table. Schema information about the tables is not cleared or read from the backup."}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [28,42,123,114,101,99,114,101,97,116,101,95,116,97,98,108,101,
               115,44,32,84,97,98,76,105,115,116,125,42]},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,"\t*TabList*"},
             {sep,
              [{text,
                "Ã«is a list of tables that is to be recreated before the records from the backup are inserted. The tables are first deleted and then created with the schema information from the backup. All the nodes in the backup need to be operational."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [25,42,123,100,101,102,97,117,108,116,95,111,112,44,32,79,112,
              101,114,97,116,105,111,110,125,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,"\v*Operation*"},
            {sep,[{text,"\eis either of the operations"}],0,false},
            {text,"\r*skip_tables*"},
            {sep,[{text,[1,44]}],0,false},
            {text,[14,42,99,108,101,97,114,95,116,97,98,108,101,115,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,"\r*keep_tables*"},
            {sep,[{text,[4,44,32,111,114]}],0,false},
            {text,
             [17,42,114,101,99,114,101,97,116,101,95,116,97,98,108,101,115,
              42]},
            {sep,
             [{text,
               "Â©. The default operation specifies which operation that is to be used on tables from the backup that is not specified in any of the mentioned lists. If omitted, operation"}],
             0,false},
            {text,[14,42,99,108,101,97,114,95,116,97,98,108,101,115,42]},
            {sep,[{text,"\bis used."}],0,false}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [263,84,104,101,32,97,102,102,101,99,116,101,100,32,116,97,98,
                108,101,115,32,97,114,101,32,119,114,105,116,101,45,108,111,
                99,107,101,100,32,100,117,114,105,110,103,32,116,104,101,32,
                114,101,115,116,111,114,97,116,105,111,110,46,32,72,111,119,
                101,118,101,114,44,32,114,101,103,97,114,100,108,101,115,115,
                32,111,102,32,116,104,101,32,108,111,99,107,32,99,111,110,102,
                108,105,99,116,115,32,99,97,117,115,101,100,32,98,121,32,116,
                104,105,115,44,32,116,104,101,32,97,112,112,108,105,99,97,116,
                105,111,110,115,32,99,97,110,32,99,111,110,116,105,110,117,
                101,32,116,111,32,100,111,32,116,104,101,105,114,32,119,111,
                114,107,32,119,104,105,108,101,32,116,104,101,32,114,101,115,
                116,111,114,97,116,105,111,110,32,105,115,32,98,101,105,110,
                103,32,112,101,114,102,111,114,109,101,100,46,32,84,104,101,
                32,114,101,115,116,111,114,97,116,105,111,110,32,105,115,32,
                112,101,114,102,111,114,109,101,100,32,97,115,32,111,110,101,
                32,115,105,110,103,108,101,32,116,114,97,110,115,97,99,116,
                105,111,110,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [155,73,102,32,116,104,101,32,100,97,116,97,98,97,115,101,32,
                105,115,32,104,117,103,101,44,32,105,116,32,105,116,32,110,
                111,116,32,97,108,119,97,121,115,32,112,111,115,115,105,98,
                108,101,32,116,111,32,114,101,115,116,111,114,101,32,105,116,
                32,111,110,108,105,110,101,46,32,73,110,32,115,117,99,104,32,
                99,97,115,101,115,44,32,114,101,115,116,111,114,101,32,116,
                104,101,32,111,108,100,32,100,97,116,97,98,97,115,101,32,98,
                121,32,105,110,115,116,97,108,108,105,110,103,32,97,32,102,97,
                108,108,98,97,99,107,32,97,110,100,32,116,104,101,110,32,114,
                101,115,116,97,114,116,46]}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"1## s_delete({Tab, Key}) -> ok | transaction abort"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$Sets sticky lock and delete records."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [31,60,97,32,110,97,109,101,61,34,115,95,100,101,108,101,116,101,34,
         62,115,95,100,101,108,101,116,101,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,67,97,108,108,115,32,116,104,101,32,102,117,110,99,116,
                  105,111,110]}],
               0,false},
              {text,"'*mnesia:delete(Tab, Key, sticky_write)*"}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"4## s_delete_object(Record) -> ok | transaction abort"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"#Sets sticky lock and delete record."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"s_delete_object\">s_delete_object</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,67,97,108,108,115,32,116,104,101,32,102,117,110,99,116,
                  105,111,110]}],
               0,false},
              {text,"1*mnesia:delete_object(Tab, Record, sticky_write)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [20,42,101,108,101,109,101,110,116,40,49,44,32,82,101,99,111,
                114,100,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,",## s_write(Record) -> ok | transaction abort"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[6,87,114,105,116,101,115]}],0,false},
            {text,"\b*Record*"},
            {sep,
             [{text,
               [21,97,110,100,32,115,101,116,115,32,115,116,105,99,107,121,32,
                108,111,99,107,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [29,60,97,32,110,97,109,101,61,34,115,95,119,114,105,116,101,34,62,
         115,95,119,114,105,116,101,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,67,97,108,108,115,32,116,104,101,32,102,117,110,99,116,
                  105,111,110]}],
               0,false},
              {text,")*mnesia:write(Tab, Record, sticky_write)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [20,42,101,108,101,109,101,110,116,40,49,44,32,82,101,99,111,
                114,100,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[17,35,35,32,115,99,104,101,109,97,40,41,32,45,62,32,111,107]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "?Prints information about all table definitions on the terminal."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "?Prints information about all table definitions on the terminal."}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [20,35,35,32,115,99,104,101,109,97,40,84,97,98,41,32,45,62,32,111,
          107]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             ">Prints information about one table definition on the terminal."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               ">Prints information about one table definition on the terminal."}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "B## select(Tab, MatchSpec [, Lock]) -> transaction abort | [Object]"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [22,77,97,116,99,104,101,115,32,116,104,101,32,111,98,106,101,
                99,116,115,32,105,110]}],
             0,false},
            {text,[5,42,84,97,98,42]},
            {sep,[{text,[7,97,103,97,105,110,115,116]}],0,false},
            {text,"\v*MatchSpec*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"#<a name=\"select_2_3\">select_2_3</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [28,77,97,116,99,104,101,115,32,116,104,101,32,111,98,106,
                  101,99,116,115,32,105,110,32,116,97,98,108,101]}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[7,117,115,105,110,103,32,97]}],0,false},
              {text,"\f*match_spec*"},
              {sep,
               [{text,
                 [19,97,115,32,100,101,115,99,114,105,98,101,100,32,105,110,
                  32,116,104,101]}],
               0,false},
              {text,"&[ets:select/3](../stdlib/ets#select/3)"},
              {sep,
               [{text,
                 [19,46,32,79,112,116,105,111,110,97,108,108,121,32,97,32,108,
                  111,99,107]}],
               0,false},
              {text,[6,42,114,101,97,100,42]},
              {sep,[{text,[2,111,114]}],0,false},
              {text,[7,42,119,114,105,116,101,42]},
              {sep,
               [{text,".can be given as the third argument. Default is"}],
               0,false},
              {text,[6,42,114,101,97,100,42]},
              {sep,
               [{text,
                 [29,46,32,84,104,101,32,114,101,116,117,114,110,32,118,97,
                  108,117,101,32,100,101,112,101,110,100,115,32,111,110]}],
               0,false},
              {text,"\v*MatchSpec*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"!Notice that for best performance,"}],0,false},
              {text,"\b*select*"},
              {sep,
               [{text,
                 "qis to be used before any modifying operations are done on that table in the same transaction. That is, do not use"}],
               0,false},
              {text,[7,42,119,114,105,116,101,42]},
              {sep,[{text,[2,111,114]}],0,false},
              {text,"\b*delete*"},
              {sep,[{text,"\bbefore a"}],0,false},
              {text,"\b*select*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [26,73,110,32,105,116,115,32,115,105,109,112,108,101,115,116,
                  32,102,111,114,109,115,44,32,116,104,101]}],
               0,false},
              {text,"\f*match_spec*"},
              {sep,
               [{text,
                 [16,108,111,111,107,32,97,115,32,102,111,108,108,111,119,115,
                  58]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {text,
              [29,42,77,97,116,99,104,83,112,101,99,32,61,32,91,77,97,116,99,
               104,70,117,110,99,116,105,111,110,93,42]}],
            0,false},
           {sep,
            [{text,[1,42]},
             {text,"0*MatchFunction = {MatchHead, [Guard], [Result]}*"}],
            0,false}},
          {sep,
           [{text,[1,42]},{text," *MatchHead = tuple() | record()*"}],
           0,false}},
         {sep,
          [{text,[1,42]},{text,"!*Guard = {\"Guardtest name\", ...}*"}],
          0,false}},
        {sep,
         [{text,[1,42]},{text,"\e*Result = \"Term construct\"*"}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [29,70,111,114,32,97,32,99,111,109,112,108,101,116,101,32,
                  100,101,115,99,114,105,112,116,105,111,110,32,111,102]}],
               0,false},
              {text,"\b*select*"},
              {sep,[{text,"\t, see the"}],0,false},
              {text,[15,91,69,82,84,83,93,40,46,47,105,110,100,101,120,41]},
              {sep,
               [{text,
                 [20,85,115,101,114,39,115,32,71,117,105,100,101,32,97,110,
                  100,32,116,104,101]}],
               0,false},
              {text,"\f[ets](./ets)"},
              {sep,
               [{text,
                 [22,109,97,110,117,97,108,32,112,97,103,101,32,105,110,32,83,
                  84,68,76,73,66,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "IFor example, to find the names of all male persons older than 30 in table"}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[1,58]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [152,10,77,97,116,99,104,72,101,97,100,32,61,32,35,112,101,114,
                115,111,110,123,110,97,109,101,61,39,36,49,39,44,32,115,101,
                120,61,109,97,108,101,44,32,97,103,101,61,39,36,50,39,44,32,
                95,61,39,95,39,125,44,10,71,117,97,114,100,32,61,32,123,39,62,
                39,44,32,39,36,50,39,44,32,51,48,125,44,10,82,101,115,117,108,
                116,32,61,32,39,36,49,39,44,10,109,110,101,115,105,97,58,115,
                101,108,101,99,116,40,84,97,98,44,91,123,77,97,116,99,104,72,
                101,97,100,44,32,91,71,117,97,114,100,93,44,32,91,82,101,115,
                117,108,116,93,125,93,41,44]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "b## select(Tab, MatchSpec, NObjects, Lock) -> transaction abort | {[Object],Cont} | '$end_of_table'"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [22,77,97,116,99,104,101,115,32,116,104,101,32,111,98,106,101,
                99,116,115,32,105,110]}],
             0,false},
            {text,[5,42,84,97,98,42]},
            {sep,[{text,[7,97,103,97,105,110,115,116]}],0,false},
            {text,"\v*MatchSpec*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [31,60,97,32,110,97,109,101,61,34,115,101,108,101,99,116,95,52,34,62,
         115,101,108,101,99,116,95,52,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [28,77,97,116,99,104,101,115,32,116,104,101,32,111,98,106,
                  101,99,116,115,32,105,110,32,116,97,98,108,101]}],
               0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[7,117,115,105,110,103,32,97]}],0,false},
              {text,"\f*match_spec*"},
              {sep,
               [{text,
                 [19,97,115,32,100,101,115,99,114,105,98,101,100,32,105,110,
                  32,116,104,101]}],
               0,false},
              {text,[15,91,69,82,84,83,93,40,46,47,105,110,100,101,120,41]},
              {sep,
               [{text,
                 "{User's Guide, and returns a chunk of terms and a continuation. The wanted number of returned terms is specified by argument"}],
               0,false},
              {text,"\n*NObjects*"},
              {sep,
               [{text,
                 [26,46,32,84,104,101,32,108,111,99,107,32,97,114,103,117,109,
                  101,110,116,32,99,97,110,32,98,101]}],
               0,false},
              {text,[6,42,114,101,97,100,42]},
              {sep,[{text,[2,111,114]}],0,false},
              {text,[7,42,119,114,105,116,101,42]},
              {sep,
               [{text,"/. The continuation is to be used as argument to"}],
               0,false},
              {text,
               [17,42,109,110,101,115,105,97,58,115,101,108,101,99,116,47,49,
                42]},
              {sep,[{text,"$, if more or all answers are needed."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"!Notice that for best performance,"}],0,false},
              {text,"\b*select*"},
              {sep,
               [{text,
                 "qis to be used before any modifying operations are done on that table in the same transaction. That is, do not use"}],
               0,false},
              {text,[14,42,109,110,101,115,105,97,58,119,114,105,116,101,42]},
              {sep,[{text,[2,111,114]}],0,false},
              {text,
               [15,42,109,110,101,115,105,97,58,100,101,108,101,116,101,42]},
              {sep,[{text,"\bbefore a"}],0,false},
              {text,
               [15,42,109,110,101,115,105,97,58,115,101,108,101,99,116,42]},
              {sep,
               [{text,
                 [17,46,32,70,111,114,32,101,102,102,105,99,105,101,110,99,
                  121,44]}],
               0,false},
              {text,"\n*NObjects*"},
              {sep,
               [{text,
                 "iis a recommendation only and the result can contain anything from an empty list to all available results."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "H## select(Cont) -> transaction abort | {[Object],Cont} | '$end_of_table'"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [28,67,111,110,116,105,110,117,101,115,32,115,101,108,101,99,116,
              105,110,103,32,111,98,106,101,99,116,115,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 ">Selects more objects with the match specification initiated by"}],
               0,false},
              {text,
               [17,42,109,110,101,115,105,97,58,115,101,108,101,99,116,47,52,
                42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,".Notice that any modifying operations, that is,"}],
               0,false},
              {text,[14,42,109,110,101,115,105,97,58,119,114,105,116,101,42]},
              {sep,[{text,[2,111,114]}],0,false},
              {text,
               [15,42,109,110,101,115,105,97,58,100,101,108,101,116,101,42]},
              {sep,[{text,"\e, that are done between the"}],0,false},
              {text,
               [17,42,109,110,101,115,105,97,58,115,101,108,101,99,116,47,52,
                42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,
               [17,42,109,110,101,115,105,97,58,115,101,108,101,99,116,47,49,
                42]},
              {sep,[{text,"$calls are not visible in the result."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"%## set_debug_level(Level) -> OldLevel"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Changes the internal debug level of Mnesia."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"set_debug_level\">set_debug_level</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "<Changes the internal debug level of Mnesia. For details, see"}],
               0,false},
              {text,
               "=[Section Configuration Parameters](#configuration_parameters)"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"8## set_master_nodes(MasterNodes) -> ok | {error, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"%Sets the master nodes for all tables."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"3<a name=\"set_master_nodes_1\">set_master_nodes_1</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "4For each table Mnesia determines its replica nodes ("}],
               0,false},
              {text,"\n*TabNodes*"},
              {sep,[{text,"\f) and starts"}],0,false},
              {text,".*mnesia:set_master_nodes(Tab, TabMasterNodes)*"},
              {sep,[{text,[7,46,32,119,104,101,114,101]}],0,false},
              {text,
               [16,42,84,97,98,77,97,115,116,101,114,78,111,100,101,115,42]},
              {sep,
               [{text,
                 [22,105,115,32,116,104,101,32,105,110,116,101,114,115,101,99,
                  116,105,111,110,32,111,102]}],
               0,false},
              {text,"\r*MasterNodes*"},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,"\n*TabNodes*"},
              {sep,
               [{text,
                 [20,46,32,70,111,114,32,115,101,109,97,110,116,105,99,115,44,
                  32,115,101,101]}],
               0,false},
              {text,"\e*mnesia:set_master_nodes/2*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "=## set_master_nodes(Tab, MasterNodes) -> ok | {error, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Sets the master nodes for a table."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"3<a name=\"set_master_nodes_2\">set_master_nodes_2</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "Â If the application detects a communication failure (in a potentially partitioned network) that can have caused an inconsistent database, it can use the function"}],
               0,false},
              {text,"+*mnesia:set_master_nodes(Tab, MasterNodes)*"},
              {sep,
               [{text,
                 "Ã½to define from which nodes each table is to be loaded. At startup, the Mnesia normal table load algorithm is bypassed and the table is loaded from one of the master nodes defined for the table, regardless of when and if Mnesia terminated on other nodes."}],
               0,false},
              {text,"\r*MasterNodes*"},
              {sep,
               [{text,
                 "<can only contain nodes where the table has a replica. If the"}],
               0,false},
              {text,"\r*MasterNodes*"},
              {sep,
               [{text,
                 [143,108,105,115,116,32,105,115,32,101,109,112,116,121,44,32,
                  116,104,101,32,109,97,115,116,101,114,32,110,111,100,101,32,
                  114,101,99,111,118,101,114,121,32,109,101,99,104,97,110,105,
                  115,109,32,102,111,114,32,116,104,101,32,112,97,114,116,105,
                  99,117,108,97,114,32,116,97,98,108,101,32,105,115,32,114,
                  101,115,101,116,44,32,97,110,100,32,116,104,101,32,110,111,
                  114,109,97,108,32,108,111,97,100,32,109,101,99,104,97,110,
                  105,115,109,32,105,115,32,117,115,101,100,32,97,116,32,116,
                  104,101,32,110,101,120,116,32,114,101,115,116,97,114,116,
                  46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "bThe master node setting is always local. It can be changed regardless if Mnesia is started or not."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "DThe database can also become inconsistent if configuration parameter"}],
               0,false},
              {text,
               [23,42,109,97,120,95,119,97,105,116,95,102,111,114,95,100,101,
                99,105,115,105,111,110,42]},
              {sep,[{text,"\ris used or if"}],0,false},
              {text,"\e*mnesia:force_load_table/1*"},
              {sep,[{text,"\bis used."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"7## snmp_close_table(Tab) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "9Removes the possibility for SNMP to manipulate the table."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "9Removes the possibility for SNMP to manipulate the table."}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         ">## snmp_get_mnesia_key(Tab, RowIndex) -> {ok, Key} | undefined"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"5Gets the corresponding Mnesia key from an SNMP index."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[14,84,97,98,32,58,58,61,32,97,116,111,109,40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [24,82,111,119,73,110,100,101,120,32,58,58,61,32,91,105,110,116,
              101,103,101,114,40,41,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"#Key ::= key() | {key(), key(), ...}"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,",key() ::= integer() | string() | [integer()]"}],
         0,false}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [133,84,114,97,110,115,102,111,114,109,115,32,97,110,32,83,78,
                77,80,32,105,110,100,101,120,32,116,111,32,116,104,101,32,99,
                111,114,114,101,115,112,111,110,100,105,110,103,32,77,110,101,
                115,105,97,32,107,101,121,46,32,73,102,32,116,104,101,32,83,
                78,77,80,32,116,97,98,108,101,32,104,97,115,32,109,117,108,
                116,105,112,108,101,32,107,101,121,115,44,32,116,104,101,32,
                107,101,121,32,105,115,32,97,32,116,117,112,108,101,32,111,
                102,32,116,104,101,32,107,101,121,32,99,111,108,117,109,110,
                115,46]}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "E## snmp_get_next_index(Tab, RowIndex) -> {ok, NextIndex} | endOfTable"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"/Gets the index of the next lexicographical row."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[14,84,97,98,32,58,58,61,32,97,116,111,109,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [24,82,111,119,73,110,100,101,120,32,58,58,61,32,91,105,110,116,
             101,103,101,114,40,41,93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [25,78,101,120,116,73,110,100,101,120,32,58,58,61,32,91,105,110,
            116,101,103,101,114,40,41,93]}],
         0,false}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\n*RowIndex*"},
              {sep,
               [{text,
                 "}can specify a non-existing row. Specifically, it can be the empty list. Returns the index of the next lexicographical row. If"}],
               0,false},
              {text,"\n*RowIndex*"},
              {sep,
               [{text,
                 "Qis the empty list, this function returns the index of the first row in the table."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"7## snmp_get_row(Tab, RowIndex) -> {ok, Row} | undefined"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,")Retrieves a row indexed by an SNMP index."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[14,84,97,98,32,58,58,61,32,97,116,111,109,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [24,82,111,119,73,110,100,101,120,32,58,58,61,32,91,105,110,116,
             101,103,101,114,40,41,93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [19,82,111,119,32,58,58,61,32,114,101,99,111,114,100,40,84,97,98,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "hReads a row by its SNMP index. This index is specified as an SNMP Object Identifier, a list of integers."}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "B## snmp_open_table(Tab, SnmpStruct) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"*Organizes a Mnesia table as an SNMP table."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[14,84,97,98,32,58,58,61,32,97,116,111,109,40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [30,83,110,109,112,83,116,114,117,99,116,32,58,58,61,32,91,123,
              107,101,121,44,32,116,121,112,101,40,41,125,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"8type() ::= type_spec() | {type_spec(), type_spec(), ...}"}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"-type_spec() ::= fix_string | string | integer"}],
         0,false}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [268,65,32,100,105,114,101,99,116,32,111,110,101,45,116,111,45,
                111,110,101,32,109,97,112,112,105,110,103,32,99,97,110,32,98,
                101,32,101,115,116,97,98,108,105,115,104,101,100,32,98,101,
                116,119,101,101,110,32,77,110,101,115,105,97,32,116,97,98,108,
                101,115,32,97,110,100,32,83,78,77,80,32,116,97,98,108,101,115,
                46,32,77,97,110,121,32,116,101,108,101,99,111,109,109,117,110,
                105,99,97,116,105,111,110,32,97,112,112,108,105,99,97,116,105,
                111,110,115,32,97,114,101,32,99,111,110,116,114,111,108,108,
                101,100,32,97,110,100,32,109,111,110,105,116,111,114,101,100,
                32,98,121,32,116,104,101,32,83,78,77,80,32,112,114,111,116,
                111,99,111,108,46,32,84,104,105,115,32,99,111,110,110,101,99,
                116,105,111,110,32,98,101,116,119,101,101,110,32,77,110,101,
                115,105,97,32,97,110,100,32,83,78,77,80,32,109,97,107,101,115,
                32,105,116,32,115,105,109,112,108,101,32,97,110,100,32,99,111,
                110,118,101,110,105,101,110,116,32,116,111,32,97,99,104,105,
                101,118,101,32,116,104,105,115,32,109,97,112,112,105,110,103,
                46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\bArgument"}],0,false},
              {text,"\f*SnmpStruct*"},
              {sep,
               [{text,
                 [445,105,115,32,97,32,108,105,115,116,32,111,102,32,83,78,77,
                  80,32,105,110,102,111,114,109,97,116,105,111,110,46,32,67,
                  117,114,114,101,110,116,108,121,44,32,116,104,101,32,111,
                  110,108,121,32,105,110,102,111,114,109,97,116,105,111,110,
                  32,110,101,101,100,101,100,32,105,115,32,105,110,102,111,
                  114,109,97,116,105,111,110,32,97,98,111,117,116,32,116,104,
                  101,32,107,101,121,32,116,121,112,101,115,32,105,110,32,116,
                  104,101,32,116,97,98,108,101,46,32,77,117,108,116,105,112,
                  108,101,32,107,101,121,115,32,99,97,110,110,111,116,32,98,
                  101,32,104,97,110,100,108,101,100,32,105,110,32,77,110,101,
                  115,105,97,44,32,98,117,116,32,109,97,110,121,32,83,78,77,
                  80,32,116,97,98,108,101,115,32,104,97,118,101,32,109,117,
                  108,116,105,112,108,101,32,107,101,121,115,46,32,84,104,101,
                  114,101,102,111,114,101,44,32,116,104,101,32,102,111,108,
                  108,111,119,105,110,103,32,99,111,110,118,101,110,116,105,
                  111,110,32,105,115,32,117,115,101,100,58,32,105,102,32,97,
                  32,116,97,98,108,101,32,104,97,115,32,109,117,108,116,105,
                  112,108,101,32,107,101,121,115,44,32,116,104,101,115,101,32,
                  109,117,115,116,32,97,108,119,97,121,115,32,98,101,32,115,
                  116,111,114,101,100,32,97,115,32,97,32,116,117,112,108,101,
                  32,111,102,32,116,104,101,32,107,101,121,115,46,32,73,110,
                  102,111,114,109,97,116,105,111,110,32,97,98,111,117,116,32,
                  116,104,101,32,107,101,121,32,116,121,112,101,115,32,105,
                  115,32,115,112,101,99,105,102,105,101,100,32,97,115,32,97,
                  32,116,117,112,108,101,32,111,102,32,97,116,111,109,115,32,
                  100,101,115,99,114,105,98,105,110,103,32,116,104,101,32,116,
                  121,112,101,115,46,32,84,104,101,32,111,110,108,121,32,115,
                  105,103,110,105,102,105,99,97,110,116,32,116,121,112,101,32,
                  105,115]}],
               0,false},
              {text,"\f*fix_string*"},
              {sep,
               [{text,",. This means that a string has a fixed size."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"'For example, the following causes table"}],
               0,false},
              {text,"\b*person*"},
              {sep,
               [{text,
                 [31,116,111,32,98,101,32,111,114,100,101,114,101,100,32,97,
                  115,32,97,110,32,83,78,77,80,32,116,97,98,108,101,58]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,"0\nmnesia:snmp_open_table(person, [{key, string}])"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "Â®Consider the following schema for a table of company employees. Each employee is identified by department number and name. The other table column stores the telephone number:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "|\nmnesia:create_table(employee,\n    [{snmp, [{key, {integer, string}}]},\n     {attributes, record_info(fields, employees)}]),"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "6The corresponding SNMP table would have three columns:"}],
               0,false},
              {text,"\f*department*"},
              {sep,[{text,[1,44]}],0,false},
              {text,[6,42,110,97,109,101,42]},
              {sep,[{text,[5,44,32,97,110,100]}],0,false},
              {text,[7,42,116,101,108,110,111,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "ÃAn option is to have table columns that are not visible through the SNMP protocol. These columns must be the last columns of the table. In the previous example, the SNMP table could have columns"}],
               0,false},
              {text,"\f*department*"},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,[6,42,110,97,109,101,42]},
              {sep,
               [{text,"+only. The application could then use column"}],
               0,false},
              {text,[7,42,116,101,108,110,111,42]},
              {sep,
               [{text,
                 "=internally, but it would not be visible to the SNMP managers."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "[In a table monitored by SNMP, all elements must be integers, strings, or lists of integers."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "nWhen a table is SNMP ordered, modifications are more expensive than usual, O(logN). Also, more memory is used."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "lNotice that only the lexicographical SNMP ordering is implemented in Mnesia, not the actual SNMP monitoring."}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\"## start() -> ok | {error, Reason}"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [29,83,116,97,114,116,115,32,97,32,108,111,99,97,108,32,77,110,
              101,115,105,97,32,115,121,115,116,101,109,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [25,60,97,32,110,97,109,101,61,34,115,116,97,114,116,34,62,115,116,97,
         114,116,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"1Mnesia startup is asynchronous. The function call"}],
               0,false},
              {text,
               [16,42,109,110,101,115,105,97,58,115,116,97,114,116,40,41,42]},
              {sep,
               [{text,
                 [16,114,101,116,117,114,110,115,32,116,104,101,32,97,116,111,
                  109]}],
               0,false},
              {text,[4,42,111,107,42]},
              {sep,
               [{text,
                 [262,97,110,100,32,116,104,101,110,32,115,116,97,114,116,115,
                  32,116,111,32,105,110,105,116,105,97,108,105,122,101,32,116,
                  104,101,32,100,105,102,102,101,114,101,110,116,32,116,97,98,
                  108,101,115,46,32,68,101,112,101,110,100,105,110,103,32,111,
                  110,32,116,104,101,32,115,105,122,101,32,111,102,32,116,104,
                  101,32,100,97,116,97,98,97,115,101,44,32,116,104,105,115,32,
                  99,97,110,32,116,97,107,101,32,115,111,109,101,32,116,105,
                  109,101,44,32,97,110,100,32,116,104,101,32,97,112,112,108,
                  105,99,97,116,105,111,110,32,112,114,111,103,114,97,109,109,
                  101,114,32,109,117,115,116,32,119,97,105,116,32,102,111,114,
                  32,116,104,101,32,116,97,98,108,101,115,32,116,104,97,116,
                  32,116,104,101,32,97,112,112,108,105,99,97,116,105,111,110,
                  32,110,101,101,100,115,32,98,101,102,111,114,101,32,116,104,
                  101,121,32,99,97,110,32,98,101,32,117,115,101,100,46,32,84,
                  104,105,115,32,105,115,32,97,99,104,105,101,118,101,100,32,
                  98,121,32,117,115,105,110,103,32,116,104,101,32,102,117,110,
                  99,116,105,111,110]}],
               0,false},
              {text,
               [26,42,109,110,101,115,105,97,58,119,97,105,116,95,102,111,114,
                95,116,97,98,108,101,115,47,50,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [408,84,104,101,32,115,116,97,114,116,117,112,32,112,114,111,
                  99,101,100,117,114,101,32,102,111,114,32,97,32,115,101,116,
                  32,111,102,32,77,110,101,115,105,97,32,110,111,100,101,115,
                  32,105,115,32,97,32,102,97,105,114,108,121,32,99,111,109,
                  112,108,105,99,97,116,101,100,32,111,112,101,114,97,116,105,
                  111,110,46,32,65,32,77,110,101,115,105,97,32,115,121,115,
                  116,101,109,32,99,111,110,115,105,115,116,115,32,111,102,32,
                  97,32,115,101,116,32,111,102,32,110,111,100,101,115,44,32,
                  119,105,116,104,32,77,110,101,115,105,97,32,115,116,97,114,
                  116,101,100,32,108,111,99,97,108,108,121,32,111,110,32,97,
                  108,108,32,112,97,114,116,105,99,105,112,97,116,105,110,103,
                  32,110,111,100,101,115,46,32,78,111,114,109,97,108,108,121,
                  44,32,101,97,99,104,32,110,111,100,101,32,104,97,115,32,97,
                  32,100,105,114,101,99,116,111,114,121,32,119,104,101,114,
                  101,32,97,108,108,32,116,104,101,32,77,110,101,115,105,97,
                  32,102,105,108,101,115,32,97,114,101,32,119,114,105,116,116,
                  101,110,46,32,84,104,105,115,32,100,105,114,101,99,116,111,
                  114,121,32,105,115,32,114,101,102,101,114,114,101,100,32,
                  116,111,32,97,115,32,116,104,101,32,77,110,101,115,105,97,
                  32,100,105,114,101,99,116,111,114,121,46,32,77,110,101,115,
                  105,97,32,99,97,110,32,97,108,115,111,32,98,101,32,115,116,
                  97,114,116,101,100,32,111,110,32,100,105,115,99,45,108,101,
                  115,115,32,110,111,100,101,115,46,32,70,111,114,32,109,111,
                  114,101,32,105,110,102,111,114,109,97,116,105,111,110,32,97,
                  98,111,117,116,32,100,105,115,99,45,108,101,115,115,32,110,
                  111,100,101,115,44,32,115,101,101]}],
               0,false},
              {text,
               [24,42,109,110,101,115,105,97,58,99,114,101,97,116,101,95,115,
                99,104,101,109,97,47,49,42]},
              {sep,
               [{text,
                 [21,97,110,100,32,116,104,101,32,85,115,101,114,39,115,32,71,
                  117,105,100,101,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "Â½The set of nodes that makes up a Mnesia system is kept in a schema. Mnesia nodes can be added to or removed from the schema. The initial schema is normally created on disc with the function"}],
               0,false},
              {text,
               [24,42,109,110,101,115,105,97,58,99,114,101,97,116,101,95,115,
                99,104,101,109,97,47,49,42]},
              {sep,
               [{text,
                 "Ã. On disc-less nodes, a tiny default schema is generated each time Mnesia is started. During the startup procedure, Mnesia exchanges schema information between the nodes to verify that the table definitions are compatible."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "ÃEach schema has a unique cookie, which can be regarded as a unique schema identifier. The cookie must be the same on all nodes where Mnesia is supposed to run. For details, see the User's Guide."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "oThe schema file and all other files that Mnesia needs are kept in the Mnesia directory. The command-line option"}],
               0,false},
              {text,
               [17,42,45,109,110,101,115,105,97,32,100,105,114,32,68,105,114,
                42]},
              {sep,
               [{text,
                 [154,99,97,110,32,98,101,32,117,115,101,100,32,116,111,32,
                  115,112,101,99,105,102,121,32,116,104,101,32,108,111,99,97,
                  116,105,111,110,32,111,102,32,116,104,105,115,32,100,105,
                  114,101,99,116,111,114,121,32,116,111,32,116,104,101,32,77,
                  110,101,115,105,97,32,115,121,115,116,101,109,46,32,73,102,
                  32,110,111,32,115,117,99,104,32,99,111,109,109,97,110,100,
                  45,108,105,110,101,32,111,112,116,105,111,110,32,105,115,32,
                  102,111,117,110,100,44,32,116,104,101,32,110,97,109,101,32,
                  111,102,32,116,104,101,32,100,105,114,101,99,116,111,114,
                  121,32,100,101,102,97,117,108,116,115,32,116,111]}],
               0,false},
              {text,"\r*Mnesia.Node*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\e*application:start(mnesia)*"},
              {sep,
               [{text,
                 [17,99,97,110,32,97,108,115,111,32,98,101,32,117,115,101,100,
                  46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [20,35,35,32,115,116,111,112,40,41,32,45,62,32,115,116,111,112,112,
          101,100]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [21,83,116,111,112,115,32,77,110,101,115,105,97,32,108,111,99,97,
              108,108,121,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [23,60,97,32,110,97,109,101,61,34,115,116,111,112,34,62,115,116,111,
         112,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,")Stops Mnesia locally on the current node."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [26,42,97,112,112,108,105,99,97,116,105,111,110,58,115,116,111,
                112,40,109,110,101,115,105,97,41,42]},
              {sep,
               [{text,
                 [17,99,97,110,32,97,108,115,111,32,98,101,32,117,115,101,100,
                  46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,";## subscribe(EventCategory) -> {ok, Node} | {error, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [28,83,117,98,115,99,114,105,98,101,115,32,116,111,32,101,118,
                101,110,116,115,32,111,102,32,116,121,112,101]}],
             0,false},
            {text,[15,42,69,118,101,110,116,67,97,116,101,103,111,114,121,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"!<a name=\"subscribe\">subscribe</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,")Ensures that a copy of all events of type"}],
               0,false},
              {text,
               [15,42,69,118,101,110,116,67,97,116,101,103,111,114,121,42]},
              {sep,
               [{text,
                 "Eis sent to the caller. The available event types are described in the"}],
               0,false},
              {text,"-[User's Guide](./Mnesia_chap5#event_handling)"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,":## sync_dirty(Fun, [, Args]) -> ResultOfFun | exit(Reason)"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\tCalls the"}],0,false},
            {text,[5,42,70,117,110,42]},
            {sep,
             [{text,"4in a context that is not protected by a transaction."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"#<a name=\"sync_dirty\">sync_dirty</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\tCalls the"}],0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 "_in a context that is not protected by a transaction. The Mnesia function calls performed in the"}],
               0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 "^are mapped to the corresponding dirty functions. It is performed in almost the same context as"}],
               0,false},
              {text,
               [24,42,109,110,101,115,105,97,58,97,115,121,110,99,95,100,105,
                114,116,121,47,49,44,50,42]},
              {sep,
               [{text,
                 [151,46,32,84,104,101,32,100,105,102,102,101,114,101,110,99,
                  101,32,105,115,32,116,104,97,116,32,116,104,101,32,111,112,
                  101,114,97,116,105,111,110,115,32,97,114,101,32,112,101,114,
                  102,111,114,109,101,100,32,115,121,110,99,104,114,111,110,
                  111,117,115,108,121,46,32,84,104,101,32,99,97,108,108,101,
                  114,32,119,97,105,116,115,32,102,111,114,32,116,104,101,32,
                  117,112,100,97,116,101,115,32,116,111,32,98,101,32,112,101,
                  114,102,111,114,109,101,100,32,111,110,32,97,108,108,32,97,
                  99,116,105,118,101,32,114,101,112,108,105,99,97,115,32,98,
                  101,102,111,114,101,32,116,104,101]}],
               0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 [25,114,101,116,117,114,110,115,46,32,70,111,114,32,100,101,
                  116,97,105,108,115,44,32,115,101,101]}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 [21,97,110,100,32,116,104,101,32,85,115,101,114,39,115,32,71,
                  117,105,100,101,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"%## sync_log() -> ok | {error, Reason}"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Performs a file sync of the local log file."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "Â³Ensures that the local transaction log file is synced to disk. On a single node system, data written to disk tables since the last dump can be lost if there is a power outage. See"}],
               0,false},
              {text,
               [25,91,100,117,109,112,95,108,111,103,47,48,93,40,35,100,117,
                109,112,95,108,111,103,47,48,41]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "Z## sync_transaction(Fun, [[, Args], Retries]) -> {aborted, Reason} | {atomic, ResultOfFun}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"%Synchronously executes a transaction."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"/<a name=\"sync_transaction\">sync_transaction</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [139,87,97,105,116,115,32,117,110,116,105,108,32,100,97,116,
                  97,32,104,97,118,101,32,98,101,101,110,32,99,111,109,109,
                  105,116,116,101,100,32,97,110,100,32,108,111,103,103,101,
                  100,32,116,111,32,100,105,115,107,32,40,105,102,32,100,105,
                  115,107,32,105,115,32,117,115,101,100,41,32,111,110,32,101,
                  118,101,114,121,32,105,110,118,111,108,118,101,100,32,110,
                  111,100,101,32,98,101,102,111,114,101,32,105,116,32,114,101,
                  116,117,114,110,115,44,32,111,116,104,101,114,119,105,115,
                  101,32,105,116,32,98,101,104,97,118,101,115,32,97,115]}],
               0,false},
              {text,
               [28,42,109,110,101,115,105,97,58,116,114,97,110,115,97,99,116,
                105,111,110,47,91,49,44,50,44,51,93,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "^This functionality can be used to avoid that one process overloads a database on another node."}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"9## system_info(InfoKey) -> Info | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Returns information about the Mnesia system."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"%<a name=\"system_info\">system_info</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "LReturns information about the Mnesia system, such as transaction statistics,"}],
               0,false},
              {text,"\n*db_nodes*"},
              {sep,
               [{text,
                 ">, and configuration parameters. The valid keys are as follows:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[1,42]},
                                         {sep,
                                          [{above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{sep,
                                                 [{text,[5,42,97,108,108,42]},
                                                  {sep,
                                                   [{text,
                                                     "C. Returns a list of all local system information. Each element is a"}],
                                                   0,false},
                                                  {text,
                                                   [20,42,123,73,110,102,111,
                                                    75,101,121,44,32,73,110,
                                                    102,111,86,97,108,125,42]},
                                                  {sep,
                                                   [{text,
                                                     [6,116,117,112,108,101,
                                                      46]}],
                                                   0,false}],
                                                 0,false}],
                                               0,true},
                                              null},
                                             null}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{sep,
                                                 [{sep,
                                                   [{text,[3,78,101,119]}],
                                                   0,false},
                                                  {text,"\t*InfoKey*"},
                                                  {sep,
                                                   [{text,
                                                     "#s can be added and old undocumented"}],
                                                   0,false},
                                                  {text,"\t*InfoKey*"},
                                                  {sep,
                                                   [{text,
                                                     " s can be removed without notice."}],
                                                   0,false}],
                                                 0,false}],
                                               0,true},
                                              null},
                                             null}}],
                                          0,false}],
                                        0,false},
                                       {sep,
                                        [{text,[1,42]},
                                         {sep,
                                          [{text,
                                            [15,42,97,99,99,101,115,115,95,
                                             109,111,100,117,108,101,42]},
                                           {sep,
                                            [{text,
                                              "Z. Returns the name of module that is configured to be the activity access callback module."}],
                                            0,false}],
                                          0,false}],
                                        0,false}},
                                      {sep,
                                       [{text,[1,42]},
                                        {sep,
                                         [{text,"\r*auto_repair*"},
                                          {sep,[{text,"\t. Returns"}],0,false},
                                          {text,[6,42,116,114,117,101,42]},
                                          {sep,[{text,[2,111,114]}],0,false},
                                          {text,[7,42,102,97,108,115,101,42]},
                                          {sep,
                                           [{text,
                                             "^to indicate if Mnesia is configured to start the auto-repair facility on corrupted disc files."}],
                                           0,false}],
                                         0,false}],
                                       0,false}},
                                     {sep,
                                      [{text,[1,42]},
                                       {sep,
                                        [{text,
                                          [15,42,98,97,99,107,117,112,95,109,
                                           111,100,117,108,101,42]},
                                         {sep,
                                          [{text,
                                            "U. Returns the name of the module that is configured to be the backup callback module."}],
                                          0,false}],
                                        0,false}],
                                      0,false}},
                                    {sep,
                                     [{text,[1,42]},
                                      {sep,
                                       [{text,"\r*checkpoints*"},
                                        {sep,
                                         [{text,
                                           "O. Returns a list of the names of the checkpoints currently active on this node."}],
                                         0,false}],
                                       0,false}],
                                     0,false}},
                                   {sep,
                                    [{text,[1,42]},
                                     {sep,
                                      [{text,
                                        [14,42,101,118,101,110,116,95,109,111,
                                         100,117,108,101,42]},
                                       {sep,
                                        [{text,
                                          "K. Returns the name of the module that is the event handler callback module."}],
                                        0,false}],
                                      0,false}],
                                    0,false}},
                                  {sep,
                                   [{text,[1,42]},
                                    {sep,
                                     [{text,"\n*db_nodes*"},
                                      {sep,
                                       [{text,
                                         "Â´. Returns the nodes that make up the persistent database. Disc-less nodes are only included in the list of nodes if they explicitly have been added to the schema, for example, with"}],
                                       0,false},
                                      {text,
                                       [25,42,109,110,101,115,105,97,58,97,
                                        100,100,95,116,97,98,108,101,95,99,
                                        111,112,121,47,51,42]},
                                      {sep,
                                       [{text,
                                         "@. The function can be started even if Mnesia is not yet running."}],
                                       0,false}],
                                     0,false}],
                                   0,false}},
                                 {sep,
                                  [{text,[1,42]},
                                   {sep,
                                    [{text,[7,42,100,101,98,117,103,42]},
                                     {sep,
                                      [{text,
                                        ",. Returns the current debug level of Mnesia."}],
                                      0,false}],
                                    0,false}],
                                  0,false}},
                                {sep,
                                 [{text,[1,42]},
                                  {sep,
                                   [{text,"\v*directory*"},
                                    {sep,
                                     [{text,
                                       "_. Returns the name of the Mnesia directory. It can be called even if Mnesia is not yet running."}],
                                     0,false}],
                                   0,false}],
                                 0,false}},
                               {sep,
                                [{text,[1,42]},
                                 {sep,
                                  [{above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{sep,
                                         [{text,
                                           [26,42,100,117,109,112,95,108,111,
                                            103,95,108,111,97,100,95,114,101,
                                            103,117,108,97,116,105,111,110,
                                            42]},
                                          {sep,
                                           [{text,
                                             "[. Returns a boolean that tells if Mnesia is configured to regulate the dumper process load."}],
                                           0,false}],
                                         0,false}],
                                       0,true},
                                      null},
                                     null}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{sep,
                                         [{text,
                                           "AThis feature is temporary and will be removed in future releases."}],
                                         0,false}],
                                       0,true},
                                      null},
                                     null}}],
                                  0,false}],
                                0,false}},
                              {sep,
                               [{text,[1,42]},
                                {sep,
                                 [{text,
                                   [25,42,100,117,109,112,95,108,111,103,95,
                                    116,105,109,101,95,116,104,114,101,115,
                                    104,111,108,100,42]},
                                  {sep,
                                   [{text,
                                     "G. Returns the time threshold for transaction log dumps in milliseconds."}],
                                   0,false}],
                                 0,false}],
                               0,false}},
                             {sep,
                              [{text,[1,42]},
                               {sep,
                                [{text,
                                  [26,42,100,117,109,112,95,108,111,103,95,
                                   117,112,100,97,116,101,95,105,110,95,112,
                                   108,97,99,101,42]},
                                 {sep,
                                  [{text,
                                    "Â¬. Returns a boolean that tells if Mnesia is configured to perform the updates in the Dets files directly, or if the updates are to be performed in a copy of the Dets files."}],
                                  0,false}],
                                0,false}],
                              0,false}},
                            {sep,
                             [{text,[1,42]},
                              {sep,
                               [{text,
                                 [26,42,100,117,109,112,95,108,111,103,95,119,
                                  114,105,116,101,95,116,104,114,101,115,104,
                                  111,108,100,42]},
                                {sep,
                                 [{text,
                                   "g. Returns the write threshold for transaction log dumps as the number of writes to the transaction log."}],
                                 0,false}],
                               0,false}],
                             0,false}},
                           {sep,
                            [{text,[1,42]},
                             {sep,
                              [{text,
                                [16,42,101,120,116,114,97,95,100,98,95,110,
                                 111,100,101,115,42]},
                               {sep,
                                [{text,
                                  [25,46,32,82,101,116,117,114,110,115,32,97,
                                   32,108,105,115,116,32,111,102,32,101,120,
                                   116,114,97]}],
                                0,false},
                               {text,"\n*db_nodes*"},
                               {sep,
                                [{text,"\eto be contacted at startup."}],
                                0,false}],
                              0,false}],
                            0,false}},
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{text,
                               [20,42,102,97,108,108,98,97,99,107,95,97,99,
                                116,105,118,97,116,101,100,42]},
                              {sep,[{text,"\t. Returns"}],0,false},
                              {text,[6,42,116,114,117,101,42]},
                              {sep,
                               [{text,
                                 "%if a fallback is activated, otherwise"}],
                               0,false},
                              {text,[7,42,102,97,108,115,101,42]},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,false}},
                         {sep,
                          [{text,[1,42]},
                           {sep,
                            [{text,"\f*held_locks*"},
                             {sep,
                              [{text,
                                "D. Returns a list of all locks held by the local Mnesia lock manager."}],
                              0,false}],
                            0,false}],
                          0,false}},
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{text,"\f*is_running*"},
                            {sep,[{text,"\t. Returns"}],0,false},
                            {text,[5,42,121,101,115,42]},
                            {sep,[{text,[2,111,114]}],0,false},
                            {text,[4,42,110,111,42]},
                            {sep,
                             [{text,
                               "4to indicate if Mnesia is running. It can also return"}],
                             0,false},
                            {text,"\n*starting*"},
                            {sep,[{text,[2,111,114]}],0,false},
                            {text,"\n*stopping*"},
                            {sep,
                             [{text,
                               "2. Can be called even if Mnesia is not yet running."}],
                             0,false}],
                           0,false}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{text,
                            [14,42,108,111,99,97,108,95,116,97,98,108,101,115,
                             42]},
                           {sep,
                            [{text,
                              "E. Returns a list of all tables that are configured to reside locally."}],
                            0,false}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,"\f*lock_queue*"},
                          {sep,
                           [{text,
                             "]. Returns a list of all transactions that are queued for execution by the local lock manager."}],
                           0,false}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,"\r*log_version*"},
                         {sep,
                          [{text,
                            "B. Returns the version number of the Mnesia transaction log format."}],
                          0,false}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{text,
                         [20,42,109,97,115,116,101,114,95,110,111,100,101,95,
                          116,97,98,108,101,115,42]},
                        {sep,
                         [{text,
                           "=. Returns a list of all tables with at least one master node."}],
                         0,false}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,
                        [18,42,112,114,111,116,111,99,111,108,95,118,101,114,
                         115,105,111,110,42]},
                       {sep,
                        [{text,
                          "P. Returns the version number of the Mnesia inter-process communication protocol."}],
                        0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              [18,42,114,117,110,110,105,110,103,95,100,98,95,
                               110,111,100,101,115,42]},
                             {sep,
                              [{text,
                                "Â©. Returns a list of nodes where Mnesia currently is running. This function can be called even if Mnesia is not yet running, but it then has slightly different semantics."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "EIf Mnesia is down on the local node, the function returns those other"}],
                              0,false},
                             {text,"\n*db_nodes*"},
                             {sep,[{text,[3,97,110,100]}],0,false},
                             {text,
                              [16,42,101,120,116,114,97,95,100,98,95,110,111,
                               100,101,115,42]},
                             {sep,
                              [{text,"$that for the moment are operational."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "Â¾If Mnesia is started, the function returns those nodes that Mnesia on the local node is fully connected to. Only those nodes that Mnesia has exchanged schema information with are included as"}],
                              0,false},
                             {text,
                              [18,42,114,117,110,110,105,110,103,95,100,98,95,
                               110,111,100,101,115,42]},
                             {sep,
                              [{text,
                                "Ã¥. After the merge of schemas, the local Mnesia system is fully operable and applications can perform access of remote replicas. Before the schema merge, Mnesia only operates locally. Sometimes there are more nodes included in the"}],
                              0,false},
                             {text,
                              [18,42,114,117,110,110,105,110,103,95,100,98,95,
                               110,111,100,101,115,42]},
                             {sep,[{text,"\rlist than all"}],0,false},
                             {text,"\n*db_nodes*"},
                             {sep,[{text,[3,97,110,100]}],0,false},
                             {text,
                              [16,42,101,120,116,114,97,95,100,98,95,110,111,
                               100,101,115,42]},
                             {sep,[{text,"\ttogether."}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      [17,42,115,99,104,101,109,97,95,108,111,99,97,116,105,
                       111,110,42]},
                     {sep,
                      [{text,"&. Returns the initial schema location."}],
                      0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,"\r*subscribers*"},
                    {sep,
                     [{text,
                       "K. Returns a list of local processes currently subscribing to system events."}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,"\b*tables*"},
                   {sep,
                    [{text,"-. Returns a list of all locally known tables."}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [14,42,116,114,97,110,115,97,99,116,105,111,110,115,42]},
                  {sep,
                   [{text,
                     "<. Returns a list of all currently active local transactions."}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [22,42,116,114,97,110,115,97,99,116,105,111,110,95,102,97,
                   105,108,117,114,101,115,42]},
                 {sep,
                  [{text,
                    "]. Returns a number that indicates how many transactions have failed since Mnesia was started."}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [21,42,116,114,97,110,115,97,99,116,105,111,110,95,99,111,
                  109,109,105,116,115,42]},
                {sep,
                 [{text,
                   "n. Returns a number that indicates how many transactions have terminated successfully since Mnesia was started."}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [22,42,116,114,97,110,115,97,99,116,105,111,110,95,114,101,
                 115,116,97,114,116,115,42]},
               {sep,
                [{text,
                  "e. Returns a number that indicates how many transactions have been restarted since Mnesia was started."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [24,42,116,114,97,110,115,97,99,116,105,111,110,95,108,111,103,
                95,119,114,105,116,101,115,42]},
              {sep,
               [{text,
                 "z. Returns a number that indicates how many write operations that have been performed to the transaction log since startup."}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"\t*use_dir*"},
             {sep,
              [{text,
                "|. Returns a boolean that indicates if the Mnesia directory is used or not. Can be started even if Mnesia is not yet running."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\t*version*"},
            {sep,
             [{text,"/. Returns the current version number of Mnesia."}],
             0,false}],
           0,false}],
         0,false}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"(## table(Tab [,[Option]]) -> QueryHandle"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [26,82,101,116,117,114,110,32,97,32,81,76,67,32,113,117,101,114,
              121,32,104,97,110,100,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [25,60,97,32,110,97,109,101,61,34,116,97,98,108,101,34,62,116,97,98,
         108,101,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 ">Returns a Query List Comprehension (QLC) query handle, see the"}],
               0,false},
              {text,[15,91,113,108,99,40,51,41,93,40,46,47,113,108,99,41]},
              {sep,[{text,"!manual page in STDLIB. The module"}],0,false},
              {text,[5,42,113,108,99,42]},
              {sep,
               [{text,
                 "Rimplements a query language that can use Mnesia tables as sources of data. Calling"}],
               0,false},
              {text,
               [18,42,109,110,101,115,105,97,58,116,97,98,108,101,47,49,44,50,
                42]},
              {sep,
               [{text,
                 [24,105,115,32,116,104,101,32,109,101,97,110,115,32,116,111,
                  32,109,97,107,101,32,116,104,101]}],
               0,false},
              {text,"\b*mnesia*"},
              {sep,[{text,[5,116,97,98,108,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,
               [{text,[14,117,115,97,98,108,101,32,116,111,32,81,76,67,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\b*Option*"},
              {sep,
               [{text,
                 "zcan contain Mnesia options or QLC options. Mnesia recognizes the following options (any other option is forwarded to QLC)."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[14,42,123,108,111,99,107,44,32,76,111,99,107,125,42]},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[6,42,108,111,99,107,42]},
             {sep,[{text,[6,99,97,110,32,98,101]}],0,false},
             {text,[6,42,114,101,97,100,42]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,[7,42,119,114,105,116,101,42]},
             {sep,[{text,"\f. Default is"}],0,false},
             {text,[6,42,114,101,97,100,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [20,42,123,110,95,111,98,106,101,99,116,115,44,78,117,109,98,
               101,114,125,42]},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,"\v*n_objects*"},
             {sep,
              [{text,
                [159,115,112,101,99,105,102,105,101,115,32,40,114,111,117,103,
                 104,108,121,41,32,116,104,101,32,110,117,109,98,101,114,32,
                 111,102,32,111,98,106,101,99,116,115,32,114,101,116,117,114,
                 110,101,100,32,102,114,111,109,32,77,110,101,115,105,97,32,
                 116,111,32,81,76,67,46,32,81,117,101,114,105,101,115,32,116,
                 111,32,114,101,109,111,116,101,32,116,97,98,108,101,115,32,
                 99,97,110,32,110,101,101,100,32,97,32,108,97,114,103,101,114,
                 32,99,104,117,110,107,32,116,111,32,114,101,100,117,99,101,
                 32,110,101,116,119,111,114,107,32,111,118,101,114,104,101,97,
                 100,46,32,66,121,32,100,101,102,97,117,108,116,44]}],
              0,false},
             {text,[5,42,49,48,48,42]},
             {sep,
              [{text,
                [31,111,98,106,101,99,116,115,32,97,116,32,97,32,116,105,109,
                 101,32,97,114,101,32,114,101,116,117,114,110,101,100,46]}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [26,42,123,116,114,97,118,101,114,115,101,44,32,83,101,108,101,
              99,116,77,101,116,104,111,100,125,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,"\n*traverse*"},
            {sep,
             [{text,
               "Tdetermines the method to traverse the whole table (if needed). The default method is"}],
             0,false},
            {text,"\b*select*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [30,84,104,101,114,101,32,97,114,101,32,116,119,111,32,97,
                  108,116,101,114,110,97,116,105,118,101,115,32,102,111,114]}],
               0,false},
              {text,"\b*select*"},
              {sep,[{text,[1,58]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\b*select*"},
            {sep,[{text,"#. The table is traversed by calling"}],0,false},
            {text,
             [17,42,109,110,101,115,105,97,58,115,101,108,101,99,116,47,52,
              42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [17,42,109,110,101,115,105,97,58,115,101,108,101,99,116,47,49,
              42]},
            {sep,
             [{text,"1. The match specification (the second argument of"}],
             0,false},
            {text,"\n*select/3*"},
            {sep,
             [{text,
               "Â¡) is assembled by QLC: simple filters are translated into equivalent match specifications. More complicated filters need to be applied to all objects returned by"}],
             0,false},
            {text,"\n*select/3*"},
            {sep,
             [{text,"5given a match specification that matches all objects."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [21,42,123,115,101,108,101,99,116,44,32,77,97,116,99,104,83,112,
              101,99,125,42]},
            {sep,[{text,"\b. As for"}],0,false},
            {text,"\b*select*"},
            {sep,[{text,"#, the table is traversed by calling"}],0,false},
            {text,
             [17,42,109,110,101,115,105,97,58,115,101,108,101,99,116,47,51,
              42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [17,42,109,110,101,115,105,97,58,115,101,108,101,99,116,47,49,
              42]},
            {sep,
             [{text,
               "Â². The difference is that the match specification is explicitly given. This is how to state match specifications that cannot easily be expressed within the syntax provided by QLC."}],
             0,false}],
           0,false}],
         0,false}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "=## table_info(Tab, InfoKey) -> Info | exit({aborted, Reason})"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"&Returns local information about table."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"#<a name=\"table_info\">table_info</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[3,84,104,101]}],0,false},
              {text,[14,42,116,97,98,108,101,95,105,110,102,111,47,50,42]},
              {sep,
               [{text,
                 "ofunction takes two arguments. The first is the name of a Mnesia table. The second is one of the following keys:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {sep,
                                  [{text,[1,42]},
                                   {sep,
                                    [{above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{sep,
                                           [{text,[5,42,97,108,108,42]},
                                            {sep,
                                             [{text,
                                               "B. Returns a list of all local table information. Each element is a"}],
                                             0,false},
                                            {text,
                                             [20,42,123,73,110,102,111,75,101,
                                              121,44,32,73,116,101,109,86,97,
                                              108,125,42]},
                                            {sep,
                                             [{text,
                                               [6,116,117,112,108,101,46]}],
                                             0,false}],
                                           0,false}],
                                         0,true},
                                        null},
                                       null}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{sep,
                                           [{sep,
                                             [{text,[3,78,101,119]}],
                                             0,false},
                                            {text,"\n*InfoItem*"},
                                            {sep,
                                             [{text,
                                               "#s can be added and old undocumented"}],
                                             0,false},
                                            {text,"\n*InfoItem*"},
                                            {sep,
                                             [{text,
                                               " s can be removed without notice."}],
                                             0,false}],
                                           0,false}],
                                         0,true},
                                        null},
                                       null}}],
                                    0,false}],
                                  0,false},
                                 {sep,
                                  [{text,[1,42]},
                                   {sep,
                                    [{text,"\r*access_mode*"},
                                     {sep,
                                      [{text,
                                        ">. Returns the access mode of the table. The access mode can be"}],
                                      0,false},
                                     {text,"\v*read_only*"},
                                     {sep,[{text,[2,111,114]}],0,false},
                                     {text,"\f*read_write*"},
                                     {sep,[{text,[1,46]}],0,false}],
                                    0,false}],
                                  0,false}},
                                {sep,
                                 [{text,[1,42]},
                                  {sep,
                                   [{text,[7,42,97,114,105,116,121,42]},
                                    {sep,
                                     [{text,
                                       "G. Returns the arity of records in the table as specified in the schema."}],
                                     0,false}],
                                   0,false}],
                                 0,false}},
                               {sep,
                                [{text,[1,42]},
                                 {sep,
                                  [{text,"\f*attributes*"},
                                   {sep,
                                    [{text,
                                      "E. Returns the table attribute names that are specified in the schema."}],
                                    0,false}],
                                  0,false}],
                                0,false}},
                              {sep,
                               [{text,[1,42]},
                                {sep,
                                 [{text,"\r*checkpoints*"},
                                  {sep,
                                   [{text,
                                     "_. Returns the names of the currently active checkpoints, which involve this table on this node."}],
                                   0,false}],
                                 0,false}],
                               0,false}},
                             {sep,
                              [{text,[1,42]},
                               {sep,
                                [{text,"\b*cookie*"},
                                 {sep,
                                  [{text,
                                    [285,46,32,82,101,116,117,114,110,115,32,
                                     97,32,116,97,98,108,101,32,99,111,111,
                                     107,105,101,44,32,119,104,105,99,104,32,
                                     105,115,32,97,32,117,110,105,113,117,101,
                                     32,115,121,115,116,101,109,45,103,101,
                                     110,101,114,97,116,101,100,32,105,100,
                                     101,110,116,105,102,105,101,114,32,102,
                                     111,114,32,116,104,101,32,116,97,98,108,
                                     101,46,32,84,104,101,32,99,111,111,107,
                                     105,101,32,105,115,32,117,115,101,100,32,
                                     105,110,116,101,114,110,97,108,108,121,
                                     32,116,111,32,101,110,115,117,114,101,32,
                                     116,104,97,116,32,116,119,111,32,100,105,
                                     102,102,101,114,101,110,116,32,116,97,98,
                                     108,101,32,100,101,102,105,110,105,116,
                                     105,111,110,115,32,117,115,105,110,103,
                                     32,116,104,101,32,115,97,109,101,32,116,
                                     97,98,108,101,32,110,97,109,101,32,99,97,
                                     110,110,111,116,32,97,99,99,105,100,101,
                                     110,116,97,108,108,121,32,98,101,32,105,
                                     110,116,101,114,109,105,120,101,100,46,
                                     32,84,104,101,32,99,111,111,107,105,101,
                                     32,105,115,32,103,101,110,101,114,97,116,
                                     101,100,32,119,104,101,110,32,116,104,
                                     101,32,116,97,98,108,101,32,105,115,32,
                                     99,114,101,97,116,101,100,32,105,110,105,
                                     116,105,97,108,108,121,46]}],
                                  0,false}],
                                0,false}],
                              0,false}},
                            {sep,
                             [{text,[1,42]},
                              {sep,
                               [{text,"\r*disc_copies*"},
                                {sep,
                                 [{text,"\e. Returns the nodes where a"}],
                                 0,false},
                                {text,"\v*disc_copy*"},
                                {sep,
                                 [{text,
                                   "-of the table resides according to the schema."}],
                                 0,false}],
                               0,false}],
                             0,false}},
                           {sep,
                            [{text,[1,42]},
                             {sep,
                              [{text,
                                [18,42,100,105,115,99,95,111,110,108,121,95,
                                 99,111,112,105,101,115,42]},
                               {sep,
                                [{text,"\e. Returns the nodes where a"}],
                                0,false},
                               {text,
                                [16,42,100,105,115,99,95,111,110,108,121,95,
                                 99,111,112,121,42]},
                               {sep,
                                [{text,
                                  "-of the table resides according to the schema."}],
                                0,false}],
                              0,false}],
                            0,false}},
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{text,[7,42,105,110,100,101,120,42]},
                              {sep,
                               [{text,
                                 "<. Returns the list of index position integers for the table."}],
                               0,false}],
                             0,false}],
                           0,false}},
                         {sep,
                          [{text,[1,42]},
                           {sep,
                            [{text,"\v*load_node*"},
                             {sep,
                              [{text,
                                [159,46,32,82,101,116,117,114,110,115,32,116,
                                 104,101,32,110,97,109,101,32,111,102,32,116,
                                 104,101,32,110,111,100,101,32,116,104,97,116,
                                 32,77,110,101,115,105,97,32,108,111,97,100,
                                 101,100,32,116,104,101,32,116,97,98,108,101,
                                 32,102,114,111,109,46,32,84,104,101,32,115,
                                 116,114,117,99,116,117,114,101,32,111,102,32,
                                 116,104,101,32,114,101,116,117,114,110,101,
                                 100,32,118,97,108,117,101,32,105,115,32,117,
                                 110,115,112,101,99,105,102,105,101,100,44,32,
                                 98,117,116,32,99,97,110,32,98,101,32,117,115,
                                 101,102,117,108,32,102,111,114,32,100,101,98,
                                 117,103,103,105,110,103,32,112,117,114,112,
                                 111,115,101,115,46]}],
                              0,false}],
                            0,false}],
                          0,false}},
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{text,"\f*load_order*"},
                            {sep,
                             [{text,
                               "P. Returns the load order priority of the table. It is an integer and defaults to"}],
                             0,false},
                            {text,[3,42,48,42]},
                            {sep,
                             [{text,[7,40,122,101,114,111,41,46]}],
                             0,false}],
                           0,false}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{text,"\r*load_reason*"},
                           {sep,
                            [{text,
                              [155,46,32,82,101,116,117,114,110,115,32,116,
                               104,101,32,114,101,97,115,111,110,32,111,102,
                               32,119,104,121,32,77,110,101,115,105,97,32,100,
                               101,99,105,100,101,100,32,116,111,32,108,111,
                               97,100,32,116,104,101,32,116,97,98,108,101,46,
                               32,84,104,101,32,115,116,114,117,99,116,117,
                               114,101,32,111,102,32,116,104,101,32,114,101,
                               116,117,114,110,101,100,32,118,97,108,117,101,
                               32,105,115,32,117,110,115,112,101,99,105,102,
                               105,101,100,44,32,98,117,116,32,99,97,110,32,
                               98,101,32,117,115,101,102,117,108,32,102,111,
                               114,32,100,101,98,117,103,103,105,110,103,32,
                               112,117,114,112,111,115,101,115,46]}],
                            0,false}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,
                           [15,42,108,111,99,97,108,95,99,111,110,116,101,110,
                            116,42]},
                          {sep,[{text,"\t. Returns"}],0,false},
                          {text,[6,42,116,114,117,101,42]},
                          {sep,[{text,[2,111,114]}],0,false},
                          {text,[7,42,102,97,108,115,101,42]},
                          {sep,
                           [{text,
                             "Sto indicate if the table is configured to have locally unique content on each node."}],
                           0,false}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          [14,42,109,97,115,116,101,114,95,110,111,100,101,
                           115,42]},
                         {sep,
                          [{text,"&. Returns the master nodes of a table."}],
                          0,false}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{text,"\b*memory*"},
                        {sep,
                         [{text,
                           "B. Returns the number of words allocated to the table on this node."}],
                         0,false}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,"\f*ram_copies*"},
                       {sep,[{text,"\e. Returns the nodes where a"}],0,false},
                       {text,"\n*ram_copy*"},
                       {sep,
                        [{text,
                          "-of the table resides according to the schema."}],
                        0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,"\r*record_name*"},
                      {sep,
                       [{text,
                         "?. Returns the record name, common for all records in the table."}],
                       0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,[6,42,115,105,122,101,42]},
                     {sep,
                      [{text,
                        "6. Returns the number of records inserted in the table."}],
                      0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,[6,42,115,110,109,112,42]},
                    {sep,
                     [{text,
                       [26,46,32,82,101,116,117,114,110,115,32,116,104,101,32,
                        83,78,77,80,32,115,116,114,117,99,116,46]}],
                     0,false},
                    {text,[4,42,91,93,42]},
                    {sep,
                     [{text,
                       "6means that the table currently has no SNMP properties."}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [14,42,115,116,111,114,97,103,101,95,116,121,112,101,42]},
                   {sep,
                    [{text,
                      "8. Returns the local storage type of the table. It can be"}],
                    0,false},
                   {text,"\r*disc_copies*"},
                   {sep,[{text,[1,44]}],0,false},
                   {text,"\f*ram_copies*"},
                   {sep,[{text,[1,44]}],0,false},
                   {text,
                    [18,42,100,105,115,99,95,111,110,108,121,95,99,111,112,
                     105,101,115,42]},
                   {sep,[{text,"\r, or the atom"}],0,false},
                   {text,"\t*unknown*"},
                   {sep,[{text,[1,46]}],0,false},
                   {text,"\t*unknown*"},
                   {sep,
                    [{text,
                      "5is returned for all tables that only reside remotely."}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\r*subscribers*"},
                  {sep,
                   [{text,
                     "u. Returns a list of local processes currently subscribing to local table events that involve this table on this node."}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,[6,42,116,121,112,101,42]},
                 {sep,[{text,"\". Returns the table type, which is"}],0,false},
                 {text,[5,42,98,97,103,42]},
                 {sep,[{text,[1,44]}],0,false},
                 {text,[5,42,115,101,116,42]},
                 {sep,[{text,[4,44,32,111,114]}],0,false},
                 {text,"\r*ordered_set*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [17,42,117,115,101,114,95,112,114,111,112,101,114,116,105,
                  101,115,42]},
                {sep,
                 [{text,
                   "i. Returns the user-associated table properties of the table. It is a list of the stored property records."}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\t*version*"},
               {sep,
                [{text,
                  [327,46,32,82,101,116,117,114,110,115,32,116,104,101,32,99,
                   117,114,114,101,110,116,32,118,101,114,115,105,111,110,32,
                   111,102,32,116,104,101,32,116,97,98,108,101,32,100,101,102,
                   105,110,105,116,105,111,110,46,32,84,104,101,32,116,97,98,
                   108,101,32,118,101,114,115,105,111,110,32,105,115,32,105,
                   110,99,114,101,109,101,110,116,101,100,32,119,104,101,110,
                   32,116,104,101,32,116,97,98,108,101,32,100,101,102,105,110,
                   105,116,105,111,110,32,105,115,32,99,104,97,110,103,101,
                   100,46,32,84,104,101,32,116,97,98,108,101,32,100,101,102,
                   105,110,105,116,105,111,110,32,99,97,110,32,98,101,32,105,
                   110,99,114,101,109,101,110,116,101,100,32,100,105,114,101,
                   99,116,108,121,32,119,104,101,110,32,105,116,32,104,97,115,
                   32,98,101,101,110,32,99,104,97,110,103,101,100,32,105,110,
                   32,97,32,115,99,104,101,109,97,32,116,114,97,110,115,97,99,
                   116,105,111,110,44,32,111,114,32,119,104,101,110,32,97,32,
                   99,111,109,109,105,116,116,101,100,32,116,97,98,108,101,32,
                   100,101,102,105,110,105,116,105,111,110,32,105,115,32,109,
                   101,114,103,101,100,32,119,105,116,104,32,116,97,98,108,
                   101,32,100,101,102,105,110,105,116,105,111,110,115,32,102,
                   114,111,109,32,111,116,104,101,114,32,110,111,100,101,115,
                   32,100,117,114,105,110,103,32,115,116,97,114,116,117,112,
                   46]}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [15,42,119,104,101,114,101,95,116,111,95,114,101,97,100,42]},
              {sep,
               [{text,
                 "8. Returns the node where the table can be read. If value"}],
               0,false},
              {text,"\t*nowhere*"},
              {sep,
               [{text,
                 "_is returned, either the table is not loaded or it resides at a remote node that is not running."}],
               0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [16,42,119,104,101,114,101,95,116,111,95,119,114,105,116,101,
               42]},
             {sep,
              [{text,
                "Q. Returns a list of the nodes that currently hold an active replica of the table."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[14,42,119,105,108,100,95,112,97,116,116,101,114,110,42]},
            {sep,
             [{text,
               [144,46,32,82,101,116,117,114,110,115,32,97,32,115,116,114,117,
                99,116,117,114,101,32,116,104,97,116,32,99,97,110,32,98,101,
                32,103,105,118,101,110,32,116,111,32,116,104,101,32,118,97,
                114,105,111,117,115,32,109,97,116,99,104,32,102,117,110,99,
                116,105,111,110,115,32,102,111,114,32,97,32,99,101,114,116,97,
                105,110,32,116,97,98,108,101,46,32,65,32,114,101,99,111,114,
                100,32,116,117,112,108,101,32,105,115,32,119,104,101,114,101,
                32,97,108,108,32,114,101,99,111,114,100,32,102,105,101,108,
                100,115,32,104,97,118,101,32,118,97,108,117,101]}],
             0,false},
            {text,[5,42,39,95,39,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "T## transaction(Fun [[, Args], Retries]) -> {aborted, Reason} | {atomic, ResultOfFun}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [23,69,120,101,99,117,116,101,115,32,97,32,116,114,97,110,115,97,
              99,116,105,111,110,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"%<a name=\"transaction\">transaction</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [30,69,120,101,99,117,116,101,115,32,116,104,101,32,102,117,
                  110,99,116,105,111,110,97,108,32,111,98,106,101,99,116]}],
               0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 [14,119,105,116,104,32,97,114,103,117,109,101,110,116,115]}],
               0,false},
              {text,[6,42,65,114,103,115,42]},
              {sep,
               [{text,
                 [17,97,115,32,97,32,116,114,97,110,115,97,99,116,105,111,110,
                  46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [271,84,104,101,32,99,111,100,101,32,116,104,97,116,32,101,
                  120,101,99,117,116,101,115,32,105,110,115,105,100,101,32,
                  116,104,101,32,116,114,97,110,115,97,99,116,105,111,110,32,
                  99,97,110,32,99,111,110,115,105,115,116,32,111,102,32,97,32,
                  115,101,114,105,101,115,32,111,102,32,116,97,98,108,101,32,
                  109,97,110,105,112,117,108,97,116,105,111,110,32,102,117,
                  110,99,116,105,111,110,115,46,32,73,102,32,115,111,109,101,
                  116,104,105,110,103,32,103,111,101,115,32,119,114,111,110,
                  103,32,105,110,115,105,100,101,32,116,104,101,32,116,114,97,
                  110,115,97,99,116,105,111,110,32,97,115,32,97,32,114,101,
                  115,117,108,116,32,111,102,32,97,32,117,115,101,114,32,101,
                  114,114,111,114,32,111,114,32,97,32,99,101,114,116,97,105,
                  110,32,116,97,98,108,101,32,110,111,116,32,98,101,105,110,
                  103,32,97,118,97,105,108,97,98,108,101,44,32,116,104,101,32,
                  101,110,116,105,114,101,32,116,114,97,110,115,97,99,116,105,
                  111,110,32,105,115,32,116,101,114,109,105,110,97,116,101,
                  100,32,97,110,100,32,116,104,101,32,102,117,110,99,116,105,
                  111,110]}],
               0,false},
              {text,[15,42,116,114,97,110,115,97,99,116,105,111,110,47,49,42]},
              {sep,
               [{text,
                 [17,114,101,116,117,114,110,115,32,116,104,101,32,116,117,
                  112,108,101]}],
               0,false},
              {text,
               [19,42,123,97,98,111,114,116,101,100,44,32,82,101,97,115,111,
                110,125,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [21,73,102,32,97,108,108,32,105,115,32,103,111,105,110,103,
                  32,119,101,108,108,44]}],
               0,false},
              {text,
               [23,42,123,97,116,111,109,105,99,44,32,82,101,115,117,108,116,
                79,102,70,117,110,125,42]},
              {sep,
               [{text,
                 [18,105,115,32,114,101,116,117,114,110,101,100,44,32,119,104,
                  101,114,101]}],
               0,false},
              {text,"\r*ResultOfFun*"},
              {sep,[{text,"&is the value of the last expression in"}],0,false},
              {text,[5,42,70,117,110,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "_A function that adds a family to the database can be written as follows if there is a structure"}],
               0,false},
              {text,"(*{family, Father, Mother, ChildrenList}*"},
              {sep,[{text,[1,58]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [405,10,97,100,100,95,102,97,109,105,108,121,40,123,102,97,109,
                105,108,121,44,32,70,44,32,77,44,32,67,104,105,108,100,114,
                101,110,125,41,32,45,62,10,32,32,32,32,67,104,105,108,100,79,
                105,100,115,32,61,32,108,105,115,116,115,58,109,97,112,40,102,
                117,110,32,111,105,100,47,49,44,32,67,104,105,108,100,114,101,
                110,41,44,10,32,32,32,32,84,114,97,110,115,32,61,32,102,117,
                110,40,41,32,45,62,32,32,32,32,32,32,10,32,32,32,32,32,32,32,
                32,109,110,101,115,105,97,58,119,114,105,116,101,40,70,35,112,
                101,114,115,111,110,123,99,104,105,108,100,114,101,110,32,61,
                32,67,104,105,108,100,79,105,100,115,125,44,32,10,32,32,32,32,
                32,32,32,32,109,110,101,115,105,97,58,119,114,105,116,101,40,
                77,35,112,101,114,115,111,110,123,99,104,105,108,100,114,101,
                110,32,61,32,67,104,105,108,100,79,105,100,115,125,44,10,32,
                32,32,32,32,32,32,32,87,114,105,116,101,32,61,32,102,117,110,
                40,67,104,105,108,100,41,32,45,62,32,109,110,101,115,105,97,
                58,119,114,105,116,101,40,67,104,105,108,100,41,32,101,110,
                100,44,10,32,32,32,32,32,32,32,32,108,105,115,116,115,58,102,
                111,114,101,97,99,104,40,87,114,105,116,101,44,32,67,104,105,
                108,100,114,101,110,41,10,32,32,32,32,101,110,100,44,10,32,32,
                32,32,109,110,101,115,105,97,58,116,114,97,110,115,97,99,116,
                105,111,110,40,84,114,97,110,115,41,46,10,10,111,105,100,40,
                82,101,99,41,32,45,62,32,123,101,108,101,109,101,110,116,40,
                49,44,32,82,101,99,41,44,32,101,108,101,109,101,110,116,40,50,
                44,32,82,101,99,41,125,46]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [289,84,104,105,115,32,99,111,100,101,32,97,100,100,115,32,
                  97,32,115,101,116,32,111,102,32,112,101,111,112,108,101,32,
                  116,111,32,116,104,101,32,100,97,116,97,98,97,115,101,46,32,
                  82,117,110,110,105,110,103,32,116,104,105,115,32,99,111,100,
                  101,32,119,105,116,104,105,110,32,111,110,101,32,116,114,97,
                  110,115,97,99,116,105,111,110,32,101,110,115,117,114,101,
                  115,32,116,104,97,116,32,101,105,116,104,101,114,32,116,104,
                  101,32,119,104,111,108,101,32,102,97,109,105,108,121,32,105,
                  115,32,97,100,100,101,100,32,116,111,32,116,104,101,32,100,
                  97,116,97,98,97,115,101,44,32,111,114,32,116,104,101,32,119,
                  104,111,108,101,32,116,114,97,110,115,97,99,116,105,111,110,
                  32,116,101,114,109,105,110,97,116,101,115,46,32,70,111,114,
                  32,101,120,97,109,112,108,101,44,32,105,102,32,116,104,101,
                  32,108,97,115,116,32,99,104,105,108,100,32,105,115,32,98,97,
                  100,108,121,32,102,111,114,109,97,116,116,101,100,44,32,111,
                  114,32,116,104,101,32,101,120,101,99,117,116,105,110,103,32,
                  112,114,111,99,101,115,115,32,116,101,114,109,105,110,97,
                  116,101,115,32,98,101,99,97,117,115,101,32,111,102,32,97,
                  110]}],
               0,false},
              {text,"\b*'EXIT'*"},
              {sep,
               [{text,
                 [133,115,105,103,110,97,108,32,119,104,105,108,101,32,101,
                  120,101,99,117,116,105,110,103,32,116,104,101,32,102,97,109,
                  105,108,121,32,99,111,100,101,44,32,116,104,101,32,116,114,
                  97,110,115,97,99,116,105,111,110,32,116,101,114,109,105,110,
                  97,116,101,115,46,32,84,104,117,115,44,32,116,104,101,32,
                  115,105,116,117,97,116,105,111,110,32,119,104,101,114,101,
                  32,104,97,108,102,32,97,32,102,97,109,105,108,121,32,105,
                  115,32,97,100,100,101,100,32,99,97,110,32,110,101,118,101,
                  114,32,111,99,99,117,114,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [146,73,116,32,105,115,32,97,108,115,111,32,117,115,101,102,
                  117,108,32,116,111,32,117,112,100,97,116,101,32,116,104,101,
                  32,100,97,116,97,98,97,115,101,32,119,105,116,104,105,110,
                  32,97,32,116,114,97,110,115,97,99,116,105,111,110,32,105,
                  102,32,115,101,118,101,114,97,108,32,112,114,111,99,101,115,
                  115,101,115,32,99,111,110,99,117,114,114,101,110,116,108,
                  121,32,117,112,100,97,116,101,32,116,104,101,32,115,97,109,
                  101,32,114,101,99,111,114,100,115,46,32,70,111,114,32,101,
                  120,97,109,112,108,101,44,32,116,104,101,32,102,117,110,99,
                  116,105,111,110]}],
               0,false},
              {text,
               [21,42,114,97,105,115,101,40,78,97,109,101,44,32,65,109,111,
                117,110,116,41,42]},
              {sep,[{text,"\f, which adds"}],0,false},
              {text,"\b*Amount*"},
              {sep,
               [{text,
                 "Ato the salary field of a person, is to be implemented as follows:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [338,10,114,97,105,115,101,40,78,97,109,101,44,32,65,109,111,
                117,110,116,41,32,45,62,10,32,32,32,32,109,110,101,115,105,97,
                58,116,114,97,110,115,97,99,116,105,111,110,40,102,117,110,40,
                41,32,45,62,10,32,32,32,32,32,32,32,32,99,97,115,101,32,109,
                110,101,115,105,97,58,119,114,101,97,100,40,123,112,101,114,
                115,111,110,44,32,78,97,109,101,125,41,32,111,102,10,32,32,32,
                32,32,32,32,32,32,32,32,32,91,80,93,32,45,62,10,32,32,32,32,
                32,32,32,32,32,32,32,32,32,32,32,32,83,97,108,97,114,121,32,
                61,32,65,109,111,117,110,116,32,43,32,80,35,112,101,114,115,
                111,110,46,115,97,108,97,114,121,44,10,32,32,32,32,32,32,32,
                32,32,32,32,32,32,32,32,32,80,50,32,61,32,80,35,112,101,114,
                115,111,110,123,115,97,108,97,114,121,32,61,32,83,97,108,97,
                114,121,125,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                32,32,109,110,101,115,105,97,58,119,114,105,116,101,40,80,50,
                41,59,10,32,32,32,32,32,32,32,32,32,32,32,32,95,32,45,62,10,
                32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,110,101,
                115,105,97,58,97,98,111,114,116,40,34,78,111,32,115,117,99,
                104,32,112,101,114,115,111,110,34,41,10,32,32,32,32,32,32,32,
                32,101,110,100,10,32,32,32,32,101,110,100,41,46]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [132,87,104,101,110,32,116,104,105,115,32,102,117,110,99,116,
                  105,111,110,32,101,120,101,99,117,116,101,115,32,119,105,
                  116,104,105,110,32,97,32,116,114,97,110,115,97,99,116,105,
                  111,110,44,32,115,101,118,101,114,97,108,32,112,114,111,99,
                  101,115,115,101,115,32,114,117,110,110,105,110,103,32,111,
                  110,32,100,105,102,102,101,114,101,110,116,32,110,111,100,
                  101,115,32,99,97,110,32,99,111,110,99,117,114,114,101,110,
                  116,108,121,32,101,120,101,99,117,116,101,32,116,104,101,32,
                  102,117,110,99,116,105,111,110]}],
               0,false},
              {text,"\t*raise/2*"},
              {sep,[{text,"$without interfering with each other."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [132,83,105,110,99,101,32,77,110,101,115,105,97,32,100,101,
                  116,101,99,116,115,32,100,101,97,100,108,111,99,107,115,44,
                  32,97,32,116,114,97,110,115,97,99,116,105,111,110,32,99,97,
                  110,32,98,101,32,114,101,115,116,97,114,116,101,100,32,97,
                  110,121,32,110,117,109,98,101,114,32,111,102,32,116,105,109,
                  101,115,46,32,84,104,105,115,32,102,117,110,99,116,105,111,
                  110,32,97,116,116,101,109,112,116,115,32,97,32,114,101,115,
                  116,97,114,116,32,97,115,32,115,112,101,99,105,102,105,101,
                  100,32,105,110]}],
               0,false},
              {text,"\t*Retries*"},
              {sep,[{text,[1,46]}],0,false},
              {text,"\t*Retries*"},
              {sep,
               [{text,"-must be an integer greater than 0 or the atom"}],
               0,false},
              {text,"\n*infinity*"},
              {sep,[{text,"\f. Default is"}],0,false},
              {text,"\n*infinity*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "\\## transform_table(Tab, Fun, NewAttributeList, NewRecordName) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"&Changes format on all records in table"}],0,false},
            {text,[5,42,84,97,98,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"1<a name=\"transform_table_4\">transform_table_4</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [16,65,112,112,108,105,101,115,32,97,114,103,117,109,101,110,
                  116]}],
               0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 [28,116,111,32,97,108,108,32,114,101,99,111,114,100,115,32,
                  105,110,32,116,104,101,32,116,97,98,108,101,46]}],
               0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 "lis a function that takes a record of the old type and returns a transformed record of the new type. Argument"}],
               0,false},
              {text,[5,42,70,117,110,42]},
              {sep,
               [{text,
                 [20,99,97,110,32,97,108,115,111,32,98,101,32,116,104,101,32,
                  97,116,111,109]}],
               0,false},
              {text,"\b*ignore*"},
              {sep,
               [{text,
                 "K, which indicates that only the metadata about the table is updated. Use of"}],
               0,false},
              {text,"\b*ignore*"},
              {sep,
               [{text,
                 "[is not recommended, but included as a possibility for the user do to an own transformation."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [18,42,78,101,119,65,116,116,114,105,98,117,116,101,76,105,115,
                116,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,[15,42,78,101,119,82,101,99,111,114,100,78,97,109,101,42]},
              {sep,
               [{text,
                 "nspecify the attributes and the new record type of the converted table. Table name always remains unchanged. If"}],
               0,false},
              {text,"\r*record_name*"},
              {sep,
               [{text,
                 "Sis changed, only the Mnesia functions that use table identifiers work, for example,"}],
               0,false},
              {text,
               [16,42,109,110,101,115,105,97,58,119,114,105,116,101,47,51,42]},
              {sep,
               [{text,
                 [14,119,111,114,107,115,44,32,98,117,116,32,110,111,116]}],
               0,false},
              {text,
               [16,42,109,110,101,115,105,97,58,119,114,105,116,101,47,49,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "M## transform_table(Tab, Fun, NewAttributeList) -> {aborted, R} | {atomic, ok}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"&Changes format on all records in table"}],0,false},
            {text,[5,42,84,97,98,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[5,67,97,108,108,115]}],0,false},
              {text,
               "=*mnesia:transform_table(Tab, Fun, NewAttributeList, RecName)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,"\t*RecName*"},
              {sep,[{text,[2,105,115]}],0,false},
              {text,"%*mnesia:table_info(Tab, record_name)*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "i## traverse_backup(Source, [SourceMod,] Target, [TargetMod,] Fun, Acc) -> {ok, LastAcc} | {error, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [22,84,114,97,118,101,114,115,97,108,32,111,102,32,97,32,98,97,
              99,107,117,112,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"traverse_backup\">traverse_backup</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [154,73,116,101,114,97,116,101,115,32,111,118,101,114,32,97,32,
                98,97,99,107,117,112,44,32,101,105,116,104,101,114,32,116,111,
                32,116,114,97,110,115,102,111,114,109,32,105,116,32,105,110,
                116,111,32,97,32,110,101,119,32,98,97,99,107,117,112,44,32,
                111,114,32,114,101,97,100,32,105,116,46,32,84,104,101,32,97,
                114,103,117,109,101,110,116,115,32,97,114,101,32,101,120,112,
                108,97,105,110,101,100,32,98,114,105,101,102,108,121,32,104,
                101,114,101,46,32,70,111,114,32,100,101,116,97,105,108,115,44,
                32,115,101,101,32,116,104,101,32,85,115,101,114,39,115,32,71,
                117,105,100,101,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\v*SourceMod*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\v*TargetMod*"},
               {sep,
                [{text,
                  "Care the names of the modules that actually access the backup media."}],
                0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\b*Source*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\b*Target*"},
               {sep,
                [{text,"+are opaque data used exclusively by modules"}],
                0,false},
               {text,"\v*SourceMod*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\v*TargetMod*"},
               {sep,
                [{text,
                  [31,116,111,32,105,110,105,116,105,97,108,105,122,101,32,
                   116,104,101,32,98,97,99,107,117,112,32,109,101,100,105,97,
                   46]}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,[5,42,65,99,99,42]},
              {sep,[{text," is an initial accumulator value."}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [23,42,70,117,110,40,66,97,99,107,117,112,73,116,101,109,115,44,
               32,65,99,99,41,42]},
             {sep,
              [{text,"*is applied to each item in the backup. The"}],
              0,false},
             {text,[5,42,70,117,110,42]},
             {sep,
              [{text,
                [19,109,117,115,116,32,114,101,116,117,114,110,32,97,32,116,
                 117,112,108,101]}],
              0,false},
             {text,
              [22,42,123,66,97,99,107,117,112,73,116,101,109,115,44,78,101,
               119,65,99,99,125,42]},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,"\r*BackupItems*"},
             {sep,[{text,"$is a list of valid backup items, and"}],0,false},
             {text,"\b*NewAcc*"},
             {sep,
              [{text,
                "Wis a new accumulator value. The returned backup items are written in the target backup."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\t*LastAcc*"},
            {sep,
             [{text,"/is the last accumulator value. This is the last"}],
             0,false},
            {text,"\b*NewAcc*"},
            {sep,
             [{text,
               [26,118,97,108,117,101,32,116,104,97,116,32,119,97,115,32,114,
                101,116,117,114,110,101,100,32,98,121]}],
             0,false},
            {text,[5,42,70,117,110,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,".## uninstall_fallback() -> ok | {error,Reason}"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [22,85,110,105,110,115,116,97,108,108,115,32,97,32,102,97,108,
              108,98,97,99,107,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"7<a name=\"uninstall_fallback_0\">uninstall_fallback_0</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,67,97,108,108,115,32,116,104,101,32,102,117,110,99,116,
                  105,111,110]}],
               0,false},
              {text,".*mnesia:uninstall_fallback([{scope, global}])*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"2## uninstall_fallback(Args) -> ok | {error,Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [22,85,110,105,110,115,116,97,108,108,115,32,97,32,102,97,108,
              108,98,97,99,107,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [442,68,101,105,110,115,116,97,108,108,115,32,97,32,102,97,108,
                108,98,97,99,107,32,98,101,102,111,114,101,32,105,116,32,104,
                97,115,32,98,101,101,110,32,117,115,101,100,32,116,111,32,114,
                101,115,116,111,114,101,32,116,104,101,32,100,97,116,97,98,97,
                115,101,46,32,84,104,105,115,32,105,115,32,110,111,114,109,97,
                108,108,121,32,97,32,100,105,115,116,114,105,98,117,116,101,
                100,32,111,112,101,114,97,116,105,111,110,32,116,104,97,116,
                32,105,115,32,101,105,116,104,101,114,32,112,101,114,102,111,
                114,109,101,100,32,111,110,32,97,108,108,32,110,111,100,101,
                115,32,119,105,116,104,32,100,105,115,99,32,114,101,115,105,
                100,101,110,116,32,115,99,104,101,109,97,44,32,111,114,32,110,
                111,110,101,46,32,85,110,105,110,115,116,97,108,108,97,116,
                105,111,110,32,111,102,32,102,97,108,108,98,97,99,107,115,32,
                114,101,113,117,105,114,101,115,32,69,114,108,97,110,103,32,
                116,111,32,98,101,32,111,112,101,114,97,116,105,111,110,97,
                108,32,111,110,32,97,108,108,32,105,110,118,111,108,118,101,
                100,32,110,111,100,101,115,44,32,98,117,116,32,105,116,32,100,
                111,101,115,32,110,111,116,32,109,97,116,116,101,114,32,105,
                102,32,77,110,101,115,105,97,32,105,115,32,114,117,110,110,
                105,110,103,32,111,114,32,110,111,116,46,32,87,104,105,99,104,
                32,110,111,100,101,115,32,116,104,97,116,32,97,114,101,32,99,
                111,110,115,105,100,101,114,101,100,32,97,115,32,100,105,115,
                99,45,114,101,115,105,100,101,110,116,32,110,111,100,101,115,
                32,105,115,32,100,101,116,101,114,109,105,110,101,100,32,102,
                114,111,109,32,116,104,101,32,115,99,104,101,109,97,32,105,
                110,102,111,114,109,97,116,105,111,110,32,105,110,32,116,104,
                101,32,108,111,99,97,108,32,102,97,108,108,98,97,99,107,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,[6,42,65,114,103,115,42]},
              {sep,[{text,"\"is a list of the following tuples:"}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [21,42,123,109,111,100,117,108,101,44,32,66,97,99,107,117,112,
               77,111,100,125,42]},
             {sep,
              [{text,
                [20,46,32,70,111,114,32,115,101,109,97,110,116,105,99,115,44,
                 32,115,101,101]}],
              0,false},
             {text,"\e*mnesia:install_fallback/2*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [16,42,123,115,99,111,112,101,44,32,83,99,111,112,101,125,42]},
             {sep,
              [{text,
                [20,46,32,70,111,114,32,115,101,109,97,110,116,105,99,115,44,
                 32,115,101,101]}],
              0,false},
             {text,"\e*mnesia:install_fallback/2*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [28,42,123,109,110,101,115,105,97,95,100,105,114,44,32,65,108,
              116,101,114,110,97,116,101,68,105,114,125,42]},
            {sep,
             [{text,
               [20,46,32,70,111,114,32,115,101,109,97,110,116,105,99,115,44,
                32,115,101,101]}],
             0,false},
            {text,"\e*mnesia:install_fallback/2*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "=## unsubscribe(EventCategory) -> {ok, Node} | {error, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [28,83,117,98,115,99,114,105,98,101,115,32,116,111,32,101,118,
                101,110,116,115,32,111,102,32,116,121,112,101]}],
             0,false},
            {text,[15,42,69,118,101,110,116,67,97,116,101,103,111,114,121,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"%<a name=\"unsubscribe\">unsubscribe</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [28,83,116,111,112,115,32,115,101,110,100,105,110,103,32,101,
                  118,101,110,116,115,32,111,102,32,116,121,112,101]}],
               0,false},
              {text,
               [15,42,69,118,101,110,116,67,97,116,101,103,111,114,121,42]},
              {sep,
               [{text,
                 [14,116,111,32,116,104,101,32,99,97,108,108,101,114,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,[6,42,78,111,100,101,42]},
              {sep,
               [{text,
                 [18,105,115,32,116,104,101,32,108,111,99,97,108,32,110,111,
                  100,101,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         "T## wait_for_tables(TabList, Timeout) -> ok | {timeout, BadTabList} | {error, Reason}"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Waits for tables to be accessible."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"-<a name=\"wait_for_tables\">wait_for_tables</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "USome applications need to wait for certain tables to be accessible to do useful work."}],
               0,false},
              {text,
               [26,42,109,110,101,115,105,97,58,119,97,105,116,95,102,111,114,
                95,116,97,98,108,101,115,47,50,42]},
              {sep,[{text," either hangs until all tables in"}],0,false},
              {text,"\t*TabList*"},
              {sep,
               [{text,
                 [24,97,114,101,32,97,99,99,101,115,115,105,98,108,101,44,32,
                  111,114,32,117,110,116,105,108]}],
               0,false},
              {text,"\t*timeout*"},
              {sep,[{text,"\vis reached."}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"6## wread({Tab, Key}) -> transaction abort | RecordList"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [29,82,101,97,100,115,32,114,101,99,111,114,100,115,32,119,105,
              116,104,32,103,105,118,101,110,32,107,101,121,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [25,60,97,32,110,97,109,101,61,34,119,114,101,97,100,34,62,119,114,
         101,97,100,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,67,97,108,108,115,32,116,104,101,32,102,117,110,99,116,
                  105,111,110]}],
               0,false},
              {text,
               [30,42,109,110,101,115,105,97,58,114,101,97,100,40,84,97,98,44,
                32,75,101,121,44,32,119,114,105,116,101,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"*## write(Record) -> transaction abort | ok"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Writes a record into the database."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [29,60,97,32,110,97,109,101,61,34,119,114,105,116,101,95,49,34,62,119,
         114,105,116,101,95,49,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,67,97,108,108,115,32,116,104,101,32,102,117,110,99,116,
                  105,111,110]}],
               0,false},
              {text,"\"*mnesia:write(Tab, Record, write)*"},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,
               [20,42,101,108,101,109,101,110,116,40,49,44,32,82,101,99,111,
                114,100,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"9## write(Tab, Record, LockKind) -> transaction abort | ok"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\"Writes a record into the database."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,
        [29,60,97,32,110,97,109,101,61,34,119,114,105,116,101,95,51,34,62,119,
         114,105,116,101,95,51,60,47,97,62]},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\rWrites record"}],0,false},
              {text,"\b*Record*"},
              {sep,[{text,"\bto table"}],0,false},
              {text,[5,42,84,97,98,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [20,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                  116,117,114,110,115]}],
               0,false},
              {text,[4,42,111,107,42]},
              {sep,
               [{text,
                 "Q, or terminates if an error occurs. For example, the transaction terminates if no"}],
               0,false},
              {text,"\b*person*"},
              {sep,[{text,"\rtable exists."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "EThe semantics of this function is context-sensitive. For details, see"}],
               0,false},
              {text,
               [19,42,109,110,101,115,105,97,58,97,99,116,105,118,105,116,121,
                47,52,42]},
              {sep,
               [{text,
                 "4. In transaction-context, it acquires a lock of type"}],
               0,false},
              {text,"\n*LockKind*"},
              {sep,
               [{text,
                 [16,46,32,84,104,101,32,108,111,99,107,32,116,121,112,101,
                  115]}],
               0,false},
              {text,[7,42,119,114,105,116,101,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,[14,42,115,116,105,99,107,121,95,119,114,105,116,101,42]},
              {sep,
               [{text,
                 [14,97,114,101,32,115,117,112,112,111,114,116,101,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,"2## write_lock_table(Tab) -> ok | transaction abort"},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"#Sets write lock on an entire table."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{text,"/<a name=\"write_lock_table\">write_lock_table</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [18,67,97,108,108,115,32,116,104,101,32,102,117,110,99,116,
                  105,111,110]}],
               0,false},
              {text,"\"*mnesia:lock({table, Tab}, write)*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\e## Configuration Parameters"},null},null}},
    {text,
     "?<a name=\"configuration_parameters\">configuration_parameters</a>"},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "@Mnesia reads the following application configuration parameters:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,
                           [30,42,45,109,110,101,115,105,97,32,97,99,99,101,
                            115,115,95,109,111,100,117,108,101,32,77,111,100,
                            117,108,101,42]},
                          {sep,
                           [{text,
                             "D. The name of the Mnesia activity access callback module. Default is"}],
                           0,false},
                          {text,"\b*mnesia*"},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,false},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text,"\"*-mnesia auto_repair true | false*"},
                          {sep,
                           [{text,
                             "q. This flag controls if Mnesia automatically tries to repair files that have not been properly closed. Default is"}],
                           0,false},
                          {text,[6,42,116,114,117,101,42]},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          [30,42,45,109,110,101,115,105,97,32,98,97,99,107,
                           117,112,95,109,111,100,117,108,101,32,77,111,100,
                           117,108,101,42]},
                         {sep,
                          [{text,
                            ";. The name of the Mnesia backup callback module. Default is"}],
                          0,false},
                         {text,
                          [15,42,109,110,101,115,105,97,95,98,97,99,107,117,
                           112,42]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,
                                [21,42,45,109,110,101,115,105,97,32,100,101,
                                 98,117,103,32,76,101,118,101,108,42]},
                               {sep,
                                [{text,
                                  "I. Controls the debug level of Mnesia. The possible values are as follows:"}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,
                          {text,[4,60,100,108,62]},
                          {nest,4,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,116,62]},
                                           {sep,
                                            [{text,[4,110,111,110,101]}],
                                            0,false},
                                           {text,[5,60,47,100,116,62]}],
                                          0,true},
                                         null},
                                        null}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,100,62]},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{sep,
                                                 [{text,
                                                   "&No trace outputs. This is the default."}],
                                                 0,false}],
                                               0,true},
                                              null},
                                             null}},
                                           {text,[5,60,47,100,100,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,116,62]},
                                          {sep,
                                           [{text,
                                             [7,118,101,114,98,111,115,101]}],
                                           0,false},
                                          {text,[5,60,47,100,116,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,100,62]},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{sep,
                                               [{sep,
                                                 [{text,
                                                   "BActivates tracing of important debug events. These events generate"}],
                                                 0,false},
                                                {text,
                                                 "\e{mnesia_info, Format, Args}"},
                                                {sep,
                                                 [{text,
                                                   ";system events. Processes can subscribe to these events with"}],
                                                 0,false},
                                                {text,
                                                 [18,109,110,101,115,105,97,
                                                  58,115,117,98,115,99,114,
                                                  105,98,101,47,49]},
                                                {sep,
                                                 [{text,
                                                   "9. The events are always sent to the Mnesia event handler."}],
                                                 0,false}],
                                               0,false}],
                                             0,true},
                                            null},
                                           null}},
                                         {text,[5,60,47,100,100,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,116,62]},
                                        {sep,
                                         [{text,[5,100,101,98,117,103]}],
                                         0,false},
                                        {text,[5,60,47,100,116,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,100,62]},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 "jActivates all events at the verbose level plus full trace of all debug events. These debug events generate"}],
                                               0,false},
                                              {text,
                                               "\e{mnesia_info, Format, Args}"},
                                              {sep,
                                               [{text,
                                                 ";system events. Processes can subscribe to these events with"}],
                                               0,false},
                                              {text,
                                               [18,109,110,101,115,105,97,58,
                                                115,117,98,115,99,114,105,98,
                                                101,47,49]},
                                              {sep,
                                               [{text,
                                                 [154,46,32,84,104,101,32,101,
                                                  118,101,110,116,115,32,97,
                                                  114,101,32,97,108,119,97,
                                                  121,115,32,115,101,110,116,
                                                  32,116,111,32,116,104,101,
                                                  32,77,110,101,115,105,97,32,
                                                  101,118,101,110,116,32,104,
                                                  97,110,100,108,101,114,46,
                                                  32,79,110,32,116,104,105,
                                                  115,32,100,101,98,117,103,
                                                  32,108,101,118,101,108,44,
                                                  32,116,104,101,32,77,110,
                                                  101,115,105,97,32,101,118,
                                                  101,110,116,32,104,97,110,
                                                  100,108,101,114,32,115,116,
                                                  97,114,116,115,32,115,117,
                                                  98,115,99,114,105,98,105,
                                                  110,103,32,116,111,32,117,
                                                  112,100,97,116,101,115,32,
                                                  105,110,32,116,104,101,32,
                                                  115,99,104,101,109,97,32,
                                                  116,97,98,108,101,46]}],
                                               0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {text,[5,60,47,100,100,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,116,62]},
                                      {sep,
                                       [{text,[5,116,114,97,99,101]}],
                                       0,false},
                                      {text,[5,60,47,100,116,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,100,62]},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{sep,
                                           [{text,
                                             "Ã¨Activates all events at the debug level. On this level, the Mnesia event handler starts subscribing to updates on all Mnesia tables. This level is intended only for debugging small toy systems, as many large events can be generated."}],
                                           0,false}],
                                         0,true},
                                        null},
                                       null}},
                                     {text,[5,60,47,100,100,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,
                                     [{text,[5,102,97,108,115,101]}],
                                     0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,100,62]},
                                   {text,
                                    [18,65,110,32,97,108,105,97,115,32,102,
                                     111,114,32,110,111,110,101,46]},
                                   {text,[5,60,47,100,100,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,[{text,[4,116,114,117,101]}],0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {text,
                                  [19,65,110,32,97,108,105,97,115,32,102,111,
                                   114,32,100,101,98,117,103,46]},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}}}},
                         {text,[5,60,47,100,108,62]}}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,
                        [28,42,45,109,110,101,115,105,97,32,99,111,114,101,95,
                         100,105,114,32,68,105,114,101,99,116,111,114,121,42]},
                       {sep,
                        [{text,
                          [156,46,32,84,104,101,32,110,97,109,101,32,111,102,
                           32,116,104,101,32,100,105,114,101,99,116,111,114,
                           121,32,119,104,101,114,101,32,77,110,101,115,105,
                           97,32,99,111,114,101,32,102,105,108,101,115,32,105,
                           115,32,115,116,111,114,101,100,44,32,111,114,32,
                           102,97,108,115,101,46,32,83,101,116,116,105,110,
                           103,32,105,116,32,105,109,112,108,105,101,115,32,
                           116,104,97,116,32,97,108,115,111,32,82,65,77,45,
                           111,110,108,121,32,110,111,100,101,115,32,103,101,
                           110,101,114,97,116,101,32,97,32,99,111,114,101,32,
                           102,105,108,101,32,105,102,32,97,32,99,114,97,115,
                           104,32,111,99,99,117,114,115,46]}],
                        0,false}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       [30,42,45,109,110,101,115,105,97,32,100,99,95,100,117,
                        109,112,95,108,105,109,105,116,32,78,117,109,98,101,
                        114,42]},
                      {sep,
                       [{text,
                         [20,46,32,67,111,110,116,114,111,108,115,32,104,111,
                          119,32,111,102,116,101,110]}],
                       0,false},
                      {text,"\r*disc_copies*"},
                      {sep,
                       [{text,
                         "5tables are dumped from memory. Tables are dumped when"}],
                       0,false},
                      {text,
                       "/*filesize(Log) > (filesize(Tab)/Dc_dump_limit)*"},
                      {sep,
                       [{text,
                         "[. Lower values reduce CPU overhead but increase disk space and startup times. Default is 4."}],
                       0,false}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      [23,42,45,109,110,101,115,105,97,32,100,105,114,32,68,
                       105,114,101,99,116,111,114,121,42]},
                     {sep,
                      [{text,
                        "Ã. The name of the directory where all Mnesia data is stored. The directory name must be unique for the current node. Two nodes must never share the the same Mnesia directory. The results are unpredictable."}],
                      0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "2*-mnesia dump_disc_copies_at_startup true | false*"},
                    {sep,
                     [{text,
                       "/. If set to false, this disables the dumping of"}],
                     0,false},
                    {text,"\r*disc_copies*"},
                    {sep,
                     [{text,
                       "Itables during startup while tables are being loaded. The default is true."}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "/*-mnesia dump_log_load_regulation true | false*"},
                          {sep,
                           [{text,
                             "~. Controls if log dumps are to be performed as fast as possible, or if the dumper is to do its own load regulation. Default is"}],
                           0,false},
                          {text,[7,42,102,97,108,115,101,42]},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "AThis feature is temporary and will be removed in a future release"}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"/*-mnesia dump_log_update_in_place true | false*"},
                  {sep,
                   [{text,
                     [144,46,32,67,111,110,116,114,111,108,115,32,105,102,32,
                      108,111,103,32,100,117,109,112,115,32,97,114,101,32,112,
                      101,114,102,111,114,109,101,100,32,111,110,32,97,32,99,
                      111,112,121,32,111,102,32,116,104,101,32,111,114,105,
                      103,105,110,97,108,32,100,97,116,97,32,102,105,108,101,
                      44,32,111,114,32,105,102,32,116,104,101,32,108,111,103,
                      32,100,117,109,112,32,105,115,32,112,101,114,102,111,
                      114,109,101,100,32,111,110,32,116,104,101,32,111,114,
                      105,103,105,110,97,108,32,100,97,116,97,32,102,105,108,
                      101,46,32,68,101,102,97,117,108,116,32,105,115]}],
                   0,false},
                  {text,[6,42,116,114,117,101,42]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  "A<a name=\" dump_log_write_threshold\"> dump_log_write_threshold</a>"},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,"&*-mnesia dump_log_write_threshold Max*"},
                        {sep,[{text,[1,46]}],0,false},
                        {text,[5,42,77,97,120,42]},
                        {sep,
                         [{text,
                           [142,105,115,32,97,110,32,105,110,116,101,103,101,
                            114,32,116,104,97,116,32,115,112,101,99,105,102,
                            105,101,115,32,116,104,101,32,109,97,120,105,109,
                            117,109,32,110,117,109,98,101,114,32,111,102,32,
                            119,114,105,116,101,115,32,97,108,108,111,119,101,
                            100,32,116,111,32,116,104,101,32,116,114,97,110,
                            115,97,99,116,105,111,110,32,108,111,103,32,98,
                            101,102,111,114,101,32,97,32,110,101,119,32,100,
                            117,109,112,32,111,102,32,116,104,101,32,108,111,
                            103,32,105,115,32,112,101,114,102,111,114,109,101,
                            100,46,32,68,101,102,97,117,108,116,32,105,115]}],
                         0,false},
                        {text,[5,42,49,48,48,42]},
                        {sep,[{text,"\vlog writes."}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 "?<a name=\" dump_log_time_threshold\"> dump_log_time_threshold</a>"},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,"%*-mnesia dump_log_time_threshold Max*"},
                       {sep,[{text,[1,46]}],0,false},
                       {text,[5,42,77,97,120,42]},
                       {sep,
                        [{text,
                          [129,105,115,32,97,110,32,105,110,116,101,103,101,
                           114,32,116,104,97,116,32,115,112,101,99,105,102,
                           105,101,115,32,116,104,101,32,100,117,109,112,32,
                           108,111,103,32,105,110,116,101,114,118,97,108,32,
                           105,110,32,109,105,108,108,105,115,101,99,111,110,
                           100,115,46,32,68,101,102,97,117,108,116,32,105,115,
                           32,51,32,109,105,110,117,116,101,115,46,32,73,102,
                           32,97,32,100,117,109,112,32,104,97,115,32,110,111,
                           116,32,98,101,101,110,32,112,101,114,102,111,114,
                           109,101,100,32,119,105,116,104,105,110]}],
                        0,false},
                       {text,
                        [25,42,100,117,109,112,95,108,111,103,95,116,105,109,
                         101,95,116,104,114,101,115,104,111,108,100,42]},
                       {sep,
                        [{text,
                          "Smilliseconds, a new dump is performed regardless of the number of writes performed."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [29,42,45,109,110,101,115,105,97,32,101,118,101,110,116,95,
                 109,111,100,117,108,101,32,77,111,100,117,108,101,42]},
               {sep,
                [{text,
                  "B. The name of the Mnesia event handler callback module. Default is"}],
                0,false},
               {text,[14,42,109,110,101,115,105,97,95,101,118,101,110,116,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [30,42,45,109,110,101,115,105,97,32,101,120,116,114,97,95,100,
                98,95,110,111,100,101,115,32,78,111,100,101,115,42]},
              {sep,
               [{text,
                 [130,115,112,101,99,105,102,105,101,115,32,97,32,108,105,115,
                  116,32,111,102,32,110,111,100,101,115,44,32,105,110,32,97,
                  100,100,105,116,105,111,110,32,116,111,32,116,104,101,32,
                  111,110,101,115,32,102,111,117,110,100,32,105,110,32,116,
                  104,101,32,115,99,104,101,109,97,44,32,119,105,116,104,32,
                  119,104,105,99,104,32,77,110,101,115,105,97,32,105,115,32,
                  97,108,115,111,32,116,111,32,101,115,116,97,98,108,105,115,
                  104,32,99,111,110,116,97,99,116,46,32,68,101,102,97,117,108,
                  116,32,105,115]}],
               0,false},
              {text,[4,42,91,93,42]},
              {sep,[{text,"\r(empty list)."}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "8*-mnesia fallback_error_function {UserModule, UserFunc}*"},
             {sep,
              [{text,
                "Ã. Specifies a user-supplied callback function, which is called if a fallback is installed and Mnesia goes down on another node. Mnesia calls the function with one argument, the name of the dying node, for example,"}],
              0,false},
             {text," *UserModule:UserFunc(DyingNode)*"},
             {sep,
              [{text,
                "t. Mnesia must be restarted, otherwise the database can be inconsistent. The default behavior is to terminate Mnesia."}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,"'*-mnesia max_wait_for_decision Timeout*"},
                   {sep,
                    [{text,
                      [131,46,32,83,112,101,99,105,102,105,101,115,32,104,111,
                       119,32,108,111,110,103,32,77,110,101,115,105,97,32,119,
                       97,105,116,115,32,102,111,114,32,111,116,104,101,114,
                       32,110,111,100,101,115,32,116,111,32,115,104,97,114,
                       101,32,116,104,101,105,114,32,107,110,111,119,108,101,
                       100,103,101,32,97,98,111,117,116,32,116,104,101,32,111,
                       117,116,99,111,109,101,32,111,102,32,97,110,32,117,110,
                       99,108,101,97,114,32,116,114,97,110,115,97,99,116,105,
                       111,110,46,32,66,121,32,100,101,102,97,117,108,116,
                       44]}],
                    0,false},
                   {text,"\t*Timeout*"},
                   {sep,
                    [{text,
                      [18,105,115,32,115,101,116,32,116,111,32,116,104,101,32,
                       97,116,111,109]}],
                    0,false},
                   {text,"\n*infinity*"},
                   {sep,
                    [{text,
                      [453,46,32,84,104,105,115,32,105,109,112,108,105,101,
                       115,32,116,104,97,116,32,105,102,32,77,110,101,115,105,
                       97,32,117,112,111,110,32,115,116,97,114,116,117,112,32,
                       100,101,116,101,99,116,115,32,97,32,34,104,101,97,118,
                       121,119,101,105,103,104,116,32,116,114,97,110,115,97,
                       99,116,105,111,110,34,32,119,104,111,115,101,32,111,
                       117,116,99,111,109,101,32,105,115,32,117,110,99,108,
                       101,97,114,44,32,116,104,101,32,108,111,99,97,108,32,
                       77,110,101,115,105,97,32,119,97,105,116,115,32,117,110,
                       116,105,108,32,77,110,101,115,105,97,32,105,115,32,115,
                       116,97,114,116,101,100,32,111,110,32,115,111,109,101,
                       32,40,105,110,32,116,104,101,32,119,111,114,115,116,32,
                       99,97,115,101,32,97,108,108,41,32,111,102,32,116,104,
                       101,32,111,116,104,101,114,32,110,111,100,101,115,32,
                       116,104,97,116,32,119,101,114,101,32,105,110,118,111,
                       108,118,101,100,32,105,110,32,116,104,101,32,105,110,
                       116,101,114,114,117,112,116,101,100,32,116,114,97,110,
                       115,97,99,116,105,111,110,46,32,84,104,105,115,32,105,
                       115,32,97,32,114,97,114,101,32,115,105,116,117,97,116,
                       105,111,110,44,32,98,117,116,32,105,102,32,105,116,32,
                       111,99,99,117,114,115,44,32,77,110,101,115,105,97,32,
                       100,111,101,115,32,110,111,116,32,103,117,101,115,115,
                       32,105,102,32,116,104,101,32,116,114,97,110,115,97,99,
                       116,105,111,110,32,111,110,32,116,104,101,32,111,116,
                       104,101,114,32,110,111,100,101,115,32,119,97,115,32,99,
                       111,109,109,105,116,116,101,100,32,111,114,32,116,101,
                       114,109,105,110,97,116,101,100,46,32,77,110,101,115,
                       105,97,32,119,97,105,116,115,32,117,110,116,105,108,32,
                       105,116,32,107,110,111,119,115,32,116,104,101,32,111,
                       117,116,99,111,109,101,32,97,110,100,32,116,104,101,
                       110,32,97,99,116,115,32,97,99,99,111,114,100,105,110,
                       103,108,121,46]}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,[{text,[2,73,102]}],0,false},
                   {text,"\t*Timeout*"},
                   {sep,
                    [{text,
                      "Â¬is set to an integer value in milliseconds, Mnesia forces \"heavyweight transactions\" to be finished, even if the outcome of the transaction for the moment is unclear. After"}],
                    0,false},
                   {text,"\t*Timeout*"},
                   {sep,
                    [{text,
                      [275,109,105,108,108,105,115,101,99,111,110,100,115,44,
                       32,77,110,101,115,105,97,32,99,111,109,109,105,116,115,
                       32,111,114,32,116,101,114,109,105,110,97,116,101,115,
                       32,116,104,101,32,116,114,97,110,115,97,99,116,105,111,
                       110,32,97,110,100,32,99,111,110,116,105,110,117,101,
                       115,32,119,105,116,104,32,116,104,101,32,115,116,97,
                       114,116,117,112,46,32,84,104,105,115,32,99,97,110,32,
                       108,101,97,100,32,116,111,32,97,32,115,105,116,117,97,
                       116,105,111,110,32,119,104,101,114,101,32,116,104,101,
                       32,116,114,97,110,115,97,99,116,105,111,110,32,105,115,
                       32,99,111,109,109,105,116,116,101,100,32,111,110,32,
                       115,111,109,101,32,110,111,100,101,115,32,97,110,100,
                       32,116,101,114,109,105,110,97,116,101,100,32,111,110,
                       32,111,116,104,101,114,32,110,111,100,101,115,46,32,73,
                       102,32,116,104,101,32,116,114,97,110,115,97,99,116,105,
                       111,110,32,105,115,32,97,32,115,99,104,101,109,97,32,
                       116,114,97,110,115,97,99,116,105,111,110,44,32,116,104,
                       101,32,105,110,99,111,110,115,105,115,116,101,110,99,
                       121,32,99,97,110,32,98,101,32,102,97,116,97,108,46]}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"!*-mnesia no_table_loaders NUMBER*"},
           {sep,
            [{text,
              "Â¨. Specifies the number of parallel table loaders during start. More loaders can be good if the network latency is high or if many tables contain few records. Default is"}],
            0,false},
           {text,[3,42,50,42]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [31,42,45,109,110,101,115,105,97,32,115,101,110,100,95,99,
                   111,109,112,114,101,115,115,101,100,32,76,101,118,101,108,
                   42]},
                 {sep,
                  [{text,
                    "s. Specifies the level of compression to be used when copying a table from the local node to another one. Default is"}],
                  0,false},
                 {text,[3,42,48,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,[7,42,76,101,118,101,108,42]},
                 {sep,[{text,"\"must be an integer in the interval"}],0,false},
                 {text,"\b*[0, 9]*"},
                 {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                 {text,[3,42,48,42]},
                 {sep,
                  [{text,
                    [24,109,101,97,110,115,32,110,111,32,99,111,109,112,114,
                     101,115,115,105,111,110,32,97,110,100]}],
                  0,false},
                 {text,[3,42,57,42]},
                 {sep,
                  [{text,
                    "}means maximum compression. Before setting it to a non-zero value, ensure that the remote nodes understand this configuration."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 [29,42,45,109,110,101,115,105,97,32,115,99,104,101,109,97,95,
                  108,111,99,97,116,105,111,110,32,76,111,99,42]},
                {sep,
                 [{text,
                   "7. Controls where Mnesia looks for its schema. Parameter"}],
                 0,false},
                {text,[5,42,76,111,99,42]},
                {sep,[{text,"\"can be one of the following atoms:"}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {text,[4,60,100,108,62]},
           {nest,4,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[4,100,105,115,99]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              [158,77,97,110,100,97,116,111,114,121,32,100,
                               105,115,99,46,32,84,104,101,32,115,99,104,101,
                               109,97,32,105,115,32,97,115,115,117,109,101,
                               100,32,116,111,32,98,101,32,108,111,99,97,116,
                               101,100,32,105,110,32,116,104,101,32,77,110,
                               101,115,105,97,32,100,105,114,101,99,116,111,
                               114,121,46,32,73,102,32,116,104,101,32,115,99,
                               104,101,109,97,32,99,97,110,110,111,116,32,98,
                               101,32,102,111,117,110,100,44,32,77,110,101,
                               115,105,97,32,114,101,102,117,115,101,115,32,
                               116,111,32,115,116,97,114,116,46,32,84,104,105,
                               115,32,105,115,32,116,104,101,32,111,108,100,
                               32,98,101,104,97,118,105,111,114,46]}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,[3,114,97,109]}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {sep,
                     [{above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                [273,77,97,110,100,97,116,111,114,121,32,82,
                                 65,77,46,32,84,104,101,32,115,99,104,101,109,
                                 97,32,114,101,115,105,100,101,115,32,105,110,
                                 32,82,65,77,32,111,110,108,121,46,32,65,116,
                                 32,115,116,97,114,116,117,112,44,32,97,32,
                                 116,105,110,121,32,110,101,119,32,115,99,104,
                                 101,109,97,32,105,115,32,103,101,110,101,114,
                                 97,116,101,100,46,32,84,104,105,115,32,100,
                                 101,102,97,117,108,116,32,115,99,104,101,109,
                                 97,32,111,110,108,121,32,99,111,110,116,97,
                                 105,110,115,32,116,104,101,32,100,101,102,
                                 105,110,105,116,105,111,110,32,111,102,32,
                                 116,104,101,32,115,99,104,101,109,97,32,116,
                                 97,98,108,101,32,97,110,100,32,111,110,108,
                                 121,32,114,101,115,105,100,101,115,32,111,
                                 110,32,116,104,101,32,108,111,99,97,108,32,
                                 110,111,100,101,46,32,83,105,110,99,101,32,
                                 110,111,32,111,116,104,101,114,32,110,111,
                                 100,101,115,32,97,114,101,32,102,111,117,110,
                                 100,32,105,110,32,116,104,101,32,100,101,102,
                                 97,117,108,116,32,115,99,104,101,109,97,44,
                                 32,99,111,110,102,105,103,117,114,97,116,105,
                                 111,110,32,112,97,114,97,109,101,116,101,
                                 114]}],
                              0,false},
                             {text,
                              [14,101,120,116,114,97,95,100,98,95,110,111,100,
                               101,115]},
                             {sep,
                              [{text,
                                "Jmust be used to let the node share its table definitions with other nodes."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,[{text,"\tParameter"}],0,false},
                             {text,
                              [14,101,120,116,114,97,95,100,98,95,110,111,100,
                               101,115]},
                             {sep,
                              [{text,
                                "%can also be used on disc based nodes."}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}}],
                     0,false},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\bopt_disc"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            "Â¦Optional disc. The schema can reside on disc or in RAM. If the schema is found on disc, Mnesia starts as a disc-based node and the storage type of the schema table is"}],
                          0,false},
                         {text,"\vdisc_copies"},
                         {sep,
                          [{text,
                            "n. If no schema is found on disc, Mnesia starts as a disc-less node and the storage type of the schema table is"}],
                          0,false},
                         {text,"\nram_copies"},
                         {sep,
                          [{text,
                            "0. Default value for the application parameter is"}],
                          0,false},
                         {text,"\bopt_disc"},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}}}},
          {text,[5,60,47,100,108,62]}}],
        0,false}],
      0,false}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [134,70,105,114,115,116,44,32,116,104,101,32,83,65,83,76,32,97,
             112,112,108,105,99,97,116,105,111,110,32,112,97,114,97,109,101,
             116,101,114,115,32,97,114,101,32,99,104,101,99,107,101,100,44,32,
             116,104,101,110,32,116,104,101,32,99,111,109,109,97,110,100,45,
             108,105,110,101,32,102,108,97,103,115,32,97,114,101,32,99,104,
             101,99,107,101,100,44,32,97,110,100,32,102,105,110,97,108,108,
             121,44,32,116,104,101,32,100,101,102,97,117,108,116,32,118,97,
             108,117,101,32,105,115,32,99,104,111,115,101,110,46]}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## See Also"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [31,91,97,112,112,108,105,99,97,116,105,111,110,40,51,41,93,40,46,
            47,97,112,112,108,105,99,97,116,105,111,110,41]},
          {sep,[{text,[1,44]}],0,false},
          {text,
           [17,91,100,101,116,115,40,51,41,93,40,46,47,100,101,116,115,41]},
          {sep,[{text,[1,44]}],0,false},
          {text,
           [25,91,100,105,115,107,95,108,111,103,40,51,41,93,40,46,47,100,105,
            115,107,95,108,111,103,41]},
          {sep,[{text,[1,44]}],0,false},
          {text,[15,91,101,116,115,40,51,41,93,40,46,47,101,116,115,41]},
          {sep,[{text,[1,44]}],0,false},
          {text,"'[mnesia_registry(3)](./mnesia_registry)"},
          {sep,[{text,[1,44]}],0,false},
          {text,[15,91,113,108,99,40,51,41,93,40,46,47,113,108,99,41]}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
