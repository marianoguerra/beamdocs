{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [17,35,32,71,101,116,116,105,110,103,32,83,116,97,114,116,101,100]},
        null},
       null}},
     {text,"-<a name=\"getting_started\">getting_started</a>"}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [23,84,104,105,115,32,115,101,99,116,105,111,110,32,105,110,116,
               114,111,100,117,99,101,115]}],
            0,false},
           {text,"\b*Mnesia*"},
           {sep,
            [{text,
              "Ã¥with an example database. This example is referenced in the following sections, where the example is modified to illustrate various program constructs. This section illustrates the following mandatory procedures through examples:"}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {text,
          [28,83,116,97,114,116,105,110,103,32,116,104,101,32,69,114,108,97,
           110,103,32,115,101,115,115,105,111,110,46]}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{text,[14,83,112,101,99,105,102,121,105,110,103,32,116,104,101]}],
            0,false},
           {text,"\b*Mnesia*"},
           {sep,
            [{text,"-directory where the database is to be stored."}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {text,
         "yInitializing a new database schema with an attribute that specifies on which node, or nodes, that database is to operate."}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,[{text,"\bStarting"}],0,false},
         {text,"\b*Mnesia*"},
         {sep,[{text,[1,46]}],0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},{text,",Creating and populating the database tables."}],
     0,false}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"%## Starting Mnesia for the First Time"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"5This section provides a simplified demonstration of a"}],
            0,false},
           {text,"\b*Mnesia*"},
           {sep,
            [{text,
              "Asystem startup. The dialogue from the Erlang shell is as follows:"}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [1394,10,32,32,32,32,32,32,32,32,117,110,105,120,62,32,32,101,114,
             108,32,45,109,110,101,115,105,97,32,100,105,114,32,39,34,47,116,
             109,112,47,102,117,110,107,121,34,39,10,32,32,32,32,32,32,32,32,
             69,114,108,97,110,103,32,40,66,69,65,77,41,32,101,109,117,108,97,
             116,111,114,32,118,101,114,115,105,111,110,32,52,46,57,10,32,32,
             32,32,32,32,32,32,10,32,32,32,32,32,32,32,32,69,115,104,101,108,
             108,32,86,52,46,57,32,32,40,97,98,111,114,116,32,119,105,116,104,
             32,94,71,41,10,32,32,32,32,32,32,32,32,49,62,32,10,32,32,32,32,
             32,32,32,32,49,62,32,109,110,101,115,105,97,58,99,114,101,97,116,
             101,95,115,99,104,101,109,97,40,91,110,111,100,101,40,41,93,41,
             46,10,32,32,32,32,32,32,32,32,111,107,10,32,32,32,32,32,32,32,32,
             50,62,32,109,110,101,115,105,97,58,115,116,97,114,116,40,41,46,
             10,32,32,32,32,32,32,32,32,111,107,10,32,32,32,32,32,32,32,32,51,
             62,32,109,110,101,115,105,97,58,99,114,101,97,116,101,95,116,97,
             98,108,101,40,102,117,110,107,121,44,32,91,93,41,46,10,32,32,32,
             32,32,32,32,32,123,97,116,111,109,105,99,44,111,107,125,10,32,32,
             32,32,32,32,32,32,52,62,32,109,110,101,115,105,97,58,105,110,102,
             111,40,41,46,10,32,32,32,32,32,32,32,32,45,45,45,62,32,80,114,
             111,99,101,115,115,101,115,32,104,111,108,100,105,110,103,32,108,
             111,99,107,115,32,60,45,45,45,32,10,32,32,32,32,32,32,32,32,45,
             45,45,62,32,80,114,111,99,101,115,115,101,115,32,119,97,105,116,
             105,110,103,32,102,111,114,32,108,111,99,107,115,32,60,45,45,45,
             32,10,32,32,32,32,32,32,32,32,45,45,45,62,32,80,101,110,100,105,
             110,103,32,40,114,101,109,111,116,101,41,32,116,114,97,110,115,
             97,99,116,105,111,110,115,32,60,45,45,45,32,10,32,32,32,32,32,32,
             32,32,45,45,45,62,32,65,99,116,105,118,101,32,40,108,111,99,97,
             108,41,32,116,114,97,110,115,97,99,116,105,111,110,115,32,60,45,
             45,45,10,32,32,32,32,32,32,32,32,45,45,45,62,32,85,110,99,101,
             114,116,97,105,110,32,116,114,97,110,115,97,99,116,105,111,110,
             115,32,60,45,45,45,32,10,32,32,32,32,32,32,32,32,45,45,45,62,32,
             65,99,116,105,118,101,32,116,97,98,108,101,115,32,60,45,45,45,32,
             10,32,32,32,32,32,32,32,32,102,117,110,107,121,32,32,32,32,32,32,
             32,32,32,32,58,32,119,105,116,104,32,48,32,114,101,99,111,114,
             100,115,32,111,99,99,117,112,121,105,110,103,32,50,54,57,32,119,
             111,114,100,115,32,111,102,32,109,101,109,32,10,32,32,32,32,32,
             32,32,32,115,99,104,101,109,97,32,32,32,32,32,32,32,32,32,58,32,
             119,105,116,104,32,50,32,114,101,99,111,114,100,115,32,111,99,99,
             117,112,121,105,110,103,32,51,53,51,32,119,111,114,100,115,32,
             111,102,32,109,101,109,32,10,32,32,32,32,32,32,32,32,61,61,61,62,
             32,83,121,115,116,101,109,32,105,110,102,111,32,105,110,32,118,
             101,114,115,105,111,110,32,34,49,46,48,34,44,32,100,101,98,117,
             103,32,108,101,118,101,108,32,61,32,110,111,110,101,32,60,61,61,
             61,10,32,32,32,32,32,32,32,32,111,112,116,95,100,105,115,99,46,
             32,68,105,114,101,99,116,111,114,121,32,34,47,116,109,112,47,102,
             117,110,107,121,34,32,105,115,32,117,115,101,100,46,10,32,32,32,
             32,32,32,32,32,117,115,101,32,102,97,108,108,45,98,97,99,107,32,
             97,116,32,114,101,115,116,97,114,116,32,61,32,102,97,108,115,101,
             10,32,32,32,32,32,32,32,32,114,117,110,110,105,110,103,32,100,98,
             32,110,111,100,101,115,32,61,32,91,110,111,110,111,100,101,64,
             110,111,104,111,115,116,93,10,32,32,32,32,32,32,32,32,115,116,
             111,112,112,101,100,32,100,98,32,110,111,100,101,115,32,61,32,91,
             93,32,10,32,32,32,32,32,32,32,32,114,101,109,111,116,101,32,32,
             32,32,32,32,32,32,32,32,32,61,32,91,93,10,32,32,32,32,32,32,32,
             32,114,97,109,95,99,111,112,105,101,115,32,32,32,32,32,32,32,61,
             32,91,102,117,110,107,121,93,10,32,32,32,32,32,32,32,32,100,105,
             115,99,95,99,111,112,105,101,115,32,32,32,32,32,32,61,32,91,115,
             99,104,101,109,97,93,10,32,32,32,32,32,32,32,32,100,105,115,99,
             95,111,110,108,121,95,99,111,112,105,101,115,32,61,32,91,93,10,
             32,32,32,32,32,32,32,32,91,123,110,111,110,111,100,101,64,110,
             111,104,111,115,116,44,100,105,115,99,95,99,111,112,105,101,115,
             125,93,32,61,32,91,115,99,104,101,109,97,93,10,32,32,32,32,32,32,
             32,32,91,123,110,111,110,111,100,101,64,110,111,104,111,115,116,
             44,114,97,109,95,99,111,112,105,101,115,125,93,32,61,32,91,102,
             117,110,107,121,93,10,32,32,32,32,32,32,32,32,49,32,116,114,97,
             110,115,97,99,116,105,111,110,115,32,99,111,109,109,105,116,116,
             101,100,44,32,48,32,97,98,111,114,116,101,100,44,32,48,32,114,
             101,115,116,97,114,116,101,100,44,32,49,32,108,111,103,103,101,
             100,32,116,111,32,100,105,115,99,10,32,32,32,32,32,32,32,32,48,
             32,104,101,108,100,32,108,111,99,107,115,44,32,48,32,105,110,32,
             113,117,101,117,101,59,32,48,32,108,111,99,97,108,32,116,114,97,
             110,115,97,99,116,105,111,110,115,44,32,48,32,114,101,109,111,
             116,101,10,32,32,32,32,32,32,32,32,48,32,116,114,97,110,115,97,
             99,116,105,111,110,115,32,119,97,105,116,115,32,102,111,114,32,
             111,116,104,101,114,32,110,111,100,101,115,58,32,91,93,10,32,32,
             32,32,32,32,32,32,111,107,32,32,32,32,32,32,10,32,32,32,32]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5In this example, the following actions are performed:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\v**Step 1:**"},
            {sep,
             [{text,
               "=The Erlang system is started from the UNIX prompt with a flag"}],
             0,false},
            {text,
             [28,42,45,109,110,101,115,105,97,32,100,105,114,32,39,34,47,116,
              109,112,47,102,117,110,107,121,34,39,42]},
            {sep,
             [{text,
               "7, which indicates in which directory to store the data."}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\v**Step 2:**"},
            {sep,
             [{text,
               "AA new empty schema is initialized on the local node by evaluating"}],
             0,false},
            {text,
             ":[mnesia:create_schema([node()])](./mnesia#create_schema/1)"},
            {sep,
             [{text,
               "c. The schema contains information about the database in general. This is explained in detail later."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\v**Step 3:**"},
           {sep,[{text,"!The DBMS is started by evaluating"}],0,false},
           {text,"\"[mnesia:start()](./mnesia#start/0)"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"\v**Step 4:**"},
          {sep,[{text," A first table is created, called"}],0,false},
          {text,[7,42,102,117,110,107,121,42]},
          {sep,
           [{text,
             [30,44,32,98,121,32,101,118,97,108,117,97,116,105,110,103,32,116,
              104,101,32,101,120,112,114,101,115,115,105,111,110]}],
           0,false},
          {text," *mnesia:create_table(funky, [])*"},
          {sep,[{text,"(. The table is given default properties."}],0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,"\v**Step 5:**"},
         {text," [mnesia:info()](./mnesia#info/0)"},
         {sep,
          [{text,
            "Uis evaluated to display information on the terminal about the status of the database."}],
          0,false}],
        0,false}],
      0,false}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## Example"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[1,65]}],0,false},
          {text,"\b*Mnesia*"},
          {sep,
           [{text,
             "Â­database is organized as a set of tables. Each table is populated with instances (Erlang records). A table has also a number of properties, such as location and persistence."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\v## Database"},null},null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,"2This example shows how to create a database called"}],
           0,false},
          {text,"\t*Company*"},
          {sep,
           [{text,"5and the relationships shown in the following diagram:"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {text,"/![Company Entity-Relation Diagram](company.gif)"},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"!The database model is as follows:"}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {text,"<There are three entities: department, employee, and project."}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "5There are three relationships between these entities:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,"1A department is managed by an employee, hence the"}],
               0,false},
              {text,"\t*manager*"},
              {sep,[{text,"\rrelationship."}],0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,",An employee works at a department, hence the"}],
               0,false},
              {text,"\b*at_dep*"},
              {sep,[{text,"\rrelationship."}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{text,
                "6Each employee works on a number of projects, hence the"}],
              0,false},
             {text,"\t*in_proj*"},
             {sep,[{text,"\rrelationship."}],0,false}],
            0,false}],
          0,false}}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"!## Defining Structure and Content"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "?First the record definitions are entered into a text file named"}],
             0,false},
            {text,"\r*company.hrl*"},
            {sep,
             [{text,
               "E. This file defines the following structure for the example database:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [415,10,10,45,114,101,99,111,114,100,40,101,109,112,108,111,121,
              101,101,44,32,123,101,109,112,95,110,111,44,10,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,44,10,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,97,
              108,97,114,121,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,115,101,120,44,10,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,112,104,111,110,101,44,10,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,111,111,109,
              95,110,111,125,41,46,10,10,45,114,101,99,111,114,100,40,100,101,
              112,116,44,32,123,105,100,44,32,10,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,110,97,109,101,125,41,46,10,10,45,114,101,99,
              111,114,100,40,112,114,111,106,101,99,116,44,32,123,110,97,109,
              101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              110,117,109,98,101,114,125,41,46,10,10,10,45,114,101,99,111,114,
              100,40,109,97,110,97,103,101,114,44,32,123,101,109,112,44,10,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,101,112,
              116,125,41,46,10,10,45,114,101,99,111,114,100,40,97,116,95,100,
              101,112,44,32,123,101,109,112,44,10,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,100,101,112,116,95,105,100,125,41,46,10,
              10,45,114,101,99,111,114,100,40,105,110,95,112,114,111,106,44,
              32,123,101,109,112,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,112,114,111,106,95,110,97,109,101,125,41,46,10]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"4The structure defines six tables in the database. In"}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,[14,44,32,116,104,101,32,102,117,110,99,116,105,111,110]}],
             0,false},
            {text,
             "=[mnesia:create_table(Name, ArgList)](./mnesia#create_table/2)"},
            {sep,
             [{text,
               [15,99,114,101,97,116,101,115,32,116,97,98,108,101,115,46]}],
             0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,
             [{text,
               [18,105,115,32,116,104,101,32,116,97,98,108,101,32,110,97,109,
                101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [22,84,104,101,32,99,117,114,114,101,110,116,32,118,
                           101,114,115,105,111,110,32,111,102]}],
                        0,false},
                       {text,"\b*Mnesia*"},
                       {sep,
                        [{text,
                          "Odoes not require that the name of the table is the same as the record name, see"}],
                        0,false},
                       {text,
                        "I[Record Names versus Table Names.](./Mnesia_chap4#recordnames_tablenames)"},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "AFor example, the table for employees is created with the function"}],
             0,false},
            {text,
             "N*mnesia:create_table(employee, [{attributes, record_info(fields, employee)}])*"},
            {sep,
             [{text,
               [16,46,32,84,104,101,32,116,97,98,108,101,32,110,97,109,101]}],
             0,false},
            {text,"\n*employee*"},
            {sep,
             [{text,")matches the name for records specified in"}],
             0,false},
            {text,"\t*ArgList*"},
            {sep,
             [{text,
               [16,46,32,84,104,101,32,101,120,112,114,101,115,115,105,111,
                110]}],
             0,false},
            {text,"!*record_info(fields, RecordName)*"},
            {sep,
             [{text,
               "zis processed by the Erlang preprocessor and evaluates to a list containing the names of the different fields for a record."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\n## Program"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"&The following shell interaction starts"}],0,false},
            {text,"\b*Mnesia*"},
            {sep,[{text,"\"and initializes the schema for the"}],0,false},
            {text,"\t*Company*"},
            {sep,[{text,"\tdatabase:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"\v\n        % "},
            {text,"1erl -mnesia dir '\"/ldisc/scratch/Mnesia.Company\"'"},
            {text,
             "Ã\n         Erlang (BEAM) emulator version 4.9\n          \n          Eshell V4.9  (abort with ^G)\n          1> mnesia:create_schema([node()]).\n          ok\n          2> mnesia:start().\n          ok"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "MThe following program module creates and populates previously defined tables:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [746,10,10,10,45,105,110,99,108,117,100,101,95,108,105,98,40,34,
              115,116,100,108,105,98,47,105,110,99,108,117,100,101,47,113,108,
              99,46,104,114,108,34,41,46,10,45,105,110,99,108,117,100,101,40,
              34,99,111,109,112,97,110,121,46,104,114,108,34,41,46,10,10,105,
              110,105,116,40,41,32,45,62,10,32,32,32,32,109,110,101,115,105,
              97,58,99,114,101,97,116,101,95,116,97,98,108,101,40,101,109,112,
              108,111,121,101,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,91,123,97,116,116,114,105,
              98,117,116,101,115,44,32,114,101,99,111,114,100,95,105,110,102,
              111,40,102,105,101,108,100,115,44,32,101,109,112,108,111,121,
              101,101,41,125,93,41,44,10,32,32,32,32,109,110,101,115,105,97,
              58,99,114,101,97,116,101,95,116,97,98,108,101,40,100,101,112,
              116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,91,123,97,116,116,114,105,98,117,116,101,115,
              44,32,114,101,99,111,114,100,95,105,110,102,111,40,102,105,101,
              108,100,115,44,32,100,101,112,116,41,125,93,41,44,10,32,32,32,
              32,109,110,101,115,105,97,58,99,114,101,97,116,101,95,116,97,98,
              108,101,40,112,114,111,106,101,99,116,44,10,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,123,97,
              116,116,114,105,98,117,116,101,115,44,32,114,101,99,111,114,100,
              95,105,110,102,111,40,102,105,101,108,100,115,44,32,112,114,111,
              106,101,99,116,41,125,93,41,44,10,32,32,32,32,109,110,101,115,
              105,97,58,99,114,101,97,116,101,95,116,97,98,108,101,40,109,97,
              110,97,103,101,114,44,32,91,123,116,121,112,101,44,32,98,97,103,
              125,44,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,97,116,
              116,114,105,98,117,116,101,115,44,32,114,101,99,111,114,100,95,
              105,110,102,111,40,102,105,101,108,100,115,44,32,109,97,110,97,
              103,101,114,41,125,93,41,44,10,32,32,32,32,109,110,101,115,105,
              97,58,99,114,101,97,116,101,95,116,97,98,108,101,40,97,116,95,
              100,101,112,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,91,123,97,116,116,114,105,98,117,
              116,101,115,44,32,114,101,99,111,114,100,95,105,110,102,111,40,
              102,105,101,108,100,115,44,32,97,116,95,100,101,112,41,125,93,
              41,44,10,32,32,32,32,109,110,101,115,105,97,58,99,114,101,97,
              116,101,95,116,97,98,108,101,40,105,110,95,112,114,111,106,44,
              32,91,123,116,121,112,101,44,32,98,97,103,125,44,32,10,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,123,97,116,116,114,105,98,117,116,
              101,115,44,32,114,101,99,111,114,100,95,105,110,102,111,40,102,
              105,101,108,100,115,44,32,105,110,95,112,114,111,106,41,125,93,
              41,46,10]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [20,35,35,32,80,114,111,103,114,97,109,32,69,120,112,108,97,105,110,
          101,100]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "=The following commands and functions are used to initiate the"}],
             0,false},
            {text,"\t*Company*"},
            {sep,[{text,"\tdatabase:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"5*% erl -mnesia dir '\"/ldisc/scratch/Mnesia.Company\"'*"},
           {sep,
            [{text,
              "K. This is a UNIX command-line entry that starts the Erlang system. The flag"}],
            0,false},
           {text,
            [17,42,45,109,110,101,115,105,97,32,100,105,114,32,68,105,114,42]},
           {sep,
            [{text,
              "qspecifies the location of the database directory. The system responds and waits for further input with the prompt"}],
            0,false},
           {text,[4,42,49,62,42]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            ":[mnesia:create_schema([node()])](./mnesia#create_schema/1)"},
           {sep,
            [{text,
              [30,46,32,84,104,105,115,32,102,117,110,99,116,105,111,110,32,
               104,97,115,32,116,104,101,32,102,111,114,109,97,116]}],
            0,false},
           {text,"$*mnesia:create_schema(DiscNodeList)*"},
           {sep,
            [{text,
              [132,97,110,100,32,105,110,105,116,105,97,116,101,115,32,97,32,
               110,101,119,32,115,99,104,101,109,97,46,32,73,110,32,116,104,
               105,115,32,101,120,97,109,112,108,101,44,32,97,32,110,111,110,
               45,100,105,115,116,114,105,98,117,116,101,100,32,115,121,115,
               116,101,109,32,117,115,105,110,103,32,111,110,108,121,32,111,
               110,101,32,110,111,100,101,32,105,115,32,99,114,101,97,116,101,
               100,46,32,83,99,104,101,109,97,115,32,97,114,101,32,102,117,
               108,108,121,32,101,120,112,108,97,105,110,101,100,32,105,110]}],
            0,false},
           {text,",[Define a Schema](./Mnesia_chap3#def_schema)"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"\"[mnesia:start()](./mnesia#start/0)"},
          {sep,
           [{text,
             [22,46,32,84,104,105,115,32,102,117,110,99,116,105,111,110,32,
              115,116,97,114,116,115]}],
           0,false},
          {text,"\b*Mnesia*"},
          {sep,
           [{text,
             [25,97,110,100,32,105,115,32,102,117,108,108,121,32,101,120,112,
              108,97,105,110,101,100,32,105,110]}],
           0,false},
          {text,"+[Start Mnesia](./Mnesia_chap3#start_mnesia)"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "EContinuing the dialogue with the Erlang shell produces the following:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [1589,10,32,32,32,32,32,32,32,32,51,62,32,99,111,109,112,97,110,
              121,58,105,110,105,116,40,41,46,10,32,32,32,32,32,32,32,32,123,
              97,116,111,109,105,99,44,111,107,125,10,32,32,32,32,32,32,32,32,
              52,62,32,109,110,101,115,105,97,58,105,110,102,111,40,41,46,10,
              32,32,32,32,32,32,32,32,45,45,45,62,32,80,114,111,99,101,115,
              115,101,115,32,104,111,108,100,105,110,103,32,108,111,99,107,
              115,32,60,45,45,45,32,10,32,32,32,32,32,32,32,32,45,45,45,62,32,
              80,114,111,99,101,115,115,101,115,32,119,97,105,116,105,110,103,
              32,102,111,114,32,108,111,99,107,115,32,60,45,45,45,32,10,32,32,
              32,32,32,32,32,32,45,45,45,62,32,80,101,110,100,105,110,103,32,
              40,114,101,109,111,116,101,41,32,116,114,97,110,115,97,99,116,
              105,111,110,115,32,60,45,45,45,32,10,32,32,32,32,32,32,32,32,45,
              45,45,62,32,65,99,116,105,118,101,32,40,108,111,99,97,108,41,32,
              116,114,97,110,115,97,99,116,105,111,110,115,32,60,45,45,45,10,
              32,32,32,32,32,32,32,32,45,45,45,62,32,85,110,99,101,114,116,97,
              105,110,32,116,114,97,110,115,97,99,116,105,111,110,115,32,60,
              45,45,45,32,10,32,32,32,32,32,32,32,32,45,45,45,62,32,65,99,116,
              105,118,101,32,116,97,98,108,101,115,32,60,45,45,45,32,10,32,32,
              32,32,32,32,32,32,105,110,95,112,114,111,106,32,32,32,32,32,32,
              32,32,58,32,119,105,116,104,32,48,32,114,101,99,111,114,100,115,
              32,111,99,99,117,112,105,110,103,32,50,54,57,32,119,111,114,100,
              115,32,111,102,32,109,101,109,32,10,32,32,32,32,32,32,32,32,97,
              116,95,100,101,112,32,32,32,32,32,32,32,32,32,58,32,119,105,116,
              104,32,48,32,114,101,99,111,114,100,115,32,111,99,99,117,112,
              105,110,103,32,50,54,57,32,119,111,114,100,115,32,111,102,32,
              109,101,109,32,10,32,32,32,32,32,32,32,32,109,97,110,97,103,101,
              114,32,32,32,32,32,32,32,32,58,32,119,105,116,104,32,48,32,114,
              101,99,111,114,100,115,32,111,99,99,117,112,105,110,103,32,50,
              54,57,32,119,111,114,100,115,32,111,102,32,109,101,109,32,10,32,
              32,32,32,32,32,32,32,112,114,111,106,101,99,116,32,32,32,32,32,
              32,32,32,58,32,119,105,116,104,32,48,32,114,101,99,111,114,100,
              115,32,111,99,99,117,112,105,110,103,32,50,54,57,32,119,111,114,
              100,115,32,111,102,32,109,101,109,32,10,32,32,32,32,32,32,32,32,
              100,101,112,116,32,32,32,32,32,32,32,32,32,32,32,58,32,119,105,
              116,104,32,48,32,114,101,99,111,114,100,115,32,111,99,99,117,
              112,105,110,103,32,50,54,57,32,119,111,114,100,115,32,111,102,
              32,109,101,109,32,10,32,32,32,32,32,32,32,32,101,109,112,108,
              111,121,101,101,32,32,32,32,32,32,32,58,32,119,105,116,104,32,
              48,32,114,101,99,111,114,100,115,32,111,99,99,117,112,105,110,
              103,32,50,54,57,32,119,111,114,100,115,32,111,102,32,109,101,
              109,32,10,32,32,32,32,32,32,32,32,115,99,104,101,109,97,32,32,
              32,32,32,32,32,32,32,58,32,119,105,116,104,32,55,32,114,101,99,
              111,114,100,115,32,111,99,99,117,112,105,110,103,32,53,55,49,32,
              119,111,114,100,115,32,111,102,32,109,101,109,32,10,32,32,32,32,
              32,32,32,32,61,61,61,62,32,83,121,115,116,101,109,32,105,110,
              102,111,32,105,110,32,118,101,114,115,105,111,110,32,34,49,46,
              48,34,44,32,100,101,98,117,103,32,108,101,118,101,108,32,61,32,
              110,111,110,101,32,60,61,61,61,10,32,32,32,32,32,32,32,32,111,
              112,116,95,100,105,115,99,46,32,68,105,114,101,99,116,111,114,
              121,32,34,47,108,100,105,115,99,47,115,99,114,97,116,99,104,47,
              77,110,101,115,105,97,46,67,111,109,112,97,110,121,34,32,105,
              115,32,117,115,101,100,46,10,32,32,32,32,32,32,32,32,117,115,
              101,32,102,97,108,108,45,98,97,99,107,32,97,116,32,114,101,115,
              116,97,114,116,32,61,32,102,97,108,115,101,10,32,32,32,32,32,32,
              32,32,114,117,110,110,105,110,103,32,100,98,32,110,111,100,101,
              115,32,61,32,91,110,111,110,111,100,101,64,110,111,104,111,115,
              116,93,10,32,32,32,32,32,32,32,32,115,116,111,112,112,101,100,
              32,100,98,32,110,111,100,101,115,32,61,32,91,93,32,10,32,32,32,
              32,32,32,32,32,114,101,109,111,116,101,32,32,32,32,32,32,32,32,
              32,32,32,61,32,91,93,10,32,32,32,32,32,32,32,32,114,97,109,95,
              99,111,112,105,101,115,32,32,32,32,32,32,32,61,10,32,32,32,32,
              32,32,32,32,32,32,32,32,91,97,116,95,100,101,112,44,100,101,112,
              116,44,101,109,112,108,111,121,101,101,44,105,110,95,112,114,
              111,106,44,109,97,110,97,103,101,114,44,112,114,111,106,101,99,
              116,93,10,32,32,32,32,32,32,32,32,100,105,115,99,95,99,111,112,
              105,101,115,32,32,32,32,32,32,61,32,91,115,99,104,101,109,97,93,
              10,32,32,32,32,32,32,32,32,100,105,115,99,95,111,110,108,121,95,
              99,111,112,105,101,115,32,61,32,91,93,10,32,32,32,32,32,32,32,
              32,91,123,110,111,110,111,100,101,64,110,111,104,111,115,116,44,
              100,105,115,99,95,99,111,112,105,101,115,125,93,32,61,32,91,115,
              99,104,101,109,97,93,10,32,32,32,32,32,32,32,32,91,123,110,111,
              110,111,100,101,64,110,111,104,111,115,116,44,114,97,109,95,99,
              111,112,105,101,115,125,93,32,61,10,32,32,32,32,32,32,32,32,32,
              32,32,32,91,101,109,112,108,111,121,101,101,44,100,101,112,116,
              44,112,114,111,106,101,99,116,44,109,97,110,97,103,101,114,44,
              97,116,95,100,101,112,44,105,110,95,112,114,111,106,93,10,32,32,
              32,32,32,32,32,32,54,32,116,114,97,110,115,97,99,116,105,111,
              110,115,32,99,111,109,109,105,116,116,101,100,44,32,48,32,97,98,
              111,114,116,101,100,44,32,48,32,114,101,115,116,97,114,116,101,
              100,44,32,54,32,108,111,103,103,101,100,32,116,111,32,100,105,
              115,99,10,32,32,32,32,32,32,32,32,48,32,104,101,108,100,32,108,
              111,99,107,115,44,32,48,32,105,110,32,113,117,101,117,101,59,32,
              48,32,108,111,99,97,108,32,116,114,97,110,115,97,99,116,105,111,
              110,115,44,32,48,32,114,101,109,111,116,101,10,32,32,32,32,32,
              32,32,32,48,32,116,114,97,110,115,97,99,116,105,111,110,115,32,
              119,97,105,116,115,32,102,111,114,32,111,116,104,101,114,32,110,
              111,100,101,115,58,32,91,93,10,32,32,32,32,32,32,32,32,111,107,
              10,32,32,32,32,32,32]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"(A set of tables is created. The function"}],0,false},
            {text,
             "=[mnesia:create_table(Name, ArgList)](./mnesia#create_table/2)"},
            {sep,
             [{text,
               "@creates the required database tables. The options available with"}],
             0,false},
            {text,"\t*ArgList*"},
            {sep,
             [{text,
               [16,97,114,101,32,101,120,112,108,97,105,110,101,100,32,105,
                110]}],
             0,false},
            {text,"1[Create New Tables](./Mnesia_chap3#create_tables)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fThe function"}],0,false},
            {text,
             [16,42,99,111,109,112,97,110,121,58,105,110,105,116,47,48,42]},
            {sep,
             [{text,"*creates the tables. Two tables are of type"}],
             0,false},
            {text,[5,42,98,97,103,42]},
            {sep,[{text,"\r. This is the"}],0,false},
            {text,"\t*manager*"},
            {sep,
             [{text,
               [20,114,101,108,97,116,105,111,110,32,97,115,32,119,101,108,
                108,32,116,104,101]}],
             0,false},
            {text,"\t*in_proj*"},
            {sep,
             [{text,
               [152,114,101,108,97,116,105,111,110,46,32,84,104,105,115,32,
                105,115,32,105,110,116,101,114,112,114,101,116,101,100,32,97,
                115,58,32,97,110,32,101,109,112,108,111,121,101,101,32,99,97,
                110,32,98,101,32,109,97,110,97,103,101,114,32,111,118,101,114,
                32,115,101,118,101,114,97,108,32,100,101,112,97,114,116,109,
                101,110,116,115,44,32,97,110,100,32,97,110,32,101,109,112,108,
                111,121,101,101,32,99,97,110,32,112,97,114,116,105,99,105,112,
                97,116,101,32,105,110,32,115,101,118,101,114,97,108,32,112,
                114,111,106,101,99,116,115,46,32,72,111,119,101,118,101,114,
                44,32,116,104,101]}],
             0,false},
            {text,"\b*at_dep*"},
            {sep,[{text,"\vrelation is"}],0,false},
            {text,[5,42,115,101,116,42]},
            {sep,
             [{text,
               "w, as an employee can only work in one department. In this data model, there are examples of relations that are 1-to-1 ("}],
             0,false},
            {text,[5,42,115,101,116,42]},
            {sep,
             [{text,
               [17,41,32,97,110,100,32,49,45,116,111,45,109,97,110,121,32,
                40]}],
             0,false},
            {text,[5,42,98,97,103,42]},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text," [mnesia:info()](./mnesia#info/0)"},
            {sep,
             [{text,
               "Ãnow indicates that a database has seven local tables, where six are the user-defined tables and one is the schema. Six transactions have been committed, as six successful transactions were run when creating the tables."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "WTo write a function that inserts an employee record into the database, there must be an"}],
             0,false},
            {text,"\b*at_dep*"},
            {sep,
             [{text,
               [19,114,101,99,111,114,100,32,97,110,100,32,97,32,115,101,116,
                32,111,102]}],
             0,false},
            {text,"\t*in_proj*"},
            {sep,
             [{text,
               "Jrecords inserted. Examine the following code used to complete this action:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [478,10,10,10,105,110,115,101,114,116,95,101,109,112,40,69,109,
              112,44,32,68,101,112,116,73,100,44,32,80,114,111,106,78,97,109,
              101,115,41,32,45,62,10,32,32,32,32,69,110,97,109,101,32,61,32,
              69,109,112,35,101,109,112,108,111,121,101,101,46,110,97,109,101,
              44,10,32,32,32,32,70,117,110,32,61,32,102,117,110,40,41,32,45,
              62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,109,
              110,101,115,105,97,58,119,114,105,116,101,40,69,109,112,41,44,
              10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,65,116,
              68,101,112,32,61,32,35,97,116,95,100,101,112,123,101,109,112,32,
              61,32,69,110,97,109,101,44,32,100,101,112,116,95,105,100,32,61,
              32,68,101,112,116,73,100,125,44,10,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,109,110,101,115,105,97,58,119,114,
              105,116,101,40,65,116,68,101,112,41,44,10,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,109,107,95,112,114,111,106,115,
              40,69,110,97,109,101,44,32,80,114,111,106,78,97,109,101,115,41,
              10,32,32,32,32,32,32,32,32,32,32,101,110,100,44,10,32,32,32,32,
              109,110,101,115,105,97,58,116,114,97,110,115,97,99,116,105,111,
              110,40,70,117,110,41,46,10,10,10,109,107,95,112,114,111,106,115,
              40,69,110,97,109,101,44,32,91,80,114,111,106,78,97,109,101,124,
              84,97,105,108,93,41,32,45,62,10,32,32,32,32,109,110,101,115,105,
              97,58,119,114,105,116,101,40,35,105,110,95,112,114,111,106,123,
              101,109,112,32,61,32,69,110,97,109,101,44,32,112,114,111,106,95,
              110,97,109,101,32,61,32,80,114,111,106,78,97,109,101,125,41,44,
              10,32,32,32,32,109,107,95,112,114,111,106,115,40,69,110,97,109,
              101,44,32,84,97,105,108,41,59,10,109,107,95,112,114,111,106,115,
              40,95,44,32,91,93,41,32,45,62,32,111,107,46,10,32,32,32,32,10]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,[{text,[3,84,104,101]}],0,false},
                {text,[14,42,105,110,115,101,114,116,95,101,109,112,47,51,42]},
                {sep,
                 [{text,
                   [25,97,114,103,117,109,101,110,116,115,32,97,114,101,32,97,
                    115,32,102,111,108,108,111,119,115,58]}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,[5,42,69,109,112,42]},
               {sep,
                [{text,
                  [22,105,115,32,97,110,32,101,109,112,108,111,121,101,101,32,
                   114,101,99,111,114,100,46]}],
                0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\b*DeptId*"},
               {sep,
                [{text,
                  ";is the identity of the department where the employee works."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"\v*ProjNames*"},
              {sep,
               [{text,
                 "@is a list of the names of the projects where the employee works."}],
               0,false}],
             0,false}],
           0,false}}],
        0,false}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fThe function"}],0,false},
            {text,[14,42,105,110,115,101,114,116,95,101,109,112,47,51,42]},
            {sep,[{text,"\"creates a Functional Object (Fun)."}],0,false},
            {text,[5,42,70,117,110,42]},
            {sep,
             [{text,".is passed as a single argument to the function"}],
             0,false},
            {text,"1[mnesia:transaction(Fun)](./mnesia#transaction/2)"},
            {sep,
             [{text,
               [17,46,32,84,104,105,115,32,109,101,97,110,115,32,116,104,97,
                116]}],
             0,false},
            {text,[5,42,70,117,110,42]},
            {sep,
             [{text,
               "6is run as a transaction with the following properties:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,[{text,[1,65]}],0,false},
          {text,[5,42,70,117,110,42]},
          {sep,
           [{text,
             [25,101,105,116,104,101,114,32,115,117,99,99,101,101,100,115,32,
              111,114,32,102,97,105,108,115,46]}],
           0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {text,
         [128,67,111,100,101,32,116,104,97,116,32,109,97,110,105,112,117,108,
          97,116,101,115,32,116,104,101,32,115,97,109,101,32,100,97,116,97,32,
          114,101,99,111,114,100,115,32,99,97,110,32,98,101,32,114,117,110,32,
          99,111,110,99,117,114,114,101,110,116,108,121,32,119,105,116,104,
          111,117,116,32,116,104,101,32,100,105,102,102,101,114,101,110,116,
          32,112,114,111,99,101,115,115,101,115,32,105,110,116,101,114,102,
          101,114,105,110,103,32,119,105,116,104,32,101,97,99,104,32,111,116,
          104,101,114,46]}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$The function can be used as follows:"}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [312,10,32,32,32,32,32,32,32,32,32,32,69,109,112,32,32,61,32,35,
              101,109,112,108,111,121,101,101,123,101,109,112,95,110,111,61,
              32,49,48,52,55,51,50,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,101,32,
              61,32,107,108,97,99,107,101,44,10,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,97,108,
              97,114,121,32,61,32,55,44,10,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,115,101,120,32,
              61,32,109,97,108,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,112,104,111,110,
              101,32,61,32,57,56,49,48,56,44,10,32,32,32,32,32,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,114,111,111,
              109,95,110,111,32,61,32,123,50,50,49,44,32,48,49,53,125,125,44,
              10,32,32,32,32,32,32,32,32,105,110,115,101,114,116,95,101,109,
              112,40,69,109,112,44,32,39,66,47,83,70,82,39,44,32,91,69,114,
              108,97,110,103,44,32,109,110,101,115,105,97,44,32,111,116,112,
              93,41,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "<For information about Funs, see \"Fun Expressions\" in section"}],
                        0,false},
                       {text,
                        [25,42,69,114,108,97,110,103,32,82,101,102,101,114,
                         101,110,99,101,32,77,97,110,117,97,108,42]},
                       {sep,
                        [{text,
                          [25,105,110,32,83,121,115,116,101,109,32,68,111,99,
                           117,109,101,110,116,97,116,105,111,110,46,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\e## Initial Database Content"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,")After the insertion of the employee named"}],
             0,false},
            {text,"\b*klacke*"},
            {sep,
             [{text,"), the database has the following records:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,
      [31,60,97,32,110,97,109,101,61,34,116,97,98,108,101,50,95,49,34,62,116,
       97,98,108,101,50,95,49,60,47,97,62]},
     {text,"\vTODO: TABLE"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,84,104,105,115]}],0,false},
            {text,"\n*employee*"},
            {sep,
             [{text,"1record has the Erlang record/tuple representation"}],
             0,false},
            {text,"8*{employee, 104732, klacke, 7, male, 98108, {221, 015}}*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,
      [31,60,97,32,110,97,109,101,61,34,116,97,98,108,101,50,95,50,34,62,116,
       97,98,108,101,50,95,50,60,47,97,62]},
     {text,"\vTODO: TABLE"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,84,104,105,115]}],0,false},
            {text,"\b*at_dep*"},
            {sep,
             [{text,"*record has the Erlang tuple representation"}],
             0,false},
            {text,"\e*{at_dep, klacke, 'B/SFR'}*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,
      [31,60,97,32,110,97,109,101,61,34,116,97,98,108,101,51,95,51,34,62,116,
       97,98,108,101,51,95,51,60,47,97,62]},
     {text,"\vTODO: TABLE"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,84,104,105,115]}],0,false},
            {text,"\t*in_proj*"},
            {sep,
             [{text,"*record has the Erlang tuple representation"}],
             0,false},
            {text,
             ">*{in_proj, klacke, 'Erlang', klacke, 'otp', klacke, 'mnesia'}*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"2There is no difference between rows in a table and"}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,
               "^records. Both concepts are the same and are used interchangeably throughout this User's Guide."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[1,65]}],0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,
               [21,116,97,98,108,101,32,105,115,32,112,111,112,117,108,97,116,
                101,100,32,98,121]}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,
               [31,114,101,99,111,114,100,115,46,32,70,111,114,32,101,120,97,
                109,112,108,101,44,32,116,104,101,32,116,117,112,108,101]}],
             0,false},
            {text,
             [24,42,123,98,111,115,115,44,32,107,108,97,99,107,101,44,32,98,
              106,97,114,110,101,125,42]},
            {sep,
             [{text,
               "Ã°is a record. The second element in this tuple is the key. To identify a table uniquely, both the key and the table name is needed. The term Object Identifier (OID) is sometimes used for the arity two tuple {Tab, Key}. The OID for the record"}],
             0,false},
            {text,
             [24,42,123,98,111,115,115,44,32,107,108,97,99,107,101,44,32,98,
              106,97,114,110,101,125,42]},
            {sep,
             [{text,
               [22,105,115,32,116,104,101,32,97,114,105,116,121,32,116,119,
                111,32,116,117,112,108,101]}],
             0,false},
            {text,
             [16,42,123,98,111,115,115,44,32,107,108,97,99,107,101,125,42]},
            {sep,
             [{text,
               "Â². The first element of the tuple is the type of the record and the second element is the key. An OID can lead to zero, one, or more records depending on whether the table type is"}],
             0,false},
            {text,[5,42,115,101,116,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[5,42,98,97,103,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\nThe record"}],0,false},
            {text,
             [24,42,123,98,111,115,115,44,32,107,108,97,99,107,101,44,32,98,
              106,97,114,110,101,125,42]},
            {sep,
             [{text,
               "}can also be inserted. This record contains an implicit reference to another employee that does not yet exist in the database."}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,
               [22,100,111,101,115,32,110,111,116,32,101,110,102,111,114,99,
                101,32,116,104,105,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"/## Adding Records and Relationships to Database"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text," After adding more records to the"}],0,false},
            {text,"\t*Company*"},
            {sep,
             [{text,"2database, the result can be the following records:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\v*employees*"},{sep,[{text,[1,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [624,10,32,32,32,32,32,32,32,32,123,101,109,112,108,111,121,101,
              101,44,32,49,48,52,52,54,53,44,32,34,74,111,104,110,115,111,110,
              32,84,111,114,98,106,111,114,110,34,44,32,32,32,49,44,32,109,97,
              108,101,44,32,32,57,57,49,56,52,44,32,123,50,52,50,44,48,51,56,
              125,125,46,10,32,32,32,32,32,32,32,32,123,101,109,112,108,111,
              121,101,101,44,32,49,48,55,57,49,50,44,32,34,67,97,114,108,115,
              115,111,110,32,84,117,117,108,97,34,44,32,32,32,32,32,50,44,32,
              102,101,109,97,108,101,44,57,52,53,53,54,44,32,123,50,52,50,44,
              48,53,54,125,125,46,10,32,32,32,32,32,32,32,32,123,101,109,112,
              108,111,121,101,101,44,32,49,49,52,56,55,50,44,32,34,68,97,99,
              107,101,114,32,66,106,97,114,110,101,34,44,32,32,32,32,32,32,51,
              44,32,109,97,108,101,44,32,32,57,57,52,49,53,44,32,123,50,50,49,
              44,48,51,53,125,125,46,10,32,32,32,32,32,32,32,32,123,101,109,
              112,108,111,121,101,101,44,32,49,48,52,53,51,49,44,32,34,78,105,
              108,115,115,111,110,32,72,97,110,115,34,44,32,32,32,32,32,32,32,
              51,44,32,109,97,108,101,44,32,32,57,57,52,57,53,44,32,123,50,50,
              50,44,48,50,54,125,125,46,10,32,32,32,32,32,32,32,32,123,101,
              109,112,108,111,121,101,101,44,32,49,48,52,54,53,57,44,32,34,84,
              111,114,110,107,118,105,115,116,32,84,111,114,98,106,111,114,
              110,34,44,32,50,44,32,109,97,108,101,44,32,32,57,57,53,49,52,44,
              32,123,50,50,50,44,48,50,50,125,125,46,10,32,32,32,32,32,32,32,
              32,123,101,109,112,108,111,121,101,101,44,32,49,48,52,55,51,50,
              44,32,34,87,105,107,115,116,114,111,109,32,67,108,97,101,115,34,
              44,32,32,32,32,32,50,44,32,109,97,108,101,44,32,32,57,57,53,56,
              54,44,32,123,50,50,49,44,48,49,53,125,125,46,10,32,32,32,32,32,
              32,32,32,123,101,109,112,108,111,121,101,101,44,32,49,49,55,55,
              49,54,44,32,34,70,101,100,111,114,105,119,32,65,110,110,97,34,
              44,32,32,32,32,32,32,32,49,44,32,102,101,109,97,108,101,44,57,
              57,49,52,51,44,32,123,50,50,49,44,48,51,49,125,125,46,10,32,32,
              32,32,32,32,32,32,123,101,109,112,108,111,121,101,101,44,32,49,
              49,53,48,49,56,44,32,34,77,97,116,116,115,115,111,110,32,72,97,
              107,97,110,34,44,32,32,32,32,32,51,44,32,109,97,108,101,44,32,
              32,57,57,50,53,49,44,32,123,50,48,51,44,51,52,56,125,125,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[6,42,100,101,112,116,42]},{sep,[{text,[1,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "Â \n        {dept, 'B/SF',  \"Open Telecom Platform\"}.\n        {dept, 'B/SFP', \"OTP - Product Development\"}.\n        {dept, 'B/SFR', \"Computer Science Laboratory\"}."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\n*projects*"},{sep,[{text,[1,58]}],0,false}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "Ã£\n        %% projects\n        {project, erlang, 1}.\n        {project, otp, 2}.\n        {project, beam, 3}.\n        {project, mnesia, 5}.\n        {project, wolf, 6}.\n        {project, documentation, 7}.\n        {project, www, 8}."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [19,84,104,101,115,101,32,116,104,114,101,101,32,116,97,98,108,
                101,115,44]}],
             0,false},
            {text,"\v*employees*"},
            {sep,[{text,[1,44]}],0,false},
            {text,[6,42,100,101,112,116,42]},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,"\n*projects*"},
            {sep,
             [{text,
               [133,44,32,97,114,101,32,109,97,100,101,32,117,112,32,111,102,
                32,114,101,97,108,32,114,101,99,111,114,100,115,46,32,84,104,
                101,32,102,111,108,108,111,119,105,110,103,32,100,97,116,97,
                98,97,115,101,32,99,111,110,116,101,110,116,32,105,115,32,115,
                116,111,114,101,100,32,105,110,32,116,104,101,32,116,97,98,
                108,101,115,32,97,110,100,32,105,115,32,98,117,105,108,116,32,
                111,110,32,114,101,108,97,116,105,111,110,115,104,105,112,115,
                46,32,84,104,101,115,101,32,116,97,98,108,101,115,32,97,114,
                101]}],
             0,false},
            {text,"\t*manager*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\b*at_dep*"},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,"\t*in_proj*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\t*manager*"},{sep,[{text,[1,58]}],0,false}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "k\n        {manager, 104465, 'B/SF'}.\n        {manager, 104465, 'B/SFP'}.\n        {manager, 114872, 'B/SFR'}."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\b*at_dep*"},{sep,[{text,[1,58]}],0,false}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [278,10,32,32,32,32,32,32,32,32,123,97,116,95,100,101,112,44,32,
              49,48,52,52,54,53,44,32,39,66,47,83,70,39,125,46,10,32,32,32,32,
              32,32,32,32,123,97,116,95,100,101,112,44,32,49,48,55,57,49,50,
              44,32,39,66,47,83,70,39,125,46,10,32,32,32,32,32,32,32,32,123,
              97,116,95,100,101,112,44,32,49,49,52,56,55,50,44,32,39,66,47,83,
              70,82,39,125,46,10,32,32,32,32,32,32,32,32,123,97,116,95,100,
              101,112,44,32,49,48,52,53,51,49,44,32,39,66,47,83,70,82,39,125,
              46,10,32,32,32,32,32,32,32,32,123,97,116,95,100,101,112,44,32,
              49,48,52,54,53,57,44,32,39,66,47,83,70,82,39,125,46,10,32,32,32,
              32,32,32,32,32,123,97,116,95,100,101,112,44,32,49,48,52,55,51,
              50,44,32,39,66,47,83,70,82,39,125,46,10,32,32,32,32,32,32,32,32,
              123,97,116,95,100,101,112,44,32,49,49,55,55,49,54,44,32,39,66,
              47,83,70,80,39,125,46,10,32,32,32,32,32,32,32,32,123,97,116,95,
              100,101,112,44,32,49,49,53,48,49,56,44,32,39,66,47,83,70,80,39,
              125,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\t*in_proj*"},{sep,[{text,[1,58]}],0,false}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [504,10,32,32,32,32,32,32,32,32,123,105,110,95,112,114,111,106,
              44,32,49,48,52,52,54,53,44,32,111,116,112,125,46,10,32,32,32,32,
              32,32,32,32,123,105,110,95,112,114,111,106,44,32,49,48,55,57,49,
              50,44,32,111,116,112,125,46,10,32,32,32,32,32,32,32,32,123,105,
              110,95,112,114,111,106,44,32,49,49,52,56,55,50,44,32,111,116,
              112,125,46,10,32,32,32,32,32,32,32,32,123,105,110,95,112,114,
              111,106,44,32,49,48,52,53,51,49,44,32,111,116,112,125,46,10,32,
              32,32,32,32,32,32,32,123,105,110,95,112,114,111,106,44,32,49,48,
              52,53,51,49,44,32,109,110,101,115,105,97,125,46,10,32,32,32,32,
              32,32,32,32,123,105,110,95,112,114,111,106,44,32,49,48,52,53,52,
              53,44,32,119,111,108,102,125,46,10,32,32,32,32,32,32,32,32,123,
              105,110,95,112,114,111,106,44,32,49,48,52,54,53,57,44,32,111,
              116,112,125,46,10,32,32,32,32,32,32,32,32,123,105,110,95,112,
              114,111,106,44,32,49,48,52,54,53,57,44,32,119,111,108,102,125,
              46,10,32,32,32,32,32,32,32,32,123,105,110,95,112,114,111,106,44,
              32,49,48,52,55,51,50,44,32,111,116,112,125,46,10,32,32,32,32,32,
              32,32,32,123,105,110,95,112,114,111,106,44,32,49,48,52,55,51,50,
              44,32,109,110,101,115,105,97,125,46,10,32,32,32,32,32,32,32,32,
              123,105,110,95,112,114,111,106,44,32,49,48,52,55,51,50,44,32,
              101,114,108,97,110,103,125,46,10,32,32,32,32,32,32,32,32,123,
              105,110,95,112,114,111,106,44,32,49,49,55,55,49,54,44,32,111,
              116,112,125,46,10,32,32,32,32,32,32,32,32,123,105,110,95,112,
              114,111,106,44,32,49,49,55,55,49,54,44,32,100,111,99,117,109,
              101,110,116,97,116,105,111,110,125,46,10,32,32,32,32,32,32,32,
              32,123,105,110,95,112,114,111,106,44,32,49,49,53,48,49,56,44,32,
              111,116,112,125,46,10,32,32,32,32,32,32,32,32,123,105,110,95,
              112,114,111,106,44,32,49,49,53,48,49,56,44,32,109,110,101,115,
              105,97,125,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [275,84,104,101,32,114,111,111,109,32,110,117,109,98,101,114,
                32,105,115,32,97,110,32,97,116,116,114,105,98,117,116,101,32,
                111,102,32,116,104,101,32,101,109,112,108,111,121,101,101,32,
                114,101,99,111,114,100,46,32,84,104,105,115,32,105,115,32,97,
                32,115,116,114,117,99,116,117,114,101,100,32,97,116,116,114,
                105,98,117,116,101,32,116,104,97,116,32,99,111,110,115,105,
                115,116,115,32,111,102,32,97,32,116,117,112,108,101,46,32,84,
                104,101,32,102,105,114,115,116,32,101,108,101,109,101,110,116,
                32,111,102,32,116,104,101,32,116,117,112,108,101,32,105,100,
                101,110,116,105,102,105,101,115,32,97,32,99,111,114,114,105,
                100,111,114,44,32,97,110,100,32,116,104,101,32,115,101,99,111,
                110,100,32,101,108,101,109,101,110,116,32,105,100,101,110,116,
                105,102,105,101,115,32,116,104,101,32,114,111,111,109,32,105,
                110,32,116,104,97,116,32,99,111,114,114,105,100,111,114,46,32,
                65,110,32,97,108,116,101,114,110,97,116,105,118,101,32,105,
                115,32,116,111,32,114,101,112,114,101,115,101,110,116,32,116,
                104,105,115,32,97,115,32,97,32,114,101,99,111,114,100]}],
             0,false},
            {text,
             [28,42,45,114,101,99,111,114,100,40,114,111,111,109,44,32,123,99,
              111,114,114,44,32,110,111,125,41,46,42]},
            {sep,
             [{text,"-instead of an anonymous tuple representation."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\t*Company*"},
            {sep,
             [{text,".database is now initialized and contains data."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [18,35,35,32,87,114,105,116,105,110,103,32,81,117,101,114,105,101,
          115]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BRetrieving data from DBMS is usually to be done with the functions"}],
             0,false},
            {text," [mnesia:read/3](./mnesia#read/3)"},
            {sep,[{text,[2,111,114]}],0,false},
            {text," [mnesia:read/1](./mnesia#read/2)"},
            {sep,
             [{text,"+. The following function raises the salary:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [273,10,10,114,97,105,115,101,40,69,110,111,44,32,82,97,105,115,
              101,41,32,45,62,10,32,32,32,32,70,32,61,32,102,117,110,40,41,32,
              45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,69,
              93,32,61,32,109,110,101,115,105,97,58,114,101,97,100,40,101,109,
              112,108,111,121,101,101,44,32,69,110,111,44,32,119,114,105,116,
              101,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,83,
              97,108,97,114,121,32,61,32,69,35,101,109,112,108,111,121,101,
              101,46,115,97,108,97,114,121,32,43,32,82,97,105,115,101,44,10,
              32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,78,101,119,32,
              61,32,69,35,101,109,112,108,111,121,101,101,123,115,97,108,97,
              114,121,32,61,32,83,97,108,97,114,121,125,44,10,32,32,32,32,32,
              32,32,32,32,32,32,32,32,32,32,32,109,110,101,115,105,97,58,119,
              114,105,116,101,40,78,101,119,41,10,32,32,32,32,32,32,32,32,101,
              110,100,44,10,32,32,32,32,109,110,101,115,105,97,58,116,114,97,
              110,115,97,99,116,105,111,110,40,70,41,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ";Since it is desired to update the record using the function"}],
             0,false},
            {text,"\"[mnesia:write/1](./mnesia#write/1)"},
            {sep,
             [{text,
               "Dafter the salary has been increased, a write lock (third argument to"}],
             0,false},
            {text,[6,42,114,101,97,100,42]},
            {sep,
             [{text,"5) is acquired when the record from the table is read."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [257,84,111,32,114,101,97,100,32,116,104,101,32,118,97,108,117,
                101,115,32,102,114,111,109,32,116,104,101,32,116,97,98,108,
                101,32,100,105,114,101,99,116,108,121,32,105,115,32,110,111,
                116,32,97,108,119,97,121,115,32,112,111,115,115,105,98,108,
                101,46,32,73,116,32,99,97,110,32,98,101,32,110,101,101,100,
                101,100,32,116,111,32,115,101,97,114,99,104,32,111,110,101,32,
                111,114,32,109,111,114,101,32,116,97,98,108,101,115,32,116,
                111,32,103,101,116,32,116,104,101,32,119,97,110,116,101,100,
                32,100,97,116,97,44,32,97,110,100,32,116,104,105,115,32,105,
                115,32,100,111,110,101,32,98,121,32,119,114,105,116,105,110,
                103,32,100,97,116,97,98,97,115,101,32,113,117,101,114,105,101,
                115,46,32,81,117,101,114,105,101,115,32,97,114,101,32,97,108,
                119,97,121,115,32,109,111,114,101,32,101,120,112,101,110,115,
                105,118,101,32,111,112,101,114,97,116,105,111,110,115,32,116,
                104,97,110,32,100,105,114,101,99,116,32,108,111,111,107,117,
                112,115,32,100,111,110,101,32,119,105,116,104]}],
             0,false},
            {text,"\r*mnesia:read*"},
            {sep,
             [{text,
               "8. Therefore, avoid queries in performance-critical code."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"7Two methods are available for writing database queries:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"\b*Mnesia*"},{sep,[{text,"\tfunctions"}],0,false}],
         0,false}],
       0,false},
      {sep,[{text,[1,42]},{text,[3,81,76,67]}],0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [25,35,35,32,85,115,105,110,103,32,77,110,101,115,105,97,32,70,117,
            110,99,116,105,111,110,115]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "YThe following function extracts the names of the female employees stored in the database:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "W\nmnesia:select(employee, [{#employee{sex = female, name = '$1', _ = '_'},[], ['$1']}])."}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\b*select*"},
              {sep,
               [{text,
                 "|must always run within an activity, such as a transaction. The following function can be constructed to call from the shell:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "Ã\n\nall_females() ->\n    F = fun() ->\n\t\tFemale = #employee{sex = female, name = '$1', _ = '_'},\n\t\tmnesia:select(employee, [{Female, [], ['$1']}])\n        end,\n    mnesia:transaction(F)."}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[3,84,104,101]}],0,false},
              {text,"\b*select*"},
              {sep,
               [{text,
                 "?expression matches all entries in table employee with the field"}],
               0,false},
              {text,[5,42,115,101,120,42]},
              {sep,[{text,[6,115,101,116,32,116,111]}],0,false},
              {text,"\b*female*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "6This function can be called from the shell as follows:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [26,10,32,32,32,32,32,32,32,32,32,32,40,107,108,97,99,107,101,
                64,103,105,110,41,49,62,32]},
              {text,
               [22,99,111,109,112,97,110,121,58,97,108,108,95,102,101,109,97,
                108,101,115,40,41,46]},
              {text,
               "8\n          {atomic,  [\"Carlsson Tuula\", \"Fedoriw Anna\"]}"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [20,70,111,114,32,97,32,100,101,115,99,114,105,112,116,105,
                  111,110,32,111,102]}],
               0,false},
              {text,"\b*select*"},
              {sep,
               [{text,
                 [19,97,110,100,32,105,116,115,32,115,121,110,116,97,120,44,
                  32,115,101,101]}],
               0,false},
              {text,"+[Pattern Matching](./Mnesia_chap4#matching)"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\f## Using QLC"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "rThis section contains simple introductory examples only. For a full description of the QLC query language, see the"}],
               0,false},
              {text,"\f[qlc](./qlc)"},
              {sep,
               [{text,
                 [14,109,97,110,117,97,108,32,112,97,103,101,32,105,110]}],
               0,false},
              {text,"\b*STDLIB*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"*Using QLC can be more expensive than using"}],
               0,false},
              {text,"\b*Mnesia*"},
              {sep,
               [{text,",functions directly but offers a nice syntax."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "MThe following function extracts a list of female employees from the database:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [149,10,32,32,32,32,32,32,32,32,32,32,81,32,61,32,113,108,99,
                58,113,40,91,69,35,101,109,112,108,111,121,101,101,46,110,97,
                109,101,32,124,124,32,69,32,60,45,32,109,110,101,115,105,97,
                58,116,97,98,108,101,40,101,109,112,108,111,121,101,101,41,44,
                10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                32,32,32,32,32,32,32,32,32,32,32,32,32,69,35,101,109,112,108,
                111,121,101,101,46,115,101,120,32,61,61,32,102,101,109,97,108,
                101,93,41,44,10,32,32,32,32,32,32,32,32,32,32,113,108,99,58,
                101,40,81,41,44]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\tAccessing"}],0,false},
              {text,"\b*Mnesia*"},
              {sep,
               [{text,
                 "otables from a QLC list comprehension must always be done within a transaction. Consider the following function:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               "Ã¯\n\nfemales() ->\n    F = fun() ->\n\t\tQ = qlc:q([E#employee.name || E <- mnesia:table(employee),\n\t\t\t\t\t      E#employee.sex == female]),\n\t\tqlc:e(Q)\n\tend,\n    mnesia:transaction(F)."}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "6This function can be called from the shell as follows:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [26,10,32,32,32,32,32,32,32,32,32,32,40,107,108,97,99,107,101,
                64,103,105,110,41,49,62,32]},
              {text,
               [18,99,111,109,112,97,110,121,58,102,101,109,97,108,101,115,40,
                41,46]},
              {text,
               "7\n          {atomic, [\"Carlsson Tuula\", \"Fedoriw Anna\"]}"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "oIn traditional relational database terminology, this operation is called a selection, followed by a projection."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "UThe previous list comprehension expression contains a number of syntactical elements:"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,"\tThe first"}],0,false},
            {text,[3,42,91,42]},
            {sep,[{text,"$bracket is read as \"build the list\"."}],0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,[4,42,124,124,42]},
            {sep,
             [{text,
               [25,34,115,117,99,104,32,116,104,97,116,34,32,97,110,100,32,
                116,104,101,32,97,114,114,111,119]}],
             0,false},
            {text,[4,42,60,45,42]},
            {sep,
             [{text,
               [24,105,115,32,114,101,97,100,32,97,115,32,34,116,97,107,101,
                110,32,102,114,111,109,34,46]}],
             0,false}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "MHence, the previous list comprehension demonstrates the formation of the list"}],
               0,false},
              {text,
               [17,42,69,35,101,109,112,108,111,121,101,101,46,110,97,109,101,
                42]},
              {sep,[{text,"\tsuch that"}],0,false},
              {text,[3,42,69,42]},
              {sep,
               [{text,"3is taken from the table of employees, and attribute"}],
               0,false},
              {text,[5,42,115,101,120,42]},
              {sep,[{text,"#of each record is equal to the atom"}],0,false},
              {text,"\b*female*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 ":The whole list comprehension must be given to the function"}],
               0,false},
              {text,"\t*qlc:q/1*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\"List comprehensions with low-level"}],0,false},
              {text,"\b*Mnesia*"},
              {sep,
               [{text,
                 "vfunctions can be combined in the same transaction. To raise the salary of all female employees, execute the following:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [467,10,10,114,97,105,115,101,95,102,101,109,97,108,101,115,40,
                65,109,111,117,110,116,41,32,45,62,10,32,32,32,32,70,32,61,32,
                102,117,110,40,41,32,45,62,10,32,32,32,32,32,32,32,32,32,32,
                32,32,32,32,32,32,81,32,61,32,113,108,99,58,113,40,91,69,32,
                124,124,32,69,32,60,45,32,109,110,101,115,105,97,58,116,97,98,
                108,101,40,101,109,112,108,111,121,101,101,41,44,10,32,32,32,
                32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                32,32,32,32,32,32,32,32,32,69,35,101,109,112,108,111,121,101,
                101,46,115,101,120,32,61,61,32,102,101,109,97,108,101,93,41,
                44,10,9,9,70,115,32,61,32,113,108,99,58,101,40,81,41,44,10,32,
                32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,118,101,114,
                95,119,114,105,116,101,40,70,115,44,32,65,109,111,117,110,116,
                41,10,32,32,32,32,32,32,32,32,101,110,100,44,10,32,32,32,32,
                109,110,101,115,105,97,58,116,114,97,110,115,97,99,116,105,
                111,110,40,70,41,46,10,10,111,118,101,114,95,119,114,105,116,
                101,40,91,69,124,84,97,105,108,93,44,32,65,109,111,117,110,
                116,41,32,45,62,10,32,32,32,32,83,97,108,97,114,121,32,61,32,
                69,35,101,109,112,108,111,121,101,101,46,115,97,108,97,114,
                121,32,43,32,65,109,111,117,110,116,44,10,32,32,32,32,78,101,
                119,32,61,32,69,35,101,109,112,108,111,121,101,101,123,115,97,
                108,97,114,121,32,61,32,83,97,108,97,114,121,125,44,10,32,32,
                32,32,109,110,101,115,105,97,58,119,114,105,116,101,40,78,101,
                119,41,44,10,32,32,32,32,49,32,43,32,111,118,101,114,95,119,
                114,105,116,101,40,84,97,105,108,44,32,65,109,111,117,110,116,
                41,59,10,111,118,101,114,95,119,114,105,116,101,40,91,93,44,
                32,95,41,32,45,62,10,32,32,32,32,48,46]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\fThe function"}],0,false},
              {text,
               [17,42,114,97,105,115,101,95,102,101,109,97,108,101,115,47,49,
                42]},
              {sep,
               [{text,
                 [17,114,101,116,117,114,110,115,32,116,104,101,32,116,117,
                  112,108,101]}],
               0,false},
              {text,
               [18,42,123,97,116,111,109,105,99,44,32,78,117,109,98,101,114,
                125,42]},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,"\b*Number*"},
              {sep,
               [{text,
                 "_is the number of female employees who received a salary increase. If an error occurs, the value"}],
               0,false},
              {text,
               [19,42,123,97,98,111,114,116,101,100,44,32,82,101,97,115,111,
                110,125,42]},
              {sep,
               [{text,
                 [16,105,115,32,114,101,116,117,114,110,101,100,44,32,97,110,
                  100]}],
               0,false},
              {text,"\b*Mnesia*"},
              {sep,
               [{text,
                 ":guarantees that the salary is not raised for any employee."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[14,10,32,32,32,32,32,32,32,32,32,32,51,51,62]},
              {text,
               [26,99,111,109,112,97,110,121,58,114,97,105,115,101,95,102,101,
                109,97,108,101,115,40,51,51,41,46]},
              {text,
               [21,10,32,32,32,32,32,32,32,32,32,32,123,97,116,111,109,105,99,
                44,50,125]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}}],
      0,false}],
    0,false}],
  0,false}}
