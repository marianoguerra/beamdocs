{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [25,35,32,66,117,105,108,100,32,97,32,77,110,101,115,105,97,32,68,
           97,116,97,98,97,115,101]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7This section describes the basic steps when designing a"}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                [133,100,97,116,97,98,97,115,101,32,97,110,100,32,116,104,101,
                 32,112,114,111,103,114,97,109,109,105,110,103,32,99,111,110,
                 115,116,114,117,99,116,115,32,116,104,97,116,32,109,97,107,
                 101,32,100,105,102,102,101,114,101,110,116,32,115,111,108,
                 117,116,105,111,110,115,32,97,118,97,105,108,97,98,108,101,
                 32,116,111,32,116,104,101,32,112,114,111,103,114,97,109,109,
                 101,114,46,32,84,104,101,32,102,111,108,108,111,119,105,110,
                 103,32,116,111,112,105,99,115,32,97,114,101,32,105,110,99,
                 108,117,100,101,100,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}},
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {text,[15,68,101,102,105,110,101,32,97,32,115,99,104,101,109,97]}],
         0,false},
        {sep,[{text,[1,42]},{text,"\nData model"}],0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,[5,83,116,97,114,116]}],0,false},{text,"\b*Mnesia*"}],
          0,false}],
        0,false}},
      {sep,[{text,[1,42]},{text,"\rCreate tables"}],0,false}}},
    {sep,
     [{text,"#<a name=\"def_schema\">def_schema</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [18,35,35,32,68,101,102,105,110,101,32,97,32,83,99,104,101,109,97]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [22,84,104,101,32,99,111,110,102,105,103,117,114,97,116,105,
                 111,110,32,111,102,32,97]}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                "Ã´system is described in a schema. The schema is a special table that includes information such as the table names and the storage type of each table (that is, whether a table is to be stored in RAM, on disc, or on both, as well as its location)."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [147,85,110,108,105,107,101,32,100,97,116,97,32,116,97,98,108,
               101,115,44,32,105,110,102,111,114,109,97,116,105,111,110,32,
               105,110,32,115,99,104,101,109,97,32,116,97,98,108,101,115,32,
               99,97,110,32,111,110,108,121,32,98,101,32,97,99,99,101,115,115,
               101,100,32,97,110,100,32,109,111,100,105,102,105,101,100,32,98,
               121,32,117,115,105,110,103,32,116,104,101,32,115,99,104,101,
               109,97,45,114,101,108,97,116,101,100,32,102,117,110,99,116,105,
               111,110,115,32,100,101,115,99,114,105,98,101,100,32,105,110,32,
               116,104,105,115,32,115,101,99,116,105,111,110,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\b*Mnesia*"},
             {sep,
              [{text,
                [129,104,97,115,32,118,97,114,105,111,117,115,32,102,117,110,
                 99,116,105,111,110,115,32,102,111,114,32,100,101,102,105,110,
                 105,110,103,32,116,104,101,32,100,97,116,97,98,97,115,101,32,
                 115,99,104,101,109,97,46,32,84,97,98,108,101,115,32,99,97,
                 110,32,98,101,32,109,111,118,101,100,32,111,114,32,100,101,
                 108,101,116,101,100,44,32,97,110,100,32,116,104,101,32,116,
                 97,98,108,101,32,108,97,121,111,117,116,32,99,97,110,32,98,
                 101,32,114,101,99,111,110,102,105,103,117,114,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [291,65,110,32,105,109,112,111,114,116,97,110,116,32,97,115,112,
               101,99,116,32,111,102,32,116,104,101,115,101,32,102,117,110,99,
               116,105,111,110,115,32,105,115,32,116,104,97,116,32,116,104,
               101,32,115,121,115,116,101,109,32,99,97,110,32,97,99,99,101,
               115,115,32,97,32,116,97,98,108,101,32,119,104,105,108,101,32,
               105,116,32,105,115,32,98,101,105,110,103,32,114,101,99,111,110,
               102,105,103,117,114,101,100,46,32,70,111,114,32,101,120,97,109,
               112,108,101,44,32,105,116,32,105,115,32,112,111,115,115,105,98,
               108,101,32,116,111,32,109,111,118,101,32,97,32,116,97,98,108,
               101,32,97,110,100,32,115,105,109,117,108,116,97,110,101,111,
               117,115,108,121,32,112,101,114,102,111,114,109,32,119,114,105,
               116,101,32,111,112,101,114,97,116,105,111,110,115,32,116,111,
               32,116,104,101,32,115,97,109,101,32,116,97,98,108,101,46,32,84,
               104,105,115,32,102,101,97,116,117,114,101,32,105,115,32,101,
               115,115,101,110,116,105,97,108,32,102,111,114,32,97,112,112,
               108,105,99,97,116,105,111,110,115,32,116,104,97,116,32,114,101,
               113,117,105,114,101,32,99,111,110,116,105,110,117,111,117,115,
               32,115,101,114,118,105,99,101,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "vThis section describes the functions available for schema management, all which return either of the following tuples:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[14,42,123,97,116,111,109,105,99,44,32,111,107,125,42]},
           {sep,[{text,"\rif successful"}],0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [19,42,123,97,98,111,114,116,101,100,44,32,82,101,97,115,111,110,
             125,42]},
           {sep,
            [{text,
              [15,105,102,32,117,110,115,117,99,99,101,115,115,102,117,108]}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [19,35,35,32,83,99,104,101,109,97,32,70,117,110,99,116,105,111,
             110,115]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"$The schema functions are as follows:"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     ":[mnesia:create_schema(NodeList)](./mnesia#create_schema/1)"},
                    {sep,
                     [{text,
                       "Ginitializes a new, empty schema. This is a mandatory requirement before"}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       [15,99,97,110,32,98,101,32,115,116,97,114,116,101,100,
                        46]}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       "ais a truly distributed DBMS and the schema is a system table that is replicated on all nodes in a"}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       "Qsystem. This function fails if a schema is already present on any of the nodes in"}],
                     0,false},
                    {text,"\n*NodeList*"},
                    {sep,
                     [{text,
                       [23,46,32,84,104,101,32,102,117,110,99,116,105,111,110,
                        32,114,101,113,117,105,114,101,115]}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       [24,116,111,32,98,101,32,115,116,111,112,112,101,100,
                        32,111,110,32,116,104,101,32,97,108,108]}],
                     0,false},
                    {text,"\n*db_nodes*"},
                    {sep,
                     [{text,
                       [22,99,111,110,116,97,105,110,101,100,32,105,110,32,
                        112,97,114,97,109,101,116,101,114]}],
                     0,false},
                    {text,"\n*NodeList*"},
                    {sep,
                     [{text,
                       "o. Applications call this function only once, as it is usually a one-time activity to initialize a new database."}],
                     0,false}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     ">[mnesia:delete_schema(DiscNodeList)](./mnesia#delete_schema/1)"},
                    {sep,
                     [{text,"&erases any old schemas on the nodes in"}],
                     0,false},
                    {text,
                     [14,42,68,105,115,99,78,111,100,101,76,105,115,116,42]},
                    {sep,
                     [{text,
                       "O. It also removes all old tables together with all data. This function requires"}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       [20,116,111,32,98,101,32,115,116,111,112,112,101,100,
                        32,111,110,32,97,108,108]}],
                     0,false},
                    {text,"\n*db_nodes*"},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    "3[mnesia:delete_table(Tab)](./mnesia#delete_table/1)"},
                   {sep,
                    [{text,")permanently deletes all replicas of table"}],
                    0,false},
                   {text,[5,42,84,97,98,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"1[mnesia:clear_table(Tab)](./mnesia#clear_table/1)"},
                  {sep,
                   [{text,"(permanently deletes all entries in table"}],
                   0,false},
                  {text,[5,42,84,97,98,42]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  "C[mnesia:move_table_copy(Tab, From, To)](./mnesia#move_table_copy/3)"},
                 {sep,
                  [{text,
                    [23,109,111,118,101,115,32,116,104,101,32,99,111,112,121,
                     32,111,102,32,116,97,98,108,101]}],
                  0,false},
                 {text,[5,42,84,97,98,42]},
                 {sep,[{text,"\tfrom node"}],0,false},
                 {text,[6,42,70,114,111,109,42]},
                 {sep,[{text,[7,116,111,32,110,111,100,101]}],0,false},
                 {text,[4,42,84,111,42]},
                 {sep,
                  [{text,
                    [24,46,32,84,104,101,32,116,97,98,108,101,32,115,116,111,
                     114,97,103,101,32,116,121,112,101]}],
                  0,false},
                 {text,"\b*{type}*"},
                 {sep,
                  [{text,
                    "Ãis preserved, so if a RAM table is moved from one node to another, it remains a RAM table on the new node. Other transactions can still perform read and write operation to the table while it is being moved."}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 "C[mnesia:add_table_copy(Tab, Node, Type)](./mnesia#add_table_copy/3)"},
                {sep,
                 [{text,
                   [26,99,114,101,97,116,101,115,32,97,32,114,101,112,108,105,
                    99,97,32,111,102,32,116,97,98,108,101]}],
                 0,false},
                {text,[5,42,84,97,98,42]},
                {sep,[{text,[7,97,116,32,110,111,100,101]}],0,false},
                {text,[6,42,78,111,100,101,42]},
                {sep,[{text,"\n. Argument"}],0,false},
                {text,[6,42,84,121,112,101,42]},
                {sep,[{text,"\emust be either of the atoms"}],0,false},
                {text,"\f*ram_copies*"},
                {sep,[{text,[1,44]}],0,false},
                {text,"\r*disc_copies*"},
                {sep,[{text,[4,44,32,111,114]}],0,false},
                {text,
                 [18,42,100,105,115,99,95,111,110,108,121,95,99,111,112,105,
                  101,115,42]},
                {sep,
                 [{text,"'. If you add a copy of the system table"}],
                 0,false},
                {text,"\b*schema*"},
                {sep,
                 [{text,
                   [23,116,111,32,97,32,110,111,100,101,44,32,121,111,117,32,
                    119,97,110,116,32,116,104,101]}],
                 0,false},
                {text,"\b*Mnesia*"},
                {sep,
                 [{text,
                   "bschema to reside there as well. This action extends the set of nodes that comprise this particular"}],
                 0,false},
                {text,"\b*Mnesia*"},
                {sep,[{text,[7,115,121,115,116,101,109,46]}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "=[mnesia:del_table_copy(Tab, Node)](./mnesia#del_table_copy/2)"},
               {sep,
                [{text,
                  [28,100,101,108,101,116,101,115,32,116,104,101,32,114,101,
                   112,108,105,99,97,32,111,102,32,116,97,98,108,101]}],
                0,false},
               {text,[5,42,84,97,98,42]},
               {sep,[{text,[7,97,116,32,110,111,100,101]}],0,false},
               {text,[6,42,78,111,100,101,42]},
               {sep,
                [{text,
                  "D. When the last replica of a table is removed, the table is deleted."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "_[mnesia:transform_table(Tab, Fun, NewAttributeList, NewRecordName)](./mnesia#transform_table/4)"},
                     {sep,
                      [{text,"*changes the format on all records in table"}],
                      0,false},
                     {text,[5,42,84,97,98,42]},
                     {sep,
                      [{text,
                        [21,46,32,73,116,32,97,112,112,108,105,101,115,32,97,
                         114,103,117,109,101,110,116]}],
                      0,false},
                     {text,[5,42,70,117,110,42]},
                     {sep,
                      [{text,
                        [28,116,111,32,97,108,108,32,114,101,99,111,114,100,
                         115,32,105,110,32,116,104,101,32,116,97,98,108,101,
                         46]}],
                      0,false},
                     {text,[5,42,70,117,110,42]},
                     {sep,
                      [{text,
                        [130,109,117,115,116,32,98,101,32,97,32,102,117,110,
                         99,116,105,111,110,32,116,104,97,116,32,116,97,107,
                         101,115,32,97,32,114,101,99,111,114,100,32,111,102,
                         32,116,104,101,32,111,108,100,32,116,121,112,101,44,
                         32,97,110,100,32,114,101,116,117,114,110,115,32,116,
                         104,101,32,114,101,99,111,114,100,32,111,102,32,116,
                         104,101,32,110,101,119,32,116,121,112,101,46,32,84,
                         104,101,32,116,97,98,108,101,32,107,101,121,32,109,
                         117,115,116,32,110,111,116,32,98,101,32,99,104,97,
                         110,103,101,100,46]}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,
                      [359,10,45,114,101,99,111,114,100,40,111,108,100,44,32,
                       123,107,101,121,44,32,118,97,108,125,41,46,10,45,114,
                       101,99,111,114,100,40,110,101,119,44,32,123,107,101,
                       121,44,32,118,97,108,44,32,101,120,116,114,97,125,41,
                       46,10,10,84,114,97,110,115,102,111,114,109,101,114,32,
                       61,10,32,32,32,102,117,110,40,88,41,32,119,104,101,110,
                       32,114,101,99,111,114,100,40,88,44,32,111,108,100,41,
                       32,45,62,10,32,32,32,32,32,32,35,110,101,119,123,107,
                       101,121,32,61,32,88,35,111,108,100,46,107,101,121,44,
                       10,32,32,32,32,32,32,32,32,32,32,32,118,97,108,32,61,
                       32,88,35,111,108,100,46,118,97,108,44,10,32,32,32,32,
                       32,32,32,32,32,32,32,101,120,116,114,97,32,61,32,52,50,
                       125,10,32,32,32,101,110,100,44,10,123,97,116,111,109,
                       105,99,44,32,111,107,125,32,61,32,109,110,101,115,105,
                       97,58,116,114,97,110,115,102,111,114,109,95,116,97,98,
                       108,101,40,102,111,111,44,32,84,114,97,110,115,102,111,
                       114,109,101,114,44,10,32,32,32,32,32,32,32,32,32,32,32,
                       32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                       32,32,32,32,32,32,32,32,32,114,101,99,111,114,100,95,
                       105,110,102,111,40,102,105,101,108,100,115,44,32,110,
                       101,119,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
                       32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                       32,32,32,32,32,32,32,32,110,101,119,41,44,10]}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,[{text,"\bArgument"}],0,false},
                     {text,[5,42,70,117,110,42]},
                     {sep,
                      [{text,
                        [20,99,97,110,32,97,108,115,111,32,98,101,32,116,104,
                         101,32,97,116,111,109]}],
                      0,false},
                     {text,"\b*ignore*"},
                     {sep,
                      [{text,
                        "K, which indicates that only the metadata about the table is updated. Use of"}],
                      0,false},
                     {text,"\b*ignore*"},
                     {sep,
                      [{text,
                        "Â®is not recommended (as it creates inconsistencies between the metadata and the actual data) but it is included as a possibility for the user do to an own (offline) transform."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"+*change_table_copy_type(Tab, Node, ToType)*"},
             {sep,
              [{text,
                "Mchanges the storage type of a table. For example, a RAM table is changed to a"}],
              0,false},
             {text,"\f*disc_table*"},
             {sep,
              [{text,
                [24,97,116,32,116,104,101,32,110,111,100,101,32,115,112,101,
                 99,105,102,105,101,100,32,97,115]}],
              0,false},
             {text,[6,42,78,111,100,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r## Data Model"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [26,84,104,101,32,100,97,116,97,32,109,111,100,101,108,32,101,
                109,112,108,111,121,101,100,32,98,121]}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,
               [274,105,115,32,97,110,32,101,120,116,101,110,100,101,100,32,
                114,101,108,97,116,105,111,110,97,108,32,100,97,116,97,32,109,
                111,100,101,108,46,32,68,97,116,97,32,105,115,32,111,114,103,
                97,110,105,122,101,100,32,97,115,32,97,32,115,101,116,32,111,
                102,32,116,97,98,108,101,115,32,97,110,100,32,114,101,108,97,
                116,105,111,110,115,32,98,101,116,119,101,101,110,32,100,105,
                102,102,101,114,101,110,116,32,100,97,116,97,32,114,101,99,
                111,114,100,115,32,99,97,110,32,98,101,32,109,111,100,101,108,
                101,100,32,97,115,32,109,111,114,101,32,116,97,98,108,101,115,
                32,100,101,115,99,114,105,98,105,110,103,32,116,104,101,32,
                114,101,108,97,116,105,111,110,115,104,105,112,115,46,32,69,
                97,99,104,32,116,97,98,108,101,32,99,111,110,116,97,105,110,
                115,32,105,110,115,116,97,110,99,101,115,32,111,102,32,69,114,
                108,97,110,103,32,114,101,99,111,114,100,115,46,32,84,104,101,
                32,114,101,99,111,114,100,115,32,97,114,101,32,114,101,112,
                114,101,115,101,110,116,101,100,32,97,115,32,69,114,108,97,
                110,103,32,116,117,112,108,101,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [129,69,97,99,104,32,79,98,106,101,99,116,32,73,100,101,110,
                116,105,102,105,101,114,32,40,79,73,68,41,32,105,115,32,109,
                97,100,101,32,117,112,32,111,102,32,97,32,116,97,98,108,101,
                32,110,97,109,101,32,97,110,100,32,97,32,107,101,121,46,32,70,
                111,114,32,101,120,97,109,112,108,101,44,32,105,102,32,97,110,
                32,101,109,112,108,111,121,101,101,32,114,101,99,111,114,100,
                32,105,115,32,114,101,112,114,101,115,101,110,116,101,100,32,
                98,121,32,116,104,101,32,116,117,112,108,101]}],
             0,false},
            {text,"8*{employee, 104732, klacke, 7, male, 98108, {221, 015}}*"},
            {sep,
             [{text,",, this record has an OID, which is the tuple"}],
             0,false},
            {text,
             [20,42,123,101,109,112,108,111,121,101,101,44,32,49,48,52,55,51,
              50,125,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "Ã¶Thus, each table is made up of records, where the first element is a record name and the second element of the table is a key, which identifies the particular record in that table. The combination of the table name and a key is an arity two tuple"}],
             0,false},
            {text,"\f*{Tab, Key}*"},
            {sep,
             [{text,
               "jcalled the OID. For more information about the relationship beween the record name and the table name, see"}],
             0,false},
            {text,
             "H[Record Names versus Table Names](./Mnesia_chap4#recordnames_tablenames)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,[14,87,104,97,116,32,109,97,107,101,115,32,116,104,101]}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,
               [288,100,97,116,97,32,109,111,100,101,108,32,97,110,32,101,120,
                116,101,110,100,101,100,32,114,101,108,97,116,105,111,110,97,
                108,32,109,111,100,101,108,32,105,115,32,116,104,101,32,97,98,
                105,108,105,116,121,32,116,111,32,115,116,111,114,101,32,97,
                114,98,105,116,114,97,114,121,32,69,114,108,97,110,103,32,116,
                101,114,109,115,32,105,110,32,116,104,101,32,97,116,116,114,
                105,98,117,116,101,32,102,105,101,108,100,115,46,32,79,110,
                101,32,97,116,116,114,105,98,117,116,101,32,118,97,108,117,
                101,32,99,97,110,44,32,102,111,114,32,101,120,97,109,112,108,
                101,44,32,98,101,32,97,32,119,104,111,108,101,32,116,114,101,
                101,32,111,102,32,79,73,68,115,32,108,101,97,100,105,110,103,
                32,116,111,32,111,116,104,101,114,32,116,101,114,109,115,32,
                105,110,32,111,116,104,101,114,32,116,97,98,108,101,115,46,32,
                84,104,105,115,32,116,121,112,101,32,111,102,32,114,101,99,
                111,114,100,32,105,115,32,100,105,102,102,105,99,117,108,116,
                32,116,111,32,109,111,100,101,108,32,105,110,32,116,114,97,
                100,105,116,105,111,110,97,108,32,114,101,108,97,116,105,111,
                110,97,108,32,68,66,77,83,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{text,"'<a name=\"start_mnesia\">start_mnesia</a>"},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,35,32,83,116,97,114,116,32,77,110,101,115,105,97]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [15,66,101,102,111,114,101,32,115,116,97,114,116,105,110,103]}],
            0,false},
           {text,"\b*Mnesia*"},
           {sep,
            [{text,
              [29,44,32,116,104,101,32,102,111,108,108,111,119,105,110,103,32,
               109,117,115,116,32,98,101,32,100,111,110,101,58]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {text,
         "CAn empty schema must be initialized on all the participating nodes."}],
       0,false},
      {sep,
       [{text,[1,42]},{text,"\"The Erlang system must be started."}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{text,
            "QNodes with disc database schema must be defined and implemented with the function"}],
          0,false},
         {text,":[mnesia:create_schema(NodeList)](./mnesia#create_schema/1)"},
         {sep,[{text,[1,46]}],0,false}],
        0,false}],
      0,false}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "TWhen running a distributed system with two or more participating nodes, the function"}],
            0,false},
           {text,"\"[mnesia:start()](./mnesia#start/0)"},
           {sep,
            [{text,
              "Â­must be executed on each participating node. This would typically be part of the boot script in an embedded environment. In a test environment or an interactive environment,"}],
            0,false},
           {text,
            [16,42,109,110,101,115,105,97,58,115,116,97,114,116,40,41,42]},
           {sep,
            [{text,
              "Acan also be used either from the Erlang shell or another program."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{text,"'## Initialize a Schema and Start Mnesia"},null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [31,76,101,116,32,117,115,32,117,115,101,32,116,104,101,32,
                 101,120,97,109,112,108,101,32,100,97,116,97,98,97,115,101]}],
              0,false},
             {text,"\t*Company*"},
             {sep,
              [{text,[14,44,32,100,101,115,99,114,105,98,101,100,32,105,110]}],
              0,false},
             {text,"1[Getting Started](./Mnesia_chap2#getting_started)"},
             {sep,
              [{text,
                "Ato illustrate how to run a database on two separate nodes, called"}],
              0,false},
             {text,[7,42,97,64,103,105,110,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\v*b@skeppet*"},
             {sep,[{text,"!. Each of these nodes must have a"}],0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,"*directory and an initialized schema before"}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,"1can be started. There are two ways to specify the"}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                [21,100,105,114,101,99,116,111,114,121,32,116,111,32,98,101,
                 32,117,115,101,100,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,"\vSpecify the"}],0,false},
                  {text,"\b*Mnesia*"},
                  {sep,
                   [{text,
                     "Â¾directory by providing an application parameter either when starting the Erlang shell or in the application script. Previously, the following example was used to create the directory for the"}],
                   0,false},
                  {text,"\t*Company*"},
                  {sep,[{text,"\tdatabase:"}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,[2,10,37]},
                  {text,
                   "1erl -mnesia dir '\"/ldisc/scratch/Mnesia.Company\"'"},
                  {text,"\v\n          "}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,"'If no command-line flag is entered, the"}],0,false},
           {text,"\b*Mnesia*"},
           {sep,
            [{text,
              "^directory becomes the current working directory on the node where the Erlang shell is started."}],
            0,false}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\fTo start the"}],0,false},
             {text,"\t*Company*"},
             {sep,
              [{text,
                "Udatabase and get it running on the two specified nodes, enter the following commands:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,[{text,"\vOn the node"}],0,false},
                     {text,[7,42,97,64,103,105,110,42]},
                     {sep,[{text,[1,58]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,[7,10,32,103,105,110,32,37]},
                     {text,
                      ";erl -sname a  -mnesia dir '\"/ldisc/scratch/Mnesia.company\"'"}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,[{text,"\vOn the node"}],0,false},
                     {text,"\v*b@skeppet*"},
                     {sep,[{text,[1,58]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,"\n\nskeppet %"},
                     {text,
                      ":erl -sname b -mnesia dir '\"/ldisc/scratch/Mnesia.company\"'"}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [24,79,110,32,111,110,101,32,111,102,32,116,104,101,32,
                      116,119,111,32,110,111,100,101,115,58]}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {above,
                 {above,
                  {text,[3,96,96,96]},
                  {sep,
                   [{text,"\n\n(a@gin)1>"},
                    {text,")mnesia:create_schema([a@gin, b@skeppet])."}],
                   0,true}},
                 {text,[3,96,96,96]}},
                null},
               null}}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,"\fThe function"}],0,false},
            {text,"\"[mnesia:start()](./mnesia#start/0)"},
            {sep,
             [{text,
               [24,105,115,32,99,97,108,108,101,100,32,111,110,32,98,111,116,
                104,32,110,111,100,101,115,46]}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "OTo initialize the database, execute the following code on one of the two nodes:"}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,
                   [1172,10,10,10,100,105,115,116,95,105,110,105,116,40,41,32,
                    45,62,10,32,32,32,32,109,110,101,115,105,97,58,99,114,101,
                    97,116,101,95,116,97,98,108,101,40,101,109,112,108,111,
                    121,101,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,91,123,114,97,109,95,
                    99,111,112,105,101,115,44,32,91,97,64,103,105,110,44,32,
                    98,64,115,107,101,112,112,101,116,93,125,44,10,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,123,97,116,116,114,105,98,117,116,101,115,44,
                    32,114,101,99,111,114,100,95,105,110,102,111,40,102,105,
                    101,108,100,115,44,10,9,9,9,9,9,9,32,32,32,101,109,112,
                    108,111,121,101,101,41,125,93,41,44,10,32,32,32,32,109,
                    110,101,115,105,97,58,99,114,101,97,116,101,95,116,97,98,
                    108,101,40,100,101,112,116,44,10,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,123,
                    114,97,109,95,99,111,112,105,101,115,44,32,91,97,64,103,
                    105,110,44,32,98,64,115,107,101,112,112,101,116,93,125,44,
                    10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,123,97,116,116,114,105,98,117,116,
                    101,115,44,32,114,101,99,111,114,100,95,105,110,102,111,
                    40,102,105,101,108,100,115,44,32,100,101,112,116,41,125,
                    93,41,44,10,32,32,32,32,109,110,101,115,105,97,58,99,114,
                    101,97,116,101,95,116,97,98,108,101,40,112,114,111,106,
                    101,99,116,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,91,123,114,97,109,95,
                    99,111,112,105,101,115,44,32,91,97,64,103,105,110,44,32,
                    98,64,115,107,101,112,112,101,116,93,125,44,10,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,123,97,116,116,114,105,98,117,116,101,115,44,
                    32,114,101,99,111,114,100,95,105,110,102,111,40,102,105,
                    101,108,100,115,44,32,112,114,111,106,101,99,116,41,125,
                    93,41,44,10,32,32,32,32,109,110,101,115,105,97,58,99,114,
                    101,97,116,101,95,116,97,98,108,101,40,109,97,110,97,103,
                    101,114,44,32,91,123,116,121,112,101,44,32,98,97,103,125,
                    44,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,
                    114,97,109,95,99,111,112,105,101,115,44,32,91,97,64,103,
                    105,110,44,32,98,64,115,107,101,112,112,101,116,93,125,44,
                    10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,123,97,
                    116,116,114,105,98,117,116,101,115,44,32,114,101,99,111,
                    114,100,95,105,110,102,111,40,102,105,101,108,100,115,44,
                    10,9,9,9,9,9,9,9,32,32,32,109,97,110,97,103,101,114,41,
                    125,93,41,44,10,32,32,32,32,109,110,101,115,105,97,58,99,
                    114,101,97,116,101,95,116,97,98,108,101,40,97,116,95,100,
                    101,112,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,91,123,114,97,109,95,99,
                    111,112,105,101,115,44,32,91,97,64,103,105,110,44,32,98,
                    64,115,107,101,112,112,101,116,93,125,44,10,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,123,97,116,116,114,105,98,117,116,101,115,44,32,
                    114,101,99,111,114,100,95,105,110,102,111,40,102,105,101,
                    108,100,115,44,32,97,116,95,100,101,112,41,125,93,41,44,
                    10,32,32,32,32,109,110,101,115,105,97,58,99,114,101,97,
                    116,101,95,116,97,98,108,101,40,105,110,95,112,114,111,
                    106,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,91,123,116,121,112,101,44,32,98,
                    97,103,125,44,32,10,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,123,114,97,109,95,
                    99,111,112,105,101,115,44,32,91,97,64,103,105,110,44,32,
                    98,64,115,107,101,112,112,101,116,93,125,44,10,32,32,32,
                    32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                    32,32,32,123,97,116,116,114,105,98,117,116,101,115,44,32,
                    114,101,99,111,114,100,95,105,110,102,111,40,102,105,101,
                    108,100,115,44,32,105,110,95,112,114,111,106,41,125,93,41,
                    46]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}}],
          0,false}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "FAs illustrated, the two directories reside on different nodes, because"}],
              0,false},
             {text,
              [16,42,47,108,100,105,115,99,47,115,99,114,97,116,99,104,42]},
             {sep,
              [{text,
                "5(the \"local\" disc) exists on the two different nodes."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GBy executing these commands, two Erlang nodes are configured to run the"}],
              0,false},
             {text,"\t*Company*"},
             {sep,
              [{text,
                [130,100,97,116,97,98,97,115,101,44,32,97,110,100,32,116,104,
                 101,114,101,102,111,114,101,44,32,105,110,105,116,105,97,108,
                 105,122,101,32,116,104,101,32,100,97,116,97,98,97,115,101,46,
                 32,84,104,105,115,32,105,115,32,114,101,113,117,105,114,101,
                 100,32,111,110,108,121,32,111,110,99,101,32,119,104,101,110,
                 32,115,101,116,116,105,110,103,32,117,112,46,32,84,104,101,
                 32,110,101,120,116,32,116,105,109,101,32,116,104,101,32,115,
                 121,115,116,101,109,32,105,115,32,115,116,97,114,116,101,100,
                 44]}],
              0,false},
             {text,"\"[mnesia:start()](./mnesia#start/0)"},
             {sep,
              [{text,
                "<is called on both nodes, to initialize the system from disc."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,[14,73,110,32,97,32,115,121,115,116,101,109,32,111,102]}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                "Ã©nodes, every node is aware of the current location of all tables. In this example, data is replicated on both nodes and functions that manipulate the data in the tables can be executed on either of the two nodes. Code that manipulate"}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                ">data behaves identically regardless of where the data resides."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\fThe function"}],0,false},
             {text," [mnesia:stop()](./mnesia#stop/0)"},
             {sep,[{text,[5,115,116,111,112,115]}],0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                "9on the node where the function is executed. The functions"}],
              0,false},
             {text,
              [16,42,109,110,101,115,105,97,58,115,116,97,114,116,47,48,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[15,42,109,110,101,115,105,97,58,115,116,111,112,47,48,42]},
             {sep,
              [{text,
                [19,119,111,114,107,32,111,110,32,116,104,101,32,34,108,111,
                 99,97,108,34]}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,"2system. No functions start or stop a set of nodes."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [20,35,35,32,83,116,97,114,116,117,112,32,80,114,111,99,101,100,117,
           114,101]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[5,83,116,97,114,116]}],0,false},
             {text,"\b*Mnesia*"},
             {sep,[{text,"\"by calling the following function:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [26,10,32,32,32,32,32,32,32,32,32,32,109,110,101,115,105,97,58,
               115,116,97,114,116,40,41,46]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,")This function initiates the DBMS locally."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "nThe choice of configuration alters the location and load order of the tables. The alternatives are as follows:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               "BTables that are only stored locally are initialized from the local"}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,[{text,"\ndirectory."}],0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{text,
               "ÃReplicated tables that reside locally as well as somewhere else are either initiated from disc or by copying the entire table from the other node, depending on which of the different replicas are the most recent."}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,
             [{text,"3determines which of the tables are the most recent."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {text,
          "[Tables that reside on remote nodes are available to other nodes as soon as they are loaded."}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7Table initialization is asynchronous. The function call"}],
              0,false},
             {text,"\"[mnesia:start()](./mnesia#start/0)"},
             {sep,
              [{text,
                [16,114,101,116,117,114,110,115,32,116,104,101,32,97,116,111,
                 109]}],
              0,false},
             {text,[4,42,111,107,42]},
             {sep,
              [{text,
                [262,97,110,100,32,116,104,101,110,32,115,116,97,114,116,115,
                 32,116,111,32,105,110,105,116,105,97,108,105,122,101,32,116,
                 104,101,32,100,105,102,102,101,114,101,110,116,32,116,97,98,
                 108,101,115,46,32,68,101,112,101,110,100,105,110,103,32,111,
                 110,32,116,104,101,32,115,105,122,101,32,111,102,32,116,104,
                 101,32,100,97,116,97,98,97,115,101,44,32,116,104,105,115,32,
                 99,97,110,32,116,97,107,101,32,115,111,109,101,32,116,105,
                 109,101,44,32,97,110,100,32,116,104,101,32,97,112,112,108,
                 105,99,97,116,105,111,110,32,112,114,111,103,114,97,109,109,
                 101,114,32,109,117,115,116,32,119,97,105,116,32,102,111,114,
                 32,116,104,101,32,116,97,98,108,101,115,32,116,104,97,116,32,
                 116,104,101,32,97,112,112,108,105,99,97,116,105,111,110,32,
                 110,101,101,100,115,32,98,101,102,111,114,101,32,116,104,101,
                 121,32,99,97,110,32,98,101,32,117,115,101,100,46,32,84,104,
                 105,115,32,105,115,32,97,99,104,105,101,118,101,100,32,98,
                 121,32,117,115,105,110,103,32,116,104,101,32,102,117,110,99,
                 116,105,111,110]}],
              0,false},
             {text,
              "F[mnesia:wait_for_tables(TabList, Timeout)](./mnesia#wait_for_tables/2)"},
             {sep,
              [{text,
                "9, which suspends the caller until all tables specified in"}],
              0,false},
             {text,"\t*TabList*"},
             {sep,
              [{text,
                [23,97,114,101,32,112,114,111,112,101,114,108,121,32,105,110,
                 105,116,105,97,116,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GA problem can arise if a replicated table on one node is initiated, but"}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                "Â±deduces that another (remote) replica is more recent than the replica existing on the local node, and the initialization procedure does not proceed. In this situation, a call to"}],
              0,false},
             {text,"6[mnesia:wait_for_tables/2](./mnesia#wait_for_tables/2)"},
             {sep,
              [{text,
                [159,44,32,115,117,115,112,101,110,100,115,32,116,104,101,32,
                 99,97,108,108,101,114,32,117,110,116,105,108,32,116,104,101,
                 32,114,101,109,111,116,101,32,110,111,100,101,32,104,97,115,
                 32,105,110,105,116,105,97,108,105,122,101,100,32,116,104,101,
                 32,116,97,98,108,101,32,102,114,111,109,32,105,116,115,32,
                 108,111,99,97,108,32,100,105,115,99,32,97,110,100,32,116,104,
                 101,32,110,111,100,101,32,104,97,115,32,99,111,112,105,101,
                 100,32,116,104,101,32,116,97,98,108,101,32,111,118,101,114,
                 32,116,104,101,32,110,101,116,119,111,114,107,32,116,111,32,
                 116,104,101,32,108,111,99,97,108,32,110,111,100,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "DHowever, this procedure can be time-consuming, the shortcut function"}],
              0,false},
             {text,
              ";[mnesia:force_load_table(Tab)](./mnesia#force_load_table/1)"},
             {sep,
              [{text,
                [135,108,111,97,100,115,32,97,108,108,32,116,104,101,32,116,
                 97,98,108,101,115,32,102,114,111,109,32,100,105,115,99,32,97,
                 116,32,97,32,102,97,115,116,101,114,32,114,97,116,101,46,32,
                 84,104,101,32,102,117,110,99,116,105,111,110,32,102,111,114,
                 99,101,115,32,116,97,98,108,101,115,32,116,111,32,98,101,32,
                 108,111,97,100,101,100,32,102,114,111,109,32,100,105,115,99,
                 32,114,101,103,97,114,100,108,101,115,115,32,111,102,32,116,
                 104,101,32,110,101,116,119,111,114,107,32,115,105,116,117,97,
                 116,105,111,110,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "BThus, it can be assumed that if an application wants to use tables"}],
              0,false},
             {text,[3,42,97,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[3,42,98,42]},
             {sep,
              [{text,
                "], the application must perform some action similar to following before it can use the tables:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              "Â¼\n          case mnesia:wait_for_tables([a, b], 20000) of\n            {timeout,   RemainingTabs} ->\n              panic(RemainingTabs);\n            ok ->\n              synced\n          end."}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,
            [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
             105,110,103,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "Ã°When tables are forcefully loaded from the local disc, all operations that were performed on the replicated table while the local node was down, and the remote replica was alive, are lost. This can cause the database to become inconsistent."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,",If the startup procedure fails, the function"}],
              0,false},
             {text,"\"[mnesia:start()](./mnesia#start/0)"},
             {sep,
              [{text,
                [25,114,101,116,117,114,110,115,32,116,104,101,32,99,114,121,
                 112,116,105,99,32,116,117,112,108,101]}],
              0,false},
             {text,
              "9*{error,{shutdown, {mnesia_sup,start_link,[normal,[]]}}}*"},
             {sep,
              [{text,
                "M. To get more information about the start failure, use command-line arguments"}],
              0,false},
             {text,
              [18,42,45,98,111,111,116,32,115,116,97,114,116,95,115,97,115,
               108,42]},
             {sep,
              [{text,
                [18,97,115,32,97,114,103,117,109,101,110,116,32,116,111,32,
                 116,104,101]}],
              0,false},
             {text,[5,42,101,114,108,42]},
             {sep,[{text,[7,115,99,114,105,112,116,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{text,")<a name=\"create_tables\">create_tables</a>"},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,67,114,101,97,116,101,32,84,97,98,108,101,115]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\fThe function"}],0,false},
          {text,
           "=[mnesia:create_table(Name, ArgList)](./mnesia#create_table/2)"},
          {sep,
           [{text,
             "Xcreates tables. When executing this function, it returns one of the following responses:"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,42,123,97,116,111,109,105,99,44,32,111,107,125,42]},
        {sep,[{text,"%if the function executes successfully"}],0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,42,123,97,98,111,114,116,101,100,44,32,82,101,97,115,111,110,125,
          42]},
        {sep,
         [{text,
           [21,105,102,32,116,104,101,32,102,117,110,99,116,105,111,110,32,
            102,97,105,108,115]}],
         0,false}],
       0,false}],
     0,false}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"&The function arguments are as follows:"}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[6,42,78,97,109,101,42]},
        {sep,
         [{text,
           "|is the name of the table. It is usually the same name as the name of the records that constitute the table. For details, see"}],
         0,false},
        {text,"\r*record_name*"},
        {sep,[{text,[1,46]}],0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\t*ArgList*"},
               {sep,[{text,"\fis a list of"}],0,false},
               {text,"\r*{Key,Value}*"},
               {sep,
                [{text,"*tuples. The following arguments are valid:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            [14,42,123,116,121,112,101,44,32,84,121,112,101,
                             125,42]},
                           {sep,
                            [{text,[7,44,32,119,104,101,114,101]}],
                            0,false},
                           {text,[6,42,84,121,112,101,42]},
                           {sep,
                            [{text,"\emust be either of the atoms"}],
                            0,false},
                           {text,[5,42,115,101,116,42]},
                           {sep,[{text,[1,44]}],0,false},
                           {text,"\r*ordered_set*"},
                           {sep,[{text,[4,44,32,111,114]}],0,false},
                           {text,[5,42,98,97,103,42]},
                           {sep,[{text,"\f. Default is"}],0,false},
                           {text,[5,42,115,101,116,42]},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [21,78,111,116,105,99,101,32,116,104,97,116,32,
                               99,117,114,114,101,110,116,108,121]}],
                            0,false},
                           {text,"\r*ordered_set*"},
                           {sep,
                            [{text,
                              [20,105,115,32,110,111,116,32,115,117,112,112,
                               111,114,116,101,100,32,102,111,114]}],
                            0,false},
                           {text,
                            [18,42,100,105,115,99,95,111,110,108,121,95,99,
                             111,112,105,101,115,42]},
                           {sep,
                            [{text,[7,116,97,98,108,101,115,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [15,65,32,116,97,98,108,101,32,111,102,32,116,
                               121,112,101]}],
                            0,false},
                           {text,[5,42,115,101,116,42]},
                           {sep,[{text,[2,111,114]}],0,false},
                           {text,"\r*ordered_set*"},
                           {sep,
                            [{text,
                              ">has either zero or one record per key, whereas a table of type"}],
                            0,false},
                           {text,[5,42,98,97,103,42]},
                           {sep,
                            [{text,
                              "ucan have an arbitrary number of records per key. The key for each record is always the first attribute of the record."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "=The following example illustrates the difference between type"}],
                            0,false},
                           {text,[5,42,115,101,116,42]},
                           {sep,[{text,[3,97,110,100]}],0,false},
                           {text,[5,42,98,97,103,42]},
                           {sep,[{text,[1,58]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {above,
                        {above,
                         {text,[3,96,96,96]},
                         {sep,
                          [{text,
                            "Â«\n f() ->\n    F = fun() ->\n          mnesia:write({foo, 1, 2}),\n          mnesia:write({foo, 1, 3}),\n          mnesia:read({foo, 1})\n        end,\n    mnesia:transaction(F)."}],
                          0,true}},
                        {text,[3,96,96,96]}},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,"!This transaction returns the list"}],
                            0,false},
                           {text,"\r*[{foo,1,3}]*"},
                           {sep,[{text,"\bif table"}],0,false},
                           {text,[5,42,102,111,111,42]},
                           {sep,[{text,"\nis of type"}],0,false},
                           {text,[5,42,115,101,116,42]},
                           {sep,
                            [{text,
                              [19,46,32,72,111,119,101,118,101,114,44,32,116,
                               104,101,32,108,105,115,116]}],
                            0,false},
                           {text,
                            [24,42,91,123,102,111,111,44,49,44,50,125,44,32,
                             123,102,111,111,44,49,44,51,125,93,42]},
                           {sep,
                            [{text,"#is returned if the table is of type"}],
                            0,false},
                           {text,[5,42,98,97,103,42]},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,"\b*Mnesia*"},
                           {sep,
                            [{text,
                              [139,116,97,98,108,101,115,32,99,97,110,32,110,
                               101,118,101,114,32,99,111,110,116,97,105,110,
                               32,100,117,112,108,105,99,97,116,101,115,32,
                               111,102,32,116,104,101,32,115,97,109,101,32,
                               114,101,99,111,114,100,32,105,110,32,116,104,
                               101,32,115,97,109,101,32,116,97,98,108,101,46,
                               32,68,117,112,108,105,99,97,116,101,32,114,101,
                               99,111,114,100,115,32,104,97,118,101,32,97,116,
                               116,114,105,98,117,116,101,115,32,119,105,116,
                               104,32,116,104,101,32,115,97,109,101,32,99,111,
                               110,116,101,110,116,115,32,97,110,100,32,107,
                               101,121,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            [25,42,123,100,105,115,99,95,99,111,112,105,101,
                             115,44,32,78,111,100,101,76,105,115,116,125,42]},
                           {sep,
                            [{text,[7,44,32,119,104,101,114,101]}],
                            0,false},
                           {text,"\n*NodeList*"},
                           {sep,
                            [{text,
                              "=is a list of the nodes where this table is to reside on disc."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "+Write operations to a table replica of type"}],
                            0,false},
                           {text,"\r*disc_copies*"},
                           {sep,
                            [{text,
                              "=write data to the disc copy and to the RAM copy of the table."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "1It is possible to have a replicated table of type"}],
                            0,false},
                           {text,"\r*disc_copies*"},
                           {sep,
                            [{text,
                              "Von one node, and the same table stored as a different type on another node. Default is"}],
                            0,false},
                           {text,[4,42,91,93,42]},
                           {sep,
                            [{text,
                              "Z. This arrangement is desirable if the following operational characteristics are required:"}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {sep,
                      [{text,[1,42]},
                       {text,
                        "2Read operations must be fast and performed in RAM."}],
                      0,false},
                     {sep,
                      [{text,[1,42]},
                       {text,
                        ";All write operations must be written to persistent storage."}],
                      0,false}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [22,65,32,119,114,105,116,101,32,111,112,101,
                               114,97,116,105,111,110,32,111,110,32,97]}],
                            0,false},
                           {text,"\r*disc_copies*"},
                           {sep,
                            [{text,
                              [140,116,97,98,108,101,32,114,101,112,108,105,
                               99,97,32,105,115,32,112,101,114,102,111,114,
                               109,101,100,32,105,110,32,116,119,111,32,115,
                               116,101,112,115,46,32,70,105,114,115,116,32,
                               116,104,101,32,119,114,105,116,101,32,111,112,
                               101,114,97,116,105,111,110,32,105,115,32,97,
                               112,112,101,110,100,101,100,32,116,111,32,97,
                               32,108,111,103,32,102,105,108,101,44,32,116,
                               104,101,110,32,116,104,101,32,97,99,116,117,97,
                               108,32,111,112,101,114,97,116,105,111,110,32,
                               105,115,32,112,101,114,102,111,114,109,101,100,
                               32,105,110,32,82,65,77,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [24,42,123,114,97,109,95,99,111,112,105,101,115,44,
                            32,78,111,100,101,76,105,115,116,125,42]},
                          {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                          {text,"\n*NodeList*"},
                          {sep,
                           [{text,
                             "Dis a list of the nodes where this table is stored in RAM. Default is"}],
                           0,false},
                          {text,"\n*[node()]*"},
                          {sep,
                           [{text,
                             "W. If the default value is used to create a table, it is located on the local node only."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             [22,84,97,98,108,101,32,114,101,112,108,105,99,
                              97,115,32,111,102,32,116,121,112,101]}],
                           0,false},
                          {text,"\f*ram_copies*"},
                          {sep,
                           [{text,"'can be dumped to disc with the function"}],
                           0,false},
                          {text,
                           "5[mnesia:dump_tables(TabList)](./mnesia#dump_tables/1)"},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [30,42,123,100,105,115,99,95,111,110,108,121,95,99,111,112,
                    105,101,115,44,32,78,111,100,101,76,105,115,116,125,42]},
                  {sep,
                   [{text,
                     "Â¹. These table replicas are stored on disc only and are therefore slower to access. However, a disc-only replica consumes less memory than a table replica of the other two storage types."}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [28,42,123,105,110,100,101,120,44,32,65,116,116,114,
                          105,98,117,116,101,78,97,109,101,76,105,115,116,125,
                          42]},
                        {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
                        {text,
                         [19,42,65,116,116,114,105,98,117,116,101,78,97,109,
                          101,76,105,115,116,42]},
                        {sep,
                         [{text,
                           "9is a list of atoms specifying the names of the attributes"}],
                         0,false},
                        {text,"\b*Mnesia*"},
                        {sep,
                         [{text,
                           "cis to build and maintain. An index table exists for every element in the list. The first field of a"}],
                         0,false},
                        {text,"\b*Mnesia*"},
                        {sep,
                         [{text,
                           "/record is the key and thus need no extra index."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "jThe first field of a record is the second element of the tuple, which is the representation of the record."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [20,42,123,115,110,109,112,44,32,83,110,109,112,83,
                         116,114,117,99,116,125,42]},
                       {sep,[{text,[1,46]}],0,false},
                       {text,"\f*SnmpStruct*"},
                       {sep,
                        [{text,
                          [19,105,115,32,100,101,115,99,114,105,98,101,100,32,
                           105,110,32,116,104,101]}],
                        0,false},
                       {text,
                        [15,91,83,78,77,80,93,40,46,47,105,110,100,101,120,
                         41]},
                       {sep,
                        [{text,
                          "8User's Guide. Basically, if this attribute is present in"}],
                        0,false},
                       {text,"\t*ArgList*"},
                       {sep,[{text,[2,111,102]}],0,false},
                       {text,
                        "0[mnesia:create_table/2](./mnesia#create_table/2)"},
                       {sep,
                        [{text,
                          "/, the table is immediately accessible the SNMP."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "UIt is easy to design applications that use SNMP to manipulate and control the system."}],
                        0,false},
                       {text,"\b*Mnesia*"},
                       {sep,
                        [{text,
                          [131,112,114,111,118,105,100,101,115,32,97,32,100,
                           105,114,101,99,116,32,109,97,112,112,105,110,103,
                           32,98,101,116,119,101,101,110,32,116,104,101,32,
                           108,111,103,105,99,97,108,32,116,97,98,108,101,115,
                           32,116,104,97,116,32,109,97,107,101,32,117,112,32,
                           97,110,32,83,78,77,80,32,99,111,110,116,114,111,
                           108,32,97,112,112,108,105,99,97,116,105,111,110,32,
                           97,110,100,32,116,104,101,32,112,104,121,115,105,
                           99,97,108,32,100,97,116,97,32,116,104,97,116,32,
                           109,97,107,101,115,32,117,112,32,97]}],
                        0,false},
                       {text,"\b*Mnesia*"},
                       {sep,[{text,"\etable. The default value is"}],0,false},
                       {text,[4,42,91,93,42]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [23,42,123,108,111,99,97,108,95,99,111,110,116,101,110,116,44,
                 32,116,114,117,101,125,42]},
               {sep,
                [{text,
                  "X. When an application needs a table whose contents is to be locally unique on each node,"}],
                0,false},
               {text,
                [15,42,108,111,99,97,108,95,99,111,110,116,101,110,116,42]},
               {sep,
                [{text,
                  "9tables can be used. The name of the table is known to all"}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  "cnodes, but its contents is unique for each node. Access to this type of table must be done locally."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      [24,42,123,97,116,116,114,105,98,117,116,101,115,44,32,
                       65,116,111,109,76,105,115,116,125,42]},
                     {sep,
                      [{text,
                        "mis a list of the attribute names for the records that are supposed to populate the table. Default is the list"}],
                      0,false},
                     {text,"\f*[key, val]*"},
                     {sep,
                      [{text,
                        "Ã. The table must at least have one extra attribute besides the key. When accessing single attributes in a record, it is not recommended to hard code the attribute names as atoms. Use the construct"}],
                      0,false},
                     {text,"\"*record_info(fields, record_name)*"},
                     {sep,[{text,"\binstead."}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [14,84,104,101,32,101,120,112,114,101,115,115,105,111,
                         110]}],
                      0,false},
                     {text,"\"*record_info(fields, record_name)*"},
                     {sep,
                      [{text,
                        "pis processed by the Erlang preprocessor and returns a list of the record field names. With the record definition"}],
                      0,false},
                     {text,
                      [24,42,45,114,101,99,111,114,100,40,102,111,111,44,32,
                       123,120,44,121,44,122,125,41,46,42]},
                     {sep,
                      [{text,
                        [16,44,32,116,104,101,32,101,120,112,114,101,115,115,
                         105,111,110]}],
                      0,false},
                     {text,
                      [25,42,114,101,99,111,114,100,95,105,110,102,111,40,102,
                       105,101,108,100,115,44,102,111,111,41,42]},
                     {sep,
                      [{text,
                        [23,105,115,32,101,120,112,97,110,100,101,100,32,116,
                         111,32,116,104,101,32,108,105,115,116]}],
                      0,false},
                     {text,"\t*[x,y,z]*"},
                     {sep,
                      [{text,
                        "O. It is therefore possible for you to provide the attribute names or to use the"}],
                      0,false},
                     {text,
                      [15,42,114,101,99,111,114,100,95,105,110,102,111,47,50,
                       42]},
                     {sep,[{text,"\tnotation."}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [28,73,116,32,105,115,32,114,101,99,111,109,109,101,
                         110,100,101,100,32,116,111,32,117,115,101,32,116,104,
                         101]}],
                      0,false},
                     {text,
                      [15,42,114,101,99,111,114,100,95,105,110,102,111,47,50,
                       42]},
                     {sep,
                      [{text,
                        [129,110,111,116,97,116,105,111,110,44,32,97,115,32,
                         105,116,32,98,101,99,111,109,101,115,32,101,97,115,
                         105,101,114,32,116,111,32,109,97,105,110,116,97,105,
                         110,32,116,104,101,32,112,114,111,103,114,97,109,32,
                         97,110,100,32,116,104,101,32,112,114,111,103,114,97,
                         109,32,98,101,99,111,109,101,115,32,109,111,114,101,
                         32,114,111,98,117,115,116,32,119,105,116,104,32,114,
                         101,103,97,114,100,115,32,116,111,32,102,117,116,117,
                         114,101,32,114,101,99,111,114,100,32,99,104,97,110,
                         103,101,115,46]}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [21,42,123,114,101,99,111,114,100,95,110,97,109,101,44,32,65,
               116,111,109,125,42]},
             {sep,
              [{text,
                [137,115,112,101,99,105,102,105,101,115,32,116,104,101,32,99,
                 111,109,109,111,110,32,110,97,109,101,32,111,102,32,97,108,
                 108,32,114,101,99,111,114,100,115,32,115,116,111,114,101,100,
                 32,105,110,32,116,104,101,32,116,97,98,108,101,46,32,65,108,
                 108,32,114,101,99,111,114,100,115,32,115,116,111,114,101,100,
                 32,105,110,32,116,104,101,32,116,97,98,108,101,32,109,117,
                 115,116,32,104,97,118,101,32,116,104,105,115,32,110,97,109,
                 101,32,97,115,32,116,104,101,105,114,32,102,105,114,115,116,
                 32,101,108,101,109,101,110,116,46]}],
              0,false},
             {text,"\r*record_name*"},
             {sep,
              [{text,
                "<defaults to the name of the table. For more information, see"}],
              0,false},
             {text,
              "H[Record Names versus Table Names](./Mnesia_chap4#recordnames_tablenames)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}}],
       0,false}],
     0,false}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"8As an example, consider the following record definition:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           [30,10,32,32,32,32,32,32,45,114,101,99,111,114,100,40,102,117,110,
            107,121,44,32,123,120,44,32,121,125,41,46]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "hThe following call would create a table that is replicated on two nodes, has an extra index on attribute"}],
           0,false},
          {text,[3,42,121,42]},
          {sep,
           [{text,
             [16,44,32,97,110,100,32,105,115,32,111,102,32,116,121,112,101]}],
           0,false},
          {text,[5,42,98,97,103,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           [136,10,32,32,32,32,32,32,109,110,101,115,105,97,58,99,114,101,97,
            116,101,95,116,97,98,108,101,40,102,117,110,107,121,44,32,91,123,
            100,105,115,99,95,99,111,112,105,101,115,44,32,91,78,49,44,32,78,
            50,93,125,44,32,123,105,110,100,101,120,44,10,32,32,32,32,32,32,
            91,121,93,125,44,32,123,116,121,112,101,44,32,98,97,103,125,44,32,
            123,97,116,116,114,105,98,117,116,101,115,44,32,114,101,99,111,
            114,100,95,105,110,102,111,40,102,105,101,108,100,115,44,32,102,
            117,110,107,121,41,125,93,41,46]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "Â¦Whereas a call to the following default code values would return a table with a RAM copy on the local node, no extra indexes, and the attributes defaulted to the list"}],
           0,false},
          {text,"\v*[key,val]*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           [31,10,109,110,101,115,105,97,58,99,114,101,97,116,101,95,116,97,
            98,108,101,40,115,116,117,102,102,44,32,91,93,41]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}}],
  0,false}}
