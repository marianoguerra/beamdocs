{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {text,
                 [31,35,32,77,105,115,99,101,108,108,97,110,101,111,117,115,
                  32,77,110,101,115,105,97,32,70,101,97,116,117,114,101,115]},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "6The previous sections describe how to get started with"}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       [18,97,110,100,32,104,111,119,32,116,111,32,98,117,105,
                        108,100,32,97]}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       "qdatabase. This section describes the more advanced features available when building a distributed, fault-tolerant"}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,",database. The following topics are included:"}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}}},
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {sep,[{text,[1,42]},{text,"\bIndexing"}],0,false},
                      {sep,
                       [{text,[1,42]},
                        {text," Distribution and fault tolerance"}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {text,
                        [19,84,97,98,108,101,32,102,114,97,103,109,101,110,
                         116,97,116,105,111,110]}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {text,
                       [20,76,111,99,97,108,32,99,111,110,116,101,110,116,32,
                        116,97,98,108,101,115]}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {text,
                      [15,68,105,115,99,45,108,101,115,115,32,110,111,100,101,
                       115]}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {text,
                     [28,77,111,114,101,32,97,98,111,117,116,32,115,99,104,
                      101,109,97,32,109,97,110,97,103,101,109,101,110,116]}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,"\b*Mnesia*"},
                     {sep,
                      [{text,
                        [14,101,118,101,110,116,32,104,97,110,100,108,105,110,
                         103]}],
                      0,false}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,[{text,"\tDebugging"}],0,false},
                    {text,"\b*Mnesia*"},
                    {sep,[{text,"\fapplications"}],0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,
                    [{text,
                      [23,67,111,110,99,117,114,114,101,110,116,32,112,114,
                       111,99,101,115,115,101,115,32,105,110]}],
                    0,false},
                   {text,"\b*Mnesia*"}],
                  0,false}],
                0,false}},
              {sep,[{text,[1,42]},{text,"\vPrototyping"}],0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,
                    [29,79,98,106,101,99,116,45,98,97,115,101,100,32,112,114,
                     111,103,114,97,109,109,105,110,103,32,119,105,116,104]}],
                  0,false},
                 {text,"\b*Mnesia*"}],
                0,false}],
              0,false}}},
           {sep,
            [{text,
              [31,60,97,32,110,97,109,101,61,34,105,110,100,101,120,105,110,
               103,34,62,105,110,100,101,120,105,110,103,60,47,97,62]},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,{above,{text,"\v## Indexing"},null},null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "ÃºData retrieval and matching can be performed efficiently if the key for the record is known. Conversely, if the key is unknown, all records in a table must be searched. The larger the table, the more time consuming it becomes. To remedy this problem,"}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       "Qindexing capabilities are used to improve data retrieval and matching of records."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     "BThe following two functions manipulate indexes on existing tables:"}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {sep,
               [{text,[1,42]},
                {text,
                 "f[mnesia:add_table_index(Tab, AttributeName) -> {aborted, R} |{atomic, ok}](./mnesia#add_table_index/2)"}],
               0,false},
              {sep,
               [{text,[1,42]},
                {text,
                 "f[mnesia:del_table_index(Tab, AttributeName) -> {aborted, R} |{atomic, ok}](./mnesia#del_table_index/2)"}],
               0,false}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "DThese functions create or delete a table index on a field defined by"}],
                     0,false},
                    {text,
                     [15,42,65,116,116,114,105,98,117,116,101,78,97,109,101,
                      42]},
                    {sep,
                     [{text,
                       ":. To illustrate this, add an index to the table definition"}],
                     0,false},
                    {text,
                     "9*(employee, {emp_no, name, salary, sex, phone, room_no})*"},
                    {sep,
                     [{text,"%, which is the example table from the"}],
                     0,false},
                    {text,"\t*Company*"},
                    {sep,
                     [{text,
                       "4database. The function that adds an index on element"}],
                     0,false},
                    {text,"\b*salary*"},
                    {sep,
                     [{text,
                       [19,99,97,110,32,98,101,32,101,120,112,114,101,115,115,
                        101,100,32,97,115]}],
                     0,false},
                    {text,"**mnesia:add_table_index(employee, salary)*"},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [28,84,104,101,32,105,110,100,101,120,105,110,103,32,
                        99,97,112,97,98,105,108,105,116,105,101,115,32,111,
                        102]}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       "uare used with the following three functions, which retrieve and match records based on index entries in the database:"}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    "n[mnesia:index_read(Tab, SecondaryKey, AttributeName) -> transaction abort | RecordList](./mnesia#index_read/3)"},
                   {sep,
                    [{text,
                      ">avoids an exhaustive search of the entire table, by looking up"}],
                    0,false},
                   {text,
                    [14,42,83,101,99,111,110,100,97,114,121,75,101,121,42]},
                   {sep,
                    [{text,"&in the index to find the primary keys."}],
                    0,false}],
                  0,false}],
                0,false},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    "t[mnesia:index_match_object(Pattern, AttributeName) -> transaction abort | RecordList](./mnesia#index_match_object/2)"},
                   {sep,
                    [{text,
                      [155,97,118,111,105,100,115,32,97,110,32,101,120,104,97,
                       117,115,116,105,118,101,32,115,101,97,114,99,104,32,
                       111,102,32,116,104,101,32,101,110,116,105,114,101,32,
                       116,97,98,108,101,44,32,98,121,32,108,111,111,107,105,
                       110,103,32,117,112,32,116,104,101,32,115,101,99,111,
                       110,100,97,114,121,32,107,101,121,32,105,110,32,116,
                       104,101,32,105,110,100,101,120,32,116,111,32,102,105,
                       110,100,32,116,104,101,32,112,114,105,109,97,114,121,
                       32,107,101,121,115,46,32,84,104,101,32,115,101,99,111,
                       110,100,97,114,121,32,107,101,121,32,105,115,32,102,
                       111,117,110,100,32,105,110,32,102,105,101,108,100]}],
                    0,false},
                   {text,
                    [15,42,65,116,116,114,105,98,117,116,101,78,97,109,101,
                     42]},
                   {sep,[{text,[2,111,102]}],0,false},
                   {text,"\t*Pattern*"},
                   {sep,
                    [{text,"\". The secondary key must be bound."}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   "Y[mnesia:match_object(Pattern) -> transaction abort | RecordList](./mnesia#match_object/1)"},
                  {sep,
                   [{text,
                     "Â¢uses indexes to avoid exhaustive search of the entire table. Unlike the previous functions, this function can use any index as long as the secondary key is bound."}],
                   0,false}],
                 0,false}],
               0,false}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "8These functions are further described and exemplified in"}],
                     0,false},
                    {text,"+[Pattern Matching](./Mnesia_chap4#matching)"},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,{text,"### Distribution and Fault Tolerance"},null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,"\b*Mnesia*"},
                   {sep,
                    [{text,
                      "nis a distributed, fault-tolerant DBMS. Tables can be replicated on different Erlang nodes in various ways. The"}],
                    0,false},
                   {text,"\b*Mnesia*"},
                   {sep,
                    [{text,
                      "Ãªprogrammer does not need to state where the different tables reside, only the names of the different tables need to be specified in the program code. This is known as \"location transparency\" and is an important concept. In particular:"}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {sep,
              [{text,[1,42]},
               {sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [135,65,32,112,114,111,103,114,97,109,32,119,111,114,
                          107,115,32,114,101,103,97,114,100,108,101,115,115,
                          32,111,102,32,116,104,101,32,100,97,116,97,32,108,
                          111,99,97,116,105,111,110,46,32,73,116,32,109,97,
                          107,101,115,32,110,111,32,100,105,102,102,101,114,
                          101,110,99,101,32,119,104,101,116,104,101,114,32,
                          116,104,101,32,100,97,116,97,32,114,101,115,105,100,
                          101,115,32,111,110,32,116,104,101,32,108,111,99,97,
                          108,32,110,111,100,101,32,111,114,32,111,110,32,97,
                          32,114,101,109,111,116,101,32,110,111,100,101,46]}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         "LNotice that the program runs slower if the data is located on a remote node."}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,false},
             {sep,
              [{text,[1,42]},
               {text,
                "zThe database can be reconfigured, and tables can be moved between nodes. These operations do not affect the user programs."}],
              0,false}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "WIt has previously been shown that each table has a number of system attributes, such as"}],
                    0,false},
                   {text,[7,42,105,110,100,101,120,42]},
                   {sep,[{text,[3,97,110,100]}],0,false},
                   {text,[6,42,116,121,112,101,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    [132,84,97,98,108,101,32,97,116,116,114,105,98,117,116,
                     101,115,32,97,114,101,32,115,112,101,99,105,102,105,101,
                     100,32,119,104,101,110,32,116,104,101,32,116,97,98,108,
                     101,32,105,115,32,99,114,101,97,116,101,100,46,32,70,111,
                     114,32,101,120,97,109,112,108,101,44,32,116,104,101,32,
                     102,111,108,108,111,119,105,110,103,32,102,117,110,99,
                     116,105,111,110,32,99,114,101,97,116,101,115,32,97,32,
                     116,97,98,108,101,32,119,105,116,104,32,116,119,111,32,
                     82,65,77,32,114,101,112,108,105,99,97,115,58]}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {above,
                {above,
                 {text,[3,96,96,96]},
                 {sep,
                  [{text,
                    [151,10,32,32,32,32,32,32,109,110,101,115,105,97,58,99,
                     114,101,97,116,101,95,116,97,98,108,101,40,102,111,111,
                     44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                     32,32,32,32,32,32,32,32,32,91,123,114,97,109,95,99,111,
                     112,105,101,115,44,32,91,78,49,44,32,78,50,93,125,44,10,
                     32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                     32,32,32,32,32,32,32,32,123,97,116,116,114,105,98,117,
                     116,101,115,44,32,114,101,99,111,114,100,95,105,110,102,
                     111,40,102,105,101,108,100,115,44,32,102,111,111,41,125,
                     93,41,46]}],
                  0,true}},
                {text,[3,96,96,96]}},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "lTables can also have the following properties, where each attribute has a list of Erlang nodes as its value:"}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,"\f*ram_copies*"},
                         {sep,
                          [{text,
                            "x. The value of the node list is a list of Erlang nodes, and a RAM replica of the table resides on each node in the list."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "ÃNotice that no disc operations are performed when a program executes write operations to these replicas. However, if permanent RAM replicas are required, the following alternatives are available:"}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{sep,[{text,"\fThe function"}],0,false},
                       {text,
                        ".[mnesia:dump_tables/1](./mnesia#dump_tables/1)"},
                       {sep,
                        [{text,
                          "/can be used to dump RAM table replicas to disc."}],
                        0,false}],
                      0,false}],
                    0,false},
                   {sep,
                    [{text,[1,42]},
                     {text,
                      "fThe table replicas can be backed up, either from RAM, or from disc if dumped there with this function."}],
                    0,false}}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"\r*disc_copies*"},
                  {sep,
                   [{text,
                     "Ã©. The value of the attribute is a list of Erlang nodes, and a replica of the table resides both in RAM and on disc on each node in the list. Write operations addressed to the table address both the RAM and the disc copy of the table."}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [18,42,100,105,115,99,95,111,110,108,121,95,99,111,112,105,
                   101,115,42]},
                 {sep,
                  [{text,
                    [281,46,32,84,104,101,32,118,97,108,117,101,32,111,102,32,
                     116,104,101,32,97,116,116,114,105,98,117,116,101,32,105,
                     115,32,97,32,108,105,115,116,32,111,102,32,69,114,108,97,
                     110,103,32,110,111,100,101,115,44,32,97,110,100,32,97,32,
                     114,101,112,108,105,99,97,32,111,102,32,116,104,101,32,
                     116,97,98,108,101,32,114,101,115,105,100,101,115,32,111,
                     110,108,121,32,97,115,32,97,32,100,105,115,99,32,99,111,
                     112,121,32,111,110,32,101,97,99,104,32,110,111,100,101,
                     32,105,110,32,116,104,101,32,108,105,115,116,46,32,84,
                     104,101,32,109,97,106,111,114,32,100,105,115,97,100,118,
                     97,110,116,97,103,101,32,111,102,32,116,104,105,115,32,
                     116,121,112,101,32,111,102,32,116,97,98,108,101,32,114,
                     101,112,108,105,99,97,32,105,115,32,116,104,101,32,97,99,
                     99,101,115,115,32,115,112,101,101,100,46,32,84,104,101,
                     32,109,97,106,111,114,32,97,100,118,97,110,116,97,103,
                     101,32,105,115,32,116,104,97,116,32,116,104,101,32,116,
                     97,98,108,101,32,100,111,101,115,32,110,111,116,32,111,
                     99,99,117,112,121,32,115,112,97,99,101,32,105,110,32,109,
                     101,109,111,114,121,46]}],
                  0,false}],
                0,false}],
              0,false}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "FIn addition, table properties can be set and changed. For details, see"}],
                    0,false},
                   {text,",[Define a Schema](./Mnesia_chap3#def_schema)"},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "Â¹There are basically two reasons for using more than one table replica: fault tolerance and speed. Notice that table replication provides a solution to both of these system requirements."}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    [418,73,102,32,116,104,101,114,101,32,97,114,101,32,116,
                     119,111,32,97,99,116,105,118,101,32,116,97,98,108,101,32,
                     114,101,112,108,105,99,97,115,44,32,97,108,108,32,105,
                     110,102,111,114,109,97,116,105,111,110,32,105,115,32,115,
                     116,105,108,108,32,97,118,97,105,108,97,98,108,101,32,
                     105,102,32,111,110,101,32,114,101,112,108,105,99,97,32,
                     102,97,105,108,115,46,32,84,104,105,115,32,99,97,110,32,
                     98,101,32,97,110,32,105,109,112,111,114,116,97,110,116,
                     32,112,114,111,112,101,114,116,121,32,105,110,32,109,97,
                     110,121,32,97,112,112,108,105,99,97,116,105,111,110,115,
                     46,32,70,117,114,116,104,101,114,109,111,114,101,44,32,
                     105,102,32,97,32,116,97,98,108,101,32,114,101,112,108,
                     105,99,97,32,101,120,105,115,116,115,32,97,116,32,116,
                     119,111,32,115,112,101,99,105,102,105,99,32,110,111,100,
                     101,115,44,32,97,112,112,108,105,99,97,116,105,111,110,
                     115,32,116,104,97,116,32,101,120,101,99,117,116,101,32,
                     97,116,32,101,105,116,104,101,114,32,111,102,32,116,104,
                     101,115,101,32,110,111,100,101,115,32,99,97,110,32,114,
                     101,97,100,32,100,97,116,97,32,102,114,111,109,32,116,
                     104,101,32,116,97,98,108,101,32,119,105,116,104,111,117,
                     116,32,97,99,99,101,115,115,105,110,103,32,116,104,101,
                     32,110,101,116,119,111,114,107,46,32,78,101,116,119,111,
                     114,107,32,111,112,101,114,97,116,105,111,110,115,32,97,
                     114,101,32,99,111,110,115,105,100,101,114,97,98,108,121,
                     32,115,108,111,119,101,114,32,97,110,100,32,99,111,110,
                     115,117,109,101,32,109,111,114,101,32,114,101,115,111,
                     117,114,99,101,115,32,116,104,97,110,32,108,111,99,97,
                     108,32,111,112,101,114,97,116,105,111,110,115,46]}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    [518,73,116,32,99,97,110,32,98,101,32,97,100,118,97,110,
                     116,97,103,101,111,117,115,32,116,111,32,99,114,101,97,
                     116,101,32,116,97,98,108,101,32,114,101,112,108,105,99,
                     97,115,32,102,111,114,32,97,32,100,105,115,116,114,105,
                     98,117,116,101,100,32,97,112,112,108,105,99,97,116,105,
                     111,110,32,116,104,97,116,32,114,101,97,100,115,32,100,
                     97,116,97,32,111,102,116,101,110,44,32,98,117,116,32,119,
                     114,105,116,101,115,32,100,97,116,97,32,115,101,108,100,
                     111,109,44,32,116,111,32,97,99,104,105,101,118,101,32,
                     102,97,115,116,32,114,101,97,100,32,111,112,101,114,97,
                     116,105,111,110,115,32,111,110,32,116,104,101,32,108,111,
                     99,97,108,32,110,111,100,101,46,32,84,104,101,32,109,97,
                     106,111,114,32,100,105,115,97,100,118,97,110,116,97,103,
                     101,32,119,105,116,104,32,114,101,112,108,105,99,97,116,
                     105,111,110,32,105,115,32,116,104,101,32,105,110,99,114,
                     101,97,115,101,100,32,116,105,109,101,32,116,111,32,119,
                     114,105,116,101,32,100,97,116,97,46,32,73,102,32,97,32,
                     116,97,98,108,101,32,104,97,115,32,116,119,111,32,114,
                     101,112,108,105,99,97,115,44,32,101,118,101,114,121,32,
                     119,114,105,116,101,32,111,112,101,114,97,116,105,111,
                     110,32,109,117,115,116,32,97,99,99,101,115,115,32,98,111,
                     116,104,32,116,97,98,108,101,32,114,101,112,108,105,99,
                     97,115,46,32,83,105,110,99,101,32,111,110,101,32,111,102,
                     32,116,104,101,115,101,32,119,114,105,116,101,32,111,112,
                     101,114,97,116,105,111,110,115,32,109,117,115,116,32,98,
                     101,32,97,32,110,101,116,119,111,114,107,32,111,112,101,
                     114,97,116,105,111,110,44,32,105,116,32,105,115,32,99,
                     111,110,115,105,100,101,114,97,98,108,121,32,109,111,114,
                     101,32,101,120,112,101,110,115,105,118,101,32,116,111,32,
                     112,101,114,102,111,114,109,32,97,32,119,114,105,116,101,
                     32,111,112,101,114,97,116,105,111,110,32,116,111,32,97,
                     32,114,101,112,108,105,99,97,116,101,100,32,116,97,98,
                     108,101,32,116,104,97,110,32,116,111,32,97,32,110,111,
                     110,45,114,101,112,108,105,99,97,116,101,100,32,116,97,
                     98,108,101,46]}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {text,
               [22,35,35,32,84,97,98,108,101,32,70,114,97,103,109,101,110,116,
                97,116,105,111,110]},
              null},
             null}},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,{above,{text,"\n## Concept"},null},null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "Â½A concept of table fragmentation has been introduced to cope with large tables. The idea is to split a table into several manageable fragments. Each fragment is implemented as a first class"}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       "dtable and can be replicated, have indexes, and so on, as any other table. But the tables cannot have"}],
                     0,false},
                    {text,
                     [15,42,108,111,99,97,108,95,99,111,110,116,101,110,116,
                      42]},
                    {sep,[{text,"\vor have the"}],0,false},
                    {text,[6,42,115,110,109,112,42]},
                    {sep,
                     [{text,
                       [21,99,111,110,110,101,99,116,105,111,110,32,97,99,116,
                        105,118,97,116,101,100,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "4To be able to access a record in a fragmented table,"}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       "Rmust determine to which fragment the actual record belongs. This is done by module"}],
                     0,false},
                    {text,"\r*mnesia_frag*"},
                    {sep,
                     [{text,
                       [22,44,32,119,104,105,99,104,32,105,109,112,108,101,
                        109,101,110,116,115,32,116,104,101]}],
                     0,false},
                    {text,
                     [15,42,109,110,101,115,105,97,95,97,99,99,101,115,115,
                      42]},
                    {sep,
                     [{text,
                       "Qcallback behavior. It is recommended to read the documentation about the function"}],
                     0,false},
                    {text,"([mnesia:activity/4](./mnesia#activity/4)"},
                    {sep,[{text,"\nto see how"}],0,false},
                    {text,"\r*mnesia_frag*"},
                    {sep,
                     [{text,
                       [16,99,97,110,32,98,101,32,117,115,101,100,32,97,115,
                        32,97]}],
                     0,false},
                    {text,
                     [15,42,109,110,101,115,105,97,95,97,99,99,101,115,115,
                      42]},
                    {sep,
                     [{text,
                       [16,99,97,108,108,98,97,99,107,32,109,111,100,117,108,
                        101,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [22,65,116,32,101,97,99,104,32,114,101,99,111,114,100,
                        32,97,99,99,101,115,115,44]}],
                     0,false},
                    {text,"\r*mnesia_frag*"},
                    {sep,
                     [{text,
                       [306,102,105,114,115,116,32,99,111,109,112,117,116,101,
                        115,32,97,32,104,97,115,104,32,118,97,108,117,101,32,
                        102,114,111,109,32,116,104,101,32,114,101,99,111,114,
                        100,32,107,101,121,46,32,83,101,99,111,110,100,44,32,
                        116,104,101,32,110,97,109,101,32,111,102,32,116,104,
                        101,32,116,97,98,108,101,32,102,114,97,103,109,101,
                        110,116,32,105,115,32,100,101,116,101,114,109,105,110,
                        101,100,32,102,114,111,109,32,116,104,101,32,104,97,
                        115,104,32,118,97,108,117,101,46,32,70,105,110,97,108,
                        108,121,32,116,104,101,32,97,99,116,117,97,108,32,116,
                        97,98,108,101,32,97,99,99,101,115,115,32,105,115,32,
                        112,101,114,102,111,114,109,101,100,32,98,121,32,116,
                        104,101,32,115,97,109,101,32,102,117,110,99,116,105,
                        111,110,115,32,97,115,32,102,111,114,32,110,111,110,
                        45,102,114,97,103,109,101,110,116,101,100,32,116,97,
                        98,108,101,115,46,32,87,104,101,110,32,116,104,101,32,
                        107,101,121,32,105,115,32,110,111,116,32,107,110,111,
                        119,110,32,98,101,102,111,114,101,104,97,110,100,44,
                        32,97,108,108,32,102,114,97,103,109,101,110,116,115,
                        32,97,114,101,32,115,101,97,114,99,104,101,100,32,102,
                        111,114,32,109,97,116,99,104,105,110,103,32,114,101,
                        99,111,114,100,115,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [14,78,111,116,105,99,101,32,116,104,97,116,32,105,
                        110]}],
                     0,false},
                    {text,"\r*ordered_set*"},
                    {sep,
                     [{text,
                       "_tables, the records are ordered per fragment, and the order is undefined in results returned by"}],
                     0,false},
                    {text,"\b*select*"},
                    {sep,[{text,[3,97,110,100]}],0,false},
                    {text,
                     [14,42,109,97,116,99,104,95,111,98,106,101,99,116,42]},
                    {sep,[{text,"\f, as well as"}],0,false},
                    {text,[7,42,102,105,114,115,116,42]},
                    {sep,[{text,[1,44]}],0,false},
                    {text,[6,42,110,101,120,116,42]},
                    {sep,[{text,[1,44]}],0,false},
                    {text,[6,42,112,114,101,118,42]},
                    {sep,[{text,[3,97,110,100]}],0,false},
                    {text,[6,42,108,97,115,116,42]},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,"$The following code illustrates how a"}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       "Stable is converted to be a fragmented table and how more fragments are added later:"}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {above,
                 {above,
                  {text,[3,96,96,96]},
                  {sep,
                   [{text,
                     [1664,10,69,115,104,101,108,108,32,86,52,46,55,46,51,46,
                      51,32,32,40,97,98,111,114,116,32,119,105,116,104,32,94,
                      71,41,10,40,97,64,115,97,109,41,49,62,32,109,110,101,
                      115,105,97,58,115,116,97,114,116,40,41,46,10,111,107,10,
                      40,97,64,115,97,109,41,50,62,32,109,110,101,115,105,97,
                      58,115,121,115,116,101,109,95,105,110,102,111,40,114,
                      117,110,110,105,110,103,95,100,98,95,110,111,100,101,
                      115,41,46,10,91,98,64,115,97,109,44,99,64,115,97,109,44,
                      97,64,115,97,109,93,10,40,97,64,115,97,109,41,51,62,32,
                      84,97,98,32,61,32,100,105,99,116,105,111,110,97,114,121,
                      46,10,100,105,99,116,105,111,110,97,114,121,10,40,97,64,
                      115,97,109,41,52,62,32,109,110,101,115,105,97,58,99,114,
                      101,97,116,101,95,116,97,98,108,101,40,84,97,98,44,32,
                      91,123,114,97,109,95,99,111,112,105,101,115,44,32,91,97,
                      64,115,97,109,44,32,98,64,115,97,109,93,125,93,41,46,10,
                      123,97,116,111,109,105,99,44,111,107,125,10,40,97,64,
                      115,97,109,41,53,62,32,87,114,105,116,101,32,61,32,102,
                      117,110,40,75,101,121,115,41,32,45,62,32,91,109,110,101,
                      115,105,97,58,119,114,105,116,101,40,123,84,97,98,44,75,
                      44,45,75,125,41,32,124,124,32,75,32,60,45,32,75,101,121,
                      115,93,44,32,111,107,32,101,110,100,46,10,35,70,117,110,
                      60,101,114,108,95,101,118,97,108,62,10,40,97,64,115,97,
                      109,41,54,62,32,109,110,101,115,105,97,58,97,99,116,105,
                      118,105,116,121,40,115,121,110,99,95,100,105,114,116,
                      121,44,32,87,114,105,116,101,44,32,91,108,105,115,116,
                      115,58,115,101,113,40,49,44,32,50,53,54,41,93,44,32,109,
                      110,101,115,105,97,95,102,114,97,103,41,46,10,111,107,
                      10,40,97,64,115,97,109,41,55,62,32,109,110,101,115,105,
                      97,58,99,104,97,110,103,101,95,116,97,98,108,101,95,102,
                      114,97,103,40,84,97,98,44,32,123,97,99,116,105,118,97,
                      116,101,44,32,91,93,125,41,46,10,123,97,116,111,109,105,
                      99,44,111,107,125,10,40,97,64,115,97,109,41,56,62,32,
                      109,110,101,115,105,97,58,116,97,98,108,101,95,105,110,
                      102,111,40,84,97,98,44,32,102,114,97,103,95,112,114,111,
                      112,101,114,116,105,101,115,41,46,10,91,123,98,97,115,
                      101,95,116,97,98,108,101,44,100,105,99,116,105,111,110,
                      97,114,121,125,44,10,32,123,102,111,114,101,105,103,110,
                      95,107,101,121,44,117,110,100,101,102,105,110,101,100,
                      125,44,10,32,123,110,95,100,111,117,98,108,101,115,44,
                      48,125,44,10,32,123,110,95,102,114,97,103,109,101,110,
                      116,115,44,49,125,44,10,32,123,110,101,120,116,95,110,
                      95,116,111,95,115,112,108,105,116,44,49,125,44,10,32,
                      123,110,111,100,101,95,112,111,111,108,44,91,97,64,115,
                      97,109,44,98,64,115,97,109,44,99,64,115,97,109,93,125,
                      93,10,40,97,64,115,97,109,41,57,62,32,73,110,102,111,32,
                      61,32,102,117,110,40,73,116,101,109,41,32,45,62,32,109,
                      110,101,115,105,97,58,116,97,98,108,101,95,105,110,102,
                      111,40,84,97,98,44,32,73,116,101,109,41,32,101,110,100,
                      46,10,35,70,117,110,60,101,114,108,95,101,118,97,108,62,
                      10,40,97,64,115,97,109,41,49,48,62,32,68,105,115,116,32,
                      61,32,109,110,101,115,105,97,58,97,99,116,105,118,105,
                      116,121,40,115,121,110,99,95,100,105,114,116,121,44,32,
                      73,110,102,111,44,32,91,102,114,97,103,95,100,105,115,
                      116,93,44,32,109,110,101,115,105,97,95,102,114,97,103,
                      41,46,10,91,123,99,64,115,97,109,44,48,125,44,123,97,64,
                      115,97,109,44,49,125,44,123,98,64,115,97,109,44,49,125,
                      93,10,40,97,64,115,97,109,41,49,49,62,32,109,110,101,
                      115,105,97,58,99,104,97,110,103,101,95,116,97,98,108,
                      101,95,102,114,97,103,40,84,97,98,44,32,123,97,100,100,
                      95,102,114,97,103,44,32,68,105,115,116,125,41,46,10,123,
                      97,116,111,109,105,99,44,111,107,125,10,40,97,64,115,97,
                      109,41,49,50,62,32,68,105,115,116,50,32,61,32,109,110,
                      101,115,105,97,58,97,99,116,105,118,105,116,121,40,115,
                      121,110,99,95,100,105,114,116,121,44,32,73,110,102,111,
                      44,32,91,102,114,97,103,95,100,105,115,116,93,44,32,109,
                      110,101,115,105,97,95,102,114,97,103,41,46,10,91,123,98,
                      64,115,97,109,44,49,125,44,123,99,64,115,97,109,44,49,
                      125,44,123,97,64,115,97,109,44,50,125,93,10,40,97,64,
                      115,97,109,41,49,51,62,32,109,110,101,115,105,97,58,99,
                      104,97,110,103,101,95,116,97,98,108,101,95,102,114,97,
                      103,40,84,97,98,44,32,123,97,100,100,95,102,114,97,103,
                      44,32,68,105,115,116,50,125,41,46,10,123,97,116,111,109,
                      105,99,44,111,107,125,10,40,97,64,115,97,109,41,49,52,
                      62,32,68,105,115,116,51,32,61,32,109,110,101,115,105,97,
                      58,97,99,116,105,118,105,116,121,40,115,121,110,99,95,
                      100,105,114,116,121,44,32,73,110,102,111,44,32,91,102,
                      114,97,103,95,100,105,115,116,93,44,32,109,110,101,115,
                      105,97,95,102,114,97,103,41,46,10,91,123,97,64,115,97,
                      109,44,50,125,44,123,98,64,115,97,109,44,50,125,44,123,
                      99,64,115,97,109,44,50,125,93,10,40,97,64,115,97,109,41,
                      49,53,62,32,109,110,101,115,105,97,58,99,104,97,110,103,
                      101,95,116,97,98,108,101,95,102,114,97,103,40,84,97,98,
                      44,32,123,97,100,100,95,102,114,97,103,44,32,68,105,115,
                      116,51,125,41,46,10,123,97,116,111,109,105,99,44,111,
                      107,125,10,40,97,64,115,97,109,41,49,54,62,32,82,101,97,
                      100,32,61,32,102,117,110,40,75,101,121,41,32,45,62,32,
                      109,110,101,115,105,97,58,114,101,97,100,40,123,84,97,
                      98,44,32,75,101,121,125,41,32,101,110,100,46,10,35,70,
                      117,110,60,101,114,108,95,101,118,97,108,62,10,40,97,64,
                      115,97,109,41,49,55,62,32,109,110,101,115,105,97,58,97,
                      99,116,105,118,105,116,121,40,116,114,97,110,115,97,99,
                      116,105,111,110,44,32,82,101,97,100,44,32,91,49,50,93,
                      44,32,109,110,101,115,105,97,95,102,114,97,103,41,46,10,
                      91,123,100,105,99,116,105,111,110,97,114,121,44,49,50,
                      44,45,49,50,125,93,10,40,97,64,115,97,109,41,49,56,62,
                      32,109,110,101,115,105,97,58,97,99,116,105,118,105,116,
                      121,40,115,121,110,99,95,100,105,114,116,121,44,32,73,
                      110,102,111,44,32,91,102,114,97,103,95,115,105,122,101,
                      93,44,32,109,110,101,115,105,97,95,102,114,97,103,41,46,
                      10,91,123,100,105,99,116,105,111,110,97,114,121,44,54,
                      52,125,44,10,32,123,100,105,99,116,105,111,110,97,114,
                      121,95,102,114,97,103,50,44,54,52,125,44,10,32,123,100,
                      105,99,116,105,111,110,97,114,121,95,102,114,97,103,51,
                      44,54,52,125,44,10,32,123,100,105,99,116,105,111,110,97,
                      114,121,95,102,114,97,103,52,44,54,52,125,93,10,40,97,
                      64,115,97,109,41,49,57,62,32,10,32,32,32,32,32,32]}],
                   0,true}},
                 {text,[3,96,96,96]}},
                null},
               null}}],
            0,false},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,{text,"\e## Fragmentation Properties"},null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [18,84,104,101,32,116,97,98,108,101,32,112,114,111,112,
                        101,114,116,121]}],
                     0,false},
                    {text,
                     [17,42,102,114,97,103,95,112,114,111,112,101,114,116,105,
                      101,115,42]},
                    {sep,
                     [{text,
                       [29,99,97,110,32,98,101,32,114,101,97,100,32,119,105,
                        116,104,32,116,104,101,32,102,117,110,99,116,105,111,
                        110]}],
                     0,false},
                    {text,
                     "@[mnesia:table_info(Tab, frag_properties)](./mnesia#table_info/2)"},
                    {sep,
                     [{text,
                       [139,46,32,84,104,101,32,102,114,97,103,109,101,110,
                        116,97,116,105,111,110,32,112,114,111,112,101,114,116,
                        105,101,115,32,97,114,101,32,97,32,108,105,115,116,32,
                        111,102,32,116,97,103,103,101,100,32,116,117,112,108,
                        101,115,32,119,105,116,104,32,97,114,105,116,121,32,
                        50,46,32,66,121,32,100,101,102,97,117,108,116,32,116,
                        104,101,32,108,105,115,116,32,105,115,32,101,109,112,
                        116,121,44,32,98,117,116,32,119,104,101,110,32,105,
                        116,32,105,115,32,110,111,110,45,101,109,112,116,121,
                        32,105,116,32,116,114,105,103,103,101,114,115]}],
                     0,false},
                    {text,"\b*Mnesia*"},
                    {sep,
                     [{text,
                       "Oto regard the table as fragmented. The fragmentation properties are as follows:"}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,
               {text,[4,60,100,108,62]},
               {nest,4,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,
                                     [{text,
                                       [18,123,110,95,102,114,97,103,109,101,
                                        110,116,115,44,32,73,110,116,125]}],
                                     0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{text,"\vn_fragments"},
                                           {sep,
                                            [{text,
                                              [138,114,101,103,117,108,97,116,
                                               101,115,32,104,111,119,32,109,
                                               97,110,121,32,102,114,97,103,
                                               109,101,110,116,115,32,116,104,
                                               97,116,32,116,104,101,32,116,
                                               97,98,108,101,32,99,117,114,
                                               114,101,110,116,108,121,32,104,
                                               97,115,46,32,84,104,105,115,32,
                                               112,114,111,112,101,114,116,
                                               121,32,99,97,110,32,101,120,
                                               112,108,105,99,105,116,108,121,
                                               32,98,101,32,115,101,116,32,97,
                                               116,32,116,97,98,108,101,32,99,
                                               114,101,97,116,105,111,110,32,
                                               97,110,100,32,108,97,116,101,
                                               114,32,98,101,32,99,104,97,110,
                                               103,101,100,32,119,105,116,
                                               104]}],
                                            0,false},
                                           {text,
                                            [23,123,97,100,100,95,102,114,97,
                                             103,44,32,78,111,100,101,115,79,
                                             114,68,105,115,116,125]},
                                           {sep,[{text,[2,111,114]}],0,false},
                                           {text,"\bdel_frag"},
                                           {sep,[{text,[1,46]}],0,false},
                                           {text,"\vn_fragments"},
                                           {sep,
                                            [{text,"\vdefaults to"}],
                                            0,false},
                                           {text,[1,49]},
                                           {sep,[{text,[1,46]}],0,false}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,
                                    [{text,
                                      [17,123,110,111,100,101,95,112,111,111,
                                       108,44,32,76,105,115,116,125]}],
                                    0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            "lThe node pool contains a list of nodes and can explicitly be set at table creation and later be changed with"}],
                                          0,false},
                                         {text,
                                          [16,123,97,100,100,95,110,111,100,
                                           101,44,32,78,111,100,101,125]},
                                         {sep,[{text,[2,111,114]}],0,false},
                                         {text,
                                          [16,123,100,101,108,95,110,111,100,
                                           101,44,32,78,111,100,101,125]},
                                         {sep,
                                          [{text,
                                            [19,46,32,65,116,32,116,97,98,108,
                                             101,32,99,114,101,97,116,105,111,
                                             110]}],
                                          0,false},
                                         {text,[6,77,110,101,115,105,97]},
                                         {sep,
                                          [{text,
                                            [154,116,114,105,101,115,32,116,
                                             111,32,100,105,115,116,114,105,
                                             98,117,116,101,32,116,104,101,32,
                                             114,101,112,108,105,99,97,115,32,
                                             111,102,32,101,97,99,104,32,102,
                                             114,97,103,109,101,110,116,32,
                                             101,118,101,110,108,121,32,111,
                                             118,101,114,32,97,108,108,32,116,
                                             104,101,32,110,111,100,101,115,
                                             32,105,110,32,116,104,101,32,110,
                                             111,100,101,32,112,111,111,108,
                                             46,32,72,111,112,101,102,117,108,
                                             108,121,32,97,108,108,32,110,111,
                                             100,101,115,32,101,110,100,32,
                                             117,112,32,119,105,116,104,32,
                                             116,104,101,32,115,97,109,101,32,
                                             110,117,109,98,101,114,32,111,
                                             102,32,114,101,112,108,105,99,97,
                                             115,46]}],
                                          0,false},
                                         {text,"\tnode_pool"},
                                         {sep,
                                          [{text,
                                            ".defaults to the return value from the function"}],
                                          0,false},
                                         {text,
                                          [28,109,110,101,115,105,97,58,115,
                                           121,115,116,101,109,95,105,110,102,
                                           111,40,100,98,95,110,111,100,101,
                                           115,41]},
                                         {sep,[{text,[1,46]}],0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{text,
                                    [19,123,110,95,114,97,109,95,99,111,112,
                                     105,101,115,44,32,73,110,116,125]}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          [18,82,101,103,117,108,97,116,101,
                                           115,32,104,111,119,32,109,97,110,
                                           121]}],
                                        0,false},
                                       {text,"\nram_copies"},
                                       {sep,
                                        [{text,
                                          "jreplicas that each fragment is to have. This property can explicitly be set at table creation. Defaults is"}],
                                        0,false},
                                       {text,[1,48]},
                                       {sep,[{text,"\b, but if"}],0,false},
                                       {text,"\rn_disc_copies"},
                                       {sep,[{text,[3,97,110,100]}],0,false},
                                       {text,
                                        [18,110,95,100,105,115,99,95,111,110,
                                         108,121,95,99,111,112,105,101,115]},
                                       {sep,[{text,"\balso are"}],0,false},
                                       {text,[1,48]},
                                       {sep,[{text,[1,44]}],0,false},
                                       {text,"\fn_ram_copies"},
                                       {sep,[{text,"\vdefaults to"}],0,false},
                                       {text,[1,49]},
                                       {sep,[{text,[1,46]}],0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{text,
                                  [20,123,110,95,100,105,115,99,95,99,111,112,
                                   105,101,115,44,32,73,110,116,125]}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        [18,82,101,103,117,108,97,116,101,115,
                                         32,104,111,119,32,109,97,110,121]}],
                                      0,false},
                                     {text,"\vdisc_copies"},
                                     {sep,
                                      [{text,
                                        "ireplicas that each fragment is to have. This property can explicitly be set at table creation. Default is"}],
                                      0,false},
                                     {text,[1,48]},
                                     {sep,[{text,[1,46]}],0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                [25,123,110,95,100,105,115,99,95,111,110,108,
                                 121,95,99,111,112,105,101,115,44,32,73,110,
                                 116,125]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      [18,82,101,103,117,108,97,116,101,115,
                                       32,104,111,119,32,109,97,110,121]}],
                                    0,false},
                                   {text,
                                    [16,100,105,115,99,95,111,110,108,121,95,
                                     99,111,112,105,101,115]},
                                   {sep,
                                    [{text,
                                      "jreplicas that each fragment is to have. This property can explicitly be set at table creation. Defaults is"}],
                                    0,false},
                                   {text,[1,48]},
                                   {sep,[{text,[1,46]}],0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,
                              [25,123,102,111,114,101,105,103,110,95,107,101,
                               121,44,32,70,111,114,101,105,103,110,75,101,
                               121,125]}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {sep,
                           [{above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{text,"\nForeignKey"},
                                   {sep,
                                    [{text,
                                      [22,99,97,110,32,101,105,116,104,101,
                                       114,32,98,101,32,116,104,101,32,97,116,
                                       111,109]}],
                                    0,false},
                                   {text,"\tundefined"},
                                   {sep,[{text,"\for the tuple"}],0,false},
                                   {text,
                                    [18,123,70,111,114,101,105,103,110,84,97,
                                     98,44,32,65,116,116,114,125]},
                                   {sep,
                                    [{text,[7,44,32,119,104,101,114,101]}],
                                    0,false},
                                   {text,[4,65,116,116,114]},
                                   {sep,
                                    [{text,
                                      "Ydenotes an attribute that is to be interpreted as a key in another fragmented table named"}],
                                    0,false},
                                   {text,"\nForeignTab"},
                                   {sep,[{text,[1,46]}],0,false},
                                   {text,[6,77,110,101,115,105,97]},
                                   {sep,
                                    [{text,
                                      "`ensures that the number of fragments in this table and in the foreign table are always the same."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      "$When fragments are added or deleted,"}],
                                    0,false},
                                   {text,[6,77,110,101,115,105,97]},
                                   {sep,
                                    [{text,
                                      "Ãautomatically propagates the operation to all fragmented tables that have a foreign key referring to this table. Instead of using the record key to determine which fragment to access, the value of field"}],
                                    0,false},
                                   {text,[4,65,116,116,114]},
                                   {sep,
                                    [{text,
                                      "ois used. This feature makes it possible to colocate records automatically in different tables to the same node."}],
                                    0,false},
                                   {text,"\vforeign_key"},
                                   {sep,[{text,"\vdefaults to"}],0,false},
                                   {text,"\tundefined"},
                                   {sep,
                                    [{text,
                                      "Ã. However, if the foreign key is set to something else, it causes the default values of the other fragmentation properties to be the same values as the actual fragmentation properties of the foreign table."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}}],
                           0,false},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,
                            [19,123,104,97,115,104,95,109,111,100,117,108,101,
                             44,32,65,116,111,109,125]}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  "REnables definition of an alternative hashing scheme. The module must implement the"}],
                                0,false},
                               {text,
                                [16,109,110,101,115,105,97,95,102,114,97,103,
                                 95,104,97,115,104]},
                               {sep,
                                [{text,
                                  "Tcallback behavior. This property can explicitly be set at table creation. Default is"}],
                                0,false},
                               {text,
                                [16,109,110,101,115,105,97,95,102,114,97,103,
                                 95,104,97,115,104]},
                               {sep,[{text,[1,46]}],0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{text,
                          [18,123,104,97,115,104,95,115,116,97,116,101,44,32,
                           84,101,114,109,125]}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {sep,
                       [{above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  [133,69,110,97,98,108,101,115,32,97,32,116,
                                   97,98,108,101,45,115,112,101,99,105,102,
                                   105,99,32,112,97,114,97,109,101,116,101,
                                   114,105,122,97,116,105,111,110,32,111,102,
                                   32,97,32,103,101,110,101,114,105,99,32,104,
                                   97,115,104,32,109,111,100,117,108,101,46,
                                   32,84,104,105,115,32,112,114,111,112,101,
                                   114,116,121,32,99,97,110,32,101,120,112,
                                   108,105,99,105,116,108,121,32,98,101,32,
                                   115,101,116,32,97,116,32,116,97,98,108,101,
                                   32,99,114,101,97,116,105,111,110,46,32,68,
                                   101,102,97,117,108,116,32,105,115]}],
                                0,false},
                               {text,"\tundefined"},
                               {sep,[{text,[1,46]}],0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {above,
                            {above,
                             {text,[3,96,96,96]},
                             {sep,
                              [{text,
                                [1977,10,69,115,104,101,108,108,32,86,52,46,
                                 55,46,51,46,51,32,32,40,97,98,111,114,116,32,
                                 119,105,116,104,32,94,71,41,10,40,97,64,115,
                                 97,109,41,49,62,32,109,110,101,115,105,97,58,
                                 115,116,97,114,116,40,41,46,10,111,107,10,40,
                                 97,64,115,97,109,41,50,62,32,80,114,105,109,
                                 80,114,111,112,115,32,61,32,91,123,110,95,
                                 102,114,97,103,109,101,110,116,115,44,32,55,
                                 125,44,32,123,110,111,100,101,95,112,111,111,
                                 108,44,32,91,110,111,100,101,40,41,93,125,93,
                                 46,10,91,123,110,95,102,114,97,103,109,101,
                                 110,116,115,44,55,125,44,123,110,111,100,101,
                                 95,112,111,111,108,44,91,97,64,115,97,109,93,
                                 125,93,10,40,97,64,115,97,109,41,51,62,32,
                                 109,110,101,115,105,97,58,99,114,101,97,116,
                                 101,95,116,97,98,108,101,40,112,114,105,109,
                                 95,100,105,99,116,44,32,10,32,32,32,32,32,32,
                                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                 32,32,32,32,32,32,32,32,32,91,123,102,114,97,
                                 103,95,112,114,111,112,101,114,116,105,101,
                                 115,44,32,80,114,105,109,80,114,111,112,115,
                                 125,44,10,32,32,32,32,32,32,32,32,32,32,32,
                                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                 32,32,32,32,32,123,97,116,116,114,105,98,117,
                                 116,101,115,44,91,112,114,105,109,95,107,101,
                                 121,44,112,114,105,109,95,118,97,108,93,125,
                                 93,41,46,10,123,97,116,111,109,105,99,44,111,
                                 107,125,10,40,97,64,115,97,109,41,52,62,32,
                                 83,101,99,80,114,111,112,115,32,61,32,91,123,
                                 102,111,114,101,105,103,110,95,107,101,121,
                                 44,32,123,112,114,105,109,95,100,105,99,116,
                                 44,32,115,101,99,95,118,97,108,125,125,93,46,
                                 10,91,123,102,111,114,101,105,103,110,95,107,
                                 101,121,44,123,112,114,105,109,95,100,105,99,
                                 116,44,115,101,99,95,118,97,108,125,125,93,
                                 10,40,97,64,115,97,109,41,53,62,32,109,110,
                                 101,115,105,97,58,99,114,101,97,116,101,95,
                                 116,97,98,108,101,40,115,101,99,95,100,105,
                                 99,116,44,32,10,32,32,32,32,32,32,32,32,32,
                                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                 32,32,32,32,32,32,91,123,102,114,97,103,95,
                                 112,114,111,112,101,114,116,105,101,115,44,
                                 32,83,101,99,80,114,111,112,115,125,44,10,40,
                                 97,64,115,97,109,41,53,62,32,32,32,32,32,32,
                                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                 32,123,97,116,116,114,105,98,117,116,101,115,
                                 44,32,91,115,101,99,95,107,101,121,44,32,115,
                                 101,99,95,118,97,108,93,125,93,41,46,10,123,
                                 97,116,111,109,105,99,44,111,107,125,10,40,
                                 97,64,115,97,109,41,54,62,32,87,114,105,116,
                                 101,32,61,32,102,117,110,40,82,101,99,41,32,
                                 45,62,32,109,110,101,115,105,97,58,119,114,
                                 105,116,101,40,82,101,99,41,32,101,110,100,
                                 46,10,35,70,117,110,60,101,114,108,95,101,
                                 118,97,108,62,10,40,97,64,115,97,109,41,55,
                                 62,32,80,114,105,109,75,101,121,32,61,32,49,
                                 49,46,10,49,49,10,40,97,64,115,97,109,41,56,
                                 62,32,83,101,99,75,101,121,32,61,32,52,50,46,
                                 10,52,50,10,40,97,64,115,97,109,41,57,62,32,
                                 109,110,101,115,105,97,58,97,99,116,105,118,
                                 105,116,121,40,115,121,110,99,95,100,105,114,
                                 116,121,44,32,87,114,105,116,101,44,10,32,32,
                                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                 32,32,32,32,32,32,32,32,32,91,123,112,114,
                                 105,109,95,100,105,99,116,44,32,80,114,105,
                                 109,75,101,121,44,32,45,49,49,125,93,44,32,
                                 109,110,101,115,105,97,95,102,114,97,103,41,
                                 46,10,111,107,10,40,97,64,115,97,109,41,49,
                                 48,62,32,109,110,101,115,105,97,58,97,99,116,
                                 105,118,105,116,121,40,115,121,110,99,95,100,
                                 105,114,116,121,44,32,87,114,105,116,101,44,
                                 10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                 32,32,32,32,32,32,32,32,32,32,32,32,32,91,
                                 123,115,101,99,95,100,105,99,116,44,32,83,
                                 101,99,75,101,121,44,32,80,114,105,109,75,
                                 101,121,125,93,44,32,109,110,101,115,105,97,
                                 95,102,114,97,103,41,46,10,111,107,10,40,97,
                                 64,115,97,109,41,49,49,62,32,109,110,101,115,
                                 105,97,58,99,104,97,110,103,101,95,116,97,98,
                                 108,101,95,102,114,97,103,40,112,114,105,109,
                                 95,100,105,99,116,44,32,123,97,100,100,95,
                                 102,114,97,103,44,32,91,110,111,100,101,40,
                                 41,93,125,41,46,10,123,97,116,111,109,105,99,
                                 44,111,107,125,10,40,97,64,115,97,109,41,49,
                                 50,62,32,83,101,99,82,101,97,100,32,61,32,
                                 102,117,110,40,80,114,105,109,75,101,121,44,
                                 32,83,101,99,75,101,121,41,32,45,62,10,32,32,
                                 32,32,32,32,32,32,32,32,32,32,32,32,32,109,
                                 110,101,115,105,97,58,114,101,97,100,40,123,
                                 115,101,99,95,100,105,99,116,44,32,80,114,
                                 105,109,75,101,121,125,44,32,83,101,99,75,
                                 101,121,44,32,114,101,97,100,41,32,101,110,
                                 100,46,10,35,70,117,110,60,101,114,108,95,
                                 101,118,97,108,62,10,40,97,64,115,97,109,41,
                                 49,51,62,32,109,110,101,115,105,97,58,97,99,
                                 116,105,118,105,116,121,40,116,114,97,110,
                                 115,97,99,116,105,111,110,44,32,83,101,99,82,
                                 101,97,100,44,10,32,32,32,32,32,32,32,32,32,
                                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                 32,32,32,91,80,114,105,109,75,101,121,44,32,
                                 83,101,99,75,101,121,93,44,32,109,110,101,
                                 115,105,97,95,102,114,97,103,41,46,10,91,123,
                                 115,101,99,95,100,105,99,116,44,52,50,44,49,
                                 49,125,93,10,40,97,64,115,97,109,41,49,52,62,
                                 32,73,110,102,111,32,61,32,102,117,110,40,84,
                                 97,98,44,32,73,116,101,109,41,32,45,62,32,
                                 109,110,101,115,105,97,58,116,97,98,108,101,
                                 95,105,110,102,111,40,84,97,98,44,32,73,116,
                                 101,109,41,32,101,110,100,46,10,35,70,117,
                                 110,60,101,114,108,95,101,118,97,108,62,10,
                                 40,97,64,115,97,109,41,49,53,62,32,109,110,
                                 101,115,105,97,58,97,99,116,105,118,105,116,
                                 121,40,115,121,110,99,95,100,105,114,116,121,
                                 44,32,73,110,102,111,44,10,32,32,32,32,32,32,
                                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                 32,32,32,32,32,32,91,112,114,105,109,95,100,
                                 105,99,116,44,32,102,114,97,103,95,115,105,
                                 122,101,93,44,32,109,110,101,115,105,97,95,
                                 102,114,97,103,41,46,10,91,123,112,114,105,
                                 109,95,100,105,99,116,44,48,125,44,10,32,123,
                                 112,114,105,109,95,100,105,99,116,95,102,114,
                                 97,103,50,44,48,125,44,10,32,123,112,114,105,
                                 109,95,100,105,99,116,95,102,114,97,103,51,
                                 44,48,125,44,10,32,123,112,114,105,109,95,
                                 100,105,99,116,95,102,114,97,103,52,44,49,
                                 125,44,10,32,123,112,114,105,109,95,100,105,
                                 99,116,95,102,114,97,103,53,44,48,125,44,10,
                                 32,123,112,114,105,109,95,100,105,99,116,95,
                                 102,114,97,103,54,44,48,125,44,10,32,123,112,
                                 114,105,109,95,100,105,99,116,95,102,114,97,
                                 103,55,44,48,125,44,10,32,123,112,114,105,
                                 109,95,100,105,99,116,95,102,114,97,103,56,
                                 44,48,125,93,10,40,97,64,115,97,109,41,49,54,
                                 62,32,109,110,101,115,105,97,58,97,99,116,
                                 105,118,105,116,121,40,115,121,110,99,95,100,
                                 105,114,116,121,44,32,73,110,102,111,44,10,
                                 32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
                                 32,32,32,32,32,32,32,32,32,32,32,32,91,115,
                                 101,99,95,100,105,99,116,44,32,102,114,97,
                                 103,95,115,105,122,101,93,44,32,109,110,101,
                                 115,105,97,95,102,114,97,103,41,46,10,91,123,
                                 115,101,99,95,100,105,99,116,44,48,125,44,10,
                                 32,123,115,101,99,95,100,105,99,116,95,102,
                                 114,97,103,50,44,48,125,44,10,32,123,115,101,
                                 99,95,100,105,99,116,95,102,114,97,103,51,44,
                                 48,125,44,10,32,123,115,101,99,95,100,105,99,
                                 116,95,102,114,97,103,52,44,49,125,44,10,32,
                                 123,115,101,99,95,100,105,99,116,95,102,114,
                                 97,103,53,44,48,125,44,10,32,123,115,101,99,
                                 95,100,105,99,116,95,102,114,97,103,54,44,48,
                                 125,44,10,32,123,115,101,99,95,100,105,99,
                                 116,95,102,114,97,103,55,44,48,125,44,10,32,
                                 123,115,101,99,95,100,105,99,116,95,102,114,
                                 97,103,56,44,48,125,93,10,40,97,64,115,97,
                                 109,41,49,55,62,10,32,32,32,32,32,32,32,32,
                                 32,32]}],
                              0,true}},
                            {text,[3,96,96,96]}},
                           null},
                          null}}],
                       0,false},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}}}},
              {text,[5,60,47,100,108,62]}}],
            0,false},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,{text,"\"## Management of Fragmented Tables"},null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,[{text,"\fThe function"}],0,false},
                    {text,"'*mnesia:change_table_frag(Tab, Change)*"},
                    {sep,
                     [{text,
                       "Iis intended to be used for reconfiguration of fragmented tables. Argument"}],
                     0,false},
                    {text,"\b*Change*"},
                    {sep,
                     [{text,"'is to have one of the following values:"}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,
               {text,[4,60,100,108,62]},
               {nest,4,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,
                                 [{text,
                                   [21,123,97,99,116,105,118,97,116,101,44,32,
                                    70,114,97,103,80,114,111,112,115,125]}],
                                 0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          "<Activates the fragmentation properties of an existing table."}],
                                        0,false},
                                       {text,"\tFragProps"},
                                       {sep,
                                        [{text,
                                          [20,105,115,32,101,105,116,104,101,
                                           114,32,116,111,32,99,111,110,116,
                                           97,105,110]}],
                                        0,false},
                                       {text,
                                        [18,123,110,111,100,101,95,112,111,
                                         111,108,44,32,78,111,100,101,115,
                                         125]},
                                       {sep,
                                        [{text,"\for be empty."}],
                                        0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,"\ndeactivate"}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        "TDeactivates the fragmentation properties of a table. The number of fragments must be"}],
                                      0,false},
                                     {text,[1,49]},
                                     {sep,
                                      [{text,
                                        "<. No other table can refer to this table in its foreign key."}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                [23,123,97,100,100,95,102,114,97,103,44,32,78,
                                 111,100,101,115,79,114,68,105,115,116,125]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {sep,
                             [{above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{text,
                                      [350,65,100,100,115,32,97,32,102,114,97,
                                       103,109,101,110,116,32,116,111,32,97,
                                       32,102,114,97,103,109,101,110,116,101,
                                       100,32,116,97,98,108,101,46,32,65,108,
                                       108,32,114,101,99,111,114,100,115,32,
                                       105,110,32,111,110,101,32,111,102,32,
                                       116,104,101,32,111,108,100,32,102,114,
                                       97,103,109,101,110,116,115,32,97,114,
                                       101,32,114,101,104,97,115,104,101,100,
                                       32,97,110,100,32,97,98,111,117,116,32,
                                       104,97,108,102,32,111,102,32,116,104,
                                       101,109,32,97,114,101,32,109,111,118,
                                       101,100,32,116,111,32,116,104,101,32,
                                       110,101,119,32,40,108,97,115,116,41,32,
                                       102,114,97,103,109,101,110,116,46,32,
                                       65,108,108,32,111,116,104,101,114,32,
                                       102,114,97,103,109,101,110,116,101,100,
                                       32,116,97,98,108,101,115,44,32,119,104,
                                       105,99,104,32,114,101,102,101,114,32,
                                       116,111,32,116,104,105,115,32,116,97,
                                       98,108,101,32,105,110,32,116,104,101,
                                       105,114,32,102,111,114,101,105,103,110,
                                       32,107,101,121,44,32,97,117,116,111,
                                       109,97,116,105,99,97,108,108,121,32,
                                       103,101,116,32,97,32,110,101,119,32,
                                       102,114,97,103,109,101,110,116,46,32,
                                       65,108,115,111,44,32,116,104,101,105,
                                       114,32,114,101,99,111,114,100,115,32,
                                       97,114,101,32,100,121,110,97,109,105,
                                       99,97,108,108,121,32,114,101,104,97,
                                       115,104,101,100,32,105,110,32,116,104,
                                       101,32,115,97,109,101,32,109,97,110,
                                       110,101,114,32,97,115,32,102,111,114,
                                       32,116,104,101,32,109,97,105,110,32,
                                       116,97,98,108,101,46]}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,[{text,"\bArgument"}],0,false},
                                     {text,"\vNodesOrDist"},
                                     {sep,
                                      [{text,
                                        "=can either be a list of nodes or the result from the function"}],
                                      0,false},
                                     {text,
                                      "!mnesia:table_info(Tab, frag_dist)"},
                                     {sep,[{text,"\n. Argument"}],0,false},
                                     {text,"\vNodesOrDist"},
                                     {sep,
                                      [{text,
                                        "Â§is assumed to be a sorted list with the best nodes to host new replicas first in the list. The new fragment gets the same number of replicas as the first fragment (see"}],
                                      0,false},
                                     {text,"\fn_ram_copies"},
                                     {sep,[{text,[1,44]}],0,false},
                                     {text,"\rn_disc_copies"},
                                     {sep,
                                      [{text,[5,44,32,97,110,100]}],
                                      0,false},
                                     {text,
                                      [18,110,95,100,105,115,99,95,111,110,
                                       108,121,95,99,111,112,105,101,115]},
                                     {sep,
                                      [{text,[6,41,46,32,84,104,101]}],
                                      0,false},
                                     {text,"\vNodesOrDist"},
                                     {sep,
                                      [{text,
                                        "Slist must at least contain one element for each replica that needs to be allocated."}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}}],
                             0,false},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,"\bdel_frag"}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  [321,68,101,108,101,116,101,115,32,97,32,
                                   102,114,97,103,109,101,110,116,32,102,114,
                                   111,109,32,97,32,102,114,97,103,109,101,
                                   110,116,101,100,32,116,97,98,108,101,46,32,
                                   65,108,108,32,114,101,99,111,114,100,115,
                                   32,105,110,32,116,104,101,32,108,97,115,
                                   116,32,102,114,97,103,109,101,110,116,32,
                                   97,114,101,32,109,111,118,101,100,32,116,
                                   111,32,111,110,101,32,111,102,32,116,104,
                                   101,32,111,116,104,101,114,32,102,114,97,
                                   103,109,101,110,116,115,46,32,65,108,108,
                                   32,111,116,104,101,114,32,102,114,97,103,
                                   109,101,110,116,101,100,32,116,97,98,108,
                                   101,115,44,32,119,104,105,99,104,32,114,
                                   101,102,101,114,32,116,111,32,116,104,105,
                                   115,32,116,97,98,108,101,32,105,110,32,116,
                                   104,101,105,114,32,102,111,114,101,105,103,
                                   110,32,107,101,121,44,32,97,117,116,111,
                                   109,97,116,105,99,97,108,108,121,32,108,
                                   111,115,101,32,116,104,101,105,114,32,108,
                                   97,115,116,32,102,114,97,103,109,101,110,
                                   116,46,32,65,108,115,111,44,32,116,104,101,
                                   105,114,32,114,101,99,111,114,100,115,32,
                                   97,114,101,32,100,121,110,97,109,105,99,97,
                                   108,108,121,32,114,101,104,97,115,104,101,
                                   100,32,105,110,32,116,104,101,32,115,97,
                                   109,101,32,109,97,110,110,101,114,32,97,
                                   115,32,102,111,114,32,116,104,101,32,109,
                                   97,105,110,32,116,97,98,108,101,46]}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,
                            [16,123,97,100,100,95,110,111,100,101,44,32,78,
                             111,100,101,125]}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  [14,65,100,100,115,32,97,32,110,111,100,101,
                                   32,116,111]}],
                                0,false},
                               {text,"\tnode_pool"},
                               {sep,
                                [{text,
                                  "?. The new node pool affects the list returned from the function"}],
                                0,false},
                               {text,"!mnesia:table_info(Tab, frag_dist)"},
                               {sep,[{text,[1,46]}],0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{text,
                          [16,123,100,101,108,95,110,111,100,101,44,32,78,111,
                           100,101,125]}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                [19,68,101,108,101,116,101,115,32,97,32,110,
                                 111,100,101,32,102,114,111,109]}],
                              0,false},
                             {text,"\tnode_pool"},
                             {sep,
                              [{text,
                                "?. The new node pool affects the list returned from the function"}],
                              0,false},
                             {text,"!mnesia:table_info(Tab, frag_dist)"},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}}}},
              {text,[5,60,47,100,108,62]}}],
            0,false},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,{text,"### Extensions of Existing Functions"},null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,[{text,"\fThe function"}],0,false},
                    {text,"0[mnesia:create_table/2](./mnesia#create_table/2)"},
                    {sep,
                     [{text,
                       "?creates a brand new fragmented table, by setting table property"}],
                     0,false},
                    {text,
                     [17,42,102,114,97,103,95,112,114,111,112,101,114,116,105,
                      101,115,42]},
                    {sep,
                     [{text,
                       [22,116,111,32,115,111,109,101,32,112,114,111,112,101,
                        114,32,118,97,108,117,101,115,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,[{text,"\fThe function"}],0,false},
                    {text,"0[mnesia:delete_table/1](./mnesia#delete_table/1)"},
                    {sep,
                     [{text,
                       [159,100,101,108,101,116,101,115,32,97,32,102,114,97,
                        103,109,101,110,116,101,100,32,116,97,98,108,101,32,
                        105,110,99,108,117,100,105,110,103,32,97,108,108,32,
                        105,116,115,32,102,114,97,103,109,101,110,116,115,46,
                        32,84,104,101,114,101,32,109,117,115,116,32,104,111,
                        119,101,118,101,114,32,110,111,116,32,101,120,105,115,
                        116,32,97,110,121,32,111,116,104,101,114,32,102,114,
                        97,103,109,101,110,116,101,100,32,116,97,98,108,101,
                        115,32,116,104,97,116,32,114,101,102,101,114,32,116,
                        111,32,116,104,105,115,32,116,97,98,108,101,32,105,
                        110,32,116,104,101,105,114,32,102,111,114,101,105,103,
                        110,32,107,101,121,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,[{text,"\fThe function"}],0,false},
                    {text,",[mnesia:table_info/2](./mnesia#table_info/2)"},
                    {sep,
                     [{text,
                       [20,110,111,119,32,117,110,100,101,114,115,116,97,110,
                        100,115,32,105,116,101,109]}],
                     0,false},
                    {text,
                     [17,42,102,114,97,103,95,112,114,111,112,101,114,116,105,
                      101,115,42]},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [15,73,102,32,116,104,101,32,102,117,110,99,116,105,
                        111,110]}],
                     0,false},
                    {text,
                     [21,42,109,110,101,115,105,97,58,116,97,98,108,101,95,
                      105,110,102,111,47,50,42]},
                    {sep,
                     [{text,",is started in the activity context of module"}],
                     0,false},
                    {text,"\r*mnesia_frag*"},
                    {sep,
                     [{text,
                       "3, information of several new items can be obtained:"}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,
               {text,[4,60,100,108,62]},
               {nest,4,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{text,[4,60,100,116,62]},
                                                {sep,
                                                 [{text,"\nbase_table"}],
                                                 0,false},
                                                {text,[5,60,47,100,116,62]}],
                                               0,true},
                                              null},
                                             null}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{text,[4,60,100,100,62]},
                                                {text,
                                                 " The name of the fragmented table"},
                                                {text,[5,60,47,100,100,62]}],
                                               0,true},
                                              null},
                                             null}}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{text,[4,60,100,116,62]},
                                               {sep,
                                                [{text,"\vn_fragments"}],
                                                0,false},
                                               {text,[5,60,47,100,116,62]}],
                                              0,true},
                                             null},
                                            null}}},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{text,[4,60,100,100,62]},
                                              {text,
                                               [30,84,104,101,32,97,99,116,
                                                117,97,108,32,110,117,109,98,
                                                101,114,32,111,102,32,102,114,
                                                97,103,109,101,110,116,115]},
                                              {text,[5,60,47,100,100,62]}],
                                             0,true},
                                            null},
                                           null}}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{text,[4,60,100,116,62]},
                                             {sep,
                                              [{text,"\tnode_pool"}],
                                              0,false},
                                             {text,[5,60,47,100,116,62]}],
                                            0,true},
                                           null},
                                          null}}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,100,62]},
                                            {text,
                                             [17,84,104,101,32,112,111,111,
                                              108,32,111,102,32,110,111,100,
                                              101,115]},
                                            {text,[5,60,47,100,100,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,116,62]},
                                           {sep,
                                            [{text,"\fn_ram_copies"}],
                                            0,false},
                                           {text,[5,60,47,100,116,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,100,62]},
                                          {text,[0]},
                                          {text,[5,60,47,100,100,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,116,62]},
                                         {sep,
                                          [{text,"\rn_disc_copies"}],
                                          0,false},
                                         {text,[5,60,47,100,116,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,100,62]},
                                        {text,[0]},
                                        {text,[5,60,47,100,100,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,
                                        [{text,
                                          [18,110,95,100,105,115,99,95,111,
                                           110,108,121,95,99,111,112,105,101,
                                           115]}],
                                        0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,100,62]},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{sep,
                                              [{text,
                                                "(The number of replicas with storage type"}],
                                              0,false},
                                             {text,"\nram_copies"},
                                             {sep,[{text,[1,44]}],0,false},
                                             {text,"\vdisc_copies"},
                                             {sep,
                                              [{text,[5,44,32,97,110,100]}],
                                              0,false},
                                             {text,
                                              [16,100,105,115,99,95,111,110,
                                               108,121,95,99,111,112,105,101,
                                               115]},
                                             {sep,
                                              [{text,
                                                [323,44,32,114,101,115,112,
                                                 101,99,116,105,118,101,108,
                                                 121,46,32,84,104,101,32,97,
                                                 99,116,117,97,108,32,118,97,
                                                 108,117,101,115,32,97,114,
                                                 101,32,100,121,110,97,109,
                                                 105,99,97,108,108,121,32,100,
                                                 101,114,105,118,101,100,32,
                                                 102,114,111,109,32,116,104,
                                                 101,32,102,105,114,115,116,
                                                 32,102,114,97,103,109,101,
                                                 110,116,46,32,84,104,101,32,
                                                 102,105,114,115,116,32,102,
                                                 114,97,103,109,101,110,116,
                                                 32,115,101,114,118,101,115,
                                                 32,97,115,32,97,32,112,114,
                                                 111,116,121,112,101,46,32,87,
                                                 104,101,110,32,116,104,101,
                                                 32,97,99,116,117,97,108,32,
                                                 118,97,108,117,101,115,32,
                                                 110,101,101,100,32,116,111,
                                                 32,98,101,32,99,111,109,112,
                                                 117,116,101,100,32,40,102,
                                                 111,114,32,101,120,97,109,
                                                 112,108,101,44,32,119,104,
                                                 101,110,32,97,100,100,105,
                                                 110,103,32,110,101,119,32,
                                                 102,114,97,103,109,101,110,
                                                 116,115,41,32,116,104,101,
                                                 121,32,97,114,101,32,100,101,
                                                 116,101,114,109,105,110,101,
                                                 100,32,98,121,32,99,111,117,
                                                 110,116,105,110,103,32,116,
                                                 104,101,32,110,117,109,98,
                                                 101,114,32,111,102,32,101,97,
                                                 99,104,32,114,101,112,108,
                                                 105,99,97,32,102,111,114,32,
                                                 101,97,99,104,32,115,116,111,
                                                 114,97,103,101,32,116,121,
                                                 112,101,46,32,84,104,105,115,
                                                 32,109,101,97,110,115,32,116,
                                                 104,97,116,32,119,104,101,
                                                 110,32,116,104,101,32,102,
                                                 117,110,99,116,105,111,110,
                                                 115]}],
                                              0,false},
                                             {text,
                                              [23,109,110,101,115,105,97,58,
                                               97,100,100,95,116,97,98,108,
                                               101,95,99,111,112,121,47,51]},
                                             {sep,[{text,[1,44]}],0,false},
                                             {text,
                                              [23,109,110,101,115,105,97,58,
                                               100,101,108,95,116,97,98,108,
                                               101,95,99,111,112,121,47,50]},
                                             {sep,
                                              [{text,[5,44,32,97,110,100]}],
                                              0,false},
                                             {text,
                                              [31,109,110,101,115,105,97,58,
                                               99,104,97,110,103,101,95,116,
                                               97,98,108,101,95,99,111,112,
                                               121,95,116,121,112,101,47,50]},
                                             {sep,
                                              [{text,
                                                "=are applied on the first fragment, it affects the settings on"}],
                                              0,false},
                                             {text,"\fn_ram_copies"},
                                             {sep,[{text,[1,44]}],0,false},
                                             {text,"\rn_disc_copies"},
                                             {sep,
                                              [{text,[5,44,32,97,110,100]}],
                                              0,false},
                                             {text,
                                              [18,110,95,100,105,115,99,95,
                                               111,110,108,121,95,99,111,112,
                                               105,101,115]},
                                             {sep,[{text,[1,46]}],0,false}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {text,[5,60,47,100,100,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,[{text,"\vforeign_key"}],0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{text,
                                            [15,84,104,101,32,102,111,114,101,
                                             105,103,110,32,107,101,121]}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,[{text,"\nforeigners"}],0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{text,
                                          ">All other tables that refer to this table in their foreign key"}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,[{text,"\nfrag_names"}],0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{text,
                                        [26,84,104,101,32,110,97,109,101,115,
                                         32,111,102,32,97,108,108,32,102,114,
                                         97,103,109,101,110,116,115]}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,"\tfrag_dist"}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        [16,65,32,115,111,114,116,101,100,32,
                                         108,105,115,116,32,111,102]}],
                                      0,false},
                                     {text,"\r{Node, Count}"},
                                     {sep,
                                      [{text,
                                        "$tuples that are sorted in increasing"}],
                                      0,false},
                                     {text,[5,67,111,117,110,116]},
                                     {sep,
                                      [{text,[6,111,114,100,101,114,46]}],
                                      0,false},
                                     {text,[5,67,111,117,110,116]},
                                     {sep,
                                      [{text,
                                        "His the total number of replicas that this fragmented table hosts on each"}],
                                      0,false},
                                     {text,[4,78,111,100,101]},
                                     {sep,
                                      [{text,
                                        "0. The list always contains at least all nodes in"}],
                                      0,false},
                                     {text,"\tnode_pool"},
                                     {sep,
                                      [{text,
                                        [29,46,32,78,111,100,101,115,32,116,
                                         104,97,116,32,100,111,32,110,111,116,
                                         32,98,101,108,111,110,103,32,116,
                                         111]}],
                                      0,false},
                                     {text,"\tnode_pool"},
                                     {sep,
                                      [{text,
                                        "&are put last in the list even if their"}],
                                      0,false},
                                     {text,[5,67,111,117,110,116]},
                                     {sep,[{text,"\tis lower."}],0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,[{text,"\tfrag_size"}],0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,[{text,"\tA list of"}],0,false},
                                   {text,"\f{Name, Size}"},
                                   {sep,[{text,"\rtuples, where"}],0,false},
                                   {text,[4,78,97,109,101]},
                                   {sep,[{text,"\ris a fragment"}],0,false},
                                   {text,[4,78,97,109,101]},
                                   {sep,[{text,[5,44,32,97,110,100]}],0,false},
                                   {text,[4,83,105,122,101]},
                                   {sep,
                                    [{text,
                                      [31,105,115,32,104,111,119,32,109,97,
                                       110,121,32,114,101,99,111,114,100,115,
                                       32,105,116,32,99,111,110,116,97,105,
                                       110,115]}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,"\vfrag_memory"}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,[{text,"\tA list of"}],0,false},
                                 {text,
                                  [14,123,78,97,109,101,44,32,77,101,109,111,
                                   114,121,125]},
                                 {sep,[{text,"\rtuples, where"}],0,false},
                                 {text,[4,78,97,109,101]},
                                 {sep,[{text,"\ris a fragment"}],0,false},
                                 {text,[4,78,97,109,101]},
                                 {sep,[{text,[5,44,32,97,110,100]}],0,false},
                                 {text,[6,77,101,109,111,114,121]},
                                 {sep,
                                  [{text,
                                    [30,105,115,32,104,111,119,32,109,117,99,
                                     104,32,109,101,109,111,114,121,32,105,
                                     116,32,111,99,99,117,112,105,101,115]}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,[{text,[4,115,105,122,101]}],0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,"\eTotal size of all fragments"}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,[{text,[6,109,101,109,111,114,121]}],0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              [29,84,111,116,97,108,32,109,101,109,111,114,
                               121,32,111,102,32,97,108,108,32,102,114,97,103,
                               109,101,110,116,115]}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}}}},
              {text,[5,60,47,100,108,62]}}],
            0,false},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {text,
                 [17,35,35,32,76,111,97,100,32,66,97,108,97,110,99,105,110,
                  103]},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     "ÃThere are several algorithms for distributing records in a fragmented table evenly over a pool of nodes. No one is best, it depends on the application needs. The following examples of situations need some attention:"}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,"\e*permanent change of nodes*"},
                    {sep,
                     [{text,
                       [22,46,32,87,104,101,110,32,97,32,110,101,119,32,112,
                        101,114,109,97,110,101,110,116]}],
                     0,false},
                    {text,"\t*db_node*"},
                    {sep,
                     [{text,
                       "Ãis introduced or dropped, it can be time to change the pool of nodes and redistribute the replicas evenly over the new pool of nodes. It can also be time to add or delete a fragment before the replicas are redistributed."}],
                     0,false}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [23,42,115,105,122,101,47,109,101,109,111,114,121,32,116,
                      104,114,101,115,104,111,108,100,42]},
                    {sep,
                     [{text,
                       "Ã. When the total size or total memory of a fragmented table (or a single fragment) exceeds some application-specific threshold, it can be time to add a new fragment dynamically to obtain a better distribution of records."}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [21,42,116,101,109,112,111,114,97,114,121,32,110,111,100,
                     101,32,100,111,119,110,42]},
                   {sep,
                    [{text,
                      "Ã. When a node temporarily goes down, it can be time to compensate some fragments with new replicas to keep the desired level of redundancy. When the node comes up again, it can be time to remove the superfluous replica."}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [20,42,111,118,101,114,108,111,97,100,32,116,104,114,101,
                    115,104,111,108,100,42]},
                  {sep,
                   [{text,
                     [345,46,32,87,104,101,110,32,116,104,101,32,108,111,97,
                      100,32,111,110,32,115,111,109,101,32,110,111,100,101,32,
                      101,120,99,101,101,100,115,32,115,111,109,101,32,97,112,
                      112,108,105,99,97,116,105,111,110,45,115,112,101,99,105,
                      102,105,99,32,116,104,114,101,115,104,111,108,100,44,32,
                      105,116,32,99,97,110,32,98,101,32,116,105,109,101,32,
                      116,111,32,101,105,116,104,101,114,32,97,100,100,32,111,
                      114,32,109,111,118,101,32,115,111,109,101,32,102,114,97,
                      103,109,101,110,116,32,114,101,112,108,105,99,97,115,32,
                      116,111,32,110,111,100,101,115,32,119,105,116,104,32,
                      108,111,119,101,114,32,108,111,97,100,46,32,84,97,107,
                      101,32,101,120,116,114,97,32,99,97,114,101,32,105,102,
                      32,116,104,101,32,116,97,98,108,101,32,104,97,115,32,97,
                      32,102,111,114,101,105,103,110,32,107,101,121,32,114,
                      101,108,97,116,105,111,110,32,116,111,32,115,111,109,
                      101,32,111,116,104,101,114,32,116,97,98,108,101,46,32,
                      84,111,32,97,118,111,105,100,32,115,101,118,101,114,101,
                      32,112,101,114,102,111,114,109,97,110,99,101,32,112,101,
                      110,97,108,116,105,101,115,44,32,116,104,101,32,115,97,
                      109,101,32,114,101,100,105,115,116,114,105,98,117,116,
                      105,111,110,32,109,117,115,116,32,98,101,32,112,101,114,
                      102,111,114,109,101,100,32,102,111,114,32,97,108,108,32,
                      116,104,101,32,114,101,108,97,116,101,100,32,116,97,98,
                      108,101,115,46]}],
                   0,false}],
                 0,false}],
               0,false}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       [16,85,115,101,32,116,104,101,32,102,117,110,99,116,
                        105,111,110]}],
                     0,false},
                    {text,
                     [28,42,109,110,101,115,105,97,58,99,104,97,110,103,101,
                      95,116,97,98,108,101,95,102,114,97,103,47,50,42]},
                    {sep,
                     [{text,
                       "Oto add new fragments and apply the usual schema manipulation functions (such as"}],
                     0,false},
                    {text,
                     "4[mnesia:add_table_copy/3](./mnesia#add_table_copy/3)"},
                    {sep,[{text,[1,44]}],0,false},
                    {text,
                     "4[mnesia:del_table_copy/2](./mnesia#del_table_copy/2)"},
                    {sep,[{text,[5,44,32,97,110,100]}],0,false},
                    {text,
                     "D[mnesia:change_table_copy_type/2](./mnesia#change_table_copy_type/3)"},
                    {sep,
                     [{text,
                       "8) on each fragment to perform the actual redistribution."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}}],
            0,false}],
          0,false}},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {text,
              [23,35,35,32,76,111,99,97,108,32,67,111,110,116,101,110,116,32,
               84,97,98,108,101,115]},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "Â¯Replicated tables have the same content on all nodes where they are replicated. However, it is sometimes advantageous to have tables, but different content on different nodes."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\fIf attribute"}],0,false},
                 {text,
                  [23,42,123,108,111,99,97,108,95,99,111,110,116,101,110,116,
                   44,32,116,114,117,101,125,42]},
                 {sep,
                  [{text,
                    "Â¸is specified when you create the table, the table resides on the nodes where you specify the table to exist, but the write operations on the table are only performed on the local copy."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [148,70,117,114,116,104,101,114,109,111,114,101,44,32,119,
                   104,101,110,32,116,104,101,32,116,97,98,108,101,32,105,115,
                   32,105,110,105,116,105,97,108,105,122,101,100,32,97,116,32,
                   115,116,97,114,116,117,112,44,32,116,104,101,32,116,97,98,
                   108,101,32,105,115,32,111,110,108,121,32,105,110,105,116,
                   105,97,108,105,122,101,100,32,108,111,99,97,108,108,121,44,
                   32,97,110,100,32,116,104,101,32,116,97,98,108,101,32,99,
                   111,110,116,101,110,116,32,105,115,32,110,111,116,32,99,
                   111,112,105,101,100,32,102,114,111,109,32,97,110,111,116,
                   104,101,114,32,110,111,100,101,46]}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [18,35,35,32,68,105,115,99,45,76,101,115,115,32,78,111,100,101,
              115]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,"\b*Mnesia*"},
                {sep,
                 [{text,
                   "8can be run on nodes that do not have a disc. Replicas of"}],
                 0,false},
                {text,"\r*disc_copies*"},
                {sep,[{text,[2,111,114]}],0,false},
                {text,
                 [18,42,100,105,115,99,95,111,110,108,121,95,99,111,112,105,
                  101,115,42]},
                {sep,
                 [{text,
                   "Fare not possible on such nodes. This is especially troublesome for the"}],
                 0,false},
                {text,"\b*schema*"},
                {sep,[{text,"\ttable, as"}],0,false},
                {text,"\b*Mnesia*"},
                {sep,
                 [{text,"&needs the schema to initialize itself."}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "vThe schema table can, as other tables, reside on one or more nodes. The storage type of the schema table can either be"}],
                 0,false},
                {text,"\r*disc_copies*"},
                {sep,[{text,[2,111,114]}],0,false},
                {text,"\f*ram_copies*"},
                {sep,[{text,"\b(but not"}],0,false},
                {text,
                 [18,42,100,105,115,99,95,111,110,108,121,95,99,111,112,105,
                  101,115,42]},
                {sep,
                 [{text,
                   [14,41,46,32,65,116,32,115,116,97,114,116,117,112,44]}],
                 0,false},
                {text,"\b*Mnesia*"},
                {sep,
                 [{text,
                   [308,117,115,101,115,32,105,116,115,32,115,99,104,101,109,
                    97,32,116,111,32,100,101,116,101,114,109,105,110,101,32,
                    119,105,116,104,32,119,104,105,99,104,32,110,111,100,101,
                    115,32,105,116,32,105,115,32,116,111,32,116,114,121,32,
                    116,111,32,101,115,116,97,98,108,105,115,104,32,99,111,
                    110,116,97,99,116,46,32,73,102,32,97,110,121,32,111,116,
                    104,101,114,32,110,111,100,101,32,105,115,32,115,116,97,
                    114,116,101,100,32,97,108,114,101,97,100,121,44,32,116,
                    104,101,32,115,116,97,114,116,105,110,103,32,110,111,100,
                    101,32,109,101,114,103,101,115,32,105,116,115,32,116,97,
                    98,108,101,32,100,101,102,105,110,105,116,105,111,110,115,
                    32,119,105,116,104,32,116,104,101,32,116,97,98,108,101,32,
                    100,101,102,105,110,105,116,105,111,110,115,32,98,114,111,
                    117,103,104,116,32,102,114,111,109,32,116,104,101,32,111,
                    116,104,101,114,32,110,111,100,101,115,46,32,84,104,105,
                    115,32,97,108,115,111,32,97,112,112,108,105,101,115,32,
                    116,111,32,116,104,101,32,100,101,102,105,110,105,116,105,
                    111,110,32,111,102,32,116,104,101,32,115,99,104,101,109,
                    97,32,116,97,98,108,101,32,105,116,115,101,108,102,46,32,
                    65,112,112,108,105,99,97,116,105,111,110,32,112,97,114,97,
                    109,101,116,101,114]}],
                 0,false},
                {text,
                 [16,42,101,120,116,114,97,95,100,98,95,110,111,100,101,115,
                  42]},
                {sep,
                 [{text,
                   [29,99,111,110,116,97,105,110,115,32,97,32,108,105,115,116,
                    32,111,102,32,110,111,100,101,115,32,116,104,97,116]}],
                 0,false},
                {text,"\b*Mnesia*"},
                {sep,
                 [{text,
                   "Oalso is to establish contact with besides those found in the schema. Default is"}],
                 0,false},
                {text,[4,42,91,93,42]},
                {sep,[{text,"\r(empty list)."}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "Â¤Hence, when a disc-less node needs to find the schema definitions from a remote node on the network, this information must be supplied through application parameter"}],
                 0,false},
                {text,"!*-mnesia extra_db_nodes NodeList*"},
                {sep,
                 [{text,"+. Without this configuration parameter set,"}],
                 0,false},
                {text,"\b*Mnesia*"},
                {sep,
                 [{text,
                   "2starts as a single node system. Also, the function"}],
                 0,false},
                {text,"2[mnesia:change_config/2](./mnesia#change_config/2)"},
                {sep,[{text," can be used to assign a value to"}],0,false},
                {text,
                 [16,42,101,120,116,114,97,95,100,98,95,110,111,100,101,115,
                  42]},
                {sep,
                 [{text,
                   [28,97,110,100,32,102,111,114,99,101,32,97,32,99,111,110,
                    110,101,99,116,105,111,110,32,97,102,116,101,114]}],
                 0,false},
                {text,"\b*Mnesia*"},
                {sep,
                 [{text,
                   [26,104,97,115,32,98,101,101,110,32,115,116,97,114,116,101,
                    100,44,32,116,104,97,116,32,105,115,44]}],
                 0,false},
                {text,"0*mnesia:change_config(extra_db_nodes, NodeList)*"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [21,65,112,112,108,105,99,97,116,105,111,110,32,112,97,114,
                    97,109,101,116,101,114]}],
                 0,false},
                {text,
                 [17,42,115,99,104,101,109,97,95,108,111,99,97,116,105,111,
                  110,42]},
                {sep,
                 [{text,
                   [14,99,111,110,116,114,111,108,115,32,119,104,101,114,
                    101]}],
                 0,false},
                {text,"\b*Mnesia*"},
                {sep,
                 [{text,
                   "Isearches for its schema. The parameter can be one of the following atoms:"}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {text,[4,60,100,108,62]},
           {nest,4,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[4,100,105,115,99]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                ":Mandatory disc. The schema is assumed to be located in the"}],
                              0,false},
                             {text,[6,77,110,101,115,105,97]},
                             {sep,
                              [{text,
                                ")directory. If the schema cannot be found,"}],
                              0,false},
                             {text,[6,77,110,101,115,105,97]},
                             {sep,
                              [{text,
                                [17,114,101,102,117,115,101,115,32,116,111,32,
                                 115,116,97,114,116,46]}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,[3,114,97,109]}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [273,77,97,110,100,97,116,111,114,121,32,82,65,
                               77,46,32,84,104,101,32,115,99,104,101,109,97,
                               32,114,101,115,105,100,101,115,32,105,110,32,
                               82,65,77,32,111,110,108,121,46,32,65,116,32,
                               115,116,97,114,116,117,112,44,32,97,32,116,105,
                               110,121,32,110,101,119,32,115,99,104,101,109,
                               97,32,105,115,32,103,101,110,101,114,97,116,
                               101,100,46,32,84,104,105,115,32,100,101,102,97,
                               117,108,116,32,115,99,104,101,109,97,32,99,111,
                               110,116,97,105,110,115,32,111,110,108,121,32,
                               116,104,101,32,100,101,102,105,110,105,116,105,
                               111,110,32,111,102,32,116,104,101,32,115,99,
                               104,101,109,97,32,116,97,98,108,101,32,97,110,
                               100,32,114,101,115,105,100,101,115,32,111,110,
                               32,116,104,101,32,108,111,99,97,108,32,110,111,
                               100,101,32,111,110,108,121,46,32,83,105,110,99,
                               101,32,110,111,32,111,116,104,101,114,32,110,
                               111,100,101,115,32,97,114,101,32,102,111,117,
                               110,100,32,105,110,32,116,104,101,32,100,101,
                               102,97,117,108,116,32,115,99,104,101,109,97,44,
                               32,99,111,110,102,105,103,117,114,97,116,105,
                               111,110,32,112,97,114,97,109,101,116,101,114]}],
                            0,false},
                           {text,
                            [14,101,120,116,114,97,95,100,98,95,110,111,100,
                             101,115]},
                           {sep,
                            [{text,
                              "Umust be used to let the node share its table definitions with other nodes. (Parameter"}],
                            0,false},
                           {text,
                            [14,101,120,116,114,97,95,100,98,95,110,111,100,
                             101,115]},
                           {sep,
                            [{text,"%can also be used on disc-full nodes.)"}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\bopt_disc"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            "[Optional disc. The schema can reside on either disc or RAM. If the schema is found on disc,"}],
                          0,false},
                         {text,[6,77,110,101,115,105,97]},
                         {sep,
                          [{text,
                            "pstarts as a disc-full node (the storage type of the schema table is disc_copies). If no schema is found on disc,"}],
                          0,false},
                         {text,[6,77,110,101,115,105,97]},
                         {sep,
                          [{text,
                            "Cstarts as a disc-less node (the storage type of the schema table is"}],
                          0,false},
                         {text,"\nram_copies"},
                         {sep,
                          [{text,
                            "/). The default for the application parameter is"}],
                          0,false},
                         {text,"\bopt_disc"},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}}}},
          {text,[5,60,47,100,108,62]}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,[{text,[4,87,104,101,110]}],0,false},
                {text,
                 [17,42,115,99,104,101,109,97,95,108,111,99,97,116,105,111,
                  110,42]},
                {sep,[{text,"\tis set to"}],0,false},
                {text,"\n*opt_disc*"},
                {sep,
                 [{text,
                   [14,44,32,116,104,101,32,102,117,110,99,116,105,111,110]}],
                 0,false},
                {text,
                 "D[mnesia:change_table_copy_type/3](./mnesia#change_table_copy_type/3)"},
                {sep,
                 [{text,
                   "Ucan be used to change the storage type of the schema. This is illustrated as follows:"}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {above,
             {above,
              {text,[3,96,96,96]},
              {sep,
               [{text,
                 [130,10,32,32,32,32,32,32,32,32,49,62,32,109,110,101,115,105,
                  97,58,115,116,97,114,116,40,41,46,10,32,32,32,32,32,32,32,
                  32,111,107,10,32,32,32,32,32,32,32,32,50,62,32,109,110,101,
                  115,105,97,58,99,104,97,110,103,101,95,116,97,98,108,101,95,
                  99,111,112,121,95,116,121,112,101,40,115,99,104,101,109,97,
                  44,32,110,111,100,101,40,41,44,32,100,105,115,99,95,99,111,
                  112,105,101,115,41,46,10,32,32,32,32,32,32,32,32,123,97,116,
                  111,109,105,99,44,32,111,107,125]}],
               0,true}},
             {text,[3,96,96,96]}},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [25,65,115,115,117,109,105,110,103,32,116,104,97,116,32,
                    116,104,101,32,99,97,108,108,32,116,111]}],
                 0,false},
                {text,"\"[mnesia:start/0](./mnesia#start/0)"},
                {sep,
                 [{text,"-does not find any schema to read on the disc,"}],
                 0,false},
                {text,"\b*Mnesia*"},
                {sep,
                 [{text,
                   "gstarts as a disc-less node, and then change it to a node that use the disc to store the schema locally."}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [31,35,35,32,77,111,114,101,32,97,98,111,117,116,32,83,99,104,101,
             109,97,32,77,97,110,97,103,101,109,101,110,116]},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(Nodes can be added to and removed from a"}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  "Gsystem. This can be done by adding a copy of the schema to those nodes."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rThe functions"}],0,false},
               {text,"4[mnesia:add_table_copy/3](./mnesia#add_table_copy/3)"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"4[mnesia:del_table_copy/2](./mnesia#del_table_copy/2)"},
               {sep,
                [{text,
                  [148,99,97,110,32,98,101,32,117,115,101,100,32,116,111,32,
                   97,100,100,32,97,110,100,32,100,101,108,101,116,101,32,114,
                   101,112,108,105,99,97,115,32,111,102,32,116,104,101,32,115,
                   99,104,101,109,97,32,116,97,98,108,101,46,32,65,100,100,
                   105,110,103,32,97,32,110,111,100,101,32,116,111,32,116,104,
                   101,32,108,105,115,116,32,111,102,32,110,111,100,101,115,
                   32,119,104,101,114,101,32,116,104,101,32,115,99,104,101,
                   109,97,32,105,115,32,114,101,112,108,105,99,97,116,101,100,
                   32,97,102,102,101,99,116,115,32,116,104,101,32,102,111,108,
                   108,111,119,105,110,103,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {text,"5It allows other tables to be replicated to this node."}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,"\tIt causes"}],0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                "9to try to contact the node at startup of disc-full nodes."}],
              0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [17,84,104,101,32,102,117,110,99,116,105,111,110,32,99,97,
                   108,108]}],
                0,false},
               {text,",*mnesia:del_table_copy(schema, mynode@host)*"},
               {sep,[{text,"\fdeletes node"}],0,false},
               {text,"\r*mynode@host*"},
               {sep,[{text,"\bfrom the"}],0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  [25,115,121,115,116,101,109,46,32,84,104,101,32,99,97,108,
                   108,32,102,97,105,108,115,32,105,102]}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,[{text,"\ris running on"}],0,false},
               {text,"\r*mynode@host*"},
               {sep,[{text,"\v. The other"}],0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  "enodes never try to connect to that node again. Notice that if there is a disc resident schema on node"}],
                0,false},
               {text,"\r*mynode@host*"},
               {sep,[{text,"\f, the entire"}],0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  ":directory is to be deleted. This is done with the function"}],
                0,false},
               {text,"2[mnesia:delete_schema/1](./mnesia#delete_schema/1)"},
               {sep,[{text,[4,46,32,73,102]}],0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  [24,105,115,32,115,116,97,114,116,101,100,32,97,103,97,105,
                   110,32,111,110,32,110,111,100,101]}],
                0,false},
               {text,"\r*mynode@host*"},
               {sep,
                [{text,
                  "7and the directory has not been cleared, the behavior of"}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,[{text,"\ris undefined."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"$If the storage type of the schema is"}],0,false},
               {text,"\f*ram_copies*"},
               {sep,
                [{text,
                  [28,44,32,116,104,97,116,32,105,115,44,32,97,32,100,105,115,
                   99,45,108,101,115,115,32,110,111,100,101,44]}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  "ldoes not use the disc on that particular node. The disc use is enabled by changing the storage type of table"}],
                0,false},
               {text,"\b*schema*"},
               {sep,[{text,[2,116,111]}],0,false},
               {text,"\r*disc_copies*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "4New schemas are created explicitly with the function"}],
                0,false},
               {text,"2[mnesia:create_schema/1](./mnesia#create_schema/1)"},
               {sep,
                [{text,
                  [25,111,114,32,105,109,112,108,105,99,105,116,108,121,32,98,
                   121,32,115,116,97,114,116,105,110,103]}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  "Â±without a disc resident schema. Whenever a table (including the schema table) is created, it is assigned its own unique cookie. The schema table is not created with the function"}],
                0,false},
               {text,"0[mnesia:create_table/2](./mnesia#create_table/2)"},
               {sep,
                [{text,
                  [17,97,115,32,110,111,114,109,97,108,32,116,97,98,108,101,
                   115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\vAt startup,"}],0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  [159,99,111,110,110,101,99,116,115,32,100,105,102,102,101,
                   114,101,110,116,32,110,111,100,101,115,32,116,111,32,101,
                   97,99,104,32,111,116,104,101,114,44,32,116,104,101,110,32,
                   116,104,101,121,32,101,120,99,104,97,110,103,101,32,116,97,
                   98,108,101,32,100,101,102,105,110,105,116,105,111,110,115,
                   32,119,105,116,104,32,101,97,99,104,32,111,116,104,101,114,
                   44,32,97,110,100,32,116,104,101,32,116,97,98,108,101,32,
                   100,101,102,105,110,105,116,105,111,110,115,32,97,114,101,
                   32,109,101,114,103,101,100,46,32,68,117,114,105,110,103,32,
                   116,104,101,32,109,101,114,103,101,32,112,114,111,99,101,
                   100,117,114,101,44]}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  "Â¦performs a sanity test to ensure that the table definitions are compatible with each other. If a table exists on several nodes, the cookie must be the same, otherwise"}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  [309,115,104,117,116,32,100,111,119,110,32,111,110,101,32,
                   111,102,32,116,104,101,32,110,111,100,101,115,46,32,84,104,
                   105,115,32,117,110,102,111,114,116,117,110,97,116,101,32,
                   115,105,116,117,97,116,105,111,110,32,111,99,99,117,114,
                   115,32,105,102,32,97,32,116,97,98,108,101,32,104,97,115,32,
                   98,101,101,110,32,99,114,101,97,116,101,100,32,111,110,32,
                   116,119,111,32,110,111,100,101,115,32,105,110,100,101,112,
                   101,110,100,101,110,116,108,121,32,111,102,32,101,97,99,
                   104,32,111,116,104,101,114,32,119,104,105,108,101,32,116,
                   104,101,121,32,119,101,114,101,32,100,105,115,99,111,110,
                   110,101,99,116,101,100,46,32,84,111,32,115,111,108,118,101,
                   32,116,104,105,115,44,32,111,110,101,32,111,102,32,116,104,
                   101,32,116,97,98,108,101,115,32,109,117,115,116,32,98,101,
                   32,100,101,108,101,116,101,100,32,40,97,115,32,116,104,101,
                   32,99,111,111,107,105,101,115,32,100,105,102,102,101,114,
                   44,32,105,116,32,105,115,32,114,101,103,97,114,100,101,100,
                   32,116,111,32,98,101,32,116,119,111,32,100,105,102,102,101,
                   114,101,110,116,32,116,97,98,108,101,115,32,101,118,101,
                   110,32,105,102,32,116,104,101,121,32,104,97,118,101,32,116,
                   104,101,32,115,97,109,101,32,110,97,109,101,41,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [141,77,101,114,103,105,110,103,32,100,105,102,102,101,114,
                   101,110,116,32,118,101,114,115,105,111,110,115,32,111,102,
                   32,116,104,101,32,115,99,104,101,109,97,32,116,97,98,108,
                   101,32,100,111,101,115,32,110,111,116,32,97,108,119,97,121,
                   115,32,114,101,113,117,105,114,101,32,116,104,101,32,99,
                   111,111,107,105,101,115,32,116,111,32,98,101,32,116,104,
                   101,32,115,97,109,101,46,32,73,102,32,116,104,101,32,115,
                   116,111,114,97,103,101,32,116,121,112,101,32,111,102,32,
                   116,104,101,32,115,99,104,101,109,97,32,116,97,98,108,101,
                   32,105,115]}],
                0,false},
               {text,"\r*disc_copies*"},
               {sep,
                [{text,"(, the cookie is immutable, and all other"}],
                0,false},
               {text,"\n*db_nodes*"},
               {sep,
                [{text,
                  "<must have the same cookie. When the schema is stored as type"}],
                0,false},
               {text,"\f*ram_copies*"},
               {sep,
                [{text,
                  ">, its cookie can be replaced with a cookie from another node ("}],
                0,false},
               {text,"\f*ram_copies*"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,"\r*disc_copies*"},
               {sep,
                [{text,
                  [131,41,46,32,84,104,101,32,99,111,111,107,105,101,32,114,
                   101,112,108,97,99,101,109,101,110,116,32,40,100,117,114,
                   105,110,103,32,109,101,114,103,101,32,111,102,32,116,104,
                   101,32,115,99,104,101,109,97,32,116,97,98,108,101,32,100,
                   101,102,105,110,105,116,105,111,110,41,32,105,115,32,112,
                   101,114,102,111,114,109,101,100,32,101,97,99,104,32,116,
                   105,109,101,32,97,32,82,65,77,32,110,111,100,101,32,99,111,
                   110,110,101,99,116,115,32,116,111,32,97,110,111,116,104,
                   101,114,32,110,111,100,101,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [31,70,117,114,116,104,101,114,44,32,116,104,101,32,102,111,
                 108,108,111,119,105,110,103,32,97,112,112,108,105,101,115,
                 58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "=[mnesia:system_info(schema_location)](./mnesia#system_info/1)"},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,
               "<[mnesia:system_info(extra_db_nodes)](./mnesia#system_info/1)"},
              {sep,
               [{text,"-can be used to determine the actual values of"}],
               0,false},
              {text,
               [17,42,115,99,104,101,109,97,95,108,111,99,97,116,105,111,110,
                42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,
               [16,42,101,120,116,114,97,95,100,98,95,110,111,100,101,115,42]},
              {sep,
               [{text,
                 [15,44,32,114,101,115,112,101,99,116,105,118,101,108,121,
                  46]}],
               0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"5[mnesia:system_info(use_dir)](./mnesia#system_info/1)"},
              {sep,[{text," can be used to determine whether"}],0,false},
              {text,"\b*Mnesia*"},
              {sep,
               [{text,
                 [21,105,115,32,97,99,116,117,97,108,108,121,32,117,115,105,
                  110,103,32,116,104,101]}],
               0,false},
              {text,"\b*Mnesia*"},
              {sep,[{text,"\ndirectory."}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"\t*use_dir*"},
             {sep,
              [{text,
                [29,99,97,110,32,98,101,32,100,101,116,101,114,109,105,110,
                 101,100,32,101,118,101,110,32,98,101,102,111,114,101]}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,[{text,"\vis started."}],0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fThe function"}],0,false},
               {text," [mnesia:info/0](./mnesia#info/0)"},
               {sep,
                [{text,
                  "<can now be used to print some system information even before"}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  [16,105,115,32,115,116,97,114,116,101,100,46,32,87,104,101,
                   110]}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,"1is started, the function prints more information."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "@Transactions that update the definition of a table requires that"}],
                0,false},
               {text,"\b*Mnesia*"},
               {sep,
                [{text,
                  "?is started on all nodes where the storage type of the schema is"}],
                0,false},
               {text,"\r*disc_copies*"},
               {sep,
                [{text,
                  "w. All replicas of the table on these nodes must also be loaded. There are a few exceptions to these availability rules:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {sep,
          [{text,[1,42]},
           {text,
            "]Tables can be created and new replicas can be added without starting all the disc-full nodes."}],
          0,false},
         {sep,
          [{text,[1,42]},
           {text,
            [134,78,101,119,32,114,101,112,108,105,99,97,115,32,99,97,110,32,
             98,101,32,97,100,100,101,100,32,98,101,102,111,114,101,32,97,108,
             108,32,111,116,104,101,114,32,114,101,112,108,105,99,97,115,32,
             111,102,32,116,104,101,32,116,97,98,108,101,32,104,97,118,101,32,
             98,101,101,110,32,108,111,97,100,101,100,44,32,112,114,111,118,
             105,100,101,100,32,116,104,97,116,32,97,116,32,108,101,97,115,
             116,32,111,110,101,32,111,116,104,101,114,32,114,101,112,108,105,
             99,97,32,105,115,32,97,99,116,105,118,101,46]}],
          0,false}}],
       0,false}},
     {sep,
      [{text,"+<a name=\"event_handling\">event_handling</a>"},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [24,35,35,32,77,110,101,115,105,97,32,69,118,101,110,116,32,72,97,
            110,100,108,105,110,103]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "@System events and table events are the two event categories that"}],
               0,false},
              {text,"\b*Mnesia*"},
              {sep,[{text," generates in various situations."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "7A user process can subscribe on the events generated by"}],
               0,false},
              {text,"\b*Mnesia*"},
              {sep,
               [{text,"+. The following two functions are provided:"}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {text,[4,60,100,108,62]},
         {nest,4,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text," mnesia:subscribe(Event-Category)"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{sep,
                     [{text,")Ensures that a copy of all events of type"}],
                     0,false},
                    {text,
                     [14,69,118,101,110,116,45,67,97,116,101,103,111,114,121]},
                    {sep,
                     [{text,
                       [31,97,114,101,32,115,101,110,116,32,116,111,32,116,
                        104,101,32,99,97,108,108,105,110,103,32,112,114,111,
                        99,101,115,115]}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,"\"mnesia:unsubscribe(Event-Category)"}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {sep,
                 [{sep,
                   [{text,"*Removes the subscription on events of type"}],
                   0,false},
                  {text,
                   [14,69,118,101,110,116,45,67,97,116,101,103,111,114,121]}],
                 0,false},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}}}},
        {text,[5,60,47,100,108,62]}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [16,42,69,118,101,110,116,45,67,97,116,101,103,111,114,121,42]},
              {sep,
               [{text,
                 [31,99,97,110,32,98,101,32,101,105,116,104,101,114,32,111,
                  102,32,116,104,101,32,102,111,108,108,111,119,105,110,103,
                  58]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,"\bThe atom"}],0,false},{text,"\b*system*"}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,"\bThe atom"}],0,false},{text,"\n*activity*"}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,"\tThe tuple"}],0,false},
             {text,
              [22,42,123,116,97,98,108,101,44,32,84,97,98,44,32,115,105,109,
               112,108,101,125,42]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,"\tThe tuple"}],0,false},
            {text,
             [24,42,123,116,97,98,108,101,44,32,84,97,98,44,32,100,101,116,97,
              105,108,101,100,125,42]}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [22,84,104,101,32,111,108,100,32,101,118,101,110,116,32,99,
                  97,116,101,103,111,114,121]}],
               0,false},
              {text,[14,42,123,116,97,98,108,101,44,32,84,97,98,125,42]},
              {sep,
               [{text,
                 [29,105,115,32,116,104,101,32,115,97,109,101,32,101,118,101,
                  110,116,32,99,97,116,101,103,111,114,121,32,97,115]}],
               0,false},
              {text,
               [22,42,123,116,97,98,108,101,44,32,84,97,98,44,32,115,105,109,
                112,108,101,125,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [134,84,104,101,32,115,117,98,115,99,114,105,98,101,32,102,
                  117,110,99,116,105,111,110,115,32,97,99,116,105,118,97,116,
                  101,32,97,32,115,117,98,115,99,114,105,112,116,105,111,110,
                  32,111,102,32,101,118,101,110,116,115,46,32,84,104,101,32,
                  101,118,101,110,116,115,32,97,114,101,32,100,101,108,105,
                  118,101,114,101,100,32,97,115,32,109,101,115,115,97,103,101,
                  115,32,116,111,32,116,104,101,32,112,114,111,99,101,115,115,
                  32,101,118,97,108,117,97,116,105,110,103,32,116,104,101,32,
                  102,117,110,99,116,105,111,110]}],
               0,false},
              {text,"*[mnesia:subscribe/1](./mnesia#subscribe/1)"},
              {sep,
               [{text,
                 [25,84,104,101,32,115,121,110,116,97,120,32,105,115,32,97,
                  115,32,102,111,108,108,111,119,115,58]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [30,42,123,109,110,101,115,105,97,95,115,121,115,116,101,109,95,
               101,118,101,110,116,44,32,69,118,101,110,116,125,42]},
             {sep,
              [{text,
                [17,102,111,114,32,115,121,115,116,101,109,32,101,118,101,110,
                 116,115]}],
              0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text," *{mnesia_activity_event, Event}*"},
             {sep,
              [{text,
                [19,102,111,114,32,97,99,116,105,118,105,116,121,32,101,118,
                 101,110,116,115]}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [29,42,123,109,110,101,115,105,97,95,116,97,98,108,101,95,101,
              118,101,110,116,44,32,69,118,101,110,116,125,42]},
            {sep,
             [{text,
               [16,102,111,114,32,116,97,98,108,101,32,101,118,101,110,116,
                115]}],
             0,false}],
           0,false}],
         0,false}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"3The event types are described in the next sections."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"'All system events are subscribed by the"}],
               0,false},
              {text,"\b*Mnesia*"},
              {text,"\v*gen_event*"},
              {sep,
               [{text,
                 [20,104,97,110,100,108,101,114,46,32,84,104,101,32,100,101,
                  102,97,117,108,116]}],
               0,false},
              {text,"\v*gen_event*"},
              {sep,[{text,"\nhandler is"}],0,false},
              {text,[14,42,109,110,101,115,105,97,95,101,118,101,110,116,42]},
              {sep,
               [{text,
                 "6, but it can be changed by using application parameter"}],
               0,false},
              {text,[14,42,101,118,101,110,116,95,109,111,100,117,108,101,42]},
              {sep,
               [{text,
                 "o. The value of this parameter must be the name of a module implementing a complete handler, as specified by the"}],
               0,false},
              {text,
               [24,91,103,101,110,95,101,118,101,110,116,93,40,46,47,103,101,
                110,95,101,118,101,110,116,41]},
              {sep,[{text,"\tmodule in"}],0,false},
              {text,"\b*STDLIB*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "9[mnesia:system_info(subscribers)](./mnesia#system_info/1)"},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,
               "<[mnesia:table_info(Tab, subscribers)](./mnesia#table_info/2)"},
              {sep,
               [{text,
                 "Jcan be used to determine which processes are subscribed to various events."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [16,35,35,32,83,121,115,116,101,109,32,69,118,101,110,116,115]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,[{text,"!The system events are as follows:"}],0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {text,[4,60,100,108,62]},
           {nest,4,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,
                                     [{text,
                                       [17,123,109,110,101,115,105,97,95,117,
                                        112,44,32,78,111,100,101,125]}],
                                     0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {sep,
                                     [{sep,
                                       [{text,
                                         [28,77,110,101,115,105,97,32,105,115,
                                          32,115,116,97,114,116,101,100,32,
                                          111,110,32,97,32,110,111,100,101,
                                          46]}],
                                       0,false},
                                      {text,[4,78,111,100,101]},
                                      {sep,
                                       [{text,
                                         "3is the node name. By default this event is ignored."}],
                                       0,false}],
                                     0,false},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,
                                    [{text,
                                      [19,123,109,110,101,115,105,97,95,100,
                                       111,119,110,44,32,78,111,100,101,125]}],
                                    0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {sep,
                                   [{sep,
                                     [{text,
                                       [28,77,110,101,115,105,97,32,105,115,
                                        32,115,116,111,112,112,101,100,32,111,
                                        110,32,97,32,110,111,100,101,46]}],
                                     0,false},
                                    {text,[4,78,111,100,101]},
                                    {sep,
                                     [{text,
                                       "3is the node name. By default this event is ignored."}],
                                     0,false}],
                                   0,false},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{text,
                                    "){mnesia_checkpoint_activated, Checkpoint}"}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {sep,
                                 [{sep,
                                   [{text,
                                     [26,65,32,99,104,101,99,107,112,111,105,
                                      110,116,32,119,105,116,104,32,116,104,
                                      101,32,110,97,109,101]}],
                                   0,false},
                                  {text,"\nCheckpoint"},
                                  {sep,
                                   [{text,
                                     "zis activated and the current node is involved in the checkpoint. Checkpoints can be activated explicitly with the function"}],
                                   0,false},
                                  {text,
                                   [28,109,110,101,115,105,97,58,97,99,116,
                                    105,118,97,116,101,95,99,104,101,99,107,
                                    112,111,105,110,116,47,49]},
                                  {sep,
                                   [{text,
                                     [141,111,114,32,105,109,112,108,105,99,
                                      105,116,108,121,32,97,116,32,98,97,99,
                                      107,117,112,44,32,119,104,101,110,32,97,
                                      100,100,105,110,103,32,116,97,98,108,
                                      101,32,114,101,112,108,105,99,97,115,44,
                                      32,97,116,32,105,110,116,101,114,110,97,
                                      108,32,116,114,97,110,115,102,101,114,
                                      32,111,102,32,100,97,116,97,32,98,101,
                                      116,119,101,101,110,32,110,111,100,101,
                                      115,44,32,97,110,100,32,115,111,32,111,
                                      110,46,32,66,121,32,100,101,102,97,117,
                                      108,116,32,116,104,105,115,32,101,118,
                                      101,110,116,32,105,115,32,105,103,110,
                                      111,114,101,100,46]}],
                                   0,false}],
                                 0,false},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{text,
                                  "+{mnesia_checkpoint_deactivated, Checkpoint}"}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {sep,
                               [{sep,
                                 [{text,
                                   [26,65,32,99,104,101,99,107,112,111,105,
                                    110,116,32,119,105,116,104,32,116,104,101,
                                    32,110,97,109,101]}],
                                 0,false},
                                {text,"\nCheckpoint"},
                                {sep,
                                 [{text,
                                   "~is deactivated and the current node is involved in the checkpoint. Checkpoints can be deactivated explicitly with the function"}],
                                 0,false},
                                {text,
                                 [19,109,110,101,115,105,97,58,100,101,97,99,
                                  116,105,118,97,116,101,47,49]},
                                {sep,
                                 [{text,
                                   [157,111,114,32,105,109,112,108,105,99,105,
                                    116,108,121,32,119,104,101,110,32,116,104,
                                    101,32,108,97,115,116,32,114,101,112,108,
                                    105,99,97,32,111,102,32,97,32,116,97,98,
                                    108,101,32,40,105,110,118,111,108,118,101,
                                    100,32,105,110,32,116,104,101,32,99,104,
                                    101,99,107,112,111,105,110,116,41,32,98,
                                    101,99,111,109,101,115,32,117,110,97,118,
                                    97,105,108,97,98,108,101,44,32,102,111,
                                    114,32,101,120,97,109,112,108,101,44,32,
                                    97,116,32,110,111,100,101,45,100,111,119,
                                    110,46,32,66,121,32,100,101,102,97,117,
                                    108,116,32,116,104,105,115,32,101,118,101,
                                    110,116,32,105,115,32,105,103,110,111,114,
                                    101,100,46]}],
                                 0,false}],
                               0,false},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                [26,123,109,110,101,115,105,97,95,111,118,101,
                                 114,108,111,97,100,44,32,68,101,116,97,105,
                                 108,115,125]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {sep,
                             [{above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{text,[6,77,110,101,115,105,97]},
                                     {sep,
                                      [{text,
                                        "Gon the current node is overloaded and the subscriber is to take action."}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        "kA typical overload situation occurs when the applications perform more updates on disc resident tables than"}],
                                      0,false},
                                     {text,[6,77,110,101,115,105,97]},
                                     {sep,
                                      [{text,
                                        [155,99,97,110,32,104,97,110,100,108,
                                         101,46,32,73,103,110,111,114,105,110,
                                         103,32,116,104,105,115,32,107,105,
                                         110,100,32,111,102,32,111,118,101,
                                         114,108,111,97,100,32,99,97,110,32,
                                         108,101,97,100,32,116,111,32,97,32,
                                         115,105,116,117,97,116,105,111,110,
                                         32,119,104,101,114,101,32,116,104,
                                         101,32,100,105,115,99,32,115,112,97,
                                         99,101,32,105,115,32,101,120,104,97,
                                         117,115,116,101,100,32,40,114,101,
                                         103,97,114,100,108,101,115,115,32,
                                         111,102,32,116,104,101,32,115,105,
                                         122,101,32,111,102,32,116,104,101,32,
                                         116,97,98,108,101,115,32,115,116,111,
                                         114,101,100,32,111,110,32,100,105,
                                         115,99,41,46]}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{text,
                                      [385,69,97,99,104,32,117,112,100,97,116,
                                       101,32,105,115,32,97,112,112,101,110,
                                       100,101,100,32,116,111,32,116,104,101,
                                       32,116,114,97,110,115,97,99,116,105,
                                       111,110,32,108,111,103,32,97,110,100,
                                       32,111,99,99,97,115,105,111,110,97,108,
                                       108,121,32,40,100,101,112,101,110,100,
                                       105,110,103,32,111,110,32,104,111,119,
                                       32,105,116,32,105,115,32,99,111,110,
                                       102,105,103,117,114,101,100,41,32,100,
                                       117,109,112,101,100,32,116,111,32,116,
                                       104,101,32,116,97,98,108,101,115,32,
                                       102,105,108,101,115,46,32,84,104,101,
                                       32,116,97,98,108,101,32,102,105,108,
                                       101,32,115,116,111,114,97,103,101,32,
                                       105,115,32,109,111,114,101,32,99,111,
                                       109,112,97,99,116,32,116,104,97,110,32,
                                       116,104,101,32,116,114,97,110,115,97,
                                       99,116,105,111,110,32,108,111,103,32,
                                       115,116,111,114,97,103,101,44,32,101,
                                       115,112,101,99,105,97,108,108,121,32,
                                       105,102,32,116,104,101,32,115,97,109,
                                       101,32,114,101,99,111,114,100,32,105,
                                       115,32,117,112,100,97,116,101,100,32,
                                       114,101,112,101,97,116,101,100,108,121,
                                       46,32,73,102,32,116,104,101,32,116,104,
                                       114,101,115,104,111,108,100,115,32,102,
                                       111,114,32,100,117,109,112,105,110,103,
                                       32,116,104,101,32,116,114,97,110,115,
                                       97,99,116,105,111,110,32,108,111,103,
                                       32,97,114,101,32,114,101,97,99,104,101,
                                       100,32,98,101,102,111,114,101,32,116,
                                       104,101,32,112,114,101,118,105,111,117,
                                       115,32,100,117,109,112,32,105,115,32,
                                       102,105,110,105,115,104,101,100,44,32,
                                       97,110,32,111,118,101,114,108,111,97,
                                       100,32,101,118,101,110,116,32,105,115,
                                       32,116,114,105,103,103,101,114,101,100,
                                       46]}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{text,
                                      [305,65,110,111,116,104,101,114,32,116,
                                       121,112,105,99,97,108,32,111,118,101,
                                       114,108,111,97,100,32,115,105,116,117,
                                       97,116,105,111,110,32,105,115,32,119,
                                       104,101,110,32,116,104,101,32,116,114,
                                       97,110,115,97,99,116,105,111,110,32,
                                       109,97,110,97,103,101,114,32,99,97,110,
                                       110,111,116,32,99,111,109,109,105,116,
                                       32,116,114,97,110,115,97,99,116,105,
                                       111,110,115,32,97,116,32,116,104,101,
                                       32,115,97,109,101,32,112,97,99,101,32,
                                       97,115,32,116,104,101,32,97,112,112,
                                       108,105,99,97,116,105,111,110,115,32,
                                       112,101,114,102,111,114,109,32,117,112,
                                       100,97,116,101,115,32,111,102,32,100,
                                       105,115,99,32,114,101,115,105,100,101,
                                       110,116,32,116,97,98,108,101,115,46,32,
                                       87,104,101,110,32,116,104,105,115,32,
                                       111,99,99,117,114,115,44,32,116,104,
                                       101,32,109,101,115,115,97,103,101,32,
                                       113,117,101,117,101,32,111,102,32,116,
                                       104,101,32,116,114,97,110,115,97,99,
                                       116,105,111,110,32,109,97,110,97,103,
                                       101,114,32,99,111,110,116,105,110,117,
                                       101,115,32,116,111,32,103,114,111,119,
                                       32,117,110,116,105,108,32,116,104,101,
                                       32,109,101,109,111,114,121,32,105,115,
                                       32,101,120,104,97,117,115,116,101,100,
                                       32,111,114,32,116,104,101,32,108,111,
                                       97,100,32,100,101,99,114,101,97,115,
                                       101,115,46]}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        [274,84,104,101,32,115,97,109,101,32,
                                         112,114,111,98,108,101,109,32,99,97,
                                         110,32,111,99,99,117,114,32,102,111,
                                         114,32,100,105,114,116,121,32,117,
                                         112,100,97,116,101,115,46,32,84,104,
                                         101,32,111,118,101,114,108,111,97,
                                         100,32,105,115,32,100,101,116,101,99,
                                         116,101,100,32,108,111,99,97,108,108,
                                         121,32,111,110,32,116,104,101,32,99,
                                         117,114,114,101,110,116,32,110,111,
                                         100,101,44,32,98,117,116,32,105,116,
                                         115,32,99,97,117,115,101,32,99,97,
                                         110,32,98,101,32,111,110,32,97,110,
                                         111,116,104,101,114,32,110,111,100,
                                         101,46,32,65,112,112,108,105,99,97,
                                         116,105,111,110,32,112,114,111,99,
                                         101,115,115,101,115,32,99,97,110,32,
                                         99,97,117,115,101,32,104,105,103,104,
                                         32,108,111,97,100,32,105,102,32,97,
                                         110,121,32,116,97,98,108,101,32,114,
                                         101,115,105,100,101,115,32,111,110,
                                         32,97,110,111,116,104,101,114,32,110,
                                         111,100,101,32,40,114,101,112,108,
                                         105,99,97,116,101,100,32,111,114,32,
                                         110,111,116,41,46,32,66,121,32,100,
                                         101,102,97,117,108,116,32,116,104,
                                         105,115,32,101,118,101,110,116,32,
                                         105,115,32,114,101,112,111,114,116,
                                         101,100,32,116,111]}],
                                      0,false},
                                     {text,"\rerror_logger."}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}}],
                             0,false},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,
                            [{text,"&{inconsistent_database, Context, Node}"}],
                            0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {sep,
                           [{text,[6,77,110,101,115,105,97]},
                            {sep,
                             [{text,
                               "Ã©regards the database as potential inconsistent and gives its applications a chance to recover from the inconsistency. For example, by installing a consistent backup as fallback and then restart the system. An alternative is to pick a"}],
                             0,false},
                            {text,"\nMasterNode"},
                            {sep,[{text,[4,102,114,111,109]}],0,false},
                            {text,
                             [28,109,110,101,115,105,97,58,115,121,115,116,
                              101,109,95,105,110,102,111,40,100,98,95,110,111,
                              100,101,115,41]},
                            {sep,[{text,"\nand invoke"}],0,false},
                            {text,"$mnesia:set_master_node([MasterNode])"},
                            {sep,
                             [{text,"$. By default an error is reported to"}],
                             0,false},
                            {text,"\ferror_logger"},
                            {sep,[{text,[1,46]}],0,false}],
                           0,false},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,"({mnesia_fatal, Format, Args, BinaryCore}"}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {sep,
                         [{above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,[6,77,110,101,115,105,97]},
                                 {sep,
                                  [{text,
                                    "Ldetected a fatal error and terminates soon. The fault reason is explained in"}],
                                  0,false},
                                 {text,[6,70,111,114,109,97,116]},
                                 {sep,[{text,[3,97,110,100]}],0,false},
                                 {text,[4,65,114,103,115]},
                                 {sep,
                                  [{text," , which can be given as input to"}],
                                  0,false},
                                 {text,"\vio:format/2"},
                                 {sep,[{text,"\nor sent to"}],0,false},
                                 {text,"\ferror_logger"},
                                 {sep,
                                  [{text,
                                    [26,46,32,66,121,32,100,101,102,97,117,
                                     108,116,32,105,116,32,105,115,32,115,101,
                                     110,116,32,116,111]}],
                                  0,false},
                                 {text,"\ferror_logger"},
                                 {sep,[{text,[1,46]}],0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,"\nBinaryCore"},
                                 {sep,
                                  [{text,
                                    "'is a binary containing a summary of the"}],
                                  0,false},
                                 {text,[6,77,110,101,115,105,97]},
                                 {sep,
                                  [{text,
                                    "Â°internal state at the time when the fatal error was detected. By default the binary is written to a unique filename on the current directory. On RAM nodes, the core is ignored."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}}],
                         0,false},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,[{text,"\e{mnesia_info, Format, Args}"}],0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {sep,
                       [{text,[6,77,110,101,115,105,97]},
                        {sep,
                         [{text,
                           "Zdetected something that can be of interest when debugging the system. This is explained in"}],
                         0,false},
                        {text,[6,70,111,114,109,97,116]},
                        {sep,[{text,[3,97,110,100]}],0,false},
                        {text,[4,65,114,103,115]},
                        {sep,
                         [{text,
                           [30,44,32,119,104,105,99,104,32,99,97,110,32,97,
                            112,112,101,97,114,32,97,115,32,105,110,112,117,
                            116,32,116,111]}],
                         0,false},
                        {text,"\vio:format/2"},
                        {sep,[{text,"\nor sent to"}],0,false},
                        {text,"\ferror_logger"},
                        {sep,
                         [{text,"'. By default this event is printed with"}],
                         0,false},
                        {text,"\vio:format/2"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{text,
                        [28,123,109,110,101,115,105,97,95,101,114,114,111,114,
                         44,32,70,111,114,109,97,116,44,32,65,114,103,115,
                         125]}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {sep,
                     [{text,[6,77,110,101,115,105,97]},
                      {sep,
                       [{text,
                         "7has detected an error. The fault reason is explained in"}],
                       0,false},
                      {text,[6,70,111,114,109,97,116]},
                      {sep,[{text,[3,97,110,100]}],0,false},
                      {text,[4,65,114,103,115]},
                      {sep,
                       [{text," , which can be given as input to"}],
                       0,false},
                      {text,"\vio:format/2"},
                      {sep,[{text,"\nor sent to"}],0,false},
                      {text,"\ferror_logger"},
                      {sep,
                       [{text,"&. By default this event is reported to"}],
                       0,false},
                      {text,"\ferror_logger"},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{text,
                      [20,123,109,110,101,115,105,97,95,117,115,101,114,44,32,
                       69,118,101,110,116,125]}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{sep,
                     [{text,"#An application started the function"}],
                     0,false},
                    {text,
                     [26,109,110,101,115,105,97,58,114,101,112,111,114,116,95,
                      101,118,101,110,116,40,69,118,101,110,116,41]},
                    {sep,[{text,[1,46]}],0,false},
                    {text,[5,69,118,101,110,116]},
                    {sep,
                     [{text,
                       ":can be any Erlang data structure. When tracing a system of"}],
                     0,false},
                    {text,[6,77,110,101,115,105,97]},
                    {sep,
                     [{text,
                       "Aapplications, it is useful to be able to interleave own events of"}],
                     0,false},
                    {text,[6,77,110,101,115,105,97]},
                    {sep,
                     [{text,
                       [141,119,105,116,104,32,97,112,112,108,105,99,97,116,
                        105,111,110,45,114,101,108,97,116,101,100,32,101,118,
                        101,110,116,115,32,116,104,97,116,32,103,105,118,101,
                        32,105,110,102,111,114,109,97,116,105,111,110,32,97,
                        98,111,117,116,32,116,104,101,32,97,112,112,108,105,
                        99,97,116,105,111,110,32,99,111,110,116,101,120,116,
                        46,32,87,104,101,110,101,118,101,114,32,116,104,101,
                        32,97,112,112,108,105,99,97,116,105,111,110,32,115,
                        116,97,114,116,115,32,119,105,116,104,32,97,32,110,
                        101,119,32,97,110,100,32,100,101,109,97,110,100,105,
                        110,103]}],
                     0,false},
                    {text,[6,77,110,101,115,105,97]},
                    {sep,
                     [{text,
                       "^activity, or enters a new and interesting phase in its execution, it can be a good idea to use"}],
                     0,false},
                    {text,
                     [21,109,110,101,115,105,97,58,114,101,112,111,114,116,95,
                      101,118,101,110,116,47,49]},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}}}},
          {text,[5,60,47,100,108,62]}}],
        0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,
             [18,35,35,32,65,99,116,105,118,105,116,121,32,69,118,101,110,116,
              115]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "4Currently, there is only one type of activity event:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {text,[4,60,100,108,62]},
           {nest,4,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     [22,123,99,111,109,112,108,101,116,101,44,32,65,99,116,
                      105,118,105,116,121,73,68,125]}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [306,84,104,105,115,32,101,118,101,110,116,32,
                               111,99,99,117,114,115,32,119,104,101,110,32,97,
                               32,116,114,97,110,115,97,99,116,105,111,110,32,
                               116,104,97,116,32,99,97,117,115,101,100,32,97,
                               32,109,111,100,105,102,105,99,97,116,105,111,
                               110,32,116,111,32,116,104,101,32,100,97,116,97,
                               98,97,115,101,32,105,115,32,99,111,109,112,108,
                               101,116,101,100,46,32,73,116,32,105,115,32,117,
                               115,101,102,117,108,32,102,111,114,32,100,101,
                               116,101,114,109,105,110,105,110,103,32,119,104,
                               101,110,32,97,32,115,101,116,32,111,102,32,116,
                               97,98,108,101,32,101,118,101,110,116,115,32,40,
                               115,101,101,32,116,104,101,32,110,101,120,116,
                               32,115,101,99,116,105,111,110,41,44,32,99,97,
                               117,115,101,100,32,98,121,32,97,32,103,105,118,
                               101,110,32,97,99,116,105,118,105,116,121,44,32,
                               104,97,118,101,32,98,101,101,110,32,115,101,
                               110,116,46,32,79,110,99,101,32,116,104,105,115,
                               32,101,118,101,110,116,32,105,115,32,114,101,
                               99,101,105,118,101,100,44,32,105,116,32,105,
                               115,32,103,117,97,114,97,110,116,101,101,100,
                               32,116,104,97,116,32,110,111,32,102,117,114,
                               116,104,101,114,32,116,97,98,108,101,32,101,
                               118,101,110,116,115,32,119,105,116,104,32,116,
                               104,101,32,115,97,109,101]}],
                            0,false},
                           {text,"\nActivityID"},
                           {sep,
                            [{text,
                              "kwill be received. Notice that this event can still be received even if no table events with a corresponding"}],
                            0,false},
                           {text,"\nActivityID"},
                           {sep,
                            [{text,
                              "Twere received, depending on the tables to which the receiving process is subscribed."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "SDirty operations always contain only one update and thus no activity event is sent."}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}}}},
          {text,[5,60,47,100,108,62]}}],
        0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {text,[15,35,35,32,84,97,98,108,101,32,69,118,101,110,116,115]},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "kTable events are events related to table updates. There are two types of table events, simple and detailed."}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,[{text,[3,84,104,101]}],0,false},
                {text,
                 [23,42,42,115,105,109,112,108,101,32,116,97,98,108,101,32,
                  101,118,101,110,116,115,42,42]},
                {sep,
                 [{text,
                   [15,97,114,101,32,116,117,112,108,101,115,32,108,105,107,
                    101]}],
                 0,false},
                {text,
                 [28,42,123,79,112,101,114,44,32,82,101,99,111,114,100,44,32,
                  65,99,116,105,118,105,116,121,73,100,125,42]},
                {sep,[{text,"\b, where:"}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,[6,42,79,112,101,114,42]},
               {sep,[{text,"\eis the operation performed."}],0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\b*Record*"},
               {sep,
                [{text,"(is the record involved in the operation."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"\f*ActivityId*"},
              {sep,
               [{text,
                 "<is the identity of the transaction performing the operation."}],
               0,false}],
             0,false}],
           0,false}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "7Notice that the record name is the table name even when"}],
                 0,false},
                {text,"\r*record_name*"},
                {sep,
                 [{text,
                   [20,104,97,115,32,97,110,111,116,104,101,114,32,115,101,
                    116,116,105,110,103,46]}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "7The table-related events that can occur are as follows:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {text,[4,60,100,108,62]},
           {nest,4,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         [30,123,119,114,105,116,101,44,32,78,101,119,82,101,
                          99,111,114,100,44,32,65,99,116,105,118,105,116,121,
                          73,100,125]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {sep,
                       [{sep,
                         [{text,
                           [30,65,32,110,101,119,32,114,101,99,111,114,100,32,
                            104,97,115,32,98,101,101,110,32,119,114,105,116,
                            116,101,110,46]}],
                         0,false},
                        {text,"\tNewRecord"},
                        {sep,
                         [{text,
                           [30,99,111,110,116,97,105,110,115,32,116,104,101,
                            32,110,101,119,32,114,101,99,111,114,100,32,118,
                            97,108,117,101,46]}],
                         0,false}],
                       0,false},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,
                      [{text,"&{delete_object, OldRecord, ActivityId}"}],
                      0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {sep,
                     [{sep,
                       [{text,"'A record has possibly been deleted with"}],
                       0,false},
                      {text,
                       [22,109,110,101,115,105,97,58,100,101,108,101,116,101,
                        95,111,98,106,101,99,116,47,49]},
                      {sep,[{text,[1,46]}],0,false},
                      {text,"\tOldRecord"},
                      {sep,
                       [{text,
                         "Â¤contains the value of the old record, as stated as argument by the application. Notice that other records with the same key can remain in the table if it is of type"}],
                       0,false},
                      {text,[3,98,97,103]},
                      {sep,[{text,[1,46]}],0,false}],
                     0,false},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text," {delete, {Tab, Key}, ActivityId}"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{sep,
                     [{text,
                       "HOne or more records have possibly been deleted. All records with the key"}],
                     0,false},
                    {text,[3,75,101,121]},
                    {sep,[{text,"\fin the table"}],0,false},
                    {text,[3,84,97,98]},
                    {sep,
                     [{text,
                       [18,104,97,118,101,32,98,101,101,110,32,100,101,108,
                        101,116,101,100,46]}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}}}},
          {text,[5,60,47,100,108,62]}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,[{text,[3,84,104,101]}],0,false},
                {text,
                 [25,42,42,100,101,116,97,105,108,101,100,32,116,97,98,108,
                  101,32,101,118,101,110,116,115,42,42]},
                {sep,
                 [{text,
                   [15,97,114,101,32,116,117,112,108,101,115,32,108,105,107,
                    101]}],
                 0,false},
                {text,",*{Oper, Table, Data, [OldRecs], ActivityId}*"},
                {sep,[{text,"\b, where:"}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {above,
            {above,
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,[6,42,79,112,101,114,42]},
                 {sep,[{text,"\eis the operation performed."}],0,false}],
                0,false}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,[7,42,84,97,98,108,101,42]},
                 {sep,
                  [{text,"'is the table involved in the operation."}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,[6,42,68,97,116,97,42]},
                {sep,[{text,"\"is the record/OID written/deleted."}],0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\t*OldRecs*"},
               {sep,
                [{text,"%is the contents before the operation."}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"\f*ActivityId*"},
              {sep,
               [{text,
                 "<is the identity of the transaction performing the operation."}],
               0,false}],
             0,false}],
           0,false}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "7The table-related events that can occur are as follows:"}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,
           {text,[4,60,100,108,62]},
           {nest,4,
            {above,
             {above,
              {above,
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       "3{write, Table, NewRecord, [OldRecords], ActivityId}"}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {sep,
                     [{sep,
                       [{text,
                         [30,65,32,110,101,119,32,114,101,99,111,114,100,32,
                          104,97,115,32,98,101,101,110,32,119,114,105,116,116,
                          101,110,46]}],
                       0,false},
                      {text,"\tNewRecord"},
                      {sep,
                       [{text,"!contains the new record value and"}],
                       0,false},
                      {text,"\nOldRecords"},
                      {sep,
                       [{text,
                         "ncontains the records before the operation is performed. Notice that the new content depends on the table type."}],
                       0,false}],
                     0,false},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{text,
                      "/{delete, Table, What, [OldRecords], ActivityId}"}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{sep,
                     [{text,"#Records have possibly been deleted."}],
                     0,false},
                    {text,[4,87,104,97,116]},
                    {sep,[{text,"\tis either"}],0,false},
                    {text,"\f{Table, Key}"},
                    {sep,[{text,"\vor a record"}],0,false},
                    {text,
                     [22,123,82,101,99,111,114,100,78,97,109,101,44,32,75,101,
                      121,44,32,46,46,46,125]},
                    {sep,
                     [{text,
                       "Hthat was deleted. Notice that the new content depends on the table type."}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}}}},
          {text,[5,60,47,100,108,62]}}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text," ## Debugging Mnesia Applications"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\vDebugging a"}],0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                "Ã¡application can be difficult for various reasons, primarily related to difficulties in understanding how the transaction and table load mechanisms work. Another source of confusion can be the semantics of nested transactions."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [18,84,104,101,32,100,101,98,117,103,32,108,101,118,101,108,
                 32,111,102]}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                [30,105,115,32,115,101,116,32,98,121,32,99,97,108,108,105,110,
                 103,32,116,104,101,32,102,117,110,99,116,105,111,110]}],
              0,false},
             {text,
              ";[mnesia:set_debug_level(Level)](./mnesia#set_debug_level/1)"},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[7,42,76,101,118,101,108,42]},
             {sep,
              [{text,
                [24,105,115,32,111,110,101,32,111,102,32,116,104,101,32,102,
                 111,108,108,111,119,105,110,103,58]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,[{text,[4,110,111,110,101]}],0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {text,"&No trace outputs. This is the default."},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,[7,118,101,114,98,111,115,101]}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {sep,
                        [{sep,
                          [{text,
                            "BActivates tracing of important debug events. These events generate"}],
                          0,false},
                         {text,"\e{mnesia_info, Format, Args}"},
                         {sep,
                          [{text,
                            "Hsystem events. Processes can subscribe to these events with the function"}],
                          0,false},
                         {text,
                          [18,109,110,101,115,105,97,58,115,117,98,115,99,114,
                           105,98,101,47,49]},
                         {sep,
                          [{text,"#. The events are always sent to the"}],
                          0,false},
                         {text,[6,77,110,101,115,105,97]},
                         {sep,
                          [{text,
                            [14,101,118,101,110,116,32,104,97,110,100,108,101,
                             114,46]}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[5,100,101,98,117,103]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {sep,
                      [{sep,
                        [{text,
                          "fActivates all events at the verbose level plus traces of all debug events. These debug events generate"}],
                        0,false},
                       {text,"\e{mnesia_info, Format, Args}"},
                       {sep,
                        [{text,
                          ";system events. Processes can subscribe to these events with"}],
                        0,false},
                       {text,
                        [18,109,110,101,115,105,97,58,115,117,98,115,99,114,
                         105,98,101,47,49]},
                       {sep,
                        [{text,"#. The events are always sent to the"}],
                        0,false},
                       {text,[6,77,110,101,115,105,97]},
                       {sep,
                        [{text,"'event handler. On this debug level, the"}],
                        0,false},
                       {text,[6,77,110,101,115,105,97]},
                       {sep,
                        [{text,
                          "@event handler starts subscribing to updates in the schema table."}],
                        0,false}],
                      0,false},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[5,116,114,97,99,101]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{sep,
                      [{text,
                        ";Activates all events at the debug level. On this level, the"}],
                      0,false},
                     {text,[6,77,110,101,115,105,97]},
                     {sep,
                      [{text,
                        "2event handler starts subscribing to updates on all"}],
                      0,false},
                     {text,[6,77,110,101,115,105,97]},
                     {sep,
                      [{text,
                        "ktables. This level is intended only for debugging small toy systems, as many large events can be generated."}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[5,102,97,108,115,101]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {text,
                  [18,65,110,32,97,108,105,97,115,32,102,111,114,32,110,111,
                   110,101,46]},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[4,116,114,117,101]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {text,
                [19,65,110,32,97,108,105,97,115,32,102,111,114,32,100,101,98,
                 117,103,46]},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [18,84,104,101,32,100,101,98,117,103,32,108,101,118,101,108,
                 32,111,102]}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                "`itself is also an application parameter, making it possible to start an Erlang system to turn on"}],
              0,false},
             {text,"\b*Mnesia*"},
             {sep,
              [{text,
                "?debug in the initial startup phase by using the following code:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,[{text,"\"\n      % erl -mnesia debug verbose"}],0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"!## Concurrent Processes in Mnesia"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "Â¿Programming concurrent Erlang systems is the subject of a separate book. However, it is worthwhile to draw attention to the following features, which permit concurrent processes to exist in a"}],
             0,false},
            {text,"\b*Mnesia*"},
            {sep,[{text,[7,115,121,115,116,101,109,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [298,65,32,103,114,111,117,112,32,111,102,32,102,117,110,99,
                   116,105,111,110,115,32,111,114,32,112,114,111,99,101,115,
                   115,101,115,32,99,97,110,32,98,101,32,99,97,108,108,101,
                   100,32,119,105,116,104,105,110,32,97,32,116,114,97,110,115,
                   97,99,116,105,111,110,46,32,65,32,116,114,97,110,115,97,99,
                   116,105,111,110,32,99,97,110,32,105,110,99,108,117,100,101,
                   32,115,116,97,116,101,109,101,110,116,115,32,116,104,97,
                   116,32,114,101,97,100,44,32,119,114,105,116,101,44,32,111,
                   114,32,100,101,108,101,116,101,32,100,97,116,97,32,102,114,
                   111,109,32,116,104,101,32,68,66,77,83,46,32,77,97,110,121,
                   32,115,117,99,104,32,116,114,97,110,115,97,99,116,105,111,
                   110,115,32,99,97,110,32,114,117,110,32,99,111,110,99,117,
                   114,114,101,110,116,108,121,44,32,97,110,100,32,116,104,
                   101,32,112,114,111,103,114,97,109,109,101,114,32,100,111,
                   101,115,32,110,111,116,32,110,101,101,100,32,116,111,32,
                   101,120,112,108,105,99,105,116,108,121,32,115,121,110,99,
                   104,114,111,110,105,122,101,32,116,104,101,32,112,114,111,
                   99,101,115,115,101,115,32,116,104,97,116,32,109,97,110,105,
                   112,117,108,97,116,101,32,116,104,101,32,100,97,116,97,
                   46]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [347,65,108,108,32,112,114,111,103,114,97,109,115,32,97,99,
                   99,101,115,115,105,110,103,32,116,104,101,32,100,97,116,97,
                   98,97,115,101,32,116,104,114,111,117,103,104,32,116,104,
                   101,32,116,114,97,110,115,97,99,116,105,111,110,32,115,121,
                   115,116,101,109,32,99,97,110,32,98,101,32,119,114,105,116,
                   116,101,110,32,97,115,32,105,102,32,116,104,101,121,32,104,
                   97,100,32,115,111,108,101,32,97,99,99,101,115,115,32,116,
                   111,32,116,104,101,32,100,97,116,97,46,32,84,104,105,115,
                   32,105,115,32,97,32,100,101,115,105,114,97,98,108,101,32,
                   112,114,111,112,101,114,116,121,44,32,97,115,32,97,108,108,
                   32,115,121,110,99,104,114,111,110,105,122,97,116,105,111,
                   110,32,105,115,32,116,97,107,101,110,32,99,97,114,101,32,
                   111,102,32,98,121,32,116,104,101,32,116,114,97,110,115,97,
                   99,116,105,111,110,32,104,97,110,100,108,101,114,46,32,73,
                   102,32,97,32,112,114,111,103,114,97,109,32,114,101,97,100,
                   115,32,111,114,32,119,114,105,116,101,115,32,100,97,116,97,
                   44,32,116,104,101,32,115,121,115,116,101,109,32,101,110,
                   115,117,114,101,115,32,116,104,97,116,32,110,111,32,111,
                   116,104,101,114,32,112,114,111,103,114,97,109,32,116,114,
                   105,101,115,32,116,111,32,109,97,110,105,112,117,108,97,
                   116,101,32,116,104,101,32,115,97,109,101,32,100,97,116,97,
                   32,97,116,32,116,104,101,32,115,97,109,101,32,116,105,109,
                   101,46]}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,
             [453,84,97,98,108,101,115,32,99,97,110,32,98,101,32,109,111,118,
              101,100,32,111,114,32,100,101,108,101,116,101,100,44,32,97,110,
              100,32,116,104,101,32,108,97,121,111,117,116,32,111,102,32,97,
              32,116,97,98,108,101,32,99,97,110,32,98,101,32,114,101,99,111,
              110,102,105,103,117,114,101,100,32,105,110,32,118,97,114,105,
              111,117,115,32,119,97,121,115,46,32,65,110,32,105,109,112,111,
              114,116,97,110,116,32,97,115,112,101,99,116,32,111,102,32,116,
              104,101,32,105,109,112,108,101,109,101,110,116,97,116,105,111,
              110,32,111,102,32,116,104,101,115,101,32,102,117,110,99,116,105,
              111,110,115,32,105,115,32,116,104,97,116,32,117,115,101,114,32,
              112,114,111,103,114,97,109,115,32,99,97,110,32,99,111,110,116,
              105,110,117,101,32,116,111,32,117,115,101,32,97,32,116,97,98,
              108,101,32,119,104,105,108,101,32,105,116,32,105,115,32,98,101,
              105,110,103,32,114,101,99,111,110,102,105,103,117,114,101,100,
              46,32,70,111,114,32,101,120,97,109,112,108,101,44,32,105,116,32,
              105,115,32,112,111,115,115,105,98,108,101,32,116,111,32,109,111,
              118,101,32,97,32,116,97,98,108,101,32,97,110,100,32,112,101,114,
              102,111,114,109,32,119,114,105,116,101,32,111,112,101,114,97,
              116,105,111,110,115,32,116,111,32,116,104,101,32,116,97,98,108,
              101,32,97,116,32,116,104,101,32,115,97,109,101,32,116,105,109,
              101,46,32,84,104,105,115,32,105,115,32,105,109,112,111,114,116,
              97,110,116,32,102,111,114,32,109,97,110,121,32,97,112,112,108,
              105,99,97,116,105,111,110,115,32,116,104,97,116,32,114,101,113,
              117,105,114,101,32,99,111,110,116,105,110,117,111,117,115,108,
              121,32,97,118,97,105,108,97,98,108,101,32,115,101,114,118,105,
              99,101,115,46,32,70,111,114,32,109,111,114,101,32,105,110,102,
              111,114,109,97,116,105,111,110,44,32,115,101,101]}],
           0,false},
          {text,
           "C[Transactions and Other Access Contexts](./Mnesia_chap4#trans_prop)"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[14,35,35,32,80,114,111,116,111,116,121,112,105,110,103]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"2If and when you would like to start and manipulate"}],
            0,false},
           {text,"\b*Mnesia*"},
           {sep,
            [{text,
              [314,44,32,105,116,32,105,115,32,111,102,116,101,110,32,101,97,
               115,105,101,114,32,116,111,32,119,114,105,116,101,32,116,104,
               101,32,100,101,102,105,110,105,116,105,111,110,115,32,97,110,
               100,32,100,97,116,97,32,105,110,116,111,32,97,110,32,111,114,
               100,105,110,97,114,121,32,116,101,120,116,32,102,105,108,101,
               46,32,73,110,105,116,105,97,108,108,121,44,32,110,111,32,116,
               97,98,108,101,115,32,97,110,100,32,110,111,32,100,97,116,97,32,
               101,120,105,115,116,44,32,111,114,32,119,104,105,99,104,32,116,
               97,98,108,101,115,32,97,114,101,32,114,101,113,117,105,114,101,
               100,46,32,65,116,32,116,104,101,32,105,110,105,116,105,97,108,
               32,115,116,97,103,101,115,32,111,102,32,112,114,111,116,111,
               116,121,112,105,110,103,44,32,105,116,32,105,115,32,112,114,
               117,100,101,110,116,32,116,111,32,119,114,105,116,101,32,97,
               108,108,32,100,97,116,97,32,105,110,116,111,32,111,110,101,32,
               102,105,108,101,44,32,112,114,111,99,101,115,115,32,116,104,97,
               116,32,102,105,108,101,44,32,97,110,100,32,104,97,118,101,32,
               116,104,101,32,100,97,116,97,32,105,110,32,116,104,101,32,102,
               105,108,101,32,105,110,115,101,114,116,101,100,32,105,110,116,
               111,32,116,104,101,32,100,97,116,97,98,97,115,101,46]}],
            0,false},
           {text,"\b*Mnesia*"},
           {sep,
            [{text,
              "tcan be initialized with data read from a text file. The following two functions can be used to work with text files."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,":[mnesia:load_textfile(Filename)](./mnesia#load_textfile/1)"},
         {sep,
          [{text,
            "Iloads a series of local table definitions and data found in the file into"}],
          0,false},
         {text,"\b*Mnesia*"},
         {sep,[{text,"\e. This function also starts"}],0,false},
         {text,"\b*Mnesia*"},
         {sep,
          [{text,
            "Pand possibly creates a new schema. The function operates on the local node only."}],
          0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "@[mnesia:dump_to_textfile(Filename)](./mnesia#dump_to_textfile/1)"},
         {sep,[{text,"\edumps all local tables of a"}],0,false},
         {text,"\b*Mnesia*"},
         {sep,
          [{text,
            "\\system into a text file, which can be edited (with a normal text editor) and later reloaded."}],
          0,false}],
        0,false}],
      0,false}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "MThese functions are much slower than the ordinary store and load functions of"}],
            0,false},
           {text,"\b*Mnesia*"},
           {sep,
            [{text,
              [150,46,32,72,111,119,101,118,101,114,44,32,116,104,105,115,32,
               105,115,32,109,97,105,110,108,121,32,105,110,116,101,110,100,
               101,100,32,102,111,114,32,109,105,110,111,114,32,101,120,112,
               101,114,105,109,101,110,116,115,32,97,110,100,32,105,110,105,
               116,105,97,108,32,112,114,111,116,111,116,121,112,105,110,103,
               46,32,84,104,101,32,109,97,106,111,114,32,97,100,118,97,110,
               116,97,103,101,32,111,102,32,116,104,101,115,101,32,102,117,
               110,99,116,105,111,110,115,32,105,115,32,116,104,97,116,32,116,
               104,101,121,32,97,114,101,32,101,97,115,121,32,116,111,32,117,
               115,101,46]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*The format of the text file is as follows:"}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "Â¨\n      {tables, [{Typename, [Options]},\n      {Typename2 ......}]}.\n      \n      {Typename, Attribute1, Attribute2 ....}.\n      {Typename, Attribute1, Attribute2 ....}."}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"\t*Options*"},
           {sep,[{text,"\fis a list of"}],0,false},
           {text,"\r*{Key,Value}*"},
           {sep,
            [{text,"5tuples conforming to the options that you can give to"}],
            0,false},
           {text,"0[mnesia:create_table/2](./mnesia#create_table/2)"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "iFor example, to start playing with a small database for healthy foods, enter the following data into file"}],
            0,false},
           {text,"\b*FRUITS*"},
           {sep,[{text,[1,58]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [272,10,10,123,116,97,98,108,101,115,44,10,32,91,123,102,114,117,
             105,116,44,32,91,123,97,116,116,114,105,98,117,116,101,115,44,32,
             91,110,97,109,101,44,32,99,111,108,111,114,44,32,116,97,115,116,
             101,93,125,93,125,44,10,32,32,123,118,101,103,101,116,97,98,108,
             101,44,32,91,123,97,116,116,114,105,98,117,116,101,115,44,32,91,
             110,97,109,101,44,32,99,111,108,111,114,44,32,116,97,115,116,101,
             44,32,112,114,105,99,101,93,125,93,125,93,125,46,10,10,10,123,
             102,114,117,105,116,44,32,111,114,97,110,103,101,44,32,111,114,
             97,110,103,101,44,32,115,119,101,101,116,125,46,10,123,102,114,
             117,105,116,44,32,97,112,112,108,101,44,32,103,114,101,101,110,
             44,32,115,119,101,101,116,125,46,10,123,118,101,103,101,116,97,
             98,108,101,44,32,99,97,114,114,111,116,44,32,111,114,97,110,103,
             101,44,32,99,97,114,114,111,116,105,115,104,44,32,50,46,53,53,
             125,46,10,123,118,101,103,101,116,97,98,108,101,44,32,112,111,
             116,97,116,111,44,32,121,101,108,108,111,119,44,32,110,111,110,
             101,44,32,48,46,52,53,125,46]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "AThe following session with the Erlang shell shows how to load the"}],
            0,false},
           {text,"\b*FRUITS*"},
           {sep,[{text,"\tdatabase:"}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [1346,10,32,32,32,32,32,32,37,32,101,114,108,10,32,32,32,32,32,32,
             69,114,108,97,110,103,32,40,66,69,65,77,41,32,101,109,117,108,97,
             116,111,114,32,118,101,114,115,105,111,110,32,52,46,57,10,32,10,
             32,32,32,32,32,32,69,115,104,101,108,108,32,86,52,46,57,32,32,40,
             97,98,111,114,116,32,119,105,116,104,32,94,71,41,10,32,32,32,32,
             32,32,49,62,32,109,110,101,115,105,97,58,108,111,97,100,95,116,
             101,120,116,102,105,108,101,40,34,70,82,85,73,84,83,34,41,46,10,
             32,32,32,32,32,32,78,101,119,32,116,97,98,108,101,32,102,114,117,
             105,116,10,32,32,32,32,32,32,78,101,119,32,116,97,98,108,101,32,
             118,101,103,101,116,97,98,108,101,10,32,32,32,32,32,32,123,97,
             116,111,109,105,99,44,111,107,125,10,32,32,32,32,32,32,50,62,32,
             109,110,101,115,105,97,58,105,110,102,111,40,41,46,10,32,32,32,
             32,32,32,45,45,45,62,32,80,114,111,99,101,115,115,101,115,32,104,
             111,108,100,105,110,103,32,108,111,99,107,115,32,60,45,45,45,32,
             10,32,32,32,32,32,32,45,45,45,62,32,80,114,111,99,101,115,115,
             101,115,32,119,97,105,116,105,110,103,32,102,111,114,32,108,111,
             99,107,115,32,60,45,45,45,32,10,32,32,32,32,32,32,45,45,45,62,32,
             80,101,110,100,105,110,103,32,40,114,101,109,111,116,101,41,32,
             116,114,97,110,115,97,99,116,105,111,110,115,32,60,45,45,45,32,
             10,32,32,32,32,32,32,45,45,45,62,32,65,99,116,105,118,101,32,40,
             108,111,99,97,108,41,32,116,114,97,110,115,97,99,116,105,111,110,
             115,32,60,45,45,45,10,32,32,32,32,32,32,45,45,45,62,32,85,110,99,
             101,114,116,97,105,110,32,116,114,97,110,115,97,99,116,105,111,
             110,115,32,60,45,45,45,32,10,32,32,32,32,32,32,45,45,45,62,32,65,
             99,116,105,118,101,32,116,97,98,108,101,115,32,60,45,45,45,32,10,
             32,32,32,32,32,32,118,101,103,101,116,97,98,108,101,32,32,32,32,
             32,32,58,32,119,105,116,104,32,50,32,114,101,99,111,114,100,115,
             32,111,99,99,117,112,105,110,103,32,50,57,57,32,119,111,114,100,
             115,32,111,102,32,109,101,109,32,10,32,32,32,32,32,32,102,114,
             117,105,116,32,32,32,32,32,32,32,32,32,32,58,32,119,105,116,104,
             32,50,32,114,101,99,111,114,100,115,32,111,99,99,117,112,105,110,
             103,32,50,57,49,32,119,111,114,100,115,32,111,102,32,109,101,109,
             32,10,32,32,32,32,32,32,115,99,104,101,109,97,32,32,32,32,32,32,
             32,32,32,58,32,119,105,116,104,32,51,32,114,101,99,111,114,100,
             115,32,111,99,99,117,112,105,110,103,32,52,48,49,32,119,111,114,
             100,115,32,111,102,32,109,101,109,32,10,32,32,32,32,32,32,61,61,
             61,62,32,83,121,115,116,101,109,32,105,110,102,111,32,105,110,32,
             118,101,114,115,105,111,110,32,34,49,46,49,34,44,32,100,101,98,
             117,103,32,108,101,118,101,108,32,61,32,110,111,110,101,32,60,61,
             61,61,10,32,32,32,32,32,32,111,112,116,95,100,105,115,99,46,32,
             68,105,114,101,99,116,111,114,121,32,34,47,118,97,114,47,116,109,
             112,47,77,110,101,115,105,97,46,110,111,110,111,100,101,64,110,
             111,104,111,115,116,34,32,105,115,32,117,115,101,100,46,10,32,32,
             32,32,32,32,117,115,101,32,102,97,108,108,98,97,99,107,32,97,116,
             32,114,101,115,116,97,114,116,32,61,32,102,97,108,115,101,10,32,
             32,32,32,32,32,114,117,110,110,105,110,103,32,100,98,32,110,111,
             100,101,115,32,61,32,91,110,111,110,111,100,101,64,110,111,104,
             111,115,116,93,10,32,32,32,32,32,32,115,116,111,112,112,101,100,
             32,100,98,32,110,111,100,101,115,32,61,32,91,93,32,10,32,32,32,
             32,32,32,114,101,109,111,116,101,32,32,32,32,32,32,32,32,32,32,
             32,61,32,91,93,10,32,32,32,32,32,32,114,97,109,95,99,111,112,105,
             101,115,32,32,32,32,32,32,32,61,32,91,102,114,117,105,116,44,118,
             101,103,101,116,97,98,108,101,93,10,32,32,32,32,32,32,100,105,
             115,99,95,99,111,112,105,101,115,32,32,32,32,32,32,61,32,91,115,
             99,104,101,109,97,93,10,32,32,32,32,32,32,100,105,115,99,95,111,
             110,108,121,95,99,111,112,105,101,115,32,61,32,91,93,10,32,32,32,
             32,32,32,91,123,110,111,110,111,100,101,64,110,111,104,111,115,
             116,44,100,105,115,99,95,99,111,112,105,101,115,125,93,32,61,32,
             91,115,99,104,101,109,97,93,10,32,32,32,32,32,32,91,123,110,111,
             110,111,100,101,64,110,111,104,111,115,116,44,114,97,109,95,99,
             111,112,105,101,115,125,93,32,61,32,91,102,114,117,105,116,44,
             118,101,103,101,116,97,98,108,101,93,10,32,32,32,32,32,32,51,32,
             116,114,97,110,115,97,99,116,105,111,110,115,32,99,111,109,109,
             105,116,116,101,100,44,32,48,32,97,98,111,114,116,101,100,44,32,
             48,32,114,101,115,116,97,114,116,101,100,44,32,50,32,108,111,103,
             103,101,100,32,116,111,32,100,105,115,99,10,32,32,32,32,32,32,48,
             32,104,101,108,100,32,108,111,99,107,115,44,32,48,32,105,110,32,
             113,117,101,117,101,59,32,48,32,108,111,99,97,108,32,116,114,97,
             110,115,97,99,116,105,111,110,115,44,32,48,32,114,101,109,111,
             116,101,10,32,32,32,32,32,32,48,32,116,114,97,110,115,97,99,116,
             105,111,110,115,32,119,97,105,116,115,32,102,111,114,32,111,116,
             104,101,114,32,110,111,100,101,115,58,32,91,93,10,32,32,32,32,32,
             32,111,107,10,32,32,32,32,32,32,51,62,32,10,32,32,32,32]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "DIt can be seen that the DBMS was initiated from a regular text file."}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"'## Object-Based Programming with Mnesia"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[3,84,104,101]}],0,false},
          {text,"\t*Company*"},
          {sep,
           [{text,
             [23,100,97,116,97,98,97,115,101,44,32,105,110,116,114,111,100,
              117,99,101,100,32,105,110]}],
           0,false},
          {text,"1[Getting Started](./Mnesia_chap2#getting_started)"},
          {sep,[{text,"', has three tables that store records ("}],0,false},
          {text,"\n*employee*"},
          {sep,[{text,[1,44]}],0,false},
          {text,[6,42,100,101,112,116,42]},
          {sep,[{text,[1,44]}],0,false},
          {text,"\t*project*"},
          {sep,
           [{text,".), and three tables that store relationships ("}],
           0,false},
          {text,"\t*manager*"},
          {sep,[{text,[1,44]}],0,false},
          {text,"\b*at_dep*"},
          {sep,[{text,[1,44]}],0,false},
          {text,"\t*in_proj*"},
          {sep,
           [{text,
             "_). This is a normalized data model, which has some advantages over a non-normalized data model."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "Ã¦It is more efficient to do a generalized search in a normalized database. Some operations are also easier to perform on a normalized data model. For example, one project can easily be removed, as the following example illustrates:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           [448,10,10,114,101,109,111,118,101,95,112,114,111,106,40,80,114,
            111,106,78,97,109,101,41,32,45,62,10,32,32,32,32,70,32,61,32,102,
            117,110,40,41,32,45,62,10,32,32,32,32,32,32,32,32,32,32,32,32,32,
            32,32,32,73,112,32,61,32,113,108,99,58,101,40,113,108,99,58,113,
            40,91,88,32,124,124,32,88,32,60,45,32,109,110,101,115,105,97,58,
            116,97,98,108,101,40,105,110,95,112,114,111,106,41,44,10,9,9,9,9,
            32,32,32,32,32,32,32,88,35,105,110,95,112,114,111,106,46,112,114,
            111,106,95,110,97,109,101,32,61,61,32,80,114,111,106,78,97,109,
            101,93,10,9,9,9,9,41,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,
            32,32,32,32,109,110,101,115,105,97,58,100,101,108,101,116,101,40,
            123,112,114,111,106,101,99,116,44,32,80,114,111,106,78,97,109,101,
            125,41,44,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,100,
            101,108,95,105,110,95,112,114,111,106,115,40,73,112,41,10,32,32,
            32,32,32,32,32,32,101,110,100,44,10,32,32,32,32,109,110,101,115,
            105,97,58,116,114,97,110,115,97,99,116,105,111,110,40,70,41,46,10,
            10,100,101,108,95,105,110,95,112,114,111,106,115,40,91,73,112,124,
            84,97,105,108,93,41,32,45,62,10,32,32,32,32,109,110,101,115,105,
            97,58,100,101,108,101,116,101,95,111,98,106,101,99,116,40,73,112,
            41,44,10,32,32,32,32,100,101,108,95,105,110,95,112,114,111,106,
            115,40,84,97,105,108,41,59,10,100,101,108,95,105,110,95,112,114,
            111,106,115,40,91,93,41,32,45,62,10,32,32,32,32,100,111,110,101,
            46]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "Â¨In reality, data models are seldom fully normalized. A realistic alternative to a normalized database model would be a data model that is not even in first normal form."}],
           0,false},
          {text,"\b*Mnesia*"},
          {sep,
           [{text,
             "tis suitable for applications such as telecommunications, because it is easy to organize data in a flexible manner. A"}],
           0,false},
          {text,"\b*Mnesia*"},
          {sep,
           [{text,
             "pdatabase is always organized as a set of tables. Each table is filled with rows, objects, and records. What sets"}],
           0,false},
          {text,"\b*Mnesia*"},
          {sep,
           [{text,
             "Â¹apart is that individual fields in a record can contain any type of compound data structures. An individual field in a record can contain lists, tuples, functions, and even record code."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "rMany telecommunications applications have unique requirements on lookup times for certain types of records. If the"}],
           0,false},
          {text,"\t*Company*"},
          {sep,
           [{text,
             "odatabase had been a part of a telecommunications system, it could be to minimize the lookup time of an employee"}],
           0,false},
          {text,"\f**together**"},
          {sep,
           [{text,
             [333,119,105,116,104,32,97,32,108,105,115,116,32,111,102,32,116,
              104,101,32,112,114,111,106,101,99,116,115,32,116,104,101,32,101,
              109,112,108,111,121,101,101,32,105,115,32,119,111,114,107,105,
              110,103,32,111,110,46,32,73,102,32,116,104,105,115,32,105,115,
              32,116,104,101,32,99,97,115,101,44,32,97,32,100,114,97,115,116,
              105,99,97,108,108,121,32,100,105,102,102,101,114,101,110,116,32,
              100,97,116,97,32,109,111,100,101,108,32,119,105,116,104,111,117,
              116,32,100,105,114,101,99,116,32,114,101,108,97,116,105,111,110,
              115,104,105,112,115,32,99,97,110,32,98,101,32,99,104,111,115,
              101,110,46,32,89,111,117,32,119,111,117,108,100,32,116,104,101,
              110,32,104,97,118,101,32,111,110,108,121,32,116,104,101,32,114,
              101,99,111,114,100,115,32,116,104,101,109,115,101,108,118,101,
              115,44,32,97,110,100,32,100,105,102,102,101,114,101,110,116,32,
              114,101,99,111,114,100,115,32,99,111,117,108,100,32,99,111,110,
              116,97,105,110,32,101,105,116,104,101,114,32,100,105,114,101,99,
              116,32,114,101,102,101,114,101,110,99,101,115,32,116,111,32,111,
              116,104,101,114,32,114,101,99,111,114,100,115,44,32,111,114,32,
              99,111,110,116,97,105,110,32,111,116,104,101,114,32,114,101,99,
              111,114,100,115,32,116,104,97,116,32,97,114,101,32,110,111,116,
              32,112,97,114,116,32,111,102,32,116,104,101]}],
           0,false},
          {text,"\b*Mnesia*"},
          {sep,[{text,[7,115,99,104,101,109,97,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0The following record definitions can be created:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           [361,10,10,45,114,101,99,111,114,100,40,101,109,112,108,111,121,
            101,101,44,32,123,101,109,112,95,110,111,44,10,9,9,32,32,32,110,
            97,109,101,44,10,9,9,32,32,32,115,97,108,97,114,121,44,10,9,9,32,
            32,32,115,101,120,44,10,9,9,32,32,32,112,104,111,110,101,44,10,9,
            9,32,32,32,114,111,111,109,95,110,111,44,10,9,9,32,32,32,100,101,
            112,116,44,10,9,9,32,32,32,112,114,111,106,101,99,116,115,44,10,9,
            9,32,32,32,109,97,110,97,103,101,114,125,41,46,10,9,9,32,32,32,10,
            10,45,114,101,99,111,114,100,40,100,101,112,116,44,32,123,105,100,
            44,32,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,110,97,109,
            101,125,41,46,10,10,45,114,101,99,111,114,100,40,112,114,111,106,
            101,99,116,44,32,123,110,97,109,101,44,10,32,32,32,32,32,32,32,32,
            32,32,32,32,32,32,32,32,32,32,110,117,109,98,101,114,44,10,32,32,
            32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,108,111,99,97,116,
            105,111,110,125,41,46,10]}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"8A record that describes an employee can look as follows:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "Ã¸\n        Me = #employee{emp_no= 104732,\n        name = klacke,\n        salary = 7,\n        sex = male,\n        phone = 99586,\n        room_no = {221, 015},\n        dept = 'B/SFR',\n        projects = [erlang, mnesia, otp],\n        manager = 114872},"}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [146,84,104,105,115,32,109,111,100,101,108,32,104,97,115,32,111,
            110,108,121,32,116,104,114,101,101,32,100,105,102,102,101,114,101,
            110,116,32,116,97,98,108,101,115,44,32,97,110,100,32,116,104,101,
            32,101,109,112,108,111,121,101,101,32,114,101,99,111,114,100,115,
            32,99,111,110,116,97,105,110,32,114,101,102,101,114,101,110,99,
            101,115,32,116,111,32,111,116,104,101,114,32,114,101,99,111,114,
            100,115,46,32,84,104,101,32,114,101,99,111,114,100,32,104,97,115,
            32,116,104,101,32,102,111,108,108,111,119,105,110,103,32,114,101,
            102,101,114,101,110,99,101,115,58]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,"\t*'B/SFR'*"},
         {sep,[{text,"\vrefers to a"}],0,false},
         {text,[6,42,100,101,112,116,42]},
         {sep,[{text,[7,114,101,99,111,114,100,46]}],0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [23,42,91,101,114,108,97,110,103,44,32,109,110,101,115,105,97,44,32,
           111,116,112,93,42]},
         {sep,
          [{text,"7is a list of three direct references to three different"}],
          0,false},
         {text,"\n*projects*"},
         {sep,[{text,"\brecords."}],0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,"\b*114872*"},
        {sep,[{text,"\"refers to another employee record."}],0,false}],
       0,false}],
     0,false}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[3,84,104,101]}],0,false},
          {text,"\b*Mnesia*"},
          {sep,
           [{text,
             [20,114,101,99,111,114,100,32,105,100,101,110,116,105,102,105,
              101,114,115,32,40]}],
           0,false},
          {text,"\f*{Tab, Key}*"},
          {sep,
           [{text,
             "9) can also be used as references. In this case, attribute"}],
           0,false},
          {text,[6,42,100,101,112,116,42]},
          {sep,
           [{text,
             [21,119,111,117,108,100,32,98,101,32,115,101,116,32,116,111,32,
              118,97,108,117,101]}],
           0,false},
          {text,[17,42,123,100,101,112,116,44,32,39,66,47,83,70,82,39,125,42]},
          {sep,[{text,"\ninstead of"}],0,false},
          {text,"\t*'B/SFR'*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "tWith this data model, some operations execute considerably faster than they do with the normalized data model in the"}],
           0,false},
          {text,"\t*Company*"},
          {sep,
           [{text,
             "Ãdatabase. However, some other operations become much more complicated. In particular, it becomes more difficult to ensure that records do not contain dangling pointers to other non-existent, or deleted, records."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             "mThe following code exemplifies a search with a non-normalized data model. To find all employees at department"}],
           0,false},
          {text,[5,42,68,101,112,42]},
          {sep,
           [{text,
             [25,119,105,116,104,32,97,32,115,97,108,97,114,121,32,104,105,
              103,104,101,114,32,116,104,97,110]}],
           0,false},
          {text,"\b*Salary*"},
          {sep,
           [{text,
             [25,44,32,117,115,101,32,116,104,101,32,102,111,108,108,111,119,
              105,110,103,32,99,111,100,101,58]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,
         [{text,
           "Ã¦\n\nget_emps(Salary, Dep) ->\n    Q = qlc:q( \n          [E || E <- mnesia:table(employee),\n                E#employee.salary > Salary,\n                E#employee.dept == Dep]\n\t ),\n    F = fun() -> qlc:e(Q) end,\n    transaction(F)."}],
         0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "QThis code is easier to write and to understand, and it also executes much faster."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [302,73,116,32,105,115,32,101,97,115,121,32,116,111,32,115,104,
              111,119,32,101,120,97,109,112,108,101,115,32,111,102,32,99,111,
              100,101,32,116,104,97,116,32,101,120,101,99,117,116,101,115,32,
              102,97,115,116,101,114,32,105,102,32,97,32,110,111,110,45,110,
              111,114,109,97,108,105,122,101,100,32,100,97,116,97,32,109,111,
              100,101,108,32,105,115,32,117,115,101,100,44,32,105,110,115,116,
              101,97,100,32,111,102,32,97,32,110,111,114,109,97,108,105,122,
              101,100,32,109,111,100,101,108,46,32,84,104,101,32,109,97,105,
              110,32,114,101,97,115,111,110,32,105,115,32,116,104,97,116,32,
              102,101,119,101,114,32,116,97,98,108,101,115,32,97,114,101,32,
              114,101,113,117,105,114,101,100,46,32,84,104,101,114,101,102,
              111,114,101,44,32,100,97,116,97,32,102,114,111,109,32,100,105,
              102,102,101,114,101,110,116,32,116,97,98,108,101,115,32,99,97,
              110,32,109,111,114,101,32,101,97,115,105,108,121,32,98,101,32,
              99,111,109,98,105,110,101,100,32,105,110,32,106,111,105,110,32,
              111,112,101,114,97,116,105,111,110,115,46,32,73,110,32,116,104,
              101,32,112,114,101,118,105,111,117,115,32,101,120,97,109,112,
              108,101,44,32,116,104,101,32,102,117,110,99,116,105,111,110]}],
           0,false},
          {text,"\f*get_emps/2*"},
          {sep,
           [{text,
             "}is transformed from a join operation into a simple query, which consists of a selection and a projection on one single table."}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
