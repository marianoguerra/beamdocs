{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [18,35,32,109,110,101,115,105,97,95,102,114,97,103,95,104,97,115,
          104]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [18,35,32,109,110,101,115,105,97,95,102,114,97,103,95,104,97,115,
          104]},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Defines mnesia_frag_hash callback behavior"}],0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "]This module defines a callback behavior for user-defined hash functions of fragmented tables."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,".Which module that is selected to implement the"}],
                  0,false},
                 {text,
                  [18,42,109,110,101,115,105,97,95,102,114,97,103,95,104,97,
                   115,104,42]},
                 {sep,
                  [{text,
                    "Obehavior for a particular fragmented table is specified together with the other"}],
                  0,false},
                 {text,
                  [17,42,102,114,97,103,95,112,114,111,112,101,114,116,105,
                   101,115,42]},
                 {sep,[{text,[5,46,32,84,104,101]}],0,false},
                 {text,"\r*hash_module*"},
                 {sep,
                  [{text,
                    [28,100,101,102,105,110,101,115,32,116,104,101,32,109,111,
                     100,117,108,101,32,110,97,109,101,46,32,84,104,101]}],
                  0,false},
                 {text,"\f*hash_state*"},
                 {sep,
                  [{text,
                    [31,100,101,102,105,110,101,115,32,116,104,101,32,105,110,
                     105,116,105,97,108,32,104,97,115,104,32,115,116,97,116,
                     101,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [158,84,104,105,115,32,109,111,100,117,108,101,32,105,109,
                   112,108,101,109,101,110,116,115,32,100,121,110,97,109,105,
                   99,32,104,97,115,104,105,110,103,44,32,119,104,105,99,104,
                   32,105,115,32,97,32,107,105,110,100,32,111,102,32,104,97,
                   115,104,105,110,103,32,116,104,97,116,32,103,114,111,119,
                   115,32,110,105,99,101,108,121,32,119,104,101,110,32,110,
                   101,119,32,102,114,97,103,109,101,110,116,115,32,97,114,
                   101,32,97,100,100,101,100,46,32,73,116,32,105,115,32,119,
                   101,108,108,32,115,117,105,116,101,100,32,102,111,114,32,
                   115,99,97,108,97,98,108,101,32,104,97,115,104,32,116,97,98,
                   108,101,115,46]}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"5## init_state(Tab, State) -> NewState | abort(Reason)"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Initiates the hash state for a new table."}],0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {sep,[{text,[1,42]},{sep,[{text,"\fTab = atom()"}],0,false}],0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[14,83,116,97,116,101,32,61,32,116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,78,101,119,83,116,97,116,101,32,61,32,116,101,114,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                ";Starts when a fragmented table is created with the function"}],
              0,false},
             {text,
              [23,42,109,110,101,115,105,97,58,99,114,101,97,116,101,95,116,
               97,98,108,101,47,50,42]},
             {sep,
              [{text,
                "Por when a normal (unfragmented) table is converted to be a fragmented table with"}],
              0,false},
             {text,
              [28,42,109,110,101,115,105,97,58,99,104,97,110,103,101,95,116,
               97,98,108,101,95,102,114,97,103,47,50,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [24,78,111,116,105,99,101,32,116,104,97,116,32,116,104,101,32,
                 102,117,110,99,116,105,111,110]}],
              0,false},
             {text,"\f*add_frag/2*"},
             {sep,
              [{text,
                "pis started one time for each of the other fragments (except number 1) as a part of the table creation procedure."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[7,42,83,116,97,116,101,42]},
             {sep,[{text,"\eis the initial value of the"}],0,false},
             {text,"\f*hash_state*"},
             {text,
              [15,42,102,114,97,103,95,112,114,111,112,101,114,116,121,42]},
             {sep,[{text,[1,46]}],0,false},
             {text,"\n*NewState*"},
             {sep,[{text,"\fis stored as"}],0,false},
             {text,"\f*hash_state*"},
             {sep,
              [{text,
                [15,97,109,111,110,103,32,116,104,101,32,111,116,104,101,
                 114]}],
              0,false},
             {text,
              [17,42,102,114,97,103,95,112,114,111,112,101,114,116,105,101,
               115,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "P## add_frag(State) -> {NewState, IterFrags, AdditionalLockFrags} | abort(Reason)"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Starts when a new fragment is added to a fragmented table."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[14,83,116,97,116,101,32,61,32,116,101,114,109,40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,78,101,119,83,116,97,116,101,32,61,32,116,101,114,109,40,
              41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [23,73,116,101,114,70,114,97,103,115,32,61,32,91,105,110,116,101,
             103,101,114,40,41,93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"!AdditionalLockFrags = [integer()]"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "}To scale well, it is a good idea to ensure that the records are evenly distributed over all fragments, including the new one."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\n*NewState*"},
             {sep,[{text,"\fis stored as"}],0,false},
             {text,"\f*hash_state*"},
             {sep,
              [{text,
                [15,97,109,111,110,103,32,116,104,101,32,111,116,104,101,
                 114]}],
              0,false},
             {text,
              [17,42,102,114,97,103,95,112,114,111,112,101,114,116,105,101,
               115,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,65,115,32,97,32,112,97,114,116,32,111,102,32,116,104,
                 101]}],
              0,false},
             {text,"\n*add_frag*"},
             {sep,
              [{text,
                "Bprocedure, Mnesia iterates over all fragments corresponding to the"}],
              0,false},
             {text,"\v*IterFrags*"},
             {sep,
              [{text,
                [18,110,117,109,98,101,114,115,32,97,110,100,32,115,116,97,
                 114,116,115]}],
              0,false},
             {text,"(*key_to_frag_number(NewState,RecordKey)*"},
             {sep,
              [{text,
                "lfor each record. If the new fragment differs from the old fragment, the record is moved to the new fragment."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[6,65,115,32,116,104,101]}],0,false},
             {text,"\n*add_frag*"},
             {sep,
              [{text,
                [141,112,114,111,99,101,100,117,114,101,32,105,115,32,97,32,
                 112,97,114,116,32,111,102,32,97,32,115,99,104,101,109,97,32,
                 116,114,97,110,115,97,99,116,105,111,110,44,32,77,110,101,
                 115,105,97,32,97,99,113,117,105,114,101,115,32,119,114,105,
                 116,101,32,108,111,99,107,115,32,111,110,32,116,104,101,32,
                 97,102,102,101,99,116,101,100,32,116,97,98,108,101,115,46,32,
                 84,104,97,116,32,105,115,44,32,98,111,116,104,32,116,104,101,
                 32,102,114,97,103,109,101,110,116,115,32,99,111,114,114,101,
                 115,112,111,110,100,105,110,103,32,116,111]}],
              0,false},
             {text,"\v*IterFrags*"},
             {sep,
              [{text,
                [26,97,110,100,32,116,104,111,115,101,32,99,111,114,114,101,
                 115,112,111,110,100,105,110,103,32,116,111]}],
              0,false},
             {text,
              [21,42,65,100,100,105,116,105,111,110,97,108,76,111,99,107,70,
               114,97,103,115,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "Q## del_frag(State) ->  {NewState, IterFrags, AdditionalLockFrags} | abort(Reason)"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            ":Starts when a fragment is deleted from a fragmented table."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[14,83,116,97,116,101,32,61,32,116,101,114,109,40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,78,101,119,83,116,97,116,101,32,61,32,116,101,114,109,40,
              41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [23,73,116,101,114,70,114,97,103,115,32,61,32,91,105,110,116,101,
             103,101,114,40,41,93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"!AdditionalLockFrags = [integer()]"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"\n*NewState*"},
             {sep,[{text,"\fis stored as"}],0,false},
             {text,"\f*hash_state*"},
             {sep,
              [{text,
                [15,97,109,111,110,103,32,116,104,101,32,111,116,104,101,
                 114]}],
              0,false},
             {text,
              [17,42,102,114,97,103,95,112,114,111,112,101,114,116,105,101,
               115,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,65,115,32,97,32,112,97,114,116,32,111,102,32,116,104,
                 101]}],
              0,false},
             {text,"\n*del_frag*"},
             {sep,
              [{text,
                "Bprocedure, Mnesia iterates over all fragments corresponding to the"}],
              0,false},
             {text,"\v*IterFrags*"},
             {sep,
              [{text,
                [18,110,117,109,98,101,114,115,32,97,110,100,32,115,116,97,
                 114,116,115]}],
              0,false},
             {text,"(*key_to_frag_number(NewState,RecordKey)*"},
             {sep,
              [{text,
                "lfor each record. If the new fragment differs from the old fragment, the record is moved to the new fragment."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "rNotice that all records in the last fragment must be moved to another fragment, as the entire fragment is deleted."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[6,65,115,32,116,104,101]}],0,false},
             {text,"\n*del_frag*"},
             {sep,
              [{text,
                [141,112,114,111,99,101,100,117,114,101,32,105,115,32,97,32,
                 112,97,114,116,32,111,102,32,97,32,115,99,104,101,109,97,32,
                 116,114,97,110,115,97,99,116,105,111,110,44,32,77,110,101,
                 115,105,97,32,97,99,113,117,105,114,101,115,32,119,114,105,
                 116,101,32,108,111,99,107,115,32,111,110,32,116,104,101,32,
                 97,102,102,101,99,116,101,100,32,116,97,98,108,101,115,46,32,
                 84,104,97,116,32,105,115,44,32,98,111,116,104,32,116,104,101,
                 32,102,114,97,103,109,101,110,116,115,32,99,111,114,114,101,
                 115,112,111,110,100,105,110,103,32,116,111]}],
              0,false},
             {text,"\v*IterFrags*"},
             {sep,
              [{text,
                [26,97,110,100,32,116,104,111,115,101,32,99,111,114,114,101,
                 115,112,111,110,100,105,110,103,32,116,111]}],
              0,false},
             {text,
              [21,42,65,100,100,105,116,105,111,110,97,108,76,111,99,107,70,
               114,97,103,115,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"<## key_to_frag_number(State, Key) -> FragNum | abort(Reason)"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"4Resolves the key of a record into a fragment number."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,70,114,97,103,78,117,109,32,61,32,105,110,116,101,103,101,114,
           40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "pStarts whenever Mnesia needs to determine which fragment a certain record belongs to. It is typically started at"}],
              0,false},
             {text,[6,42,114,101,97,100,42]},
             {sep,[{text,[1,44]}],0,false},
             {text,[7,42,119,114,105,116,101,42]},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,"\b*delete*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "K## match_spec_to_frag_numbers(State, MatchSpec) -> FragNums | abort(Reason)"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,"\nResolves a"}],0,false},
           {text,"\v*MatchSpec*"},
           {sep,[{text," into a list of fragment numbers."}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,[{text,"\"MatcSpec = ets_select_match_spec()"}],0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [20,70,114,97,103,78,117,109,115,32,61,32,91,70,114,97,103,78,117,
             109,93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [19,70,114,97,103,78,117,109,32,61,32,105,110,116,101,103,101,114,
            40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "iThis function is called whenever Mnesia needs to determine which fragments that need to be searched for a"}],
              0,false},
             {text,"\v*MatchSpec*"},
             {sep,[{text,"\e. It is typically called by"}],0,false},
             {text,"\b*select*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[14,42,109,97,116,99,104,95,111,98,106,101,99,116,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## See Also"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [21,91,109,110,101,115,105,97,40,51,41,93,40,46,47,109,110,101,115,
            105,97,41]}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
