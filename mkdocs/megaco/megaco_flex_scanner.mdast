{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [21,35,32,109,101,103,97,99,111,95,102,108,101,120,95,115,99,97,110,
          110,101,114]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [21,35,32,109,101,103,97,99,111,95,102,108,101,120,95,115,99,97,110,
          110,101,114]},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"6Interface module to the flex scanner linked in driver."}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [150,84,104,105,115,32,109,111,100,117,108,101,32,99,111,
                   110,116,97,105,110,115,32,116,104,101,32,112,117,98,108,
                   105,99,32,105,110,116,101,114,102,97,99,101,32,116,111,32,
                   116,104,101,32,102,108,101,120,32,115,99,97,110,110,101,
                   114,32,108,105,110,107,101,100,32,105,110,32,100,114,105,
                   118,101,114,46,32,84,104,101,32,102,108,101,120,32,115,99,
                   97,110,110,101,114,32,112,101,114,102,111,114,109,115,32,
                   116,104,101,32,115,99,97,110,110,105,110,103,32,112,104,97,
                   115,101,32,111,102,32,116,101,120,116,32,109,101,115,115,
                   97,103,101,32,100,101,99,111,100,105,110,103,46]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,"/The flex scanner is written using a tool called"}],
                  0,false},
                 {text,"\b**flex**"},
                 {sep,
                  [{text,
                    "X. In order to be able to compile the flex scanner driver, this tool has to be available."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "½By default the flex scanner reports line-number of an error. But it can be built without line-number reporting. Instead token number is used. This will speed up the scanning some 5-10%. Use"}],
                  0,false},
                 {text,"&*--disable-megaco-flex-scanner-lineno*"},
                 {sep,[{text,"!when configuring the application."}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "=The scanner will, by default, be built as a reentrant scanner"}],
                  0,false},
                 {text,[6,42,42,105,102,42,42]},
                 {sep,
                  [{text,
                    [142,116,104,101,32,102,108,101,120,32,117,116,105,108,
                     105,116,121,32,115,117,112,112,111,114,116,115,32,116,
                     104,105,115,32,40,105,116,32,100,101,112,101,110,100,115,
                     32,111,110,32,116,104,101,32,118,101,114,115,105,111,110,
                     32,111,102,32,102,108,101,120,41,46,32,73,116,32,105,115,
                     32,112,111,115,115,105,98,108,101,32,116,111,32,101,120,
                     112,108,105,99,105,116,108,121,32,100,105,115,97,98,108,
                     101,32,116,104,105,115,32,101,118,101,110,32,119,104,101,
                     110,32,102,108,101,120,32,115,117,112,112,111,114,116,32,
                     116,104,105,115,46,32,85,115,101]}],
                  0,false},
                 {text,")*--disable-megaco-reentrant-flex-scanner*"},
                 {sep,[{text,"!when configuring the application."}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## DATA TYPES"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            "B\n\nmegaco_ports() = term()\nmegaco_version() = integer() >= 1\n \n    "}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {text,
     [25,60,97,32,110,97,109,101,61,34,115,116,97,114,116,34,62,115,116,97,
      114,116,60,47,97,62]}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"1## start() -> {ok, PortOrPorts} | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [28,80,111,114,116,79,114,80,111,114,116,115,32,61,32,109,101,103,97,
          99,111,95,112,111,114,116,115,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "gThis function is used to start the flex scanner. It locates the library and loads the linked in driver."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "¾On a single core system or if it's a non-reentrant scanner, a single port is created. On a multi-core system with a reentrant scanner, several ports will be created (one for each scheduler)."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".Note that the process that calls this function"}],
             0,false},
            {text,"\b**must**"},
            {sep,
             [{text,
               "Fbe permanent. If it dies, the port(s) will exit and the driver unload."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,
      [23,60,97,32,110,97,109,101,61,34,115,116,111,112,34,62,115,116,111,112,
       60,47,97,62]}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,115,116,111,112,40,80,111,114,116,79,114,80,111,114,116,
        115,41,32,45,62,32,115,116,111,112,112,101,100]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [28,80,111,114,116,79,114,80,111,114,116,115,32,61,32,109,101,103,97,
         99,111,95,112,111,114,116,115,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "KThis function is used to stop the flex scanner. It also unloads the driver."}],
           0,false}],
         0,true},
        null},
       null}},
     {text,"7<a name=\"is_reentrant_enabled\">is_reentrant_enabled</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"$## is_reentrant_enabled() -> Boolean"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [19,66,111,111,108,101,97,110,32,61,32,98,111,111,108,101,97,110,40,
         41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"%Is the flex scanner reentrant or not."}],0,false}],
         0,true},
        null},
       null}},
     {text,"-<a name=\"is_scanner_port\">is_scanner_port</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"0## is_scanner_port(Port, PortOrPorts) -> Boolean"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {above,
    {above,
     {sep,[{text,[1,42]},{sep,[{text,"\rPort = port()"}],0,false}],0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [28,80,111,114,116,79,114,80,111,114,116,115,32,61,32,109,101,103,
           97,99,111,95,112,111,114,116,115,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,66,111,111,108,101,97,110,32,61,32,98,111,111,108,101,97,110,40,
          41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "MChecks if a port is a flex scanner port or not (useful when if a port exits)."}],
           0,false}],
         0,true},
        null},
       null}},
     {text,
      [23,60,97,32,110,97,109,101,61,34,115,99,97,110,34,62,115,99,97,110,60,
       47,97,62]}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "_## scan(Binary, PortOrPorts) -> {ok, Tokens, Version, LatestLine} | {error, Reason, LatestLine}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,66,105,110,97,114,121,32,61,32,98,105,110,97,114,121,40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [28,80,111,114,116,79,114,80,111,114,116,115,32,61,32,109,101,
              103,97,99,111,95,112,111,114,116,115,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,84,111,107,101,110,115,32,61,32,108,105,115,116,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [26,86,101,114,115,105,111,110,32,61,32,109,101,103,97,99,111,95,
            118,101,114,115,105,111,110,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [22,76,97,116,101,115,116,76,105,110,101,32,61,32,105,110,116,101,
           103,101,114,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "MScans a megaco message and generates a token list to be passed on the parser."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
