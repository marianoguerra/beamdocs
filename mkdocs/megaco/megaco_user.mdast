{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r# megaco_user"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r# megaco_user"},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"3Callback module for users of the Megaco application"}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [136,84,104,105,115,32,109,111,100,117,108,101,32,100,101,
                   102,105,110,101,115,32,116,104,101,32,99,97,108,108,98,97,
                   99,107,32,98,101,104,97,118,105,111,117,114,32,111,102,32,
                   77,101,103,97,99,111,32,117,115,101,114,115,46,32,65,32,
                   109,101,103,97,99,111,95,117,115,101,114,32,99,111,109,112,
                   108,105,97,110,116,32,99,97,108,108,98,97,99,107,32,109,
                   111,100,117,108,101,32,109,117,115,116,32,101,120,112,111,
                   114,116,32,116,104,101,32,102,111,108,108,111,119,105,110,
                   103,32,102,117,110,99,116,105,111,110,115,58]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{text,
                         [30,91,104,97,110,100,108,101,95,99,111,110,110,101,
                          99,116,47,50,44,51,93,40,35,99,111,110,110,101,99,
                          116,41]}],
                       0,false}],
                     0,false},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{text,"\"[handle_disconnect/3](#disconnect)"}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,"([handle_syntax_error/3,4](#syntax_error)"}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,"*[handle_message_error/3,4](#message_error)"}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,"*[handle_trans_request/3,4](#trans_request)"}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "4[handle_trans_long_request/3,4](#trans_long_request)"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,"&[handle_trans_reply/4,5](#trans_reply)"}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,[{text,"\"[handle_trans_ack/4,5](#trans_ack)"}],0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,"0[handle_unexpected_trans/3,4](#unexpected_trans)"}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,"0[handle_trans_request_abort/4,5](#request_abort)"}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"*[handle_segment_reply/5,6](#segment_reply)"}],
              0,false}],
            0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "EThe semantics of them and their exact signatures are explained below."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[3,84,104,101]}],0,false},
                 {text,"\v*user_args*"},
                 {sep,
                  [{text,
                    "Â©configuration parameter which may be used to extend the argument list of the callback functions. For example, the handle_connect function takes by default two arguments:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,"-\n        handle_connect(Handle, Version)\n    "}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\nbut if the"}],0,false},
                 {text,"\v*user_args*"},
                 {sep,
                  [{text,"*parameter is set to a longer list, such as"}],
                  0,false},
                 {text,
                  [24,42,91,83,111,109,101,80,105,100,44,83,111,109,101,84,97,
                   98,108,101,82,101,102,93,42]},
                 {sep,
                  [{text,
                    "o, the callback function is expected to have these (in this case two) extra arguments last in the argument list:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "D\n        handle_connect(Handle, Version, SomePid, SomeTableRef)\n    "}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {text,"+<a name=\"extra_argument\">extra_argument</a>"},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,"+Must of the functions below has an optional"}],
                    0,false},
                   {text,[7,42,69,120,116,114,97,42]},
                   {sep,
                    [{text,
                      [14,97,114,103,117,109,101,110,116,32,40,101,46,103,
                       46]}],
                    0,false},
                   {text,".[handle_unexpected_trans/4](#unexpected_trans)"},
                   {sep,
                    [{text,
                      "]). The functions which takes this argument will be called if and only if one of the functions"}],
                    0,false},
                   {text,"-[receive_message/5](./megaco#receive_message)"},
                   {sep,[{text,[2,111,114]}],0,false},
                   {text,
                    "?[process_received_message/5](./megaco#process_received_message)"},
                   {sep,
                    [{text,
                      [19,119,97,115,32,99,97,108,108,101,100,32,119,105,116,
                       104,32,116,104,101]}],
                    0,false},
                   {text,[7,42,69,120,116,114,97,42]},
                   {sep,
                    [{text,
                      [23,97,114,103,117,109,101,110,116,32,100,105,102,102,
                       101,114,101,110,116,32,116,104,97,110]}],
                    0,false},
                   {text,
                    [14,42,105,103,110,111,114,101,95,101,120,116,114,97,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## DATA TYPES"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,
            [138,10,97,99,116,105,111,110,95,114,101,113,117,101,115,116,40,
             41,32,61,32,35,39,65,99,116,105,111,110,82,101,113,117,101,115,
             116,39,123,125,10,97,99,116,105,111,110,95,114,101,112,108,121,
             40,41,32,61,32,35,39,65,99,116,105,111,110,82,101,112,108,121,39,
             123,125,10,101,114,114,111,114,95,100,101,115,99,40,41,32,61,32,
             35,39,69,114,114,111,114,68,101,115,99,114,105,112,116,111,114,
             39,123,125,10,115,101,103,109,101,110,116,95,110,111,40,41,32,61,
             32,105,110,116,101,103,101,114,40,41,10,32,32,32,32]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,[{text,"*\nconn_handle() = #megaco_conn_handle{}    "}],0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text," The record initially returned by"}],0,false},
           {text,
            [20,42,109,101,103,97,99,111,58,99,111,110,110,101,99,116,47,52,
             44,53,42]},
           {sep,
            [{text,
              "b. It identifies a \"virtual\" connection and may be reused after a reconnect (disconnect + connect)."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,[{text,"#\nprotocol_version() = integer()    "}],0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [133,73,115,32,116,104,101,32,97,99,116,117,97,108,32,112,114,111,
             116,111,99,111,108,32,118,101,114,115,105,111,110,46,32,73,110,
             32,109,111,115,116,32,99,97,115,101,115,32,116,104,101,32,112,
             114,111,116,111,99,111,108,32,118,101,114,115,105,111,110,32,105,
             115,32,114,101,116,114,105,101,118,101,100,32,102,114,111,109,32,
             116,104,101,32,112,114,111,99,101,115,115,101,100,32,109,101,115,
             115,97,103,101,44,32,98,117,116,32,116,104,101,114,101,32,97,114,
             101,32,101,120,99,101,112,116,105,111,110,115,58]}],
          0,false}],
        0,true},
       null},
      null}},
    null,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,[{text,[4,87,104,101,110]}],0,false},
          {text,
           [20,42,104,97,110,100,108,101,95,99,111,110,110,101,99,116,47,50,
            44,51,42]},
          {sep,[{text,"#is triggered by an explicit call to"}],0,false},
          {text,
           [20,42,109,101,103,97,99,111,58,99,111,110,110,101,99,116,47,52,44,
            53,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [21,42,104,97,110,100,108,101,95,100,105,115,99,111,110,110,101,99,
            116,47,51,42]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [23,42,104,97,110,100,108,101,95,115,121,110,116,97,120,95,101,114,
           114,111,114,47,51,42]}],
        0,false}],
      0,false}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "iIn these cases, the ProtocolVersion default version is obtained from the static connection configuration:"}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,"0*megaco:conn_info(ConnHandle, protocol_version)*"},
        {sep,[{text,[1,46]}],0,false}],
       0,false}],
     0,false},
    {text,
     [29,60,97,32,110,97,109,101,61,34,99,111,110,110,101,99,116,34,62,99,111,
      110,110,101,99,116,60,47,97,62]}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "Q## handle_connect(ConnHandle, ProtocolVersion) -> ok | error | {error,ErrorDescr}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "Y## handle_connect(ConnHandle, ProtocolVersion, Extra]) -> ok | error | {error,ErrorDescr}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,",Invoked when a new connection is established"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [26,67,111,110,110,72,97,110,100,108,101,32,61,32,99,111,110,110,
            95,104,97,110,100,108,101,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"$ProtocolVersion = protocol_version()"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [25,69,114,114,111,114,68,101,115,99,114,32,61,32,101,114,114,111,
           114,95,100,101,115,99,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Invoked when a new connection is established"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [144,67,111,110,110,101,99,116,105,111,110,115,32,109,97,121,32,
              101,105,116,104,101,114,32,98,101,32,101,115,116,97,98,108,105,
              115,104,101,100,32,98,121,32,97,110,32,101,120,112,108,105,99,
              105,116,32,99,97,108,108,32,116,111,32,109,101,103,97,99,111,58,
              99,111,110,110,101,99,116,47,52,32,111,114,32,105,109,112,108,
              105,99,105,116,108,121,32,97,116,32,116,104,101,32,102,105,114,
              115,116,32,105,110,118,111,99,97,116,105,111,110,32,111,102,32,
              109,101,103,97,99,111,58,114,101,99,101,105,118,101,95,109,101,
              115,115,97,103,101,47,51,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "mNormally a Media Gateway (MG) connects explicitly while a Media Gateway Controller (MGC) connects implicitly."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [149,65,116,32,116,104,101,32,77,101,100,105,97,32,71,97,116,
                101,119,97,121,32,67,111,110,116,114,111,108,108,101,114,32,
                40,77,71,67,41,32,115,105,100,101,32,105,116,32,105,115,32,
                112,111,115,115,105,98,108,101,32,116,111,32,114,101,106,101,
                99,116,32,97,32,99,111,110,110,101,99,116,105,111,110,32,114,
                101,113,117,101,115,116,32,40,97,110,100,32,115,101,110,100,
                32,97,32,109,101,115,115,97,103,101,32,101,114,114,111,114,32,
                114,101,112,108,121,32,116,111,32,116,104,101,32,103,97,116,
                101,119,97,121,41,32,98,121,32,114,101,116,117,114,110,105,
                110,103]}],
             0,false},
            {text,
             [21,42,123,101,114,114,111,114,44,32,69,114,114,111,114,68,101,
              115,99,114,125,42]},
            {sep,[{text,"\tor simply"}],0,false},
            {text,[7,42,101,114,114,111,114,42]},
            {sep,
             [{text,
               "Â¸which generates an error descriptor with code 402 (unauthorized) and reason \"Connection refused by user\" (this is also the case for all unknown results, such as exit signals or throw)."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [23,91,110,111,116,101,93,40,35,101,120,116,114,97,95,97,114,103,
              117,109,101,110,116,41]},
            {sep,
             [{text,
               [15,97,98,111,118,101,32,97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,[{text,"\vargument in"}],0,false},
            {text,
             [24,42,104,97,110,100,108,101,95,109,101,115,115,97,103,101,95,
              101,114,114,111,114,47,52,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [18,42,104,97,110,100,108,101,95,99,111,110,110,101,99,116,47,51,
              42]},
            {sep,[{text,[5,40,119,105,116,104]}],0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,
             [{text,"1) can also be called as a result of a call to the"}],
             0,false},
            {text,"$[megaco:connect/5](./megaco#connect)"},
            {sep,
             [{text,"-function (if that function is called with the"}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,
             [{text,
               [23,97,114,103,117,109,101,110,116,32,100,105,102,102,101,114,
                101,110,116,32,116,104,97,110]}],
             0,false},
            {text,[14,42,105,103,110,111,114,101,95,101,120,116,114,97,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,"#<a name=\"disconnect\">disconnect</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "?## handle_disconnect(ConnHandle, ProtocolVersion, Reason) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"(Invoked when a connection is teared down"}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [26,67,111,110,110,72,97,110,100,108,101,32,61,32,99,111,110,110,95,
           104,97,110,100,108,101,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,[{text,"$ProtocolVersion = protocol_version()"}],0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"(Invoked when a connection is teared down"}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [140,84,104,101,32,100,105,115,99,111,110,110,101,99,116,32,109,
              97,121,32,101,105,116,104,101,114,32,98,101,32,109,97,100,101,
              32,101,120,112,108,105,99,105,116,108,121,32,98,121,32,97,32,99,
              97,108,108,32,116,111,32,109,101,103,97,99,111,58,100,105,115,
              99,111,110,110,101,99,116,47,50,32,111,114,32,105,109,112,108,
              105,99,105,116,108,121,32,119,104,101,110,32,116,104,101,32,99,
              111,110,116,114,111,108,32,112,114,111,99,101,115,115,32,111,
              102,32,116,104,101,32,99,111,110,110,101,99,116,105,111,110,32,
              100,105,101,115,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {text,"'<a name=\"syntax_error\">syntax_error</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "t## handle_syntax_error(ReceiveHandle, ProtocolVersion, DefaultED) -> reply | {reply, ED} | no_reply | {no_reply, ED}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "{## handle_syntax_error(ReceiveHandle, ProtocolVersion, DefaultED, Extra) -> reply | {reply, ED} | no_reply | {no_reply, ED}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"1Invoked when a received message had syntax errors"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,[{text," ReceiveHandle = receive_handle()"}],0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"$ProtocolVersion = protocol_version()"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [24,68,101,102,97,117,108,116,69,68,32,61,32,101,114,114,111,114,
            95,100,101,115,99,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,69,68,32,61,32,101,114,114,111,114,95,100,101,115,99,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"1Invoked when a received message had syntax errors"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [273,73,110,99,111,109,105,110,103,32,109,101,115,115,97,103,101,
              115,32,105,115,32,100,101,108,105,118,101,114,101,100,32,98,121,
              32,109,101,103,97,99,111,58,114,101,99,101,105,118,101,95,109,
              101,115,115,97,103,101,47,52,32,97,110,100,32,110,111,114,109,
              97,108,108,121,32,100,101,99,111,100,101,100,32,115,117,99,99,
              101,115,115,102,117,108,108,121,46,32,66,117,116,32,105,102,32,
              116,104,101,32,100,101,99,111,100,105,110,103,32,102,97,105,108,
              101,100,32,116,104,105,115,32,102,117,110,99,116,105,111,110,32,
              105,115,32,99,97,108,108,101,100,32,105,110,32,111,114,100,101,
              114,32,116,111,32,100,101,99,105,100,101,32,105,102,32,116,104,
              101,32,111,114,105,103,105,110,97,116,111,114,32,115,104,111,
              117,108,100,32,103,101,116,32,97,32,114,101,112,108,121,32,109,
              101,115,115,97,103,101,32,40,114,101,112,108,121,41,32,111,114,
              32,105,102,32,116,104,101,32,114,101,112,108,121,32,115,105,108,
              101,110,116,108,121,32,115,104,111,117,108,100,32,98,101,32,100,
              105,115,99,97,114,100,101,100,32,40,110,111,95,114,101,112,108,
              121,41,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ÃSyntax errors are detected locally on this side of the protocol and may have many causes, e.g. a malfunctioning transport layer, wrong encoder/decoder selected, bad configuration of the selected encoder/decoder etc."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text," The error descriptor defaults to"}],0,false},
            {text,"\v*DefaultED*"},
            {sep,
             [{text,
               ":, but can be overridden with an alternate one by returning"}],
             0,false},
            {text,"\f*{reply,ED}*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[15,42,123,110,111,95,114,101,112,108,121,44,69,68,125,42]},
            {sep,[{text,"\ninstead of"}],0,false},
            {text,[7,42,114,101,112,108,121,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\n*no_reply*"},
            {sep,[{text,"\rrespectively."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "AAny other return values (including exit signals or throw) and the"}],
             0,false},
            {text,"\v*DefaultED*"},
            {sep,[{text,"\rwill be used."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [23,91,110,111,116,101,93,40,35,101,120,116,114,97,95,97,114,103,
              117,109,101,110,116,41]},
            {sep,
             [{text,
               [15,97,98,111,118,101,32,97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,[{text,"\vargument in"}],0,false},
            {text,
             [23,42,104,97,110,100,108,101,95,115,121,110,116,97,120,95,101,
              114,114,111,114,47,52,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,")<a name=\"message_error\">message_error</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "F## handle_message_error(ConnHandle, ProtocolVersion, ErrorDescr) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "M## handle_message_error(ConnHandle, ProtocolVersion, ErrorDescr, Extra) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"6Invoked when a received message just contains an error"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [26,67,111,110,110,72,97,110,100,108,101,32,61,32,99,111,110,110,
            95,104,97,110,100,108,101,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"$ProtocolVersion = protocol_version()"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [25,69,114,114,111,114,68,101,115,99,114,32,61,32,101,114,114,111,
           114,95,100,101,115,99,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "YInvoked when a received message just contains an error instead of a list of transactions."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ÃIncoming messages is delivered by megaco:receive_message/4 and successfully decoded. Normally a message contains a list of transactions, but it may instead contain an ErrorDescriptor on top level of the message."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "Ã¯Message errors are detected remotely on the other side of the protocol. And you probably don't want to reply to it, but it may indicate that you have outstanding transactions that not will get any response (request -> reply; reply -> ack)."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [23,91,110,111,116,101,93,40,35,101,120,116,114,97,95,97,114,103,
              117,109,101,110,116,41]},
            {sep,
             [{text,
               [15,97,98,111,118,101,32,97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,[{text,"\vargument in"}],0,false},
            {text,
             [24,42,104,97,110,100,108,101,95,109,101,115,115,97,103,101,95,
              101,114,114,111,114,47,52,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,")<a name=\"trans_request\">trans_request</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "r## handle_trans_request(ConnHandle, ProtocolVersion, ActionRequests) -> pending() | reply() | ignore_trans_request"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "y## handle_trans_request(ConnHandle, ProtocolVersion, ActionRequests, Extra) -> pending() | reply() | ignore_trans_request"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Invoked for each transaction request"}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [26,67,111,110,110,72,97,110,100,108,101,32,61,32,99,111,
                     110,110,95,104,97,110,100,108,101,40,41]}],
                  0,false}],
                0,false},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,"$ProtocolVersion = protocol_version()"}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,[{text,"#ActionRequests = [action_request()]"}],0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,[{text,"!pending() = {pending, req_data()}"}],0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [19,114,101,113,95,100,97,116,97,40,41,32,61,32,116,101,114,
                 109,40,41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "Yreply() = {ack_action(), actual_reply()} | {ack_action(), actual_reply(), send_options()}"}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "zack_action() = discard_ack | {handle_ack, ack_data()} | {handle_pending_ack, ack_data()} | {handle_sloppy_ack, ack_data()}"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"0actual_reply() = [action_reply()] | error_desc()"}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [19,97,99,107,95,100,97,116,97,40,41,32,61,32,116,101,114,109,40,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text," send_options() = [send_option()]"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "esend_option() = {reply_timer, megaco_timer()} | {send_handle, term()} | {protocol_version, integer()}"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$Invoked for each transaction request"}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ÃIncoming messages is delivered by megaco:receive_message/4 and successfully decoded. Normally a message contains a list of transactions and this function is invoked for each TransactionRequest in the message."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "QThis function takes a list of 'ActionRequest' records and has three main options:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\eReturn ignore_trans_request"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          ">Decide that these action requests shall be ignored completely."}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{text,
                    [16,82,101,116,117,114,110,32,112,101,110,100,105,110,103,
                     40,41]}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [346,68,101,99,105,100,101,32,116,104,97,116,32,116,
                         104,101,32,112,114,111,99,101,115,115,105,110,103,32,
                         111,102,32,116,104,101,115,101,32,97,99,116,105,111,
                         110,32,114,101,113,117,101,115,116,115,32,119,105,
                         108,108,32,116,97,107,101,32,97,32,108,111,110,103,
                         32,116,105,109,101,32,97,110,100,32,116,104,97,116,
                         32,116,104,101,32,111,114,105,103,105,110,97,116,111,
                         114,32,115,104,111,117,108,100,32,103,101,116,32,97,
                         110,32,105,109,109,101,100,105,97,116,101,32,39,84,
                         114,97,110,115,97,99,116,105,111,110,80,101,110,100,
                         105,110,103,39,32,114,101,112,108,121,32,97,115,32,
                         105,110,116,101,114,105,109,32,114,101,115,112,111,
                         110,115,101,46,32,84,104,101,32,97,99,116,117,97,108,
                         32,112,114,111,99,101,115,115,105,110,103,32,111,102,
                         32,116,104,101,115,101,32,97,99,116,105,111,110,32,
                         114,101,113,117,101,115,116,115,32,105,110,115,116,
                         101,97,100,32,115,104,111,117,108,100,32,98,101,32,
                         100,101,108,101,103,97,116,101,100,32,116,111,32,116,
                         104,101,32,116,104,101,32,104,97,110,100,108,101,95,
                         116,114,97,110,115,95,108,111,110,103,95,114,101,113,
                         117,101,115,116,47,51,32,99,97,108,108,98,97,99,107,
                         32,102,117,110,99,116,105,111,110,32,119,105,116,104,
                         32,116,104,101,32,114,101,113,95,100,97,116,97,40,41,
                         32,97,115,32,111,110,101,32,111,102,32,105,116,115,
                         32,97,114,103,117,109,101,110,116,115,46]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [14,82,101,116,117,114,110,32,114,101,112,108,121,40,41]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [139,80,114,111,99,101,115,115,32,116,104,101,32,97,
                         99,116,105,111,110,32,114,101,113,117,101,115,116,
                         115,32,97,110,100,32,101,105,116,104,101,114,32,114,
                         101,116,117,114,110,32,97,110,32,101,114,114,111,114,
                         95,100,101,115,99,114,40,41,32,105,110,100,105,99,97,
                         116,105,110,103,32,115,111,109,101,32,102,97,116,97,
                         108,32,101,114,114,111,114,32,111,114,32,97,32,108,
                         105,115,116,32,111,102,32,97,99,116,105,111,110,32,
                         114,101,112,108,105,101,115,32,40,119,105,108,100,99,
                         97,114,100,101,100,32,111,114,32,110,111,116,41,46]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [140,73,102,32,102,111,114,32,115,111,109,101,32,
                           114,101,97,115,111,110,32,109,101,103,97,99,111,32,
                           105,115,32,117,110,97,98,108,101,32,116,111,32,100,
                           101,108,105,118,101,114,32,116,104,101,32,114,101,
                           112,108,121,44,32,116,104,101,32,114,101,97,115,
                           111,110,32,102,111,114,32,116,104,105,115,32,119,
                           105,108,108,32,98,101,32,112,97,115,115,101,100,32,
                           116,111,32,116,104,101,32,117,115,101,114,32,118,
                           105,97,32,97,32,99,97,108,108,32,116,111,32,116,
                           104,101,32,99,97,108,108,98,97,99,107,32,102,117,
                           110,99,116,105,111,110]}],
                        0,false},
                       {text,
                        [16,104,97,110,100,108,101,95,116,114,97,110,115,95,
                         97,99,107]},
                       {sep,[{text,"\b, unless"}],0,false},
                       {text,
                        [26,97,99,107,95,97,99,116,105,111,110,40,41,32,61,32,
                         100,105,115,99,97,114,100,95,97,99,107]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,[{text,"\eThe ack_action() is either:"}],0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,
                  {text,[4,60,100,108,62]},
                  {nest,4,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,"\vdiscard_ack"}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{text,
                                       "@Meaning that you don't care if the reply is acknowledged or not."}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,
                               [{text,
                                 "C{handle_ack, ack_data()} | {handle_ack, ack_data(), send_options()}"}],
                               0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,
                                     [289,77,101,97,110,105,110,103,32,116,
                                      104,97,116,32,121,111,117,32,119,97,110,
                                      116,32,97,110,32,105,109,109,101,100,
                                      105,97,116,101,32,97,99,107,110,111,119,
                                      108,101,100,103,101,109,101,110,116,32,
                                      119,104,101,110,32,116,104,101,32,111,
                                      116,104,101,114,32,112,97,114,116,32,
                                      114,101,99,101,105,118,101,115,32,116,
                                      104,105,115,32,116,114,97,110,115,97,99,
                                      116,105,111,110,32,114,101,112,108,121,
                                      46,32,87,104,101,110,32,116,104,101,32,
                                      97,99,107,110,111,119,108,101,100,103,
                                      101,109,101,110,116,32,101,118,101,110,
                                      116,117,97,108,108,121,32,105,115,32,
                                      114,101,99,101,105,118,101,100,44,32,
                                      116,104,101,32,104,97,110,100,108,101,
                                      95,116,114,97,110,115,95,97,99,107,47,
                                      52,32,99,97,108,108,98,97,99,107,32,102,
                                      117,110,99,116,105,111,110,32,119,105,
                                      108,108,32,98,101,32,105,110,118,111,
                                      107,101,100,32,119,105,116,104,32,116,
                                      104,101,32,97,99,107,95,100,97,116,97,
                                      40,41,32,97,115,32,111,110,101,32,111,
                                      102,32,105,116,115,32,97,114,103,117,
                                      109,101,110,116,115,46,32,97,99,107,95,
                                      100,97,116,97,40,41,32,109,97,121,32,98,
                                      101,32,97,110,121,32,69,114,108,97,110,
                                      103,32,116,101,114,109,46]}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               "S{handle_pending_ack, ack_data()} | {handle_pending_ack, ack_data(), send_options()}"}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {sep,
                            [{above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{sep,
                                     [{text,
                                       "&This has the same effect as the above,"}],
                                     0,false},
                                    {text,
                                     [14,105,102,32,97,110,100,32,111,110,108,
                                      121,32,105,102]},
                                    {sep,
                                     [{text,
                                       "Â®megaco has sent at least one pending message for this request (during the processing of the request). If no pending message has been sent, then immediate acknowledgement will"}],
                                     0,false},
                                    {text,[3,110,111,116]},
                                    {sep,[{text,"\rbe requested."}],0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{sep,
                                     [{text,
                                       "-Note that this only works as specified if the"}],
                                     0,false},
                                    {text,
                                     [18,115,101,110,116,95,112,101,110,100,
                                      105,110,103,95,108,105,109,105,116]},
                                    {sep,
                                     [{text,
                                       "/config option has been set to an integer value."}],
                                     0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}}],
                            0,false},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,
                             "P{handle_sloppy_ack, ack_data()}| {handle_sloppy_ack, ack_data(), send_options()}"}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,
                                 [{text,
                                   "(Meaning that you want an acknowledgement"}],
                                 0,false},
                                {text,"\bsometime"},
                                {sep,
                                 [{text,
                                   "Â». When the acknowledgement eventually is received, the handle_trans_ack/4 callback function will be invoked with the ack_data() as one of its arguments. ack_data() may be any Erlang term."}],
                                 0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}}}},
                 {text,[5,60,47,100,108,62]}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "Â»Any other return values (including exit signals or throw) will result in an error descriptor with code 500 (internal gateway error) and the module name (of the callback module) as reason."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [23,91,110,111,116,101,93,40,35,101,120,116,114,97,95,97,114,103,
              117,109,101,110,116,41]},
            {sep,
             [{text,
               [15,97,98,111,118,101,32,97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,[{text,"\vargument in"}],0,false},
            {text,
             [24,42,104,97,110,100,108,101,95,116,114,97,110,115,95,114,101,
              113,117,101,115,116,47,52,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,"3<a name=\"trans_long_request\">trans_long_request</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "M## handle_trans_long_request(ConnHandle, ProtocolVersion, ReqData) -> reply()"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "T## handle_trans_long_request(ConnHandle, ProtocolVersion, ReqData, Extra) -> reply()"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           ";Optionally invoked for a time consuming transaction request"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [26,67,111,110,110,72,97,110,100,108,101,32,61,32,99,111,
                    110,110,95,104,97,110,100,108,101,40,41]}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"$ProtocolVersion = protocol_version()"}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [20,82,101,113,68,97,116,97,32,61,32,114,101,113,95,100,97,
                   116,97,40,41]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [19,114,101,113,95,100,97,116,97,40,41,32,61,32,116,101,114,
                 109,40,41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "Yreply() = {ack_action(), actual_reply()} | {ack_action(), actual_reply(), send_options()}"}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "Wack_action() = discard_ack | {handle_ack, ack_data()} | {handle_sloppy_ack, ack_data()}"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"0actual_reply() = [action_reply()] | error_desc()"}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [19,97,99,107,95,100,97,116,97,40,41,32,61,32,116,101,114,109,40,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text," send_options() = [send_option()]"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "esend_option() = {reply_timer, megaco_timer()} | {send_handle, term()} | {protocol_version, integer()}"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             ";Optionally invoked for a time consuming transaction request"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "Ã·If this function gets invoked or not is controlled by the reply from the preceding call to handle_trans_request/3. The handle_trans_request/3 function may decide to process the action requests itself or to delegate the processing to this function."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "_The req_data() argument to this function is the Erlang term returned by handle_trans_request/3."}],
           0,false}],
         0,true},
        null},
       null}},
     null,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "Â»Any other return values (including exit signals or throw) will result in an error descriptor with code 500 (internal gateway error) and the module name (of the callback module) as reason."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [23,91,110,111,116,101,93,40,35,101,120,116,114,97,95,97,114,103,
              117,109,101,110,116,41]},
            {sep,
             [{text,
               [15,97,98,111,118,101,32,97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,[{text,"\vargument in"}],0,false},
            {text,
             [29,42,104,97,110,100,108,101,95,116,114,97,110,115,95,108,111,
              110,103,95,114,101,113,117,101,115,116,47,52,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,"%<a name=\"trans_reply\">trans_reply</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "N## handle_trans_reply(ConnHandle, ProtocolVersion, UserReply, ReplyData) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "U## handle_trans_reply(ConnHandle, ProtocolVersion, UserReply, ReplyData, Extra) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Optionally invoked for a transaction reply"}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {sep,
                             [{text,[1,42]},
                              {sep,
                               [{text,
                                 [26,67,111,110,110,72,97,110,100,108,101,32,
                                  61,32,99,111,110,110,95,104,97,110,100,108,
                                  101,40,41]}],
                               0,false}],
                             0,false},
                            {sep,
                             [{text,[1,42]},
                              {sep,
                               [{text,
                                 "$ProtocolVersion = protocol_version()"}],
                               0,false}],
                             0,false}},
                           {sep,
                            [{text,[1,42]},
                             {sep,
                              [{text,"!UserReply = success() | failure()"}],
                              0,false}],
                            0,false}},
                          {sep,
                           [{text,[1,42]},
                            {sep,
                             [{text,
                               [26,115,117,99,99,101,115,115,40,41,32,61,32,
                                123,111,107,44,32,114,101,115,117,108,116,40,
                                41,125]}],
                             0,false}],
                           0,false}},
                         {sep,
                          [{text,[1,42]},
                           {sep,
                            [{text,
                              "2result() = transaction_result() | segment_result()"}],
                            0,false}],
                          0,false}},
                        {sep,
                         [{text,[1,42]},
                          {sep,
                           [{text,"$transaction_result() = action_reps()"}],
                           0,false}],
                         0,false}},
                       {sep,
                        [{text,[1,42]},
                         {sep,
                          [{text,
                            "@segment_result() = {segment_no(), last_segment(), action_reps()}"}],
                          0,false}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {sep,
                         [{text," action_reps() = [action_reply()]"}],
                         0,false}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {sep,
                        [{text,
                          ":failure() = {error, reason()} | {error, ReplyNo, reason()}"}],
                        0,false}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {sep,
                       [{text,
                         "jreason() = transaction_reason() | segment_reason() | user_cancel_reason() | send_reason() | other_reason()"}],
                       0,false}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {sep,
                      [{text,"#transaction_reason() = error_desc()"}],
                      0,false}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       "?segment_reason() = {segment_no(), last_segment(), error_desc()}"}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      "gother_reason() = timeout | {segment_timeout, missing_segments()} | exceeded_recv_pending_limit | term()"}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [23,108,97,115,116,95,115,101,103,109,101,110,116,40,41,
                      32,61,32,98,111,111,108,40,41]}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,"#missing_segments() = [segment_no()]"}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   ">user_cancel_reason() = {user_cancel, reason_for_user_cancel()}"}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,[{text,"!reason_for_user_cancel() = term()"}],0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 ">send_reason() = send_cancelled_reason() | send_failed_reason()"}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "Lsend_cancelled_reason() = {send_message_cancelled, reason_for_send_cancel()}"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,[{text,"!reason_for_send_cancel() = term()"}],0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "Gsend_failed_reason() = {send_message_failed, reason_for_send_failure()}"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,[{text,"\"reason_for_send_failure() = term()"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [24,82,101,112,108,121,68,97,116,97,32,61,32,114,101,112,108,121,
             95,100,97,116,97,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [23,82,101,112,108,121,78,111,32,61,32,105,110,116,101,103,101,114,
            40,41,32,62,32,48]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [21,114,101,112,108,121,95,100,97,116,97,40,41,32,61,32,116,101,114,
           109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"*Optionally invoked for a transaction reply"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [130,84,104,101,32,115,101,110,100,101,114,32,111,102,32,97,32,
                116,114,97,110,115,97,99,116,105,111,110,32,114,101,113,117,
                101,115,116,32,104,97,115,32,116,104,101,32,111,112,116,105,
                111,110,32,111,102,32,100,101,99,105,100,105,110,103,44,32,
                119,104,101,116,104,101,114,32,116,104,101,32,111,114,105,103,
                105,110,97,116,105,110,103,32,69,114,108,97,110,103,32,112,
                114,111,99,101,115,115,32,115,104,111,117,108,100,32,115,121,
                110,99,104,114,111,110,111,117,115,108,121,32,119,97,105,116,
                32,40]}],
             0,false},
            {text,[15,42,109,101,103,97,99,111,58,99,97,108,108,47,51,42]},
            {sep,
             [{text,
               "?) for a reply or if the message should be sent asynchronously ("}],
             0,false},
            {text,[15,42,109,101,103,97,99,111,58,99,97,115,116,47,51,42]},
            {sep,
             [{text,
               "M) and the processing of the reply should be delegated this callback function."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ÃNote that if the reply is segmented (split into several smaller messages; segments), then some extra info, segment number and an indication if all segments of a reply has been received or not, is also included in the"}],
             0,false},
            {text,"\v*UserReply*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\v*ReplyData*"},
            {sep,[{text,"\vdefaults to"}],0,false},
            {text,"'*megaco:lookup(ConnHandle, reply_data)*"},
            {sep,[{text,"', but may be explicitly overridden by a"}],0,false},
            {text,[15,42,109,101,103,97,99,111,58,99,97,115,116,47,51,42]},
            {sep,
             [{text,
               "Uoption in order to forward info about the calling context of the originating process."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,65,116]}],0,false},
            {text,"\v*success()*"},
            {sep,[{text,[5,44,32,116,104,101]}],0,false},
            {text,"\v*UserReply*"},
            {sep,
             [{text,
               [16,101,105,116,104,101,114,32,99,111,110,116,97,105,110,115,
                58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           "FA list of 'ActionReply' records possibly containing error indications."}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,
             "9A tuple of size three containing: the segment number, the"}],
           0,false},
          {text,
           [24,42,108,97,115,116,32,115,101,103,109,101,110,116,32,105,110,
            100,105,99,97,116,111,114,42]},
          {sep,
           [{text,
             [142,97,110,100,32,102,105,110,97,108,108,121,32,97,32,108,105,
              115,116,32,111,102,32,39,65,99,116,105,111,110,82,101,112,108,
              121,39,32,114,101,99,111,114,100,115,32,112,111,115,115,105,98,
              108,121,32,99,111,110,116,97,105,110,105,110,103,32,101,114,114,
              111,114,32,105,110,100,105,99,97,116,105,111,110,115,46,32,84,
              104,105,115,32,105,115,32,111,102,32,99,111,117,114,115,101,32,
              111,110,108,121,32,112,111,115,115,105,98,108,101,32,105,102,32,
              116,104,101,32,114,101,112,108,121,32,119,97,115,32,115,101,103,
              109,101,110,116,101,100,46]}],
           0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\v*failure()*"},
            {sep,
             [{text,
               "Eindicates an local or external error and can be one of the following:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,[1,65]}],0,false},
             {text,
              [22,42,116,114,97,110,115,97,99,116,105,111,110,95,114,101,97,
               115,111,110,40,41,42]},
             {sep,
              [{text,
                "O, indicates that the remote user has replied with an explicit transactionError."}],
              0,false}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,[{text,[1,65]}],0,false},
             {text,
              [18,42,115,101,103,109,101,110,116,95,114,101,97,115,111,110,40,
               41,42]},
             {sep,
              [{text,
                [156,44,32,105,110,100,105,99,97,116,101,115,32,116,104,97,
                 116,32,116,104,101,32,114,101,109,111,116,101,32,117,115,101,
                 114,32,104,97,115,32,114,101,112,108,105,101,100,32,119,105,
                 116,104,32,97,110,32,101,120,112,108,105,99,105,116,32,116,
                 114,97,110,115,97,99,116,105,111,110,69,114,114,111,114,32,
                 102,111,114,32,116,104,105,115,32,115,101,103,109,101,110,
                 116,46,32,84,104,105,115,32,105,115,32,111,102,32,99,111,117,
                 114,115,101,32,111,110,108,121,32,112,111,115,115,105,98,108,
                 101,32,105,102,32,116,104,101,32,114,101,112,108,121,32,119,
                 97,115,32,115,101,103,109,101,110,116,101,100,46]}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,[{text,[1,65]}],0,false},
            {text,
             [22,42,117,115,101,114,95,99,97,110,99,101,108,95,114,101,97,115,
              111,110,40,41,42]},
            {sep,
             [{text,
               ";, indicates that the request has been canceled by the user."}],
             0,false},
            {text,
             [26,42,114,101,97,115,111,110,95,102,111,114,95,117,115,101,114,
              95,99,97,110,99,101,108,40,41,42]},
            {sep,[{text,"&is the reason given in the call to the"}],0,false},
            {text,
             [25,91,99,97,110,99,101,108,93,40,46,47,109,101,103,97,99,111,35,
              99,97,110,99,101,108,41]},
            {sep,[{text,"\tfunction."}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,[{text,[1,65]}],0,false},
                  {text,
                   [15,42,115,101,110,100,95,114,101,97,115,111,110,40,41,42]},
                  {sep,
                   [{text,"%, indicates that the transport module"}],
                   0,false},
                  {text,"/[send_message](./megaco_transport#send_message)"},
                  {sep,
                   [{text,
                     ">function did not send the message. The reason for this can be:"}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [25,42,115,101,110,100,95,99,97,110,99,101,108,108,101,100,
                  95,114,101,97,115,111,110,40,41,42]},
                {sep,
                 [{text,"1- the message sending was deliberately cancelled."}],
                 0,false},
                {text,
                 [26,42,114,101,97,115,111,110,95,102,111,114,95,115,101,110,
                  100,95,99,97,110,99,101,108,40,41,42]},
                {sep,
                 [{text,
                   [26,105,115,32,116,104,101,32,114,101,97,115,111,110,32,
                    103,105,118,101,110,32,105,110,32,116,104,101]}],
                 0,false},
                {text,"\b*cancel*"},
                {sep,
                 [{text,
                   [15,114,101,116,117,114,110,32,102,114,111,109,32,116,104,
                    101]}],
                 0,false},
                {text,"/[send_message](./megaco_transport#send_message)"},
                {sep,[{text,"\tfunction."}],0,false}],
               0,false}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [22,42,115,101,110,100,95,102,97,105,108,101,100,95,114,101,
                  97,115,111,110,40,41,42]},
                {sep,
                 [{text,
                   "9- an error occurred while attempting to send the message."}],
                 0,false}],
               0,false}],
             0,false}}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[2,65,110]}],0,false},
                 {text,
                  [16,42,111,116,104,101,114,95,114,101,97,115,111,110,40,41,
                   42]},
                 {sep,
                  [{text,"%, indicates some other error such as:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,"\t*timeout*"},
                {sep,
                 [{text,
                   ">- the reply failed to arrive before the request timer expired."}],
                 0,false}],
               0,false}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,"'*{segment_timeout, missing_segments()}*"},
                {sep,
                 [{text,
                   "P- one or more segments was not delivered before the expire of the segment timer."}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [29,42,101,120,99,101,101,100,101,100,95,114,101,99,118,95,
                 112,101,110,100,105,110,103,95,108,105,109,105,116,42]},
               {sep,
                [{text,"2- the pending limit was exceeded for this request."}],
                0,false}],
              0,false}],
            0,false}}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [23,91,110,111,116,101,93,40,35,101,120,116,114,97,95,97,114,103,
              117,109,101,110,116,41]},
            {sep,
             [{text,
               [15,97,98,111,118,101,32,97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,[{text,"\vargument in"}],0,false},
            {text,
             [22,42,104,97,110,100,108,101,95,116,114,97,110,115,95,114,101,
              112,108,121,47,53,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,"!<a name=\"trans_ack\">trans_ack</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "J## handle_trans_ack(ConnHandle, ProtocolVersion, AckStatus, AckData) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "Q## handle_trans_ack(ConnHandle, ProtocolVersion, AckStatus, AckData, Extra) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"4Optionally invoked for a transaction acknowledgement"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [26,67,111,110,110,72,97,110,100,108,101,32,61,32,99,111,
                      110,110,95,104,97,110,100,108,101,40,41]}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,"$ProtocolVersion = protocol_version()"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,"\"AckStatus = ok | {error, reason()}"}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   "@reason() = user_cancel_reason() | send_reason() | other_reason()"}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  ">user_cancel_reason() = {user_cancel, reason_for_user_cancel()}"}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 ">send_reason() = send_cancelled_reason() | send_failed_reason()"}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "Lsend_cancelled_reason() = {send_message_cancelled, reason_for_send_cancel()}"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,[{text,"!reason_for_send_cancel() = term()"}],0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              "Gsend_failed_reason() = {send_message_failed, reason_for_send_failure()}"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,[{text,"\"reason_for_send_failure() = term()"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [23,111,116,104,101,114,95,114,101,97,115,111,110,40,41,32,61,32,
             116,101,114,109,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [20,65,99,107,68,97,116,97,32,61,32,97,99,107,95,100,97,116,97,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,97,99,107,95,100,97,116,97,40,41,32,61,32,116,101,114,109,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"4Optionally invoked for a transaction acknowledgement"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [368,73,102,32,116,104,105,115,32,102,117,110,99,116,105,111,110,
              32,103,101,116,115,32,105,110,118,111,107,101,100,32,111,114,32,
              110,111,116,44,32,105,115,32,99,111,110,116,114,111,108,108,101,
              100,32,98,121,32,116,104,101,32,114,101,112,108,121,32,102,114,
              111,109,32,116,104,101,32,112,114,101,99,101,100,105,110,103,32,
              99,97,108,108,32,116,111,32,104,97,110,100,108,101,95,116,114,
              97,110,115,95,114,101,113,117,101,115,116,47,51,46,32,84,104,
              101,32,104,97,110,100,108,101,95,116,114,97,110,115,95,114,101,
              113,117,101,115,116,47,51,32,102,117,110,99,116,105,111,110,32,
              109,97,121,32,100,101,99,105,100,101,32,116,111,32,114,101,116,
              117,114,110,32,123,104,97,110,100,108,101,95,97,99,107,44,32,97,
              99,107,95,100,97,116,97,40,41,125,32,111,114,32,123,104,97,110,
              100,108,101,95,115,108,111,112,112,121,95,97,99,107,44,32,97,99,
              107,95,100,97,116,97,40,41,125,32,109,101,97,110,105,110,103,32,
              116,104,97,116,32,121,111,117,32,110,101,101,100,32,97,110,32,
              105,109,109,101,100,105,97,116,101,32,97,99,107,110,111,119,108,
              101,100,103,101,109,101,110,116,32,111,102,32,116,104,101,32,
              114,101,112,108,121,32,97,110,100,32,116,104,97,116,32,116,104,
              105,115,32,102,117,110,99,116,105,111,110,32,115,104,111,117,
              108,100,32,98,101,32,105,110,118,111,107,101,100,32,116,111,32,
              104,97,110,100,108,101,32,116,104,101,32,97,99,107,110,111,119,
              108,101,100,103,101,109,101,110,116,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "_The ack_data() argument to this function is the Erlang term returned by handle_trans_request/3."}],
           0,false}],
         0,true},
        null},
       null}},
     null,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "fIf the AckStatus is ok, it is indicating that this is a true acknowledgement of the transaction reply."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "Ã®If the AckStatus is {error, Reason}, it is an indication that the acknowledgement or even the reply (for which this is an acknowledgement) was not delivered, but there is no point in waiting any longer for it to arrive. This happens when:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\vreply_timer"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,[{text,[3,84,104,101]}],0,false},
                         {text,"\vreply_timer"},
                         {sep,
                          [{text,
                            [21,101,118,101,110,116,117,97,108,108,121,32,116,
                             105,109,101,115,32,111,117,116,46]}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{text,
                    [18,114,101,112,108,121,32,115,101,110,100,32,102,97,105,
                     108,117,114,101]}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,"(When megaco fails to send the reply (see"}],
                        0,false},
                       {text,
                        [18,104,97,110,100,108,101,95,116,114,97,110,115,95,
                         114,101,112,108,121]},
                       {sep,
                        [{text,
                          [23,41,44,32,102,111,114,32,119,104,97,116,101,118,
                           101,114,32,114,101,97,115,111,110,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,[6,99,97,110,99,101,108]}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "=The user has explicitly cancelled the wait (megaco:cancel/2)."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [23,91,110,111,116,101,93,40,35,101,120,116,114,97,95,97,114,103,
              117,109,101,110,116,41]},
            {sep,
             [{text,
               [15,97,98,111,118,101,32,97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,[{text,"\vargument in"}],0,false},
            {text,
             [20,42,104,97,110,100,108,101,95,116,114,97,110,115,95,97,99,107,
              47,53,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,"/<a name=\"unexpected_trans\">unexpected_trans</a>"},
     {text,
      "=<a name=\"handle_unexpected_trans\">handle_unexpected_trans</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "D## handle_unexpected_trans(ConnHandle, ProtocolVersion, Trans) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "K## handle_unexpected_trans(ConnHandle, ProtocolVersion, Trans, Extra) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,".Invoked when an unexpected message is received"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [26,67,111,110,110,72,97,110,100,108,101,32,61,32,99,111,110,110,
            95,104,97,110,100,108,101,40,41]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"$ProtocolVersion = protocol_version()"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          "UTrans = #'TransactionPending'{} | #'TransactionReply'{} | #'TransactionResponseAck'{}"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"-Invoked when a unexpected message is received"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [338,73,102,32,97,32,114,101,112,108,121,32,116,111,32,97,32,114,
              101,113,117,101,115,116,32,105,115,32,110,111,116,32,114,101,99,
              101,105,118,101,100,32,105,110,32,116,105,109,101,44,32,116,104,
              101,32,109,101,103,97,99,111,32,115,116,97,99,107,32,114,101,
              109,111,118,101,115,32,97,108,108,32,105,110,102,111,32,97,98,
              111,117,116,32,116,104,101,32,114,101,113,117,101,115,116,32,
              102,114,111,109,32,105,116,115,32,116,97,98,108,101,115,46,32,
              73,102,32,97,32,114,101,112,108,121,32,115,104,111,117,108,100,
              32,97,114,114,105,118,101,32,97,102,116,101,114,32,116,104,105,
              115,32,104,97,115,32,98,101,101,110,32,100,111,110,101,32,116,
              104,101,32,97,112,112,32,104,97,115,32,110,111,32,119,97,121,32,
              111,102,32,107,110,111,119,105,110,103,32,119,104,101,114,101,
              32,116,111,32,115,101,110,100,32,116,104,105,115,32,109,101,115,
              115,97,103,101,46,32,84,104,101,32,109,101,115,115,97,103,101,
              32,105,115,32,100,101,108,105,118,101,114,101,100,32,116,111,32,
              116,104,101,32,34,117,115,101,114,34,32,98,121,32,99,97,108,108,
              105,110,103,32,116,104,105,115,32,102,117,110,99,116,105,111,
              110,32,111,110,32,116,104,101,32,108,111,99,97,108,32,110,111,
              100,101,32,40,116,104,101,32,110,111,100,101,32,119,104,105,99,
              104,32,104,97,115,32,116,104,101,32,108,105,110,107,41,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [23,91,110,111,116,101,93,40,35,101,120,116,114,97,95,97,114,103,
              117,109,101,110,116,41]},
            {sep,
             [{text,
               [15,97,98,111,118,101,32,97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,[{text,"\vargument in"}],0,false},
            {text,"\e*handle_unexpected_trans/4*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,")<a name=\"request_abort\">request_abort</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "N## handle_trans_request_abort(ConnHandle, ProtocolVersion, TransNo, Pid) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "U## handle_trans_request_abort(ConnHandle, ProtocolVersion, TransNo, Pid, Extra) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"4Invoked when an transaction request has been aborted"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [26,67,111,110,110,72,97,110,100,108,101,32,61,32,99,111,110,110,
             95,104,97,110,100,108,101,40,41]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"$ProtocolVersion = protocol_version()"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [19,84,114,97,110,115,78,111,32,61,32,105,110,116,101,103,101,114,
            40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [23,80,105,100,32,61,32,117,110,100,101,102,105,110,101,100,32,124,
           32,112,105,100,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"3Invoked when a transaction request has been aborted"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [154,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
              32,105,110,118,111,107,101,100,32,105,102,32,116,104,101,32,111,
              114,105,103,105,110,97,116,105,110,103,32,112,101,110,100,105,
              110,103,32,108,105,109,105,116,32,104,97,115,32,98,101,101,110,
              32,101,120,99,101,101,100,101,100,46,32,84,104,105,115,32,117,
              115,117,97,108,108,121,32,109,101,97,110,115,32,116,104,97,116,
              32,97,32,114,101,113,117,101,115,116,32,104,97,115,32,116,97,
              107,101,110,32,97,98,110,111,114,109,97,108,108,121,32,108,111,
              110,103,32,116,105,109,101,32,116,111,32,99,111,109,112,108,101,
              116,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [23,91,110,111,116,101,93,40,35,101,120,116,114,97,95,97,114,103,
              117,109,101,110,116,41]},
            {sep,
             [{text,
               [15,97,98,111,118,101,32,97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,[{text,"\vargument in"}],0,false},
            {text,
             [30,42,104,97,110,100,108,101,95,116,114,97,110,115,95,114,101,
              113,117,101,115,116,95,97,98,111,114,116,47,53,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {text,")<a name=\"segment_reply\">segment_reply</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "T## handle_segment_reply(ConnHandle, ProtocolVersion, TransNo, SegNo, SegCompl) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "[## handle_segment_reply(ConnHandle, ProtocolVersion, TransNo, SegNo, SegCompl, Extra) -> ok"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [24,83,101,103,109,101,110,116,32,82,101,112,108,121,32,73,110,100,
            105,99,97,116,105,111,110]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [26,67,111,110,110,72,97,110,100,108,101,32,61,32,99,111,110,110,
              95,104,97,110,100,108,101,40,41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,[{text,"$ProtocolVersion = protocol_version()"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [19,84,114,97,110,115,78,111,32,61,32,105,110,116,101,103,101,114,
             40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,83,101,103,78,111,32,61,32,105,110,116,101,103,101,114,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,[{text," SegCompl = asn1_NOVALUE | 'NULL'"}],0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,69,120,116,114,97,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "EThis function is called when a segment reply has been received if the"}],
             0,false},
            {text,"'[segment_reply_ind](./megaco#conn_info)"},
            {sep,[{text,"#config option has been set to true."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"$This is in effect a progress report."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,83,101,101]}],0,false},
            {text,
             [23,91,110,111,116,101,93,40,35,101,120,116,114,97,95,97,114,103,
              117,109,101,110,116,41]},
            {sep,
             [{text,
               [15,97,98,111,118,101,32,97,98,111,117,116,32,116,104,101]}],
             0,false},
            {text,[7,42,69,120,116,114,97,42]},
            {sep,[{text,"\vargument in"}],0,false},
            {text,
             [24,42,104,97,110,100,108,101,95,115,101,103,109,101,110,116,95,
              114,101,112,108,121,47,54,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
