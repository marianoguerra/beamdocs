{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# megaco_tcp"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# megaco_tcp"},null},null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "=Interface module to TPKT transport protocol for Megaco/H.248."}],
         0,false}],
       0,true},
      null},
     null}}},
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {sep,
      [{sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 "kThis module contains the public interface to the TPKT (TCP/IP) version transport protocol for Megaco/H.248."}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,true},
     null},
    null}}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"*## start_transport() -> {ok, TransportRef}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [20,84,114,97,110,115,112,111,114,116,82,101,102,32,61,32,112,105,100,
         40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "~This function is used for starting the TCP/IP transport service. Use exit(TransportRef, Reason) to stop the transport service."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"1## listen(TransportRef, ListenPortSpecList) -> ok"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,[{text," TransportRef = pid() | regname()"}],0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [28,79,112,116,105,111,110,76,105,115,116,80,101,114,80,111,114,116,
           32,61,32,91,79,112,116,105,111,110,93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         "GOption = {port, integer()} |{options, list()} |{receive_handle, term()}"}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "yThis function is used for starting new TPKT listening socket for TCP/IP. The option list contains the socket definitions."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "S## connect(TransportRef, OptionList) -> {ok, Handle, ControlPid} |  {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,[{text," TransportRef = pid() | regname()"}],0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [21,79,112,116,105,111,110,76,105,115,116,32,61,32,91,79,112,116,
              105,111,110,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "jOption = {host, Ipaddr} | {port, integer()} |{options, list()} |{receive_handle, term()} |{module, atom()}"}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [24,72,97,110,100,108,101,32,61,32,115,111,99,107,101,116,95,104,
            97,110,100,108,101,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,67,111,110,116,114,111,108,80,105,100,32,61,32,112,105,100,40,
           41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"0This function is used to open a TPKT connection."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,"\b*module*"},
            {sep,
             [{text,
               "Ooption makes it possible for the user to provide their own callback module. The"}],
             0,false},
            {text,
             [19,42,114,101,99,101,105,118,101,95,109,101,115,115,97,103,101,
              47,52,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,
             [28,42,112,114,111,99,101,115,115,95,114,101,99,101,105,118,101,
              100,95,109,101,115,115,97,103,101,47,52,42]},
            {sep,
             [{text,
               "Â½functions of this module is called when a new message is received (which one depends on the size of the message; small - receive_message, large - process_received_message). Default value is"}],
             0,false},
            {text,"\n**megaco**"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,99,108,111,115,101,40,72,97,110,100,108,101,41,32,45,62,
        32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [24,72,97,110,100,108,101,32,61,32,115,111,99,107,101,116,95,104,97,
         110,100,108,101,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "<This function is used for closing an active TPKT connection."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## socket(Handle) -> Socket"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,72,97,110,100,108,101,32,61,32,115,111,99,107,101,116,95,104,97,
          110,100,108,101,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [22,83,111,99,107,101,116,32,61,32,105,110,101,116,95,115,111,99,107,
          101,116,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [138,84,104,105,115,32,102,117,110,99,116,105,111,110,32,105,115,
              32,117,115,101,100,32,116,111,32,99,111,110,118,101,114,116,32,
              97,32,115,111,99,107,101,116,95,104,97,110,100,108,101,40,41,32,
              116,111,32,97,32,105,110,101,116,95,115,111,99,107,101,116,40,
              41,46,32,105,110,101,116,95,115,111,99,107,101,116,40,41,32,105,
              115,32,97,32,112,108,97,105,110,32,115,111,99,107,101,116,44,32,
              115,101,101,32,116,104,101,32,105,110,101,116,32,109,111,100,
              117,108,101,32,102,111,114,32,109,111,114,101,32,105,110,102,
              111,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"&## send_message(Handle, Message) -> ok"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,72,97,110,100,108,101,32,61,32,115,111,99,107,101,116,95,104,97,
          110,100,108,101,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [29,77,101,115,115,97,103,101,32,61,32,98,105,110,97,114,121,40,41,
          32,124,32,105,111,108,105,115,116,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," Sends a message on a connection."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,98,108,111,99,107,40,72,97,110,100,108,101,41,32,45,62,32,
        111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [24,72,97,110,100,108,101,32,61,32,115,111,99,107,101,116,95,104,97,
         110,100,108,101,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"/Stop receiving incoming messages on the socket."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [24,35,35,32,117,110,98,108,111,99,107,40,72,97,110,100,108,101,41,32,
        45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [24,72,97,110,100,108,101,32,61,32,115,111,99,107,101,116,95,104,97,
         110,100,108,101,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "<Starting to receive incoming messages from the socket again."}],
           0,false}],
         0,true},
        null},
       null}},
     {text,";<a name=\"upgrade_receive_handle\">upgrade_receive_handle</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"+## upgrade_receive_handle(ControlPid) -> ok"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [18,67,111,110,116,114,111,108,80,105,100,32,61,32,112,105,100,40,
         41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "^Update the receive handle of the control process (e.g. after having changed protocol version)."}],
           0,false}],
         0,true},
        null},
       null}},
     {text,
      [25,60,97,32,110,97,109,101,61,34,115,116,97,116,115,34,62,115,116,97,
       116,115,60,47,97,62]}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"4## get_stats() -> {ok, TotalStats} | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "C## get_stats(SendHandle) -> {ok, SendHandleStats} | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "I## get_stats(SendHandle, Counter) -> {ok, CounterStats} | {error, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,[{text,"\"TotalStats = [send_handle_stats()]"}],0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"*total_stats() = {send_handle(), [stats()]}"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [26,83,101,110,100,72,97,110,100,108,101,32,61,32,115,101,110,
                100,95,104,97,110,100,108,101,40,41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,[{text,"\eSendHandleStats = [stats()]"}],0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [29,67,111,117,110,116,101,114,32,61,32,116,99,112,95,115,116,97,
              116,115,95,99,111,117,110,116,101,114,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [24,67,111,117,110,116,101,114,83,116,97,116,115,32,61,32,105,110,
             116,101,103,101,114,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"*stats() = {tcp_stats_counter(), integer()}"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [158,116,99,112,95,115,116,97,116,115,95,99,111,117,110,116,101,114,
           40,41,32,61,32,109,101,100,71,119,121,71,97,116,101,119,97,121,78,
           117,109,73,110,77,101,115,115,97,103,101,115,32,124,32,109,101,100,
           71,119,121,71,97,116,101,119,97,121,78,117,109,73,110,79,99,116,
           101,116,115,32,124,32,109,101,100,71,119,121,71,97,116,101,119,97,
           121,78,117,109,79,117,116,77,101,115,115,97,103,101,115,32,124,32,
           109,101,100,71,119,121,71,97,116,101,119,97,121,78,117,109,79,117,
           116,79,99,116,101,116,115,32,124,32,109,101,100,71,119,121,71,97,
           116,101,119,97,121,78,117,109,69,114,114,111,114,115]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"4Retreive the TCP related (SNMP) statistics counters."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,114,101,115,101,116,95,115,116,97,116,115,40,41,32,45,62,
        32,118,111,105,100,40,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"$## reset_stats(SendHandle) -> void()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [26,83,101,110,100,72,97,110,100,108,101,32,61,32,115,101,110,100,95,
         104,97,110,100,108,101,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"1Reset all TCP related (SNMP) statistics counters."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
