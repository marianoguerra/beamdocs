{above,
 {above,
  {above,
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [19,35,32,84,70,84,80,32,85,115,101,114,39,115,32,71,117,105,100,101]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[3,84,104,101]}],0,false},
                 {text,[6,42,84,70,84,80,42]},
                 {sep,
                  [{text,".application provides a TFTP client and server."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v### Purpose"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "\\The Trivial File Transfer Protocol or TFTP is a very simple protocol used to transfer files."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [433,73,116,32,104,97,115,32,98,101,101,110,32,105,109,112,108,
               101,109,101,110,116,101,100,32,111,110,32,116,111,112,32,111,
               102,32,116,104,101,32,85,115,101,114,32,68,97,116,97,103,114,
               97,109,32,112,114,111,116,111,99,111,108,32,40,85,68,80,41,32,
               115,111,32,105,116,32,109,97,121,32,98,101,32,117,115,101,100,
               32,116,111,32,109,111,118,101,32,102,105,108,101,115,32,98,101,
               116,119,101,101,110,32,109,97,99,104,105,110,101,115,32,111,
               110,32,100,105,102,102,101,114,101,110,116,32,110,101,116,119,
               111,114,107,115,32,105,109,112,108,101,109,101,110,116,105,110,
               103,32,85,68,80,46,32,73,116,32,105,115,32,100,101,115,105,103,
               110,101,100,32,116,111,32,98,101,32,115,109,97,108,108,32,97,
               110,100,32,101,97,115,121,32,116,111,32,105,109,112,108,101,
               109,101,110,116,46,32,84,104,101,114,101,102,111,114,101,44,32,
               105,116,32,108,97,99,107,115,32,109,111,115,116,32,111,102,32,
               116,104,101,32,102,101,97,116,117,114,101,115,32,111,102,32,97,
               32,114,101,103,117,108,97,114,32,70,84,80,46,32,84,104,101,32,
               111,110,108,121,32,116,104,105,110,103,32,105,116,32,99,97,110,
               32,100,111,32,105,115,32,114,101,97,100,32,97,110,100,32,119,
               114,105,116,101,32,102,105,108,101,115,32,40,111,114,32,109,97,
               105,108,41,32,102,114,111,109,47,116,111,32,97,32,114,101,109,
               111,116,101,32,115,101,114,118,101,114,46,32,73,116,32,99,97,
               110,110,111,116,32,108,105,115,116,32,100,105,114,101,99,116,
               111,114,105,101,115,44,32,97,110,100,32,99,117,114,114,101,110,
               116,108,121,32,104,97,115,32,110,111,32,112,114,111,118,105,
               115,105,111,110,115,32,102,111,114,32,117,115,101,114,32,97,
               117,116,104,101,110,116,105,99,97,116,105,111,110,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,[6,42,116,102,116,112,42]},
             {sep,
              [{text,"4application implements the following IETF standards:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},{text,"(RFC 1350, The TFTP Protocol (revision 2)"}],
          0,false},
         {sep,
          [{text,[1,42]},
           {text,
            [31,82,70,67,32,50,51,52,55,44,32,84,70,84,80,32,79,112,116,105,
             111,110,32,69,120,116,101,110,115,105,111,110]}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {text,
           [31,82,70,67,32,50,51,52,56,44,32,84,70,84,80,32,66,108,111,99,107,
            115,105,122,101,32,79,112,116,105,111,110]}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {text,"9RFC 2349, TFTP Timeout Interval and Transfer Size Options"}],
        0,false}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"/The only feature that not is implemented is the"}],
              0,false},
             {text,"\n*netascii*"},
             {sep,
              [{text,
                [14,116,114,97,110,115,102,101,114,32,109,111,100,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [17,35,35,35,32,80,114,101,114,101,113,117,105,115,105,116,101,115]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [148,73,116,32,105,115,32,97,115,115,117,109,101,100,32,116,104,
               97,116,32,116,104,101,32,114,101,97,100,101,114,32,105,115,32,
               102,97,109,105,108,105,97,114,32,119,105,116,104,32,116,104,
               101,32,69,114,108,97,110,103,32,112,114,111,103,114,97,109,109,
               105,110,103,32,108,97,110,103,117,97,103,101,44,32,99,111,110,
               99,101,112,116,115,32,111,102,32,79,84,80,44,32,97,110,100,32,
               104,97,115,32,97,32,98,97,115,105,99,32,117,110,100,101,114,
               115,116,97,110,100,105,110,103,32,111,102,32,116,104,101,32,84,
               70,84,80,32,112,114,111,116,111,99,111,108,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [23,35,35,35,32,71,101,110,101,114,97,108,32,73,110,102,111,114,109,
          97,116,105,111,110]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,
             [25,91,115,116,97,114,116,47,49,93,40,46,47,116,102,116,112,35,
              115,116,97,114,116,47,49,41]},
            {sep,
             [{text,
               "Â¯function starts a daemon process listening for UDP packets on a port. When it receives a request for read or write, it spawns a temporary server process handling the transfer."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [28,79,110,32,116,104,101,32,99,108,105,101,110,116,32,115,105,
                100,101,44,32,102,117,110,99,116,105,111,110]}],
             0,false},
            {text,"![read_file/3](./tftp#read_file/3)"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"#[write_file/3](./tftp#write_file/3)"},
            {sep,
             [{text,
               "gspawn a temporary client process establishing contact with a TFTP daemon and perform the file transfer."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[6,42,116,102,116,112,42]},
            {sep,
             [{text,
               "[uses a callback module to handle the file transfer. Two such callback modules are provided,"}],
             0,false},
            {text,"\r*tftp_binary*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\v*tftp_file*"},
            {sep,[{text,[5,46,32,83,101,101]}],0,false},
            {text,"![read_file/3](./tftp#read_file/3)"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"#[write_file/3](./tftp#write_file/3)"},
            {sep,
             [{text,
               "Bfor details. You can also implement your own callback modules, see"}],
             0,false},
            {text,"*[CALLBACK FUNCTIONS](./tftp#tftp_callback)"},
            {sep,
             [{text,
               "C. A callback module provided by the user is registered using option"}],
             0,false},
            {text,"\n*callback*"},
            {sep,[{text,[5,44,32,115,101,101]}],0,false},
            {text,
             [28,91,68,65,84,65,32,84,89,80,69,83,93,40,46,47,116,102,116,112,
              35,111,112,116,105,111,110,115,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{text,"$### Using the TFTP client and server"},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "tThis is a simple example of starting the TFTP server and reading the content of a sample file using the TFTP client."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\v**Step 1.**"},
            {sep,
             [{text,"1Create a sample file to be used for the transfer:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"-\n      $ echo \"Erlang/OTP 21\" > file.txt\n    "}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\v**Step 2.**"},
            {sep,
             [{text,
               [22,83,116,97,114,116,32,116,104,101,32,84,70,84,80,32,115,101,
                114,118,101,114,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[6,96,96,96,101,114,108]},
          {sep,
           [{text,
             "K\n      1> {ok, Pid} = tftp:start([{port, 19999}]).\n      {ok,<0.65.0>}\n    "}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\v**Step 3.**"},
            {sep,
             [{text,")Start the TFTP client (in another shell):"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[6,96,96,96,101,114,108]},
          {sep,
           [{text,
             "d\n      1> tftp:read_file(\"file.txt\", binary, [{port, 19999}]).\n      {ok,<<\"Erlang/OTP 21\\n\">>}\n    "}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false}],
  0,false}}
