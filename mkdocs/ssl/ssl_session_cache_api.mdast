{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[5,35,32,115,115,108]},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [23,35,32,115,115,108,95,115,101,115,115,105,111,110,95,99,97,99,104,
          101,95,97,112,105]},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [21,84,76,83,32,115,101,115,115,105,111,110,32,99,97,99,104,101,
             32,65,80,73]}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [146,68,101,102,105,110,101,115,32,116,104,101,32,65,80,73,
                   32,102,111,114,32,116,104,101,32,84,76,83,32,115,101,115,
                   115,105,111,110,32,99,97,99,104,101,32,115,111,32,116,104,
                   97,116,32,116,104,101,32,100,97,116,97,32,115,116,111,114,
                   97,103,101,32,115,99,104,101,109,101,32,99,97,110,32,98,
                   101,32,114,101,112,108,97,99,101,100,32,98,121,32,100,101,
                   102,105,110,105,110,103,32,97,32,110,101,119,32,99,97,108,
                   108,98,97,99,107,32,109,111,100,117,108,101,32,105,109,112,
                   108,101,109,101,110,116,105,110,103,32,116,104,105,115,32,
                   65,80,73,46]}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# Data Types"},null},null}},
    {sep,
     [{sep,
       [{text,
         [17,115,101,115,115,105,111,110,95,99,97,99,104,101,95,114,101,102]}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{text,
         [17,115,101,115,115,105,111,110,95,99,97,99,104,101,95,107,101,121]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"'A key to an entry in the session cache."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,[{text,"\vpartial_key"}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "HThe opaque part of the key. Does not need to be handled by the callback."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,[{text,[7,115,101,115,115,105,111,110]}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"1The session data that is stored for each session."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,100,101,108,101,116,101,40,67,97,99,104,101,44,32,75,101,
        121,41,32,45,62,32,95]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [22,68,101,108,101,116,101,115,32,97,32,99,97,99,104,101,32,101,
            110,116,114,121,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,[7,67,97,99,104,101,32,61]}],0,false},
          {text,".[session_cache_ref()](#type-session_cache_ref)"}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,[5,75,101,121,32,61]}],0,false},
          {text,".[session_cache_key()](#type-session_cache_key)"}],
         0,false}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "FDeletes a cache entry. Is only called from the cache handling process."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"!## foldl(Fun, Acc0, Cache) -> Acc"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {above,
    {above,
     {sep,[{text,[1,42]},{sep,[{text,"\vFun = fun()"}],0,false}],0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,65,99,99,48,32,61,32,65,99,99,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,[7,67,97,99,104,101,32,61]}],0,false},
          {text,".[session_cache_ref()](#type-session_cache_ref)"}],
         0,false}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[5,67,97,108,108,115]}],0,false},
            {text,
             [18,42,70,117,110,40,69,108,101,109,44,32,65,99,99,73,110,41,42]},
            {sep,
             [{text,"2on successive elements of the cache, starting with"}],
             0,false},
            {text,[15,42,65,99,99,73,110,32,61,61,32,65,99,99,48,42]},
            {sep,[{text,[1,46]}],0,false},
            {text,[7,42,70,117,110,47,50,42]},
            {sep,
             [{text,
               "ymust return a new accumulator, which is passed to the next call. The function returns the final value of the accumulator."}],
             0,false},
            {text,[6,42,65,99,99,48,42]},
            {sep,[{text,"\"is returned if the cache is empty."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,105,110,105,116,40,65,114,103,115,41,32,45,62,32,67,97,99,
        104,101]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [24,82,101,116,117,114,110,115,32,99,97,99,104,101,32,114,101,102,
            101,114,101,110,99,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,[7,67,97,99,104,101,32,61]}],0,false},
          {text,".[session_cache_ref()](#type-session_cache_ref)"}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,[6,65,114,103,115,32,61]}],0,false},
          {text,"9[proplists:proplist()](../stdlib/proplists#type-proplist)"}],
         0,false}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [17,73,110,99,108,117,100,101,115,32,112,114,111,112,101,114,
                116,121]}],
             0,false},
            {text,
             [25,42,123,114,111,108,101,44,32,99,108,105,101,110,116,32,124,
              32,115,101,114,118,101,114,125,42]},
            {sep,
             [{text,
               [134,46,32,67,117,114,114,101,110,116,108,121,32,116,104,105,
                115,32,105,115,32,116,104,101,32,111,110,108,121,32,112,114,
                101,100,101,102,105,110,101,100,32,112,114,111,112,101,114,
                116,121,44,32,116,104,101,114,101,32,99,97,110,32,97,108,115,
                111,32,98,101,32,117,115,101,114,45,100,101,102,105,110,101,
                100,32,112,114,111,112,101,114,116,105,101,115,46,32,83,101,
                101,32,97,108,115,111,32,97,112,112,108,105,99,97,116,105,111,
                110,32,101,110,118,105,114,111,110,109,101,110,116,32,118,97,
                114,105,97,98,108,101]}],
             0,false},
            {text,
             [31,91,115,101,115,115,105,111,110,95,99,98,95,105,110,105,116,
              95,97,114,103,115,93,40,115,115,108,95,97,112,112,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "¬Performs possible initializations of the cache and returns a reference to it that is used as parameter to the other API functions. Is called by the cache handling processes"}],
             0,false},
            {text,[6,42,105,110,105,116,42]},
            {sep,
             [{text,
               "Gfunction, hence putting the same requirements on it as a normal process"}],
             0,false},
            {text,[6,42,105,110,105,116,42]},
            {sep,
             [{text,
               "Âfunction. This function is called twice when starting the SSL application, once with the role client and once with the role server, as the SSL application must be prepared to take on both roles."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [30,35,35,32,108,111,111,107,117,112,40,67,97,99,104,101,44,32,75,101,
        121,41,32,45,62,32,69,110,116,114,121]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,76,111,111,107,115,32,117,112,32,97,32,99,97,99,104,101,32,101,
            110,116,114,121,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[7,67,97,99,104,101,32,61]}],0,false},
           {text,".[session_cache_ref()](#type-session_cache_ref)"}],
          0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[5,75,101,121,32,61]}],0,false},
           {text,".[session_cache_key()](#type-session_cache_key)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,"\tSession ="}],0,false},
          {text,
           [26,91,115,101,115,115,105,111,110,40,41,93,40,35,116,121,112,101,
            45,115,101,115,115,105,111,110,41]},
          {sep,[{text,"\v| undefined"}],0,false}],
         0,false}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             ";Looks up a cache entry. Is to be callable from any process."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"1## select_session(Cache, PartialKey) -> [Session]"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Selects sessions that can be reused."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[7,67,97,99,104,101,32,61]}],0,false},
           {text,".[session_cache_ref()](#type-session_cache_ref)"}],
          0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\fPartialKey ="}],0,false},
           {text,"\"[partial_key()](#type-partial_key)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,"\tSession ="}],0,false},
          {text,
           [26,91,115,101,115,115,105,111,110,40,41,93,40,35,116,121,112,101,
            45,115,101,115,115,105,111,110,41]}],
         0,false}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "HSelects sessions that can be reused. Is to be callable from any process."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## size(Cache) -> integer()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,",Returns the number of sessions in the cache."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{sep,
        [{sep,[{text,[7,67,97,99,104,101,32,61]}],0,false},
         {text,".[session_cache_ref()](#type-session_cache_ref)"}],
        0,false}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "ÖReturns the number of sessions in the cache. If size exceeds the maximum number of sessions, the current cache entries will be invalidated regardless of their remaining lifetime. Is to be callable from any process."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [24,35,35,32,116,101,114,109,105,110,97,116,101,40,67,97,99,104,101,41,
        32,45,62,32,95]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "KCalled by the process that handles the cache when it is about to terminate."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,[7,67,97,99,104,101,32,61]}],0,false},
          {text,".[session_cache_ref()](#type-session_cache_ref)"}],
         0,false}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [21,65,115,32,114,101,116,117,114,110,101,100,32,98,121,32,105,110,
          105,116,47,48]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "YTakes care of possible cleanup that is needed when the cache handling process terminates."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"### update(Cache, Key, Session) -> _"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"6Caches a new session or updates an already cached one."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[7,67,97,99,104,101,32,61]}],0,false},
           {text,".[session_cache_ref()](#type-session_cache_ref)"}],
          0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[5,75,101,121,32,61]}],0,false},
           {text,".[session_cache_key()](#type-session_cache_key)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,[{text,"\tSession ="}],0,false},
          {text,
           [26,91,115,101,115,115,105,111,110,40,41,93,40,35,116,121,112,101,
            45,115,101,115,115,105,111,110,41]}],
         0,false}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "fCaches a new session or updates an already cached one. Is only called from the cache handling process."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
