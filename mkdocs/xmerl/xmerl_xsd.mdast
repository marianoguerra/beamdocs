{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v# xmerl_xsd"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v# xmerl_xsd"},null},null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Interface module for XML Schema validation."}],
           0,false}],
         0,true},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "AInterface module for XML Schema validation. It handles the W3.org"}],
                   0,false},
                  {text,"2[specifications](http://www.w3.org/XML/Schema#dev)"},
                  {sep,
                   [{text,
                     "Uof XML Schema second edition 28 october 2004. For an introduction to XML Schema study"}],
                   0,false},
                  {text,",[part 0.](http://www.w3.org/TR/xmlschema-0/)"},
                  {sep,
                   [{text,
                     ":An XML structure is validated by xmerl_xsd:validate/[2,3]."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\r## DATA TYPES"},null},null}},
     {text,
      [25,60,97,32,110,97,109,101,61,34,116,121,112,101,115,34,62,116,121,112,
       101,115,60,47,97,62]},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{text,"\rtype-filename"},
                      {sep,
                       [{text,
                         [21,102,105,108,101,110,97,109,101,40,41,32,61,32,
                          115,116,114,105,110,103,40,41]}],
                       0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},null,{text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{text,
                      [17,116,121,112,101,45,103,108,111,98,97,108,95,115,116,
                       97,116,101]},
                     {sep,
                      [{text,
                        [14,103,108,111,98,97,108,95,115,116,97,116,101,40,
                         41]}],
                      0,false}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {sep,
                 [null,
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            "=The global state of the validator. It is representated by the"}],
                          0,false},
                         {text,"\f#xsd_state{}"},
                         {sep,[{text,[7,114,101,99,111,114,100,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{sep,
                  [{text,
                    [16,116,121,112,101,45,111,112,116,105,111,110,95,108,105,
                     115,116]},
                   {sep,[{text,"\roption_list()"}],0,false}],
                  0,false}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [null,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        ";Options allow to customize the behaviour of the validation."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [22,80,111,115,115,105,98,108,101,32,111,112,116,105,
                         111,110,115,32,97,114,101,32,58]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,
                  {text,[4,60,100,108,62]},
                  {nest,4,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{text,
                                    [20,123,116,97,98,50,102,105,108,101,44,
                                     98,111,111,108,101,97,110,40,41,125]}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{text,
                                         "CEnables saving of abstract structure on file for debugging purpose."}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,
                                 [{text,
                                   [20,123,120,115,100,98,97,115,101,44,102,
                                    105,108,101,110,97,109,101,40,41,125]}],
                                 0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{text,
                                       [19,88,83,68,32,66,97,115,101,32,100,
                                        105,114,101,99,116,111,114,121,46]}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,
                               [{text,
                                 [20,123,102,101,116,99,104,95,102,117,110,44,
                                  70,101,116,99,104,70,117,110,125]}],
                               0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,
                                     "1Call back function to fetch an external resource."}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               [21,123,102,101,116,99,104,95,112,97,116,104,
                                44,80,97,116,104,76,105,115,116,125]}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{text,
                                   [151,80,97,116,104,76,105,115,116,32,105,
                                    115,32,97,32,108,105,115,116,32,111,102,
                                    32,100,105,114,101,99,116,111,114,105,101,
                                    115,32,116,111,32,115,101,97,114,99,104,
                                    32,119,104,101,110,32,102,101,116,99,104,
                                    105,110,103,32,102,105,108,101,115,46,32,
                                    73,102,32,116,104,101,32,102,105,108,101,
                                    32,105,110,32,113,117,101,115,116,105,111,
                                    110,32,105,115,32,110,111,116,32,105,110,
                                    32,116,104,101,32,102,101,116,99,104,95,
                                    112,97,116,104,44,32,116,104,101,32,85,82,
                                    73,32,119,105,108,108,32,98,101,32,117,
                                    115,101,100,32,97,115,32,97,32,102,105,
                                    108,101,32,110,97,109,101,46]}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,[{text,"\r{state,State}"}],0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,
                                 "eIt is possible by this option to provide a state with process information from an earlier validation."}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}}}},
                 {text,[5,60,47,100,108,62]}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"8## file2state(FileName) -> {ok, State} | {error, Reason}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "nReads the schema state with all information of the processed schema from a file created with state2file/[1,2]."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[7,83,116,97,116,101,32,61]}],0,false},
           {text,"$[global_state()](#type-global_state)"}],
          0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,70,105,108,101,78,97,109,101,32,61,32,115,116,114,105,110,103,
           40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,"'<a name=\"file2state-1\">file2state-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "\\Reads the schema state with all information of the processed schema from a file created with"}],
              0,false},
             {text,
              [18,42,115,116,97,116,101,50,102,105,108,101,47,91,49,44,50,93,
               42]},
             {sep,
              [{text,
                "]. The format of this file is internal. The state can then be used validating an XML document."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"$## format_error(L::Errors) -> Result"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Formats error descriptions to human readable strings."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [28,69,114,114,111,114,115,32,61,32,116,117,112,108,101,40,41,32,
           124,32,91,116,117,112,108,101,40,41,93]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [30,82,101,115,117,108,116,32,61,32,115,116,114,105,110,103,40,41,
           32,124,32,91,115,116,114,105,110,103,40,41,93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,"+<a name=\"format_error-1\">format_error-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"5Formats error descriptions to human readable strings."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"### process_schema(Schema) -> Result"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,")Equivalent to process_schema(Schema, [])."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"/<a name=\"process_schema-1\">process_schema-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"/[process_schema(Schema, [])](#process_schema-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,",## process_schema(Schema, Options) -> Result"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "<Reads the referenced XML schema and checks that it is valid."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,83,99,104,101,109,97,32,61,32,115,116,114,105,110,103,40,
              41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,[{text,"&Result = {ok, State} | {error, Reason}"}],0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{sep,[{text,[7,83,116,97,116,101,32,61]}],0,false},
             {text,"$[global_state()](#type-global_state)"}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"$Reason = [ErrorReason] | ErrorReason"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\tOptions ="}],0,false},
           {text,"\"[option_list()](#type-option_list)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,"/<a name=\"process_schema-2\">process_schema-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "HReads the referenced XML schema and checks that it is valid. Returns the"}],
              0,false},
             {text,
              [16,42,103,108,111,98,97,108,95,115,116,97,116,101,40,41,42]},
             {sep,
              [{text,
                [138,119,105,116,104,32,115,99,104,101,109,97,32,105,110,102,
                 111,32,111,114,32,97,110,32,101,114,114,111,114,32,114,101,
                 97,115,111,110,46,32,84,104,101,32,101,114,114,111,114,32,
                 114,101,97,115,111,110,32,109,97,121,32,98,101,32,97,32,108,
                 105,115,116,32,111,102,32,115,101,118,101,114,97,108,32,101,
                 114,114,111,114,115,32,111,114,32,97,32,115,105,110,103,108,
                 101,32,101,114,114,111,114,32,101,110,99,111,117,110,116,101,
                 114,101,100,32,100,117,114,105,110,103,32,116,104,101,32,112,
                 114,111,99,101,115,115,105,110,103,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"%## process_schemas(Schemas) -> Result"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Equivalent to process_schema(Schemas, [])."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"1<a name=\"process_schemas-1\">process_schemas-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"0[process_schema(Schemas, [])](#process_schema-2)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,".## process_schemas(Schemas, Options) -> Result"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "=Reads the referenced XML schemas and controls they are valid."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"0Schemas = [{NameSpace, string()} | Schemas] | []"}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"&Result = {ok, State} | {error, Reason}"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"$Reason = [ErrorReason] | ErrorReason"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,"\tOptions ="}],0,false},
           {text,"\"[option_list()](#type-option_list)"}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{text,"1<a name=\"process_schemas-2\">process_schemas-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "IReads the referenced XML schemas and controls they are valid. Returns the"}],
              0,false},
             {text,
              [16,42,103,108,111,98,97,108,95,115,116,97,116,101,40,41,42]},
             {sep,
              [{text,
                [138,119,105,116,104,32,115,99,104,101,109,97,32,105,110,102,
                 111,32,111,114,32,97,110,32,101,114,114,111,114,32,114,101,
                 97,115,111,110,46,32,84,104,101,32,101,114,114,111,114,32,
                 114,101,97,115,111,110,32,109,97,121,32,98,101,32,97,32,108,
                 105,115,116,32,111,102,32,115,101,118,101,114,97,108,32,101,
                 114,114,111,114,115,32,111,114,32,97,32,115,105,110,103,108,
                 101,32,101,114,114,111,114,32,101,110,99,111,117,110,116,101,
                 114,101,100,32,100,117,114,105,110,103,32,116,104,101,32,112,
                 114,111,99,101,115,115,105,110,103,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"3## process_validate(Schema, Xml::Element) -> Result"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"0Equivalent to process_validate(Schema, Xml, [])."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"3<a name=\"process_validate-2\">process_validate-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              "8[process_validate(Schema, Xml, [])](#process_validate-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        "B## process_validate(Schema, Xml::Element, Opts::Options) -> Result"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "AValidates a parsed well-formed XML element towards an XML schema."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [17,83,99,104,101,109,97,32,61,32,115,116,114,105,110,103,40,
              41]}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [20,69,108,101,109,101,110,116,32,61,32,88,109,108,69,108,101,
              109,101,110,116]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,
            [{sep,[{text,"\tOptions ="}],0,false},
             {text,"\"[option_list()](#type-option_list)"}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"3Result = {ValidXmlElement, State} | {error, Reason}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,[{text,"$Reason = [ErrorReason] | ErrorReason"}],0,false}],
      0,false}},
    {sep,
     [{text,"3<a name=\"process_validate-3\">process_validate-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "AValidates a parsed well-formed XML element towards an XML schema."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [155,86,97,108,105,100,97,116,101,115,32,105,110,32,116,119,111,
               32,115,116,101,112,115,46,32,70,105,114,115,116,32,105,116,32,
               112,114,111,99,101,115,115,101,115,32,116,104,101,32,115,99,
               104,101,109,97,44,32,115,97,118,101,115,32,116,104,101,32,116,
               121,112,101,32,97,110,100,32,115,116,114,117,99,116,117,114,
               101,32,105,110,102,111,32,105,110,32,97,110,32,101,116,115,32,
               116,97,98,108,101,32,97,110,100,32,116,104,101,110,32,118,97,
               108,105,100,97,116,101,115,32,116,104,101,32,101,108,101,109,
               101,110,116,32,116,111,119,97,114,100,115,32,116,104,101,32,
               115,99,104,101,109,97,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[14,85,115,97,103,101,32,101,120,97,109,112,108,101,58]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"3*1>{E,_} = xmerl_scan:file(\"my_XML_document.xml\").*"},
             {above,{above,null,null},null},
             {text,
              "7*2>{E2,_} = xmerl_xsd:validate(\"my_XML_Schema.xsd\",E).*"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "UObserve that E2 may differ from E if for instance there are default values defined in"}],
              0,false},
             {text,
              [19,42,109,121,95,88,77,76,95,83,99,104,101,109,97,46,120,115,
               100,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"/## state2file(S::State) -> ok | {error, Reason}"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Same as state2file(State,SchemaName)."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"'<a name=\"state2file-1\">state2file-1</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"$Same as state2file(State,SchemaName)"}],0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "JThe name of the saved file is the same as the name of the schema, but with"}],
              0,false},
             {text,[6,42,46,120,115,115,42]},
             {sep,[{text,"\nextension."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"9## state2file(S::State, FileName) -> ok | {error, Reason}"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "NSaves the schema state with all information of the processed schema in a file."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{sep,[{text,[7,83,116,97,116,101,32,61]}],0,false},
           {text,"$[global_state()](#type-global_state)"}],
          0,false}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [19,70,105,108,101,78,97,109,101,32,61,32,115,116,114,105,110,103,
           40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,"'<a name=\"state2file-2\">state2file-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [156,83,97,118,101,115,32,116,104,101,32,115,99,104,101,109,
                 97,32,115,116,97,116,101,32,119,105,116,104,32,97,108,108,32,
                 105,110,102,111,114,109,97,116,105,111,110,32,111,102,32,116,
                 104,101,32,112,114,111,99,101,115,115,101,100,32,115,99,104,
                 101,109,97,32,105,110,32,97,32,102,105,108,101,46,32,89,111,
                 117,32,99,97,110,32,112,114,111,118,105,100,101,32,116,104,
                 101,32,102,105,108,101,32,110,97,109,101,32,102,111,114,32,
                 116,104,101,32,115,97,118,101,100,32,115,116,97,116,101,46,
                 32,70,105,108,101,78,97,109,101,32,105,115,32,115,97,118,101,
                 100,32,119,105,116,104,32,116,104,101]}],
              0,false},
             {text,[6,42,46,120,115,115,42]},
             {sep,
              [{text,
                [16,101,120,116,101,110,115,105,111,110,32,97,100,100,101,100,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,{text,"*## validate(Xml::Element, State) -> Result"},null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Equivalent to validate(Element, State, [])."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{text,"#<a name=\"validate-2\">validate-2</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,"+[validate(Element, State, [])](#validate-3)"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,"9## validate(Xml::Element, State, Opts::Options) -> Result"},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"5Validates a parsed well-formed XML element (Element)."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [20,69,108,101,109,101,110,116,32,61,32,88,109,108,69,108,101,
               109,101,110,116]}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{sep,
              [{sep,[{text,"\tOptions ="}],0,false},
               {text,"\"[option_list()](#type-option_list)"}],
              0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [23,82,101,115,117,108,116,32,61,32,123,86,97,108,105,100,69,
                  108,101,109,101,110,116,44]}],
               0,false},
              {text,"$[global_state()](#type-global_state)"},
              {sep,
               [{text,
                 [20,125,32,124,32,123,101,114,114,111,114,44,32,82,101,97,
                  115,111,110,115,125]}],
               0,false}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [25,86,97,108,105,100,69,108,101,109,101,110,116,32,61,32,88,109,
             108,69,108,101,109,101,110,116]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,[{text,[7,83,116,97,116,101,32,61]}],0,false},
            {text,"$[global_state()](#type-global_state)"}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,[{text,"%Reasons = [ErrorReason] | ErrorReason"}],0,false}],
      0,false}},
    {sep,
     [{text,"#<a name=\"validate-3\">validate-3</a>"},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"5Validates a parsed well-formed XML element (Element)."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "PA call to validate/2 or validate/3 must provide a well formed parsed XML element"}],
              0,false},
             {text,
              [15,42,35,120,109,108,69,108,101,109,101,110,116,123,125,42]},
             {sep,[{text,"\fand a State,"}],0,false},
             {text,
              [16,42,103,108,111,98,97,108,95,115,116,97,116,101,40,41,42]},
             {sep,
              [{text,
                "â, which holds necessary information from an already processed schema. Thus validate enables reuse of the schema information and therefore if one shall validate several times towards the same schema it reduces time consumption."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [274,84,104,101,32,114,101,115,117,108,116,44,32,86,97,108,105,
               100,69,108,101,109,101,110,116,44,32,105,115,32,116,104,101,32,
               118,97,108,105,100,32,101,108,101,109,101,110,116,32,116,104,
               97,116,32,99,111,110,102,111,114,109,115,32,116,111,32,116,104,
               101,32,112,111,115,116,45,115,99,104,101,109,97,45,118,97,108,
               105,100,97,116,105,111,110,32,105,110,102,111,115,101,116,46,
               32,87,104,101,110,32,116,104,101,32,118,97,108,105,100,97,116,
               111,114,32,102,105,110,100,115,32,97,110,32,101,114,114,111,
               114,32,105,116,32,116,114,105,101,115,32,116,111,32,99,111,110,
               116,105,110,117,101,32,97,110,100,32,114,101,112,111,114,116,
               115,32,97,32,108,105,115,116,32,111,102,32,97,108,108,32,101,
               114,114,111,114,115,32,102,111,117,110,100,46,32,73,110,32,116,
               104,111,115,101,32,99,97,115,101,115,32,97,110,32,117,110,101,
               120,112,101,99,116,101,100,32,101,114,114,111,114,32,105,115,
               32,102,111,117,110,100,32,105,116,32,109,97,121,32,99,97,117,
               115,101,32,97,32,115,105,110,103,108,101,32,101,114,114,111,
               114,32,114,101,97,115,111,110,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,[14,85,115,97,103,101,32,101,120,97,109,112,108,101,58]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"3*1>{E,_} = xmerl_scan:file(\"my_XML_document.xml\").*"},
             {above,{above,null,null},null},
             {text,
              ";*2>{ok,S} = xmerl_xsd:process_schema(\"my_XML_Schema.xsd\").*"},
             {above,{above,null,null},null},
             {text,"%*3>{E2,_} = xmerl_xsd:validate(E,S).*"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "UObserve that E2 may differ from E if for instance there are default values defined in"}],
              0,false},
             {text,
              [19,42,109,121,95,88,77,76,95,83,99,104,101,109,97,46,120,115,
               100,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t# Authors"},null},null}},
   {sep,[{sep,[null],0,false},{sep,[null],0,false}],0,false}],
  0,false}}
