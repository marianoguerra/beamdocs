{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,[5,35,32,101,112,112]},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,[5,35,32,101,112,112]},null},null}}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [28,65,110,32,69,114,108,97,110,103,32,99,111,100,101,32,112,
               114,101,112,114,111,99,101,115,115,111,114,46]}],
            0,false}],
          0,true},
         null},
        null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "DThe Erlang code preprocessor includes functions that are used by the"}],
                    0,false},
                   {text,
                    [29,91,99,111,109,112,105,108,101,114,47,99,111,109,112,
                     105,108,101,93,40,46,47,99,111,109,112,105,108,101,41]},
                   {sep,
                    [{text,
                      "Mmodule to preprocess macros and include files before the parsing takes place."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      [22,84,104,101,32,69,114,108,97,110,103,32,115,111,117,
                       114,99,101,32,102,105,108,101]}],
                    0,false},
                   {text,
                    [31,60,97,32,110,97,109,101,61,34,101,110,99,111,100,105,
                     110,103,34,62,101,110,99,111,100,105,110,103,60,47,97,
                     62]},
                   {text,"\f**encoding**"},
                   {sep,
                    [{text,
                      "{is selected by a comment in one of the first two lines of the source file. The first string matching the regular expression"}],
                    0,false},
                   {text,"!*coding\\s*[:=]\\s*([-a-zA-Z0-9])+*"},
                   {sep,
                    [{text,
                      "lselects the encoding. If the matching string is not a valid encoding, it is ignored. The valid encodings are"}],
                    0,false},
                   {text,"\t*Latin-1*"},
                   {sep,[{text,[3,97,110,100]}],0,false},
                   {text,[7,42,85,84,70,45,56,42]},
                   {sep,
                    [{text,
                      "8, where the case of the characters can be chosen freely."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {above,
                {above,
                 {text,[3,96,96,96]},
                 {sep,
                  [{text,
                    [17,10,37,37,32,99,111,100,105,110,103,58,32,117,116,102,
                     45,56]}],
                  0,true}},
                {text,[3,96,96,96]}},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {above,
                {above,
                 {text,[3,96,96,96]},
                 {sep,
                  [{text,
                    "3\n%% For this file we have chosen encoding = Latin-1"}],
                  0,true}},
                {text,[3,96,96,96]}},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {above,
                {above,
                 {text,[3,96,96,96]},
                 {sep,[{text,"\e\n%% -*- coding: latin-1 -*-"}],0,true}},
                {text,[3,96,96,96]}},
               null},
              null}}],
           0,false}],
         0,true},
        null},
       null}}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f# Data Types"},null},null}},
      {sep,[{sep,[{text,[6,109,97,99,114,111,115]}],0,false}],0,false},
      {sep,
       [{sep,[{text,"\nepp_handle"}],0,false},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\rHandle to the"}],0,false},
                 {text,[5,42,101,112,112,42]},
                 {sep,[{text,[7,115,101,114,118,101,114,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{sep,
         [{text,
           [15,115,111,117,114,99,101,95,101,110,99,111,100,105,110,103]}],
         0,false}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\v# Functions"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\n## close/1"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"3Close the preprocessing of the file associated with"}],
             0,false},
            {text,[5,42,69,112,112,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,[{text,"#Closes the preprocessing of a file."}],0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [21,35,35,32,100,101,102,97,117,108,116,95,101,110,99,111,100,105,
          110,103,47,48]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"3Return the default encoding of Erlang source files."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"4Returns the default encoding of Erlang source files."}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [23,35,35,32,101,110,99,111,100,105,110,103,95,116,111,95,115,116,
          114,105,110,103,47,49]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,".Return a string representation of an encoding."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "KReturns a string representation of an encoding. The string is recognized by"}],
               0,false},
              {text,"#[read_encoding/1](#read_encoding/1)"},
              {sep,[{text,[1,44]}],0,false},
              {text,
               ";[read_encoding_from_binary/1](#read_encoding_from_binary/1)"},
              {sep,[{text,[5,44,32,97,110,100]}],0,false},
              {text,"![set_encoding/1](#set_encoding/1)"},
              {sep,
               [{text,
                 [20,97,115,32,97,32,118,97,108,105,100,32,101,110,99,111,100,
                  105,110,103,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [17,35,35,32,102,111,114,109,97,116,95,101,114,114,111,114,47,49]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,[{sep,[{text,"\eFormat an error descriptor."}],0,false}],0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\bTakes an"}],0,false},
              {text,
               [17,42,69,114,114,111,114,68,101,115,99,114,105,112,116,111,
                114,42]},
              {sep,
               [{text,
                 "wand returns a string that describes the error or warning. This function is usually called implicitly when processing an"}],
               0,false},
              {text,"\v*ErrorInfo*"},
              {sep,
               [{text,
                 [22,115,116,114,117,99,116,117,114,101,32,40,115,101,101,32,
                  115,101,99,116,105,111,110]}],
               0,false},
              {text,
               [31,91,69,114,114,111,114,32,73,110,102,111,114,109,97,116,105,
                111,110,93,40,35,101,114,114,111,114,105,110,102,111,41]},
              {sep,[{text,[2,41,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\t## open/1"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,79,112,101,110,32,97,32,102,105,108,101,32,102,111,114,32,
              112,114,101,112,114,111,99,101,115,115,105,110,103,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [31,79,112,101,110,115,32,97,32,102,105,108,101,32,102,111,114,
                32,112,114,101,112,114,111,99,101,115,115,105,110,103,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "uIf you want to change the file name of the implicit -file() attributes inserted during preprocessing, you can do with"}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,"\r{source_name,"}],0,false},
                  {sep,[{text,"\nSourceName"}],0,false},
                  {sep,[{text,[1,125]}],0,false}],
                 0,false},
                {text,[1,42]}],
               0,false},
              {sep,
               [{text,
                 ":. If unset it will default to the name of the opened file."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[2,73,102]}],0,false},
              {text,[7,42,101,120,116,114,97,42]},
              {sep,
               [{text,
                 [15,105,115,32,115,112,101,99,105,102,105,101,100,32,105,
                  110]}],
               0,false},
              {text,"\t*Options*"},
              {sep,
               [{text,
                 [21,44,32,116,104,101,32,114,101,116,117,114,110,32,118,97,
                  108,117,101,32,105,115]}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,[4,123,111,107,44]}],0,false},
                  {sep,[{text,[3,69,112,112]}],0,false},
                  {sep,[{text,[1,44]}],0,false},
                  {sep,[{text,[5,69,120,116,114,97]}],0,false},
                  {sep,[{text,[1,125]}],0,false}],
                 0,false},
                {text,[1,42]}],
               0,false},
              {sep,[{text,"\ninstead of"}],0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,[4,123,111,107,44]}],0,false},
                  {sep,[{text,[3,69,112,112]}],0,false},
                  {sep,[{text,[1,125]}],0,false}],
                 0,false},
                {text,[1,42]}],
               0,false},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\t## open/2"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,79,112,101,110,32,97,32,102,105,108,101,32,102,111,114,32,
              112,114,101,112,114,111,99,101,115,115,105,110,103,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\rEquivalent to"}],0,false},
              {text,
               "7*epp:open([{name, FileName}, {includes, IncludePath}])*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\t## open/3"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,79,112,101,110,32,97,32,102,105,108,101,32,102,111,114,32,
              112,114,101,112,114,111,99,101,115,115,105,110,103,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\rEquivalent to"}],0,false},
              {text,
               "O*epp:open([{name, FileName}, {includes, IncludePath}, {macros, PredefMacros}])*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [19,35,35,32,112,97,114,115,101,95,101,114,108,95,102,111,114,109,47,
          49]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "?Return the next Erlang form from the opened Erlang source file."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,[{text,[1,42]},{text,"\fwarning_info"}],0,false},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "FReturns the next Erlang form from the opened Erlang source file. Tuple"}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,[5,123,101,111,102,44]}],0,false},
                  {sep,[{text,[4,76,105,110,101]}],0,false},
                  {sep,[{text,[1,125]}],0,false}],
                 0,false},
                {text,[1,42]}],
               0,false},
              {sep,
               [{text,
                 "Wis returned at the end of the file. The first form corresponds to an implicit attribute"}],
               0,false},
              {text,
               [16,42,45,102,105,108,101,40,70,105,108,101,44,49,41,46,42]},
              {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
              {text,[6,42,70,105,108,101,42]},
              {sep,
               [{text,
                 [17,105,115,32,116,104,101,32,102,105,108,101,32,110,97,109,
                  101,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[15,35,35,32,112,97,114,115,101,95,102,105,108,101,47,50]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Preprocess and parse an Erlang source file."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "@Preprocesses and parses an Erlang source file. Notice that tuple"}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,[5,123,101,111,102,44]}],0,false},
                  {sep,[{text,[4,76,105,110,101]}],0,false},
                  {sep,[{text,[1,125]}],0,false}],
                 0,false},
                {text,[1,42]}],
               0,false},
              {sep,
               [{text,
                 "8returned at the end of the file is included as a \"form\"."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "uIf you want to change the file name of the implicit -file() attributes inserted during preprocessing, you can do with"}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,"\r{source_name,"}],0,false},
                  {sep,[{text,"\nSourceName"}],0,false},
                  {sep,[{text,[1,125]}],0,false}],
                 0,false},
                {text,[1,42]}],
               0,false},
              {sep,
               [{text,
                 ":. If unset it will default to the name of the opened file."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[2,73,102]}],0,false},
              {text,[7,42,101,120,116,114,97,42]},
              {sep,
               [{text,
                 [15,105,115,32,115,112,101,99,105,102,105,101,100,32,105,
                  110]}],
               0,false},
              {text,"\t*Options*"},
              {sep,
               [{text,
                 [21,44,32,116,104,101,32,114,101,116,117,114,110,32,118,97,
                  108,117,101,32,105,115]}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,[6,123,111,107,44,32,91]}],0,false},
                  {sep,[{text,[4,70,111,114,109]}],0,false},
                  {sep,[{text,[2,93,44]}],0,false},
                  {sep,[{text,[5,69,120,116,114,97]}],0,false},
                  {sep,[{text,[1,125]}],0,false}],
                 0,false},
                {text,[1,42]}],
               0,false},
              {sep,[{text,"\ninstead of"}],0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,[{text,[6,123,111,107,44,32,91]}],0,false},
                  {sep,[{text,[4,70,111,114,109]}],0,false},
                  {sep,[{text,[2,93,125]}],0,false}],
                 0,false},
                {text,[1,42]}],
               0,false},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[15,35,35,32,112,97,114,115,101,95,102,105,108,101,47,51]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Preprocess and parse an Erlang source file."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\rEquivalent to"}],0,false},
              {text,
               "M*epp:parse_file(FileName, [{includes, IncludePath}, {macros, PredefMacros}])*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [18,35,35,32,114,101,97,100,95,101,110,99,111,100,105,110,103,47,49]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [18,35,35,32,114,101,97,100,95,101,110,99,111,100,105,110,103,47,50]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [30,82,101,97,100,32,116,104,101,32,101,110,99,111,100,105,110,
              103,32,102,114,111,109,32,97,32,102,105,108,101,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\bRead the"}],0,false},
              {text,
               [21,91,101,110,99,111,100,105,110,103,93,40,35,101,110,99,111,
                100,105,110,103,41]},
              {sep,
               [{text,"*from a file. Returns the read encoding, or"}],
               0,false},
              {text,[6,42,110,111,110,101,42]},
              {sep,
               [{text,
                 [30,105,102,32,110,111,32,118,97,108,105,100,32,101,110,99,
                  111,100,105,110,103,32,105,115,32,102,111,117,110,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[6,79,112,116,105,111,110]}],0,false},
              {text,
               [17,42,105,110,95,99,111,109,109,101,110,116,95,111,110,108,
                121,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,[6,42,116,114,117,101,42]},
              {sep,
               [{text,
                 "?by default, which is correct for Erlang source files. If set to"}],
               0,false},
              {text,[7,42,102,97,108,115,101,42]},
              {sep,
               [{text,
                 "F, the encoding string does not necessarily have to occur in a comment."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [30,35,35,32,114,101,97,100,95,101,110,99,111,100,105,110,103,95,102,
          114,111,109,95,98,105,110,97,114,121,47,49]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [30,35,35,32,114,101,97,100,95,101,110,99,111,100,105,110,103,95,102,
          114,111,109,95,98,105,110,97,114,121,47,50]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," Read the encoding from a binary."}],0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\bRead the"}],0,false},
              {text,
               [21,91,101,110,99,111,100,105,110,103,93,40,35,101,110,99,111,
                100,105,110,103,41]},
              {sep,
               [{text,",from a binary. Returns the read encoding, or"}],
               0,false},
              {text,[6,42,110,111,110,101,42]},
              {sep,
               [{text,
                 [30,105,102,32,110,111,32,118,97,108,105,100,32,101,110,99,
                  111,100,105,110,103,32,105,115,32,102,111,117,110,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,[6,79,112,116,105,111,110]}],0,false},
              {text,
               [17,42,105,110,95,99,111,109,109,101,110,116,95,111,110,108,
                121,42]},
              {sep,[{text,[2,105,115]}],0,false},
              {text,[6,42,116,114,117,101,42]},
              {sep,
               [{text,
                 "?by default, which is correct for Erlang source files. If set to"}],
               0,false},
              {text,[7,42,102,97,108,115,101,42]},
              {sep,
               [{text,
                 "F, the encoding string does not necessarily have to occur in a comment."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [17,35,35,32,115,101,116,95,101,110,99,111,100,105,110,103,47,49]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Read and set the encoding of an I/O device."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\tReads the"}],0,false},
              {text,
               [21,91,101,110,99,111,100,105,110,103,93,40,35,101,110,99,111,
                100,105,110,103,41]},
              {sep,
               [{text,
                 "pfrom an I/O device and sets the encoding of the device accordingly. The position of the I/O device referenced by"}],
               0,false},
              {text,[6,42,70,105,108,101,42]},
              {sep,
               [{text,
                 [133,105,115,32,110,111,116,32,97,102,102,101,99,116,101,100,
                  46,32,73,102,32,110,111,32,118,97,108,105,100,32,101,110,99,
                  111,100,105,110,103,32,99,97,110,32,98,101,32,114,101,97,
                  100,32,102,114,111,109,32,116,104,101,32,73,47,79,32,100,
                  101,118,105,99,101,44,32,116,104,101,32,101,110,99,111,100,
                  105,110,103,32,111,102,32,116,104,101,32,73,47,79,32,100,
                  101,118,105,99,101,32,105,115,32,115,101,116,32,116,111,32,
                  116,104,101,32,100,101,102,97,117,108,116,32,101,110,99,111,
                  100,105,110,103,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [29,82,101,116,117,114,110,115,32,116,104,101,32,114,101,97,
                  100,32,101,110,99,111,100,105,110,103,44,32,111,114]}],
               0,false},
              {text,[6,42,110,111,110,101,42]},
              {sep,
               [{text,
                 [30,105,102,32,110,111,32,118,97,108,105,100,32,101,110,99,
                  111,100,105,110,103,32,105,115,32,102,111,117,110,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [17,35,35,32,115,101,116,95,101,110,99,111,100,105,110,103,47,50]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"+Read and set the encoding of an I/O device."}],
           0,false}],
         0,true},
        null},
       null}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\tReads the"}],0,false},
              {text,
               [21,91,101,110,99,111,100,105,110,103,93,40,35,101,110,99,111,
                100,105,110,103,41]},
              {sep,
               [{text,
                 "pfrom an I/O device and sets the encoding of the device accordingly. The position of the I/O device referenced by"}],
               0,false},
              {text,[6,42,70,105,108,101,42]},
              {sep,
               [{text,
                 "sis not affected. If no valid encoding can be read from the I/O device, the encoding of the I/O device is set to the"}],
               0,false},
              {text,
               [21,91,101,110,99,111,100,105,110,103,93,40,35,101,110,99,111,
                100,105,110,103,41]},
              {sep,[{text,"\fspecified by"}],0,false},
              {text,"\t*Default*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [29,82,101,116,117,114,110,115,32,116,104,101,32,114,101,97,
                  100,32,101,110,99,111,100,105,110,103,44,32,111,114]}],
               0,false},
              {text,[6,42,110,111,110,101,42]},
              {sep,
               [{text,
                 [30,105,102,32,110,111,32,118,97,108,105,100,32,101,110,99,
                  111,100,105,110,103,32,105,115,32,102,111,117,110,100,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [20,35,35,32,69,114,114,111,114,32,73,110,102,111,114,109,97,116,105,
         111,110]},
       null},
      null}},
    {text,"!<a name=\"errorinfo\">errorinfo</a>"},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"\v*ErrorInfo*"},
           {sep,
            [{text,
              [15,105,115,32,116,104,101,32,115,116,97,110,100,97,114,100]}],
            0,false},
           {text,"\v*ErrorInfo*"},
           {sep,
            [{text,
              "Jstructure that is returned from all I/O modules. The format is as follows:"}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,[{text,"%\n{ErrorLine, Module, ErrorDescriptor}"}],0,true}},
        {text,[3,96,96,96]}},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "BA string describing the error is obtained with the following call:"}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,[{text,"%\nModule:format_error(ErrorDescriptor)"}],0,true}},
        {text,[3,96,96,96]}},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## See Also"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [22,91,101,114,108,95,112,97,114,115,101,93,40,101,114,108,95,112,
            97,114,115,101,41]}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
