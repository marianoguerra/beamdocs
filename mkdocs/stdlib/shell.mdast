{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,{above,{text,[0]},null},null},
          {above,{above,{text,[7,35,32,115,104,101,108,108]},null},null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,{above,{text,[7,35,32,115,104,101,108,108]},null},null}}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [17,84,104,101,32,69,114,108,97,110,103,32,115,104,101,108,
                 108,46]}],
              0,false}],
            0,true},
           null},
          null}}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,"%This module provides an Erlang shell."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [341,84,104,101,32,115,104,101,108,108,32,105,115,32,
                         97,32,117,115,101,114,32,105,110,116,101,114,102,97,
                         99,101,32,112,114,111,103,114,97,109,32,102,111,114,
                         32,101,110,116,101,114,105,110,103,32,101,120,112,
                         114,101,115,115,105,111,110,32,115,101,113,117,101,
                         110,99,101,115,46,32,84,104,101,32,101,120,112,114,
                         101,115,115,105,111,110,115,32,97,114,101,32,101,118,
                         97,108,117,97,116,101,100,32,97,110,100,32,97,32,118,
                         97,108,117,101,32,105,115,32,114,101,116,117,114,110,
                         101,100,46,32,65,32,104,105,115,116,111,114,121,32,
                         109,101,99,104,97,110,105,115,109,32,115,97,118,101,
                         115,32,112,114,101,118,105,111,117,115,32,99,111,109,
                         109,97,110,100,115,32,97,110,100,32,116,104,101,105,
                         114,32,118,97,108,117,101,115,44,32,119,104,105,99,
                         104,32,99,97,110,32,116,104,101,110,32,98,101,32,105,
                         110,99,111,114,112,111,114,97,116,101,100,32,105,110,
                         32,108,97,116,101,114,32,99,111,109,109,97,110,100,
                         115,46,32,72,111,119,32,109,97,110,121,32,99,111,109,
                         109,97,110,100,115,32,97,110,100,32,114,101,115,117,
                         108,116,115,32,116,111,32,115,97,118,101,32,99,97,
                         110,32,98,101,32,100,101,116,101,114,109,105,110,101,
                         100,32,98,121,32,116,104,101,32,117,115,101,114,44,
                         32,101,105,116,104,101,114,32,105,110,116,101,114,97,
                         99,116,105,118,101,108,121,44,32,98,121,32,99,97,108,
                         108,105,110,103]}],
                      0,false},
                     {text,
                      [23,91,104,105,115,116,111,114,121,47,49,93,40,35,104,
                       105,115,116,111,114,121,47,49,41]},
                     {sep,[{text,[3,97,110,100]}],0,false},
                     {text,
                      [23,91,114,101,115,117,108,116,115,47,49,93,40,35,114,
                       101,115,117,108,116,115,47,49,41]},
                     {sep,
                      [{text,
                        "8, or by setting the application configuration parameters"}],
                      0,false},
                     {text,
                      [22,42,115,104,101,108,108,95,104,105,115,116,111,114,
                       121,95,108,101,110,103,116,104,42]},
                     {sep,[{text,[3,97,110,100]}],0,false},
                     {text,
                      [21,42,115,104,101,108,108,95,115,97,118,101,100,95,114,
                       101,115,117,108,116,115,42]},
                     {sep,[{text,"\efor the STDLIB application."}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "½The shell uses a helper process for evaluating commands to protect the history mechanism from exceptions. By default the evaluator process is killed when an exception occurs, but by calling"}],
                      0,false},
                     {text,"'[catch_exception/1](#catch_exception/1)"},
                     {sep,
                      [{text,
                        "5or by setting the application configuration parameter"}],
                      0,false},
                     {text,
                      [23,42,115,104,101,108,108,95,99,97,116,99,104,95,101,
                       120,99,101,112,116,105,111,110,42]},
                     {sep,
                      [{text,
                        "Tfor the STDLIB application this behavior can be changed. See also the example below."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "øVariable bindings, and local process dictionary changes that are generated in user expressions are preserved, and the variables can be used in later commands to access their values. The bindings can also be forgotten so the variables can be reused."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "¯The special shell commands all have the syntax of (local) function calls. They are evaluated as normal function calls and many commands can be used in one expression sequence."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "zIf a command (local function call) is not recognized by the shell, an attempt is first made to find the function in module"}],
                      0,false},
                     {text,
                      [14,42,117,115,101,114,95,100,101,102,97,117,108,116,
                       42]},
                     {sep,
                      [{text,
                        [149,44,32,119,104,101,114,101,32,99,117,115,116,111,
                         109,105,122,101,100,32,108,111,99,97,108,32,99,111,
                         109,109,97,110,100,115,32,99,97,110,32,98,101,32,112,
                         108,97,99,101,100,46,32,73,102,32,102,111,117,110,
                         100,44,32,116,104,101,32,102,117,110,99,116,105,111,
                         110,32,105,115,32,101,118,97,108,117,97,116,101,100,
                         44,32,111,116,104,101,114,119,105,115,101,32,97,110,
                         32,97,116,116,101,109,112,116,32,105,115,32,109,97,
                         100,101,32,116,111,32,101,118,97,108,117,97,116,101,
                         32,116,104,101,32,102,117,110,99,116,105,111,110,32,
                         105,110,32,109,111,100,117,108,101]}],
                      0,false},
                     {text,
                      [15,42,115,104,101,108,108,95,100,101,102,97,117,108,
                       116,42]},
                     {sep,[{text,"\b. Module"}],0,false},
                     {text,
                      [14,42,117,115,101,114,95,100,101,102,97,117,108,116,
                       42]},
                     {sep,
                      [{text,
                        [26,109,117,115,116,32,98,101,32,101,120,112,108,105,
                         99,105,116,108,121,32,108,111,97,100,101,100,46]}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      [147,84,104,101,32,115,104,101,108,108,32,97,108,115,
                       111,32,112,101,114,109,105,116,115,32,116,104,101,32,
                       117,115,101,114,32,116,111,32,115,116,97,114,116,32,
                       109,117,108,116,105,112,108,101,32,99,111,110,99,117,
                       114,114,101,110,116,32,106,111,98,115,46,32,65,32,106,
                       111,98,32,99,97,110,32,98,101,32,114,101,103,97,114,
                       100,101,100,32,97,115,32,97,32,115,101,116,32,111,102,
                       32,112,114,111,99,101,115,115,101,115,32,116,104,97,
                       116,32,99,97,110,32,99,111,109,109,117,110,105,99,97,
                       116,101,32,119,105,116,104,32,116,104,101,32,115,104,
                       101,108,108,46]}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      [415,84,104,101,114,101,32,105,115,32,115,111,109,101,
                       32,115,117,112,112,111,114,116,32,102,111,114,32,114,
                       101,97,100,105,110,103,32,97,110,100,32,112,114,105,
                       110,116,105,110,103,32,114,101,99,111,114,100,115,32,
                       105,110,32,116,104,101,32,115,104,101,108,108,46,32,68,
                       117,114,105,110,103,32,99,111,109,112,105,108,97,116,
                       105,111,110,32,114,101,99,111,114,100,32,101,120,112,
                       114,101,115,115,105,111,110,115,32,97,114,101,32,116,
                       114,97,110,115,108,97,116,101,100,32,116,111,32,116,
                       117,112,108,101,32,101,120,112,114,101,115,115,105,111,
                       110,115,46,32,73,110,32,114,117,110,116,105,109,101,32,
                       105,116,32,105,115,32,110,111,116,32,107,110,111,119,
                       110,32,119,104,101,116,104,101,114,32,97,32,116,117,
                       112,108,101,32,114,101,112,114,101,115,101,110,116,115,
                       32,97,32,114,101,99,111,114,100,44,32,97,110,100,32,
                       116,104,101,32,114,101,99,111,114,100,32,100,101,102,
                       105,110,105,116,105,111,110,115,32,117,115,101,100,32,
                       98,121,32,116,104,101,32,99,111,109,112,105,108,101,
                       114,32,97,114,101,32,117,110,97,118,97,105,108,97,98,
                       108,101,32,97,116,32,114,117,110,116,105,109,101,46,32,
                       83,111,44,32,116,111,32,114,101,97,100,32,116,104,101,
                       32,114,101,99,111,114,100,32,115,121,110,116,97,120,32,
                       97,110,100,32,112,114,105,110,116,32,116,117,112,108,
                       101,115,32,97,115,32,114,101,99,111,114,100,115,32,119,
                       104,101,110,32,112,111,115,115,105,98,108,101,44,32,
                       114,101,99,111,114,100,32,100,101,102,105,110,105,116,
                       105,111,110,115,32,109,117,115,116,32,98,101,32,109,97,
                       105,110,116,97,105,110,101,100,32,98,121,32,116,104,
                       101,32,115,104,101,108,108,32,105,116,115,101,108,102,
                       46]}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        "ÙThe shell commands for reading, defining, forgetting, listing, and printing records are described below. Notice that each job has its own set of record definitions. To facilitate matters, record definitions in modules"}],
                      0,false},
                     {text,
                      [15,42,115,104,101,108,108,95,100,101,102,97,117,108,
                       116,42]},
                     {sep,[{text,[3,97,110,100]}],0,false},
                     {text,
                      [14,42,117,115,101,114,95,100,101,102,97,117,108,116,
                       42]},
                     {sep,
                      [{text,
                        "^(if loaded) are read each time a new job is started. For example, adding the following line to"}],
                      0,false},
                     {text,
                      [14,42,117,115,101,114,95,100,101,102,97,117,108,116,
                       42]},
                     {sep,
                      [{text,
                        [23,109,97,107,101,115,32,116,104,101,32,100,101,102,
                         105,110,105,116,105,111,110,32,111,102]}],
                      0,false},
                     {text,"\v*file_info*"},
                     {sep,
                      [{text,
                        [31,114,101,97,100,105,108,121,32,97,118,97,105,108,
                         97,98,108,101,32,105,110,32,116,104,101,32,115,104,
                         101,108,108,58]}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,")\n-include_lib(\"kernel/include/file.hrl\")."}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      [28,84,104,101,32,115,104,101,108,108,32,114,117,110,
                       115,32,105,110,32,116,119,111,32,109,111,100,101,115,
                       58]}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [30,42,78,111,114,109,97,108,32,40,112,111,115,115,105,98,
                     108,121,32,114,101,115,116,114,105,99,116,101,100,41,42]},
                   {sep,
                    [{text,
                      "?mode, in which commands can be edited and expressions evaluated"}],
                    0,false}],
                  0,false}],
                0,false},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{sep,
                    [{text,
                      [17,74,111,98,32,67,111,110,116,114,111,108,32,77,111,
                       100,101,44]}],
                    0,false},
                   {text,[5,42,74,67,76,42]},
                   {sep,
                    [{text,
                      "?, in which jobs can be started, killed, detached, and connected"}],
                    0,false}],
                  0,false}],
                0,false}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "9Only the currently connected job can 'talk' to the shell."}],
                    0,false}],
                  0,true},
                 null},
                null}}],
             0,false}],
           0,true},
          null},
         null}}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {text,
            [17,35,35,32,83,104,101,108,108,32,67,111,109,109,97,110,100,115]},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {above,
                                             {above,
                                              {above,
                                               {above,
                                                {above,
                                                 {above,
                                                  {above,
                                                   {above,
                                                    {above,
                                                     {above,
                                                      {above,{text,[0]},null},
                                                      null},
                                                     {above,
                                                      {above,
                                                       {sep,
                                                        [{text,
                                                          [4,60,100,116,62]},
                                                         {sep,
                                                          [{text,
                                                            [3,98,40,41]}],
                                                          0,false},
                                                         {text,
                                                          [5,60,47,100,116,
                                                           62]}],
                                                        0,true},
                                                       null},
                                                      null}},
                                                    {above,
                                                     {above,
                                                      {above,{text,[0]},null},
                                                      null},
                                                     {above,
                                                      {above,
                                                       {sep,
                                                        [{text,
                                                          [4,60,100,100,62]},
                                                         {above,
                                                          {above,
                                                           {above,
                                                            {text,[0]},
                                                            null},
                                                           null},
                                                          {above,
                                                           {above,
                                                            {sep,
                                                             [{sep,
                                                               [{text,
                                                                 "%Prints the current variable bindings."}],
                                                               0,false}],
                                                             0,true},
                                                            null},
                                                           null}},
                                                         {text,
                                                          [5,60,47,100,100,
                                                           62]}],
                                                        0,true},
                                                       null},
                                                      null}}},
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{text,
                                                         [4,60,100,116,62]},
                                                        {sep,
                                                         [{text,
                                                           [3,102,40,41]}],
                                                         0,false},
                                                        {text,
                                                         [5,60,47,100,116,
                                                          62]}],
                                                       0,true},
                                                      null},
                                                     null}}},
                                                  {above,
                                                   {above,
                                                    {above,{text,[0]},null},
                                                    null},
                                                   {above,
                                                    {above,
                                                     {sep,
                                                      [{text,
                                                        [4,60,100,100,62]},
                                                       {above,
                                                        {above,
                                                         {above,
                                                          {text,[0]},
                                                          null},
                                                         null},
                                                        {above,
                                                         {above,
                                                          {sep,
                                                           [{sep,
                                                             [{text,
                                                               [30,82,101,109,
                                                                111,118,101,
                                                                115,32,97,108,
                                                                108,32,118,97,
                                                                114,105,97,98,
                                                                108,101,32,98,
                                                                105,110,100,
                                                                105,110,103,
                                                                115,46]}],
                                                             0,false}],
                                                           0,true},
                                                          null},
                                                         null}},
                                                       {text,
                                                        [5,60,47,100,100,62]}],
                                                      0,true},
                                                     null},
                                                    null}}},
                                                 {above,
                                                  {above,
                                                   {above,{text,[0]},null},
                                                   null},
                                                  {above,
                                                   {above,
                                                    {sep,
                                                     [{text,[4,60,100,116,62]},
                                                      {sep,
                                                       [{text,
                                                         [4,102,40,88,41]}],
                                                       0,false},
                                                      {text,
                                                       [5,60,47,100,116,62]}],
                                                     0,true},
                                                    null},
                                                   null}}},
                                                {above,
                                                 {above,
                                                  {above,{text,[0]},null},
                                                  null},
                                                 {above,
                                                  {above,
                                                   {sep,
                                                    [{text,[4,60,100,100,62]},
                                                     {above,
                                                      {above,
                                                       {above,{text,[0]},null},
                                                       null},
                                                      {above,
                                                       {above,
                                                        {sep,
                                                         [{sep,
                                                           [{sep,
                                                             [{text,
                                                               [31,82,101,109,
                                                                111,118,101,
                                                                115,32,116,
                                                                104,101,32,98,
                                                                105,110,100,
                                                                105,110,103,
                                                                32,111,102,32,
                                                                118,97,114,
                                                                105,97,98,108,
                                                                101]}],
                                                             0,false},
                                                            {text,[1,88]},
                                                            {sep,
                                                             [{text,[1,46]}],
                                                             0,false}],
                                                           0,false}],
                                                         0,true},
                                                        null},
                                                       null}},
                                                     {text,
                                                      [5,60,47,100,100,62]}],
                                                    0,true},
                                                   null},
                                                  null}}},
                                               {above,
                                                {above,
                                                 {above,{text,[0]},null},
                                                 null},
                                                {above,
                                                 {above,
                                                  {sep,
                                                   [{text,[4,60,100,116,62]},
                                                    {sep,
                                                     [{text,[3,104,40,41]}],
                                                     0,false},
                                                    {text,
                                                     [5,60,47,100,116,62]}],
                                                   0,true},
                                                  null},
                                                 null}}},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{text,[4,60,100,100,62]},
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{sep,
                                                         [{text,
                                                           [24,80,114,105,110,
                                                            116,115,32,116,
                                                            104,101,32,104,
                                                            105,115,116,111,
                                                            114,121,32,108,
                                                            105,115,116,46]}],
                                                         0,false}],
                                                       0,true},
                                                      null},
                                                     null}},
                                                   {text,
                                                    [5,60,47,100,100,62]}],
                                                  0,true},
                                                 null},
                                                null}}},
                                             {above,
                                              {above,
                                               {above,{text,[0]},null},
                                               null},
                                              {above,
                                               {above,
                                                {sep,
                                                 [{text,[4,60,100,116,62]},
                                                  {sep,
                                                   [{text,"\nhistory(N)"}],
                                                   0,false},
                                                  {text,[5,60,47,100,116,62]}],
                                                 0,true},
                                                null},
                                               null}}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{text,[4,60,100,100,62]},
                                                 {above,
                                                  {above,
                                                   {above,{text,[0]},null},
                                                   null},
                                                  {above,
                                                   {above,
                                                    {sep,
                                                     [{sep,
                                                       [{sep,
                                                         [{text,
                                                           "CSets the number of previous commands to keep in the history list to"}],
                                                         0,false},
                                                        {text,[1,78]},
                                                        {sep,
                                                         [{text,
                                                           "2. The previous number is returned. Defaults to 20."}],
                                                         0,false}],
                                                       0,false}],
                                                     0,true},
                                                    null},
                                                   null}},
                                                 {text,[5,60,47,100,100,62]}],
                                                0,true},
                                               null},
                                              null}}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{text,[4,60,100,116,62]},
                                                {sep,
                                                 [{text,"\nresults(N)"}],
                                                 0,false},
                                                {text,[5,60,47,100,116,62]}],
                                               0,true},
                                              null},
                                             null}}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{text,[4,60,100,100,62]},
                                               {above,
                                                {above,
                                                 {above,{text,[0]},null},
                                                 null},
                                                {above,
                                                 {above,
                                                  {sep,
                                                   [{sep,
                                                     [{sep,
                                                       [{text,
                                                         "PSets the number of results from previous commands to keep in the history list to"}],
                                                       0,false},
                                                      {text,[1,78]},
                                                      {sep,
                                                       [{text,
                                                         "2. The previous number is returned. Defaults to 20."}],
                                                       0,false}],
                                                     0,false}],
                                                   0,true},
                                                  null},
                                                 null}},
                                               {text,[5,60,47,100,100,62]}],
                                              0,true},
                                             null},
                                            null}}},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{text,[4,60,100,116,62]},
                                              {sep,
                                               [{text,[4,101,40,78,41]}],
                                               0,false},
                                              {text,[5,60,47,100,116,62]}],
                                             0,true},
                                            null},
                                           null}}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{text,[4,60,100,100,62]},
                                             {above,
                                              {above,
                                               {above,{text,[0]},null},
                                               null},
                                              {above,
                                               {above,
                                                {sep,
                                                 [{sep,
                                                   [{sep,
                                                     [{text,
                                                       [15,82,101,112,101,97,
                                                        116,115,32,99,111,109,
                                                        109,97,110,100]}],
                                                     0,false},
                                                    {text,[1,78]},
                                                    {sep,
                                                     [{text,
                                                       [4,44,32,105,102]}],
                                                     0,false},
                                                    {text,[1,78]},
                                                    {sep,
                                                     [{text,
                                                       "#is positive. If it is negative, the"}],
                                                     0,false},
                                                    {text,[1,78]},
                                                    {sep,
                                                     [{text,
                                                       ")th previous command is repeated (that is,"}],
                                                     0,false},
                                                    {text,[5,101,40,45,49,41]},
                                                    {sep,
                                                     [{text,
                                                       [30,114,101,112,101,97,
                                                        116,115,32,116,104,
                                                        101,32,112,114,101,
                                                        118,105,111,117,115,
                                                        32,99,111,109,109,97,
                                                        110,100,41,46]}],
                                                     0,false}],
                                                   0,false}],
                                                 0,true},
                                                null},
                                               null}},
                                             {text,[5,60,47,100,100,62]}],
                                            0,true},
                                           null},
                                          null}}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,116,62]},
                                            {sep,
                                             [{text,[4,118,40,78,41]}],
                                             0,false},
                                            {text,[5,60,47,100,116,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,100,62]},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{sep,
                                                 [{sep,
                                                   [{text,
                                                     " Uses the return value of command"}],
                                                   0,false},
                                                  {text,[1,78]},
                                                  {sep,
                                                   [{text,
                                                     [26,105,110,32,116,104,
                                                      101,32,99,117,114,114,
                                                      101,110,116,32,99,111,
                                                      109,109,97,110,100,44,
                                                      32,105,102]}],
                                                   0,false},
                                                  {text,[1,78]},
                                                  {sep,
                                                   [{text,
                                                     "7is positive. If it is negative, the return value of the"}],
                                                   0,false},
                                                  {text,[1,78]},
                                                  {sep,
                                                   [{text,
                                                     "%th previous command is used (that is,"}],
                                                   0,false},
                                                  {text,[5,118,40,45,49,41]},
                                                  {sep,
                                                   [{text,
                                                     "(uses the value of the previous command)."}],
                                                   0,false}],
                                                 0,false}],
                                               0,true},
                                              null},
                                             null}},
                                           {text,[5,60,47,100,100,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,116,62]},
                                          {sep,
                                           [{text,[6,104,101,108,112,40,41]}],
                                           0,false},
                                          {text,[5,60,47,100,116,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,100,62]},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{sep,
                                               [{sep,
                                                 [{text,"\tEvaluates"}],
                                                 0,false},
                                                {text,
                                                 [20,115,104,101,108,108,95,
                                                  100,101,102,97,117,108,116,
                                                  58,104,101,108,112,40,41]},
                                                {sep,[{text,[1,46]}],0,false}],
                                               0,false}],
                                             0,true},
                                            null},
                                           null}},
                                         {text,[5,60,47,100,100,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,116,62]},
                                        {sep,
                                         [{text,[6,99,40,77,111,100,41]}],
                                         0,false},
                                        {text,[5,60,47,100,116,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,100,62]},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,"\tEvaluates"}],
                                               0,false},
                                              {text,
                                               [20,115,104,101,108,108,95,100,
                                                101,102,97,117,108,116,58,99,
                                                40,77,111,100,41]},
                                              {sep,
                                               [{text,
                                                 "$. This compiles and loads the module"}],
                                               0,false},
                                              {text,[3,77,111,100]},
                                              {sep,
                                               [{text,
                                                 "2and purges old versions of the code, if necessary."}],
                                               0,false},
                                              {text,[3,77,111,100]},
                                              {sep,
                                               [{text,
                                                 "Dcan be either a module name or a a source file path, with or without"}],
                                               0,false},
                                              {text,[4,46,101,114,108]},
                                              {sep,
                                               [{text,"\nextension."}],
                                               0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {text,[5,60,47,100,100,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,116,62]},
                                      {sep,
                                       [{text,
                                         [21,99,97,116,99,104,95,101,120,99,
                                          101,112,116,105,111,110,40,66,111,
                                          111,108,41]}],
                                       0,false},
                                      {text,[5,60,47,100,116,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,100,62]},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{sep,
                                           [{sep,
                                             [{text,
                                               "pSets the exception handling of the evaluator process. The previous exception handling is returned. The default ("}],
                                             0,false},
                                            {text,[5,102,97,108,115,101]},
                                            {sep,
                                             [{text,
                                               [156,41,32,105,115,32,116,111,
                                                32,107,105,108,108,32,116,104,
                                                101,32,101,118,97,108,117,97,
                                                116,111,114,32,112,114,111,99,
                                                101,115,115,32,119,104,101,
                                                110,32,97,110,32,101,120,99,
                                                101,112,116,105,111,110,32,
                                                111,99,99,117,114,115,44,32,
                                                119,104,105,99,104,32,99,97,
                                                117,115,101,115,32,116,104,
                                                101,32,115,104,101,108,108,32,
                                                116,111,32,99,114,101,97,116,
                                                101,32,97,32,110,101,119,32,
                                                101,118,97,108,117,97,116,111,
                                                114,32,112,114,111,99,101,115,
                                                115,46,32,87,104,101,110,32,
                                                116,104,101,32,101,120,99,101,
                                                112,116,105,111,110,32,104,97,
                                                110,100,108,105,110,103,32,
                                                105,115,32,115,101,116,32,116,
                                                111]}],
                                             0,false},
                                            {text,[4,116,114,117,101]},
                                            {sep,
                                             [{text,
                                               " , the evaluator process lives on. This means, for example, that ports and ETS tables as well as processes linked to the evaluator process survive the exception."}],
                                             0,false}],
                                           0,false}],
                                         0,true},
                                        null},
                                       null}},
                                     {text,[5,60,47,100,100,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,
                                     [{text,
                                       " rd(RecordName, RecordDefinition)"}],
                                     0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,100,62]},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{sep,
                                         [{sep,
                                           [{text,
                                             [30,68,101,102,105,110,101,115,
                                              32,97,32,114,101,99,111,114,100,
                                              32,105,110,32,116,104,101,32,
                                              115,104,101,108,108,46]}],
                                           0,false},
                                          {text,"\nRecordName"},
                                          {sep,
                                           [{text,
                                             [14,105,115,32,97,110,32,97,116,
                                              111,109,32,97,110,100]}],
                                           0,false},
                                          {text,
                                           [16,82,101,99,111,114,100,68,101,
                                            102,105,110,105,116,105,111,110]},
                                          {sep,
                                           [{text,
                                             "rlists the field names and the default values. Usually record definitions are made known to the shell by use of the"}],
                                           0,false},
                                          {text,"\brr/1,2,3"},
                                          {sep,
                                           [{text,
                                             "Qcommands described below, but sometimes it is handy to define records on the fly."}],
                                           0,false}],
                                         0,false}],
                                       0,true},
                                      null},
                                     null}},
                                   {text,[5,60,47,100,100,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,[{text,[4,114,102,40,41]}],0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{sep,
                                         [{text,
                                           "NRemoves all record definitions, then reads record definitions from the modules"}],
                                         0,false},
                                        {text,"\rshell_default"},
                                        {sep,[{text,[3,97,110,100]}],0,false},
                                        {text,"\fuser_default"},
                                        {sep,
                                         [{text,
                                           "6(if loaded). Returns the names of the records defined."}],
                                         0,false}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,
                                 [{text,
                                   [15,114,102,40,82,101,99,111,114,100,78,97,
                                    109,101,115,41]}],
                                 0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{sep,
                                       [{text,
                                         "$Removes selected record definitions."}],
                                       0,false},
                                      {text,"\vRecordNames"},
                                      {sep,
                                       [{text,
                                         "Qis a record name or a list of record names. To remove all record definitions, use"}],
                                       0,false},
                                      {text,[3,39,95,39]},
                                      {sep,[{text,[1,46]}],0,false}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,[{text,[4,114,108,40,41]}],0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,
                                     [30,80,114,105,110,116,115,32,97,108,108,
                                      32,114,101,99,111,114,100,32,100,101,
                                      102,105,110,105,116,105,111,110,115,
                                      46]}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               [15,114,108,40,82,101,99,111,114,100,78,97,109,
                                101,115,41]}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,
                                   [{text,
                                     "#Prints selected record definitions."}],
                                   0,false},
                                  {text,"\vRecordNames"},
                                  {sep,
                                   [{text,
                                     "+is a record name or a list of record names."}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,[{text,"\brp(Term)"}],0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,
                                 [{text,
                                   "EPrints a term using the record definitions known to the shell. All of"}],
                                 0,false},
                                {text,[4,84,101,114,109]},
                                {sep,
                                 [{text,
                                   "Sis printed; the depth is not limited as is the case when a return value is printed."}],
                                 0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,"\nrr(Module)"}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 "ÇReads record definitions from a module's BEAM file. If there are no record definitions in the BEAM file, the source file is located and read instead. Returns the names of the record definitions read."}],
                               0,false},
                              {text,[6,77,111,100,117,108,101]},
                              {sep,[{text,"\vis an atom."}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,"\frr(Wildcard)"}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               "gReads record definitions from files. Existing definitions of any of the record names read are replaced."}],
                             0,false},
                            {text,"\bWildcard"},
                            {sep,
                             [{text,"\"is a wildcard string as defined in"}],
                             0,false},
                            {text,[7,102,105,108,101,108,105,98]},
                            {sep,
                             [{text,
                               [18,44,32,98,117,116,32,110,111,116,32,97,110,
                                32,97,116,111,109,46]}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,"!rr(WildcardOrModule, RecordNames)"}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "NReads record definitions from files but discards record names not mentioned in"}],
                           0,false},
                          {text,"\vRecordNames"},
                          {sep,
                           [{text,
                             "*(a record name or a list of record names)."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,"*rr(WildcardOrModule, RecordNames, Options)"}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "9Reads record definitions from files. The compiler options"}],
                         0,false},
                        {text,"\t{i,Â Dir}"},
                        {sep,[{text,[1,44]}],0,false},
                        {text,"\v{d,Â Macro}"},
                        {sep,[{text,[5,44,32,97,110,100]}],0,false},
                        {text,
                         [19,123,100,44,194,160,77,97,99,114,111,44,194,160,
                          86,97,108,117,101,125]},
                        {sep,
                         [{text,
                           "rare recognized and used for setting up the include path and macro definitions. To read all record definitions, use"}],
                         0,false},
                        {text,[3,39,95,39]},
                        {sep,[{text,"\vas value of"}],0,false},
                        {text,"\vRecordNames"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\n## Example"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "MThe following example is a long dialog with the shell. Commands starting with"}],
               0,false},
              {text,[3,42,62,42]},
              {sep,
               [{text,
                 "Care inputs to the shell. All other lines are output from the shell."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,"\f\nstrider 1> "},
              {text,[3,101,114,108]},
              {text,
               "X\nErlang (BEAM) emulator version 5.3 [hipe] [threads:0]\n\nEshell V5.3  (abort with ^G)\n1> "},
              {text,"\rStr = \"abcd\"."},
              {text,[7,10,34,97,98,99,100,34]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [23,67,111,109,109,97,110,100,32,49,32,115,101,116,115,32,
                  118,97,114,105,97,98,108,101]}],
               0,false},
              {text,[5,42,83,116,114,42]},
              {sep,[{text,"\tto string"}],0,false},
              {text,"\b*\"abcd\"*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[4,10,50,62,32]},
              {text,
               [16,76,32,61,32,108,101,110,103,116,104,40,83,116,114,41,46]},
              {text,[2,10,52]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [14,67,111,109,109,97,110,100,32,50,32,115,101,116,115]}],
               0,false},
              {text,[3,42,76,42]},
              {sep,
               [{text,
                 [23,116,111,32,116,104,101,32,108,101,110,103,116,104,32,111,
                  102,32,115,116,114,105,110,103]}],
               0,false},
              {text,[5,42,83,116,114,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[4,10,51,62,32]},
              {text,"$Descriptor = {L, list_to_atom(Str)}."},
              {text,"\t\n{4,abcd}"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [26,67,111,109,109,97,110,100,32,51,32,98,117,105,108,100,
                  115,32,116,104,101,32,116,117,112,108,101]}],
               0,false},
              {text,"\f*Descriptor*"},
              {sep,
               [{text,
                 [20,44,32,101,118,97,108,117,97,116,105,110,103,32,116,104,
                  101,32,66,73,70]}],
               0,false},
              {text,
               ";[erts/erlang#list_to_atom/1](../erts/erlang#list_to_atom/1)"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[4,10,52,62,32]},{text,[2,76,46]},{text,[3,32,10,52]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"&Command 4 prints the value of variable"}],0,false},
              {text,[3,42,76,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[4,10,53,62,32]},
              {text,[4,98,40,41,46]},
              {text,",\nDescriptor = {4,abcd}\nL = 4\nStr = \"abcd\"\nok"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,".Command 5 evaluates the internal shell command"}],
               0,false},
              {text,[5,42,98,40,41,42]},
              {sep,
               [{text,
                 "e, which is an abbreviation of \"bindings\". This prints the current shell variables and their bindings."}],
               0,false},
              {text,[4,42,111,107,42]},
              {sep,
               [{text,"*at the end is the return value of function"}],
               0,false},
              {text,[5,42,98,40,41,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[4,10,54,62,32]},
              {text,[5,102,40,76,41,46]},
              {text,[4,32,10,111,107]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,".Command 6 evaluates the internal shell command"}],
               0,false},
              {text,[6,42,102,40,76,41,42]},
              {sep,
               [{text,"1(abbreviation of \"forget\"). The value of variable"}],
               0,false},
              {text,[3,42,76,42]},
              {sep,[{text,"\vis removed."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[4,10,55,62,32]},
              {text,[4,98,40,41,46]},
              {text,"&\nDescriptor = {4,abcd}\nStr = \"abcd\"\nok"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,[{text,"\"Command 7 prints the new bindings."}],0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[4,10,56,62,32]},
              {text,[5,102,40,76,41,46]},
              {text,[3,10,111,107]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"\eCommand 8 has no effect, as"}],0,false},
              {text,[3,42,76,42]},
              {sep,[{text,"\rhas no value."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[4,10,57,62,32]},
              {text,
               [20,123,76,44,32,95,125,32,61,32,68,101,115,99,114,105,112,116,
                111,114,46]},
              {text,"\t\n{4,abcd}"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"2Command 9 performs a pattern matching operation on"}],
               0,false},
              {text,"\f*Descriptor*"},
              {sep,
               [{text,
                 [24,44,32,98,105,110,100,105,110,103,32,97,32,110,101,119,32,
                  118,97,108,117,101,32,116,111]}],
               0,false},
              {text,[3,42,76,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,49,48,62,32]},{text,[2,76,46]},{text,[2,10,52]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"&Command 10 prints the current value of"}],0,false},
              {text,[3,42,76,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,49,49,62,32]},
              {text,
               [23,123,80,44,32,81,44,32,82,125,32,61,32,68,101,115,99,114,
                105,112,116,111,114,46]},
              {text,
               "?\n** exception error: no match of right hand side value {4,abcd}"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [25,67,111,109,109,97,110,100,32,49,49,32,116,114,105,101,
                  115,32,116,111,32,109,97,116,99,104]}],
               0,false},
              {text,"\v*{P, Q, R}*"},
              {sep,[{text,[7,97,103,97,105,110,115,116]}],0,false},
              {text,"\f*Descriptor*"},
              {sep,[{text,"\n, which is"}],0,false},
              {text,"\n*{4, abc}*"},
              {sep,
               [{text,
                 "Z. The match fails and none of the new variables become bound. The printout starting with \""}],
               0,false},
              {text,
               [21,42,42,42,32,101,120,99,101,112,116,105,111,110,32,101,114,
                114,111,114,58,42]},
              {sep,
               [{text,
                 "Ø\" is not the value of the expression (the expression had no value because its evaluation failed), but a warning printed by the system to inform the user that an error has occurred. The values of the other variables ("}],
               0,false},
              {text,[3,42,76,42]},
              {sep,[{text,[1,44]}],0,false},
              {text,[5,42,83,116,114,42]},
              {sep,[{text,"\e, and so on) are unchanged."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,49,50,62,32]},
              {text,[2,80,46]},
              {text,"\"\n* 1: variable 'P' is unbound\n13> "},
              {text,"\vDescriptor."},
              {text,"\t\n{4,abcd}"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [28,67,111,109,109,97,110,100,115,32,49,50,32,97,110,100,32,
                  49,51,32,115,104,111,119,32,116,104,97,116]}],
               0,false},
              {text,[3,42,80,42]},
              {sep,
               [{text,
                 "8is unbound because the previous command failed, and that"}],
               0,false},
              {text,"\f*Descriptor*"},
              {sep,
               [{text,
                 [16,104,97,115,32,110,111,116,32,99,104,97,110,103,101,100,
                  46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[4,10,49,52,62]},
              {text,
               [20,123,80,44,32,81,125,32,61,32,68,101,115,99,114,105,112,116,
                111,114,46]},
              {text,[14,10,123,52,44,97,98,99,100,125,10,49,53,62,32]},
              {text,[2,80,46]},
              {text,[2,10,52]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"-Commands 14 and 15 show a correct match where"}],
               0,false},
              {text,[3,42,80,42]},
              {sep,[{text,[3,97,110,100]}],0,false},
              {text,[3,42,81,42]},
              {sep,[{text,"\nare bound."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,49,54,62,32]},
              {text,[4,102,40,41,46]},
              {text,[3,10,111,107]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [31,67,111,109,109,97,110,100,32,49,54,32,99,108,101,97,114,
                115,32,97,108,108,32,98,105,110,100,105,110,103,115,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text,"!The next few commands assume that"}],0,false},
              {text,[15,42,116,101,115,116,49,58,100,101,109,111,40,88,41,42]},
              {sep,
               [{text,
                 [22,105,115,32,100,101,102,105,110,101,100,32,97,115,32,102,
                  111,108,108,111,119,115,58]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\f*demo(X) ->*"},
              {above,{above,null,null},null},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {text,
               [18,42,112,117,116,40,97,97,44,32,119,111,114,107,101,100,41,
                44,42]},
              {above,{above,null,null},null},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {text,"\b*X = 1,*"},
              {above,{above,null,null},null},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {text,"\t*X + 10.*"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,49,55,62,32]},
              {text,[15,112,117,116,40,97,97,44,32,104,101,108,108,111,41,46]},
              {text,
               [15,10,117,110,100,101,102,105,110,101,100,10,49,56,62,32]},
              {text,"\bget(aa)."},
              {text,[6,10,104,101,108,108,111]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "4Commands 17 and 18 set and inspect the value of item"}],
               0,false},
              {text,[4,42,97,97,42]},
              {sep,
               [{text,
                 [26,105,110,32,116,104,101,32,112,114,111,99,101,115,115,32,
                  100,105,99,116,105,111,110,97,114,121,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,49,57,62,32]},
              {text,
               [18,89,32,61,32,116,101,115,116,49,58,100,101,109,111,40,49,41,
                46]},
              {text,[3,10,49,49]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [20,67,111,109,109,97,110,100,32,49,57,32,101,118,97,108,117,
                  97,116,101,115]}],
               0,false},
              {text,[15,42,116,101,115,116,49,58,100,101,109,111,40,49,41,42]},
              {sep,
               [{text,
                 [134,46,32,84,104,101,32,101,118,97,108,117,97,116,105,111,
                  110,32,115,117,99,99,101,101,100,115,32,97,110,100,32,116,
                  104,101,32,99,104,97,110,103,101,115,32,109,97,100,101,32,
                  105,110,32,116,104,101,32,112,114,111,99,101,115,115,32,100,
                  105,99,116,105,111,110,97,114,121,32,98,101,99,111,109,101,
                  32,118,105,115,105,98,108,101,32,116,111,32,116,104,101,32,
                  115,104,101,108,108,46,32,84,104,101,32,110,101,119,32,118,
                  97,108,117,101,32,111,102,32,100,105,99,116,105,111,110,97,
                  114,121,32,105,116,101,109]}],
               0,false},
              {text,[4,42,97,97,42]},
              {sep,
               [{text,
                 [26,99,97,110,32,98,101,32,115,101,101,110,32,105,110,32,99,
                  111,109,109,97,110,100,32,50,48,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,50,48,62,32]},
              {text,[6,103,101,116,40,41,46]},
              {text,
               [19,10,91,123,97,97,44,119,111,114,107,101,100,125,93,10,50,49,
                62,32]},
              {text,[15,112,117,116,40,97,97,44,32,104,101,108,108,111,41,46]},
              {text,"\f\nworked\n22> "},
              {text,
               [18,90,32,61,32,116,101,115,116,49,58,100,101,109,111,40,50,41,
                46]},
              {text,
               "W\n** exception error: no match of right hand side value 1\n     in function  test1:demo/1"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "6Commands 21 and 22 change the value of dictionary item"}],
               0,false},
              {text,[4,42,97,97,42]},
              {sep,[{text,[2,116,111]}],0,false},
              {text,[7,42,104,101,108,108,111,42]},
              {sep,[{text,"\band call"}],0,false},
              {text,[15,42,116,101,115,116,49,58,100,101,109,111,40,50,41,42]},
              {sep,
               [{text,
                 "<. Evaluation fails and the changes made to the dictionary in"}],
               0,false},
              {text,[15,42,116,101,115,116,49,58,100,101,109,111,40,50,41,42]},
              {sep,
               [{text,"+, before the error occurred, are discarded."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,50,51,62,32]},
              {text,[2,90,46]},
              {text,"\"\n* 1: variable 'Z' is unbound\n24> "},
              {text,"\bget(aa)."},
              {text,[6,10,104,101,108,108,111]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [28,67,111,109,109,97,110,100,115,32,50,51,32,97,110,100,32,
                  50,52,32,115,104,111,119,32,116,104,97,116]}],
               0,false},
              {text,[3,42,90,42]},
              {sep,[{text,"&was not bound and that dictionary item"}],0,false},
              {text,[4,42,97,97,42]},
              {sep,[{text," has retained its original value."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,50,53,62,32]},
              {text,
               [24,101,114,97,115,101,40,41,44,32,112,117,116,40,97,97,44,32,
                104,101,108,108,111,41,46]},
              {text,
               [15,10,117,110,100,101,102,105,110,101,100,10,50,54,62,32]},
              {text,
               [24,115,112,97,119,110,40,116,101,115,116,49,44,32,100,101,109,
                111,44,32,91,49,93,41,46]},
              {text,[1,10]},
              {text,"\r<0.57.0>\n27> "},
              {text,"\bget(aa)."},
              {text,[6,10,104,101,108,108,111]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "5Commands 25, 26, and 27 show the effect of evaluating"}],
               0,false},
              {text,[15,42,116,101,115,116,49,58,100,101,109,111,40,49,41,42]},
              {sep,
               [{text,
                 "Òin the background. In this case, the expression is evaluated in a newly spawned process. Any changes made in the process dictionary are local to the newly spawned process and therefore not visible to the shell."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,50,56,62,32]},
              {text,"\eio:format(\"hello hello\\n\")."},
              {text,
               [20,10,104,101,108,108,111,32,104,101,108,108,111,10,111,107,
                10,50,57,62,32]},
              {text,[6,101,40,50,56,41,46]},
              {text,
               [20,10,104,101,108,108,111,32,104,101,108,108,111,10,111,107,
                10,51,48,62,32]},
              {text,[6,118,40,50,56,41,46]},
              {text,[3,10,111,107]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [303,67,111,109,109,97,110,100,115,32,50,56,44,32,50,57,32,97,
                110,100,32,51,48,32,117,115,101,32,116,104,101,32,104,105,115,
                116,111,114,121,32,102,97,99,105,108,105,116,105,101,115,32,
                111,102,32,116,104,101,32,115,104,101,108,108,46,32,67,111,
                109,109,97,110,100,32,50,57,32,114,101,45,101,118,97,108,117,
                97,116,101,115,32,99,111,109,109,97,110,100,32,50,56,46,32,67,
                111,109,109,97,110,100,32,51,48,32,117,115,101,115,32,116,104,
                101,32,118,97,108,117,101,32,40,114,101,115,117,108,116,41,32,
                111,102,32,99,111,109,109,97,110,100,32,50,56,46,32,73,110,32,
                116,104,101,32,99,97,115,101,115,32,111,102,32,97,32,112,117,
                114,101,32,102,117,110,99,116,105,111,110,32,40,97,32,102,117,
                110,99,116,105,111,110,32,119,105,116,104,32,110,111,32,115,
                105,100,101,32,101,102,102,101,99,116,115,41,44,32,116,104,
                101,32,114,101,115,117,108,116,32,105,115,32,116,104,101,32,
                115,97,109,101,46,32,70,111,114,32,97,32,102,117,110,99,116,
                105,111,110,32,119,105,116,104,32,115,105,100,101,32,101,102,
                102,101,99,116,115,44,32,116,104,101,32,114,101,115,117,108,
                116,32,99,97,110,32,98,101,32,100,105,102,102,101,114,101,110,
                116,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "GThe next few commands show some record manipulation. It is assumed that"}],
               0,false},
              {text,"\b*ex.erl*"},
              {sep,
               [{text,
                 [28,100,101,102,105,110,101,115,32,97,32,114,101,99,111,114,
                  100,32,97,115,32,102,111,108,108,111,119,115,58]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [31,42,45,114,101,99,111,114,100,40,114,101,99,44,32,123,97,44,
                32,98,32,61,32,118,97,108,40,41,125,41,46,42]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\n*val() ->*"},
              {above,{above,null,null},null},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {text,[4,42,51,46,42]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,51,49,62,32]},
              {text,[6,99,40,101,120,41,46]},
              {text,"\r\n{ok,ex}\n32> "},
              {text,[7,114,114,40,101,120,41,46]},
              {text,[6,10,91,114,101,99,93]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [31,67,111,109,109,97,110,100,115,32,51,49,32,97,110,100,32,
                  51,50,32,99,111,109,112,105,108,101,32,102,105,108,101]}],
               0,false},
              {text,"\b*ex.erl*"},
              {sep,[{text,"\"and read the record definitions in"}],0,false},
              {text,"\t*ex.beam*"},
              {sep,
               [{text,
                 "I. If the compiler did not output any record definitions on the BEAM file,"}],
               0,false},
              {text,"\b*rr(ex)*"},
              {sep,
               [{text,
                 ">tries to read record definitions from the source file instead."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,51,51,62,32]},
              {text,"\brl(rec)."},
              {text,
               [31,10,45,114,101,99,111,114,100,40,114,101,99,44,123,97,44,98,
                32,61,32,118,97,108,40,41,125,41,46,10,111,107]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "4Command 33 prints the definition of the record named"}],
               0,false},
              {text,[5,42,114,101,99,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,51,52,62,32]},
              {text,[7,35,114,101,99,123,125,46]},
              {text,"2\n** exception error: undefined shell command val/0"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [28,67,111,109,109,97,110,100,32,51,52,32,116,114,105,101,
                  115,32,116,111,32,99,114,101,97,116,101,32,97]}],
               0,false},
              {text,[5,42,114,101,99,42]},
              {sep,
               [{text,
                 [29,114,101,99,111,114,100,44,32,98,117,116,32,102,97,105,
                  108,115,32,97,115,32,102,117,110,99,116,105,111,110]}],
               0,false},
              {text,[7,42,118,97,108,47,48,42]},
              {sep,[{text,"\ris undefined."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,51,53,62,32]},
              {text,"\f#rec{b = 3}."},
              {text,
               [26,10,35,114,101,99,123,97,32,61,32,117,110,100,101,102,105,
                110,101,100,44,98,32,61,32,51,125]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "pCommand 35 shows the workaround: explicitly assign values to record fields that cannot otherwise be initialized."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,51,54,62,32]},
              {text,"\nrp(v(-1))."},
              {text,
               [29,10,35,114,101,99,123,97,32,61,32,117,110,100,101,102,105,
                110,101,100,44,98,32,61,32,51,125,10,111,107]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "\\Command 36 prints the newly created record using record definitions maintained by the shell."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,51,55,62,32]},
              {text,
               [29,114,100,40,114,101,99,44,32,123,102,32,61,32,111,114,100,
                100,105,99,116,58,110,101,119,40,41,125,41,46]},
              {text,[4,10,114,101,99]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "aCommand 37 defines a record directly in the shell. The definition replaces the one read from file"}],
               0,false},
              {text,"\t*ex.beam*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,51,56,62,32]},
              {text,[7,35,114,101,99,123,125,46]},
              {text,
               [16,10,35,114,101,99,123,102,32,61,32,91,93,125,10,111,107]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "LCommand 38 creates a record using the new definition, and prints the result."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,51,57,62,32]},
              {text,
               [16,114,100,40,114,101,99,44,32,123,99,125,41,44,32,65,46]},
              {text,"\"\n* 1: variable 'A' is unbound\n40> "},
              {text,[7,35,114,101,99,123,125,46]},
              {text,
               [23,10,35,114,101,99,123,99,32,61,32,117,110,100,101,102,105,
                110,101,100,125,10,111,107]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [134,67,111,109,109,97,110,100,32,51,57,32,97,110,100,32,52,
                  48,32,115,104,111,119,32,116,104,97,116,32,114,101,99,111,
                  114,100,32,100,101,102,105,110,105,116,105,111,110,115,32,
                  97,114,101,32,117,112,100,97,116,101,100,32,97,115,32,115,
                  105,100,101,32,101,102,102,101,99,116,115,46,32,84,104,101,
                  32,101,118,97,108,117,97,116,105,111,110,32,111,102,32,116,
                  104,101,32,99,111,109,109,97,110,100,32,102,97,105,108,115,
                  44,32,98,117,116,32,116,104,101,32,100,101,102,105,110,105,
                  116,105,111,110,32,111,102]}],
               0,false},
              {text,[5,42,114,101,99,42]},
              {sep,
               [{text,
                 [21,104,97,115,32,98,101,101,110,32,99,97,114,114,105,101,
                  100,32,111,117,116,46]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,"(For the next command, it is assumed that"}],
               0,false},
              {text,[15,42,116,101,115,116,49,58,108,111,111,112,40,78,41,42]},
              {sep,
               [{text,
                 [22,105,115,32,100,101,102,105,110,101,100,32,97,115,32,102,
                  111,108,108,111,119,115,58]}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"\f*loop(N) ->*"},
              {above,{above,null,null},null},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {text,"'*io:format(\"Hello Number: ~w~n\", [N]),*"},
              {above,{above,null,null},null},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {sep,[{text,[2,194,160]}],0,false},
              {text,"\f*loop(N+1).*"}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,52,49,62,32]},
              {text,[14,116,101,115,116,49,58,108,111,111,112,40,48,41,46]},
              {text,
               "â\nHello Number: 0\nHello Number: 1\nHello Number: 2\nHello Number: 3\n\nUser switch command\n --> i\n --> c\n.\n.\n.\nHello Number: 3374\nHello Number: 3375\nHello Number: 3376\nHello Number: 3377\nHello Number: 3378\n** exception exit: killed"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [20,67,111,109,109,97,110,100,32,52,49,32,101,118,97,108,117,
                  97,116,101,115]}],
               0,false},
              {text,[15,42,116,101,115,116,49,58,108,111,111,112,40,48,41,42]},
              {sep,
               [{text,
                 "K, which puts the system into an infinite loop. At this point the user types"}],
               0,false},
              {text,[4,42,94,71,42]},
              {sep,
               [{text,
                 "d(Control G), which suspends output from the current process, which is stuck in a loop, and activates"}],
               0,false},
              {text,[5,42,74,67,76,42]},
              {sep,[{text,"\bmode. In"}],0,false},
              {text,[5,42,74,67,76,42]},
              {sep,
               [{text,"&mode the user can start and stop jobs."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,[{text," In this particular case, command"}],0,false},
              {text,[3,42,105,42]},
              {sep,
               [{text,
                 "9(\"interrupt\") terminates the looping program, and command"}],
               0,false},
              {text,[3,42,99,42]},
              {sep,
               [{text,
                 [132,99,111,110,110,101,99,116,115,32,116,111,32,116,104,101,
                  32,115,104,101,108,108,32,97,103,97,105,110,46,32,65,115,32,
                  116,104,101,32,112,114,111,99,101,115,115,32,119,97,115,32,
                  114,117,110,110,105,110,103,32,105,110,32,116,104,101,32,98,
                  97,99,107,103,114,111,117,110,100,32,98,101,102,111,114,101,
                  32,119,101,32,107,105,108,108,101,100,32,105,116,44,32,109,
                  111,114,101,32,112,114,105,110,116,111,117,116,115,32,111,
                  99,99,117,114,32,98,101,102,111,114,101,32,109,101,115,115,
                  97,103,101,32,34]}],
               0,false},
              {text,"\e*** exception exit: killed*"},
              {sep,[{text,"\v\" is shown."}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,52,50,62,32]},
              {text,
               [19,69,32,61,32,101,116,115,58,110,101,119,40,116,44,32,91,93,
                41,46]},
              {text,[5,10,35,82,101,102]},
              {text," <0.1662103692.2407923716.214192>"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,[{text," Command 42 creates an ETS table."}],0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,52,51,62,32]},
              {text,
               [20,101,116,115,58,105,110,115,101,114,116,40,123,100,44,49,44,
                50,125,41,46]},
              {text,"4\n** exception error: undefined function ets:insert/1"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               [144,67,111,109,109,97,110,100,32,52,51,32,116,114,105,101,115,
                32,116,111,32,105,110,115,101,114,116,32,97,32,116,117,112,
                108,101,32,105,110,116,111,32,116,104,101,32,69,84,83,32,116,
                97,98,108,101,44,32,98,117,116,32,116,104,101,32,102,105,114,
                115,116,32,97,114,103,117,109,101,110,116,32,40,116,104,101,
                32,116,97,98,108,101,41,32,105,115,32,109,105,115,115,105,110,
                103,46,32,84,104,101,32,101,120,99,101,112,116,105,111,110,32,
                107,105,108,108,115,32,116,104,101,32,101,118,97,108,117,97,
                116,111,114,32,112,114,111,99,101,115,115,46]}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,52,52,62,32]},
              {text,
               [23,101,116,115,58,105,110,115,101,114,116,40,69,44,32,123,100,
                44,49,44,50,125,41,46]},
              {text,
               "v\n** exception error: argument is of wrong type\n     in function  ets:insert/2\n        called as ets:insert(16,{d,1,2})"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "vCommand 44 corrects the mistake, but the ETS table has been destroyed as it was owned by the killed evaluator process."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,52,53,62,32]},
              {text,[5,102,40,69,41,46]},
              {text,"\b\nok\n46> "},
              {text,
               [22,99,97,116,99,104,95,101,120,99,101,112,116,105,111,110,40,
                116,114,117,101,41,46]},
              {text,[6,10,102,97,108,115,101]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "BCommand 46 sets the exception handling of the evaluator process to"}],
               0,false},
              {text,[6,42,116,114,117,101,42]},
              {sep,
               [{text,
                 "@. The exception handling can also be set when starting Erlang by"}],
               0,false},
              {text,"(*erl -stdlib shell_catch_exception true*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,52,55,62,32]},
              {text,
               [19,69,32,61,32,101,116,115,58,110,101,119,40,116,44,32,91,93,
                41,46]},
              {text,[5,10,35,82,101,102]},
              {text,"%<0.1662103692.2407923716.214197>\n48> "},
              {text,
               [20,101,116,115,58,105,110,115,101,114,116,40,123,100,44,49,44,
                50,125,41,46]},
              {text,"3\n* exception error: undefined function ets:insert/1"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "¾Command 48 makes the same mistake as in command 43, but this time the evaluator process lives on. The single star at the beginning of the printout signals that the exception has been caught."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,52,57,62,32]},
              {text,
               [23,101,116,115,58,105,110,115,101,114,116,40,69,44,32,123,100,
                44,49,44,50,125,41,46]},
              {text,[5,10,116,114,117,101]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,
               "=Command 49 successfully inserts the tuple into the ETS table."}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,53,48,62,32]},
              {text,
               ":ets:insert(#Ref<0.1662103692.2407923716.214197>, {e,3,4})."},
              {text,[5,10,116,114,117,101]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 [154,67,111,109,109,97,110,100,32,53,48,32,105,110,115,101,
                  114,116,115,32,97,110,111,116,104,101,114,32,116,117,112,
                  108,101,32,105,110,116,111,32,116,104,101,32,69,84,83,32,
                  116,97,98,108,101,46,32,84,104,105,115,32,116,105,109,101,
                  32,116,104,101,32,102,105,114,115,116,32,97,114,103,117,109,
                  101,110,116,32,105,115,32,116,104,101,32,116,97,98,108,101,
                  32,105,100,101,110,116,105,102,105,101,114,32,105,116,115,
                  101,108,102,46,32,84,104,101,32,115,104,101,108,108,32,99,
                  97,110,32,112,97,114,115,101,32,99,111,109,109,97,110,100,
                  115,32,119,105,116,104,32,112,105,100,115,32,40]}],
               0,false},
              {text,"\n*<0.60.0>*"},
              {sep,[{text,"\n), ports ("}],0,false},
              {text,[14,42,35,80,111,114,116,60,48,46,53,51,54,62,42]},
              {sep,
               [{text,
                 [15,41,44,32,114,101,102,101,114,101,110,99,101,115,32,40]}],
               0,false},
              {text,"&*#Ref<0.1662103692.2407792644.214210>*"},
              {sep,[{text,"\e), and external functions ("}],0,false},
              {text,"\r*#Fun<a.b.1>*"},
              {sep,
               [{text,
                 "y), but the command fails unless the corresponding pid, port, reference, or function can be created in the running system."}],
               0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,[5,10,53,49,62,32]},
              {text,[7,104,97,108,116,40,41,46]},
              {text,"\v\nstrider 2>"}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"+Command 51 exits the Erlang runtime system."}],
             0,false}],
           0,true},
          null},
         null}}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v## JCL Mode"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [144,87,104,101,110,32,116,104,101,32,115,104,101,108,108,32,
                 115,116,97,114,116,115,44,32,105,116,32,115,116,97,114,116,
                 115,32,97,32,115,105,110,103,108,101,32,101,118,97,108,117,
                 97,116,111,114,32,112,114,111,99,101,115,115,46,32,84,104,
                 105,115,32,112,114,111,99,101,115,115,44,32,116,111,103,101,
                 116,104,101,114,32,119,105,116,104,32,97,110,121,32,108,111,
                 99,97,108,32,112,114,111,99,101,115,115,101,115,32,116,104,
                 97,116,32,105,116,32,115,112,97,119,110,115,44,32,105,115,32,
                 114,101,102,101,114,114,101,100,32,116,111,32,97,115,32,97]}],
              0,false},
             {text,[5,42,106,111,98,42]},
             {sep,
              [{text,"+. Only the current job, which is said to be"}],
              0,false},
             {text,"\v*connected*"},
             {sep,
              [{text,
                "P, can perform operations with standard I/O. All other jobs, which are said to be"}],
              0,false},
             {text,"\n*detached*"},
             {sep,[{text,[5,44,32,97,114,101]}],0,false},
             {text,"\t*blocked*"},
             {sep,[{text,"$if they attempt to use standard I/O."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "<All jobs that do not use standard I/O run in the normal way."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [20,84,104,101,32,115,104,101,108,108,32,101,115,99,97,112,
                 101,32,107,101,121]}],
              0,false},
             {text,[4,42,94,71,42]},
             {sep,
              [{text,"2(Control G) detaches the current job and activates"}],
              0,false},
             {text,[5,42,74,67,76,42]},
             {sep,[{text,"\tmode. The"}],0,false},
             {text,[5,42,74,67,76,42]},
             {sep,
              [{text,
                [14,109,111,100,101,32,112,114,111,109,112,116,32,105,115]}],
              0,false},
             {text,[7,42,34,45,45,62,34,42]},
             {sep,[{text,[4,46,32,73,102]}],0,false},
             {text,[5,42,34,63,34,42]},
             {sep,
              [{text,
                "Bis entered at the prompt, the following help message is displayed:"}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [280,10,45,45,62,32,63,10,99,32,91,110,110,93,32,32,32,32,32,32,
               32,32,32,32,32,32,45,32,99,111,110,110,101,99,116,32,116,111,
               32,106,111,98,10,105,32,91,110,110,93,32,32,32,32,32,32,32,32,
               32,32,32,32,45,32,105,110,116,101,114,114,117,112,116,32,106,
               111,98,10,107,32,91,110,110,93,32,32,32,32,32,32,32,32,32,32,
               32,32,45,32,107,105,108,108,32,106,111,98,10,106,32,32,32,32,
               32,32,32,32,32,32,32,32,32,32,32,32,32,45,32,108,105,115,116,
               32,97,108,108,32,106,111,98,115,10,115,32,91,115,104,101,108,
               108,93,32,32,32,32,32,32,32,32,32,45,32,115,116,97,114,116,32,
               108,111,99,97,108,32,115,104,101,108,108,10,114,32,91,110,111,
               100,101,32,91,115,104,101,108,108,93,93,32,32,45,32,115,116,97,
               114,116,32,114,101,109,111,116,101,32,115,104,101,108,108,10,
               113,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,45,32,
               113,117,105,116,32,101,114,108,97,110,103,10,63,32,124,32,104,
               32,32,32,32,32,32,32,32,32,32,32,32,32,45,32,116,104,105,115,
               32,109,101,115,115,97,103,101]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[3,84,104,101]}],0,false},
             {text,[5,42,74,67,76,42]},
             {sep,[{text,"$commands have the following meaning:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,
        {text,[4,60,100,108,62]},
        {nest,4,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,[6,99,32,91,110,110,93]}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{sep,
                                       [{text,
                                         [22,67,111,110,110,101,99,116,115,32,
                                          116,111,32,106,111,98,32,110,117,
                                          109,98,101,114]}],
                                       0,false},
                                      {text,[4,60,110,110,62]},
                                      {sep,
                                       [{text,
                                         [149,111,114,32,116,104,101,32,99,
                                          117,114,114,101,110,116,32,106,111,
                                          98,46,32,84,104,101,32,115,116,97,
                                          110,100,97,114,100,32,115,104,101,
                                          108,108,32,105,115,32,114,101,115,
                                          117,109,101,100,46,32,79,112,101,
                                          114,97,116,105,111,110,115,32,116,
                                          104,97,116,32,117,115,101,32,115,
                                          116,97,110,100,97,114,100,32,73,47,
                                          79,32,98,121,32,116,104,101,32,99,
                                          117,114,114,101,110,116,32,106,111,
                                          98,32,97,114,101,32,105,110,116,101,
                                          114,108,101,97,118,101,100,32,119,
                                          105,116,104,32,117,115,101,114,32,
                                          105,110,112,117,116,115,32,116,111,
                                          32,116,104,101,32,115,104,101,108,
                                          108,46]}],
                                       0,false}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,[{text,[6,105,32,91,110,110,93]}],0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{sep,
                                     [{text,
                                       "2Stops the current evaluator process for job number"}],
                                     0,false},
                                    {text,[2,110,110]},
                                    {sep,
                                     [{text,
                                       "Öor the current job, but does not kill the shell process. So, any variable bindings and the process dictionary are preserved and the job can be connected again. This command can be used to interrupt an endless loop."}],
                                     0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,[{text,[6,107,32,91,110,110,93]}],0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,
                                   [{text,
                                     [16,75,105,108,108,115,32,106,111,98,32,
                                      110,117,109,98,101,114]}],
                                   0,false},
                                  {text,[2,110,110]},
                                  {sep,
                                   [{text,
                                     "eor the current job. All spawned processes in the job are killed, provided they have not evaluated the"}],
                                   0,false},
                                  {text,
                                   [14,103,114,111,117,112,95,108,101,97,100,
                                    101,114,47,49]},
                                  {sep,
                                   [{text,
                                     "[BIF and are located on the local machine. Processes spawned on remote nodes are not killed."}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,[{text,[1,106]}],0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,
                                 "_Lists all jobs. A list of all known jobs is printed. The current job name is prefixed with '*'."}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,[1,115]}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 "0Starts a new job. This is assigned the new index"}],
                               0,false},
                              {text,[4,91,110,110,93]},
                              {sep,
                               [{text,"\", which can be used in references."}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,"\ts [shell]"}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               "0Starts a new job. This is assigned the new index"}],
                             0,false},
                            {text,[4,91,110,110,93]},
                            {sep,
                             [{text,
                               "7, which can be used in references. If optional argument"}],
                             0,false},
                            {text,[5,115,104,101,108,108]},
                            {sep,
                             [{text,
                               "Pis specified, it is assumed to be a module that implements an alternative shell."}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,"\br [node]"}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             [22,83,116,97,114,116,115,32,97,32,114,101,109,
                              111,116,101,32,106,111,98,32,111,110]}],
                           0,false},
                          {text,[4,110,111,100,101]},
                          {sep,
                           [{text,
                             "¡. This is used in distributed Erlang to allow a shell running on one node to control a number of applications running on a network of nodes. If optional argument"}],
                           0,false},
                          {text,[5,115,104,101,108,108]},
                          {sep,
                           [{text,
                             "Pis specified, it is assumed to be a module that implements an alternative shell."}],
                           0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[1,113]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "]Quits Erlang. Notice that this option is disabled if Erlang is started with the ignore break,"}],
                         0,false},
                        {text,[3,43,66,105]},
                        {sep,
                         [{text,
                           "g, system flag (which can be useful, for example when running a restricted shell, see the next section)."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,[{text,[1,63]}],0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,100,62]},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{text," Displays the help message above."}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {text,[5,60,47,100,100,62]}],
              0,true},
             null},
            null}}}}},
       {text,[5,60,47,100,108,62]}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "NThe behavior of shell escape can be changed by the STDLIB application variable"}],
              0,false},
             {text,"\v*shell_esc*"},
             {sep,
              [{text,"). The value of the variable can be either"}],
              0,false},
             {text,[5,42,106,99,108,42]},
             {sep,[{text,[1,40]}],0,false},
             {text,"\e*erl -stdlib shell_esc jcl*"},
             {sep,[{text,[4,41,32,111,114]}],0,false},
             {text,[7,42,97,98,111,114,116,42]},
             {sep,[{text,[1,40]}],0,false},
             {text,
              [29,42,101,114,108,32,45,115,116,100,108,105,98,32,115,104,101,
               108,108,95,101,115,99,32,97,98,111,114,116,42]},
             {sep,
              [{text,
                [24,41,46,32,84,104,101,32,102,105,114,115,116,32,111,112,116,
                 105,111,110,32,115,101,116,115]}],
              0,false},
             {text,[4,42,94,71,42]},
             {sep,[{text,"\vto activate"}],0,false},
             {text,[5,42,74,67,76,42]},
             {sep,
              [{text,
                "6mode (which is also default behavior). The latter sets"}],
              0,false},
             {text,[4,42,94,71,42]},
             {sep,
              [{text,"3to terminate the current shell and start a new one."}],
              0,false},
             {text,[5,42,74,67,76,42]},
             {sep,[{text,"\emode cannot be invoked when"}],0,false},
             {text,"\v*shell_esc*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,[7,42,97,98,111,114,116,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [129,73,102,32,121,111,117,32,119,97,110,116,32,97,110,32,69,
                 114,108,97,110,103,32,110,111,100,101,32,116,111,32,104,97,
                 118,101,32,97,32,114,101,109,111,116,101,32,106,111,98,32,97,
                 99,116,105,118,101,32,102,114,111,109,32,116,104,101,32,115,
                 116,97,114,116,32,40,114,97,116,104,101,114,32,116,104,97,
                 110,32,116,104,101,32,100,101,102,97,117,108,116,32,108,111,
                 99,97,108,32,106,111,98,41,44,32,115,116,97,114,116,32,69,
                 114,108,97,110,103,32,119,105,116,104,32,102,108,97,103]}],
              0,false},
             {text,"\b*-remsh*"},
             {sep,
              [{text,[14,44,32,102,111,114,32,101,120,97,109,112,108,101,44]}],
              0,false},
             {text,"3*erl -sname this_node -remsh other_node@other_host*"}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [19,35,35,32,82,101,115,116,114,105,99,116,101,100,32,83,104,101,108,
          108]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [302,84,104,101,32,115,104,101,108,108,32,99,97,110,32,98,101,
                32,115,116,97,114,116,101,100,32,105,110,32,97,32,114,101,115,
                116,114,105,99,116,101,100,32,109,111,100,101,46,32,73,110,32,
                116,104,105,115,32,109,111,100,101,44,32,116,104,101,32,115,
                104,101,108,108,32,101,118,97,108,117,97,116,101,115,32,97,32,
                102,117,110,99,116,105,111,110,32,99,97,108,108,32,111,110,
                108,121,32,105,102,32,97,108,108,111,119,101,100,46,32,84,104,
                105,115,32,102,101,97,116,117,114,101,32,109,97,107,101,115,
                32,105,116,32,112,111,115,115,105,98,108,101,32,116,111,44,32,
                102,111,114,32,101,120,97,109,112,108,101,44,32,112,114,101,
                118,101,110,116,32,97,32,117,115,101,114,32,102,114,111,109,
                32,97,99,99,105,100,101,110,116,97,108,108,121,32,99,97,108,
                108,105,110,103,32,97,32,102,117,110,99,116,105,111,110,32,
                102,114,111,109,32,116,104,101,32,112,114,111,109,112,116,32,
                116,104,97,116,32,99,111,117,108,100,32,104,97,114,109,32,97,
                32,114,117,110,110,105,110,103,32,115,121,115,116,101,109,32,
                40,117,115,101,102,117,108,32,105,110,32,99,111,109,98,105,
                110,97,116,105,111,110,32,119,105,116,104,32,115,121,115,116,
                101,109,32,102,108,97,103]}],
             0,false},
            {text,[5,42,43,66,105,42]},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "àWhen the restricted shell evaluates an expression and encounters a function call or an operator application, it calls a callback function (with information about the function call in question). This callback function returns"}],
             0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,"1to let the shell go ahead with the evaluation, or"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,
             [{text,
               "Qto abort it. There are two possible callback functions for the user to implement:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "=*local_allowed(Func, ArgList, State) -> {boolean(),NewState}*"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    ";This is used to determine if the call to the local function"}],
                  0,false},
                 {text,[6,42,70,117,110,99,42]},
                 {sep,
                  [{text,
                    [14,119,105,116,104,32,97,114,103,117,109,101,110,116,
                     115]}],
                  0,false},
                 {text,"\t*ArgList*"},
                 {sep,
                  [{text,
                    [17,105,115,32,116,111,32,98,101,32,97,108,108,111,119,
                     101,100,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "t*non_local_allowed(FuncSpec, ArgList, State) -> {boolean(),NewState} | {{redirect,NewFuncSpec,NewArgList},NewState}*"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    ";This is used to determine if the call to non-local function"}],
                  0,false},
                 {text,"\n*FuncSpec*"},
                 {sep,[{text,[1,40]}],0,false},
                 {text,
                  [15,42,123,77,111,100,117,108,101,44,70,117,110,99,125,42]},
                 {sep,
                  [{text,
                    [24,111,114,32,97,32,102,117,110,41,32,119,105,116,104,32,
                     97,114,103,117,109,101,110,116,115]}],
                  0,false},
                 {text,"\t*ArgList*"},
                 {sep,[{text,"\"is to be allowed. The return value"}],0,false},
                 {text,"#*{redirect,NewFuncSpec,NewArgList}*"},
                 {sep,
                  [{text,
                    "Scan be used to let the shell evaluate some other function than the one specified by"}],
                  0,false},
                 {text,"\n*FuncSpec*"},
                 {sep,[{text,[3,97,110,100]}],0,false},
                 {text,"\t*ArgList*"},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "kThese callback functions are called from local and non-local evaluation function handlers, described in the"}],
             0,false},
            {text,
             [20,91,101,114,108,95,101,118,97,108,93,40,101,114,108,95,101,
              118,97,108,41]},
            {sep,
             [{text,
               [26,109,97,110,117,97,108,32,112,97,103,101,46,32,40,65,114,
                103,117,109,101,110,116,115,32,105,110]}],
             0,false},
            {text,"\t*ArgList*"},
            {sep,
             [{text,
               "8are evaluated before the callback functions are called.)"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bArgument"}],0,false},
            {text,[7,42,83,116,97,116,101,42]},
            {sep,[{text,"\nis a tuple"}],0,false},
            {text,
             [24,42,123,83,104,101,108,108,83,116,97,116,101,44,69,120,112,
              114,83,116,97,116,101,125,42]},
            {sep,
             [{text,
               [18,46,32,84,104,101,32,114,101,116,117,114,110,32,118,97,108,
                117,101]}],
             0,false},
            {text,"\n*NewState*"},
            {sep,
             [{text,
               "khas the same form. This can be used to carry a state between calls to the callback functions. Data saved in"}],
             0,false},
            {text,"\f*ShellState*"},
            {sep,
             [{text,"4lives through an entire shell session. Data saved in"}],
             0,false},
            {text,"\v*ExprState*"},
            {sep,
             [{text,
               "<lives only through the evaluation of the current expression."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"7There are two ways to start a restricted shell session:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,
             [31,85,115,101,32,83,84,68,76,73,66,32,97,112,112,108,105,99,97,
              116,105,111,110,32,118,97,114,105,97,98,108,101]}],
           0,false},
          {text,
           [18,42,114,101,115,116,114,105,99,116,101,100,95,115,104,101,108,
            108,42]},
          {sep,
           [{text,
             "kand specify, as its value, the name of the callback module. Example (with callback functions implemented in"}],
           0,false},
          {text,
           [18,42,99,97,108,108,98,97,99,107,95,109,111,100,46,101,114,108,
            42]},
          {sep,[{text,[2,41,58]}],0,false},
          {text,"-*$ erl -stdlib restricted_shell callback_mod*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,[{text,"*From a normal shell session, call function"}],0,false},
          {text,")[start_restricted/1](#start_restricted/1)"},
          {sep,
           [{text,
             "K. This exits the current evaluator and starts a new one in restricted mode."}],
           0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\n**Notes:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [132,87,104,101,110,32,114,101,115,116,114,105,99,116,101,100,32,
             115,104,101,108,108,32,109,111,100,101,32,105,115,32,97,99,116,
             105,118,97,116,101,100,32,111,114,32,100,101,97,99,116,105,118,
             97,116,101,100,44,32,110,101,119,32,106,111,98,115,32,115,116,97,
             114,116,101,100,32,111,110,32,116,104,101,32,110,111,100,101,32,
             114,117,110,32,105,110,32,114,101,115,116,114,105,99,116,101,100,
             32,111,114,32,110,111,114,109,97,108,32,109,111,100,101,44,32,
             114,101,115,112,101,99,116,105,118,101,108,121,46]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "|If restricted mode has been enabled on a particular node, remote shells connecting to this node also run in restricted mode."}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           "±The callback functions cannot be used to allow or disallow execution of functions called from compiled code (only functions called from expressions entered at the shell prompt)."}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "xErrors when loading the callback module is handled in different ways depending on how the restricted shell is activated:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,
             "¼If the restricted shell is activated by setting the STDLIB variable during emulator startup, and the callback module cannot be loaded, a default restricted shell allowing only the commands"}],
           0,false},
          {text,[5,42,113,40,41,42]},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,"\r*init:stop()*"},
          {sep,
           [{text,
             [20,105,115,32,117,115,101,100,32,97,115,32,102,97,108,108,98,97,
              99,107,46]}],
           0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,[{text,"*If the restricted shell is activated using"}],0,false},
          {text,")[start_restricted/1](#start_restricted/1)"},
          {sep,
           [{text,
             "jand the callback module cannot be loaded, an error report is sent to the error logger and the call returns"}],
           0,false},
          {text,
           [16,42,123,101,114,114,111,114,44,82,101,97,115,111,110,125,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f## Prompting"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              "ÇThe default shell prompt function displays the name of the node (if the node can be part of a distributed system) and the current command number. The user can customize the prompt function by calling"}],
            0,false},
           {text,
            [31,91,112,114,111,109,112,116,95,102,117,110,99,47,49,93,40,35,
             112,114,111,109,112,116,95,102,117,110,99,47,49,41]},
           {sep,
            [{text,"1or by setting application configuration parameter"}],
            0,false},
           {text,
            [19,42,115,104,101,108,108,95,112,114,111,109,112,116,95,102,117,
             110,99,42]},
           {sep,[{text,"\efor the STDLIB application."}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"1A customized prompt function is stated as a tuple"}],
            0,false},
           {text,[14,42,123,77,111,100,44,194,160,70,117,110,99,125,42]},
           {sep,[{text,"\e. The function is called as"}],0,false},
           {text,"\r*Mod:Func(L)*"},
           {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
           {text,[3,42,76,42]},
           {sep,
            [{text,
              "Tis a list of key-value pairs created by the shell. Currently there is only one pair:"}],
            0,false},
           {text,[14,42,123,104,105,115,116,111,114,121,44,32,78,125,42]},
           {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
           {text,[3,42,78,42]},
           {sep,
            [{text,
              [263,105,115,32,116,104,101,32,99,117,114,114,101,110,116,32,99,
               111,109,109,97,110,100,32,110,117,109,98,101,114,46,32,84,104,
               101,32,102,117,110,99,116,105,111,110,32,105,115,32,116,111,32,
               114,101,116,117,114,110,32,97,32,108,105,115,116,32,111,102,32,
               99,104,97,114,97,99,116,101,114,115,32,111,114,32,97,110,32,97,
               116,111,109,46,32,84,104,105,115,32,99,111,110,115,116,114,97,
               105,110,116,32,105,115,32,98,101,99,97,117,115,101,32,111,102,
               32,116,104,101,32,69,114,108,97,110,103,32,73,47,79,32,112,114,
               111,116,111,99,111,108,46,32,85,110,105,99,111,100,101,32,99,
               104,97,114,97,99,116,101,114,115,32,98,101,121,111,110,100,32,
               99,111,100,101,32,112,111,105,110,116,32,50,53,53,32,97,114,
               101,32,97,108,108,111,119,101,100,32,105,110,32,116,104,101,32,
               108,105,115,116,32,97,110,100,32,116,104,101,32,97,116,111,109,
               46,32,78,111,116,105,99,101,32,116,104,97,116,32,105,110,32,
               114,101,115,116,114,105,99,116,101,100,32,109,111,100,101,32,
               116,104,101,32,99,97,108,108]}],
            0,false},
           {text,"\r*Mod:Func(L)*"},
           {sep,
            [{text,
              "?must be allowed or the default shell prompt function is called."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"%## catch_exception(Bool) -> boolean()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"(Set the exception handling of the shell."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,[16,66,111,111,108,32,61,32,98,111,111,108,101,97,110,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "pSets the exception handling of the evaluator process. The previous exception handling is returned. The default ("}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,
             [{text,
               [156,41,32,105,115,32,116,111,32,107,105,108,108,32,116,104,
                101,32,101,118,97,108,117,97,116,111,114,32,112,114,111,99,
                101,115,115,32,119,104,101,110,32,97,110,32,101,120,99,101,
                112,116,105,111,110,32,111,99,99,117,114,115,44,32,119,104,
                105,99,104,32,99,97,117,115,101,115,32,116,104,101,32,115,104,
                101,108,108,32,116,111,32,99,114,101,97,116,101,32,97,32,110,
                101,119,32,101,118,97,108,117,97,116,111,114,32,112,114,111,
                99,101,115,115,46,32,87,104,101,110,32,116,104,101,32,101,120,
                99,101,112,116,105,111,110,32,104,97,110,100,108,105,110,103,
                32,105,115,32,115,101,116,32,116,111]}],
             0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,
               "¡, the evaluator process lives on, which means that, for example, ports and ETS tables as well as processes linked to the evaluator process survive the exception."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## history/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,",Set the number of previous commands to keep."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "CSets the number of previous commands to keep in the history list to"}],
             0,false},
            {text,[3,42,78,42]},
            {sep,
             [{text,"2. The previous number is returned. Defaults to 20."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,112,114,111,109,112,116,95,102,117,110,99,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [21,83,101,116,32,116,104,101,32,115,104,101,108,108,32,112,114,
            111,109,112,116,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"!Sets the shell prompt function to"}],0,false},
            {text,"\f*PromptFunc*"},
            {sep,
             [{text,"+. The previous prompt function is returned."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## results/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"+Set the number of previous results to keep."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "PSets the number of results from previous commands to keep in the history list to"}],
             0,false},
            {text,[3,42,78,42]},
            {sep,
             [{text,"2. The previous number is returned. Defaults to 20."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [21,35,35,32,115,116,97,114,116,95,114,101,115,116,114,105,99,116,101,
        100,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"2Exit a normal shell and starts a restricted shell."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"3Exits a normal shell and starts a restricted shell."}],
             0,false},
            {text,"\b*Module*"},
            {sep,
             [{text,"/specifies the callback module for the functions"}],
             0,false},
            {text,
             [17,42,108,111,99,97,108,95,97,108,108,111,119,101,100,47,51,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [21,42,110,111,110,95,108,111,99,97,108,95,97,108,108,111,119,
              101,100,47,51,42]},
            {sep,
             [{text,"4. The function is meant to be called from the shell."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "HIf the callback module cannot be loaded, an error tuple is returned. The"}],
             0,false},
            {text,"\b*Reason*"},
            {sep,
             [{text,
               "nin the error tuple is the one returned by the code loader when trying to load the code of the callback module."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,115,116,111,112,95,114,101,115,116,114,105,99,116,101,100,
        47,48]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"2Exit a restricted shell and starts a normal shell."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "fExits a restricted shell and starts a normal shell. The function is meant to be called from the shell."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## strings/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"(Set the shell's string recognition flag."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text," Sets pretty printing of lists to"}],0,false},
            {text,"\t*Strings*"},
            {sep,
             [{text,"-. The previous value of the flag is returned."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ";The flag can also be set by the STDLIB application variable"}],
             0,false},
            {text,
             [15,42,115,104,101,108,108,95,115,116,114,105,110,103,115,42]},
            {sep,[{text,"\r. Defaults to"}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,
               "^, which means that lists of integers are printed using the string syntax, when possible. Value"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,
             [{text,
               "8means that no lists are printed using the string syntax."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
