{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\t# filelib"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\t# filelib"},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"7File utilities, such as wildcard matching of filenames."}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "9This module contains utilities on a higher level than the"}],
                  0,false},
                 {text,
                  [21,91,107,101,114,110,101,108,47,102,105,108,101,93,40,46,
                   47,102,105,108,101,41]},
                 {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "«This module does not support \"raw\" filenames (that is, files whose names do not comply with the expected encoding). Such files are ignored by the functions in this module."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "1For more information about raw filenames, see the"}],
                  0,false},
                 {text,
                  [21,91,107,101,114,110,101,108,47,102,105,108,101,93,40,46,
                   47,102,105,108,101,41]},
                 {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "¹Functionality in this module generally assumes valid input and does not necessarily fail on input that does not use a valid encoding, but may instead very likely produce invalid output."}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      [259,70,105,108,101,32,111,112,101,114,97,116,105,111,
                       110,115,32,117,115,101,100,32,116,111,32,97,99,99,101,
                       112,116,32,102,105,108,101,110,97,109,101,115,32,99,
                       111,110,116,97,105,110,105,110,103,32,110,117,108,108,
                       32,99,104,97,114,97,99,116,101,114,115,32,40,105,110,
                       116,101,103,101,114,32,118,97,108,117,101,32,122,101,
                       114,111,41,46,32,84,104,105,115,32,99,97,117,115,101,
                       100,32,116,104,101,32,110,97,109,101,32,116,111,32,98,
                       101,32,116,114,117,110,99,97,116,101,100,32,97,110,100,
                       32,105,110,32,115,111,109,101,32,99,97,115,101,115,32,
                       97,114,103,117,109,101,110,116,115,32,116,111,32,112,
                       114,105,109,105,116,105,118,101,32,111,112,101,114,97,
                       116,105,111,110,115,32,116,111,32,98,101,32,109,105,
                       120,101,100,32,117,112,46,32,70,105,108,101,110,97,109,
                       101,115,32,99,111,110,116,97,105,110,105,110,103,32,
                       110,117,108,108,32,99,104,97,114,97,99,116,101,114,115,
                       32,105,110,115,105,100,101,32,116,104,101,32,102,105,
                       108,101,110,97,109,101,32,97,114,101,32,110,111,119]}],
                    0,false},
                   {text,"\f**rejected**"},
                   {sep,
                    [{text,
                      "1and will cause primitive file operations to fail."}],
                    0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false},
          {sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "èCurrently null characters at the end of the filename will be accepted by primitive file operations. Such filenames are however still documented as invalid. The implementation will also change in the future and reject such filenames."}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# Data Types"},null},null}},
    {sep,[{sep,[{text,"\bfilename"}],0,false}],0,false},
    {sep,[{sep,[{text,[7,100,105,114,110,97,109,101]}],0,false}],0,false},
    {sep,[{sep,[{text,"\vdirname_all"}],0,false}],0,false},
    {sep,[{sep,[{text,"\ffilename_all"}],0,false}],0,false},
    {sep,
     [{sep,
       [{text,[14,102,105,110,100,95,102,105,108,101,95,114,117,108,101]}],
       0,false}],
     0,false},
    {sep,
     [{sep,
       [{text,
         [16,102,105,110,100,95,115,111,117,114,99,101,95,114,117,108,101]}],
       0,false}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,101,110,115,117,114,101,95,100,105,114,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "AEnsure that all parent directories for a file or directory exist."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "LEnsures that all parent directories for the specified file or directory name"}],
             0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,
             [{text,"*exist, trying to create them if necessary."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[4,42,111,107,42]},
            {sep,
             [{text,
               "Bif all parent directories already exist or can be created. Returns"}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                {sep,[{text,[6,82,101,97,115,111,110]}],0,false},
                {sep,[{text,[1,125]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,
             [{text,
               ">if some parent directory does not exist and cannot be created."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[14,35,35,32,102,105,108,101,95,115,105,122,101,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"#Return the size in bytes of a file."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"'Returns the size of the specified file."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,102,111,108,100,95,102,105,108,101,115,47,53]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"2Fold over all files matching a regular expression."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [14,70,111,108,100,115,32,102,117,110,99,116,105,111,110]}],
             0,false},
            {text,[5,42,70,117,110,42]},
            {sep,
             [{text,
               [24,111,118,101,114,32,97,108,108,32,40,114,101,103,117,108,97,
                114,41,32,102,105,108,101,115]}],
             0,false},
            {text,[3,42,70,42]},
            {sep,[{text,"\fin directory"}],0,false},
            {text,[5,42,68,105,114,42]},
            {sep,[{text,"!that match the regular expression"}],0,false},
            {text,"\b*RegExp*"},
            {sep,
             [{text,
               ">(for a description of the allowed regular expressions, see the"}],
             0,false},
            {text,"\b[re](re)"},
            {sep,[{text,"\vmodule). If"}],0,false},
            {text,"\v*Recursive*"},
            {sep,[{text,[2,105,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,
               [23,44,32,97,108,108,32,115,117,98,100,105,114,101,99,116,111,
                114,105,101,115,32,116,111]}],
             0,false},
            {text,[5,42,68,105,114,42]},
            {sep,
             [{text,
               "gare processed. The regular expression matching is only done on the filename without the directory part."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "¦If Unicode filename translation is in effect and the file system is transparent, filenames that cannot be interpreted as Unicode can be encountered, in which case the"}],
             0,false},
            {text,[7,42,102,117,110,40,41,42]},
            {sep,
             [{text,
               "kmust be prepared to handle raw filenames (that is, binaries). If the regular expression contains codepoints"}],
             0,false},
            {sep,
             [{text,
               [132,62,32,50,53,53,44,32,105,116,32,100,111,101,115,32,110,
                111,116,32,109,97,116,99,104,32,102,105,108,101,110,97,109,
                101,115,32,116,104,97,116,32,100,111,32,110,111,116,32,99,111,
                110,102,111,114,109,32,116,111,32,116,104,101,32,101,120,112,
                101,99,116,101,100,32,99,104,97,114,97,99,116,101,114,32,101,
                110,99,111,100,105,110,103,32,40,116,104,97,116,32,105,115,44,
                32,97,114,101,32,110,111,116,32,101,110,99,111,100,101,100,32,
                105,110,32,118,97,108,105,100,32,85,84,70,45,56,41,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"1For more information about raw filenames, see the"}],
             0,false},
            {text,
             [21,91,107,101,114,110,101,108,47,102,105,108,101,93,40,46,47,
              102,105,108,101,41]},
            {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## is_dir/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\fTest whether"}],0,false},
          {text,[6,42,78,97,109,101,42]},
          {sep,
           [{text,
             [22,114,101,102,101,114,115,32,116,111,32,97,32,100,105,114,101,
              99,116,111,114,121,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text," refers to a directory, otherwise"}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## is_file/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\fTest whether"}],0,false},
          {text,[6,42,78,97,109,101,42]},
          {sep,
           [{text,
             [30,114,101,102,101,114,115,32,116,111,32,97,32,102,105,108,101,
              32,111,114,32,100,105,114,101,99,116,111,114,121,46]}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,
             [{text,"*refers to a file or a directory, otherwise"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,105,115,95,114,101,103,117,108,97,114,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\fTest whether"}],0,false},
          {text,[6,42,78,97,109,101,42]},
          {sep,[{text,"\erefers to a (regular) file."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[6,42,78,97,109,101,42]},
            {sep,[{text,"%refers to a (regular) file, otherwise"}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [18,35,35,32,108,97,115,116,95,109,111,100,105,102,105,101,100,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "=Return the local date and time when a file was last modified."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "OReturns the date and time the specified file or directory was last modified, or"}],
             0,false},
            {text,[3,42,48,42]},
            {sep,[{text,"\eif the file does not exist."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## wildcard/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"+Match filenames using Unix-style wildcards."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "AReturns a list of all files that match Unix-style wildcard string"}],
             0,false},
            {text,"\n*Wildcard*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [134,84,104,101,32,119,105,108,100,99,97,114,100,32,115,116,114,
              105,110,103,32,108,111,111,107,115,32,108,105,107,101,32,97,110,
              32,111,114,100,105,110,97,114,121,32,102,105,108,101,110,97,109,
              101,44,32,101,120,99,101,112,116,32,116,104,97,116,32,116,104,
              101,32,102,111,108,108,111,119,105,110,103,32,34,119,105,108,
              100,99,97,114,100,32,99,104,97,114,97,99,116,101,114,115,34,32,
              97,114,101,32,105,110,116,101,114,112,114,101,116,101,100,32,
              105,110,32,97,32,115,112,101,99,105,97,108,32,119,97,121,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[1,63]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              [22,77,97,116,99,104,101,115,32,111,110,101,32,
                               99,104,97,114,97,99,116,101,114,46]}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,[1,42]}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "`Matches any number of characters up to the end of the filename, the next dot, or the next slash."}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,[2,42,42]}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,[{text,"\fTwo adjacent"}],0,false},
                         {text,[1,42]},
                         {sep,
                          [{text,
                            "Yused as a single pattern match all files and zero or more directories and subdirectories."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,"\e[Character1,Character2,...]"}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "pMatches any of the characters listed. Two characters separated by a hyphen match a range of characters. Example:"}],
                        0,false},
                       {text,[5,91,65,45,90,93]},
                       {sep,
                        [{text,
                          [29,109,97,116,99,104,101,115,32,97,110,121,32,117,
                           112,112,101,114,99,97,115,101,32,108,101,116,116,
                           101,114,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,"\n{Item,...}"}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,"-Alternation. Matches one of the alternatives."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "·Other characters represent themselves. Only filenames that have exactly the same character in the same position match. Matching is case-sensitive, for example, \"a\" does not match \"A\"."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".Directory separators must always be written as"}],
             0,false},
            {text,[3,42,47,42]},
            {sep,
             [{text,
               [18,44,32,101,118,101,110,32,111,110,32,87,105,110,100,111,119,
                115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,65,32,99,104,97,114,97,99,116,101,114,32,112,114,101,99,
                101,100,101,100,32,98,121]}],
             0,false},
            {text,[3,42,92,42]},
            {sep,[{text,"$loses its special meaning. Note that"}],0,false},
            {text,[3,42,92,42]},
            {sep,
             [{text,
               [18,109,117,115,116,32,98,101,32,119,114,105,116,116,101,110,
                32,97,115]}],
             0,false},
            {text,[4,42,92,92,42]},
            {sep,
             [{text,
               "Oin a string literal. For example, \"\\\\?\\*\" will match any filename starting with"}],
             0,false},
            {text,[3,42,63,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "nNotice that multiple \"\\*\" characters are allowed (as in Unix wildcards, but opposed to Windows/DOS wildcards)."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "bThe following examples assume that the current directory is the top of an Erlang/OTP installation."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\vTo find all"}],0,false},
            {text,[7,42,46,98,101,97,109,42]},
            {sep,
             [{text,"2files in all applications, use the following line:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"'\nfilelib:wildcard(\"lib/*/ebin/*.beam\")."}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,84,111,32,102,105,110,100]}],0,false},
            {text,[6,42,46,101,114,108,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[6,42,46,104,114,108,42]},
            {sep,
             [{text,
               [19,105,110,32,97,108,108,32,97,112,112,108,105,99,97,116,105,
                111,110,115]}],
             0,false},
            {text,[5,42,115,114,99,42]},
            {sep,
             [{text,"/directories, use either of the following lines:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"$\nfilelib:wildcard(\"lib/*/src/*.?rl\")"}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"*\nfilelib:wildcard(\"lib/*/src/*.{erl,hrl}\")"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\vTo find all"}],0,false},
            {text,[6,42,46,104,114,108,42]},
            {sep,[{text,"\bfiles in"}],0,false},
            {text,[5,42,115,114,99,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\t*include*"},
            {sep,[{text,"\fdirectories:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"/\nfilelib:wildcard(\"lib/*/{src,include}/*.hrl\")."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\vTo find all"}],0,false},
            {text,[6,42,46,101,114,108,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[6,42,46,104,114,108,42]},
            {sep,
             [{text,
               [15,102,105,108,101,115,32,105,110,32,101,105,116,104,101,
                114]}],
             0,false},
            {text,[5,42,115,114,99,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\t*include*"},
            {sep,[{text,"\fdirectories:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"4\nfilelib:wildcard(\"lib/*/{src,include}/*.{erl,hrl}\")"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\vTo find all"}],0,false},
            {text,[6,42,46,101,114,108,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[6,42,46,104,114,108,42]},
            {sep,
             [{text,
               [26,102,105,108,101,115,32,105,110,32,97,110,121,32,115,117,98,
                100,105,114,101,99,116,111,114,121,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"'\nfilelib:wildcard(\"lib/**/*.{erl,hrl}\")"}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## wildcard/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "MMatch filenames using Unix-style wildcards starting at a specified directory."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,83,97,109,101,32,97,115]}],0,false},
            {text,
             [25,91,119,105,108,100,99,97,114,100,47,49,93,40,35,119,105,108,
              100,99,97,114,100,47,49,41]},
            {sep,[{text,"\r, except that"}],0,false},
            {text,[5,42,67,119,100,42]},
            {sep,
             [{text,")is used instead of the working directory."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[14,35,35,32,102,105,110,100,95,102,105,108,101,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[14,35,35,32,102,105,110,100,95,102,105,108,101,47,51]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Find a file relative to a given directory."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "lLooks for a file of the given name by applying suffix rules to the given directory path. For example, a rule"}],
             0,false},
            {text,
             [17,42,123,34,101,98,105,110,34,44,32,34,115,114,99,34,125,42]},
            {sep,
             [{text,"*means that if the directory path ends with"}],
             0,false},
            {text,"\b*\"ebin\"*"},
            {sep,[{text,"\", the corresponding path ending in"}],0,false},
            {text,[7,42,34,115,114,99,34,42]},
            {sep,
             [{text,
               [19,115,104,111,117,108,100,32,98,101,32,115,101,97,114,99,104,
                101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[7,42,82,117,108,101,115,42]},
            {sep,
             [{text,
               "mis left out or is an empty list, the default system rules are used. See also the Kernel application parameter"}],
             0,false},
            {text,
             "Q[kernel/kernel_app#source_search_rules](../kernel/kernel_app#source_search_rules)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,102,105,110,100,95,115,111,117,114,99,101,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"-Find the source file for a given object file."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [24,42,102,105,110,100,95,115,111,117,114,99,101,40,66,97,115,
              101,44,32,68,105,114,41,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,[5,42,68,105,114,42]},
            {sep,[{text,[2,105,115]}],0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   [17,102,105,108,101,110,97,109,101,58,100,105,114,110,97,
                    109,101,40]}],
                 0,false},
                {sep,[{text,"\bFilePath"}],0,false},
                {sep,[{text,[1,41]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[6,42,66,97,115,101,42]},
            {sep,[{text,[2,105,115]}],0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,
                 [{text,
                   [18,102,105,108,101,110,97,109,101,58,98,97,115,101,110,97,
                    109,101,40]}],
                 0,false},
                {sep,[{text,"\bFilePath"}],0,false},
                {sep,[{text,[1,41]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,102,105,110,100,95,115,111,117,114,99,101,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,102,105,110,100,95,115,111,117,114,99,101,47,51]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"1Find a source file relative to a given directory."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "¢Applies file extension specific rules to find the source file for a given object file relative to the object directory. For example, for a file with the extension"}],
             0,false},
            {text,[7,42,46,98,101,97,109,42]},
            {sep,
             [{text,
               "G, the default rule is to look for a file with a corresponding extension"}],
             0,false},
            {text,[6,42,46,101,114,108,42]},
            {sep,
             [{text,
               [23,98,121,32,114,101,112,108,97,99,105,110,103,32,116,104,101,
                32,115,117,102,102,105,120]}],
             0,false},
            {text,"\b*\"ebin\"*"},
            {sep,[{text,"!of the object directory path with"}],0,false},
            {text,[7,42,34,115,114,99,34,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\t*\"src/*\"*"},
            {sep,[{text,"!. The file search is done through"}],0,false},
            {text,"\e[find_file/3](#find_file/3)"},
            {sep,
             [{text,
               "e. The directory of the object file is always tried before any other directory specified by the rules."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[7,42,82,117,108,101,115,42]},
            {sep,
             [{text,
               "mis left out or is an empty list, the default system rules are used. See also the Kernel application parameter"}],
             0,false},
            {text,
             "Q[kernel/kernel_app#source_search_rules](../kernel/kernel_app#source_search_rules)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
