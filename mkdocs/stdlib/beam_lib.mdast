{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,{above,{text,[0]},null},null},
          {above,{above,{text,"\n# beam_lib"},null},null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,{above,{text,"\n# beam_lib"},null},null}}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text,"%An interface to the BEAM file format."}],0,false}],
            0,true},
           null},
          null}}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "ÄThis module provides an interface to files created by the BEAM Compiler (\"BEAM files\"). The format used, a variant of \"EA IFF 1985\" Standard for Interchange Format Files, divides data into chunks."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "îChunk data can be returned as binaries or as compound terms. Compound terms are returned when chunks are referenced by names (atoms) rather than identifiers (strings). The recognized names and the corresponding identifiers are as follows:"}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {sep,
                        [{text,[1,42]},
                         {text,
                          [16,42,97,116,111,109,115,32,40,34,65,116,111,109,
                           34,41,42]}],
                        0,false},
                       {sep,
                        [{text,[1,42]},
                         {text,
                          [21,42,97,116,116,114,105,98,117,116,101,115,32,40,
                           34,65,116,116,114,34,41,42]}],
                        0,false}},
                      {sep,
                       [{text,[1,42]},
                        {text,
                         [23,42,99,111,109,112,105,108,101,95,105,110,102,111,
                          32,40,34,67,73,110,102,34,41,42]}],
                       0,false}},
                     {sep,
                      [{text,[1,42]},
                       {text,
                        [21,42,100,101,98,117,103,95,105,110,102,111,32,40,34,
                         68,98,103,105,34,41,42]}],
                      0,false}},
                    {sep,
                     [{text,[1,42]},
                      {text,
                       [18,42,101,120,112,111,114,116,115,32,40,34,69,120,112,
                        84,34,41,42]}],
                     0,false}},
                   {sep,
                    [{text,[1,42]},
                     {text,
                      [18,42,105,109,112,111,114,116,115,32,40,34,73,109,112,
                       84,34,41,42]}],
                    0,false}},
                  {sep,
                   [{text,[1,42]},
                    {text,
                     [26,42,105,110,100,101,120,101,100,95,105,109,112,111,
                      114,116,115,32,40,34,73,109,112,84,34,41,42]}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {text,
                    [26,42,108,97,98,101,108,101,100,95,101,120,112,111,114,
                     116,115,32,40,34,69,120,112,84,34,41,42]}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {text,
                   [25,42,108,97,98,101,108,101,100,95,108,111,99,97,108,115,
                    32,40,34,76,111,99,84,34,41,42]}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {text,
                  [17,42,108,111,99,97,108,115,32,40,34,76,111,99,84,34,41,
                   42]}],
                0,false}}],
             0,false}],
           0,true},
          null},
         null}}},
      {sep,
       [{text,"#<a name=\"debug_info\">debug_info</a>"},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{text,"\"## Debug Information/Abstract Code"},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[6,79,112,116,105,111,110]}],0,false},
               {text,"\f*debug_info*"},
               {sep,[{text,"%can be specified to the Compiler (see"}],0,false},
               {text,
                "=[compiler/compile#debug_info](../compiler/compile#debug_info)"},
               {sep,[{text,"$) to have debug information, such as"}],0,false},
               {text,"#[Erlang Abstract Format](./absform)"},
               {sep,
                [{text,
                  [15,44,32,115,116,111,114,101,100,32,105,110,32,116,104,
                   101]}],
                0,false},
               {text,"\f*debug_info*"},
               {sep,
                [{text,
                  "Tchunk. Tools such as Debugger and Xref require the debug information to be included."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,
              [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,
               105,110,103,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "zSource code can be reconstructed from the debug information. To prevent this, use encrypted debug information (see below)."}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "?The debug information can also be removed from BEAM files using"}],
                0,false},
               {text,
                [19,91,115,116,114,105,112,47,49,93,40,35,115,116,114,105,112,
                 47,49,41]},
               {sep,[{text,[1,44]}],0,false},
               {text,
                [31,91,115,116,114,105,112,95,102,105,108,101,115,47,49,93,40,
                 35,115,116,114,105,112,95,102,105,108,101,115,47,49,41]},
               {sep,[{text,"\b, and/or"}],0,false},
               {text,"#[strip_release/1](#strip_release/1)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {text,
           [26,35,35,32,82,101,99,111,110,115,116,114,117,99,116,32,83,111,
            117,114,99,101,32,67,111,100,101]},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{sep,
               [{text,
                 "kThe following example shows how to reconstruct Erlang source code from the debug information in a BEAM file"}],
               0,false},
              {text,[6,42,66,101,97,109,42]},
              {sep,[{text,[1,58]}],0,false}],
             0,false}],
           0,true},
          null},
         null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {above,
           {above,
            {text,[3,96,96,96]},
            {sep,
             [{text,
               [143,10,123,111,107,44,123,95,44,91,123,97,98,115,116,114,97,
                99,116,95,99,111,100,101,44,123,95,44,65,67,125,125,93,125,
                125,32,61,32,98,101,97,109,95,108,105,98,58,99,104,117,110,
                107,115,40,66,101,97,109,44,91,97,98,115,116,114,97,99,116,95,
                99,111,100,101,93,41,46,10,105,111,58,102,119,114,105,116,101,
                40,34,126,115,126,110,34,44,32,91,101,114,108,95,112,114,101,
                116,116,121,112,114,58,102,111,114,109,97,116,40,101,114,108,
                95,115,121,110,116,97,120,58,102,111,114,109,95,108,105,115,
                116,40,65,67,41,41,93,41,46]}],
             0,true}},
           {text,[3,96,96,96]}},
          null},
         null}}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [30,35,35,32,69,110,99,114,121,112,116,101,100,32,68,101,98,117,103,
           32,73,110,102,111,114,109,97,116,105,111,110]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [127,84,104,101,32,100,101,98,117,103,32,105,110,102,111,114,
               109,97,116,105,111,110,32,99,97,110,32,98,101,32,101,110,99,
               114,121,112,116,101,100,32,116,111,32,107,101,101,112,32,116,
               104,101,32,115,111,117,114,99,101,32,99,111,100,101,32,115,101,
               99,114,101,116,44,32,98,117,116,32,115,116,105,108,108,32,98,
               101,32,97,98,108,101,32,116,111,32,117,115,101,32,116,111,111,
               108,115,32,115,117,99,104,32,97,115,32,68,101,98,117,103,103,
               101,114,32,111,114,32,88,114,101,102,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "NTo use encrypted debug information, a key must be provided to the compiler and"}],
              0,false},
             {text,"\n*beam_lib*"},
             {sep,
              [{text,
                "Ã. The key is specified as a string. It is recommended that the string contains at least 32 characters and that both upper and lower case letters as well as digits and special characters are used."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "EThe default type (and currently the only type) of crypto algorithm is"}],
              0,false},
             {text,"\n*des3_cbc*"},
             {sep,
              [{text,
                "8, three rounds of DES. The key string is scrambled using"}],
              0,false},
             {text,")[erts/erlang#md5/1](../erts/erlang#md5/1)"},
             {sep,
              [{text,
                [29,116,111,32,103,101,110,101,114,97,116,101,32,116,104,101,
                 32,107,101,121,115,32,117,115,101,100,32,102,111,114]}],
              0,false},
             {text,"\n*des3_cbc*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "CAs far as we know by the time of writing, it is infeasible to break"}],
                         0,false},
                        {text,"\n*des3_cbc*"},
                        {sep,
                         [{text,
                           [139,101,110,99,114,121,112,116,105,111,110,32,119,
                            105,116,104,111,117,116,32,97,110,121,32,107,110,
                            111,119,108,101,100,103,101,32,111,102,32,116,104,
                            101,32,107,101,121,46,32,84,104,101,114,101,102,
                            111,114,101,44,32,97,115,32,108,111,110,103,32,97,
                            115,32,116,104,101,32,107,101,121,32,105,115,32,
                            107,101,112,116,32,115,97,102,101,32,97,110,100,
                            32,105,115,32,117,110,103,117,101,115,115,97,98,
                            108,101,44,32,116,104,101,32,101,110,99,114,121,
                            112,116,101,100,32,100,101,98,117,103,32,105,110,
                            102,111,114,109,97,116,105,111,110]}],
                         0,false},
                        {text,"\n**should**"},
                        {sep,
                         [{text,
                           [23,98,101,32,115,97,102,101,32,102,114,111,109,32,
                            105,110,116,114,117,100,101,114,115,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"2The key can be provided in the following two ways:"}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [19,85,115,101,32,67,111,109,112,105,108,101,114,32,111,
                      112,116,105,111,110]}],
                   0,false},
                  {text,
                   [22,42,123,100,101,98,117,103,95,105,110,102,111,95,107,
                    101,121,44,75,101,121,125,42]},
                  {sep,[{text,[5,44,32,115,101,101]}],0,false},
                  {text,
                   "E[compiler/compile#debug_info_key](../compiler/compile#debug_info_key)"},
                  {sep,[{text,"\fand function"}],0,false},
                  {text,"%[crypto_key_fun/1](#crypto_key_fun/1)"},
                  {sep,
                   [{text,"/to register a fun that returns the key whenever"}],
                   0,false},
                  {text,"\n*beam_lib*"},
                  {sep,
                   [{text,"#must decrypt the debug information."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [29,73,102,32,110,111,32,115,117,99,104,32,102,117,110,
                      32,105,115,32,114,101,103,105,115,116,101,114,101,100,
                      44]}],
                   0,false},
                  {text,"\n*beam_lib*"},
                  {sep,
                   [{text,
                     [23,105,110,115,116,101,97,100,32,115,101,97,114,99,104,
                      101,115,32,102,111,114,32,97,110]}],
                   0,false},
                  {text,
                   [15,42,46,101,114,108,97,110,103,46,99,114,121,112,116,42]},
                  {sep,[{text,"\efile, see the next section."}],0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,"\"Store the key in a text file named"}],
                   0,false},
                  {text,
                   [15,42,46,101,114,108,97,110,103,46,99,114,121,112,116,42]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [29,73,110,32,116,104,105,115,32,99,97,115,101,44,32,67,
                      111,109,112,105,108,101,114,32,111,112,116,105,111,
                      110]}],
                   0,false},
                  {text,
                   [20,42,101,110,99,114,121,112,116,95,100,101,98,117,103,95,
                    105,110,102,111,42]},
                  {sep,
                   [{text,
                     [16,99,97,110,32,98,101,32,117,115,101,100,44,32,115,101,
                      101]}],
                   0,false},
                  {text,
                   "M[compiler/compile#encrypt_debug_info](../compiler/compile#encrypt_debug_info)"},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,false}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,[16,35,35,32,46,101,114,108,97,110,103,46,99,114,121,112,116]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\n*beam_lib*"},
            {sep,[{text,"\fsearches for"}],0,false},
            {text,[15,42,46,101,114,108,97,110,103,46,99,114,121,112,116,42]},
            {sep,
             [{text,
               "sin the current directory and then the home directory for the current user. If the file is found and contains a key,"}],
             0,false},
            {text,"\n*beam_lib*"},
            {sep,
             [{text,"5implicitly creates a crypto key fun and registers it."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,70,105,108,101]}],0,false},
            {text,[15,42,46,101,114,108,97,110,103,46,99,114,121,112,116,42]},
            {sep,[{text,"&is to contain a single list of tuples:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text," \n{debug_info, Mode, Module, Key}"}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[6,42,77,111,100,101,42]},
            {sep,
             [{text,
               "Eis the type of crypto algorithm; currently, the only allowed value is"}],
             0,false},
            {text,"\n*des3_cbc*"},
            {sep,[{text,[1,46]}],0,false},
            {text,"\b*Module*"},
            {sep,[{text," is either an atom, in which case"}],0,false},
            {text,[5,42,75,101,121,42]},
            {sep,[{text,"\eis only used for the module"}],0,false},
            {text,"\b*Module*"},
            {sep,[{text,[4,44,32,111,114]}],0,false},
            {text,[4,42,91,93,42]},
            {sep,
             [{text,
               [15,44,32,105,110,32,119,104,105,99,104,32,99,97,115,101]}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,
             [{text,
               [24,105,115,32,117,115,101,100,32,102,111,114,32,97,108,108,32,
                109,111,100,117,108,101,115,46]}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,
             [{text,
               [28,105,115,32,116,104,101,32,110,111,110,45,101,109,112,116,
                121,32,107,101,121,32,115,116,114,105,110,103,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[5,42,75,101,121,42]},
            {sep,
             [{text,
               [29,105,110,32,116,104,101,32,102,105,114,115,116,32,116,117,
                112,108,101,32,119,104,101,114,101,32,98,111,116,104]}],
             0,false},
            {text,[6,42,77,111,100,101,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\b*Module*"},
            {sep,
             [{text,[14,109,97,116,99,104,32,105,115,32,117,115,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"!The following is an example of an"}],0,false},
            {text,[15,42,46,101,114,108,97,110,103,46,99,114,121,112,116,42]},
            {sep,
             [{text,"/file that returns the same key for all modules:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "B\n[{debug_info, des3_cbc, [], \"%>7}|pc/DM6Cga*68$Mw]L#&_Gejr]G^\"}]."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ":The following is a slightly more complicated example of an"}],
             0,false},
            {text,[15,42,46,101,114,108,97,110,103,46,99,114,121,112,116,42]},
            {sep,
             [{text,
               [28,112,114,111,118,105,100,105,110,103,32,111,110,101,32,107,
                101,121,32,102,111,114,32,109,111,100,117,108,101]}],
             0,false},
            {text,[3,42,116,42]},
            {sep,[{text,"&and another key for all other modules:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "h\n[{debug_info, des3_cbc, t, \"My KEY\"},\n {debug_info, des3_cbc, [], \"%>7}|pc/DM6Cga*68$Mw]L#&_Gejr]G^\"}]."}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "@Do not use any of the keys in these examples. Use your own keys."}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# Data Types"},null},null}},
    {sep,
     [{sep,[{text,[4,98,101,97,109]}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "vEach of the functions described below accept either the filename (as a string) or a binary containing the BEAM module."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,[{text,"\tchunkdata"}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"#The list of attributes is sorted on"}],0,false},
               {text,"\v*Attribute*"},
               {sep,[{text,[3,40,105,110]}],0,false},
               {text,
                [16,42,97,116,116,114,105,98,95,101,110,116,114,121,40,41,42]},
               {sep,
                [{text,
                  [151,41,32,97,110,100,32,101,97,99,104,32,97,116,116,114,
                   105,98,117,116,101,32,110,97,109,101,32,111,99,99,117,114,
                   115,32,111,110,99,101,32,105,110,32,116,104,101,32,108,105,
                   115,116,46,32,84,104,101,32,97,116,116,114,105,98,117,116,
                   101,32,118,97,108,117,101,115,32,111,99,99,117,114,32,105,
                   110,32,116,104,101,32,115,97,109,101,32,111,114,100,101,
                   114,32,97,115,32,105,110,32,116,104,101,32,102,105,108,101,
                   46,32,84,104,101,32,108,105,115,116,115,32,111,102,32,102,
                   117,110,99,116,105,111,110,115,32,97,114,101,32,97,108,115,
                   111,32,115,111,114,116,101,100,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,[{text,[7,99,104,117,110,107,105,100]}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "<\"Attr\" | \"CInf\" | \"Dbgi\" | \"ExpT\" | \"ImpT\" | \"LocT\" | \"AtU8\""}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,[{sep,[{text,[5,100,97,116,97,66]}],0,false}],0,false},
    {sep,
     [{sep,[{text,"\ndebug_info"}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,84,104,101,32,102,111,114,109,97,116,32,115,116,111,114,
                   101,100,32,105,110,32,116,104,101]}],
                0,false},
               {text,"\f*debug_info*"},
               {sep,
                [{text,
                  "Cchunk. To retrieve particular code representation from the backend,"}],
                0,false},
               {text,"0*Backend:debug_info(Format, Module, Data, Opts)*"},
               {sep,
                [{text,
                  [16,109,117,115,116,32,98,101,32,105,110,118,111,107,101,
                   100,46]}],
                0,false},
               {text,"\b*Format*"},
               {sep,
                [{text,
                  [19,105,115,32,97,110,32,97,116,111,109,44,32,115,117,99,
                   104,32,97,115]}],
                0,false},
               {text,"\v*erlang_v1*"},
               {sep,[{text,"!for the Erlang Abstract Format or"}],0,false},
               {text,"\t*core_v1*"},
               {sep,
                [{text,
                  [16,102,111,114,32,67,111,114,101,32,69,114,108,97,110,103,
                   46]}],
                0,false},
               {text,"\b*Module*"},
               {sep,
                [{text,".is the module represented by the beam file and"}],
                0,false},
               {text,[6,42,68,97,116,97,42]},
               {sep,
                [{text,",is the value stored in the debug info chunk."}],
                0,false},
               {text,[6,42,79,112,116,115,42]},
               {sep,
                [{text,"&is any list of values supported by the"}],
                0,false},
               {text,"\t*Backend*"},
               {sep,[{text,[1,46]}],0,false},
               {text,
                [22,42,66,97,99,107,101,110,100,58,100,101,98,117,103,95,105,
                 110,102,111,47,52,42]},
               {sep,[{text,"\vmust return"}],0,false},
               {text,"\f*{ok, Code}*"},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [15,42,123,101,114,114,111,114,44,32,84,101,114,109,125,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"!Developers must always invoke the"}],0,false},
               {text,[14,42,100,101,98,117,103,95,105,110,102,111,47,52,42]},
               {sep,
                [{text,
                  [30,102,117,110,99,116,105,111,110,32,97,110,100,32,110,101,
                   118,101,114,32,114,101,108,121,32,111,110,32,116,104,101]}],
                0,false},
               {text,[6,42,68,97,116,97,42]},
               {sep,[{text,"\rstored in the"}],0,false},
               {text,"\f*debug_info*"},
               {sep,
                [{text,
                  "4chunk, as it is opaque and may change at any moment."}],
                0,false},
               {text,
                [15,42,110,111,95,100,101,98,117,103,95,105,110,102,111,42]},
               {sep,
                [{text,
                  [16,109,101,97,110,115,32,116,104,97,116,32,99,104,117,110,
                   107]}],
                0,false},
               {text,"\b*\"Dbgi\"*"},
               {sep,
                [{text,
                  [22,105,115,32,112,114,101,115,101,110,116,44,32,98,117,116,
                   32,101,109,112,116,121,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,
     [{sep,[{text,"\tabst_code"}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "LIt is not checked that the forms conform to the abstract format indicated by"}],
                0,false},
               {text,"\r*AbstVersion*"},
               {sep,[{text,[1,46]}],0,false},
               {text,
                [18,42,110,111,95,97,98,115,116,114,97,99,116,95,99,111,100,
                 101,42]},
               {sep,
                [{text,
                  [16,109,101,97,110,115,32,116,104,97,116,32,99,104,117,110,
                   107]}],
                0,false},
               {text,"\b*\"Abst\"*"},
               {sep,
                [{text,
                  [22,105,115,32,112,114,101,115,101,110,116,44,32,98,117,116,
                   32,101,109,112,116,121,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"-For modules compiled with OTP 20 onwards, the"}],
                0,false},
               {text,"\v*abst_code*"},
               {sep,
                [{text,"(chunk is automatically computed from the"}],
                0,false},
               {text,"\f*debug_info*"},
               {sep,[{text,[6,99,104,117,110,107,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,[{sep,[{text,[5,102,111,114,109,115]}],0,false}],0,false},
    {sep,
     [{sep,
       [{text,[14,99,111,109,112,105,110,102,111,95,101,110,116,114,121]}],
       0,false}],
     0,false},
    {sep,[{sep,[{text,"\fattrib_entry"}],0,false}],0,false},
    {sep,[{sep,[{text,"\rlabeled_entry"}],0,false}],0,false},
    {sep,[{sep,[{text,[5,105,110,100,101,120]}],0,false}],0,false},
    {sep,[{sep,[{text,[5,108,97,98,101,108]}],0,false}],0,false},
    {sep,[{sep,[{text,"\bchunkref"}],0,false}],0,false},
    {sep,[{sep,[{text,"\tchunkname"}],0,false}],0,false},
    {sep,[{sep,[{text,"\bchnk_rsn"}],0,false}],0,false},
    {sep,[{sep,[{text,"\binfo_rsn"}],0,false}],0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,97,108,108,95,99,104,117,110,107,115,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Read all chunks from a BEAM file or binary"}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text," Reads chunk data for all chunks."}],0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,98,117,105,108,100,95,109,111,100,117,108,101,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"+Create a BEAM module from a list of chunks."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "9Builds a BEAM module (as a binary) from a list of chunks."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## chunks/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0Read selected chunks from a BEAM file or binary."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [154,82,101,97,100,115,32,99,104,117,110,107,32,100,97,116,97,32,
              102,111,114,32,115,101,108,101,99,116,101,100,32,99,104,117,110,
              107,115,32,114,101,102,101,114,101,110,99,101,115,46,32,84,104,
              101,32,111,114,100,101,114,32,111,102,32,116,104,101,32,114,101,
              116,117,114,110,101,100,32,108,105,115,116,32,111,102,32,99,104,
              117,110,107,32,100,97,116,97,32,105,115,32,100,101,116,101,114,
              109,105,110,101,100,32,98,121,32,116,104,101,32,111,114,100,101,
              114,32,111,102,32,116,104,101,32,108,105,115,116,32,111,102,32,
              99,104,117,110,107,115,32,114,101,102,101,114,101,110,99,101,
              115,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## chunks/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0Read selected chunks from a BEAM file or binary."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [154,82,101,97,100,115,32,99,104,117,110,107,32,100,97,116,97,32,
              102,111,114,32,115,101,108,101,99,116,101,100,32,99,104,117,110,
              107,115,32,114,101,102,101,114,101,110,99,101,115,46,32,84,104,
              101,32,111,114,100,101,114,32,111,102,32,116,104,101,32,114,101,
              116,117,114,110,101,100,32,108,105,115,116,32,111,102,32,99,104,
              117,110,107,32,100,97,116,97,32,105,115,32,100,101,116,101,114,
              109,105,110,101,100,32,98,121,32,116,104,101,32,111,114,100,101,
              114,32,111,102,32,116,104,101,32,108,105,115,116,32,111,102,32,
              99,104,117,110,107,115,32,114,101,102,101,114,101,110,99,101,
              115,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"0By default, if any requested chunk is missing in"}],
             0,false},
            {text,[6,42,66,101,97,109,42]},
            {sep,[{text,[4,44,32,97,110]}],0,false},
            {text,[7,42,101,114,114,111,114,42]},
            {sep,[{text,"%tuple is returned. However, if option"}],0,false},
            {text,
             [22,42,97,108,108,111,119,95,109,105,115,115,105,110,103,95,99,
              104,117,110,107,115,42]},
            {sep,
             [{text,
               "xis specified, a result is returned even if chunks are missing. In the result list, any missing chunks are represented as"}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[1,123]}],0,false},
                {sep,[{text,"\bChunkRef"}],0,false},
                {sep,
                 [{text,
                   [15,44,109,105,115,115,105,110,103,95,99,104,117,110,107,
                    125]}],
                 0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,
             [{text,
               [30,46,32,78,111,116,105,99,101,32,104,111,119,101,118,101,114,
                32,116,104,97,116,32,105,102,32,99,104,117,110,107]}],
             0,false},
            {text,"\b*\"Atom\"*"},
            {sep,
             [{text,
               "Gis missing, that is considered a fatal error and the return value is an"}],
             0,false},
            {text,[7,42,101,114,114,111,114,42]},
            {sep,[{text,[6,116,117,112,108,101,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,99,108,101,97,114,95,99,114,121,112,116,111,95,107,101,
        121,95,102,117,110,47,48]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"&Unregister the current crypto key fun."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "PUnregisters the crypto key fun and terminates the process holding it, started by"}],
             0,false},
            {text,"%[crypto_key_fun/1](#crypto_key_fun/1)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [14,82,101,116,117,114,110,115,32,101,105,116,104,101,114]}],
             0,false},
            {text,
             [17,42,123,111,107,44,32,117,110,100,101,102,105,110,101,100,125,
              42]},
            {sep,[{text,"&if no crypto key fun is registered, or"}],0,false},
            {text,"\f*{ok, Term}*"},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,
             [{text,
               [24,105,115,32,116,104,101,32,114,101,116,117,114,110,32,118,
                97,108,117,101,32,102,114,111,109]}],
             0,false},
            {text,
             [21,42,67,114,121,112,116,111,75,101,121,70,117,110,40,99,108,
              101,97,114,41,42]},
            {sep,[{text,[5,44,32,115,101,101]}],0,false},
            {text,
             [18,42,99,114,121,112,116,111,95,107,101,121,95,102,117,110,47,
              49,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## cmp/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,67,111,109,112,97,114,101,32,116,119,111,32,66,69,65,77,32,102,
            105,108,101,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,[{text,[1,42]},{text,[7,99,109,112,95,114,115,110]}],0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "jCompares the contents of two BEAM files. If the module names are the same, and all chunks except for chunk"}],
             0,false},
            {text,"\b*\"CInf\"*"},
            {sep,
             [{text,
               "E(the chunk containing the compilation information that is returned by"}],
             0,false},
            {text,
             [29,42,77,111,100,117,108,101,58,109,111,100,117,108,101,95,105,
              110,102,111,40,99,111,109,112,105,108,101,41,42]},
            {sep,[{text,"') have the same contents in both files,"}],0,false},
            {text,[4,42,111,107,42]},
            {sep,
             [{text,"4is returned. Otherwise an error message is returned."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## cmp_dirs/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Compare the BEAM files in two directories."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ECompares the BEAM files in two directories. Only files with extension"}],
             0,false},
            {text,"\t*\".beam\"*"},
            {sep,
             [{text,"5are compared. BEAM files that exist only in directory"}],
             0,false},
            {text,[6,42,68,105,114,49,42]},
            {sep,[{text,[1,40]}],0,false},
            {text,[6,42,68,105,114,50,42]},
            {sep,
             [{text,
               [17,41,32,97,114,101,32,114,101,116,117,114,110,101,100,32,105,
                110]}],
             0,false},
            {text,[7,42,79,110,108,121,49,42]},
            {sep,[{text,[1,40]}],0,false},
            {text,[7,42,79,110,108,121,50,42]},
            {sep,
             [{text,
               "L). BEAM files that exist in both directories but are considered different by"}],
             0,false},
            {text,[7,42,99,109,112,47,50,42]},
            {sep,
             [{text,
               [23,97,114,101,32,114,101,116,117,114,110,101,100,32,97,115,32,
                112,97,105,114,115,32,123]}],
             0,false},
            {text,"\v*Filename1*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\v*Filename2*"},
            {sep,[{text,"\b}, where"}],0,false},
            {text,"\v*Filename1*"},
            {sep,[{text,[1,40]}],0,false},
            {text,"\v*Filename2*"},
            {sep,
             [{text,
               [21,41,32,101,120,105,115,116,115,32,105,110,32,100,105,114,
                101,99,116,111,114,121]}],
             0,false},
            {text,[6,42,68,105,114,49,42]},
            {sep,[{text,[1,40]}],0,false},
            {text,[6,42,68,105,114,50,42]},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [19,35,35,32,99,114,121,112,116,111,95,107,101,121,95,102,117,110,47,
        49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Register a fun that provides a crypto key."}],0,false}],
       0,true},
      null},
     null}},
   {sep,[{text,[1,42]},{text,"\ncrypto_fun"}],0,false},
   {sep,
    [{text,[1,42]},
     {text,[14,99,114,121,112,116,111,95,102,117,110,95,97,114,103]}],
    0,false},
   {sep,[{text,[1,42]},{text,[4,109,111,100,101]}],0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"(Registers an unary fun that is called if"}],0,false},
            {text,"\n*beam_lib*"},
            {sep,[{text,"\fmust read an"}],0,false},
            {text,"\f*debug_info*"},
            {sep,
             [{text,
               "\\chunk that has been encrypted. The fun is held in a process that is started by the function."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "AIf a fun is already registered when attempting to register a fun,"}],
             0,false},
            {text,
             [17,42,123,101,114,114,111,114,44,32,101,120,105,115,116,115,125,
              42]},
            {sep,[{text,"\fis returned."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",The fun must handle the following arguments:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "A\nCryptoKeyFun(init) -> ok | {ok, NewCryptoKeyFun} | {error, Term}"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [134,67,97,108,108,101,100,32,119,104,101,110,32,116,104,101,
                32,102,117,110,32,105,115,32,114,101,103,105,115,116,101,114,
                101,100,44,32,105,110,32,116,104,101,32,112,114,111,99,101,
                115,115,32,116,104,97,116,32,104,111,108,100,115,32,116,104,
                101,32,102,117,110,46,32,72,101,114,101,32,116,104,101,32,99,
                114,121,112,116,111,32,107,101,121,32,102,117,110,32,99,97,
                110,32,100,111,32,97,110,121,32,110,101,99,101,115,115,97,114,
                121,32,105,110,105,116,105,97,108,105,122,97,116,105,111,110,
                115,46,32,73,102]}],
             0,false},
            {text,
             [23,42,123,111,107,44,32,78,101,119,67,114,121,112,116,111,75,
              101,121,70,117,110,125,42]},
            {sep,[{text,"\fis returned,"}],0,false},
            {text,
             [17,42,78,101,119,67,114,121,112,116,111,75,101,121,70,117,110,
              42]},
            {sep,
             [{text,
               [24,105,115,32,114,101,103,105,115,116,101,114,101,100,32,105,
                110,115,116,101,97,100,32,111,102]}],
             0,false},
            {text,[14,42,67,114,121,112,116,111,75,101,121,70,117,110,42]},
            {sep,[{text,[4,46,32,73,102]}],0,false},
            {text,[15,42,123,101,114,114,111,114,44,32,84,101,114,109,125,42]},
            {sep,
             [{text,",is returned, the registration is aborted and"}],
             0,false},
            {text,
             [18,42,99,114,121,112,116,111,95,107,101,121,95,102,117,110,47,
              49,42]},
            {sep,[{text,"\falso returns"}],0,false},
            {text,[15,42,123,101,114,114,111,114,44,32,84,101,114,109,125,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             ":\nCryptoKeyFun({debug_info, Mode, Module, Filename}) -> Key"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"(Called when the key is needed for module"}],0,false},
            {text,"\b*Module*"},
            {sep,
             [{text,
               [17,105,110,32,116,104,101,32,102,105,108,101,32,110,97,109,
                101,100]}],
             0,false},
            {text,"\n*Filename*"},
            {sep,[{text,[1,46]}],0,false},
            {text,[6,42,77,111,100,101,42]},
            {sep,
             [{text,
               "Fis the type of crypto algorithm; currently, the only possible value is"}],
             0,false},
            {text,"\n*des3_cbc*"},
            {sep,
             [{text,
               "B. The call is to fail (raise an exception) if no key is available."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [30,10,67,114,121,112,116,111,75,101,121,70,117,110,40,99,108,
              101,97,114,41,32,45,62,32,116,101,114,109,40,41]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [143,67,97,108,108,101,100,32,98,101,102,111,114,101,32,116,
                104,101,32,102,117,110,32,105,115,32,117,110,114,101,103,105,
                115,116,101,114,101,100,46,32,72,101,114,101,32,97,110,121,32,
                99,108,101,97,110,105,110,103,32,117,112,32,99,97,110,32,98,
                101,32,100,111,110,101,46,32,84,104,101,32,114,101,116,117,
                114,110,32,118,97,108,117,101,32,105,115,32,110,111,116,32,
                105,109,112,111,114,116,97,110,116,44,32,98,117,116,32,105,
                115,32,112,97,115,115,101,100,32,98,97,99,107,32,116,111,32,
                116,104,101,32,99,97,108,108,101,114,32,111,102]}],
             0,false},
            {text,
             [24,42,99,108,101,97,114,95,99,114,121,112,116,111,95,107,101,
              121,95,102,117,110,47,48,42]},
            {sep,
             [{text,
               [28,97,115,32,112,97,114,116,32,111,102,32,105,116,115,32,114,
                101,116,117,114,110,32,118,97,108,117,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[14,35,35,32,100,105,102,102,95,100,105,114,115,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Compare the BEAM files in two directories."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"-Compares the BEAM files in two directories as"}],
             0,false},
            {text,
             [25,91,99,109,112,95,100,105,114,115,47,50,93,40,35,99,109,112,
              95,100,105,114,115,47,50,41]},
            {sep,
             [{text,
               "l, but the names of files that exist in only one directory or are different are presented on standard output."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,102,111,114,109,97,116,95,101,114,114,111,114,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"9Return an English description of a BEAM read error reply."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [156,70,111,114,32,97,32,115,112,101,99,105,102,105,101,100,32,
                101,114,114,111,114,32,114,101,116,117,114,110,101,100,32,98,
                121,32,97,110,121,32,102,117,110,99,116,105,111,110,32,105,
                110,32,116,104,105,115,32,109,111,100,117,108,101,44,32,116,
                104,105,115,32,102,117,110,99,116,105,111,110,32,114,101,116,
                117,114,110,115,32,97,32,100,101,115,99,114,105,112,116,105,
                118,101,32,115,116,114,105,110,103,32,111,102,32,116,104,101,
                32,101,114,114,111,114,32,105,110,32,69,110,103,108,105,115,
                104,46,32,70,111,114,32,102,105,108,101,32,101,114,114,111,
                114,115,44,32,102,117,110,99,116,105,111,110]}],
             0,false},
            {text,
             ";[kernel/file#format_error/1](../kernel/file#format_error/1)"},
            {sep,
             [{text,
               [16,105,115,32,116,111,32,98,101,32,99,97,108,108,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## info/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [30,73,110,102,111,114,109,97,116,105,111,110,32,97,98,111,117,116,
            32,97,32,66,69,65,77,32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "FReturns a list containing some information about a BEAM file as tuples"}],
             0,false},
            {text,[14,42,123,73,116,101,109,44,32,73,110,102,111,125,42]},
            {sep,[{text,[1,58]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{sep,[{text,[6,123,102,105,108,101,44]}],0,false},
                      {sep,[{text,"\bFilename"}],0,false},
                      {sep,[{text,"\f} | {binary,"}],0,false},
                      {sep,[{text,[6,66,105,110,97,114,121]}],0,false},
                      {sep,[{text,[1,125]}],0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "[The name (string) of the BEAM file, or the binary from which the information was extracted."}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{sep,[{text,"\b{module,"}],0,false},
                     {sep,[{text,[6,77,111,100,117,108,101]}],0,false},
                     {sep,[{text,[1,125]}],0,false}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [30,84,104,101,32,110,97,109,101,32,40,97,116,111,109,
                         41,32,111,102,32,116,104,101,32,109,111,100,117,108,
                         101,46]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{sep,
                  [{sep,[{text,"\v{chunks, [{"}],0,false},
                   {sep,[{text,[7,67,104,117,110,107,73,100]}],0,false},
                   {sep,[{text,[1,44]}],0,false},
                   {sep,[{text,[3,80,111,115]}],0,false},
                   {sep,[{text,[1,44]}],0,false},
                   {sep,[{text,[4,83,105,122,101]}],0,false},
                   {sep,[{text,[3,125,93,125]}],0,false}],
                  0,false}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "^For each chunk, the identifier (string) and the position and size of the chunk data, in bytes."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## md5/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")Read the module version of the BEAM file."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "wCalculates an MD5 redundancy check for the code of the module (compilation date and other attributes are not included)."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## strip/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"8Remove chunks not needed by the loader from a BEAM file."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "rRemoves all chunks from a BEAM file except those needed by the loader. In particular, the debug information (chunk"}],
             0,false},
            {text,"\f*debug_info*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[15,42,97,98,115,116,114,97,99,116,95,99,111,100,101,42]},
            {sep,[{text,"\r) is removed."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## strip/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"8Remove chunks not needed by the loader from a BEAM file."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [127,82,101,109,111,118,101,115,32,97,108,108,32,99,104,117,
                110,107,115,32,102,114,111,109,32,97,32,66,69,65,77,32,102,
                105,108,101,32,101,120,99,101,112,116,32,116,104,111,115,101,
                32,110,101,101,100,101,100,32,98,121,32,116,104,101,32,108,
                111,97,100,101,114,32,111,114,32,112,97,115,115,101,100,32,
                105,110,46,32,73,110,32,112,97,114,116,105,99,117,108,97,114,
                44,32,116,104,101,32,100,101,98,117,103,32,105,110,102,111,
                114,109,97,116,105,111,110,32,40,99,104,117,110,107]}],
             0,false},
            {text,"\f*debug_info*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[15,42,97,98,115,116,114,97,99,116,95,99,111,100,101,42]},
            {sep,[{text,"\r) is removed."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,115,116,114,105,112,95,102,105,108,101,115,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"8Removes chunks not needed by the loader from BEAM files."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "qRemoves all chunks except those needed by the loader from BEAM files. In particular, the debug information (chunk"}],
             0,false},
            {text,"\f*debug_info*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[15,42,97,98,115,116,114,97,99,116,95,99,111,100,101,42]},
            {sep,
             [{text,
               "i) is removed. The returned list contains one element for each specified filename, in the same order as in"}],
             0,false},
            {text,[7,42,70,105,108,101,115,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,115,116,114,105,112,95,102,105,108,101,115,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"8Removes chunks not needed by the loader from BEAM files."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "~Removes all chunks except those needed by the loader or passed in from BEAM files. In particular, the debug information (chunk"}],
             0,false},
            {text,"\f*debug_info*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[15,42,97,98,115,116,114,97,99,116,95,99,111,100,101,42]},
            {sep,
             [{text,
               "i) is removed. The returned list contains one element for each specified filename, in the same order as in"}],
             0,false},
            {text,[7,42,70,105,108,101,115,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [18,35,35,32,115,116,114,105,112,95,114,101,108,101,97,115,101,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "HRemove chunks not needed by the loader from all BEAM files of a release."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "VRemoves all chunks except those needed by the loader from the BEAM files of a release."}],
             0,false},
            {text,[5,42,68,105,114,42]},
            {sep,
             [{text,
               "lis to be the installation root directory. For example, the current OTP release can be stripped with the call"}],
             0,false},
            {text,")*beam_lib:strip_release(code:root_dir())*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [18,35,35,32,115,116,114,105,112,95,114,101,108,101,97,115,101,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "HRemove chunks not needed by the loader from all BEAM files of a release."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "cRemoves all chunks except those needed by the loader or passed in from the BEAM files of a release."}],
             0,false},
            {text,[5,42,68,105,114,42]},
            {sep,
             [{text,
               "lis to be the installation root directory. For example, the current OTP release can be stripped with the call"}],
             0,false},
            {text,")*beam_lib:strip_release(code:root_dir())*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## version/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")Read the module version of the BEAM file."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "PReturns the module version or versions. A version is defined by module attribute"}],
             0,false},
            {text,"\v*-vsn(Vsn)*"},
            {sep,
             [{text,
               "p. If this attribute is not specified, the version defaults to the checksum of the module. Notice that if version"}],
             0,false},
            {text,[5,42,86,115,110,42]},
            {sep,
             [{text,"+is not a list, it is made into one, that is"}],
             0,false},
            {text,
             [21,42,123,111,107,44,123,77,111,100,117,108,101,44,91,86,115,
              110,93,125,125,42]},
            {sep,
             [{text,
               [30,105,115,32,114,101,116,117,114,110,101,100,46,32,73,102,32,
                116,104,101,114,101,32,97,114,101,32,109,97,110,121]}],
             0,false},
            {text,[6,42,45,118,115,110,42]},
            {sep,
             [{text,
               "Cmodule attributes, the result is the concatenated list of versions."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,49,62,32]},
            {text,
             [20,98,101,97,109,95,108,105,98,58,118,101,114,115,105,111,110,
              40,97,41,46]},
            {text,
             [28,32,37,32,45,118,115,110,40,49,41,46,10,123,111,107,44,123,97,
              44,91,49,93,125,125,10,50,62,32]},
            {text,
             [20,98,101,97,109,95,108,105,98,58,118,101,114,115,105,111,110,
              40,98,41,46]},
            {text,
             [30,32,37,32,45,118,115,110,40,91,49,93,41,46,10,123,111,107,44,
              123,98,44,91,49,93,125,125,10,51,62,32]},
            {text,
             [20,98,101,97,109,95,108,105,98,58,118,101,114,115,105,111,110,
              40,99,41,46]},
            {text,") % -vsn([1]). -vsn(2).\n{ok,{c,[1,2]}}\n4> "},
            {text,
             [20,98,101,97,109,95,108,105,98,58,118,101,114,115,105,111,110,
              40,100,41,46]},
            {text,
             "G % no -vsn attribute\n{ok,{d,[275613208176997377698094100858909383631]}}"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false}],
  0,false}}
