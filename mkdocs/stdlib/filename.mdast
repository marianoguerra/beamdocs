{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n# filename"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n# filename"},null},null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text," Filename manipulation functions."}],0,false}],
       0,true},
      null},
     null}}},
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {sep,
      [{sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [312,84,104,105,115,32,109,111,100,117,108,101,32,112,114,
                    111,118,105,100,101,115,32,102,117,110,99,116,105,111,110,
                    115,32,102,111,114,32,97,110,97,108,121,122,105,110,103,
                    32,97,110,100,32,109,97,110,105,112,117,108,97,116,105,
                    110,103,32,102,105,108,101,110,97,109,101,115,46,32,84,
                    104,101,115,101,32,102,117,110,99,116,105,111,110,115,32,
                    97,114,101,32,100,101,115,105,103,110,101,100,32,115,111,
                    32,116,104,97,116,32,116,104,101,32,69,114,108,97,110,103,
                    32,99,111,100,101,32,99,97,110,32,119,111,114,107,32,111,
                    110,32,109,97,110,121,32,100,105,102,102,101,114,101,110,
                    116,32,112,108,97,116,102,111,114,109,115,32,119,105,116,
                    104,32,100,105,102,102,101,114,101,110,116,32,102,105,108,
                    101,110,97,109,101,32,102,111,114,109,97,116,115,46,32,87,
                    105,116,104,32,102,105,108,101,110,97,109,101,32,105,115,
                    32,109,101,97,110,116,32,97,108,108,32,115,116,114,105,
                    110,103,115,32,116,104,97,116,32,99,97,110,32,98,101,32,
                    117,115,101,100,32,116,111,32,100,101,110,111,116,101,32,
                    97,32,102,105,108,101,46,32,84,104,101,32,102,105,108,101,
                    110,97,109,101,32,99,97,110,32,98,101,32,97,32,115,104,
                    111,114,116,32,114,101,108,97,116,105,118,101,32,110,97,
                    109,101,32,108,105,107,101]}],
                 0,false},
                {text,"\t*foo.erl*"},
                {sep,
                 [{text,
                   "J, a long absolute name including a drive designator, a directory name like"}],
                 0,false},
                {text,"(*D:\\usr/local\\bin\\erl/lib\\tools\\foo.erl*"},
                {sep,
                 [{text,
                   [31,44,32,111,114,32,97,110,121,32,118,97,114,105,97,116,
                    105,111,110,115,32,105,110,32,98,101,116,119,101,101,110,
                    46]}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   "¸In Windows, all functions return filenames with forward slashes only, even if the arguments contain backslashes. To normalize a filename by removing redundant directory separators, use"}],
                 0,false},
                {text,
                 [17,91,106,111,105,110,47,49,93,40,35,106,111,105,110,47,49,
                  41]},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [19,84,104,101,32,109,111,100,117,108,101,32,115,117,112,
                    112,111,114,116,115]}],
                 0,false},
                {text,
                 ":[raw filenames](./unicode_usage#notes-about-raw-filenames)"},
                {sep,
                 [{text,
                   "nin the way that if a binary is present, or the filename cannot be interpreted according to the return value of"}],
                 0,false},
                {text,
                 "K[kernel/file#native_name_encoding/0](../kernel/file#native_name_encoding/0)"},
                {sep,
                 [{text,"/, a raw filename is also returned. For example,"}],
                 0,false},
                {text,"\b*join/1*"},
                {sep,
                 [{text,
                   [256,112,114,111,118,105,100,101,100,32,119,105,116,104,32,
                    97,32,112,97,116,104,32,99,111,109,112,111,110,101,110,
                    116,32,116,104,97,116,32,105,115,32,97,32,98,105,110,97,
                    114,121,32,40,97,110,100,32,99,97,110,110,111,116,32,98,
                    101,32,105,110,116,101,114,112,114,101,116,101,100,32,117,
                    110,100,101,114,32,116,104,101,32,99,117,114,114,101,110,
                    116,32,110,97,116,105,118,101,32,102,105,108,101,110,97,
                    109,101,32,101,110,99,111,100,105,110,103,41,32,114,101,
                    115,117,108,116,115,32,105,110,32,97,32,114,97,119,32,102,
                    105,108,101,110,97,109,101,32,116,104,97,116,32,105,115,
                    32,114,101,116,117,114,110,101,100,32,40,116,104,101,32,
                    106,111,105,110,32,111,112,101,114,97,116,105,111,110,32,
                    105,115,32,112,101,114,102,111,114,109,101,100,32,111,102,
                    32,99,111,117,114,115,101,41,46,32,70,111,114,32,109,111,
                    114,101,32,105,110,102,111,114,109,97,116,105,111,110,32,
                    97,98,111,117,116,32,114,97,119,32,102,105,108,101,110,97,
                    109,101,115,44,32,115,101,101,32,116,104,101]}],
                 0,false},
                {text,
                 [21,91,107,101,114,110,101,108,47,102,105,108,101,93,40,46,
                  47,102,105,108,101,41]},
                {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "¹Functionality in this module generally assumes valid input and does not necessarily fail on input that does not use a valid encoding, but may instead very likely produce invalid output."}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [259,70,105,108,101,32,111,112,101,114,97,116,105,111,
                      110,115,32,117,115,101,100,32,116,111,32,97,99,99,101,
                      112,116,32,102,105,108,101,110,97,109,101,115,32,99,111,
                      110,116,97,105,110,105,110,103,32,110,117,108,108,32,99,
                      104,97,114,97,99,116,101,114,115,32,40,105,110,116,101,
                      103,101,114,32,118,97,108,117,101,32,122,101,114,111,41,
                      46,32,84,104,105,115,32,99,97,117,115,101,100,32,116,
                      104,101,32,110,97,109,101,32,116,111,32,98,101,32,116,
                      114,117,110,99,97,116,101,100,32,97,110,100,32,105,110,
                      32,115,111,109,101,32,99,97,115,101,115,32,97,114,103,
                      117,109,101,110,116,115,32,116,111,32,112,114,105,109,
                      105,116,105,118,101,32,111,112,101,114,97,116,105,111,
                      110,115,32,116,111,32,98,101,32,109,105,120,101,100,32,
                      117,112,46,32,70,105,108,101,110,97,109,101,115,32,99,
                      111,110,116,97,105,110,105,110,103,32,110,117,108,108,
                      32,99,104,97,114,97,99,116,101,114,115,32,105,110,115,
                      105,100,101,32,116,104,101,32,102,105,108,101,110,97,
                      109,101,32,97,114,101,32,110,111,119]}],
                   0,false},
                  {text,"\f**rejected**"},
                  {sep,
                   [{text,
                     "1and will cause primitive file operations to fail."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "èCurrently null characters at the end of the filename will be accepted by primitive file operations. Such filenames are however still documented as invalid. The implementation will also change in the future and reject such filenames."}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,false}],
      0,true},
     null},
    null}}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## absname/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "GConvert a filename to an absolute name, relative the working directory."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [19,67,111,110,118,101,114,116,115,32,97,32,114,101,108,97,116,
                105,118,101]}],
             0,false},
            {text,"\n*Filename*"},
            {sep,
             [{text,
               [155,97,110,100,32,114,101,116,117,114,110,115,32,97,110,32,97,
                98,115,111,108,117,116,101,32,110,97,109,101,46,32,78,111,32,
                97,116,116,101,109,112,116,32,105,115,32,109,97,100,101,32,
                116,111,32,99,114,101,97,116,101,32,116,104,101,32,115,104,
                111,114,116,101,115,116,32,97,98,115,111,108,117,116,101,32,
                110,97,109,101,44,32,97,115,32,116,104,105,115,32,99,97,110,
                32,103,105,118,101,32,105,110,99,111,114,114,101,99,116,32,
                114,101,115,117,108,116,115,32,111,110,32,102,105,108,101,32,
                115,121,115,116,101,109,115,32,116,104,97,116,32,97,108,108,
                111,119,32,108,105,110,107,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [18,42,42,85,110,105,120,32,101,120,97,109,112,108,101,115,58,42,
              42]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,49,62,32]},
            {text,[6,112,119,100,40,41,46]},
            {text,
             [17,10,34,47,117,115,114,47,108,111,99,97,108,34,10,50,62,32]},
            {text,
             [24,102,105,108,101,110,97,109,101,58,97,98,115,110,97,109,101,
              40,34,102,111,111,34,41,46]},
            {text,
             [21,10,34,47,117,115,114,47,108,111,99,97,108,47,102,111,111,34,
              10,51,62,32]},
            {text,
             [25,102,105,108,101,110,97,109,101,58,97,98,115,110,97,109,101,
              40,34,46,46,47,120,34,41,46]},
            {text,
             [22,10,34,47,117,115,114,47,108,111,99,97,108,47,46,46,47,120,34,
              10,52,62,32]},
            {text,
             [22,102,105,108,101,110,97,109,101,58,97,98,115,110,97,109,101,
              40,34,47,34,41,46]},
            {text,[4,10,34,47,34]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [21,42,42,87,105,110,100,111,119,115,32,101,120,97,109,112,108,
              101,115,58,42,42]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,49,62,32]},
            {text,[6,112,119,100,40,41,46]},
            {text,
             [19,10,34,68,58,47,117,115,114,47,108,111,99,97,108,34,10,50,62,
              32]},
            {text,
             [24,102,105,108,101,110,97,109,101,58,97,98,115,110,97,109,101,
              40,34,102,111,111,34,41,46]},
            {text,
             [23,10,34,68,58,47,117,115,114,47,108,111,99,97,108,47,102,111,
              111,34,10,51,62,32]},
            {text,
             [25,102,105,108,101,110,97,109,101,58,97,98,115,110,97,109,101,
              40,34,46,46,47,120,34,41,46]},
            {text,
             [24,10,34,68,58,47,117,115,114,47,108,111,99,97,108,47,46,46,47,
              120,34,10,52,62,32]},
            {text,
             [22,102,105,108,101,110,97,109,101,58,97,98,115,110,97,109,101,
              40,34,47,34,41,46]},
            {text,[6,10,34,68,58,47,34]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## absname/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "GConvert a filename to an absolute name, relative a specified directory."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,83,97,109,101,32,97,115]}],0,false},
            {text,
             [23,91,97,98,115,110,97,109,101,47,49,93,40,35,97,98,115,110,97,
              109,101,47,49,41]},
            {sep,
             [{text,
               "a, except that the directory to which the filename is to be made relative is specified in argument"}],
             0,false},
            {text,[5,42,68,105,114,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,97,98,115,110,97,109,101,95,106,111,105,110,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"4Join an absolute directory with a relative filename."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "@Joins an absolute directory with a relative filename. Similar to"}],
             0,false},
            {text,
             [17,91,106,111,105,110,47,50,93,40,35,106,111,105,110,47,50,41]},
            {sep,
             [{text,
               [155,44,32,98,117,116,32,111,110,32,112,108,97,116,102,111,114,
                109,115,32,119,105,116,104,32,116,105,103,104,116,32,114,101,
                115,116,114,105,99,116,105,111,110,115,32,111,110,32,114,97,
                119,32,102,105,108,101,110,97,109,101,32,108,101,110,103,116,
                104,32,97,110,100,32,110,111,32,115,117,112,112,111,114,116,
                32,102,111,114,32,115,121,109,98,111,108,105,99,32,108,105,
                110,107,115,32,40,114,101,97,100,58,32,86,120,87,111,114,107,
                115,41,44,32,108,101,97,100,105,110,103,32,112,97,114,101,110,
                116,32,100,105,114,101,99,116,111,114,121,32,99,111,109,112,
                111,110,101,110,116,115,32,105,110]}],
             0,false},
            {text,"\n*Filename*"},
            {sep,
             [{text,"4are matched against trailing directory components in"}],
             0,false},
            {text,[5,42,68,105,114,42]},
            {sep,
             [{text,
               "?so they can be removed from the result - minimizing its length."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## basedir/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## basedir/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\rEquivalent to"}],0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,"\bbasedir("}],0,false},
              {sep,[{text,"\bPathType"}],0,false},
              {sep,[{text,[1,44]}],0,false},
              {sep,[{text,"\vApplication"}],0,false},
              {sep,[{text,[5,44,35,123,125,41]}],0,false}],
             0,false},
            {text,[1,42]}],
           0,false},
          {sep,[{text,[2,111,114]}],0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,[{text,"\bbasedir("}],0,false},
              {sep,[{text,"\tPathsType"}],0,false},
              {sep,[{text,[1,44]}],0,false},
              {sep,[{text,"\vApplication"}],0,false},
              {sep,[{text,[5,44,35,123,125,41]}],0,false}],
             0,false},
            {text,[1,42]}],
           0,false},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,[{text,[1,42]},{text,"\bPathType"}],0,false},
   {sep,
    [{text,[1,42]},
     {text,
      [17,98,97,115,101,100,105,114,95,112,97,116,104,95,116,121,112,101]}],
    0,false},
   {sep,[{text,[1,42]},{text,"\tPathsType"}],0,false},
   {sep,
    [{text,[1,42]},
     {text,
      [18,98,97,115,101,100,105,114,95,112,97,116,104,115,95,116,121,112,
       101]}],
    0,false},
   {sep,[{text,[1,42]},{text,"\vApplication"}],0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text," [basedir(, , #{})](#basedir_3_1)"},
            {sep,[{text,[2,111,114]}],0,false},
            {text," [basedir(, , #{})](#basedir_3_2)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## basedir/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## basedir/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{sep,[null],0,true},null},null}},
   {sep,[{text,[1,42]},{text,"\bPathType"}],0,false},
   {sep,
    [{text,[1,42]},
     {text,
      [17,98,97,115,101,100,105,114,95,112,97,116,104,95,116,121,112,101]}],
    0,false},
   {sep,[{text,[1,42]},{text,"\tPathsType"}],0,false},
   {sep,
    [{text,[1,42]},
     {text,
      [18,98,97,115,101,100,105,114,95,112,97,116,104,115,95,116,121,112,
       101]}],
    0,false},
   {sep,[{text,[1,42]},{text,"\vApplication"}],0,false},
   {sep,[{text,[1,42]},{text,[4,79,112,116,115]}],0,false},
   {sep,[{text,[1,42]},{text,"\fbasedir_opts"}],0,false},
   {sep,
    [{text,"!<a name=\"basedir-3\">basedir-3</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "7Returns a suitable path, or paths, for a given type. If"}],
             0,false},
            {text,[4,42,111,115,42]},
            {sep,[{text,"\ris not set in"}],0,false},
            {text,[6,42,79,112,116,115,42]},
            {sep,
             [{text,
               "7the function will default to the native option, that is"}],
             0,false},
            {text,"\t*'linux'*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\n*'darwin'*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\v*'windows'*"},
            {sep,
             [{text,
               [18,44,32,97,115,32,117,110,100,101,114,115,116,111,111,100,32,
                98,121]}],
             0,false},
            {text,"\v*os:type/0*"},
            {sep,
             [{text,
               [28,46,32,65,110,121,116,104,105,110,103,32,110,111,116,32,114,
                101,99,111,103,110,105,122,101,100,32,97,115]}],
             0,false},
            {text,"\n*'darwin'*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\v*'windows'*"},
            {sep,
             [{text,
               [17,105,115,32,105,110,116,101,114,112,114,101,116,101,100,32,
                97,115]}],
             0,false},
            {text,"\t*'linux'*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\vThe options"}],0,false},
            {text,"\n*'author'*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\v*'version'*"},
            {sep,
             [{text,
               [18,97,114,101,32,111,110,108,121,32,117,115,101,100,32,119,
                105,116,104]}],
             0,false},
            {text,"\v*'windows'*"},
            {sep,[{text,"\foption mode."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"\f*user_cache*"},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "JThe path location is intended for transient data files on a local machine."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        ".On Linux: Respects the os environment variable"}],
                      0,false},
                     {text,
                      [16,42,88,68,71,95,67,65,67,72,69,95,72,79,77,69,42]},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,[4,10,49,62,32]},
                     {text,
                      "=filename:basedir(user_cache, \"my_application\", #{os=>linux})."},
                     {text,"&\n\"/home/otptest/.cache/my_application\""}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {sep,[{text,"\nOn Darwin:"}],0,false},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,[4,10,49,62,32]},
                     {text,
                      ">filename:basedir(user_cache, \"my_application\", #{os=>darwin})."},
                     {text,
                      ".\n\"/home/otptest/Library/Caches/my_application\""}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {sep,[{text,"\vOn Windows:"}],0,false},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,[4,10,49,62,32]},
                     {text,"'filename:basedir(user_cache, \"My App\")."},
                     {text,
                      "2\n\"c:/Users/otptest/AppData/Local/My App/Cache\"\n2> "},
                     {text,"'filename:basedir(user_cache, \"My App\")."},
                     {text,
                      "2\n\"c:/Users/otptest/AppData/Local/My App/Cache\"\n3> "},
                     {text,
                      "<filename:basedir(user_cache, \"My App\", #{author=>\"Erlang\"})."},
                     {text,
                      "9\n\"c:/Users/otptest/AppData/Local/Erlang/My App/Cache\"\n4> "},
                     {text,
                      ":filename:basedir(user_cache, \"My App\", #{version=>\"1.2\"})."},
                     {text,
                      "6\n\"c:/Users/otptest/AppData/Local/My App/1.2/Cache\"\n5> "},
                     {text,
                      "Kfilename:basedir(user_cache, \"My App\", #{author=>\"Erlang\",version=>\"1.2\"})."},
                     {text,
                      "9\n\"c:/Users/otptest/AppData/Local/Erlang/My App/1.2/Cache\""}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"\r*user_config*"},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,
                      "AThe path location is intended for persistent configuration files."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        ".On Linux: Respects the os environment variable"}],
                      0,false},
                     {text,
                      [17,42,88,68,71,95,67,79,78,70,73,71,95,72,79,77,69,42]},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,[4,10,50,62,32]},
                     {text,
                      ">filename:basedir(user_config, \"my_application\", #{os=>linux})."},
                     {text,"'\n\"/home/otptest/.config/my_application\""}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {sep,[{text,"\nOn Darwin:"}],0,false},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,[4,10,50,62,32]},
                     {text,
                      "?filename:basedir(user_config, \"my_application\", #{os=>darwin})."},
                     {text,
                      ";\n\"/home/otptest/Library/Application Support/my_application\""}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}},
              {sep,[{text,"\vOn Windows:"}],0,false},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {above,
                  {above,
                   {text,[3,96,96,96]},
                   {sep,
                    [{text,[4,10,49,62,32]},
                     {text,"(filename:basedir(user_config, \"My App\")."},
                     {text,
                      ".\n\"c:/Users/otptest/AppData/Roaming/My App\"\n2> "},
                     {text,
                      "Mfilename:basedir(user_config, \"My App\", #{author=>\"Erlang\", version=>\"1.2\"})."},
                     {text,
                      "5\n\"c:/Users/otptest/AppData/Roaming/Erlang/My App/1.2\""}],
                    0,true}},
                  {text,[3,96,96,96]}},
                 null},
                null}}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"\v*user_data*"},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     "8The path location is intended for persistent data files."}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       ".On Linux: Respects the os environment variable"}],
                     0,false},
                    {text,[15,42,88,68,71,95,68,65,84,65,95,72,79,77,69,42]},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {above,
                 {above,
                  {text,[3,96,96,96]},
                  {sep,
                   [{text,[4,10,51,62,32]},
                    {text,
                     "<filename:basedir(user_data, \"my_application\", #{os=>linux})."},
                    {text,"&\n\"/home/otptest/.local/my_application\""}],
                   0,true}},
                 {text,[3,96,96,96]}},
                null},
               null}},
             {sep,[{text,"\nOn Darwin:"}],0,false},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {above,
                 {above,
                  {text,[3,96,96,96]},
                  {sep,
                   [{text,[4,10,51,62,32]},
                    {text,
                     "=filename:basedir(user_data, \"my_application\", #{os=>darwin})."},
                    {text,
                     ";\n\"/home/otptest/Library/Application Support/my_application\""}],
                   0,true}},
                 {text,[3,96,96,96]}},
                null},
               null}},
             {sep,[{text,"\vOn Windows:"}],0,false},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {above,
                 {above,
                  {text,[3,96,96,96]},
                  {sep,
                   [{text,[4,10,56,62,32]},
                    {text,"&filename:basedir(user_data, \"My App\")."},
                    {text,",\n\"c:/Users/otptest/AppData/Local/My App\"\n9> "},
                    {text,
                     "Ifilename:basedir(user_data, \"My App\",#{author=>\"Erlang\",version=>\"1.2\"})."},
                    {text,
                     "3\n\"c:/Users/otptest/AppData/Local/Erlang/My App/1.2\""}],
                   0,true}},
                 {text,[3,96,96,96]}},
                null},
               null}}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\n*user_log*"},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "IThe path location is intended for transient log files on a local machine."}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,".On Linux: Respects the os environment variable"}],
                    0,false},
                   {text,[16,42,88,68,71,95,67,65,67,72,69,95,72,79,77,69,42]},
                   {sep,[{text,[1,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {above,
                {above,
                 {text,[3,96,96,96]},
                 {sep,
                  [{text,[4,10,52,62,32]},
                   {text,
                    ";filename:basedir(user_log, \"my_application\", #{os=>linux})."},
                   {text,"*\n\"/home/otptest/.cache/my_application/log\""}],
                  0,true}},
                {text,[3,96,96,96]}},
               null},
              null}},
            {sep,[{text,"\nOn Darwin:"}],0,false},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {above,
                {above,
                 {text,[3,96,96,96]},
                 {sep,
                  [{text,[4,10,52,62,32]},
                   {text,
                    "<filename:basedir(user_log, \"my_application\", #{os=>darwin})."},
                   {text,
                    ".\n\"/home/otptest/Library/Caches/my_application\""}],
                  0,true}},
                {text,[3,96,96,96]}},
               null},
              null}},
            {sep,[{text,"\vOn Windows:"}],0,false},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {above,
                {above,
                 {text,[3,96,96,96]},
                 {sep,
                  [{text,[5,10,49,50,62,32]},
                   {text,"%filename:basedir(user_log, \"My App\")."},
                   {text,
                    "2\n\"c:/Users/otptest/AppData/Local/My App/Logs\"\n13> "},
                   {text,
                    "Hfilename:basedir(user_log, \"My App\",#{author=>\"Erlang\",version=>\"1.2\"})."},
                   {text,
                    "8\n\"c:/Users/otptest/AppData/Local/Erlang/My App/1.2/Logs\""}],
                  0,true}},
                {text,[3,96,96,96]}},
               null},
              null}}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\r*site_config*"},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,".On Linux: Respects the os environment variable"}],
                   0,false},
                  {text,
                   [17,42,88,68,71,95,67,79,78,70,73,71,95,68,73,82,83,42]},
                  {sep,[{text,[1,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,[4,10,53,62,32]},
                  {text,
                   "<filename:basedir(site_data, \"my_application\", #{os=>linux})."},
                  {text,
                   "F\n[\"/usr/local/share/my_application\",\n \"/usr/share/my_application\"]\n6> "},
                  {text,
                   [29,111,115,58,103,101,116,101,110,118,40,34,88,68,71,95,
                    67,79,78,70,73,71,95,68,73,82,83,34,41,46]},
                  {text,
                   ":\n\"/etc/xdg/xdg-ubuntu:/usr/share/upstart/xdg:/etc/xdg\"\n7> "},
                  {text,
                   ">filename:basedir(site_config, \"my_application\", #{os=>linux})."},
                  {text,
                   "q\n[\"/etc/xdg/xdg-ubuntu/my_application\",\n \"/usr/share/upstart/xdg/my_application\",\n \"/etc/xdg/my_application\"]\n8> "},
                  {text,
                   [31,111,115,58,117,110,115,101,116,101,110,118,40,34,88,68,
                    71,95,67,79,78,70,73,71,95,68,73,82,83,34,41,46]},
                  {text,"\t\ntrue\n9> "},
                  {text,
                   ">filename:basedir(site_config, \"my_application\", #{os=>linux})."},
                  {text,
                   [28,10,91,34,47,101,116,99,47,120,100,103,47,109,121,95,97,
                    112,112,108,105,99,97,116,105,111,110,34,93]}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}},
           {sep,[{text,"\nOn Darwin:"}],0,false},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {above,
               {above,
                {text,[3,96,96,96]},
                {sep,
                 [{text,[4,10,53,62,32]},
                  {text,
                   "?filename:basedir(site_config, \"my_application\", #{os=>darwin})."},
                  {text,
                   "0\n[\"/Library/Application Support/my_application\"]"}],
                 0,true}},
               {text,[3,96,96,96]}},
              null},
             null}}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"\v*site_data*"},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,".On Linux: Respects the os environment variable"}],
                  0,false},
                 {text,[15,42,88,68,71,95,68,65,84,65,95,68,73,82,83,42]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,[5,10,49,48,62,32]},
                 {text,"\eos:getenv(\"XDG_DATA_DIRS\")."},
                 {text,
                  "H\n\"/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/\"\n11> "},
                 {text,
                  "<filename:basedir(site_data, \"my_application\", #{os=>linux})."},
                 {text,
                  [144,10,91,34,47,117,115,114,47,115,104,97,114,101,47,117,
                   98,117,110,116,117,47,109,121,95,97,112,112,108,105,99,97,
                   116,105,111,110,34,44,10,32,34,47,117,115,114,47,115,104,
                   97,114,101,47,103,110,111,109,101,47,109,121,95,97,112,112,
                   108,105,99,97,116,105,111,110,34,44,10,32,34,47,117,115,
                   114,47,108,111,99,97,108,47,115,104,97,114,101,47,109,121,
                   95,97,112,112,108,105,99,97,116,105,111,110,34,44,10,32,34,
                   47,117,115,114,47,115,104,97,114,101,47,109,121,95,97,112,
                   112,108,105,99,97,116,105,111,110,34,93,10,49,50,62,32]},
                 {text,
                  [29,111,115,58,117,110,115,101,116,101,110,118,40,34,88,68,
                   71,95,68,65,84,65,95,68,73,82,83,34,41,46]},
                 {text,"\n\ntrue\n13> "},
                 {text,
                  "<filename:basedir(site_data, \"my_application\", #{os=>linux})."},
                 {text,
                  "B\n[\"/usr/local/share/my_application\",\n \"/usr/share/my_application\"]"}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {sep,[{text,"\nOn Darwin:"}],0,false},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,[4,10,53,62,32]},
                 {text,
                  "=filename:basedir(site_data, \"my_application\", #{os=>darwin})."},
                 {text,
                  "0\n[\"/Library/Application Support/my_application\"]"}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}}],
         0,false}],
       0,false}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## basename/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"(Return the last component of a filename."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,82,101,116,117,114,110,115,32,116,104,101,32,108,97,115,
                116,32,99,111,109,112,111,110,101,110,116,32,111,102]}],
             0,false},
            {text,"\n*Filename*"},
            {sep,[{text,[4,44,32,111,114]}],0,false},
            {text,"\n*Filename*"},
            {sep,
             [{text,
               "7itself if it does not contain any directory separators."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,53,62,32]},
            {text,
             [25,102,105,108,101,110,97,109,101,58,98,97,115,101,110,97,109,
              101,40,34,102,111,111,34,41,46]},
            {text,"\n\n\"foo\"\n6> "},
            {text,
             [30,102,105,108,101,110,97,109,101,58,98,97,115,101,110,97,109,
              101,40,34,47,117,115,114,47,102,111,111,34,41,46]},
            {text,"\n\n\"foo\"\n7> "},
            {text,
             [23,102,105,108,101,110,97,109,101,58,98,97,115,101,110,97,109,
              101,40,34,47,34,41,46]},
            {text,[3,10,91,93]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## basename/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "MReturn the last component of a filename, stripped of the specified extension."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,82,101,116,117,114,110,115,32,116,104,101,32,108,97,115,
                116,32,99,111,109,112,111,110,101,110,116,32,111,102]}],
             0,false},
            {text,"\n*Filename*"},
            {sep,
             [{text,
               [14,119,105,116,104,32,101,120,116,101,110,115,105,111,110]}],
             0,false},
            {text,[5,42,69,120,116,42]},
            {sep,
             [{text,
               [153,115,116,114,105,112,112,101,100,46,32,84,104,105,115,32,
                102,117,110,99,116,105,111,110,32,105,115,32,116,111,32,98,
                101,32,117,115,101,100,32,116,111,32,114,101,109,111,118,101,
                32,97,32,40,112,111,115,115,105,98,108,101,41,32,115,112,101,
                99,105,102,105,99,32,101,120,116,101,110,115,105,111,110,46,
                32,84,111,32,114,101,109,111,118,101,32,97,110,32,101,120,105,
                115,116,105,110,103,32,101,120,116,101,110,115,105,111,110,32,
                119,104,101,110,32,121,111,117,32,97,114,101,32,117,110,115,
                117,114,101,32,119,104,105,99,104,32,111,110,101,32,105,116,
                32,105,115,44,32,117,115,101]}],
             0,false},
            {text,
             [30,42,114,111,111,116,110,97,109,101,40,98,97,115,101,110,97,
              109,101,40,70,105,108,101,110,97,109,101,41,41,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,56,62,32]},
            {text,"-filename:basename(\"~/src/kalle.erl\", \".erl\")."},
            {text,"\f\n\"kalle\"\n9> "},
            {text,".filename:basename(\"~/src/kalle.beam\", \".erl\")."},
            {text,
             [18,10,34,107,97,108,108,101,46,98,101,97,109,34,10,49,48,62,32]},
            {text,"1filename:basename(\"~/src/kalle.old.erl\", \".erl\")."},
            {text,
             [17,10,34,107,97,108,108,101,46,111,108,100,34,10,49,49,62,32]},
            {text,
             "8filename:rootname(filename:basename(\"~/src/kalle.erl\"))."},
            {text,"\r\n\"kalle\"\n12> "},
            {text,
             "9filename:rootname(filename:basename(\"~/src/kalle.beam\"))."},
            {text,"\b\n\"kalle\""}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## dirname/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")Return the directory part of a path name."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,82,101,116,117,114,110,115,32,116,104,101,32,100,105,114,
                101,99,116,111,114,121,32,112,97,114,116,32,111,102]}],
             0,false},
            {text,"\n*Filename*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[5,10,49,51,62,32]},
            {text,"'filename:dirname(\"/usr/src/kalle.erl\")."},
            {text,[16,10,34,47,117,115,114,47,115,114,99,34,10,49,52,62,32]},
            {text,
             [30,102,105,108,101,110,97,109,101,58,100,105,114,110,97,109,101,
              40,34,107,97,108,108,101,46,101,114,108,34,41,46]},
            {text,[4,10,34,46,34]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,53,62,32]},
            {text,")filename:dirname(\"\\\\usr\\\\src/kalle.erl\")."},
            {text,
             [21,32,37,32,87,105,110,100,111,119,115,10,34,47,117,115,114,47,
              115,114,99,34]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[14,35,35,32,101,120,116,101,110,115,105,111,110,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [26,82,101,116,117,114,110,32,116,104,101,32,102,105,108,101,32,
            101,120,116,101,110,115,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,82,101,116,117,114,110,115,32,116,104,101,32,102,105,108,
                101,32,101,120,116,101,110,115,105,111,110,32,111,102]}],
             0,false},
            {text,"\n*Filename*"},
            {sep,
             [{text,
               "G, including the period. Returns an empty string if no extension exists."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[5,10,49,53,62,32]},
            {text,
             [30,102,105,108,101,110,97,109,101,58,101,120,116,101,110,115,
              105,111,110,40,34,102,111,111,46,101,114,108,34,41,46]},
            {text,"\f\n\".erl\"\n16> "},
            {text,"%filename:extension(\"beam.src/kalle\")."},
            {text,[3,10,91,93]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## find_src/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## find_src/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"4Find the filename and compiler options for a module."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "UFinds the source filename and compiler options for a module. The result can be fed to"}],
             0,false},
            {text,"5[compiler/compile#file/2](../compiler/compile#file/2)"},
            {sep,
             [{text,
               [26,116,111,32,99,111,109,112,105,108,101,32,116,104,101,32,
                102,105,108,101,32,97,103,97,105,110,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,
           [21,33,33,33,32,119,97,114,110,105,110,103,32,34,87,97,114,110,105,
            110,103,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text," This function is deprecated. Use"}],
                        0,false},
                       {text,
                        "0[filelib#find_source/1](./filelib#find_source/1)"},
                       {sep,
                        [{text,"!instead for finding source files."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [20,73,102,32,112,111,115,115,105,98,108,101,44,32,
                           117,115,101,32,116,104,101]}],
                        0,false},
                       {text,
                        [20,91,98,101,97,109,95,108,105,98,93,40,98,101,97,
                         109,95,108,105,98,41]},
                       {sep,
                        [{text,
                          "pmodule to extract the compiler options and the abstract code format from the Beam file and compile that instead."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bArgument"}],0,false},
            {text,[6,42,66,101,97,109,42]},
            {sep,
             [{text,
               "~, which can be a string or an atom, specifies either the module name or the path to the source code, with or without extension"}],
             0,false},
            {text,"\b*\".erl\"*"},
            {sep,
             [{text,
               "G. In either case, the module must be known by the code server, that is,"}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,"\vcode:which("}],0,false},
                {sep,[{text,[6,77,111,100,117,108,101]}],0,false},
                {sep,[{text,[1,41]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,"\rmust succeed."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[7,42,82,117,108,101,115,42]},
            {sep,
             [{text,
               "odescribes how the source directory can be found when the object code directory is known. It is a list of tuples"}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[1,123]}],0,false},
                {sep,[{text,"\tBinSuffix"}],0,false},
                {sep,[{text,[1,44]}],0,false},
                {sep,[{text,"\fSourceSuffix"}],0,false},
                {sep,[{text,[1,125]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,
             [{text,
               "cand is interpreted as follows: if the end of the directory name where the object is located matches"}],
             0,false},
            {text,"\v*BinSuffix*"},
            {sep,[{text,"$, then the name created by replacing"}],0,false},
            {text,"\v*BinSuffix*"},
            {sep,[{text,[4,119,105,116,104]}],0,false},
            {text,[14,42,83,111,117,114,99,101,83,117,102,102,105,120,42]},
            {sep,
             [{text,
               [22,105,115,32,101,120,112,97,110,100,101,100,32,98,121,32,99,
                97,108,108,105,110,103]}],
             0,false},
            {text,"*[filelib#wildcard/1](./filelib#wildcard/1)"},
            {sep,
             [{text,
               "`. If a regular file is found among the matches, the function returns that location together with"}],
             0,false},
            {text,"\t*Options*"},
            {sep,
             [{text,".. Otherwise the next rule is tried, and so on."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[7,42,82,117,108,101,115,42]},
            {sep,[{text,"\fdefaults to:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             "V\n[{\"\", \"\"}, {\"ebin\", \"src\"}, {\"ebin\", \"esrc\"},\n {\"ebin\", \"src/*\"}, {\"ebin\", \"esrc/*\"}]"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [20,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                116,117,114,110,115]}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[1,123]}],0,false},
                {sep,[{text,"\nSourceFile"}],0,false},
                {sep,[{text,[1,44]}],0,false},
                {sep,[{text,[7,79,112,116,105,111,110,115]}],0,false},
                {sep,[{text,[1,125]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,
             [{text,
               [15,105,102,32,105,116,32,115,117,99,99,101,101,100,115,46]}],
             0,false},
            {text,"\f*SourceFile*"},
            {sep,
             [{text,
               "9is the absolute path to the source file without extension"}],
             0,false},
            {text,"\b*\".erl\"*"},
            {sep,[{text,[1,46]}],0,false},
            {text,"\t*Options*"},
            {sep,
             [{text,
               "Bincludes the options that are necessary to recompile the file with"}],
             0,false},
            {text,
             [16,42,99,111,109,112,105,108,101,58,102,105,108,101,47,50,42]},
            {sep,
             [{text,
               [30,44,32,98,117,116,32,101,120,99,108,117,100,101,115,32,111,
                112,116,105,111,110,115,32,115,117,99,104,32,97,115]}],
             0,false},
            {text,"\b*report*"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\t*verbose*"},
            {sep,
             [{text,
               "E, which do not change the way code is generated. The paths in options"}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,"\b{outdir,"}],0,false},
                {sep,[{text,[4,80,97,116,104]}],0,false},
                {sep,[{text,[1,125]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\v*{i, Path}*"},
            {sep,
             [{text,
               [30,97,114,101,32,103,117,97,114,97,110,116,101,101,100,32,116,
                111,32,98,101,32,97,98,115,111,108,117,116,101,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## flatten/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"$Convert a filename to a flat string."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "vConverts a possibly deep list filename consisting of characters and atoms into the corresponding flat string filename."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## join/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "=Join a list of filename components with directory separators."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [24,74,111,105,110,115,32,97,32,108,105,115,116,32,111,102,32,
                102,105,108,101,110,97,109,101]}],
             0,false},
            {text,"\f*Components*"},
            {sep,
             [{text,"4with directory separators. If one of the elements of"}],
             0,false},
            {text,"\f*Components*"},
            {sep,[{text,"\"includes an absolute path, such as"}],0,false},
            {text,"\b*\"/xxx\"*"},
            {sep,
             [{text,
               ">, the preceding elements, if any, are removed from the result."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"\eThe result is \"normalized\":"}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},{text,"+Redundant directory separators are removed."}],
       0,false},
      {sep,
       [{text,[1,42]},
        {text,
         "_In Windows, all directory separators are forward slashes and the drive letter is in lower case."}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[5,10,49,55,62,32]},
            {text,"(filename:join([\"/usr\", \"local\", \"bin\"])."},
            {text,
             [22,10,34,47,117,115,114,47,108,111,99,97,108,47,98,105,110,34,
              10,49,56,62,32]},
            {text,
             [28,102,105,108,101,110,97,109,101,58,106,111,105,110,40,91,34,
              97,47,98,47,47,47,99,47,34,93,41,46]},
            {text,"\b\n\"a/b/c\""}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,54,62,32]},
            {text,
             [31,102,105,108,101,110,97,109,101,58,106,111,105,110,40,91,34,
              66,58,97,92,92,98,47,47,47,99,47,34,93,41,46]},
            {text,
             [20,32,37,32,87,105,110,100,111,119,115,10,34,98,58,97,47,98,47,
              99,34]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## join/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"7Join two filename components with directory separators."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "FJoins two filename components with directory separators. Equivalent to"}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[6,106,111,105,110,40,91]}],0,false},
                {sep,[{text,[5,78,97,109,101,49]}],0,false},
                {sep,[{text,[1,44]}],0,false},
                {sep,[{text,[5,78,97,109,101,50]}],0,false},
                {sep,[{text,[2,93,41]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,110,97,116,105,118,101,110,97,109,101,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"&Return the native form of a file path."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bConverts"}],0,false},
            {text,[6,42,80,97,116,104,42]},
            {sep,
             [{text,
               "Ëto a form accepted by the command shell and native applications on the current platform. On Windows, forward slashes are converted to backward slashes. On all platforms, the name is normalized as done by"}],
             0,false},
            {text,
             [17,91,106,111,105,110,47,49,93,40,35,106,111,105,110,47,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[5,10,49,57,62,32]},
            {text,"'filename:nativename(\"/usr/local/bin/\")."},
            {text,
             [24,32,37,32,85,110,105,120,10,34,47,117,115,114,47,108,111,99,
              97,108,47,98,105,110,34]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,55,62,32]},
            {text,"'filename:nativename(\"/usr/local/bin/\")."},
            {text,
             [30,32,37,32,87,105,110,100,111,119,115,10,34,92,92,117,115,114,
              92,92,108,111,99,97,108,92,92,98,105,110,34]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## pathtype/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [21,82,101,116,117,114,110,32,116,104,101,32,112,97,116,104,32,116,
            121,112,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"5Returns the path type, which is one of the following:"}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,"\babsolute"}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "=The path name refers to a specific file on a specific volume."}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,[{text,"\rUnix example:"}],0,false},
                           {text,
                            [14,47,117,115,114,47,108,111,99,97,108,47,98,105,
                             110]}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              [16,87,105,110,100,111,119,115,32,101,120,97,
                               109,112,108,101,58]}],
                            0,false},
                           {text,
                            [16,68,58,47,117,115,114,47,108,111,99,97,108,47,
                             98,105,110]}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,"\brelative"}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "QThe path name is relative to the current working directory on the current volume."}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,[{text,"\bExample:"}],0,false},
                         {text,
                          [15,102,111,111,47,98,97,114,44,32,46,46,47,115,114,
                           99]}],
                        0,false}],
                      0,true},
                     null},
                    null}}],
                 0,false},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [14,118,111,108,117,109,101,114,101,108,97,116,105,118,
                   101]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        [137,84,104,101,32,112,97,116,104,32,110,97,109,101,
                         32,105,115,32,114,101,108,97,116,105,118,101,32,116,
                         111,32,116,104,101,32,99,117,114,114,101,110,116,32,
                         119,111,114,107,105,110,103,32,100,105,114,101,99,
                         116,111,114,121,32,111,110,32,97,32,115,112,101,99,
                         105,102,105,101,100,32,118,111,108,117,109,101,44,32,
                         111,114,32,105,116,32,105,115,32,97,32,115,112,101,
                         99,105,102,105,99,32,102,105,108,101,32,111,110,32,
                         116,104,101,32,99,117,114,114,101,110,116,32,119,111,
                         114,107,105,110,103,32,118,111,108,117,109,101,46]}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          [16,87,105,110,100,111,119,115,32,101,120,97,109,
                           112,108,101,58]}],
                        0,false},
                       {text,
                        [23,68,58,98,97,114,46,101,114,108,44,32,47,98,97,114,
                         47,102,111,111,46,101,114,108]}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## rootname/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## rootname/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,82,101,109,111,118,101,32,97,32,102,105,108,101,110,97,109,101,
            32,101,120,116,101,110,115,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,82,101,109,111,118,101,115,32,97,32,102,105,108,101,110,97,
                109,101,32,101,120,116,101,110,115,105,111,110,46]}],
             0,false},
            {text,"\f*rootname/2*"},
            {sep,[{text,"\bworks as"}],0,false},
            {text,"\f*rootname/1*"},
            {sep,
             [{text,"4, except that the extension is removed only if it is"}],
             0,false},
            {text,[5,42,69,120,116,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[5,10,50,48,62,32]},
            {text,"%filename:rootname(\"/beam.src/kalle\")."},
            {text,
             [23,10,34,47,98,101,97,109,46,115,114,99,47,107,97,108,108,101,
              34,10,50,49,62,32]},
            {text,"'filename:rootname(\"/beam.src/foo.erl\")."},
            {text,
             [21,10,34,47,98,101,97,109,46,115,114,99,47,102,111,111,34,10,50,
              50,62,32]},
            {text,"/filename:rootname(\"/beam.src/foo.erl\", \".erl\")."},
            {text,
             [21,10,34,47,98,101,97,109,46,115,114,99,47,102,111,111,34,10,50,
              51,62,32]},
            {text,"0filename:rootname(\"/beam.src/foo.beam\", \".erl\")."},
            {text,
             [21,10,34,47,98,101,97,109,46,115,114,99,47,102,111,111,46,98,
              101,97,109,34]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [23,35,35,32,115,97,102,101,95,114,101,108,97,116,105,118,101,95,112,
        97,116,104,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           ">Sanitize a relative path to avoid directory traversal attacks."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "¦Sanitizes the relative path by eliminating \"..\" and \".\" components to protect against directory traversal attacks. Either returns the sanitized path name, or the atom"}],
             0,false},
            {text,"\b*unsafe*"},
            {sep,
             [{text,
               "Tif the path is unsafe. The path is considered unsafe in the following circumstances:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [25,84,104,101,32,112,97,116,104,32,105,115,32,110,111,116,32,114,
            101,108,97,116,105,118,101,46]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           "DA \"..\" component would climb up above the root of the relative path."}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,49,62,32]},
            {text,".filename:safe_relative_path(\"dir/sub_dir/..\")."},
            {text,"\n\n\"dir\"\n2> "},
            {text,"&filename:safe_relative_path(\"dir/..\")."},
            {text,[7,10,91,93,10,51,62,32]},
            {text,")filename:safe_relative_path(\"dir/../..\")."},
            {text,"\v\nunsafe\n4> "},
            {text,")filename:safe_relative_path(\"/abs/path\")."},
            {text,[7,10,117,110,115,97,102,101]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## split/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Split a filename into its path components."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "8Returns a list whose elements are the path components of"}],
             0,false},
            {text,"\n*Filename*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[5,10,50,52,62,32]},
            {text,"!filename:split(\"/usr/local/bin\")."},
            {text,
             [31,10,91,34,47,34,44,34,117,115,114,34,44,34,108,111,99,97,108,
              34,44,34,98,105,110,34,93,10,50,53,62,32]},
            {text,
             [26,102,105,108,101,110,97,109,101,58,115,112,108,105,116,40,34,
              102,111,111,47,98,97,114,34,41,46]},
            {text,
             [19,10,91,34,102,111,111,34,44,34,98,97,114,34,93,10,50,54,62,
              32]},
            {text,"%filename:split(\"a:\\\\msdev\\\\include\")."},
            {text,
             [26,10,91,34,97,58,47,34,44,34,109,115,100,101,118,34,44,34,105,
              110,99,108,117,100,101,34,93]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false}],
  0,false}}
