{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[7,35,32,97,114,114,97,121]},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[7,35,32,97,114,114,97,121]},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [30,70,117,110,99,116,105,111,110,97,108,44,32,101,120,116,101,
             110,100,105,98,108,101,32,97,114,114,97,121,115,46]}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "Â¦Functional, extendible arrays. Arrays can have fixed size, or can grow automatically as needed. A default value is used for entries that have not been explicitly set."}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\vArrays uses"}],0,false},
                 {text,"\b**zero**"},
                 {sep,
                  [{text,
                    "w-based indexing. This is a deliberate design choice and differs from other Erlang data structures, for example, tuples."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "UUnless specified by the user when the array is created, the default value is the atom"}],
                  0,false},
                 {text,"\v*undefined*"},
                 {sep,
                  [{text,
                    [135,46,32,84,104,101,114,101,32,105,115,32,110,111,32,
                     100,105,102,102,101,114,101,110,99,101,32,98,101,116,119,
                     101,101,110,32,97,110,32,117,110,115,101,116,32,101,110,
                     116,114,121,32,97,110,100,32,97,110,32,101,110,116,114,
                     121,32,116,104,97,116,32,104,97,115,32,98,101,101,110,32,
                     101,120,112,108,105,99,105,116,108,121,32,115,101,116,32,
                     116,111,32,116,104,101,32,115,97,109,101,32,118,97,108,
                     117,101,32,97,115,32,116,104,101,32,100,101,102,97,117,
                     108,116,32,111,110,101,32,40,99,111,109,112,97,114,101]}],
                  0,false},
                 {text,
                  [19,91,114,101,115,101,116,45,50,93,40,35,114,101,115,101,
                   116,45,50,41]},
                 {sep,
                  [{text,
                    [143,41,46,32,73,102,32,121,111,117,32,110,101,101,100,32,
                     116,111,32,100,105,102,102,101,114,101,110,116,105,97,
                     116,101,32,98,101,116,119,101,101,110,32,117,110,115,101,
                     116,32,97,110,100,32,115,101,116,32,101,110,116,114,105,
                     101,115,44,32,101,110,115,117,114,101,32,116,104,97,116,
                     32,116,104,101,32,100,101,102,97,117,108,116,32,118,97,
                     108,117,101,32,99,97,110,110,111,116,32,98,101,32,99,111,
                     110,102,117,115,101,100,32,119,105,116,104,32,116,104,
                     101,32,118,97,108,117,101,115,32,111,102,32,115,101,116,
                     32,101,110,116,114,105,101,115,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "2The array never shrinks automatically. If an index"}],
                  0,false},
                 {text,[3,42,73,42]},
                 {sep,
                  [{text,
                    "Hhas been used to set an entry successfully, all indices in the range [0,"}],
                  0,false},
                 {text,[3,42,73,42]},
                 {sep,
                  [{text,
                    "H] stay accessible unless the array size is explicitly changed by calling"}],
                  0,false},
                 {text,
                  [21,91,114,101,115,105,122,101,45,50,93,40,35,114,101,115,
                   105,122,101,45,50,41]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "1Create a fixed-size array with entries 0-9 set to"}],
                  0,false},
                 {text,"\v*undefined*"},
                 {sep,[{text,[1,58]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,")\nA0 = array:new(10).\n10 = array:size(A0)."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,".Create an extendible array and set entry 17 to"}],
                  0,false},
                 {text,[6,42,116,114,117,101,42]},
                 {sep,
                  [{text,"*, causing the array to grow automatically:"}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "<\nA1 = array:set(17, true, array:new()).\n18 = array:size(A1)."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [25,82,101,97,100,32,98,97,99,107,32,97,32,115,116,111,114,
                   101,100,32,118,97,108,117,101,58]}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [26,10,116,114,117,101,32,61,32,97,114,114,97,121,58,103,
                   101,116,40,49,55,44,32,65,49,41,46]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,"/Accessing an unset entry returns default value:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [29,10,117,110,100,101,102,105,110,101,100,32,61,32,97,114,
                   114,97,121,58,103,101,116,40,51,44,32,65,49,41]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "sAccessing an entry beyond the last set entry also returns the default value, if the array does not have fixed size:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [31,10,117,110,100,101,102,105,110,101,100,32,61,32,97,114,
                   114,97,121,58,103,101,116,40,49,56,44,32,65,49,41,46]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "1\"Sparse\" functions ignore default-valued entries:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "V\nA2 = array:set(4, false, A1).\n[{4, false}, {17, true}] = array:sparse_to_orddict(A2)."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,"1An extendible array can be made fixed-size later:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  [20,10,65,51,32,61,32,97,114,114,97,121,58,102,105,120,40,
                   65,50,41,46]}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  "eA fixed-size array does not grow automatically and does not allow accesses beyond the last set entry:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {above,
              {above,
               {text,[3,96,96,96]},
               {sep,
                [{text,
                  "h\n{'EXIT',{badarg,_}} = (catch array:set(18, true, A3)).\n{'EXIT',{badarg,_}} = (catch array:get(18, A3))."}],
                0,true}},
              {text,[3,96,96,96]}},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# Data Types"},null},null}},
    {sep,
     [{sep,[{text,[5,97,114,114,97,121]}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "ÂªA functional, extendible array. The representation is not documented and is subject to change without notice. Notice that arrays cannot be directly compared for equality."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,[{sep,[{text,[5,97,114,114,97,121]}],0,false}],0,false},
    {sep,[{sep,[{text,"\narray_indx"}],0,false}],0,false},
    {sep,[{sep,[{text,"\narray_opts"}],0,false}],0,false},
    {sep,[{sep,[{text,"\tarray_opt"}],0,false}],0,false},
    {sep,[{sep,[{text,"\nindx_pairs"}],0,false}],0,false},
    {sep,[{sep,[{text,"\tindx_pair"}],0,false}],0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## default/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"-Get the value used for uninitialized entries."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"!<a name=\"default-1\">default-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,".Gets the value used for uninitialized entries."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,110,101,119,45,50,93,40,35,110,101,119,45,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## fix/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [19,70,105,120,32,116,104,101,32,97,114,114,97,121,32,115,105,122,
            101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,102,105,120,45,49,34,62,102,105,120,
       45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "QFixes the array size. This prevents it from growing automatically upon insertion."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,115,101,116,45,51,93,40,35,115,101,116,45,51,41]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [19,91,114,101,108,97,120,45,49,93,40,35,114,101,108,97,120,45,
              49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## foldl/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "SFold the array elements using the specified function and initial accumulator value."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,102,111,108,100,108,45,51,34,62,102,
       111,108,100,108,45,51,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [159,70,111,108,100,115,32,116,104,101,32,97,114,114,97,121,32,
                101,108,101,109,101,110,116,115,32,117,115,105,110,103,32,116,
                104,101,32,115,112,101,99,105,102,105,101,100,32,102,117,110,
                99,116,105,111,110,32,97,110,100,32,105,110,105,116,105,97,
                108,32,97,99,99,117,109,117,108,97,116,111,114,32,118,97,108,
                117,101,46,32,84,104,101,32,101,108,101,109,101,110,116,115,
                32,97,114,101,32,118,105,115,105,116,101,100,32,105,110,32,
                111,114,100,101,114,32,102,114,111,109,32,116,104,101,32,108,
                111,119,101,115,116,32,105,110,100,101,120,32,116,111,32,116,
                104,101,32,104,105,103,104,101,115,116,46,32,73,102]}],
             0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,"-is not a function, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [19,91,102,111,108,100,114,45,51,93,40,35,102,111,108,100,114,45,
              51,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,[15,91,109,97,112,45,50,93,40,35,109,97,112,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,"![sparse_foldl-3](#sparse_foldl-3)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## foldr/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "aFold the array elements right-to-left using the specified function and initial accumulator value."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,102,111,108,100,114,45,51,34,62,102,
       111,108,100,114,45,51,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "Â­Folds the array elements right-to-left using the specified function and initial accumulator value. The elements are visited in order from the highest index to the lowest. If"}],
             0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,"-is not a function, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [19,91,102,111,108,100,108,45,51,93,40,35,102,111,108,100,108,45,
              51,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,[15,91,109,97,112,45,50,93,40,35,109,97,112,45,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[14,35,35,32,102,114,111,109,95,108,105,115,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\rEquivalent to"}],0,false},
          {text,
           [28,42,102,114,111,109,95,108,105,115,116,40,76,105,115,116,44,32,
            117,110,100,101,102,105,110,101,100,41,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"%<a name=\"from_list-1\">from_list-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,"\e[from_list-2](#from_list-2)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[14,35,35,32,102,114,111,109,95,108,105,115,116,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"&Convert a list to an extendible array."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"%<a name=\"from_list-2\">from_list-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"'Converts a list to an extendible array."}],0,false},
            {text,"\t*Default*"},
            {sep,
             [{text,
               "?is used as the value for uninitialized entries of the array. If"}],
             0,false},
            {text,[6,42,76,105,115,116,42]},
            {sep,
             [{text,"0is not a proper list, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,110,101,119,45,50,93,40,35,110,101,119,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [23,91,116,111,95,108,105,115,116,45,49,93,40,35,116,111,95,108,
              105,115,116,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,102,114,111,109,95,111,114,100,100,105,99,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\rEquivalent to"}],0,false},
          {text,"\"*from_orddict(Orddict, undefined)*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"+<a name=\"from_orddict-1\">from_orddict-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,"![from_orddict-2](#from_orddict-2)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,102,114,111,109,95,111,114,100,100,105,99,116,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text," Convert an ordered list of pairs"}],0,false},
          {text,[16,42,123,73,110,100,101,120,44,32,86,97,108,117,101,125,42]},
          {sep,[{text,"$to a corresponding extendible array."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"+<a name=\"from_orddict-2\">from_orddict-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"!Converts an ordered list of pairs"}],0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[7,123,73,110,100,101,120,44]}],0,false},
                {sep,[{text,[5,86,97,108,117,101]}],0,false},
                {sep,[{text,[1,125]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,"$to a corresponding extendible array."}],0,false},
            {text,"\t*Default*"},
            {sep,
             [{text,
               "?is used as the value for uninitialized entries of the array. If"}],
             0,false},
            {text,"\t*Orddict*"},
            {sep,
             [{text,
               "qis not a proper, ordered list of pairs whose first elements are non-negative integers, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,110,101,119,45,50,93,40,35,110,101,119,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [29,91,116,111,95,111,114,100,100,105,99,116,45,49,93,40,35,116,
              111,95,111,114,100,100,105,99,116,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## get/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [22,71,101,116,32,116,104,101,32,118,97,108,117,101,32,111,102,
              32,101,110,116,114,121]}],
           0,false},
          {text,[3,42,73,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,103,101,116,45,50,34,62,103,101,116,
       45,50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,71,101,116,115,32,116,104,101,32,118,97,108,117,101,32,111,
                102,32,101,110,116,114,121]}],
             0,false},
            {text,[3,42,73,42]},
            {sep,[{text,[4,46,32,73,102]}],0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               "Ais not a non-negative integer, or if the array has fixed size and"}],
             0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               "<is larger than the maximum index, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "FIf the array does not have fixed size, the default value for any index"}],
             0,false},
            {text,[3,42,73,42]},
            {sep,[{text,"\fgreater than"}],0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[5,115,105,122,101,40]}],0,false},
                {sep,[{text,[5,65,114,114,97,121]}],0,false},
                {sep,[{text,[3,41,45,49]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,"\fis returned."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,115,101,116,45,51,93,40,35,115,101,116,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\r## is_array/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
          {text,[6,42,116,114,117,101,42]},
          {sep,[{text,[2,105,102]}],0,false},
          {text,[3,42,88,42]},
          {sep,
           [{text,
             [22,105,115,32,97,110,32,97,114,114,97,121,44,32,111,116,104,101,
              114,119,105,115,101]}],
           0,false},
          {text,[7,42,102,97,108,115,101,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"#<a name=\"is_array-1\">is_array-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[3,42,88,42]},
            {sep,
             [{text,
               [22,105,115,32,97,110,32,97,114,114,97,121,44,32,111,116,104,
                101,114,119,105,115,101]}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,
             [{text,
               "F. Notice that the check is only shallow, as there is no guarantee that"}],
             0,false},
            {text,[3,42,88,42]},
            {sep,
             [{text,
               "Cis a well-formed array representation even if this function returns"}],
             0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## is_fix/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"\"Check if the array has fixed size."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [31,60,97,32,110,97,109,101,61,34,105,115,95,102,105,120,45,49,34,62,
       105,115,95,102,105,120,45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+Checks if the array has fixed size. Returns"}],
             0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text," if the array is fixed, otherwise"}],0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,102,105,120,45,49,93,40,35,102,105,120,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## map/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"3Map the specified function onto each array element."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,109,97,112,45,50,34,62,109,97,112,45,
       50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [127,77,97,112,115,32,116,104,101,32,115,112,101,99,105,102,
                105,101,100,32,102,117,110,99,116,105,111,110,32,111,110,116,
                111,32,101,97,99,104,32,97,114,114,97,121,32,101,108,101,109,
                101,110,116,46,32,84,104,101,32,101,108,101,109,101,110,116,
                115,32,97,114,101,32,118,105,115,105,116,101,100,32,105,110,
                32,111,114,100,101,114,32,102,114,111,109,32,116,104,101,32,
                108,111,119,101,115,116,32,105,110,100,101,120,32,116,111,32,
                116,104,101,32,104,105,103,104,101,115,116,46,32,73,102]}],
             0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,"-is not a function, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [19,91,102,111,108,100,108,45,51,93,40,35,102,111,108,100,108,45,
              51,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [19,91,102,111,108,100,114,45,51,93,40,35,102,111,108,100,114,45,
              51,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [29,91,115,112,97,114,115,101,95,109,97,112,45,50,93,40,35,115,
              112,97,114,115,101,95,109,97,112,45,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## new/0"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"6Create a new, extendible array with initial size zero."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,110,101,119,45,48,34,62,110,101,119,
       45,48,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"7Creates a new, extendible array with initial size zero."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,110,101,119,45,49,93,40,35,110,101,119,45,49,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,[15,91,110,101,119,45,50,93,40,35,110,101,119,45,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## new/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"6Create a new array according to the specified options."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,110,101,119,45,49,34,62,110,101,119,
       45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [140,67,114,101,97,116,101,115,32,97,32,110,101,119,32,97,114,
                114,97,121,32,97,99,99,111,114,100,105,110,103,32,116,111,32,
                116,104,101,32,115,112,101,99,105,102,105,101,100,32,111,116,
                105,111,110,115,46,32,66,121,32,100,101,102,97,117,108,116,44,
                32,116,104,101,32,97,114,114,97,121,32,105,115,32,101,120,116,
                101,110,100,105,98,108,101,32,97,110,100,32,104,97,115,32,105,
                110,105,116,105,97,108,32,115,105,122,101,32,122,101,114,111,
                46,32,65,114,114,97,121,32,105,110,100,105,99,101,115,32,115,
                116,97,114,116,32,97,116]}],
             0,false},
            {text,[3,42,48,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\t*Options*"},
            {sep,
             [{text,
               "Ais a single term or a list of terms, selected from the following:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{sep,
                       [{text,
                         [17,78,58,58,105,110,116,101,103,101,114,40,41,32,62,
                          61,32,48]},
                        {sep,[{text,[2,111,114]}],0,false},
                        {text,
                         [25,123,115,105,122,101,44,32,78,58,58,105,110,116,
                          101,103,101,114,40,41,32,62,61,32,48,125]}],
                       0,false}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "3Specifies the initial array size; this also implies"}],
                            0,false},
                           {text,"\r{fixed, true}"},
                           {sep,[{text,[4,46,32,73,102]}],0,false},
                           {text,[1,78]},
                           {sep,
                            [{text,
                              "9is not a non-negative integer, the call fails with reason"}],
                            0,false},
                           {text,[6,98,97,100,97,114,103]},
                           {sep,[{text,[1,46]}],0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{sep,
                      [{text,[5,102,105,120,101,100]},
                       {sep,[{text,[2,111,114]}],0,false},
                       {text,"\r{fixed, true}"}],
                      0,false}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,"$Creates a fixed-size array. See also"}],
                          0,false},
                         {text,[5,102,105,120,45,49]},
                         {sep,[{text,[1,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{text,
                    [14,123,102,105,120,101,100,44,32,102,97,108,115,101,
                     125]}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "-Creates an extendible (non-fixed-size) array."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [16,123,100,101,102,97,117,108,116,44,32,86,97,108,117,101,
                   125]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,"'Sets the default value for the array to"}],
                      0,false},
                     {text,[5,86,97,108,117,101]},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "iOptions are processed in the order they occur in the list, that is, later options have higher precedence."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "wThe default value is used as the value of uninitialized entries, and cannot be changed once the array has been created."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[15,10,97,114,114,97,121,58,110,101,119,40,49,48,48,41]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"'creates a fixed-size array of size 100."}],0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [23,10,97,114,114,97,121,58,110,101,119,40,123,100,101,102,97,
              117,108,116,44,48,125,41]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "9creates an empty, extendible array whose default value is"}],
             0,false},
            {text,[3,42,48,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,"2\narray:new([{size,10},{fixed,false},{default,-1}])"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "Gcreates an extendible array with initial size 10 whose default value is"}],
             0,false},
            {text,[4,42,45,49,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,102,105,120,45,49,93,40,35,102,105,120,45,49,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,"\e[from_list-2](#from_list-2)"},
            {sep,[{text,[1,44]}],0,false},
            {text,[15,91,103,101,116,45,50,93,40,35,103,101,116,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,[15,91,110,101,119,45,48,93,40,35,110,101,119,45,48,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,[15,91,110,101,119,45,50,93,40,35,110,101,119,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,[15,91,115,101,116,45,51,93,40,35,115,101,116,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## new/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "?Create a new array according to the specified size and options."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,110,101,119,45,50,34,62,110,101,119,
       45,50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "CCreates a new array according to the specified size and options. If"}],
             0,false},
            {text,[6,42,83,105,122,101,42]},
            {sep,
             [{text,
               "9is not a non-negative integer, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,
             [{text,
               "N. By default, the array has fixed size. Notice that any size specifications in"}],
             0,false},
            {text,"\t*Options*"},
            {sep,
             [{text,
               [18,111,118,101,114,114,105,100,101,32,112,97,114,97,109,101,
                116,101,114]}],
             0,false},
            {text,[6,42,83,105,122,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,"\t*Options*"},
            {sep,[{text," is a list, this is equivalent to"}],0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,"\vnew([{size,"}],0,false},
                {sep,[{text,[4,83,105,122,101]}],0,false},
                {sep,[{text,[3,125,32,124]}],0,false},
                {sep,[{text,[7,79,112,116,105,111,110,115]}],0,false},
                {sep,[{text,[1,93]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,
             [{text,
               [31,44,32,111,116,104,101,114,119,105,115,101,32,105,116,32,
                105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,
                111]}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,"\vnew([{size,"}],0,false},
                {sep,[{text,[4,83,105,122,101]}],0,false},
                {sep,[{text,[5,125,32,124,32,91]}],0,false},
                {sep,[{text,[7,79,112,116,105,111,110,115]}],0,false},
                {sep,[{text,[2,93,93]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,
             [{text,
               ":. However, using this function directly is more efficient."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [28,10,97,114,114,97,121,58,110,101,119,40,49,48,48,44,32,123,
              100,101,102,97,117,108,116,44,48,125,41]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ">creates a fixed-size array of size 100, whose default value is"}],
             0,false},
            {text,[3,42,48,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,110,101,119,45,49,93,40,35,110,101,119,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## relax/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [25,77,97,107,101,32,116,104,101,32,97,114,114,97,121,32,114,101,
            115,105,122,97,98,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,114,101,108,97,120,45,49,34,62,114,
       101,108,97,120,45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"3Makes the array resizable. (Reverses the effects of"}],
             0,false},
            {text,[15,91,102,105,120,45,49,93,40,35,102,105,120,45,49,41]},
            {sep,[{text,[2,46,41]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,102,105,120,45,49,93,40,35,102,105,120,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## reset/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\vReset entry"}],0,false},
          {text,[3,42,73,42]},
          {sep,[{text,"#to the default value for the array."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [29,60,97,32,110,97,109,101,61,34,114,101,115,101,116,45,50,34,62,114,
       101,115,101,116,45,50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fResets entry"}],0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               "9to the default value for the array. If the value of entry"}],
             0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               [134,105,115,32,116,104,101,32,100,101,102,97,117,108,116,32,
                118,97,108,117,101,44,32,116,104,101,32,97,114,114,97,121,32,
                105,115,32,114,101,116,117,114,110,101,100,32,117,110,99,104,
                97,110,103,101,100,46,32,82,101,115,101,116,32,110,101,118,
                101,114,32,99,104,97,110,103,101,115,32,116,104,101,32,97,114,
                114,97,121,32,115,105,122,101,46,32,83,104,114,105,110,107,
                105,110,103,32,99,97,110,32,98,101,32,100,111,110,101,32,101,
                120,112,108,105,99,105,116,108,121,32,98,121,32,99,97,108,108,
                105,110,103]}],
             0,false},
            {text,
             [21,91,114,101,115,105,122,101,45,50,93,40,35,114,101,115,105,
              122,101,45,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               "Ais not a non-negative integer, or if the array has fixed size and"}],
             0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               "<is larger than the maximum index, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,"\t; compare"}],0,false},
            {text,[15,91,115,101,116,45,51,93,40,35,115,101,116,45,51,41]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,110,101,119,45,50,93,40,35,110,101,119,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,[15,91,115,101,116,45,51,93,40,35,115,101,116,45,51,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## resize/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,")Change the array size to that reported by"}],0,false},
          {text,[15,42,115,112,97,114,115,101,95,115,105,122,101,47,49,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [31,60,97,32,110,97,109,101,61,34,114,101,115,105,122,101,45,49,34,62,
       114,101,115,105,122,101,45,49,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"*Changes the array size to that reported by"}],
             0,false},
            {text,
             [31,91,115,112,97,114,115,101,95,115,105,122,101,45,49,93,40,35,
              115,112,97,114,115,101,95,115,105,122,101,45,49,41]},
            {sep,
             [{text,
               "Q. If the specified array has fixed size, also the resulting array has fixed size."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [21,91,114,101,115,105,122,101,45,50,93,40,35,114,101,115,105,
              122,101,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [31,91,115,112,97,114,115,101,95,115,105,122,101,45,49,93,40,35,
              115,112,97,114,115,101,95,115,105,122,101,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## resize/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [22,67,104,97,110,103,101,32,116,104,101,32,97,114,114,97,121,32,
            115,105,122,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [31,60,97,32,110,97,109,101,61,34,114,101,115,105,122,101,45,50,34,62,
       114,101,115,105,122,101,45,50,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [25,67,104,97,110,103,101,32,116,104,101,32,97,114,114,97,121,
                32,115,105,122,101,46,32,73,102]}],
             0,false},
            {text,[6,42,83,105,122,101,42]},
            {sep,
             [{text,
               "9is not a non-negative integer, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,
             [{text,
               "Q. If the specified array has fixed size, also the resulting array has fixed size."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\b## set/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\tSet entry"}],0,false},
          {text,[3,42,73,42]},
          {sep,
           [{text,
             [15,111,102,32,116,104,101,32,97,114,114,97,121,32,116,111]}],
           0,false},
          {text,[7,42,86,97,108,117,101,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,
      [25,60,97,32,110,97,109,101,61,34,115,101,116,45,51,34,62,115,101,116,
       45,51,60,47,97,62]},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\nSets entry"}],0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               [15,111,102,32,116,104,101,32,97,114,114,97,121,32,116,111]}],
             0,false},
            {text,[7,42,86,97,108,117,101,42]},
            {sep,[{text,[4,46,32,73,102]}],0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               "Ais not a non-negative integer, or if the array has fixed size and"}],
             0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               "<is larger than the maximum index, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"*If the array does not have fixed size, and"}],
             0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               [15,105,115,32,103,114,101,97,116,101,114,32,116,104,97,110]}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[5,115,105,122,101,40]}],0,false},
                {sep,[{text,[5,65,114,114,97,121]}],0,false},
                {sep,[{text,[3,41,45,49]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,
             [{text,
               [25,44,32,116,104,101,32,97,114,114,97,121,32,103,114,111,119,
                115,32,116,111,32,115,105,122,101]}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[1,73]}],0,false},
                {sep,[{text,[2,43,49]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,103,101,116,45,50,93,40,35,103,101,116,45,50,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [19,91,114,101,115,101,116,45,50,93,40,35,114,101,115,101,116,45,
              50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## size/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Get the number of entries in the array."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"\e<a name=\"size-1\">size-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BGets the number of entries in the array. Entries are numbered from"}],
             0,false},
            {text,[3,42,48,42]},
            {sep,[{text,[2,116,111]}],0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[5,115,105,122,101,40]}],0,false},
                {sep,[{text,[5,65,114,114,97,121]}],0,false},
                {sep,[{text,[3,41,45,49]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,
             [{text,
               "f. Hence, this is also the index of the first entry that is guaranteed to not have been previously set."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,115,101,116,45,51,93,40,35,115,101,116,45,51,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [31,91,115,112,97,114,115,101,95,115,105,122,101,45,49,93,40,35,
              115,112,97,114,115,101,95,115,105,122,101,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,115,112,97,114,115,101,95,102,111,108,100,108,47,51]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "tFold the array elements using the specified function and initial accumulator value, skipping default-valued entries."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"+<a name=\"sparse_foldl-3\">sparse_foldl-3</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ÃFolds the array elements using the specified function and initial accumulator value, skipping default-valued entries. The elements are visited in order from the lowest index to the highest. If"}],
             0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,"-is not a function, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [19,91,102,111,108,100,108,45,51,93,40,35,102,111,108,100,108,45,
              51,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,"![sparse_foldr-3](#sparse_foldr-3)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[17,35,35,32,115,112,97,114,115,101,95,102,111,108,100,114,47,51]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [130,70,111,108,100,32,116,104,101,32,97,114,114,97,121,32,101,108,
            101,109,101,110,116,115,32,114,105,103,104,116,45,116,111,45,108,
            101,102,116,32,117,115,105,110,103,32,116,104,101,32,115,112,101,
            99,105,102,105,101,100,32,102,117,110,99,116,105,111,110,32,97,
            110,100,32,105,110,105,116,105,97,108,32,97,99,99,117,109,117,108,
            97,116,111,114,32,118,97,108,117,101,44,32,115,107,105,112,112,
            105,110,103,32,100,101,102,97,117,108,116,45,118,97,108,117,101,
            100,32,101,110,116,114,105,101,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"+<a name=\"sparse_foldr-3\">sparse_foldr-3</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ÃFolds the array elements right-to-left using the specified function and initial accumulator value, skipping default-valued entries. The elements are visited in order from the highest index to the lowest. If"}],
             0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,"-is not a function, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [19,91,102,111,108,100,114,45,51,93,40,35,102,111,108,100,114,45,
              51,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,"![sparse_foldl-3](#sparse_foldl-3)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,115,112,97,114,115,101,95,109,97,112,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "TMap the specified function onto each array element, skipping default-valued entries."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"'<a name=\"sparse_map-2\">sparse_map-2</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "Â Maps the specified function onto each array element, skipping default-valued entries. The elements are visited in order from the lowest index to the highest. If"}],
             0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,"-is not a function, the call fails with reason"}],
             0,false},
            {text,"\b*badarg*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,[15,91,109,97,112,45,50,93,40,35,109,97,112,45,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,115,112,97,114,115,101,95,115,105,122,101,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "RGet the number of entries in the array up until the last non-default-valued entry."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,")<a name=\"sparse_size-1\">sparse_size-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "dGets the number of entries in the array up until the last non-default-valued entry. That is, returns"}],
             0,false},
            {text,[5,42,73,43,49,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[3,42,73,42]},
            {sep,
             [{text,
               "Sis the last non-default-valued entry in the array, or zero if no such entry exists."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [21,91,114,101,115,105,122,101,45,49,93,40,35,114,101,115,105,
              122,101,45,49,41]},
            {sep,[{text,[1,44]}],0,false},
            {text,
             [17,91,115,105,122,101,45,49,93,40,35,115,105,122,101,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [19,35,35,32,115,112,97,114,115,101,95,116,111,95,108,105,115,116,47,
        49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "=Convert the array to a list, skipping default-valued entries."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"/<a name=\"sparse_to_list-1\">sparse_to_list-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             ">Converts the array to a list, skipping default-valued entries."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [23,91,116,111,95,108,105,115,116,45,49,93,40,35,116,111,95,108,
              105,115,116,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,115,112,97,114,115,101,95,116,111,95,111,114,100,100,105,
        99,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,"-Convert the array to an ordered list of pairs"}],
           0,false},
          {text,[16,42,123,73,110,100,101,120,44,32,86,97,108,117,101,125,42]},
          {sep,[{text,"\", skipping default-valued entries."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"5<a name=\"sparse_to_orddict-1\">sparse_to_orddict-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".Converts the array to an ordered list of pairs"}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[7,123,73,110,100,101,120,44]}],0,false},
                {sep,[{text,[5,86,97,108,117,101]}],0,false},
                {sep,[{text,[1,125]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,"\", skipping default-valued entries."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [29,91,116,111,95,111,114,100,100,105,99,116,45,49,93,40,35,116,
              111,95,111,114,100,100,105,99,116,45,49,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## to_list/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,111,110,118,101,114,116,32,116,104,101,32,97,114,114,97,121,
            32,116,111,32,97,32,108,105,115,116,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"!<a name=\"to_list-1\">to_list-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [29,67,111,110,118,101,114,116,115,32,116,104,101,32,97,114,114,
              97,121,32,116,111,32,97,32,108,105,115,116,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,"\e[from_list-2](#from_list-2)"},
            {sep,[{text,[1,44]}],0,false},
            {text,"%[sparse_to_list-1](#sparse_to_list-1)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,116,111,95,111,114,100,100,105,99,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,"-Convert the array to an ordered list of pairs"}],
           0,false},
          {text,[16,42,123,73,110,100,101,120,44,32,86,97,108,117,101,125,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,"'<a name=\"to_orddict-1\">to_orddict-1</a>"},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".Converts the array to an ordered list of pairs"}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{sep,[{text,[7,123,73,110,100,101,120,44]}],0,false},
                {sep,[{text,[5,86,97,108,117,101]}],0,false},
                {sep,[{text,[1,125]}],0,false}],
               0,false},
              {text,[1,42]}],
             0,false},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,"![from_orddict-2](#from_orddict-2)"},
            {sep,[{text,[1,44]}],0,false},
            {text,"+[sparse_to_orddict-1](#sparse_to_orddict-1)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
