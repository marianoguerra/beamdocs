{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\n# gb_trees"},null},null}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\n# gb_trees"},null},null}}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [23,71,101,110,101,114,97,108,32,98,97,108,97,110,99,101,100,32,
               116,114,101,101,115,46]}],
            0,false}],
          0,true},
         null},
        null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{text,
                    "·This module provides Prof. Arne Andersson's General Balanced Trees. These have no storage overhead compared to unbalanced binary trees, and their performance is better than AVL trees."}],
                  0,false}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{sep,
                  [{sep,
                    [{text,
                      "VThis module considers two keys as different if and only if they do not compare equal ("}],
                    0,false},
                   {text,[4,42,61,61,42]},
                   {sep,[{text,[2,41,46]}],0,false}],
                  0,false}],
                0,true},
               null},
              null}}],
           0,false}],
         0,true},
        null},
       null}}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [17,35,35,32,68,97,116,97,32,83,116,114,117,99,116,117,114,101]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "wTrees and iterators are built using opaque data structures that should not be pattern-matched from outside this module."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "{There is no attempt to balance trees after deletions. As deletions do not increase the height of a tree, this should be OK."}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,84,104,101,32,111,114,105,103,105,110,97,108,32,98,97,108,
                 97,110,99,101,32,99,111,110,100,105,116,105,111,110]}],
              0,false},
             {text,
              [30,42,42,104,40,84,41,32,60,61,32,99,101,105,108,40,99,32,42,
               32,108,111,103,40,124,84,124,41,41,42,42]},
             {sep,
              [{text,
                "Dhas been changed to the similar (but not quite equivalent) condition"}],
              0,false},
             {text,
              [23,42,42,50,32,94,32,104,40,84,41,32,60,61,32,124,84,124,32,94,
               32,99,42,42]},
             {sep,
              [{text,
                [25,46,32,84,104,105,115,32,115,104,111,117,108,100,32,97,108,
                 115,111,32,98,101,32,79,75,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\f# Data Types"},null},null}},
     {sep,
      [{sep,[{text,[4,116,114,101,101]}],0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{text,
                 [24,65,32,103,101,110,101,114,97,108,32,98,97,108,97,110,99,
                  101,100,32,116,114,101,101,46]}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,false},
     {sep,[{sep,[{text,[4,116,114,101,101]}],0,false}],0,false},
     {sep,
      [{sep,[{text,[4,105,116,101,114]}],0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,[{text,"!A general balanced tree iterator."}],0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,false},
     {sep,[{sep,[{text,[4,105,116,101,114]}],0,false}],0,false}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f## balance/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [17,82,101,98,97,108,97,110,99,101,32,97,32,116,114,101,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\nRebalances"}],0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,
              [{text,
                "ê. Notice that this is rarely necessary, but can be motivated when many nodes have been deleted from the tree without further insertions. Rebalancing can then be forced to minimize lookup times, as deletion does not rebalance the tree."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v## delete/2"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [26,82,101,109,111,118,101,32,97,32,110,111,100,101,32,102,114,
             111,109,32,97,32,116,114,101,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [25,82,101,109,111,118,101,115,32,116,104,101,32,110,111,100,
                 101,32,119,105,116,104,32,107,101,121]}],
              0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,[4,102,114,111,109]}],0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,
              [{text,
                "Yand returns the new tree. Assumes that the key is present in the tree, crashes otherwise."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,35,32,100,101,108,101,116,101,95,97,110,121,47,50]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Remove a (possibly non-existing) node from a tree."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [25,82,101,109,111,118,101,115,32,116,104,101,32,110,111,100,
                 101,32,119,105,116,104,32,107,101,121]}],
              0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,[4,102,114,111,109]}],0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,
              [{text,
                "Pif the key is present in the tree, otherwise does nothing. Returns the new tree."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\t## take/2"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"2Returns a value and new tree without node with key"}],
            0,false},
           {text,[5,42,75,101,121,42]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [15,82,101,116,117,114,110,115,32,97,32,118,97,108,117,101]}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,
              [{text,
                [18,102,114,111,109,32,110,111,100,101,32,119,105,116,104,32,
                 107,101,121]}],
              0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,[7,97,110,100,32,110,101,119]}],0,false},
             {text,[7,42,84,114,101,101,50,42]},
             {sep,
              [{text,
                "kwithout the node with this value. Assumes that the node with key is present in the tree, crashes otherwise."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## take_any/2"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"2Returns a value and new tree without node with key"}],
            0,false},
           {text,[5,42,75,101,121,42]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [15,82,101,116,117,114,110,115,32,97,32,118,97,108,117,101]}],
              0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,
              [{text,
                [18,102,114,111,109,32,110,111,100,101,32,119,105,116,104,32,
                 107,101,121]}],
              0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,[7,97,110,100,32,110,101,119]}],0,false},
             {text,[7,42,84,114,101,101,50,42]},
             {sep,
              [{text,")without the node with this value. Returns"}],
              0,false},
             {text,[7,42,101,114,114,111,114,42]},
             {sep,
              [{text,"4if the node with the key is not present in the tree."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n## empty/0"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [21,82,101,116,117,114,110,32,97,110,32,101,109,112,116,121,32,
             116,114,101,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [25,82,101,116,117,114,110,115,32,97,32,110,101,119,32,101,109,
               112,116,121,32,116,114,101,101,46]}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n## enter/3"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"*Insert or update key with value in a tree."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,73,110,115,101,114,116,115]}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,"\nwith value"}],0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,[4,105,110,116,111]}],0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,
              [{text,
                "8if the key is not present in the tree, otherwise updates"}],
              0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,"\bto value"}],0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,[2,105,110]}],0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,
              [{text,
                [23,46,32,82,101,116,117,114,110,115,32,116,104,101,32,110,
                 101,119,32,116,114,101,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [17,35,35,32,102,114,111,109,95,111,114,100,100,105,99,116,47,49]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [28,77,97,107,101,32,97,32,116,114,101,101,32,102,114,111,109,32,
             97,110,32,111,114,100,100,105,99,116,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,84,117,114,110,115,32,97,110,32,111,114,100,101,114,101,
                 100,32,108,105,115,116]}],
              0,false},
             {text,[6,42,76,105,115,116,42]},
             {sep,
              [{text,
                "Jof key-value tuples into a tree. The list must not contain duplicate keys."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\b## get/2"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Look up a key in a tree, if present."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [31,82,101,116,114,105,101,118,101,115,32,116,104,101,32,118,
                 97,108,117,101,32,115,116,111,114,101,100,32,119,105,116,
                 104]}],
              0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,[2,105,110]}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                "A. Assumes that the key is present in the tree, crashes otherwise."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v## insert/3"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Insert a new key and value in a tree."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,73,110,115,101,114,116,115]}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,"\nwith value"}],0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,[4,105,110,116,111]}],0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,
              [{text,
                "]and returns the new tree. Assumes that the key is not present in the tree, crashes otherwise."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,35,32,105,115,95,100,101,102,105,110,101,100,47,50]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [30,84,101,115,116,32,102,111,114,32,109,101,109,98,101,114,115,
             104,105,112,32,111,102,32,97,32,116,114,101,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,"\ris present in"}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,"\v, otherwise"}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## is_empty/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [20,84,101,115,116,32,102,111,114,32,101,109,112,116,121,32,116,
             114,101,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[6,42,116,114,117,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,"\eis an empty tree, othwewise"}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## iterator/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [30,82,101,116,117,114,110,32,97,110,32,105,116,101,114,97,116,
             111,114,32,102,111,114,32,97,32,116,114,101,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "BReturns an iterator that can be used for traversing the entries of"}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,[5,59,32,115,101,101]}],0,false},
             {text,
              [17,91,110,101,120,116,47,49,93,40,35,110,101,120,116,47,49,41]},
             {sep,
              [{text,
                "O. The implementation of this is very efficient; traversing the whole tree using"}],
              0,false},
             {text,"\b*next/1*"},
             {sep,
              [{text,
                "Cis only slightly slower than getting the list of all elements using"}],
              0,false},
             {text,
              [23,91,116,111,95,108,105,115,116,47,49,93,40,35,116,111,95,108,
               105,115,116,47,49,41]},
             {sep,
              [{text,
                "¡and traversing that. The main advantage of the iterator approach is that it does not require the complete list of all elements to be built in memory at one time."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [18,35,35,32,105,116,101,114,97,116,111,114,95,102,114,111,109,47,50]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "<Return an iterator for a tree starting from a specified key."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "BReturns an iterator that can be used for traversing the entries of"}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,[5,59,32,115,101,101]}],0,false},
             {text,
              [17,91,110,101,120,116,47,49,93,40,35,110,101,120,116,47,49,41]},
             {sep,
              [{text,
                "8. The difference as compared to the iterator returned by"}],
              0,false},
             {text,
              [25,91,105,116,101,114,97,116,111,114,47,49,93,40,35,105,116,
               101,114,97,116,111,114,47,49,41]},
             {sep,
              [{text,".is that the first key greater than or equal to"}],
              0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\t## keys/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Return a list of the keys in a tree."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [19,82,101,116,117,114,110,115,32,116,104,101,32,107,101,121,
                 115,32,105,110]}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                [19,97,115,32,97,110,32,111,114,100,101,114,101,100,32,108,
                 105,115,116,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f## largest/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [29,82,101,116,117,114,110,32,108,97,114,103,101,115,116,32,107,
             101,121,32,97,110,100,32,118,97,108,117,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,[1,123]}],0,false},
                 {sep,[{text,[3,75,101,121]}],0,false},
                 {sep,[{text,[1,44]}],0,false},
                 {sep,[{text,[5,86,97,108,117,101]}],0,false},
                 {sep,[{text,[1,125]}],0,false}],
                0,false},
               {text,[1,42]}],
              0,false},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,
              [{text,
                [21,105,115,32,116,104,101,32,108,97,114,103,101,115,116,32,
                 107,101,121,32,105,110]}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,
              [{text,
                "Jis the value associated with this key. Assumes that the tree is not empty."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v## lookup/2"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [24,76,111,111,107,32,117,112,32,97,32,107,101,121,32,105,110,32,
             97,32,116,114,101,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bLooks up"}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,[2,105,110]}],0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,"\t. Returns"}],0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,[7,123,118,97,108,117,101,44]}],0,false},
                 {sep,[{text,[5,86,97,108,117,101]}],0,false},
                 {sep,[{text,[1,125]}],0,false}],
                0,false},
               {text,[1,42]}],
              0,false},
             {sep,[{text,[4,44,32,111,114]}],0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,[{text,[2,105,102]}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,
              [{text,
                [15,105,115,32,110,111,116,32,112,114,101,115,101,110,116,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\b## map/2"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [29,82,101,116,117,114,110,32,108,97,114,103,101,115,116,32,107,
             101,121,32,97,110,100,32,118,97,108,117,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [16,77,97,112,115,32,102,117,110,99,116,105,111,110,32,70,
                 40]}],
              0,false},
             {sep,[{text,[1,75]}],0,false},
             {sep,[{text,[1,44]}],0,false},
             {sep,[{text,[2,86,49]}],0,false},
             {sep,[{text,[4,41,32,45,62]}],0,false},
             {sep,[{text,[2,86,50]}],0,false},
             {sep,
              [{text,
                [30,116,111,32,97,108,108,32,107,101,121,45,118,97,108,117,
                 101,32,112,97,105,114,115,32,111,102,32,116,114,101,101]}],
              0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,
              [{text,
                [20,46,32,82,101,116,117,114,110,115,32,97,32,110,101,119,32,
                 116,114,101,101]}],
              0,false},
             {text,[7,42,84,114,101,101,50,42]},
             {sep,
              [{text,
                [28,119,105,116,104,32,116,104,101,32,115,97,109,101,32,115,
                 101,116,32,111,102,32,107,101,121,115,32,97,115]}],
              0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,
              [{text,
                [25,97,110,100,32,116,104,101,32,110,101,119,32,115,101,116,
                 32,111,102,32,118,97,108,117,101,115]}],
              0,false},
             {text,[4,42,86,50,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\t## next/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"!Traverse a tree with an iterator."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,[1,123]}],0,false},
                 {sep,[{text,[3,75,101,121]}],0,false},
                 {sep,[{text,[1,44]}],0,false},
                 {sep,[{text,[5,86,97,108,117,101]}],0,false},
                 {sep,[{text,[1,44]}],0,false},
                 {sep,[{text,[5,73,116,101,114,50]}],0,false},
                 {sep,[{text,[1,125]}],0,false}],
                0,false},
               {text,[1,42]}],
              0,false},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,
              [{text,"+is the smallest key referred to by iterator"}],
              0,false},
             {text,[7,42,73,116,101,114,49,42]},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,[7,42,73,116,101,114,50,42]},
             {sep,
              [{text,
                "Nis the new iterator to be used for traversing the remaining nodes, or the atom"}],
              0,false},
             {text,[6,42,110,111,110,101,42]},
             {sep,
              [{text,
                [19,105,102,32,110,111,32,110,111,100,101,115,32,114,101,109,
                 97,105,110,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\t## size/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"%Return the number of nodes in a tree."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [30,82,101,116,117,114,110,115,32,116,104,101,32,110,117,109,
                 98,101,114,32,111,102,32,110,111,100,101,115,32,105,110]}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## smallest/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [30,82,101,116,117,114,110,32,115,109,97,108,108,101,115,116,32,
             107,101,121,32,97,110,100,32,118,97,108,117,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,[1,123]}],0,false},
                 {sep,[{text,[3,75,101,121]}],0,false},
                 {sep,[{text,[1,44]}],0,false},
                 {sep,[{text,[5,86,97,108,117,101]}],0,false},
                 {sep,[{text,[1,125]}],0,false}],
                0,false},
               {text,[1,42]}],
              0,false},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,
              [{text,
                [22,105,115,32,116,104,101,32,115,109,97,108,108,101,115,116,
                 32,107,101,121,32,105,110]}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,[{text,[5,44,32,97,110,100]}],0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,
              [{text,
                "Jis the value associated with this key. Assumes that the tree is not empty."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[17,35,35,32,116,97,107,101,95,108,97,114,103,101,115,116,47,49]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [30,69,120,116,114,97,99,116,32,108,97,114,103,101,115,116,32,107,
             101,121,32,97,110,100,32,118,97,108,117,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,[1,123]}],0,false},
                 {sep,[{text,[3,75,101,121]}],0,false},
                 {sep,[{text,[1,44]}],0,false},
                 {sep,[{text,[5,86,97,108,117,101]}],0,false},
                 {sep,[{text,[1,44]}],0,false},
                 {sep,[{text,[5,84,114,101,101,50]}],0,false},
                 {sep,[{text,[1,125]}],0,false}],
                0,false},
               {text,[1,42]}],
              0,false},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,
              [{text,
                [21,105,115,32,116,104,101,32,108,97,114,103,101,115,116,32,
                 107,101,121,32,105,110]}],
              0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,[{text,[1,44]}],0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,
              [{text,"*is the value associated with this key, and"}],
              0,false},
             {text,[7,42,84,114,101,101,50,42]},
             {sep,
              [{text,
                "Uis this tree with the corresponding node deleted. Assumes that the tree is not empty."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,
        [18,35,35,32,116,97,107,101,95,115,109,97,108,108,101,115,116,47,49]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,69,120,116,114,97,99,116,32,115,109,97,108,108,101,115,116,32,
             107,101,121,32,97,110,100,32,118,97,108,117,101,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,[1,123]}],0,false},
                 {sep,[{text,[3,75,101,121]}],0,false},
                 {sep,[{text,[1,44]}],0,false},
                 {sep,[{text,[5,86,97,108,117,101]}],0,false},
                 {sep,[{text,[1,44]}],0,false},
                 {sep,[{text,[5,84,114,101,101,50]}],0,false},
                 {sep,[{text,[1,125]}],0,false}],
                0,false},
               {text,[1,42]}],
              0,false},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,
              [{text,
                [22,105,115,32,116,104,101,32,115,109,97,108,108,101,115,116,
                 32,107,101,121,32,105,110]}],
              0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,[{text,[1,44]}],0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,
              [{text,"*is the value associated with this key, and"}],
              0,false},
             {text,[7,42,84,114,101,101,50,42]},
             {sep,
              [{text,
                "Uis this tree with the corresponding node deleted. Assumes that the tree is not empty."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f## to_list/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,[{sep,[{text,"\eConvert a tree into a list."}],0,false}],0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "9Converts a tree into an ordered list of key-value tuples."}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v## update/3"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"$Update a key to new value in a tree."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,85,112,100,97,116,101,115]}],0,false},
             {text,[5,42,75,101,121,42]},
             {sep,[{text,"\bto value"}],0,false},
             {text,[7,42,86,97,108,117,101,42]},
             {sep,[{text,[2,105,110]}],0,false},
             {text,[7,42,84,114,101,101,49,42]},
             {sep,
              [{text,
                "Fand returns the new tree. Assumes that the key is present in the tree."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v## values/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Return a list of the values in a tree."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [21,82,101,116,117,114,110,115,32,116,104,101,32,118,97,108,
                 117,101,115,32,105,110]}],
              0,false},
             {text,[6,42,84,114,101,101,42]},
             {sep,
              [{text,
                "Sas an ordered list, sorted by their corresponding keys. Duplicates are not removed."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## See Also"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"\f[dict](dict)"},
          {sep,[{text,[1,44]}],0,false},
          {text,
           [18,91,103,98,95,115,101,116,115,93,40,103,98,95,115,101,116,115,
            41]}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
