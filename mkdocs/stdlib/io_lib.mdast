{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\b# io_lib"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\b# io_lib"},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,73,47,79,32,108,105,98,114,97,114,121,32,102,117,110,99,116,
             105,111,110,115,46]}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    [140,84,104,105,115,32,109,111,100,117,108,101,32,99,111,
                     110,116,97,105,110,115,32,102,117,110,99,116,105,111,110,
                     115,32,102,111,114,32,99,111,110,118,101,114,116,105,110,
                     103,32,116,111,32,97,110,100,32,102,114,111,109,32,115,
                     116,114,105,110,103,115,32,40,108,105,115,116,115,32,111,
                     102,32,99,104,97,114,97,99,116,101,114,115,41,46,32,84,
                     104,101,121,32,97,114,101,32,117,115,101,100,32,102,111,
                     114,32,105,109,112,108,101,109,101,110,116,105,110,103,
                     32,116,104,101,32,102,117,110,99,116,105,111,110,115,32,
                     105,110,32,116,104,101]}],
                  0,false},
                 {text,"\b[io](io)"},
                 {sep,
                  [{text,
                    [133,109,111,100,117,108,101,46,32,84,104,101,114,101,32,
                     105,115,32,110,111,32,103,117,97,114,97,110,116,101,101,
                     32,116,104,97,116,32,116,104,101,32,99,104,97,114,97,99,
                     116,101,114,32,108,105,115,116,115,32,114,101,116,117,
                     114,110,101,100,32,102,114,111,109,32,115,111,109,101,32,
                     111,102,32,116,104,101,32,102,117,110,99,116,105,111,110,
                     115,32,97,114,101,32,102,108,97,116,44,32,116,104,101,
                     121,32,99,97,110,32,98,101,32,100,101,101,112,32,108,105,
                     115,116,115,46,32,70,117,110,99,116,105,111,110]}],
                  0,false},
                 {text,"$[lists#flatten/1](./lists#flatten/1)"},
                 {sep,
                  [{text,"&can be used for flattening deep lists."}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\f# Data Types"},null},null}},
    {sep,[{sep,[{text,[5,99,104,97,114,115]}],0,false}],0,false},
    {sep,
     [{sep,[{text,"\fcontinuation"}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [29,65,32,99,111,110,116,105,110,117,97,116,105,111,110,32,
                   97,115,32,114,101,116,117,114,110,101,100,32,98,121]}],
                0,false},
               {text,
                [19,91,102,114,101,97,100,47,51,93,40,35,102,114,101,97,100,
                 47,51,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false},
    {sep,[{sep,[{text,"\vchars_limit"}],0,false}],0,false},
    {sep,[{sep,[{text,[5,100,101,112,116,104]}],0,false}],0,false},
    {sep,[{sep,[{text,"\vfread_error"}],0,false}],0,false},
    {sep,[{sep,[{text,"\nfread_item"}],0,false}],0,false},
    {sep,[{sep,[{text,"\rlatin1_string"}],0,false}],0,false},
    {sep,
     [{sep,[{text,"\vformat_spec"}],0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,[{sep,[{text,[6,87,104,101,114,101,58]}],0,false}],0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [14,42,99,111,110,116,114,111,108,95,99,104,97,114,42]},
                   {sep,[{text," is the type of control sequence:"}],0,false},
                   {text,[4,42,36,80,42]},
                   {sep,[{text,[1,44]}],0,false},
                   {text,[4,42,36,119,42]},
                   {sep,[{text,"\f, and so on."}],0,false}],
                  0,false}],
                0,false},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,[6,42,97,114,103,115,42]},
                   {sep,
                    [{text,
                      "~is a list of the arguments used by the control sequence, or an empty list if the control sequence does not take any arguments."}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,[7,42,119,105,100,116,104,42]},
                  {sep,
                   [{text,
                     [19,105,115,32,116,104,101,32,102,105,101,108,100,32,119,
                      105,100,116,104,46]}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,"\b*adjust*"},
                 {sep,
                  [{text,
                    [18,105,115,32,116,104,101,32,97,100,106,117,115,116,109,
                     101,110,116,46]}],
                  0,false}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,"\v*precision*"},
                {sep,
                 [{text,")is the precision of the printed argument."}],
                 0,false}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"\n*pad_char*"},
               {sep,
                [{text,
                  [25,105,115,32,116,104,101,32,112,97,100,100,105,110,103,32,
                   99,104,97,114,97,99,116,101,114,46]}],
                0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"\n*encoding*"},
              {sep,[{text,"\tis set to"}],0,false},
              {text,[6,42,116,114,117,101,42]},
              {sep,
               [{text,
                 [23,105,102,32,116,114,97,110,115,108,97,116,105,111,110,32,
                  109,111,100,105,102,105,101,114]}],
               0,false},
              {text,[3,42,116,42]},
              {sep,[{text,"\vis present."}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"\t*strings*"},
             {sep,[{text,"\tis set to"}],0,false},
             {text,[7,42,102,97,108,115,101,42]},
             {sep,[{text,"\vif modifier"}],0,false},
             {text,[3,42,108,42]},
             {sep,[{text,"\vis present."}],0,false}],
            0,false}],
          0,false}}],
       0,false}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,98,117,105,108,100,95,116,101,120,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"2Build the output text for a preparsed format list."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [16,70,111,114,32,100,101,116,97,105,108,115,44,32,115,101,
                101]}],
             0,false},
            {text,
             [31,91,115,99,97,110,95,102,111,114,109,97,116,47,50,93,40,35,
              115,99,97,110,95,102,111,114,109,97,116,47,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,[14,35,35,32,99,104,97,114,95,108,105,115,116,47,49]},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [30,84,101,115,116,32,102,111,114,32,97,32,108,105,115,116,32,111,
            102,32,99,104,97,114,97,99,116,101,114,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,
             [{text,
               "<is a flat list of characters in the Unicode range, otherwise"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [19,35,35,32,100,101,101,112,95,99,104,97,114,95,108,105,115,116,47,
        49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"#Test for a deep list of characters."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,
             [{text,
               "Gis a, possibly deep, list of characters in the Unicode range, otherwise"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,100,101,101,112,95,108,97,116,105,110,49,95,99,104,97,114,
        95,108,105,115,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"#Test for a deep list of characters."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,
             [{text,
               "Kis a, possibly deep, list of characters in the ISO Latin-1 range, otherwise"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## format/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## fwrite/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,87,114,105,116,101,32,102,111,114,109,97,116,116,101,100,32,
            111,117,116,112,117,116,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"(Returns a character list that represents"}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,
             [{text,
               [28,102,111,114,109,97,116,116,101,100,32,105,110,32,97,99,99,
                111,114,100,97,110,99,101,32,119,105,116,104]}],
             0,false},
            {text,"\b*Format*"},
            {sep,
             [{text,
               "E. For a detailed description of the available formatting options, see"}],
             0,false},
            {text,
             [28,91,105,111,35,102,119,114,105,116,101,47,49,93,40,46,47,105,
              111,35,102,119,114,105,116,101,47,49,41]},
            {sep,
             [{text,
               "P. If the format string or argument list contains an error, a fault is generated."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "VIf and only if the Unicode translation modifier is used in the format string (that is,"}],
             0,false},
            {text,[5,42,126,116,115,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[5,42,126,116,99,42]},
            {sep,
             [{text,
               "e), the resulting list can contain characters beyond the ISO Latin-1 character range (that is, numbers"}],
             0,false},
            {sep,
             [{text,"5> 255). If so, the result is still an ordinary Erlang"}],
             0,false},
            {text,"\n*string()*"},
            {sep,
             [{text,
               "D, and can well be used in any context where Unicode data is allowed."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## format/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## fwrite/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,87,114,105,116,101,32,102,111,114,109,97,116,116,101,100,32,
            111,117,116,112,117,116,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"(Returns a character list that represents"}],0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,
             [{text,
               [28,102,111,114,109,97,116,116,101,100,32,105,110,32,97,99,99,
                111,114,100,97,110,99,101,32,119,105,116,104]}],
             0,false},
            {text,"\b*Format*"},
            {sep,
             [{text,
               [18,105,110,32,116,104,101,32,115,97,109,101,32,119,97,121,32,
                97,115]}],
             0,false},
            {text,
             [21,91,102,119,114,105,116,101,47,50,93,40,35,102,119,114,105,
              116,101,47,50,41]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [21,91,102,111,114,109,97,116,47,50,93,40,35,102,111,114,109,97,
              116,47,50,41]},
            {sep,
             [{text,"1, but takes an extra argument, a list of options."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\rValid option:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,116,62]},
              {sep,
               [{sep,
                 [{sep,[{text,"\r{chars_limit,"}],0,false},
                  {sep,[{text,"\nCharsLimit"}],0,false},
                  {sep,[{text,[1,125]}],0,false}],
                 0,false}],
               0,false},
              {text,[5,60,47,100,116,62]}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,
                        [131,65,32,115,111,102,116,32,108,105,109,105,116,32,
                         111,110,32,116,104,101,32,110,117,109,98,101,114,32,
                         111,102,32,99,104,97,114,97,99,116,101,114,115,32,
                         114,101,116,117,114,110,101,100,46,32,87,104,101,110,
                         32,116,104,101,32,110,117,109,98,101,114,32,111,102,
                         32,99,104,97,114,97,99,116,101,114,115,32,105,115,32,
                         114,101,97,99,104,101,100,44,32,114,101,109,97,105,
                         110,105,110,103,32,115,116,114,117,99,116,117,114,
                         101,115,32,97,114,101,32,114,101,112,108,97,99,101,
                         100,32,98,121,32,34]}],
                      0,false},
                     {text,[3,46,46,46]},
                     {sep,[{text,[2,34,46]}],0,false},
                     {sep,[{text,"\nCharsLimit"}],0,false},
                     {sep,
                      [{text,
                        "Jdefaults to -1, which means no limit on the number of characters returned."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## fread/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [21,82,101,97,100,32,102,111,114,109,97,116,116,101,100,32,105,110,
            112,117,116,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rTries to read"}],0,false},
            {text,"\b*String*"},
            {sep,
             [{text,"+in accordance with the control sequences in"}],
             0,false},
            {text,"\b*Format*"},
            {sep,
             [{text,
               "E. For a detailed description of the available formatting options, see"}],
             0,false},
            {text,
             [26,91,105,111,35,102,114,101,97,100,47,51,93,40,46,47,105,111,
              35,102,114,101,97,100,47,51,41]},
            {sep,
             [{text,
               [20,46,32,73,116,32,105,115,32,97,115,115,117,109,101,100,32,
                116,104,97,116]}],
             0,false},
            {text,"\b*String*"},
            {sep,
             [{text,
               [21,99,111,110,116,97,105,110,115,32,119,104,111,108,101,32,
                108,105,110,101,115,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,116,
              117,114,110,115,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{sep,[{text,[4,123,111,107,44]}],0,false},
                      {sep,[{text,"\tInputList"}],0,false},
                      {sep,[{text,[1,44]}],0,false},
                      {sep,[{text,"\rLeftOverChars"}],0,false},
                      {sep,[{text,[1,125]}],0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            [20,84,104,101,32,115,116,114,105,110,103,32,119,
                             97,115,32,114,101,97,100,46]}],
                          0,false},
                         {sep,[{text,"\tInputList"}],0,false},
                         {sep,
                          [{text,
                            "7is the list of successfully matched and read items, and"}],
                          0,false},
                         {sep,[{text,"\rLeftOverChars"}],0,false},
                         {sep,
                          [{text,"\"are the input characters not used."}],
                          0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,
                  [{sep,
                    [{sep,[{text,[6,123,109,111,114,101,44]}],0,false},
                     {sep,[{text,"\nRestFormat"}],0,false},
                     {sep,[{text,[1,44]}],0,false},
                     {sep,[{text,[6,78,99,104,97,114,115]}],0,false},
                     {sep,[{text,[1,44]}],0,false},
                     {sep,[{text,"\nInputStack"}],0,false},
                     {sep,[{text,[1,125]}],0,false}],
                    0,false}],
                  0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "UThe string was read, but more input is needed to complete the original format string."}],
                        0,false},
                       {sep,[{text,"\nRestFormat"}],0,false},
                       {sep,
                        [{text,
                          [31,105,115,32,116,104,101,32,114,101,109,97,105,
                           110,105,110,103,32,102,111,114,109,97,116,32,115,
                           116,114,105,110,103,44]}],
                        0,false},
                       {sep,[{text,[6,78,99,104,97,114,115]}],0,false},
                       {sep,
                        [{text,"(is the number of characters scanned, and"}],
                        0,false},
                       {sep,[{text,"\nInputStack"}],0,false},
                       {sep,
                        [{text,
                          "8is the reversed list of inputs matched up to that point."}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{sep,
                  [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                   {sep,[{text,[4,87,104,97,116]}],0,false},
                   {sep,[{text,[1,125]}],0,false}],
                  0,false}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,"'The read operation failed and parameter"}],
                      0,false},
                     {sep,[{text,[4,87,104,97,116]}],0,false},
                     {sep,
                      [{text,
                        [29,103,105,118,101,115,32,97,32,104,105,110,116,32,
                         97,98,111,117,116,32,116,104,101,32,101,114,114,111,
                         114,46]}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,51,62,32]},
            {text,",io_lib:fread(\"~f~f~f\", \"15.6 17.3e-6 24.5\")."},
            {text,
             [28,10,123,111,107,44,91,49,53,46,54,44,49,46,55,51,101,45,53,44,
              50,52,46,53,93,44,91,93,125]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## fread/3"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,[{sep,[{text,"\eRe-entrant formatted reader"}],0,false}],0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "dThis is the re-entrant formatted reader. The continuation of the first call to the functions must be"}],
             0,false},
            {text,[4,42,91,93,42]},
            {sep,
             [{text,
               [152,46,32,70,111,114,32,97,32,99,111,109,112,108,101,116,101,
                32,100,101,115,99,114,105,112,116,105,111,110,32,111,102,32,
                104,111,119,32,116,104,101,32,114,101,45,101,110,116,114,97,
                110,116,32,105,110,112,117,116,32,115,99,104,101,109,101,32,
                119,111,114,107,115,44,32,115,101,101,32,65,114,109,115,116,
                114,111,110,103,44,32,86,105,114,100,105,110,103,44,32,87,105,
                108,108,105,97,109,115,58,32,39,67,111,110,99,117,114,114,101,
                110,116,32,80,114,111,103,114,97,109,109,105,110,103,32,105,
                110,32,69,114,108,97,110,103,39,44,32,67,104,97,112,116,101,
                114,32,49,51,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,116,
              117,114,110,115,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,116,62]},
                {sep,
                 [{sep,
                   [{sep,[{text,[6,123,100,111,110,101,44]}],0,false},
                    {sep,[{text,[6,82,101,115,117,108,116]}],0,false},
                    {sep,[{text,[1,44]}],0,false},
                    {sep,[{text,"\rLeftOverChars"}],0,false},
                    {sep,[{text,[1,125]}],0,false}],
                   0,false}],
                 0,false},
                {text,[5,60,47,100,116,62]}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {sep,
                 [{above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          ":The input is complete. The result is one of the following:"}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,
                    {text,[4,60,100,108,62]},
                    {nest,4,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{sep,
                                  [{sep,[{text,[4,123,111,107,44]}],0,false},
                                   {sep,[{text,"\tInputList"}],0,false},
                                   {sep,[{text,[1,125]}],0,false}],
                                  0,false}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{sep,
                                       [{text,
                                         [20,84,104,101,32,115,116,114,105,
                                          110,103,32,119,97,115,32,114,101,97,
                                          100,46]}],
                                       0,false},
                                      {sep,[{text,"\tInputList"}],0,false},
                                      {sep,
                                       [{text,
                                         "7is the list of successfully matched and read items, and"}],
                                       0,false},
                                      {sep,[{text,"\rLeftOverChars"}],0,false},
                                      {sep,
                                       [{text,
                                         [29,97,114,101,32,116,104,101,32,114,
                                          101,109,97,105,110,105,110,103,32,
                                          99,104,97,114,97,99,116,101,114,115,
                                          46]}],
                                       0,false}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,[{text,[3,101,111,102]}],0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{sep,
                                     [{text,
                                       [28,69,110,100,32,111,102,32,102,105,
                                        108,101,32,119,97,115,32,101,110,99,
                                        111,117,110,116,101,114,101,100,46]}],
                                     0,false},
                                    {sep,[{text,"\rLeftOverChars"}],0,false},
                                    {sep,
                                     [{text,
                                       "\"are the input characters not used."}],
                                     0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{sep,
                               [{sep,
                                 [{text,[7,123,101,114,114,111,114,44]}],
                                 0,false},
                                {sep,[{text,[4,87,104,97,116]}],0,false},
                                {sep,[{text,[1,125]}],0,false}],
                               0,false}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,
                                   [{text,
                                     [31,65,110,32,101,114,114,111,114,32,111,
                                      99,99,117,114,114,101,100,32,97,110,100,
                                      32,112,97,114,97,109,101,116,101,114]}],
                                   0,false},
                                  {sep,[{text,[4,87,104,97,116]}],0,false},
                                  {sep,
                                   [{text,
                                     [29,103,105,118,101,115,32,97,32,104,105,
                                      110,116,32,97,98,111,117,116,32,116,104,
                                      101,32,101,114,114,111,114,46]}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}}}},
                   {text,[5,60,47,100,108,62]}}],
                 0,false},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{sep,
                  [{sep,[{text,[6,123,109,111,114,101,44]}],0,false},
                   {sep,[{text,"\fContinuation"}],0,false},
                   {sep,[{text,[1,125]}],0,false}],
                  0,false}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text,"&More data is required to build a term."}],
                      0,false},
                     {sep,[{text,"\fContinuation"}],0,false},
                     {sep,
                      [{text,
                        [17,109,117,115,116,32,98,101,32,112,97,115,115,101,
                         100,32,116,111]}],
                      0,false},
                     {text,[7,102,114,101,97,100,47,51]},
                     {sep,
                      [{text,"!when more data becomes available."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,105,110,100,101,110,116,97,116,105,111,110,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"\"Indentation after printing string."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [26,82,101,116,117,114,110,115,32,116,104,101,32,105,110,100,
                101,110,116,97,116,105,111,110,32,105,102]}],
             0,false},
            {text,"\b*String*"},
            {sep,
             [{text,
               [29,104,97,115,32,98,101,101,110,32,112,114,105,110,116,101,
                100,44,32,115,116,97,114,116,105,110,103,32,97,116]}],
             0,false},
            {text,"\r*StartIndent*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [21,35,35,32,108,97,116,105,110,49,95,99,104,97,114,95,108,105,115,116,
        47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Test for a list of ISO Latin-1 characters."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,
             [{text,
               "@is a flat list of characters in the ISO Latin-1 range, otherwise"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,[7,35,35,32,110,108,47,48]},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [16,87,114,105,116,101,32,97,32,110,101,119,108,105,110,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             ">Returns a character list that represents a new line character."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## print/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## print/4"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,80,114,101,116,116,121,32,112,114,105,110,116,32,97,32,116,101,
            114,109,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,",Returns a list of characters that represents"}],
             0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,
             [{text,
               "«, but breaks representations longer than one line into many lines and indents each line sensibly. Also tries to detect and output lists of printable characters as strings."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\b*Column*"},
           {sep,[{text,"&is the starting column; defaults to 1."}],0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\f*LineLength*"},
           {sep,
            [{text,"+is the maximum line length; defaults to 80."}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[7,42,68,101,112,116,104,42]},
          {sep,
           [{text,
             "Fis the maximum print depth; defaults to -1, which means no limitation."}],
           0,false}],
         0,false}],
       0,false}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,112,114,105,110,116,97,98,108,101,95,108,97,116,105,110,
        49,95,108,105,115,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"4Test for a list of printable ISO Latin-1 characters."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,
             [{text,
               "=is a flat list of printable ISO Latin-1 characters, otherwise"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [19,35,35,32,112,114,105,110,116,97,98,108,101,95,108,105,115,116,47,
        49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"(Test for a list of printable characters."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,
             [{text,"1is a flat list of printable characters, otherwise"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "HWhat is a printable character in this case is determined by startup flag"}],
             0,false},
            {text,[5,42,43,112,99,42]},
            {sep,
             [{text,
               [21,116,111,32,116,104,101,32,69,114,108,97,110,103,32,86,77,
                59,32,115,101,101]}],
             0,false},
            {text,".[io#printable_range/0](./io#printable_range/0)"},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,
             [17,91,101,114,116,115,47,101,114,108,93,40,46,47,101,114,108,
              41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## printable_unicode_list/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0Test for a list of printable Unicode characters."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,[{text,[2,105,102]}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,
             [{text,
               "9is a flat list of printable Unicode characters, otherwise"}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,115,99,97,110,95,102,111,114,109,97,116,47,50]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"1Parse all control sequences in the format string."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [158,82,101,116,117,114,110,115,32,97,32,108,105,115,116,32,99,
              111,114,114,101,115,112,111,110,100,105,110,103,32,116,111,32,
              116,104,101,32,115,112,101,99,105,102,105,101,100,32,102,111,
              114,109,97,116,32,115,116,114,105,110,103,44,32,119,104,101,114,
              101,32,99,111,110,116,114,111,108,32,115,101,113,117,101,110,99,
              101,115,32,104,97,118,101,32,98,101,101,110,32,114,101,112,108,
              97,99,101,100,32,119,105,116,104,32,99,111,114,114,101,115,112,
              111,110,100,105,110,103,32,116,117,112,108,101,115,46,32,84,104,
              105,115,32,108,105,115,116,32,99,97,110,32,98,101,32,112,97,115,
              115,101,100,32,116,111,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [29,91,98,117,105,108,100,95,116,101,120,116,47,49,93,40,35,98,117,
            105,108,100,95,116,101,120,116,47,49,41]},
          {sep,
           [{text,
             [26,116,111,32,104,97,118,101,32,116,104,101,32,115,97,109,101,
              32,101,102,102,101,99,116,32,97,115]}],
           0,false},
          {text,
           [22,42,102,111,114,109,97,116,40,70,111,114,109,97,116,44,32,65,
            114,103,115,41,42]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"#[unscan_format/1](#unscan_format/1)"},
          {sep,[{text," to get the corresponding pair of"}],0,false},
          {text,"\b*Format*"},
          {sep,[{text,[3,97,110,100]}],0,false},
          {text,[6,42,65,114,103,115,42]},
          {sep,[{text,"\v(with every"}],0,false},
          {text,[3,42,42,42]},
          {sep,
           [{text,"6and corresponding argument expanded to numeric values)"}],
           0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "RA typical use of this function is to replace unbounded-size control sequences like"}],
             0,false},
            {text,[4,42,126,119,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[4,42,126,112,42]},
            {sep,
             [{text,
               [31,119,105,116,104,32,116,104,101,32,100,101,112,116,104,45,
                108,105,109,105,116,101,100,32,118,97,114,105,97,110,116,
                115]}],
             0,false},
            {text,[4,42,126,87,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[4,42,126,80,42]},
            {sep,
             [{text,"4before formatting to text in, for example, a logger."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [18,35,35,32,117,110,115,99,97,110,95,102,111,114,109,97,116,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "QRevert a preparsed format list to a plain character list and a list of arguments."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [16,70,111,114,32,100,101,116,97,105,108,115,44,32,115,101,
                101]}],
             0,false},
            {text,
             [31,91,115,99,97,110,95,102,111,114,109,97,116,47,50,93,40,35,
              115,99,97,110,95,102,111,114,109,97,116,47,50,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## write/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## write/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\n## write/2"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{sep,[{sep,[{text,"\rWrite a term."}],0,false}],0,true},null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"(Returns a character list that represents"}],0,false},
            {text,[6,42,84,101,114,109,42]},
            {sep,[{text,"\b. Option"}],0,false},
            {text,[7,42,68,101,112,116,104,42]},
            {sep,
             [{text,
               [127,99,111,110,116,114,111,108,115,32,116,104,101,32,100,101,
                112,116,104,32,111,102,32,116,104,101,32,115,116,114,117,99,
                116,117,114,101,115,32,119,114,105,116,116,101,110,46,32,87,
                104,101,110,32,116,104,101,32,115,112,101,99,105,102,105,101,
                100,32,100,101,112,116,104,32,105,115,32,114,101,97,99,104,
                101,100,44,32,101,118,101,114,121,116,104,105,110,103,32,98,
                101,108,111,119,32,116,104,105,115,32,108,101,118,101,108,32,
                105,115,32,114,101,112,108,97,99,101,100,32,98,121,32,34]}],
             0,false},
            {text,[5,42,46,46,46,42]},
            {sep,[{text,[2,34,46]}],0,false},
            {text,[7,42,68,101,112,116,104,42]},
            {sep,
             [{text,"1defaults to -1, which means no limitation. Option"}],
             0,false},
            {text,"\f*CharsLimit*"},
            {sep,
             [{text,
               [136,112,117,116,115,32,97,32,115,111,102,116,32,108,105,109,
                105,116,32,111,110,32,116,104,101,32,110,117,109,98,101,114,
                32,111,102,32,99,104,97,114,97,99,116,101,114,115,32,114,101,
                116,117,114,110,101,100,46,32,87,104,101,110,32,116,104,101,
                32,110,117,109,98,101,114,32,111,102,32,99,104,97,114,97,99,
                116,101,114,115,32,105,115,32,114,101,97,99,104,101,100,44,32,
                114,101,109,97,105,110,105,110,103,32,115,116,114,117,99,116,
                117,114,101,115,32,97,114,101,32,114,101,112,108,97,99,101,
                100,32,98,121,32,34]}],
             0,false},
            {text,[5,42,46,46,46,42]},
            {sep,[{text,[2,34,46]}],0,false},
            {text,"\f*CharsLimit*"},
            {sep,
             [{text,
               "Jdefaults to -1, which means no limit on the number of characters returned."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[4,10,49,62,32]},
            {text,"7lists:flatten(io_lib:write({1,[2],[3],[4,5],6,7,8,9}))."},
            {text," \n\"{1,[2],[3],[4,5],6,7,8,9}\"\n2> "},
            {text,
             ":lists:flatten(io_lib:write({1,[2],[3],[4,5],6,7,8,9}, 5))."},
            {text,
             [28,10,34,123,49,44,91,50,93,44,91,51,93,44,91,46,46,46,93,44,46,
              46,46,125,34,10,51,62,32]},
            {text,
             "Ilists:flatten(io_lib:write({[1,2,3],[4,5],6,7,8,9}, [{chars_limit,20}]))."},
            {text,
             [26,10,34,123,91,49,44,50,124,46,46,46,93,44,91,52,124,46,46,46,
              93,44,46,46,46,125,34]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,119,114,105,116,101,95,97,116,111,109,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,87,114,105,116,101,32,97,110,32,97,116,111,109,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"3Returns the list of characters needed to print atom"}],
             0,false},
            {text,[6,42,65,116,111,109,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,119,114,105,116,101,95,97,116,111,109,95,97,115,95,108,97,
        116,105,110,49,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[14,87,114,105,116,101,32,97,110,32,97,116,111,109,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"3Returns the list of characters needed to print atom"}],
             0,false},
            {text,[6,42,65,116,111,109,42]},
            {sep,[{text,"%. Non-Latin-1 characters are escaped."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,119,114,105,116,101,95,99,104,97,114,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [18,87,114,105,116,101,32,97,32,99,104,97,114,97,99,116,101,114,
            46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "aReturns the list of characters needed to print a character constant in the Unicode character set."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,119,114,105,116,101,95,99,104,97,114,95,97,115,95,108,97,
        116,105,110,49,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [18,87,114,105,116,101,32,97,32,99,104,97,114,97,99,116,101,114,
            46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [133,82,101,116,117,114,110,115,32,116,104,101,32,108,105,115,
              116,32,111,102,32,99,104,97,114,97,99,116,101,114,115,32,110,
              101,101,100,101,100,32,116,111,32,112,114,105,110,116,32,97,32,
              99,104,97,114,97,99,116,101,114,32,99,111,110,115,116,97,110,
              116,32,105,110,32,116,104,101,32,85,110,105,99,111,100,101,32,
              99,104,97,114,97,99,116,101,114,32,115,101,116,46,32,78,111,110,
              45,76,97,116,105,110,45,49,32,99,104,97,114,97,99,116,101,114,
              115,32,97,114,101,32,101,115,99,97,112,101,100,46]}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,119,114,105,116,101,95,108,97,116,105,110,49,95,99,104,97,
        114,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [31,87,114,105,116,101,32,97,110,32,73,83,79,32,76,97,116,105,110,
            45,49,32,99,104,97,114,97,99,116,101,114,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "eReturns the list of characters needed to print a character constant in the ISO Latin-1 character set."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [24,35,35,32,119,114,105,116,101,95,108,97,116,105,110,49,95,115,116,
        114,105,110,103,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,87,114,105,116,101,32,97,110,32,73,83,79,32,76,97,116,105,110,
            45,49,32,115,116,114,105,110,103,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".Returns the list of characters needed to print"}],
             0,false},
            {text,[14,42,76,97,116,105,110,49,83,116,114,105,110,103,42]},
            {sep,[{text,"\fas a string."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [17,35,35,32,119,114,105,116,101,95,115,116,114,105,110,103,47,49]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[15,87,114,105,116,101,32,97,32,115,116,114,105,110,103,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".Returns the list of characters needed to print"}],
             0,false},
            {text,"\b*String*"},
            {sep,[{text,"\fas a string."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## write_string_as_latin1/1"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,[15,87,114,105,116,101,32,97,32,115,116,114,105,110,103,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".Returns the list of characters needed to print"}],
             0,false},
            {text,"\b*String*"},
            {sep,
             [{text,"0as a string. Non-Latin-1 characters are escaped."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
