{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,[4,35,32,105,111]},null},null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,{above,{text,[4,35,32,105,111]},null},null}}},
       {above,
        {above,{above,{text,[0]},null},null},
        {above,
         {above,
          {sep,
           [{sep,
             [{text,"(Standard I/O server interface functions."}],
             0,false}],
           0,true},
          null},
         null}}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "aThis module provides an interface to standard Erlang I/O servers. The output functions all return"}],
                     0,false},
                    {text,[4,42,111,107,42]},
                    {sep,
                     [{text,
                       "0if they are successful, or exit if they are not."}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "7All functions in this module have an optional parameter"}],
                     0,false},
                    {text,"\n*IoDevice*"},
                    {sep,
                     [{text,
                       "b. If included, it must be the pid of a process that handles the I/O protocols. Normally, it is the"}],
                     0,false},
                    {text,"\n*IoDevice*"},
                    {sep,[{text,"\vreturned by"}],0,false},
                    {text,"+[kernel/file#open/2](../kernel/file#open/2)"},
                    {sep,[{text,[1,46]}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "3For a description of the I/O protocols, see section"}],
                     0,false},
                    {text,"&[The Erlang I/O Protocol](io_protocol)"},
                    {sep,
                     [{text,
                       [20,105,110,32,116,104,101,32,85,115,101,114,39,115,32,
                        71,117,105,100,101,46]}],
                     0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {sep,
              [{above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         "2As from Erlang/OTP R13A, data supplied to function"}],
                       0,false},
                      {text,"\e[put_chars/2](#put_chars/2)"},
                      {sep,
                       [{text,
                         [15,105,115,32,116,111,32,98,101,32,105,110,32,116,
                          104,101]}],
                       0,false},
                      {text,
                       "0[unicode#type-chardata](./unicode#type-chardata)"},
                      {sep,
                       [{text,
                         [146,102,111,114,109,97,116,46,32,84,104,105,115,32,
                          109,101,97,110,115,32,116,104,97,116,32,112,114,111,
                          103,114,97,109,115,32,115,117,112,112,108,121,105,
                          110,103,32,98,105,110,97,114,105,101,115,32,116,111,
                          32,116,104,105,115,32,102,117,110,99,116,105,111,
                          110,32,109,117,115,116,32,99,111,110,118,101,114,
                          116,32,116,104,101,109,32,116,111,32,85,84,70,45,56,
                          32,98,101,102,111,114,101,32,116,114,121,105,110,
                          103,32,116,111,32,111,117,116,112,117,116,32,116,
                          104,101,32,100,97,116,97,32,111,110,32,97,110,32,73,
                          47,79,32,100,101,118,105,99,101,46]}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         "1If an I/O device is set in binary mode, functions"}],
                       0,false},
                      {text,"\e[get_chars/2](#get_chars/2)"},
                      {sep,[{text,[3,97,110,100]}],0,false},
                      {text,
                       [25,91,103,101,116,95,108,105,110,101,47,49,93,40,35,
                        103,101,116,95,108,105,110,101,47,49,41]},
                      {sep,
                       [{text,
                         "bcan return binaries instead of lists. The binaries are, as from Erlang/OTP R13A, encoded in UTF-8."}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         "6To work with binaries in ISO Latin-1 encoding, use the"}],
                       0,false},
                      {text,
                       [21,91,107,101,114,110,101,108,47,102,105,108,101,93,
                        40,46,47,102,105,108,101,41]},
                      {sep,
                       [{text,
                         [15,109,111,100,117,108,101,32,105,110,115,116,101,
                          97,100,46]}],
                       0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{sep,
                     [{sep,
                       [{text,
                         "=For conversion functions between character encodings, see the"}],
                       0,false},
                      {text,"\e[stdlib/unicode](./unicode)"},
                      {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
                     0,false}],
                   0,true},
                  null},
                 null}}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}},
     {sep,
      [{above,
        {above,{above,{text,[0]},null},null},
        {above,{above,{text,"\f# Data Types"},null},null}},
       {sep,
        [{sep,[{text,[6,100,101,118,105,99,101]}],0,false},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [21,65,110,32,73,47,79,32,100,101,118,105,99,101,44,32,
                      101,105,116,104,101,114]}],
                   0,false},
                  {text,"\r*standard_io*"},
                  {sep,[{text,[1,44]}],0,false},
                  {text,
                   [16,42,115,116,97,110,100,97,114,100,95,101,114,114,111,
                    114,42]},
                  {sep,
                   [{text,
                     "C, a registered name, or a pid handling I/O protocols (returned from"}],
                   0,false},
                  {text,"+[kernel/file#open/2](../kernel/file#open/2)"},
                  {sep,[{text,[2,41,46]}],0,false}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,false},
       {sep,[{sep,[{text,"\bopt_pair"}],0,false}],0,false},
       {sep,[{sep,[{text,"\nexpand_fun"}],0,false}],0,false},
       {sep,[{sep,[{text,"\bencoding"}],0,false}],0,false},
       {sep,[{sep,[{text,[6,115,101,116,111,112,116]}],0,false}],0,false},
       {sep,[{sep,[{text,[6,102,111,114,109,97,116]}],0,false}],0,false},
       {sep,[{sep,[{text,"\blocation"}],0,false}],0,false},
       {sep,[{sep,[{text,[6,112,114,111,109,112,116]}],0,false}],0,false},
       {sep,
        [{sep,
          [{text,[14,115,101,114,118,101,114,95,110,111,95,100,97,116,97]}],
          0,false},
         {sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,"0What the I/O server sends when there is no data."}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,false}],
      0,false}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v# Functions"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f## columns/0"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f## columns/1"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"+Get the number of columns of an I/O device."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"&Retrieves the number of columns of the"}],
                0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  "Z(that is, the width of a terminal). The function succeeds for terminal devices and returns"}],
                0,false},
               {text,
                [18,42,123,101,114,114,111,114,44,32,101,110,111,116,115,117,
                 112,125,42]},
               {sep,
                [{text,
                  [26,102,111,114,32,97,108,108,32,111,116,104,101,114,32,73,
                   47,79,32,100,101,118,105,99,101,115,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v## format/1"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v## format/2"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v## format/3"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v## fwrite/1"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v## fwrite/2"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\v## fwrite/3"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [23,87,114,105,116,101,32,102,111,114,109,97,116,116,101,100,32,
               111,117,116,112,117,116,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [19,87,114,105,116,101,115,32,116,104,101,32,105,116,101,
                   109,115,32,105,110]}],
                0,false},
               {text,[6,42,68,97,116,97,42]},
               {sep,[{text,[1,40]}],0,false},
               {text,[4,42,91,93,42]},
               {sep,
                [{text,
                  [26,41,32,111,110,32,116,104,101,32,115,116,97,110,100,97,
                   114,100,32,111,117,116,112,117,116,32,40]}],
                0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [20,41,32,105,110,32,97,99,99,111,114,100,97,110,99,101,32,
                   119,105,116,104]}],
                0,false},
               {text,"\b*Format*"},
               {sep,[{text,[1,46]}],0,false},
               {text,"\b*Format*"},
               {sep,
                [{text,
                  "scontains plain characters that are copied to the output device, and control sequences for formatting, see below. If"}],
                0,false},
               {text,"\b*Format*"},
               {sep,
                [{text,
                  "Gis an atom or a binary, it is first converted to a list with the aid of"}],
                0,false},
               {text,
                [16,42,97,116,111,109,95,116,111,95,108,105,115,116,47,49,42]},
               {sep,[{text,[2,111,114]}],0,false},
               {text,
                [18,42,98,105,110,97,114,121,95,116,111,95,108,105,115,116,47,
                 49,42]},
               {sep,[{text,"\n. Example:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text," io:fwrite(\"Hello world!~n\", [])."},
               {text,
                [16,10,72,101,108,108,111,32,119,111,114,108,100,33,10,111,
                 107]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"+The general format of a control sequence is"}],
                0,false},
               {text,[14,42,126,70,46,80,46,80,97,100,77,111,100,67,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\rThe character"}],0,false},
               {text,[3,42,67,42]},
               {sep,
                [{text,
                  "Ydetermines the type of control sequence to be used. It is the only required field. All of"}],
                0,false},
               {text,[3,42,70,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[3,42,80,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[5,42,80,97,100,42]},
               {sep,[{text,[5,44,32,97,110,100]}],0,false},
               {text,[5,42,77,111,100,42]},
               {sep,[{text,"#are optional. For example, to use a"}],0,false},
               {text,[3,42,35,42]},
               {sep,[{text,[3,102,111,114]}],0,false},
               {text,[5,42,80,97,100,42]},
               {sep,
                [{text,
                  [30,98,117,116,32,117,115,101,32,116,104,101,32,100,101,102,
                   97,117,108,116,32,118,97,108,117,101,115,32,102,111,114]}],
                0,false},
               {text,[3,42,70,42]},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,[3,42,80,42]},
               {sep,
                [{text,
                  [15,44,32,121,111,117,32,99,97,110,32,119,114,105,116,101]}],
                0,false},
               {text,[7,42,126,46,46,35,67,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,[3,42,70,42]},
               {sep,[{text,[6,105,115,32,116,104,101]}],0,false},
               {text,"\r*field width*"},
               {sep,
                [{text,
                  [268,111,102,32,116,104,101,32,112,114,105,110,116,101,100,
                   32,97,114,103,117,109,101,110,116,46,32,65,32,110,101,103,
                   97,116,105,118,101,32,118,97,108,117,101,32,109,101,97,110,
                   115,32,116,104,97,116,32,116,104,101,32,97,114,103,117,109,
                   101,110,116,32,105,115,32,108,101,102,116,45,106,117,115,
                   116,105,102,105,101,100,32,119,105,116,104,105,110,32,116,
                   104,101,32,102,105,101,108,100,44,32,111,116,104,101,114,
                   119,105,115,101,32,114,105,103,104,116,45,106,117,115,116,
                   105,102,105,101,100,46,32,73,102,32,110,111,32,102,105,101,
                   108,100,32,119,105,100,116,104,32,105,115,32,115,112,101,
                   99,105,102,105,101,100,44,32,116,104,101,32,114,101,113,
                   117,105,114,101,100,32,112,114,105,110,116,32,119,105,100,
                   116,104,32,105,115,32,117,115,101,100,46,32,73,102,32,116,
                   104,101,32,102,105,101,108,100,32,119,105,100,116,104,32,
                   115,112,101,99,105,102,105,101,100,32,105,115,32,116,111,
                   111,32,115,109,97,108,108,44,32,116,104,101,32,119,104,111,
                   108,101,32,102,105,101,108,100,32,105,115,32,102,105,108,
                   108,101,100,32,119,105,116,104]}],
                0,false},
               {text,[3,42,42,42]},
               {sep,[{text,"\vcharacters."}],0,false}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,[3,42,80,42]},
               {sep,[{text,[6,105,115,32,116,104,101]}],0,false},
               {text,"\v*precision*"},
               {sep,
                [{text,
                  "µof the printed argument. A default value is used if no precision is specified. The interpretation of precision depends on the control sequences. Unless otherwise specified, argument"}],
                0,false},
               {text,"\b*within*"},
               {sep,[{text,"!is used to determine print width."}],0,false}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,[5,42,80,97,100,42]},
              {sep,
               [{text,
                 [320,105,115,32,116,104,101,32,112,97,100,100,105,110,103,32,
                  99,104,97,114,97,99,116,101,114,46,32,84,104,105,115,32,105,
                  115,32,116,104,101,32,99,104,97,114,97,99,116,101,114,32,
                  117,115,101,100,32,116,111,32,112,97,100,32,116,104,101,32,
                  112,114,105,110,116,101,100,32,114,101,112,114,101,115,101,
                  110,116,97,116,105,111,110,32,111,102,32,116,104,101,32,97,
                  114,103,117,109,101,110,116,32,115,111,32,116,104,97,116,32,
                  105,116,32,99,111,110,102,111,114,109,115,32,116,111,32,116,
                  104,101,32,115,112,101,99,105,102,105,101,100,32,102,105,
                  101,108,100,32,119,105,100,116,104,32,97,110,100,32,112,114,
                  101,99,105,115,105,111,110,46,32,79,110,108,121,32,111,110,
                  101,32,112,97,100,100,105,110,103,32,99,104,97,114,97,99,
                  116,101,114,32,99,97,110,32,98,101,32,115,112,101,99,105,
                  102,105,101,100,32,97,110,100,44,32,119,104,101,110,101,118,
                  101,114,32,97,112,112,108,105,99,97,98,108,101,44,32,105,
                  116,32,105,115,32,117,115,101,100,32,102,111,114,32,98,111,
                  116,104,32,116,104,101,32,102,105,101,108,100,32,119,105,
                  100,116,104,32,97,110,100,32,112,114,101,99,105,115,105,111,
                  110,46,32,84,104,101,32,100,101,102,97,117,108,116,32,112,
                  97,100,100,105,110,103,32,99,104,97,114,97,99,116,101,114,
                  32,105,115]}],
               0,false},
              {text,[5,42,39,32,39,42]},
              {sep,[{text,"\b(space)."}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[5,42,77,111,100,42]},
             {sep,
              [{text,
                "bis the control sequence modifier. This is one or more characters that change the interpretation of"}],
              0,false},
             {text,[6,42,68,97,116,97,42]},
             {sep,[{text,"\e. The current modifiers are"}],0,false},
             {text,[3,42,116,42]},
             {sep,
              [{text,
                [30,44,32,102,111,114,32,85,110,105,99,111,100,101,32,116,114,
                 97,110,115,108,97,116,105,111,110,44,32,97,110,100]}],
              0,false},
             {text,[3,42,108,42]},
             {sep,
              [{text,
                [14,44,32,102,111,114,32,115,116,111,112,112,105,110,103]}],
              0,false},
             {text,[3,42,112,42]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,[3,42,80,42]},
             {sep,[{text,"$from detecting printable characters."}],0,false}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[2,73,102]}],0,false},
               {text,[3,42,70,42]},
               {sep,[{text,[1,44]}],0,false},
               {text,[3,42,80,42]},
               {sep,[{text,[4,44,32,111,114]}],0,false},
               {text,[5,42,80,97,100,42]},
               {sep,[{text,[4,105,115,32,97]}],0,false},
               {text,[3,42,42,42]},
               {sep,
                [{text,
                  [31,99,104,97,114,97,99,116,101,114,44,32,116,104,101,32,
                   110,101,120,116,32,97,114,103,117,109,101,110,116,32,105,
                   110]}],
                0,false},
               {text,[6,42,68,97,116,97,42]},
               {sep,[{text,"\"is used as the value. For example:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,"*io:fwrite(\"~*.*.0f~n\",[9, 5, 3.14159265])."},
               {text,"\r\n003.14159\nok"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [16,84,111,32,117,115,101,32,97,32,108,105,116,101,114,97,
                   108]}],
                0,false},
               {text,[3,42,42,42]},
               {sep,[{text,"\fcharacter as"}],0,false},
               {text,[5,42,80,97,100,42]},
               {sep,[{text,"#, it must be passed as an argument:"}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,50,62,32]},
               {text,".io:fwrite(\"~*.*.*f~n\",[9, 5, $*, 3.14159265])."},
               {text,"\r\n**3.14159\nok"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,[{text," **Available control sequences:**"}],0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {above,
                                             {above,
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{text,[4,60,100,116,62]},
                                                   {sep,
                                                    [{text,[1,126]}],
                                                    0,false},
                                                   {text,
                                                    [5,60,47,100,116,62]}],
                                                  0,true},
                                                 null},
                                                null}},
                                              {above,
                                               {above,
                                                {above,{text,[0]},null},
                                                null},
                                               {above,
                                                {above,
                                                 {sep,
                                                  [{text,[4,60,100,100,62]},
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{sep,
                                                         [{sep,
                                                           [{text,
                                                             "\tCharacter"}],
                                                           0,false},
                                                          {text,[1,126]},
                                                          {sep,
                                                           [{text,
                                                             "\vis written."}],
                                                           0,false}],
                                                         0,false}],
                                                       0,true},
                                                      null},
                                                     null}},
                                                   {text,
                                                    [5,60,47,100,100,62]}],
                                                  0,true},
                                                 null},
                                                null}}},
                                             {above,
                                              {above,
                                               {above,{text,[0]},null},
                                               null},
                                              {above,
                                               {above,
                                                {sep,
                                                 [{text,[4,60,100,116,62]},
                                                  {sep,
                                                   [{text,[1,99]}],
                                                   0,false},
                                                  {text,[5,60,47,100,116,62]}],
                                                 0,true},
                                                null},
                                               null}}},
                                            {above,
                                             {above,
                                              {above,{text,[0]},null},
                                              null},
                                             {above,
                                              {above,
                                               {sep,
                                                [{text,[4,60,100,100,62]},
                                                 {sep,
                                                  [{above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{sep,
                                                         [{text,
                                                           "ÃThe argument is a number that is interpreted as an ASCII code. The precision is the number of times the character is printed and defaults to the field width, which in turn defaults to 1. Example:"}],
                                                         0,false}],
                                                       0,true},
                                                      null},
                                                     null}},
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {above,
                                                       {above,
                                                        {text,[3,96,96,96]},
                                                        {sep,
                                                         [{text,
                                                           [4,10,49,62,32]},
                                                          {text,
                                                           "2io:fwrite(\"|~10.5c|~-10.5c|~5c|~n\", [$a, $b, $c])."},
                                                          {text,
                                                           "!\n|     aaaaa|bbbbb     |ccccc|\nok"}],
                                                         0,true}},
                                                       {text,[3,96,96,96]}},
                                                      null},
                                                     null}},
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {sep,
                                                       [{sep,
                                                         [{sep,
                                                           [{text,
                                                             "%If the Unicode translation modifier ("}],
                                                           0,false},
                                                          {text,[1,116]},
                                                          {sep,
                                                           [{text,
                                                             "½) is in effect, the integer argument can be any number representing a valid Unicode codepoint, otherwise it is to be an integer less than or equal to 255, otherwise it is masked with 16#FF:"}],
                                                           0,false}],
                                                         0,false}],
                                                       0,true},
                                                      null},
                                                     null}},
                                                   {above,
                                                    {above,
                                                     {above,{text,[0]},null},
                                                     null},
                                                    {above,
                                                     {above,
                                                      {above,
                                                       {above,
                                                        {text,[3,96,96,96]},
                                                        {sep,
                                                         [{text,
                                                           [4,10,50,62,32]},
                                                          {text,
                                                           [26,105,111,58,102,
                                                            119,114,105,116,
                                                            101,40,34,126,116,
                                                            99,126,110,34,44,
                                                            91,49,48,50,52,93,
                                                            41,46]},
                                                          {text,
                                                           [15,10,92,120,123,
                                                            52,48,48,125,10,
                                                            111,107,10,51,62,
                                                            32]},
                                                          {text,
                                                           [25,105,111,58,102,
                                                            119,114,105,116,
                                                            101,40,34,126,99,
                                                            126,110,34,44,91,
                                                            49,48,50,52,93,41,
                                                            46]},
                                                          {text,
                                                           [6,10,94,64,10,111,
                                                            107]}],
                                                         0,true}},
                                                       {text,[3,96,96,96]}},
                                                      null},
                                                     null}}],
                                                  0,false},
                                                 {text,[5,60,47,100,100,62]}],
                                                0,true},
                                               null},
                                              null}}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{text,[4,60,100,116,62]},
                                                {sep,[{text,[1,102]}],0,false},
                                                {text,[5,60,47,100,116,62]}],
                                               0,true},
                                              null},
                                             null}}},
                                          {above,
                                           {above,
                                            {above,{text,[0]},null},
                                            null},
                                           {above,
                                            {above,
                                             {sep,
                                              [{text,[4,60,100,100,62]},
                                               {above,
                                                {above,
                                                 {above,{text,[0]},null},
                                                 null},
                                                {above,
                                                 {above,
                                                  {sep,
                                                   [{sep,
                                                     [{sep,
                                                       [{text,
                                                         "*The argument is a float that is written as"}],
                                                       0,false},
                                                      {text,"\n[-]ddd.ddd"},
                                                      {sep,
                                                       [{text,
                                                         "r, where the precision is the number of digits after the decimal point. The default precision is 6 and it cannot be"}],
                                                       0,false},
                                                      {sep,
                                                       [{text,
                                                         [4,60,32,49,46]}],
                                                       0,false}],
                                                     0,false}],
                                                   0,true},
                                                  null},
                                                 null}},
                                               {text,[5,60,47,100,100,62]}],
                                              0,true},
                                             null},
                                            null}}},
                                         {above,
                                          {above,{above,{text,[0]},null},null},
                                          {above,
                                           {above,
                                            {sep,
                                             [{text,[4,60,100,116,62]},
                                              {sep,[{text,[1,101]}],0,false},
                                              {text,[5,60,47,100,116,62]}],
                                             0,true},
                                            null},
                                           null}}},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{text,[4,60,100,100,62]},
                                             {above,
                                              {above,
                                               {above,{text,[0]},null},
                                               null},
                                              {above,
                                               {above,
                                                {sep,
                                                 [{sep,
                                                   [{sep,
                                                     [{text,
                                                       "*The argument is a float that is written as"}],
                                                     0,false},
                                                    {text,
                                                     [14,91,45,93,100,46,100,
                                                      100,100,101,43,45,100,
                                                      100,100]},
                                                    {sep,
                                                     [{text,
                                                       "b, where the precision is the number of digits written. The default precision is 6 and it cannot be"}],
                                                     0,false},
                                                    {sep,
                                                     [{text,[4,60,32,50,46]}],
                                                     0,false}],
                                                   0,false}],
                                                 0,true},
                                                null},
                                               null}},
                                             {text,[5,60,47,100,100,62]}],
                                            0,true},
                                           null},
                                          null}}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{text,[4,60,100,116,62]},
                                            {sep,[{text,[1,103]}],0,false},
                                            {text,[5,60,47,100,116,62]}],
                                           0,true},
                                          null},
                                         null}}},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{text,[4,60,100,100,62]},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{sep,
                                                 [{sep,
                                                   [{text,
                                                     "*The argument is a float that is written as"}],
                                                   0,false},
                                                  {text,[1,102]},
                                                  {sep,
                                                   [{text,"\n, if it is"}],
                                                   0,false},
                                                  {sep,
                                                   [{text,"\n>= 0.1 and"}],
                                                   0,false},
                                                  {sep,
                                                   [{text,
                                                     "*< 10000.0. Otherwise, it is written in the"}],
                                                   0,false},
                                                  {text,[1,101]},
                                                  {sep,
                                                   [{text,
                                                     "\\format. The precision is the number of significant digits. It defaults to 6 and is not to be"}],
                                                   0,false},
                                                  {sep,
                                                   [{text,
                                                     "N< 2. If the absolute value of the float does not allow it to be written in the"}],
                                                   0,false},
                                                  {text,[1,102]},
                                                  {sep,
                                                   [{text,
                                                     "Oformat with the desired number of significant digits, it is also written in the"}],
                                                   0,false},
                                                  {text,[1,101]},
                                                  {sep,
                                                   [{text,
                                                     [7,102,111,114,109,97,
                                                      116,46]}],
                                                   0,false}],
                                                 0,false}],
                                               0,true},
                                              null},
                                             null}},
                                           {text,[5,60,47,100,100,62]}],
                                          0,true},
                                         null},
                                        null}}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{text,[4,60,100,116,62]},
                                          {sep,[{text,[1,115]}],0,false},
                                          {text,[5,60,47,100,116,62]}],
                                         0,true},
                                        null},
                                       null}}},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{text,[4,60,100,100,62]},
                                         {sep,
                                          [{above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{sep,
                                                 [{sep,
                                                   [{text,
                                                     "nPrints the argument with the string syntax. The argument is, if no Unicode translation modifier is present, an"}],
                                                   0,false},
                                                  {text,"\biolist()"},
                                                  {sep,
                                                   [{text,[3,44,32,97]}],
                                                   0,false},
                                                  {text,"\bbinary()"},
                                                  {sep,
                                                   [{text,
                                                     [7,44,32,111,114,32,97,
                                                      110]}],
                                                   0,false},
                                                  {text,
                                                   [6,97,116,111,109,40,41]},
                                                  {sep,
                                                   [{text,
                                                     "'. If the Unicode translation modifier ("}],
                                                   0,false},
                                                  {text,[1,116]},
                                                  {sep,
                                                   [{text,
                                                     [31,41,32,105,115,32,105,
                                                      110,32,101,102,102,101,
                                                      99,116,44,32,116,104,
                                                      101,32,97,114,103,117,
                                                      109,101,110,116,32,105,
                                                      115]}],
                                                   0,false},
                                                  {text,
                                                   [18,117,110,105,99,111,100,
                                                    101,58,99,104,97,114,100,
                                                    97,116,97,40,41]},
                                                  {sep,
                                                   [{text,
                                                     "ï, meaning that binaries are in UTF-8. The characters are printed without quotes. The string is first truncated by the specified precision and then padded and justified to the specified field width. The default precision is the field width."}],
                                                   0,false}],
                                                 0,false}],
                                               0,true},
                                              null},
                                             null}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{sep,
                                                 [{text,
                                                   "gThis format can be used for printing any object and truncating the output so it fits a specified field:"}],
                                                 0,false}],
                                               0,true},
                                              null},
                                             null}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {above,
                                               {above,
                                                {text,[3,96,96,96]},
                                                {sep,
                                                 [{text,[4,10,49,62,32]},
                                                  {text,
                                                   ")io:fwrite(\"|~10w|~n\", [{hey, hey, hey}])."},
                                                  {text,
                                                   [20,10,124,42,42,42,42,42,
                                                    42,42,42,42,42,124,10,111,
                                                    107,10,50,62,32]},
                                                  {text,
                                                   "7io:fwrite(\"|~10s|~n\", [io_lib:write({hey, hey, hey})])."},
                                                  {text,
                                                   [17,10,124,123,104,101,121,
                                                    44,104,101,121,44,104,124,
                                                    10,51,62,32]},
                                                  {text,
                                                   ":io:fwrite(\"|~-10.8s|~n\", [io_lib:write({hey, hey, hey})])."},
                                                  {text,
                                                   [16,10,124,123,104,101,121,
                                                    44,104,101,121,32,32,124,
                                                    10,111,107]}],
                                                 0,true}},
                                               {text,[3,96,96,96]}},
                                              null},
                                             null}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {sep,
                                               [{sep,
                                                 [{text,
                                                   "gA list with integers > 255 is considered an error if the Unicode translation modifier is not specified:"}],
                                                 0,false}],
                                               0,true},
                                              null},
                                             null}},
                                           {above,
                                            {above,
                                             {above,{text,[0]},null},
                                             null},
                                            {above,
                                             {above,
                                              {above,
                                               {above,
                                                {text,[3,96,96,96]},
                                                {sep,
                                                 [{text,[4,10,52,62,32]},
                                                  {text,
                                                   [28,105,111,58,102,119,114,
                                                    105,116,101,40,34,126,116,
                                                    115,126,110,34,44,91,91,
                                                    49,48,50,52,93,93,41,46]},
                                                  {text,
                                                   [15,10,92,120,123,52,48,48,
                                                    125,10,111,107,10,53,62,
                                                    32]},
                                                  {text,
                                                   "\eio:fwrite(\"~s~n\",[[1024]])."},
                                                  {text,
                                                   "\\\n** exception error: bad argument\n     in function  io:format/3\n        called as io:format("},
                                                  {text,
                                                   [25,60,48,46,53,51,46,48,
                                                    62,44,34,126,115,126,110,
                                                    34,44,91,91,49,48,50,52,
                                                    93,93,41]}],
                                                 0,true}},
                                               {text,[3,96,96,96]}},
                                              null},
                                             null}}],
                                          0,false},
                                         {text,[5,60,47,100,100,62]}],
                                        0,true},
                                       null},
                                      null}}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,116,62]},
                                        {sep,[{text,[1,119]}],0,false},
                                        {text,[5,60,47,100,116,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,100,62]},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 "éWrites data with the standard syntax. This is used to output Erlang terms. Atoms are printed within quotes if they contain embedded non-printable characters. Atom characters > 255 are escaped unless the Unicode translation modifier ("}],
                                               0,false},
                                              {text,[1,116]},
                                              {sep,
                                               [{text,
                                                 "S) is used. Floats are printed accurately as the shortest, correctly rounded string."}],
                                               0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {text,[5,60,47,100,100,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,116,62]},
                                      {sep,[{text,[1,112]}],0,false},
                                      {text,[5,60,47,100,116,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,100,62]},
                                     {sep,
                                      [{above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 "7Writes the data with standard syntax in the same way as"}],
                                               0,false},
                                              {text,[2,126,119]},
                                              {sep,
                                               [{text,
                                                 [257,44,32,98,117,116,32,98,
                                                  114,101,97,107,115,32,116,
                                                  101,114,109,115,32,119,104,
                                                  111,115,101,32,112,114,105,
                                                  110,116,101,100,32,114,101,
                                                  112,114,101,115,101,110,116,
                                                  97,116,105,111,110,32,105,
                                                  115,32,108,111,110,103,101,
                                                  114,32,116,104,97,110,32,
                                                  111,110,101,32,108,105,110,
                                                  101,32,105,110,116,111,32,
                                                  109,97,110,121,32,108,105,
                                                  110,101,115,32,97,110,100,
                                                  32,105,110,100,101,110,116,
                                                  115,32,101,97,99,104,32,108,
                                                  105,110,101,32,115,101,110,
                                                  115,105,98,108,121,46,32,76,
                                                  101,102,116,45,106,117,115,
                                                  116,105,102,105,99,97,116,
                                                  105,111,110,32,105,115,32,
                                                  110,111,116,32,115,117,112,
                                                  112,111,114,116,101,100,46,
                                                  32,73,116,32,97,108,115,111,
                                                  32,116,114,105,101,115,32,
                                                  116,111,32,100,101,116,101,
                                                  99,116,32,102,108,97,116,32,
                                                  108,105,115,116,115,32,111,
                                                  102,32,112,114,105,110,116,
                                                  97,98,108,101,32,99,104,97,
                                                  114,97,99,116,101,114,115,
                                                  32,97,110,100,32,111,117,
                                                  116,112,117,116,32,116,104,
                                                  101,115,101,32,97,115,32,
                                                  115,116,114,105,110,103,115,
                                                  46,32,70,111,114,32,101,120,
                                                  97,109,112,108,101,58]}],
                                               0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {text,[3,96,96,96]},
                                            {sep,
                                             [{text,[4,10,49,62,32]},
                                              {text,
                                               "4T = [{attributes,[[{id,age,1.50000},{mode,explicit},"},
                                              {text,[1,10]},
                                              {text,
                                               "E{typename,\"INTEGER\"}], [{id,cho},{mode,explicit},{typename,'Cho'}]]},"},
                                              {text,[1,10]},
                                              {text,
                                               "9{typename,'Person'},{tag,{'PRIVATE',3}},{mode,implicit}]."},
                                              {text,"\b\n...\n2> "},
                                              {text,
                                               [23,105,111,58,102,119,114,105,
                                                116,101,40,34,126,119,126,110,
                                                34,44,32,91,84,93,41,46]},
                                              {text,
                                               "À\n[{attributes,[[{id,age,1.5},{mode,explicit},{typename,\n[73,78,84,69,71,69,82]}],[{id,cho},{mode,explicit},{typena\nme,'Cho'}]]},{typename,'Person'},{tag,{'PRIVATE',3}},{mode\n,implicit}]\nok\n3> "},
                                              {text,
                                               [25,105,111,58,102,119,114,105,
                                                116,101,40,34,126,54,50,112,
                                                126,110,34,44,32,91,84,93,41,
                                                46]},
                                              {text,
                                               "á\n[{attributes,[[{id,age,1.5},\n               {mode,explicit},\n               {typename,\"INTEGER\"}],\n              [{id,cho},{mode,explicit},{typename,'Cho'}]]},\n {typename,'Person'},\n {tag,{'PRIVATE',3}},\n {mode,implicit}]\nok"}],
                                             0,true}},
                                           {text,[3,96,96,96]}},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 "ÆThe field width specifies the maximum line length. It defaults to 80. The precision specifies the initial indentation of the term. It defaults to the number of characters printed on this line in the"}],
                                               0,false},
                                              {text,[4,115,97,109,101]},
                                              {sep,
                                               [{text,
                                                 [7,99,97,108,108,32,116,
                                                  111]}],
                                               0,false},
                                              {text,
                                               [7,119,114,105,116,101,47,49]},
                                              {sep,
                                               [{text,[2,111,114]}],
                                               0,false},
                                              {text,"\bformat/1"},
                                              {sep,
                                               [{text,
                                                 [20,46,32,70,111,114,32,101,
                                                  120,97,109,112,108,101,44,
                                                  32,117,115,105,110,103]}],
                                               0,false},
                                              {text,[1,84]},
                                              {sep,
                                               [{text,
                                                 [6,97,98,111,118,101,58]}],
                                               0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {text,[3,96,96,96]},
                                            {sep,
                                             [{text,[4,10,52,62,32]},
                                              {text,
                                               "\"io:fwrite(\"Here T = ~62p~n\", [T])."},
                                              {text,
                                               [338,10,72,101,114,101,32,84,
                                                32,61,32,91,123,97,116,116,
                                                114,105,98,117,116,101,115,44,
                                                91,91,123,105,100,44,97,103,
                                                101,44,49,46,53,125,44,10,32,
                                                32,32,32,32,32,32,32,32,32,32,
                                                32,32,32,32,32,32,32,32,32,32,
                                                32,32,32,123,109,111,100,101,
                                                44,101,120,112,108,105,99,105,
                                                116,125,44,10,32,32,32,32,32,
                                                32,32,32,32,32,32,32,32,32,32,
                                                32,32,32,32,32,32,32,32,32,
                                                123,116,121,112,101,110,97,
                                                109,101,44,34,73,78,84,69,71,
                                                69,82,34,125,93,44,10,32,32,
                                                32,32,32,32,32,32,32,32,32,32,
                                                32,32,32,32,32,32,32,32,32,32,
                                                32,91,123,105,100,44,99,104,
                                                111,125,44,10,32,32,32,32,32,
                                                32,32,32,32,32,32,32,32,32,32,
                                                32,32,32,32,32,32,32,32,32,
                                                123,109,111,100,101,44,101,
                                                120,112,108,105,99,105,116,
                                                125,44,10,32,32,32,32,32,32,
                                                32,32,32,32,32,32,32,32,32,32,
                                                32,32,32,32,32,32,32,32,123,
                                                116,121,112,101,110,97,109,
                                                101,44,39,67,104,111,39,125,
                                                93,93,125,44,10,32,32,32,32,
                                                32,32,32,32,32,32,123,116,121,
                                                112,101,110,97,109,101,44,39,
                                                80,101,114,115,111,110,39,125,
                                                44,10,32,32,32,32,32,32,32,32,
                                                32,32,123,116,97,103,44,123,
                                                39,80,82,73,86,65,84,69,39,44,
                                                51,125,125,44,10,32,32,32,32,
                                                32,32,32,32,32,32,123,109,111,
                                                100,101,44,105,109,112,108,
                                                105,99,105,116,125,93,10,111,
                                                107]}],
                                             0,true}},
                                           {text,[3,96,96,96]}},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 "/As from Erlang/OTP 21.0, a field width of value"}],
                                               0,false},
                                              {text,[1,48]},
                                              {sep,
                                               [{text,
                                                 "ucan be used for specifying that a line is infinitely long, which means that no line breaks are inserted. For example:"}],
                                               0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {text,[3,96,96,96]},
                                            {sep,
                                             [{text,[4,10,53,62,32]},
                                              {text,
                                               "'io:fwrite(\"~0p~n\", [lists:seq(1, 30)])."},
                                              {text,
                                               "V\n[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]\nok"}],
                                             0,true}},
                                           {text,[3,96,96,96]}},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 [17,87,104,101,110,32,116,
                                                  104,101,32,109,111,100,105,
                                                  102,105,101,114]}],
                                               0,false},
                                              {text,[1,108]},
                                              {sep,
                                               [{text,
                                                 "Qis specified, no detection of printable character lists takes place, for example:"}],
                                               0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {text,[3,96,96,96]},
                                            {sep,
                                             [{text,[4,10,54,62,32]},
                                              {text,
                                               "2S = [{a,\"a\"}, {b, \"b\"}], io:fwrite(\"~15p~n\", [S])."},
                                              {text,
                                               "\e\n[{a,\"a\"},\n {b,\"b\"}]\nok\n7> "},
                                              {text,
                                               [26,105,111,58,102,119,114,105,
                                                116,101,40,34,126,49,53,108,
                                                112,126,110,34,44,32,91,83,93,
                                                41,46]},
                                              {text,
                                               [25,10,91,123,97,44,91,57,55,
                                                93,125,44,10,32,123,98,44,91,
                                                57,56,93,125,93,10,111,107]}],
                                             0,true}},
                                           {text,[3,96,96,96]}},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 " The Unicode translation modifier"}],
                                               0,false},
                                              {text,[1,116]},
                                              {sep,
                                               [{text,
                                                 " specifies how to treat characters outside the Latin-1 range of codepoints, in atoms, strings, and binaries. For example, printing an atom containing a character"}],
                                               0,false},
                                              {sep,
                                               [{text,[6,62,32,50,53,53,58]}],
                                               0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {text,[3,96,96,96]},
                                            {sep,
                                             [{text,[4,10,56,62,32]},
                                              {text,
                                               ")io:fwrite(\"~p~n\",[list_to_atom([1024])])."},
                                              {text,
                                               [17,10,39,92,120,123,52,48,48,
                                                125,39,10,111,107,10,57,62,
                                                32]},
                                              {text,
                                               "*io:fwrite(\"~tp~n\",[list_to_atom([1024])])."},
                                              {text,
                                               [8,10,39,208,128,39,10,111,
                                                107]}],
                                             0,true}},
                                           {text,[3,96,96,96]}},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 "\\By default, Erlang only detects lists of characters in the Latin-1 range as strings, but the"}],
                                               0,false},
                                              {text,"\v+pc unicode"},
                                              {sep,
                                               [{text,
                                                 "$flag can be used to change this (see"}],
                                               0,false},
                                              {text,
                                               [17,112,114,105,110,116,97,98,
                                                108,101,95,114,97,110,103,101,
                                                47,48]},
                                              {sep,
                                               [{text,
                                                 [26,102,111,114,32,100,101,
                                                  116,97,105,108,115,41,46,32,
                                                  70,111,114,32,101,120,97,
                                                  109,112,108,101,58]}],
                                               0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {text,[3,96,96,96]},
                                            {sep,
                                             [{text,[5,10,49,48,62,32]},
                                              {text,
                                               [26,105,111,58,102,119,114,105,
                                                116,101,40,34,126,112,126,110,
                                                34,44,91,91,50,49,52,93,93,41,
                                                46]},
                                              {text,
                                               [13,10,34,195,150,34,10,111,
                                                107,10,49,49,62,32]},
                                              {text,
                                               "\eio:fwrite(\"~p~n\",[[1024]])."},
                                              {text,
                                               [15,10,91,49,48,50,52,93,10,
                                                111,107,10,49,50,62,32]},
                                              {text,
                                               [28,105,111,58,102,119,114,105,
                                                116,101,40,34,126,116,112,126,
                                                110,34,44,91,91,49,48,50,52,
                                                93,93,41,46]},
                                              {text,"\v\n[1024]\nok\n"}],
                                             0,true}},
                                           {text,[3,96,96,96]}},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 [30,98,117,116,32,105,102,32,
                                                  69,114,108,97,110,103,32,
                                                  119,97,115,32,115,116,97,
                                                  114,116,101,100,32,119,105,
                                                  116,104]}],
                                               0,false},
                                              {text,"\v+pc unicode"},
                                              {sep,[{text,[1,58]}],0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {text,[3,96,96,96]},
                                            {sep,
                                             [{text,[5,10,49,51,62,32]},
                                              {text,
                                               "\eio:fwrite(\"~p~n\",[[1024]])."},
                                              {text,
                                               [15,10,91,49,48,50,52,93,10,
                                                111,107,10,49,52,62,32]},
                                              {text,
                                               [28,105,111,58,102,119,114,105,
                                                116,101,40,34,126,116,112,126,
                                                110,34,44,91,91,49,48,50,52,
                                                93,93,41,46]},
                                              {text,
                                               [8,10,34,208,128,34,10,111,
                                                107]}],
                                             0,true}},
                                           {text,[3,96,96,96]}},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {sep,
                                           [{sep,
                                             [{sep,
                                               [{text,
                                                 "hSimilarly, binaries that look like UTF-8 encoded strings are output with the binary string syntax if the"}],
                                               0,false},
                                              {text,[1,116]},
                                              {sep,
                                               [{text,
                                                 [22,109,111,100,105,102,105,
                                                  101,114,32,105,115,32,115,
                                                  112,101,99,105,102,105,101,
                                                  100,58]}],
                                               0,false}],
                                             0,false}],
                                           0,true},
                                          null},
                                         null}},
                                       {above,
                                        {above,{above,{text,[0]},null},null},
                                        {above,
                                         {above,
                                          {above,
                                           {above,
                                            {text,[3,96,96,96]},
                                            {sep,
                                             [{text,[5,10,49,53,62,32]},
                                              {text,
                                               "!io:fwrite(\"~p~n\", [<<208,128>>])."},
                                              {text,[1,10]},
                                              {text,[1,60]},
                                              {text,"\b<208,128"},
                                              {text,[1,62]},
                                              {text,"\t>\nok\n16> "},
                                              {text,
                                               "\"io:fwrite(\"~tp~n\", [<<208,128>>])."},
                                              {text,[1,10]},
                                              {text,[1,60]},
                                              {text,
                                               [10,60,34,208,128,34,47,117,
                                                116,102,56]},
                                              {text,[1,62]},
                                              {text,"\t>\nok\n17> "},
                                              {text,
                                               "\"io:fwrite(\"~tp~n\", [<<128,128>>])."},
                                              {text,[1,10]},
                                              {text,[1,60]},
                                              {text,"\b<128,128"},
                                              {text,[1,62]},
                                              {text,[4,62,10,111,107]}],
                                             0,true}},
                                           {text,[3,96,96,96]}},
                                          null},
                                         null}}],
                                      0,false},
                                     {text,[5,60,47,100,100,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,116,62]},
                                    {sep,[{text,[1,87]}],0,false},
                                    {text,[5,60,47,100,116,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,100,62]},
                                   {sep,
                                    [{above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{sep,
                                           [{sep,
                                             [{text,
                                               [30,87,114,105,116,101,115,32,
                                                100,97,116,97,32,105,110,32,
                                                116,104,101,32,115,97,109,101,
                                                32,119,97,121,32,97,115]}],
                                             0,false},
                                            {text,[2,126,119]},
                                            {sep,
                                             [{text,
                                               "~, but takes an extra argument that is the maximum depth to which terms are printed. Anything below this depth is replaced with"}],
                                             0,false},
                                            {text,[3,46,46,46]},
                                            {sep,
                                             [{text,
                                               [20,46,32,70,111,114,32,101,
                                                120,97,109,112,108,101,44,32,
                                                117,115,105,110,103]}],
                                             0,false},
                                            {text,[1,84]},
                                            {sep,
                                             [{text,[6,97,98,111,118,101,58]}],
                                             0,false}],
                                           0,false}],
                                         0,true},
                                        null},
                                       null}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {above,
                                         {above,
                                          {text,[3,96,96,96]},
                                          {sep,
                                           [{text,[4,10,56,62,32]},
                                            {text,
                                             [25,105,111,58,102,119,114,105,
                                              116,101,40,34,126,87,126,110,34,
                                              44,32,91,84,44,57,93,41,46]},
                                            {text,
                                             [152,10,91,123,97,116,116,114,
                                              105,98,117,116,101,115,44,91,91,
                                              123,105,100,44,97,103,101,44,49,
                                              46,53,125,44,123,109,111,100,
                                              101,44,101,120,112,108,105,99,
                                              105,116,125,44,123,116,121,112,
                                              101,110,97,109,101,44,46,46,46,
                                              125,93,44,10,91,123,105,100,44,
                                              99,104,111,125,44,123,109,111,
                                              100,101,44,46,46,46,125,44,123,
                                              46,46,46,125,93,93,125,44,123,
                                              116,121,112,101,110,97,109,101,
                                              44,39,80,101,114,115,111,110,39,
                                              125,44,10,123,116,97,103,44,123,
                                              39,80,82,73,86,65,84,69,39,44,
                                              51,125,125,44,123,109,111,100,
                                              101,44,105,109,112,108,105,99,
                                              105,116,125,93,10,111,107]}],
                                           0,true}},
                                         {text,[3,96,96,96]}},
                                        null},
                                       null}},
                                     {above,
                                      {above,{above,{text,[0]},null},null},
                                      {above,
                                       {above,
                                        {sep,
                                         [{sep,
                                           [{sep,
                                             [{text,
                                               "UIf the maximum depth is reached, it cannot be read in the resultant output. Also, the"}],
                                             0,false},
                                            {text,[4,44,46,46,46]},
                                            {sep,
                                             [{text,
                                               "fform in a tuple denotes that there are more elements in the tuple but these are below the print depth."}],
                                             0,false}],
                                           0,false}],
                                         0,true},
                                        null},
                                       null}}],
                                    0,false},
                                   {text,[5,60,47,100,100,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,[{text,[1,80]}],0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,100,62]},
                                 {sep,
                                  [{above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{sep,
                                         [{sep,
                                           [{text,
                                             [30,87,114,105,116,101,115,32,
                                              100,97,116,97,32,105,110,32,116,
                                              104,101,32,115,97,109,101,32,
                                              119,97,121,32,97,115]}],
                                           0,false},
                                          {text,[2,126,112]},
                                          {sep,
                                           [{text,
                                             "~, but takes an extra argument that is the maximum depth to which terms are printed. Anything below this depth is replaced with"}],
                                           0,false},
                                          {text,[3,46,46,46]},
                                          {sep,
                                           [{text,
                                             [14,44,32,102,111,114,32,101,120,
                                              97,109,112,108,101,58]}],
                                           0,false}],
                                         0,false}],
                                       0,true},
                                      null},
                                     null}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {above,
                                       {above,
                                        {text,[3,96,96,96]},
                                        {sep,
                                         [{text,[4,10,57,62,32]},
                                          {text,
                                           "\eio:fwrite(\"~62P~n\", [T,9])."},
                                          {text,
                                           "«\n[{attributes,[[{id,age,1.5},{mode,explicit},{typename,...}],\n              [{id,cho},{mode,...},{...}]]},\n {typename,'Person'},\n {tag,{'PRIVATE',3}},\n {mode,implicit}]\nok"}],
                                         0,true}},
                                       {text,[3,96,96,96]}},
                                      null},
                                     null}}],
                                  0,false},
                                 {text,[5,60,47,100,100,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,116,62]},
                                {sep,[{text,[1,66]}],0,false},
                                {text,[5,60,47,100,116,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,100,62]},
                               {sep,
                                [{above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{text,
                                         "hWrites an integer in base 2-36, the default base is 10. A leading dash is printed for negative integers."}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{sep,
                                       [{text,
                                         ".The precision field selects base, for example:"}],
                                       0,false}],
                                     0,true},
                                    null},
                                   null}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {above,
                                     {above,
                                      {text,[3,96,96,96]},
                                      {sep,
                                       [{text,[4,10,49,62,32]},
                                        {text,
                                         "\eio:fwrite(\"~.16B~n\", [31])."},
                                        {text,"\n\n1F\nok\n2> "},
                                        {text,
                                         "\eio:fwrite(\"~.2B~n\", [-19])."},
                                        {text,
                                         [14,10,45,49,48,48,49,49,10,111,107,
                                          10,51,62,32]},
                                        {text,
                                         " io:fwrite(\"~.36B~n\", [5*36+35])."},
                                        {text,[6,10,53,90,10,111,107]}],
                                       0,true}},
                                     {text,[3,96,96,96]}},
                                    null},
                                   null}}],
                                0,false},
                               {text,[5,60,47,100,100,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,116,62]},
                              {sep,[{text,[1,88]}],0,false},
                              {text,[5,60,47,100,116,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {sep,
                              [{above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{sep,
                                       [{text,[4,76,105,107,101]}],
                                       0,false},
                                      {text,[1,66]},
                                      {sep,
                                       [{text,
                                         "o, but takes an extra argument that is a prefix to insert before the number, but after the leading dash, if any."}],
                                       0,false}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{sep,
                                     [{text,
                                       "IThe prefix can be a possibly deep list of characters or an atom. Example:"}],
                                     0,false}],
                                   0,true},
                                  null},
                                 null}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {text,[3,96,96,96]},
                                    {sep,
                                     [{text,[4,10,49,62,32]},
                                      {text,
                                       [30,105,111,58,102,119,114,105,116,101,
                                        40,34,126,88,126,110,34,44,32,91,51,
                                        49,44,34,49,48,35,34,93,41,46]},
                                      {text,"\r\n10#31\nok\n2> "},
                                      {text,
                                       "!io:fwrite(\"~.16X~n\", [-31,\"0x\"])."},
                                      {text,"\t\n-0x1F\nok"}],
                                     0,true}},
                                   {text,[3,96,96,96]}},
                                  null},
                                 null}}],
                              0,false},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,[{text,[1,35]}],0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {sep,
                            [{above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{sep,[{text,[4,76,105,107,101]}],0,false},
                                    {text,[1,66]},
                                    {sep,
                                     [{text,
                                       ",, but prints the number with an Erlang style"}],
                                     0,false},
                                    {text,[1,35]},
                                    {sep,
                                     [{text,
                                       " -separated base prefix. Example:"}],
                                     0,false}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {text,[3,96,96,96]},
                                  {sep,
                                   [{text,[4,10,49,62,32]},
                                    {text,"\eio:fwrite(\"~.10#~n\", [31])."},
                                    {text,"\r\n10#31\nok\n2> "},
                                    {text,
                                     [28,105,111,58,102,119,114,105,116,101,
                                      40,34,126,46,49,54,35,126,110,34,44,32,
                                      91,45,51,49,93,41,46]},
                                    {text,"\n\n-16#1F\nok"}],
                                   0,true}},
                                 {text,[3,96,96,96]}},
                                null},
                               null}}],
                            0,false},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,[{text,[1,98]}],0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,[{text,[4,76,105,107,101]}],0,false},
                                {text,[1,66]},
                                {sep,
                                 [{text,
                                   [31,44,32,98,117,116,32,112,114,105,110,
                                    116,115,32,108,111,119,101,114,99,97,115,
                                    101,32,108,101,116,116,101,114,115,46]}],
                                 0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,[{text,[1,120]}],0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,[{text,[4,76,105,107,101]}],0,false},
                              {text,[1,88]},
                              {sep,
                               [{text,
                                 [31,44,32,98,117,116,32,112,114,105,110,116,
                                  115,32,108,111,119,101,114,99,97,115,101,32,
                                  108,101,116,116,101,114,115,46]}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[1,43]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,[{text,[4,76,105,107,101]}],0,false},
                            {text,[1,35]},
                            {sep,
                             [{text,
                               [31,44,32,98,117,116,32,112,114,105,110,116,
                                115,32,108,111,119,101,114,99,97,115,101,32,
                                108,101,116,116,101,114,115,46]}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[1,110]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [18,87,114,105,116,101,115,32,97,32,110,101,119,32,
                            108,105,110,101,46]}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[1,105]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [22,73,103,110,111,114,101,115,32,116,104,101,32,110,
                          101,120,116,32,116,101,114,109,46]}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                 116,117,114,110,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[2,111,107]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{text,
                         [25,84,104,101,32,102,111,114,109,97,116,116,105,110,
                          103,32,115,117,99,99,101,101,100,101,100,46]}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"0If an error occurs, there is no output. Example:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,
                "Mio:fwrite(\"~s ~w ~i ~w ~c ~n\",['abc def', 'abc def', {foo, 1},{foo, 1}, 65])."},
               {text,"$\nabc def 'abc def'  {foo,1} A\nok\n2> "},
               {text,
                [22,105,111,58,102,119,114,105,116,101,40,34,126,115,34,44,32,
                 91,54,53,93,41,46]},
               {text,
                "\\\n** exception error: bad argument\n     in function  io:format/3\n        called as io:format("},
               {text,
                [18,60,48,46,53,51,46,48,62,44,34,126,115,34,44,34,65,34,41]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "vIn this example, an attempt was made to output the single character 65 with the aid of the string formatting directive"}],
                0,false},
               {text,[6,42,34,126,115,34,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n## fread/2"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n## fread/3"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [21,82,101,97,100,32,102,111,114,109,97,116,116,101,100,32,105,
               110,112,117,116,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{text,[1,42]},
        {text,[14,115,101,114,118,101,114,95,110,111,95,100,97,116,97]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"*Reads characters from the standard input ("}],
                0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [20,41,44,32,112,114,111,109,112,116,105,110,103,32,105,116,
                   32,119,105,116,104]}],
                0,false},
               {text,"\b*Prompt*"},
               {sep,
                [{text,".. Interprets the characters in accordance with"}],
                0,false},
               {text,"\b*Format*"},
               {sep,[{text,[1,46]}],0,false},
               {text,"\b*Format*"},
               {sep,
                [{text,
                  "Hcontains control sequences that directs the interpretation of the input."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,"\b*Format*"},
               {sep,
                [{text,
                  [26,99,97,110,32,99,111,110,116,97,105,110,32,116,104,101,
                   32,102,111,108,108,111,119,105,110,103,58]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{sep,
               [{text,
                 [23,87,104,105,116,101,115,112,97,99,101,32,99,104,97,114,97,
                  99,116,101,114,115,32,40]}],
               0,false},
              {text,"\t**Space**"},
              {sep,[{text,[1,44]}],0,false},
              {text,[7,42,42,84,97,98,42,42]},
              {sep,[{text,[5,44,32,97,110,100]}],0,false},
              {text,"\v**Newline**"},
              {sep,
               [{text,
                 "C) that cause input to be read to the next non-whitespace character."}],
               0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               "=Ordinary characters that must match the next input character."}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{sep,
                     [{text,
                       "0Control sequences, which have the general format"}],
                     0,false},
                    {text,[7,42,126,42,70,77,67,42]},
                    {sep,[{text,"\b, where:"}],0,false}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,
               {above,
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{sep,[{text,"\tCharacter"}],0,false},
                    {text,[3,42,42,42]},
                    {sep,
                     [{text,
                       "kis an optional return suppression character. It provides a method to specify a field that is to be omitted."}],
                     0,false}],
                   0,false}],
                 0,false},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,[3,42,70,42]},
                    {sep,[{text,[6,105,115,32,116,104,101]}],0,false},
                    {text,"\r*field width*"},
                    {sep,
                     [{text,
                       [19,111,102,32,116,104,101,32,105,110,112,117,116,32,
                        102,105,101,108,100,46]}],
                     0,false}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,[3,42,77,42]},
                   {sep,
                    [{text,"-is an optional translation modifier (of which"}],
                    0,false},
                   {text,[3,42,116,42]},
                   {sep,
                    [{text,
                      "4is the only supported, meaning Unicode translation)."}],
                    0,false}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,[3,42,67,42]},
                  {sep,
                   [{text,"(determines the type of control sequence."}],
                   0,false}],
                 0,false}],
               0,false}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [134,85,110,108,101,115,115,32,111,116,104,101,114,119,
                      105,115,101,32,115,112,101,99,105,102,105,101,100,44,32,
                      108,101,97,100,105,110,103,32,119,104,105,116,101,115,
                      112,97,99,101,32,105,115,32,105,103,110,111,114,101,100,
                      32,102,111,114,32,97,108,108,32,99,111,110,116,114,111,
                      108,32,115,101,113,117,101,110,99,101,115,46,32,65,110,
                      32,105,110,112,117,116,32,102,105,101,108,100,32,99,97,
                      110,110,111,116,32,98,101,32,109,111,114,101,32,116,104,
                      97,110,32,111,110,101,32,108,105,110,101,32,119,105,100,
                      101,46]}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,[{text," **Available control sequences:**"}],0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,
               {text,[4,60,100,108,62]},
               {nest,4,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,116,62]},
                                        {sep,[{text,[1,126]}],0,false},
                                        {text,[5,60,47,100,116,62]}],
                                       0,true},
                                      null},
                                     null}},
                                   {above,
                                    {above,{above,{text,[0]},null},null},
                                    {above,
                                     {above,
                                      {sep,
                                       [{text,[4,60,100,100,62]},
                                        {above,
                                         {above,{above,{text,[0]},null},null},
                                         {above,
                                          {above,
                                           {sep,
                                            [{sep,
                                              [{sep,
                                                [{text,"\bA single"}],
                                                0,false},
                                               {text,[1,126]},
                                               {sep,
                                                [{text,
                                                  [25,105,115,32,101,120,112,
                                                   101,99,116,101,100,32,105,
                                                   110,32,116,104,101,32,105,
                                                   110,112,117,116,46]}],
                                                0,false}],
                                              0,false}],
                                            0,true},
                                           null},
                                          null}},
                                        {text,[5,60,47,100,100,62]}],
                                       0,true},
                                      null},
                                     null}}},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{text,[4,60,100,116,62]},
                                       {sep,[{text,[1,100]}],0,false},
                                       {text,[5,60,47,100,116,62]}],
                                      0,true},
                                     null},
                                    null}}},
                                 {above,
                                  {above,{above,{text,[0]},null},null},
                                  {above,
                                   {above,
                                    {sep,
                                     [{text,[4,60,100,100,62]},
                                      {above,
                                       {above,{above,{text,[0]},null},null},
                                       {above,
                                        {above,
                                         {sep,
                                          [{sep,
                                            [{text,
                                              [30,65,32,100,101,99,105,109,97,
                                               108,32,105,110,116,101,103,101,
                                               114,32,105,115,32,101,120,112,
                                               101,99,116,101,100,46]}],
                                            0,false}],
                                          0,true},
                                         null},
                                        null}},
                                      {text,[5,60,47,100,100,62]}],
                                     0,true},
                                    null},
                                   null}}},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{text,[4,60,100,116,62]},
                                     {sep,[{text,[1,117]}],0,false},
                                     {text,[5,60,47,100,116,62]}],
                                    0,true},
                                   null},
                                  null}}},
                               {above,
                                {above,{above,{text,[0]},null},null},
                                {above,
                                 {above,
                                  {sep,
                                   [{text,[4,60,100,100,62]},
                                    {above,
                                     {above,{above,{text,[0]},null},null},
                                     {above,
                                      {above,
                                       {sep,
                                        [{sep,
                                          [{text,
                                            [143,65,110,32,117,110,115,105,
                                             103,110,101,100,32,105,110,116,
                                             101,103,101,114,32,105,110,32,98,
                                             97,115,101,32,50,45,51,54,32,105,
                                             115,32,101,120,112,101,99,116,
                                             101,100,46,32,84,104,101,32,102,
                                             105,101,108,100,32,119,105,100,
                                             116,104,32,112,97,114,97,109,101,
                                             116,101,114,32,105,115,32,117,
                                             115,101,100,32,116,111,32,115,
                                             112,101,99,105,102,121,32,98,97,
                                             115,101,46,32,76,101,97,100,105,
                                             110,103,32,119,104,105,116,101,
                                             115,112,97,99,101,32,99,104,97,
                                             114,97,99,116,101,114,115,32,97,
                                             114,101,32,110,111,116,32,115,
                                             107,105,112,112,101,100,46]}],
                                          0,false}],
                                        0,true},
                                       null},
                                      null}},
                                    {text,[5,60,47,100,100,62]}],
                                   0,true},
                                  null},
                                 null}}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{text,[4,60,100,116,62]},
                                   {sep,[{text,[1,45]}],0,false},
                                   {text,[5,60,47,100,116,62]}],
                                  0,true},
                                 null},
                                null}}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,
                                            "8An optional sign character is expected. A sign character"}],
                                          0,false},
                                         {text,[1,45]},
                                         {sep,
                                          [{text,
                                            [18,103,105,118,101,115,32,114,
                                             101,116,117,114,110,32,118,97,
                                             108,117,101]}],
                                          0,false},
                                         {text,[2,45,49]},
                                         {sep,
                                          [{text,
                                            [16,46,32,83,105,103,110,32,99,
                                             104,97,114,97,99,116,101,114]}],
                                          0,false},
                                         {text,[1,43]},
                                         {sep,
                                          [{text,"\ror none gives"}],
                                          0,false},
                                         {text,[1,49]},
                                         {sep,
                                          [{text,
                                            "V. The field width parameter is ignored. Leading whitespace characters are not skipped."}],
                                          0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,[{text,[1,35]}],0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          "CAn integer in base 2-36 with Erlang-style base prefix (for example,"}],
                                        0,false},
                                       {text,"\t\"16#ffff\""},
                                       {sep,
                                        [{text,
                                          [14,41,32,105,115,32,101,120,112,
                                           101,99,116,101,100,46]}],
                                        0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,[{text,[1,102]}],0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{text,
                                      "\\A floating point number is expected. It must follow the Erlang floating point number syntax."}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,[{text,[1,115]}],0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {sep,
                             [{above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{text,
                                      "ÞA string of non-whitespace characters is read. If a field width has been specified, this number of characters are read and all trailing whitespace characters are stripped. An Erlang string (list of characters) is returned."}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        "%If Unicode translation is in effect ("}],
                                      0,false},
                                     {text,[3,126,116,115]},
                                     {sep,[{text,"\r), characters"}],0,false},
                                     {sep,
                                      [{text,
                                        "~> 255 are accepted, otherwise not. With the translation modifier, the returned list can as a consequence also contain integers"}],
                                      0,false},
                                     {sep,
                                      [{text,[6,62,32,50,53,53,58]}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {above,
                                  {above,
                                   {text,[3,96,96,96]},
                                   {sep,
                                    [{text,[4,10,49,62,32]},
                                     {text,
                                      [26,105,111,58,102,114,101,97,100,40,34,
                                       80,114,111,109,112,116,62,32,34,44,34,
                                       126,115,34,41,46]},
                                     {text,"\t\nPrompt> "},
                                     {text,
                                      "=<Characters beyond latin1 range not printable in this medium>"},
                                     {text,"\e\n{error,{fread,string}}\n2> "},
                                     {text,
                                      "\eio:fread(\"Prompt> \",\"~ts\")."},
                                     {text,"\t\nPrompt> "},
                                     {text,
                                      "=<Characters beyond latin1 range not printable in this medium>"},
                                     {text,
                                      ",\n{ok,[[1091,1085,1080,1094,1086,1076,1077]]}"}],
                                    0,true}},
                                  {text,[3,96,96,96]}},
                                 null},
                                null}}],
                             0,false},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,[1,97]}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,[{text,"\nSimilar to"}],0,false},
                                 {text,[1,115]},
                                 {sep,
                                  [{text,
                                    "5, but the resulting string is converted into an atom."}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,[{text,[1,99]}],0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {sep,
                         [{above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    "ÀThe number of characters equal to the field width are read (default is 1) and returned as an Erlang string. However, leading and trailing whitespace characters are not omitted as they are with"}],
                                  0,false},
                                 {text,[1,115]},
                                 {sep,
                                  [{text,
                                    [30,46,32,65,108,108,32,99,104,97,114,97,
                                     99,116,101,114,115,32,97,114,101,32,114,
                                     101,116,117,114,110,101,100,46]}],
                                  0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    ".The Unicode translation modifier works as with"}],
                                  0,false},
                                 {text,[1,115]},
                                 {sep,[{text,[1,58]}],0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {above,
                              {above,
                               {text,[3,96,96,96]},
                               {sep,
                                [{text,[4,10,49,62,32]},
                                 {text,
                                  [26,105,111,58,102,114,101,97,100,40,34,80,
                                   114,111,109,112,116,62,32,34,44,34,126,99,
                                   34,41,46]},
                                 {text,"\t\nPrompt> "},
                                 {text,
                                  "<<Character beyond latin1 range not printable in this medium>"},
                                 {text,"\e\n{error,{fread,string}}\n2> "},
                                 {text,"\eio:fread(\"Prompt> \",\"~tc\")."},
                                 {text,"\t\nPrompt> "},
                                 {text,
                                  "<<Character beyond latin1 range not printable in this medium>"},
                                 {text,
                                  [14,10,123,111,107,44,91,91,49,48,57,49,93,
                                   93,125]}],
                                0,true}},
                              {text,[3,96,96,96]}},
                             null},
                            null}}],
                         0,false},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,[{text,[1,108]}],0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text,
                              "jReturns the number of characters that have been scanned up to that point, including whitespace characters."}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}}}},
              {text,[5,60,47,100,108,62]}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{sep,
                   [{text,
                     [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,
                      101,116,117,114,110,115,58]}],
                   0,false}],
                 0,true},
                null},
               null}},
             {above,
              {above,
               {text,[4,60,100,108,62]},
               {nest,4,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{sep,
                               [{sep,[{text,[4,123,111,107,44]}],0,false},
                                {sep,[{text,[5,84,101,114,109,115]}],0,false},
                                {sep,[{text,[1,125]}],0,false}],
                               0,false}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,"\eThe read was successful and"}],
                                    0,false},
                                   {sep,
                                    [{text,[5,84,101,114,109,115]}],
                                    0,false},
                                   {sep,
                                    [{text,
                                      "3is the list of successfully matched and read items."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,[3,101,111,102]}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  [28,69,110,100,32,111,102,32,102,105,108,
                                   101,32,119,97,115,32,101,110,99,111,117,
                                   110,116,101,114,101,100,46]}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,[7,123,101,114,114,111,114,44]}],
                              0,false},
                             {sep,[{text,"\nFreadError"}],0,false},
                             {sep,[{text,[1,125]}],0,false}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  [22,84,104,101,32,114,101,97,100,105,110,
                                   103,32,102,97,105,108,101,100,32,97,110,
                                   100]}],
                                0,false},
                               {text,"\nFreadError"},
                               {sep,
                                [{text,
                                  [29,103,105,118,101,115,32,97,32,104,105,
                                   110,116,32,97,98,111,117,116,32,116,104,
                                   101,32,101,114,114,111,114,46]}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,[7,123,101,114,114,111,114,44]}],
                            0,false},
                           {sep,
                            [{text,
                              [16,69,114,114,111,114,68,101,115,99,114,105,
                               112,116,105,111,110]}],
                            0,false},
                           {sep,[{text,[1,125]}],0,false}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "'The read operation failed and parameter"}],
                              0,false},
                             {sep,
                              [{text,
                                [16,69,114,114,111,114,68,101,115,99,114,105,
                                 112,116,105,111,110]}],
                              0,false},
                             {sep,
                              [{text,
                                [29,103,105,118,101,115,32,97,32,104,105,110,
                                 116,32,97,98,111,117,116,32,116,104,101,32,
                                 101,114,114,111,114,46]}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}}}},
              {text,[5,60,47,100,108,62]}}],
            0,false}],
          0,false}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\r**Examples:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,50,48,62,32]},
               {text,
                [29,105,111,58,102,114,101,97,100,40,39,101,110,116,101,114,
                 62,39,44,32,34,126,102,126,102,126,102,34,41,46]},
               {text,[7,10,101,110,116,101,114,62]},
               {text,[15,49,46,57,32,51,53,46,53,101,51,32,49,53,46,48]},
               {text,
                [28,10,123,111,107,44,91,49,46,57,44,51,46,53,53,101,52,44,49,
                 53,46,48,93,125,10,50,49,62,32]},
               {text,
                [29,105,111,58,102,114,101,97,100,40,39,101,110,116,101,114,
                 62,39,44,32,34,126,49,48,102,126,100,34,41,46]},
               {text,"\f\nenter>     "},
               {text,[7,53,46,54,55,56,57,57]},
               {text,
                [21,10,123,111,107,44,91,53,46,54,55,56,44,57,57,93,125,10,50,
                 50,62,32]},
               {text,"\"io:fread('enter>', \":~10s:~10c:\")."},
               {text,[7,10,101,110,116,101,114,62]},
               {text,[1,58]},
               {text,[3,32,32,32]},
               {text,[4,97,108,97,110]},
               {text,[3,32,32,32]},
               {text,[1,58]},
               {text,[3,32,32,32]},
               {text,[3,106,111,101]},
               {text,[4,32,32,32,32]},
               {text,[1,58]},
               {text,
                [29,10,123,111,107,44,32,91,34,97,108,97,110,34,44,32,34,32,
                 32,32,106,111,101,32,32,32,32,34,93,125]}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[14,35,35,32,103,101,116,95,99,104,97,114,115,47,50]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[14,35,35,32,103,101,116,95,99,104,97,114,115,47,51]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"&Read a specified number of characters."}],0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{text,[1,42]},
        {text,[14,115,101,114,118,101,114,95,110,111,95,100,97,116,97]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,[5,82,101,97,100,115]}],0,false},
               {text,[7,42,67,111,117,110,116,42]},
               {sep,[{text," characters from standard input ("}],0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [20,41,44,32,112,114,111,109,112,116,105,110,103,32,105,116,
                   32,119,105,116,104]}],
                0,false},
               {text,"\b*Prompt*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                 116,117,114,110,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{sep,[{text,[4,68,97,116,97]}],0,false}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               "fThe input characters. If the I/O device supports Unicode, the data can represent codepoints > 255 (the"}],
                             0,false},
                            {text,[6,108,97,116,105,110,49]},
                            {sep,
                             [{text,
                               [136,114,97,110,103,101,41,46,32,73,102,32,116,
                                104,101,32,73,47,79,32,115,101,114,118,101,
                                114,32,105,115,32,115,101,116,32,116,111,32,
                                100,101,108,105,118,101,114,32,98,105,110,97,
                                114,105,101,115,44,32,116,104,101,121,32,97,
                                114,101,32,101,110,99,111,100,101,100,32,105,
                                110,32,85,84,70,45,56,32,40,114,101,103,97,
                                114,100,108,101,115,115,32,111,102,32,119,104,
                                101,116,104,101,114,32,116,104,101,32,73,47,
                                79,32,100,101,118,105,99,101,32,115,117,112,
                                112,111,114,116,115,32,85,110,105,99,111,100,
                                101,41,46]}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[3,101,111,102]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [28,69,110,100,32,111,102,32,102,105,108,101,32,
                            119,97,115,32,101,110,99,111,117,110,116,101,114,
                            101,100,46]}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                      {sep,
                       [{text,
                         [16,69,114,114,111,114,68,101,115,99,114,105,112,116,
                          105,111,110]}],
                       0,false},
                      {sep,[{text,[1,125]}],0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"%Other (rare) error condition, such as"}],
                         0,false},
                        {text,
                         [15,123,101,114,114,111,114,44,32,101,115,116,97,108,
                          101,125]},
                        {sep,
                         [{text,"#if reading from an NFS file system."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\r## get_line/1"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\r## get_line/2"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\fRead a line."}],0,false}],0,true},null},
        null}},
      {sep,
       [{text,[1,42]},
        {text,[14,115,101,114,118,101,114,95,110,111,95,100,97,116,97]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"&Reads a line from the standard input ("}],
                0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [20,41,44,32,112,114,111,109,112,116,105,110,103,32,105,116,
                   32,119,105,116,104]}],
                0,false},
               {text,"\b*Prompt*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                 116,117,114,110,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{sep,[{text,[4,68,97,116,97]}],0,false}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               [151,84,104,101,32,99,104,97,114,97,99,116,101,
                                114,115,32,105,110,32,116,104,101,32,108,105,
                                110,101,32,116,101,114,109,105,110,97,116,101,
                                100,32,98,121,32,97,32,108,105,110,101,32,102,
                                101,101,100,32,40,111,114,32,101,110,100,32,
                                111,102,32,102,105,108,101,41,46,32,73,102,32,
                                116,104,101,32,73,47,79,32,100,101,118,105,99,
                                101,32,115,117,112,112,111,114,116,115,32,85,
                                110,105,99,111,100,101,44,32,116,104,101,32,
                                100,97,116,97,32,99,97,110,32,114,101,112,114,
                                101,115,101,110,116,32,99,111,100,101,112,111,
                                105,110,116,115,32,62,32,50,53,53,32,40,116,
                                104,101]}],
                             0,false},
                            {text,[6,108,97,116,105,110,49]},
                            {sep,
                             [{text,
                               [131,114,97,110,103,101,41,46,32,73,102,32,116,
                                104,101,32,73,47,79,32,115,101,114,118,101,
                                114,32,105,115,32,115,101,116,32,116,111,32,
                                100,101,108,105,118,101,114,32,98,105,110,97,
                                114,105,101,115,44,32,116,104,101,121,32,97,
                                114,101,32,101,110,99,111,100,101,100,32,105,
                                110,32,85,84,70,45,56,32,40,114,101,103,97,
                                114,100,108,101,115,115,32,111,102,32,105,102,
                                32,116,104,101,32,73,47,79,32,100,101,118,105,
                                99,101,32,115,117,112,112,111,114,116,115,32,
                                85,110,105,99,111,100,101,41,46]}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[3,101,111,102]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [28,69,110,100,32,111,102,32,102,105,108,101,32,
                            119,97,115,32,101,110,99,111,117,110,116,101,114,
                            101,100,46]}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                      {sep,
                       [{text,
                         [16,69,114,114,111,114,68,101,115,99,114,105,112,116,
                          105,111,110]}],
                       0,false},
                      {sep,[{text,[1,125]}],0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"%Other (rare) error condition, such as"}],
                         0,false},
                        {text,
                         [15,123,101,114,114,111,114,44,32,101,115,116,97,108,
                          101,125]},
                        {sep,
                         [{text,"#if reading from an NFS file system."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f## getopts/0"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f## getopts/1"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              "8Get the supported options and values from an I/O server."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "_Requests all available options and their current values for a specific I/O device, for example:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[4,10,49,62,32]},
               {text,"'{ok,F} = file:open(\"/dev/null\",[read])."},
               {text,[5,10,123,111,107,44]},
               {text,[7,60,48,46,52,50,46,48]},
               {text,[6,62,125,10,50,62,32]},
               {text,[14,105,111,58,103,101,116,111,112,116,115,40,70,41,46]},
               {text,"#\n[{binary,false},{encoding,latin1}]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "_Here the file I/O server returns all available options for a file, which are the expected ones,"}],
                0,false},
               {text,"\n*encoding*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\b*binary*"},
               {sep,
                [{text,
                  "4. However, the standard shell has some more options:"}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,
                "l\n3> io:getopts().\n[{expand_fun,#Fun<group.0.120017273>},\n {echo,true},\n {binary,false},\n {encoding,unicode}]"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "lThis example is, as can be seen, run in an environment where the terminal supports Unicode input and output."}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,[7,35,35,32,110,108,47,48]},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,[7,35,35,32,110,108,47,49]},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [16,87,114,105,116,101,32,97,32,110,101,119,108,105,110,101,
               46]}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,"(Writes new line to the standard output ("}],
                0,false},
               {text,"\n*IoDevice*"},
               {sep,[{text,[2,41,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [20,35,35,32,112,97,114,115,101,95,101,114,108,95,101,120,112,114,
           115,47,49]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [20,35,35,32,112,97,114,115,101,95,101,114,108,95,101,120,112,114,
           115,47,50]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [20,35,35,32,112,97,114,115,101,95,101,114,108,95,101,120,112,114,
           115,47,51]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [20,35,35,32,112,97,114,115,101,95,101,114,108,95,101,120,112,114,
           115,47,52]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"-Read, tokenize, and parse Erlang expressions."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,[{text,[1,42]},{text,"\tparse_ret"}],0,false},
      {sep,
       [{text,[1,42]},
        {text,[14,115,101,114,118,101,114,95,110,111,95,100,97,116,97]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"$Reads data from the standard input ("}],0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [20,41,44,32,112,114,111,109,112,116,105,110,103,32,105,116,
                   32,119,105,116,104]}],
                0,false},
               {text,"\b*Prompt*"},
               {sep,
                [{text,
                  [28,46,32,83,116,97,114,116,115,32,114,101,97,100,105,110,
                   103,32,97,116,32,108,111,99,97,116,105,111,110]}],
                0,false},
               {text,
                [15,42,83,116,97,114,116,76,111,99,97,116,105,111,110,42]},
               {sep,[{text,[1,40]}],0,false},
               {text,[3,42,49,42]},
               {sep,[{text,"\v). Argument"}],0,false},
               {text,"\t*Options*"},
               {sep,
                [{text,
                  [24,105,115,32,112,97,115,115,101,100,32,111,110,32,97,115,
                   32,97,114,103,117,109,101,110,116]}],
                0,false},
               {text,"\t*Options*"},
               {sep,[{text,"\vof function"}],0,false},
               {text,"([erl_scan#tokens/4](./erl_scan#tokens/4)"},
               {sep,
                [{text,
                  "d. The data is tokenized and parsed as if it was a sequence of Erlang expressions until a final dot ("}],
                0,false},
               {text,[3,42,46,42]},
               {sep,[{text,"\r) is reached."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                 116,117,114,110,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,"\e{ok, ExprList, EndLocation}"}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,"\eThe parsing was successful."}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [18,123,101,111,102,44,32,69,110,100,76,111,99,97,
                            116,105,111,110,125]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               "-End of file was encountered by the tokenizer."}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[3,101,111,102]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             ".End of file was encountered by the I/O server."}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,"!{error, ErrorInfo, ErrorLocation}"}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           ".An error occurred while tokenizing or parsing."}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                      {sep,
                       [{text,
                         [16,69,114,114,111,114,68,101,115,99,114,105,112,116,
                          105,111,110]}],
                       0,false},
                      {sep,[{text,[1,125]}],0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"%Other (rare) error condition, such as"}],
                         0,false},
                        {text,
                         [15,123,101,114,114,111,114,44,32,101,115,116,97,108,
                          101,125]},
                        {sep,
                         [{text,"#if reading from an NFS file system."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\bExample:"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,50,53,62,32]},
               {text,
                [29,105,111,58,112,97,114,115,101,95,101,114,108,95,101,120,
                 112,114,115,40,39,101,110,116,101,114,62,39,41,46]},
               {text,[7,10,101,110,116,101,114,62]},
               {text,"\rabc(), \"hey\"."},
               {text,
                "9\n{ok, [{call,1,{atom,1,abc},[]},{string,1,\"hey\"}],2}\n26> "},
               {text,
                [30,105,111,58,112,97,114,115,101,95,101,114,108,95,101,120,
                 112,114,115,32,40,39,101,110,116,101,114,62,39,41,46]},
               {text,[7,10,101,110,116,101,114,62]},
               {text,"\nabc(\"hey\"."},
               {text,
                ":\n{error,{1,erl_parse,[\"syntax error before: \",[\"'.'\"]]},2}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [19,35,35,32,112,97,114,115,101,95,101,114,108,95,102,111,114,109,
           47,49]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [19,35,35,32,112,97,114,115,101,95,101,114,108,95,102,111,114,109,
           47,50]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [19,35,35,32,112,97,114,115,101,95,101,114,108,95,102,111,114,109,
           47,51]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [19,35,35,32,112,97,114,115,101,95,101,114,108,95,102,111,114,109,
           47,52]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,")Read, tokenize, and parse an Erlang form."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{text,[1,42]},
        {text,[14,112,97,114,115,101,95,102,111,114,109,95,114,101,116]}],
       0,false},
      {sep,
       [{text,[1,42]},
        {text,[14,115,101,114,118,101,114,95,110,111,95,100,97,116,97]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"$Reads data from the standard input ("}],0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [20,41,44,32,112,114,111,109,112,116,105,110,103,32,105,116,
                   32,119,105,116,104]}],
                0,false},
               {text,"\b*Prompt*"},
               {sep,
                [{text,
                  [28,46,32,83,116,97,114,116,115,32,114,101,97,100,105,110,
                   103,32,97,116,32,108,111,99,97,116,105,111,110]}],
                0,false},
               {text,
                [15,42,83,116,97,114,116,76,111,99,97,116,105,111,110,42]},
               {sep,[{text,[1,40]}],0,false},
               {text,[3,42,49,42]},
               {sep,[{text,"\v). Argument"}],0,false},
               {text,"\t*Options*"},
               {sep,
                [{text,
                  [24,105,115,32,112,97,115,115,101,100,32,111,110,32,97,115,
                   32,97,114,103,117,109,101,110,116]}],
                0,false},
               {text,"\t*Options*"},
               {sep,[{text,"\vof function"}],0,false},
               {text,"([erl_scan#tokens/4](./erl_scan#tokens/4)"},
               {sep,
                [{text,
                  [145,46,32,84,104,101,32,100,97,116,97,32,105,115,32,116,
                   111,107,101,110,105,122,101,100,32,97,110,100,32,112,97,
                   114,115,101,100,32,97,115,32,105,102,32,105,116,32,119,97,
                   115,32,97,110,32,69,114,108,97,110,103,32,102,111,114,109,
                   32,40,111,110,101,32,111,102,32,116,104,101,32,118,97,108,
                   105,100,32,69,114,108,97,110,103,32,101,120,112,114,101,
                   115,115,105,111,110,115,32,105,110,32,97,110,32,69,114,108,
                   97,110,103,32,115,111,117,114,99,101,32,102,105,108,101,41,
                   32,117,110,116,105,108,32,97,32,102,105,110,97,108,32,100,
                   111,116,32,40]}],
                0,false},
               {text,[3,42,46,42]},
               {sep,[{text,"\r) is reached."}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                 116,117,114,110,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,
                            [26,123,111,107,44,32,65,98,115,70,111,114,109,44,
                             32,69,110,100,76,111,99,97,116,105,111,110,125]}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,"\eThe parsing was successful."}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [18,123,101,111,102,44,32,69,110,100,76,111,99,97,
                            116,105,111,110,125]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               "-End of file was encountered by the tokenizer."}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[3,101,111,102]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             ".End of file was encountered by the I/O server."}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,"!{error, ErrorInfo, ErrorLocation}"}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           ".An error occurred while tokenizing or parsing."}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                      {sep,
                       [{text,
                         [16,69,114,114,111,114,68,101,115,99,114,105,112,116,
                          105,111,110]}],
                       0,false},
                      {sep,[{text,[1,125]}],0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"%Other (rare) error condition, such as"}],
                         0,false},
                        {text,
                         [15,123,101,114,114,111,114,44,32,101,115,116,97,108,
                          101,125]},
                        {sep,
                         [{text,"#if reading from an NFS file system."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [20,35,35,32,112,114,105,110,116,97,98,108,101,95,114,97,110,103,
           101,47,48]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,"-Get user-requested printable character range."}],
            0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "AReturns the user-requested range of printable Unicode characters."}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  "¸The user can request a range of characters that are to be considered printable in heuristic detection of strings by the shell and by the formatting functions. This is done by supplying"}],
                0,false},
               {text,"\r*+pc <range>*"},
               {sep,
                [{text,
                  [21,119,104,101,110,32,115,116,97,114,116,105,110,103,32,69,
                   114,108,97,110,103,46]}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [25,84,104,101,32,111,110,108,121,32,118,97,108,105,100,32,
                   118,97,108,117,101,115,32,102,111,114]}],
                0,false},
               {text,"\t*<range>*"},
               {sep,[{text,[3,97,114,101]}],0,false},
               {text,"\b*latin1*"},
               {sep,[{text,[3,97,110,100]}],0,false},
               {text,"\t*unicode*"},
               {sep,[{text,[1,46]}],0,false},
               {text,"\b*latin1*"},
               {sep,[{text,"\emeans that only code points"}],0,false},
               {sep,
                [{text,
                  "F< 256 (except control characters, and so on) are considered printable."}],
                0,false},
               {text,"\t*unicode*"},
               {sep,
                [{text,
                  "rmeans that all printable characters in all Unicode character ranges are considered printable by the I/O functions."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,".By default, Erlang is started so that only the"}],
                0,false},
               {text,"\b*latin1*"},
               {sep,
                [{text,
                  "Arange of characters indicate that a list of integers is a string."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,".The simplest way to use the setting is to call"}],
                0,false},
               {text,"4[io_lib#printable_list/1](./io_lib#printable_list/1)"},
               {sep,
                [{text,
                  "g, which uses the return value of this function to decide if a list is a string of printable characters."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
             {sep,
              [{text,[4,32,32,32,32]},
               {sep,
                [{sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             [136,73,110,32,97,32,102,117,116,117,114,101,32,
                              114,101,108,101,97,115,101,44,32,116,104,105,
                              115,32,102,117,110,99,116,105,111,110,32,109,97,
                              121,32,114,101,116,117,114,110,32,109,111,114,
                              101,32,118,97,108,117,101,115,32,97,110,100,32,
                              114,97,110,103,101,115,46,32,84,111,32,97,118,
                              111,105,100,32,99,111,109,112,97,116,105,98,105,
                              108,105,116,121,32,112,114,111,98,108,101,109,
                              115,44,32,105,116,32,105,115,32,114,101,99,111,
                              109,109,101,110,100,101,100,32,116,111,32,117,
                              115,101,32,102,117,110,99,116,105,111,110]}],
                           0,false},
                          {text,
                           "4[io_lib#printable_list/1](./io_lib#printable_list/1)"},
                          {sep,[{text,[1,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false}],
                0,true}],
              0,false}},
            {text,[0]}},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[14,35,35,32,112,117,116,95,99,104,97,114,115,47,49]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,[14,35,35,32,112,117,116,95,99,104,97,114,115,47,50]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,[{sep,[{text,"\eWrite a list of characters."}],0,false}],0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [24,87,114,105,116,101,115,32,116,104,101,32,99,104,97,114,
                   97,99,116,101,114,115,32,111,102]}],
                0,false},
               {text,"\n*CharData*"},
               {sep,
                [{text,
                  [19,116,111,32,116,104,101,32,73,47,79,32,115,101,114,118,
                   101,114,32,40]}],
                0,false},
               {text,"\n*IoDevice*"},
               {sep,[{text,[2,41,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\t## read/1"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\t## read/2"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\fRead a term."}],0,false}],0,true},null},
        null}},
      {sep,
       [{text,[1,42]},
        {text,[14,115,101,114,118,101,114,95,110,111,95,100,97,116,97]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fReads a term"}],0,false},
               {text,[6,42,84,101,114,109,42]},
               {sep,
                [{text,
                  [25,102,114,111,109,32,116,104,101,32,115,116,97,110,100,97,
                   114,100,32,105,110,112,117,116,32,40]}],
                0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [20,41,44,32,112,114,111,109,112,116,105,110,103,32,105,116,
                   32,119,105,116,104]}],
                0,false},
               {text,"\b*Prompt*"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                 116,117,114,110,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{sep,
                          [{sep,[{text,[4,123,111,107,44]}],0,false},
                           {sep,[{text,[4,84,101,114,109]}],0,false},
                           {sep,[{text,[1,125]}],0,false}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,"\eThe parsing was successful."}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[3,101,111,102]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             [28,69,110,100,32,111,102,32,102,105,108,101,32,
                              119,97,115,32,101,110,99,111,117,110,116,101,
                              114,101,100,46]}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{sep,
                       [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                        {sep,[{text,"\tErrorInfo"}],0,false},
                        {sep,[{text,[1,125]}],0,false}],
                       0,false}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [19,84,104,101,32,112,97,114,115,105,110,103,32,
                            102,97,105,108,101,100,46]}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                      {sep,
                       [{text,
                         [16,69,114,114,111,114,68,101,115,99,114,105,112,116,
                          105,111,110]}],
                       0,false},
                      {sep,[{text,[1,125]}],0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"%Other (rare) error condition, such as"}],
                         0,false},
                        {text,
                         [15,123,101,114,114,111,114,44,32,101,115,116,97,108,
                          101,125]},
                        {sep,
                         [{text,"#if reading from an NFS file system."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\t## read/3"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\t## read/4"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\fRead a term."}],0,false}],0,true},null},
        null}},
      {sep,
       [{text,[1,42]},
        {text,[14,115,101,114,118,101,114,95,110,111,95,100,97,116,97]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\fReads a term"}],0,false},
               {text,[6,42,84,101,114,109,42]},
               {sep,[{text,[4,102,114,111,109]}],0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [19,44,32,112,114,111,109,112,116,105,110,103,32,105,116,32,
                   119,105,116,104]}],
                0,false},
               {text,"\b*Prompt*"},
               {sep,
                [{text,
                  [28,46,32,82,101,97,100,105,110,103,32,115,116,97,114,116,
                   115,32,97,116,32,108,111,99,97,116,105,111,110]}],
                0,false},
               {text,
                [15,42,83,116,97,114,116,76,111,99,97,116,105,111,110,42]},
               {sep,[{text,"\n. Argument"}],0,false},
               {text,"\t*Options*"},
               {sep,
                [{text,
                  [24,105,115,32,112,97,115,115,101,100,32,111,110,32,97,115,
                   32,97,114,103,117,109,101,110,116]}],
                0,false},
               {text,"\t*Options*"},
               {sep,[{text,"\vof function"}],0,false},
               {text,"([erl_scan#tokens/4](./erl_scan#tokens/4)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                 116,117,114,110,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,
                        [{sep,
                          [{sep,[{text,"\n{ok, Term,"}],0,false},
                           {sep,[{text,"\vEndLocation"}],0,false},
                           {sep,[{text,[1,125]}],0,false}],
                          0,false}],
                        0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,"\eThe parsing was successful."}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{sep,
                         [{sep,[{text,[5,123,101,111,102,44]}],0,false},
                          {sep,[{text,"\vEndLocation"}],0,false},
                          {sep,[{text,[1,125]}],0,false}],
                         0,false}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             [28,69,110,100,32,111,102,32,102,105,108,101,32,
                              119,97,115,32,101,110,99,111,117,110,116,101,
                              114,101,100,46]}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{sep,
                       [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                        {sep,[{text,"\tErrorInfo"}],0,false},
                        {sep,[{text,[1,44]}],0,false},
                        {sep,[{text,"\rErrorLocation"}],0,false},
                        {sep,[{text,[1,125]}],0,false}],
                       0,false}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [19,84,104,101,32,112,97,114,115,105,110,103,32,
                            102,97,105,108,101,100,46]}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                      {sep,
                       [{text,
                         [16,69,114,114,111,114,68,101,115,99,114,105,112,116,
                          105,111,110]}],
                       0,false},
                      {sep,[{text,[1,125]}],0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"%Other (rare) error condition, such as"}],
                         0,false},
                        {text,
                         [15,123,101,114,114,111,114,44,32,101,115,116,97,108,
                          101,125]},
                        {sep,
                         [{text,"#if reading from an NFS file system."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\t## rows/0"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\t## rows/1"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"(Get the number of rows of an I/O device."}],0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [31,82,101,116,114,105,101,118,101,115,32,116,104,101,32,
                   110,117,109,98,101,114,32,111,102,32,114,111,119,115,32,
                   111,102]}],
                0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [132,40,116,104,97,116,32,105,115,44,32,116,104,101,32,104,
                   101,105,103,104,116,32,111,102,32,97,32,116,101,114,109,
                   105,110,97,108,41,46,32,84,104,101,32,102,117,110,99,116,
                   105,111,110,32,111,110,108,121,32,115,117,99,99,101,101,
                   100,115,32,102,111,114,32,116,101,114,109,105,110,97,108,
                   32,100,101,118,105,99,101,115,44,32,102,111,114,32,97,108,
                   108,32,111,116,104,101,114,32,73,47,79,32,100,101,118,105,
                   99,101,115,32,116,104,101,32,102,117,110,99,116,105,111,
                   110,32,114,101,116,117,114,110,115]}],
                0,false},
               {text,
                [18,42,123,101,114,114,111,114,44,32,101,110,111,116,115,117,
                 112,125,42]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [19,35,35,32,115,99,97,110,95,101,114,108,95,101,120,112,114,115,47,
           49]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [19,35,35,32,115,99,97,110,95,101,114,108,95,101,120,112,114,115,47,
           50]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [19,35,35,32,115,99,97,110,95,101,114,108,95,101,120,112,114,115,47,
           51]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [19,35,35,32,115,99,97,110,95,101,114,108,95,101,120,112,114,115,47,
           52]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"%Read and tokenize Erlang expressions."}],0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{text,[1,42]},
        {text,[14,115,101,114,118,101,114,95,110,111,95,100,97,116,97]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"$Reads data from the standard input ("}],0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [20,41,44,32,112,114,111,109,112,116,105,110,103,32,105,116,
                   32,119,105,116,104]}],
                0,false},
               {text,"\b*Prompt*"},
               {sep,
                [{text,
                  [28,46,32,82,101,97,100,105,110,103,32,115,116,97,114,116,
                   115,32,97,116,32,108,111,99,97,116,105,111,110]}],
                0,false},
               {text,
                [15,42,83,116,97,114,116,76,111,99,97,116,105,111,110,42]},
               {sep,[{text,[1,40]}],0,false},
               {text,[3,42,49,42]},
               {sep,[{text,"\v). Argument"}],0,false},
               {text,"\t*Options*"},
               {sep,
                [{text,
                  [24,105,115,32,112,97,115,115,101,100,32,111,110,32,97,115,
                   32,97,114,103,117,109,101,110,116]}],
                0,false},
               {text,"\t*Options*"},
               {sep,[{text,"\vof function"}],0,false},
               {text,"([erl_scan#tokens/4](./erl_scan#tokens/4)"},
               {sep,
                [{text,
                  "Z. The data is tokenized as if it were a sequence of Erlang expressions until a final dot ("}],
                0,false},
               {text,[3,42,46,42]},
               {sep,
                [{text,"*) is reached. This token is also returned."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                [21,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                 116,117,114,110,115,58]}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,
                            [25,123,111,107,44,32,84,111,107,101,110,115,44,
                             32,69,110,100,76,111,99,97,116,105,111,110,125]}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{text,"\eThe tokenization succeeded."}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [18,123,101,111,102,44,32,69,110,100,76,111,99,97,
                            116,105,111,110,125]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{text,
                               "-End of file was encountered by the tokenizer."}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[3,101,111,102]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             ".End of file was encountered by the I/O server."}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,"!{error, ErrorInfo, ErrorLocation}"}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,"#An error occurred while tokenizing."}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{sep,
                     [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                      {sep,
                       [{text,
                         [16,69,114,114,111,114,68,101,115,99,114,105,112,116,
                          105,111,110]}],
                       0,false},
                      {sep,[{text,[1,125]}],0,false}],
                     0,false}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"%Other (rare) error condition, such as"}],
                         0,false},
                        {text,
                         [15,123,101,114,114,111,114,44,32,101,115,116,97,108,
                          101,125]},
                        {sep,
                         [{text,"#if reading from an NFS file system."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,{sep,[{sep,[{text,"\f**Example:**"}],0,false}],0,true},null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {above,
            {above,
             {text,[3,96,96,96]},
             {sep,
              [{text,[5,10,50,51,62,32]},
               {text,
                [28,105,111,58,115,99,97,110,95,101,114,108,95,101,120,112,
                 114,115,40,39,101,110,116,101,114,62,39,41,46]},
               {text,[7,10,101,110,116,101,114,62]},
               {text,"\rabc(), \"hey\"."},
               {text,
                "L\n{ok,[{atom,1,abc},{'(',1},{')',1},{',',1},{string,1,\"hey\"},{dot,1}],2}\n24> "},
               {text,
                [28,105,111,58,115,99,97,110,95,101,114,108,95,101,120,112,
                 114,115,40,39,101,110,116,101,114,62,39,41,46]},
               {text,[7,10,101,110,116,101,114,62]},
               {text,[6,49,46,48,101,114,46]},
               {text,"'\n{error,{1,erl_scan,{illegal,float}},2}"}],
              0,true}},
            {text,[3,96,96,96]}},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [18,35,35,32,115,99,97,110,95,101,114,108,95,102,111,114,109,47,49]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [18,35,35,32,115,99,97,110,95,101,114,108,95,102,111,114,109,47,50]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [18,35,35,32,115,99,97,110,95,101,114,108,95,102,111,114,109,47,51]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {text,
          [18,35,35,32,115,99,97,110,95,101,114,108,95,102,111,114,109,47,52]},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,[{text,"!Read and tokenize an Erlang form."}],0,false}],
          0,true},
         null},
        null}},
      {sep,
       [{text,[1,42]},
        {text,[14,115,101,114,118,101,114,95,110,111,95,100,97,116,97]}],
       0,false},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"$Reads data from the standard input ("}],0,false},
               {text,"\n*IoDevice*"},
               {sep,
                [{text,
                  [20,41,44,32,112,114,111,109,112,116,105,110,103,32,105,116,
                   32,119,105,116,104]}],
                0,false},
               {text,"\b*Prompt*"},
               {sep,
                [{text,
                  [28,46,32,83,116,97,114,116,115,32,114,101,97,100,105,110,
                   103,32,97,116,32,108,111,99,97,116,105,111,110]}],
                0,false},
               {text,
                [15,42,83,116,97,114,116,76,111,99,97,116,105,111,110,42]},
               {sep,[{text,[1,40]}],0,false},
               {text,[3,42,49,42]},
               {sep,[{text,"\v). Argument"}],0,false},
               {text,"\t*Options*"},
               {sep,
                [{text,
                  [24,105,115,32,112,97,115,115,101,100,32,111,110,32,97,115,
                   32,97,114,103,117,109,101,110,116]}],
                0,false},
               {text,"\t*Options*"},
               {sep,[{text,"\vof function"}],0,false},
               {text,"([erl_scan#tokens/4](./erl_scan#tokens/4)"},
               {sep,
                [{text,
                  [134,46,32,84,104,101,32,100,97,116,97,32,105,115,32,116,
                   111,107,101,110,105,122,101,100,32,97,115,32,105,102,32,
                   105,116,32,119,97,115,32,97,110,32,69,114,108,97,110,103,
                   32,102,111,114,109,32,40,111,110,101,32,111,102,32,116,104,
                   101,32,118,97,108,105,100,32,69,114,108,97,110,103,32,101,
                   120,112,114,101,115,115,105,111,110,115,32,105,110,32,97,
                   110,32,69,114,108,97,110,103,32,115,111,117,114,99,101,32,
                   102,105,108,101,41,32,117,110,116,105,108,32,97,32,102,105,
                   110,97,108,32,100,111,116,32,40]}],
                0,false},
               {text,[3,42,46,42]},
               {sep,
                [{text,"/) is reached. This last token is also returned."}],
                0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"%The return values are the same as for"}],0,false},
               {text,"%[scan_erl_exprs/1](#scan_erl_exprs/1)"},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f## setopts/1"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\f## setopts/2"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\fSet options."}],0,false}],0,true},null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,")Set options for the standard I/O device ("}],
                0,false},
               {text,"\n*IoDevice*"},
               {sep,[{text,[2,41,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,
                [{text,
                  [157,80,111,115,115,105,98,108,101,32,111,112,116,105,111,
                   110,115,32,97,110,100,32,118,97,108,117,101,115,32,118,97,
                   114,121,32,100,101,112,101,110,100,105,110,103,32,111,110,
                   32,116,104,101,32,73,47,79,32,100,101,118,105,99,101,46,32,
                   70,111,114,32,97,32,108,105,115,116,32,111,102,32,115,117,
                   112,112,111,114,116,101,100,32,111,112,116,105,111,110,115,
                   32,97,110,100,32,116,104,101,105,114,32,99,117,114,114,101,
                   110,116,32,118,97,108,117,101,115,32,111,110,32,97,32,115,
                   112,101,99,105,102,105,99,32,73,47,79,32,100,101,118,105,
                   99,101,44,32,117,115,101,32,102,117,110,99,116,105,111,
                   110]}],
                0,false},
               {text,
                [23,91,103,101,116,111,112,116,115,47,49,93,40,35,103,101,116,
                 111,112,116,115,47,49,41]},
               {sep,[{text,[1,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{text,
                "GThe options and values supported by the OTP I/O devices are as follows:"}],
              0,false}],
            0,true},
           null},
          null}},
        {above,
         {above,
          {text,[4,60,100,108,62]},
          {nest,4,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{sep,
                            [{text,[6,98,105,110,97,114,121]},
                             {sep,[{text,[1,44]}],0,false},
                             {text,[4,108,105,115,116]},
                             {sep,[{text,[4,44,32,111,114]}],0,false},
                             {text,
                              [19,123,98,105,110,97,114,121,44,32,98,111,111,
                               108,101,97,110,40,41,125]}],
                            0,false}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {sep,
                          [{above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,
                                   [{text,
                                     [23,73,102,32,115,101,116,32,105,110,32,
                                      98,105,110,97,114,121,32,109,111,100,
                                      101,32,40]}],
                                   0,false},
                                  {text,[6,98,105,110,97,114,121]},
                                  {sep,[{text,[2,111,114]}],0,false},
                                  {text,
                                   [14,123,98,105,110,97,114,121,44,32,116,
                                    114,117,101,125]},
                                  {sep,
                                   [{text,
                                     "H), the I/O server sends binary data (encoded in UTF-8) as answers to the"}],
                                   0,false},
                                  {text,"\bget_line"},
                                  {sep,[{text,[1,44]}],0,false},
                                  {text,"\tget_chars"},
                                  {sep,
                                   [{text,
                                     [19,44,32,97,110,100,44,32,105,102,32,
                                      112,111,115,115,105,98,108,101,44]}],
                                   0,false},
                                  {text,"\tget_until"},
                                  {sep,
                                   [{text,
                                     "\"requests (for details, see section"}],
                                   0,false},
                                  {text,
                                   [23,84,104,101,32,69,114,108,97,110,103,32,
                                    73,47,79,32,80,114,111,116,111,99,111,
                                    108]},
                                  {sep,
                                   [{text,
                                     "4) in the User's Guide). The immediate effect is that"}],
                                   0,false},
                                  {text,"\vget_chars/2"},
                                  {sep,[{text,[3,97,110,100]}],0,false},
                                  {text,"\nget_line/1"},
                                  {sep,
                                   [{text,
                                     "Qreturn UTF-8 binaries instead of lists of characters for the affected I/O device."}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,
                                   [{text,
                                     "-By default, all I/O devices in OTP are set in"}],
                                   0,false},
                                  {text,[4,108,105,115,116]},
                                  {sep,
                                   [{text,
                                     [141,109,111,100,101,46,32,72,111,119,
                                      101,118,101,114,44,32,116,104,101,32,73,
                                      47,79,32,102,117,110,99,116,105,111,110,
                                      115,32,99,97,110,32,104,97,110,100,108,
                                      101,32,97,110,121,32,111,102,32,116,104,
                                      101,115,101,32,109,111,100,101,115,32,
                                      97,110,100,32,115,111,32,115,104,111,
                                      117,108,100,32,111,116,104,101,114,44,
                                      32,117,115,101,114,45,119,114,105,116,
                                      116,101,110,44,32,109,111,100,117,108,
                                      101,115,32,98,101,104,97,118,105,110,
                                      103,32,97,115,32,99,108,105,101,110,116,
                                      115,32,116,111,32,73,47,79,32,115,101,
                                      114,118,101,114,115,46]}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,
                                   [{text,
                                     "0This option is supported by the standard shell ("}],
                                   0,false},
                                  {text,"\tgroup.erl"},
                                  {sep,
                                   [{text,
                                     [19,41,44,32,116,104,101,32,39,111,108,
                                      100,115,104,101,108,108,39,32,40]}],
                                   0,false},
                                  {text,"\buser.erl"},
                                  {sep,
                                   [{text,
                                     [28,41,44,32,97,110,100,32,116,104,101,
                                      32,102,105,108,101,32,73,47,79,32,115,
                                      101,114,118,101,114,115,46]}],
                                   0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}}],
                          0,false},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,116,62]},
                        {sep,
                         [{text,
                           [17,123,101,99,104,111,44,32,98,111,111,108,101,97,
                            110,40,41,125]}],
                         0,false},
                        {text,[5,60,47,100,116,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,100,62]},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 "\\Denotes if the terminal is to echo input. Only supported for the standard shell I/O server ("}],
                               0,false},
                              {text,"\tgroup.erl"},
                              {sep,[{text,[1,41]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {text,[5,60,47,100,100,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,
                       [{text,
                         [26,123,101,120,112,97,110,100,95,102,117,110,44,32,
                          101,120,112,97,110,100,95,102,117,110,40,41,125]}],
                       0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,100,62]},
                     {sep,
                      [{above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 "{Provides a function for tab-completion (expansion) like the Erlang shell. This function is called when the user presses the"}],
                               0,false},
                              {text,[3,84,97,98]},
                              {sep,
                               [{text,
                                 "Ikey. The expansion is active when calling line-reading functions, such as"}],
                               0,false},
                              {text,"\nget_line/1"},
                              {sep,[{text,[1,46]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 "tThe function is called with the current line, up to the cursor, as a reversed string. It is to return a three-tuple:"}],
                               0,false},
                              {text,"#{yes|no, string(), [string(), ...]}"},
                              {sep,
                               [{text,"#. The first element gives a beep if"}],
                               0,false},
                              {text,[2,110,111]},
                              {sep,
                               [{text,
                                 "ï, otherwise the expansion is silent; the second is a string that will be entered at the cursor position; the third is a list of possible expansions. If this list is not empty, it is printed and the current input line is written once again."}],
                               0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 "ITrivial example (beep on anything except empty line, which is expanded to"}],
                               0,false},
                              {text,[6,34,113,117,105,116,34]},
                              {sep,[{text,[2,41,58]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {above,
                           {above,
                            {text,[3,96,96,96]},
                            {sep,
                             [{text,
                               "?\nfun(\"\") -> {yes, \"quit\", []};\n   (_) -> {no, \"\", [\"quit\"]} end"}],
                             0,true}},
                           {text,[3,96,96,96]}},
                          null},
                         null}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{sep,
                             [{sep,
                               [{text,
                                 "5This option is only supported by the standard shell ("}],
                               0,false},
                              {text,"\tgroup.erl"},
                              {sep,[{text,[2,41,46]}],0,false}],
                             0,false}],
                           0,true},
                          null},
                         null}}],
                      0,false},
                     {text,[5,60,47,100,100,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,
                     [{text,
                       [28,123,101,110,99,111,100,105,110,103,44,32,108,97,
                        116,105,110,49,32,124,32,117,110,105,99,111,100,101,
                        125]}],
                     0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,100,62]},
                   {sep,
                    [{above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             "ÈSpecifies how characters are input or output from or to the I/O device, implying that, for example, a terminal is set to handle Unicode input and output or a file is set to handle UTF-8 data encoding."}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,[{text,"\nThe option"}],0,false},
                            {text,"\bdoes not"},
                            {sep,
                             [{text,
                               "£affect how data is returned from the I/O functions or how it is sent in the I/O protocol, it only affects how the I/O device is to handle Unicode characters to the"}],
                             0,false},
                            {sep,[{text,"\t\"physical"}],0,false},
                            {sep,[{text,"\t\" device."}],0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               [29,84,104,101,32,115,116,97,110,100,97,114,
                                100,32,115,104,101,108,108,32,105,115,32,115,
                                101,116,32,102,111,114]}],
                             0,false},
                            {text,[7,117,110,105,99,111,100,101]},
                            {sep,[{text,[2,111,114]}],0,false},
                            {text,[6,108,97,116,105,110,49]},
                            {sep,
                             [{text,
                               "Mencoding when the system is started. The encoding is set with the help of the"}],
                             0,false},
                            {text,[4,76,65,78,71]},
                            {sep,[{text,[2,111,114]}],0,false},
                            {text,"\bLC_CTYPE"},
                            {sep,
                             [{text,
                               [144,101,110,118,105,114,111,110,109,101,110,
                                116,32,118,97,114,105,97,98,108,101,115,32,
                                111,110,32,85,110,105,120,45,108,105,107,101,
                                32,115,121,115,116,101,109,32,111,114,32,98,
                                121,32,111,116,104,101,114,32,109,101,97,110,
                                115,32,111,110,32,111,116,104,101,114,32,115,
                                121,115,116,101,109,115,46,32,83,111,44,32,
                                116,104,101,32,117,115,101,114,32,99,97,110,
                                32,105,110,112,117,116,32,85,110,105,99,111,
                                100,101,32,99,104,97,114,97,99,116,101,114,
                                115,32,97,110,100,32,116,104,101,32,73,47,79,
                                32,100,101,118,105,99,101,32,105,115,32,105,
                                110]}],
                             0,false},
                            {text,
                             [19,123,101,110,99,111,100,105,110,103,44,32,117,
                              110,105,99,111,100,101,125]},
                            {sep,
                             [{text,
                               [134,109,111,100,101,32,105,102,32,116,104,101,
                                32,73,47,79,32,100,101,118,105,99,101,32,115,
                                117,112,112,111,114,116,115,32,105,116,46,32,
                                84,104,101,32,109,111,100,101,32,99,97,110,32,
                                98,101,32,99,104,97,110,103,101,100,44,32,105,
                                102,32,116,104,101,32,97,115,115,117,109,112,
                                116,105,111,110,32,111,102,32,116,104,101,32,
                                114,117,110,116,105,109,101,32,115,121,115,
                                116,101,109,32,105,115,32,119,114,111,110,103,
                                44,32,98,121,32,115,101,116,116,105,110,103,
                                32,116,104,105,115,32,111,112,116,105,111,110,
                                46]}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               "hThe I/O device used when Erlang is started with the \"-oldshell\" or \"-noshell\" flags is by default set to"}],
                             0,false},
                            {text,[6,108,97,116,105,110,49]},
                            {sep,
                             [{text,"%encoding, meaning that any characters"}],
                             0,false},
                            {sep,
                             [{text,
                               "ß> codepoint 255 are escaped and that input is expected to be plain 8-bit ISO Latin-1. If the encoding is changed to Unicode, input and output from the standard file descriptors are in UTF-8 (regardless of operating system)."}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{sep,
                             [{text,
                               [24,70,105,108,101,115,32,99,97,110,32,97,108,
                                115,111,32,98,101,32,115,101,116,32,105,110]}],
                             0,false},
                            {text,
                             [19,123,101,110,99,111,100,105,110,103,44,32,117,
                              110,105,99,111,100,101,125]},
                            {sep,
                             [{text,
                               "c, meaning that data is written and read as UTF-8. More encodings are possible for files, see below."}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{sep,
                           [{text,
                             [28,123,101,110,99,111,100,105,110,103,44,32,117,
                              110,105,99,111,100,101,32,124,32,108,97,116,105,
                              110,49,125]},
                            {sep,
                             [{text,
                               ")is supported by both the standard shell ("}],
                             0,false},
                            {text,"\tgroup.erl"},
                            {sep,[{text,"\tincluding"}],0,false},
                            {text,[4,119,101,114,108]},
                            {sep,
                             [{text,
                               [29,111,110,32,87,105,110,100,111,119,115,41,
                                44,32,116,104,101,32,39,111,108,100,115,104,
                                101,108,108,39,32,40]}],
                             0,false},
                            {text,"\buser.erl"},
                            {sep,
                             [{text,
                               [28,41,44,32,97,110,100,32,116,104,101,32,102,
                                105,108,101,32,73,47,79,32,115,101,114,118,
                                101,114,115,46]}],
                             0,false}],
                           0,false}],
                         0,true},
                        null},
                       null}}],
                    0,false},
                   {text,[5,60,47,100,100,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,
                   [{text,
                     "^{encoding, utf8 | utf16 | utf32 | {utf16,big} | {utf16,little} | {utf32,big} | {utf32,little}}"}],
                   0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,100,62]},
                 {sep,
                  [{above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           "âFor disk files, the encoding can be set to various UTF variants. This has the effect that data is expected to be read as the specified encoding from the file, and the data is written in the specified encoding to the disk file."}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{text,
                           [16,123,101,110,99,111,100,105,110,103,44,32,117,
                            116,102,56,125]},
                          {sep,
                           [{text,
                             [22,104,97,115,32,116,104,101,32,115,97,109,101,
                              32,101,102,102,101,99,116,32,97,115]}],
                           0,false},
                          {text,
                           [19,123,101,110,99,111,100,105,110,103,44,32,117,
                            110,105,99,111,100,101,125]},
                          {sep,[{text,"\ton files."}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{sep,
                         [{sep,
                           [{text,
                             "KThe extended encodings are only supported on disk files (opened by function"}],
                           0,false},
                          {text,
                           [18,107,101,114,110,101,108,47,102,105,108,101,35,
                            111,112,101,110,47,50]},
                          {sep,[{text,[2,41,46]}],0,false}],
                         0,false}],
                       0,true},
                      null},
                     null}}],
                  0,false},
                 {text,[5,60,47,100,100,62]}],
                0,true},
               null},
              null}}}}},
         {text,[5,60,47,100,108,62]}}],
       0,false},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n## write/1"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n## write/2"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,{sep,[{sep,[{text,"\rWrite a term."}],0,false}],0,true},null},
        null}},
      {sep,
       [{above,
         {above,{above,{text,[0]},null},null},
         {above,
          {above,
           {sep,
            [{sep,
              [{sep,[{text,"\vWrites term"}],0,false},
               {text,[6,42,84,101,114,109,42]},
               {sep,
                [{text,
                  [24,116,111,32,116,104,101,32,115,116,97,110,100,97,114,100,
                   32,111,117,116,112,117,116,32,40]}],
                0,false},
               {text,"\n*IoDevice*"},
               {sep,[{text,[2,41,46]}],0,false}],
              0,false}],
            0,true},
           null},
          null}}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {text,
         [24,35,35,32,83,116,97,110,100,97,114,100,32,73,110,112,117,116,47,
          79,117,116,112,117,116]},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "TAll Erlang processes have a default standard I/O device. This device is used when no"}],
             0,false},
            {text,"\n*IoDevice*"},
            {sep,
             [{text,
               "qargument is specified in the function calls in this module. However, it is sometimes desirable to use an explicit"}],
             0,false},
            {text,"\n*IoDevice*"},
            {sep,
             [{text,
               [145,97,114,103,117,109,101,110,116,32,116,104,97,116,32,114,
                101,102,101,114,115,32,116,111,32,116,104,101,32,100,101,102,
                97,117,108,116,32,73,47,79,32,100,101,118,105,99,101,46,32,84,
                104,105,115,32,105,115,32,116,104,101,32,99,97,115,101,32,119,
                105,116,104,32,102,117,110,99,116,105,111,110,115,32,116,104,
                97,116,32,99,97,110,32,97,99,99,101,115,115,32,101,105,116,
                104,101,114,32,97,32,102,105,108,101,32,111,114,32,116,104,
                101,32,100,101,102,97,117,108,116,32,73,47,79,32,100,101,118,
                105,99,101,46,32,84,104,101,32,97,116,111,109]}],
             0,false},
            {text,"\r*standard_io*"},
            {sep,
             [{text,
               "Ahas this special meaning. The following example illustrates this:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[5,10,50,55,62,32]},
            {text,
             [18,105,111,58,114,101,97,100,40,39,101,110,116,101,114,62,39,41,
              46]},
            {text,[7,10,101,110,116,101,114,62]},
            {text,[4,102,111,111,46]},
            {text,[14,10,123,111,107,44,102,111,111,125,10,50,56,62,32]},
            {text,
             [31,105,111,58,114,101,97,100,40,115,116,97,110,100,97,114,100,
              95,105,111,44,32,39,101,110,116,101,114,62,39,41,46]},
            {text,[7,10,101,110,116,101,114,62]},
            {text,[4,98,97,114,46]},
            {text,"\t\n{ok,bar}"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "6There is always a process registered under the name of"}],
             0,false},
            {text,[6,42,117,115,101,114,42]},
            {sep,
             [{text,"2. This can be used for sending output to the user."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[17,35,35,32,83,116,97,110,100,97,114,100,32,69,114,114,111,114]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [159,73,110,32,99,101,114,116,97,105,110,32,115,105,116,117,97,
               116,105,111,110,115,44,32,101,115,112,101,99,105,97,108,108,
               121,32,119,104,101,110,32,116,104,101,32,115,116,97,110,100,97,
               114,100,32,111,117,116,112,117,116,32,105,115,32,114,101,100,
               105,114,101,99,116,101,100,44,32,97,99,99,101,115,115,32,116,
               111,32,97,110,32,73,47,79,32,115,101,114,118,101,114,32,115,
               112,101,99,105,102,105,99,32,102,111,114,32,101,114,114,111,
               114,32,109,101,115,115,97,103,101,115,32,99,97,110,32,98,101,
               32,99,111,110,118,101,110,105,101,110,116,46,32,84,104,101,32,
               73,47,79,32,100,101,118,105,99,101]}],
            0,false},
           {text,
            [16,42,115,116,97,110,100,97,114,100,95,101,114,114,111,114,42]},
           {sep,
            [{text,
              " can be used to direct output to whatever the current operating system considers a suitable I/O device for error output. Example on a Unix-like operating system:"}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {above,
        {above,
         {text,[3,96,96,96]},
         {sep,
          [{text,[3,10,36,32]},
           {text,
            "Terl -noshell -noinput -eval 'io:format(standard_error,\"Error: ~s~n\",[\"error 11\"]),'\\"},
           {text,[1,10]},
           {text,
            [26,39,105,110,105,116,58,115,116,111,112,40,41,46,39,32,62,32,47,
             100,101,118,47,110,117,108,108]},
           {text,
            [16,10,69,114,114,111,114,58,32,101,114,114,111,114,32,49,49]}],
          0,true}},
        {text,[3,96,96,96]}},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,69,114,114,111,114,32,73,110,102,111,114,109,97,116,105,
        111,110]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,[3,84,104,101]}],0,false},
          {text,"\v*ErrorInfo*"},
          {sep,[{text,"(mentioned in this module is the standard"}],0,false},
          {text,"\v*ErrorInfo*"},
          {sep,
           [{text,
             "Mstructure that is returned from all I/O modules. It has the following format:"}],
           0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,[{text,")\n{ErrorLocation, Module, ErrorDescriptor}"}],0,true}},
       {text,[3,96,96,96]}},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "FA string that describes the error is obtained with the following call:"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {above,
       {above,
        {text,[3,96,96,96]},
        {sep,[{text,"%\nModule:format_error(ErrorDescriptor)"}],0,true}},
       {text,[3,96,96,96]}},
      null},
     null}}],
  0,false}}
