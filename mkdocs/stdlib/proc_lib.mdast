{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n# proc_lib"},null},null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,{above,{text,"\n# proc_lib"},null},null}}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "dFunctions for asynchronous and synchronous start of processes adhering to the OTP design principles."}],
           0,false}],
         0,true},
        null},
       null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "6This module is used to start processes adhering to the"}],
                   0,false},
                  {text,"$[OTP Design Principles](./des_princ)"},
                  {sep,
                   [{text,
                     "a. Specifically, the functions in this module are used by the OTP standard behaviors (for example,"}],
                   0,false},
                  {text,"\f*gen_server*"},
                  {sep,[{text,[3,97,110,100]}],0,false},
                  {text,"\f*gen_statem*"},
                  {sep,
                   [{text,
                     "F) when starting new processes. The functions can also be used to start"}],
                   0,false},
                  {text,
                   [21,42,42,115,112,101,99,105,97,108,32,112,114,111,99,101,
                    115,115,101,115,42,42]},
                  {sep,
                   [{text,
                     "^, user-defined processes that comply to the OTP design principles. For an example, see section"}],
                   0,false},
                  {text,
                   [31,91,115,121,115,32,97,110,100,32,112,114,111,99,95,108,
                    105,98,93,40,46,47,115,112,101,99,95,112,114,111,99,41]},
                  {sep,
                   [{text,
                     [25,105,110,32,79,84,80,32,68,101,115,105,103,110,32,80,
                      114,105,110,99,105,112,108,101,115,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "ùSome useful information is initialized when a process starts. The registered names, or the process identifiers, of the parent process, and the parent ancestors, are stored together with information about the function initially called in the process."}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     "UWhile in \"plain Erlang\", a process is said to terminate normally only for exit reason"}],
                   0,false},
                  {text,"\b*normal*"},
                  {sep,
                   [{text,
                     [25,44,32,97,32,112,114,111,99,101,115,115,32,115,116,97,
                      114,116,101,100,32,117,115,105,110,103]}],
                   0,false},
                  {text,"\n*proc_lib*"},
                  {sep,
                   [{text,
                     ":is also said to terminate normally if it exits with reason"}],
                   0,false},
                  {text,"\n*shutdown*"},
                  {sep,[{text,[2,111,114]}],0,false},
                  {text,
                   [17,42,123,115,104,117,116,100,111,119,110,44,84,101,114,
                    109,125,42]},
                  {sep,[{text,[1,46]}],0,false},
                  {text,"\n*shutdown*"},
                  {sep,
                   [{text,
                     "Eis the reason used when an application (supervision tree) is stopped."}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,"$When a process that is started using"}],
                   0,false},
                  {text,"\n*proc_lib*"},
                  {sep,
                   [{text,
                     "=terminates abnormally (that is, with another exit reason than"}],
                   0,false},
                  {text,"\b*normal*"},
                  {sep,[{text,[1,44]}],0,false},
                  {text,"\n*shutdown*"},
                  {sep,[{text,[4,44,32,111,114]}],0,false},
                  {text,
                   [17,42,123,115,104,117,116,100,111,119,110,44,84,101,114,
                    109,125,42]},
                  {sep,[{text,[4,41,44,32,97]}],0,false},
                  {text,
                   [16,42,42,99,114,97,115,104,32,114,101,112,111,114,116,42,
                    42]},
                  {sep,
                   [{text,
                     "°is generated, which is written to terminal by the default logger handler setup by Kernel. For more information about how crash reports were logged prior to Erlang/OTP 21.0, see"}],
                   0,false},
                  {text,"%[SASL Error Logging](./error_logging)"},
                  {sep,
                   [{text,
                     [25,105,110,32,116,104,101,32,83,65,83,76,32,85,115,101,
                      114,39,115,32,71,117,105,100,101,46]}],
                   0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{sep,
                   [{text,
                     [25,85,110,108,105,107,101,32,105,110,32,34,112,108,97,
                      105,110,32,69,114,108,97,110,103,34,44]}],
                   0,false},
                  {text,"\n*proc_lib*"},
                  {sep,[{text,"\eprocesses will not generate"}],0,false},
                  {text,
                   [17,42,42,101,114,114,111,114,32,114,101,112,111,114,116,
                    115,42,42]},
                  {sep,
                   [{text,
                     "T, which are written to the terminal by the emulator. All exceptions are converted to"}],
                   0,false},
                  {text,"\t**exits**"},
                  {sep,[{text," which are ignored by the default"}],0,false},
                  {text,"\b*logger*"},
                  {sep,[{text,"\bhandler."}],0,false}],
                 0,false}],
               0,true},
              null},
             null}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{sep,
                 [{text,
                   "ÚThe crash report contains the previously stored information, such as ancestors and initial function, the termination reason, and information about other processes that terminate as a result of this process terminating."}],
                 0,false}],
               0,true},
              null},
             null}}],
          0,false}],
        0,true},
       null},
      null}}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\f# Data Types"},null},null}},
     {sep,
      [{sep,[{text,"\fspawn_option"}],0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,[{text,[3,83,101,101]}],0,false},
                {text,
                 "5[erts/erlang#spawn_opt/4](../erts/erlang#spawn_opt/4)"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,false},
     {sep,
      [{sep,
        [{text,[14,112,114,105,111,114,105,116,121,95,108,101,118,101,108]}],
        0,false}],
      0,false},
     {sep,
      [{sep,[{text,"\rmax_heap_size"}],0,false},
       {sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,[{text,[3,83,101,101]}],0,false},
                {text,
                 "\\[erlang:process_flag(max_heap_size, MaxHeapSize)](../erts/erlang#process_flag_max_heap_size)"},
                {sep,[{text,[1,46]}],0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,false},
     {sep,[{sep,[{text,"\vdict_or_pid"}],0,false}],0,false}],
    0,false}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v# Functions"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v## format/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,70,111,114,109,97,116,32,97,32,99,114,97,115,104,32,114,101,
             112,111,114,116,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [21,91,102,111,114,109,97,116,47,50,93,40,35,102,111,114,109,97,
               116,47,50,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v## format/2"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,70,111,114,109,97,116,32,97,32,99,114,97,115,104,32,114,101,
             112,111,114,116,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "1This function is deprecated in the sense that the"}],
                         0,false},
                        {text,
                         [14,42,101,114,114,111,114,95,108,111,103,103,101,
                          114,42]},
                        {sep,
                         [{text,
                           "Eis no longer the preferred interface for logging in Erlang/OTP. A new"}],
                         0,false},
                        {text,
                         [31,91,108,111,103,103,105,110,103,32,65,80,73,93,40,
                          46,47,108,111,103,103,101,114,95,99,104,97,112,116,
                          101,114,41]},
                        {sep,
                         [{text,"(was added in Erlang/OTP 21.0, but legacy"}],
                         0,false},
                        {text,
                         [14,42,101,114,114,111,114,95,108,111,103,103,101,
                          114,42]},
                        {sep,
                         [{text,
                           "qhandlers can still be used. New Logger handlers do not need to use this function, since the formatting callback ("}],
                         0,false},
                        {text,"\v*report_cb*"},
                        {sep,
                         [{text,
                           "+) is included as metadata in the log event."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"2This function can be used by a user-defined legacy"}],
              0,false},
             {text,[14,42,101,114,114,111,114,95,108,111,103,103,101,114,42]},
             {sep,
              [{text,
                "Fevent handler to format a crash report. The crash report is sent using"}],
              0,false},
             {text,
              [25,91,107,101,114,110,101,108,47,108,111,103,103,101,114,93,40,
               46,47,108,111,103,103,101,114,41]},
             {sep,
              [{text,"., and the event to be handled is of the format"}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,"&{error_report, GL, {Pid, crash_report,"}],
                  0,false},
                 {sep,[{text,"\vCrashReport"}],0,false},
                 {sep,[{text,[2,125,125]}],0,false}],
                0,false},
               {text,[1,42]}],
              0,false},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,[4,42,71,76,42]},
             {sep,[{text,"\"is the group leader pid of process"}],0,false},
             {text,[5,42,80,105,100,42]},
             {sep,[{text,"\ethat sent the crash report."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\v## format/3"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,70,111,114,109,97,116,32,97,32,99,114,97,115,104,32,114,101,
             112,111,114,116,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           "1This function is deprecated in the sense that the"}],
                         0,false},
                        {text,
                         [14,42,101,114,114,111,114,95,108,111,103,103,101,
                          114,42]},
                        {sep,
                         [{text,
                           "Eis no longer the preferred interface for logging in Erlang/OTP. A new"}],
                         0,false},
                        {text,
                         [31,91,108,111,103,103,105,110,103,32,65,80,73,93,40,
                          46,47,108,111,103,103,101,114,95,99,104,97,112,116,
                          101,114,41]},
                        {sep,
                         [{text,"(was added in Erlang/OTP 21.0, but legacy"}],
                         0,false},
                        {text,
                         [14,42,101,114,114,111,114,95,108,111,103,103,101,
                          114,42]},
                        {sep,
                         [{text,
                           "rhandlers can still be used. New Logger handlers do not need to used this function, since the formatting callback ("}],
                         0,false},
                        {text,"\v*report_cb*"},
                        {sep,
                         [{text,
                           "+) is included as metadata in the log event."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"2This function can be used by a user-defined legacy"}],
              0,false},
             {text,[14,42,101,114,114,111,114,95,108,111,103,103,101,114,42]},
             {sep,
              [{text,",event handler to format a crash report. When"}],
              0,false},
             {sep,[{text,[5,68,101,112,116,104]}],0,false},
             {sep,
              [{text,
                "cis specified as a positive integer, it is used in the format string to limit the output as follows:"}],
              0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,
                  [{text,
                    [26,105,111,95,108,105,98,58,102,111,114,109,97,116,40,34,
                     126,80,34,44,32,91,84,101,114,109,44]}],
                  0,false},
                 {sep,[{text,[5,68,101,112,116,104]}],0,false},
                 {sep,[{text,[2,93,41]}],0,false}],
                0,false},
               {text,[1,42]}],
              0,false},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[14,35,35,32,104,105,98,101,114,110,97,116,101,47,51]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"2Hibernate a process until a message is sent to it."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"2This function does the same as (and does call) the"}],
              0,false},
             {text,"5[erts/erlang#hibernate/3](../erts/erlang#hibernate/3)"},
             {sep,
              [{text,
                "mBIF, but ensures that exception handling and logging continues to work as expected when the process wakes up."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "GAlways use this function instead of the BIF for processes started using"}],
              0,false},
             {text,"\n*proc_lib*"},
             {sep,[{text,"\nfunctions."}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## init_ack/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## init_ack/2"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"&Used by a process when it has started."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "BThis function must be used by a process that has been started by a"}],
              0,false},
             {text,
              [19,91,115,116,97,114,116,47,51,93,40,35,115,116,97,114,116,47,
               51,41]},
             {sep,
              [{text,
                [18,102,117,110,99,116,105,111,110,46,32,73,116,32,116,101,
                 108,108,115]}],
              0,false},
             {text,"\b*Parent*"},
             {sep,
              [{text,
                "Ythat the process has initialized itself, has started, or has failed to initialize itself."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bFunction"}],0,false},
             {text,"\f*init_ack/1*"},
             {sep,
              [{text,
                "Cuses the parent value previously stored by the start function used."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{text,
              [130,73,102,32,116,104,105,115,32,102,117,110,99,116,105,111,
               110,32,105,115,32,110,111,116,32,99,97,108,108,101,100,44,32,
               116,104,101,32,115,116,97,114,116,32,102,117,110,99,116,105,
               111,110,32,114,101,116,117,114,110,115,32,97,110,32,101,114,
               114,111,114,32,116,117,112,108,101,32,40,105,102,32,97,32,108,
               105,110,107,32,97,110,100,47,111,114,32,97,32,116,105,109,101,
               45,111,117,116,32,105,115,32,117,115,101,100,41,32,111,114,32,
               104,97,110,103,32,111,116,104,101,114,119,105,115,101,46]}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "7The following example illustrates how this function and"}],
              0,false},
             {text,
              [23,42,112,114,111,99,95,108,105,98,58,115,116,97,114,116,95,
               108,105,110,107,47,51,42]},
             {sep,[{text,"\tare used:"}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[3,96,96,96]},
           {sep,
            [{text,
              [323,10,45,109,111,100,117,108,101,40,109,121,95,112,114,111,99,
               41,46,10,45,101,120,112,111,114,116,40,91,115,116,97,114,116,
               95,108,105,110,107,47,48,93,41,46,10,45,101,120,112,111,114,
               116,40,91,105,110,105,116,47,49,93,41,46,10,10,115,116,97,114,
               116,95,108,105,110,107,40,41,32,45,62,10,32,32,32,32,112,114,
               111,99,95,108,105,98,58,115,116,97,114,116,95,108,105,110,107,
               40,109,121,95,112,114,111,99,44,32,105,110,105,116,44,32,91,
               115,101,108,102,40,41,93,41,46,10,10,105,110,105,116,40,80,97,
               114,101,110,116,41,32,45,62,10,32,32,32,32,99,97,115,101,32,
               100,111,95,105,110,105,116,105,97,108,105,122,97,116,105,111,
               110,40,41,32,111,102,10,32,32,32,32,32,32,32,32,111,107,32,45,
               62,10,32,32,32,32,32,32,32,32,32,32,32,32,112,114,111,99,95,
               108,105,98,58,105,110,105,116,95,97,99,107,40,80,97,114,101,
               110,116,44,32,123,111,107,44,32,115,101,108,102,40,41,125,41,
               59,10,32,32,32,32,32,32,32,32,123,101,114,114,111,114,44,32,82,
               101,97,115,111,110,125,32,45,62,10,32,32,32,32,32,32,32,32,32,
               32,32,32,101,120,105,116,40,82,101,97,115,111,110,41,10,32,32,
               32,32,101,110,100,44,10,32,32,32,32,108,111,111,112,40,41,46,
               10,10,46,46,46]}],
            0,true}},
          {text,[3,96,96,96]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[17,35,35,32,105,110,105,116,105,97,108,95,99,97,108,108,47,49]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,
              [29,69,120,116,114,97,99,116,32,116,104,101,32,105,110,105,116,
               105,97,108,32,99,97,108,108,32,111,102,32,97]}],
            0,false},
           {text,"\n*proc_lib*"},
           {sep,
            [{text,
              [16,115,112,97,119,110,101,100,32,112,114,111,99,101,115,115,
               46]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "qExtracts the initial call of a process that was started using one of the spawn or start functions in this module."}],
              0,false},
             {text,"\t*Process*"},
             {sep,
              [{text,
                "pcan either be a pid, an integer tuple (from which a pid can be created), or the process information of a process"}],
              0,false},
             {text,[5,42,80,105,100,42]},
             {sep,
              [{text,
                [18,102,101,116,99,104,101,100,32,116,104,114,111,117,103,104,
                 32,97,110]}],
              0,false},
             {text,
              [26,42,101,114,108,97,110,103,58,112,114,111,99,101,115,115,95,
               105,110,102,111,40,80,105,100,41,42]},
             {sep,
              [{text,[14,102,117,110,99,116,105,111,110,32,99,97,108,108,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,[{text,"\bThe list"}],0,false},
                        {text,[6,42,65,114,103,115,42]},
                        {sep,
                         [{text,
                           "lno longer contains the arguments, but the same number of atoms as the number of arguments; the first atom is"}],
                         0,false},
                        {text,
                         [15,42,39,65,114,103,117,109,101,110,116,95,95,49,39,
                          42]},
                        {sep,[{text,"\f, the second"}],0,false},
                        {text,
                         [15,42,39,65,114,103,117,109,101,110,116,95,95,50,39,
                          42]},
                        {sep,
                         [{text,
                           "Á, and so on. The reason is that the argument list could waste a significant amount of memory, and if the argument list contained funs, it could be impossible to upgrade the code for the module."}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,"'If the process was spawned using a fun,"}],
                         0,false},
                        {text,
                         [16,42,105,110,105,116,105,97,108,95,99,97,108,108,
                          47,49,42]},
                        {sep,
                         [{text,
                           "|no longer returns the fun, but the module, function for the local function implementing the fun, and the arity, for example,"}],
                         0,false},
                        {text," *{some_module,-work/3-fun-0-,0}*"},
                        {sep,
                         [{text,
                           "-(meaning that the fun was created in function"}],
                         0,false},
                        {text,
                         [20,42,115,111,109,101,95,109,111,100,117,108,101,58,
                          119,111,114,107,47,51,42]},
                        {sep,
                         [{text,
                           [137,41,46,32,84,104,101,32,114,101,97,115,111,110,
                            32,105,115,32,116,104,97,116,32,107,101,101,112,
                            105,110,103,32,116,104,101,32,102,117,110,32,119,
                            111,117,108,100,32,112,114,101,118,101,110,116,32,
                            99,111,100,101,32,117,112,103,114,97,100,101,32,
                            102,111,114,32,116,104,101,32,109,111,100,117,108,
                            101,44,32,97,110,100,32,116,104,97,116,32,97,32,
                            115,105,103,110,105,102,105,99,97,110,116,32,97,
                            109,111,117,110,116,32,111,102,32,109,101,109,111,
                            114,121,32,99,111,117,108,100,32,98,101,32,119,97,
                            115,116,101,100,46]}],
                         0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n## spawn/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n## spawn/2"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n## spawn/3"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n## spawn/4"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [20,83,112,97,119,110,32,97,32,110,101,119,32,112,114,111,99,101,
             115,115,46]}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,[{text,[1,42]},{text,[4,78,111,100,101]}],0,false},
    {sep,[{text,[1,42]},{text,[3,70,117,110]}],0,false},
    {sep,[{text,[1,42]},{text,[6,77,111,100,117,108,101]}],0,false},
    {sep,[{text,[1,42]},{text,"\bFunction"}],0,false},
    {sep,[{text,[1,42]},{text,[4,65,114,103,115]}],0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "{Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the"}],
              0,false},
             {text,"-[erts/erlang#spawn/1](../erts/erlang#spawn/1)"},
             {sep,[{text,[5,66,73,70,115,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,35,32,115,112,97,119,110,95,108,105,110,107,47,49]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,35,32,115,112,97,119,110,95,108,105,110,107,47,50]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,35,32,115,112,97,119,110,95,108,105,110,107,47,51]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,35,32,115,112,97,119,110,95,108,105,110,107,47,52]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text," Spawn and link to a new process."}],0,false}],
        0,true},
       null},
      null}},
    {sep,[{text,[1,42]},{text,[4,78,111,100,101]}],0,false},
    {sep,[{text,[1,42]},{text,[3,70,117,110]}],0,false},
    {sep,[{text,[1,42]},{text,[6,77,111,100,117,108,101]}],0,false},
    {sep,[{text,[1,42]},{text,"\bFunction"}],0,false},
    {sep,[{text,[1,42]},{text,[4,65,114,103,115]}],0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "{Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the"}],
              0,false},
             {text,"7[erts/erlang#spawn_link/1](../erts/erlang#spawn_link/1)"},
             {sep,[{text,[5,66,73,70,115,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[14,35,35,32,115,112,97,119,110,95,111,112,116,47,50]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[14,35,35,32,115,112,97,119,110,95,111,112,116,47,51]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[14,35,35,32,115,112,97,119,110,95,111,112,116,47,52]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[14,35,35,32,115,112,97,119,110,95,111,112,116,47,53]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,"+Spawn a new process with specified options."}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,[{text,[1,42]},{text,[4,78,111,100,101]}],0,false},
    {sep,[{text,[1,42]},{text,[3,70,117,110]}],0,false},
    {sep,[{text,[1,42]},{text,[6,77,111,100,117,108,101]}],0,false},
    {sep,[{text,[1,42]},{text,"\bFunction"}],0,false},
    {sep,[{text,[1,42]},{text,[4,65,114,103,115]}],0,false},
    {sep,[{text,[1,42]},{text,"\tSpawnOpts"}],0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "{Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the"}],
              0,false},
             {text,"5[erts/erlang#spawn_opt/2](../erts/erlang#spawn_opt/2)"},
             {sep,[{text,[5,66,73,70,115,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           [18,85,115,105,110,103,32,115,112,97,119,110,32,
                            111,112,116,105,111,110]}],
                         0,false},
                        {text,"\t*monitor*"},
                        {sep,
                         [{text,
                           ":is not allowed. It causes the function to fail with reason"}],
                         0,false},
                        {text,"\b*badarg*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n## start/3"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n## start/4"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\n## start/5"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,35,32,115,116,97,114,116,95,108,105,110,107,47,51]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,35,32,115,116,97,114,116,95,108,105,110,107,47,52]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[15,35,35,32,115,116,97,114,116,95,108,105,110,107,47,53]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Start a new process synchronously."}],0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "rStarts a new process synchronously. Spawns the process and waits for it to start. When the process has started, it"}],
              0,false},
             {text,"\b**must**"},
             {sep,[{text,[4,99,97,108,108]}],0,false},
             {text,
              [25,91,105,110,105,116,95,97,99,107,47,50,93,40,35,105,110,105,
               116,95,97,99,107,47,50,41]},
             {sep,[{text,[2,111,114]}],0,false},
             {text,
              [25,91,105,110,105,116,95,97,99,107,47,49,93,40,35,105,110,105,
               116,95,97,99,107,47,49,41]},
             {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
             {text,"\b*Parent*"},
             {sep,
              [{text,
                ":is the process that evaluates this function. At this time,"}],
              0,false},
             {text,[5,42,82,101,116,42]},
             {sep,[{text,"\fis returned."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\vIf function"}],0,false},
             {text,
              [18,42,115,116,97,114,116,95,108,105,110,107,47,51,44,52,44,53,
               42]},
             {sep,
              [{text,"4is used and the process crashes before it has called"}],
              0,false},
             {text,[14,42,105,110,105,116,95,97,99,107,47,49,44,50,42]},
             {sep,[{text,[1,44]}],0,false},
             {sep,
              [{text,[1,42]},
               {sep,
                [{sep,[{text,[7,123,101,114,114,111,114,44]}],0,false},
                 {sep,[{text,[6,82,101,97,115,111,110]}],0,false},
                 {sep,[{text,[1,125]}],0,false}],
                0,false},
               {text,[1,42]}],
              0,false},
             {sep,
              [{text,"/is returned if the calling process traps exits."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[2,73,102]}],0,false},
             {text,[6,42,84,105,109,101,42]},
             {sep,
              [{text,"3is specified as an integer, this function waits for"}],
              0,false},
             {text,[6,42,84,105,109,101,42]},
             {sep,
              [{text,"(milliseconds for the new process to call"}],
              0,false},
             {text,"\n*init_ack*"},
             {sep,[{text,[4,44,32,111,114]}],0,false},
             {text,
              [18,42,123,101,114,114,111,114,44,32,116,105,109,101,111,117,
               116,125,42]},
             {sep,
              [{text,"'is returned, and the process is killed."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\bArgument"}],0,false},
             {text,"\v*SpawnOpts*"},
             {sep,
              [{text,
                "5, if specified, is passed as the last argument to the"}],
              0,false},
             {text,"5[erts/erlang#spawn_opt/2](../erts/erlang#spawn_opt/2)"},
             {sep,[{text,[4,66,73,70,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {above,
          {above,
           {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
           {sep,
            [{text,[4,32,32,32,32]},
             {sep,
              [{sep,
                [{above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{sep,
                       [{sep,
                         [{text,
                           [18,85,115,105,110,103,32,115,112,97,119,110,32,
                            111,112,116,105,111,110]}],
                         0,false},
                        {text,"\t*monitor*"},
                        {sep,
                         [{text,
                           ":is not allowed. It causes the function to fail with reason"}],
                         0,false},
                        {text,"\b*badarg*"},
                        {sep,[{text,[1,46]}],0,false}],
                       0,false}],
                     0,true},
                    null},
                   null}}],
                0,false}],
              0,true}],
            0,false}},
          {text,[0]}},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\t## stop/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Terminate a process synchronously."}],0,false}],
        0,true},
       null},
      null}},
    {sep,[{text,[1,42]},{text,[7,80,114,111,99,101,115,115]}],0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\rEquivalent to"}],0,false},
             {text,
              [17,91,115,116,111,112,47,51,93,40,35,115,116,111,112,47,51,41]},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\t## stop/3"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,[{text,"\"Terminate a process synchronously."}],0,false}],
        0,true},
       null},
      null}},
    {sep,[{text,[1,42]},{text,[7,80,114,111,99,101,115,115]}],0,false},
    {sep,[{text,[1,42]},{text,[6,82,101,97,115,111,110]}],0,false},
    {sep,[{text,[1,42]},{text,[7,84,105,109,101,111,117,116]}],0,false},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"-Orders the process to exit with the specified"}],
              0,false},
             {text,"\b*Reason*"},
             {sep,
              [{text,
                [30,97,110,100,32,119,97,105,116,115,32,102,111,114,32,105,
                 116,32,116,111,32,116,101,114,109,105,110,97,116,101,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[7,82,101,116,117,114,110,115]}],0,false},
             {text,[4,42,111,107,42]},
             {sep,[{text,"'if the process exits with the specified"}],0,false},
             {text,"\b*Reason*"},
             {sep,[{text,[6,119,105,116,104,105,110]}],0,false},
             {text,"\t*Timeout*"},
             {sep,[{text,"\rmilliseconds."}],0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                [24,73,102,32,116,104,101,32,99,97,108,108,32,116,105,109,101,
                 115,32,111,117,116,44,32,97]}],
              0,false},
             {text,"\t*timeout*"},
             {sep,
              [{text,
                [20,101,120,99,101,112,116,105,111,110,32,105,115,32,114,97,
                 105,115,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text," If the process does not exist, a"}],0,false},
             {text,"\b*noproc*"},
             {sep,
              [{text,
                [20,101,120,99,101,112,116,105,111,110,32,105,115,32,114,97,
                 105,115,101,100,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,"3The implementation of this function is based on the"}],
              0,false},
             {text,"\v*terminate*"},
             {sep,
              [{text,
                "{system message, and requires that the process handles system messages correctly. For information about system messages, see"}],
              0,false},
             {text,"\n[sys](sys)"},
             {sep,[{text,"\vand section"}],0,false},
             {text,
              [31,91,115,121,115,32,97,110,100,32,112,114,111,99,95,108,105,
               98,93,40,46,47,115,112,101,99,95,112,114,111,99,41]},
             {sep,
              [{text,
                [25,105,110,32,79,84,80,32,68,101,115,105,103,110,32,80,114,
                 105,110,99,105,112,108,101,115,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\e## translate_initial_call/1"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"+Extract and translate the initial call of a"}],
            0,false},
           {text,"\n*proc_lib*"},
           {sep,
            [{text,
              [16,115,112,97,119,110,101,100,32,112,114,111,99,101,115,115,
               46]}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}},
    {sep,
     [{above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\"This function is used by functions"}],0,false},
             {text,[16,91,99,35,105,47,48,93,40,46,47,99,35,105,47,48,41]},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,
              [22,91,99,35,114,101,103,115,47,48,93,40,46,47,99,35,114,101,
               103,115,47,48,41]},
             {sep,
              [{text,
                [31,116,111,32,112,114,101,115,101,110,116,32,112,114,111,99,
                 101,115,115,32,105,110,102,111,114,109,97,116,105,111,110,
                 46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "­This function extracts the initial call of a process that was started using one of the spawn or start functions in this module, and translates it to more useful information."}],
              0,false},
             {text,"\t*Process*"},
             {sep,
              [{text,
                "pcan either be a pid, an integer tuple (from which a pid can be created), or the process information of a process"}],
              0,false},
             {text,[5,42,80,105,100,42]},
             {sep,
              [{text,
                [18,102,101,116,99,104,101,100,32,116,104,114,111,117,103,104,
                 32,97,110]}],
              0,false},
             {text,
              [26,42,101,114,108,97,110,103,58,112,114,111,99,101,115,115,95,
               105,110,102,111,40,80,105,100,41,42]},
             {sep,
              [{text,[14,102,117,110,99,116,105,111,110,32,99,97,108,108,46]}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,
              [{text,
                "EIf the initial call is to one of the system-defined behaviors such as"}],
              0,false},
             {text,"\f*gen_server*"},
             {sep,[{text,[2,111,114]}],0,false},
             {text,"\v*gen_event*"},
             {sep,
              [{text,"3, it is translated to more useful information. If a"}],
              0,false},
             {text,"\f*gen_server*"},
             {sep,
              [{text,
                [24,105,115,32,115,112,97,119,110,101,100,44,32,116,104,101,
                 32,114,101,116,117,114,110,101,100]}],
              0,false},
             {text,"\b*Module*"},
             {sep,[{text,"&is the name of the callback module and"}],0,false},
             {text,"\n*Function*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[6,42,105,110,105,116,42]},
             {sep,
              [{text,"-(the function that initiates the new server)."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,[1,65]}],0,false},
             {text,"\f*supervisor*"},
             {sep,[{text,[5,97,110,100,32,97]}],0,false},
             {text,
              [19,42,115,117,112,101,114,118,105,115,111,114,95,98,114,105,
               100,103,101,42]},
             {sep,[{text,"\bare also"}],0,false},
             {text,"\f*gen_server*"},
             {sep,
              [{text,
                "gprocesses. To return information that this process is a supervisor and the name of the callback module,"}],
              0,false},
             {text,"\b*Module*"},
             {sep,[{text,[2,105,115]}],0,false},
             {text,"\f*supervisor*"},
             {sep,[{text,[3,97,110,100]}],0,false},
             {text,"\n*Function*"},
             {sep,
              [{text,".is the name of the supervisor callback module."}],
              0,false},
             {text,[7,42,65,114,105,116,121,42]},
             {sep,[{text,[2,105,115]}],0,false},
             {text,[3,42,49,42]},
             {sep,[{text,"\b, as the"}],0,false},
             {text,"\b*init/1*"},
             {sep,
              [{text,"4function is called initially in the callback module."}],
              0,false}],
            0,false}],
          0,true},
         null},
        null}},
      {above,
       {above,{above,{text,[0]},null},null},
       {above,
        {above,
         {sep,
          [{sep,
            [{sep,[{text,"\vBy default,"}],0,false},
             {text,
              [21,42,123,112,114,111,99,95,108,105,98,44,105,110,105,116,95,
               112,44,53,125,42]},
             {sep,
              [{text,
                [145,105,115,32,114,101,116,117,114,110,101,100,32,105,102,32,
                 110,111,32,105,110,102,111,114,109,97,116,105,111,110,32,97,
                 98,111,117,116,32,116,104,101,32,105,110,105,116,105,97,108,
                 32,99,97,108,108,32,99,97,110,32,98,101,32,102,111,117,110,
                 100,46,32,73,116,32,105,115,32,97,115,115,117,109,101,100,32,
                 116,104,97,116,32,116,104,101,32,99,97,108,108,101,114,32,
                 107,110,111,119,115,32,116,104,97,116,32,116,104,101,32,112,
                 114,111,99,101,115,115,32,104,97,115,32,98,101,101,110,32,
                 115,112,97,119,110,101,100,32,119,105,116,104,32,116,104,
                 101]}],
              0,false},
             {text,"\n*proc_lib*"},
             {sep,[{text,[7,109,111,100,117,108,101,46]}],0,false}],
            0,false}],
          0,true},
         null},
        null}}],
     0,false}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v## See Also"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"%[kernel/error_logger](./error_logger)"}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [25,91,107,101,114,110,101,108,47,108,111,103,103,101,114,93,40,46,
            47,108,111,103,103,101,114,41]}],
         0,false}],
       0,true},
      null},
     null}}],
  0,false}}
