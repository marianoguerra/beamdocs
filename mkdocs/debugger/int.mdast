{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[5,35,32,105,110,116]},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,[5,35,32,105,110,116]},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [22,73,110,116,101,114,112,114,101,116,101,114,32,73,110,116,101,
             114,102,97,99,101,46]}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,
                  [{text,
                    "¤The Erlang interpreter provides mechanisms for breakpoints and stepwise execution of code. It is primarily intended to be used by Debugger, see the User's Guide and"}],
                  0,false},
                 {text,
                  [20,91,100,101,98,117,103,103,101,114,93,40,100,101,98,117,
                   103,103,101,114,41]},
                 {sep,[{text,[1,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,")The following can be done from the shell:"}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,
            {sep,
             [{text,[1,42]},{text,"&Specify the modules to be interpreted."}],
             0,false},
            {sep,
             [{text,[1,42]},
              {text,
               [20,83,112,101,99,105,102,121,32,98,114,101,97,107,112,111,105,
                110,116,115,46]}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {text,
              "xMonitor the current status of all processes executing code in interpreted modules, also processes at other Erlang nodes."}],
            0,false}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,[2,66,121]}],0,false},
                 {text,
                  [16,42,42,97,116,116,97,99,104,105,110,103,32,116,111,42,
                   42]},
                 {sep,
                  [{text,
                    [280,97,32,112,114,111,99,101,115,115,32,101,120,101,99,
                     117,116,105,110,103,32,105,110,116,101,114,112,114,101,
                     116,101,100,32,99,111,100,101,44,32,105,116,32,105,115,
                     32,112,111,115,115,105,98,108,101,32,116,111,32,101,120,
                     97,109,105,110,101,32,118,97,114,105,97,98,108,101,32,98,
                     105,110,100,105,110,103,115,32,97,110,100,32,111,114,100,
                     101,114,32,115,116,101,112,119,105,115,101,32,101,120,
                     101,99,117,116,105,111,110,46,32,84,104,105,115,32,105,
                     115,32,100,111,110,101,32,98,121,32,115,101,110,100,105,
                     110,103,32,97,110,100,32,114,101,99,101,105,118,105,110,
                     103,32,105,110,102,111,114,109,97,116,105,111,110,32,116,
                     111,47,102,114,111,109,32,116,104,101,32,112,114,111,99,
                     101,115,115,32,116,104,114,111,117,103,104,32,97,32,116,
                     104,105,114,100,32,112,114,111,99,101,115,115,44,32,99,
                     97,108,108,101,100,32,116,104,101,32,109,101,116,97,32,
                     112,114,111,99,101,115,115,46,32,89,111,117,32,99,97,110,
                     32,105,109,112,108,101,109,101,110,116,32,121,111,117,
                     114,32,111,119,110,32,97,116,116,97,99,104,101,100,32,
                     112,114,111,99,101,115,115,46,32,83,101,101]}],
                  0,false},
                 {text,"\t*int.erl*"},
                 {sep,[{text,"\efor available functions and"}],0,false},
                 {text,
                  [18,42,100,98,103,95,119,120,95,116,114,97,99,101,46,101,
                   114,108,42]},
                 {sep,
                  [{text,
                    [22,102,111,114,32,112,111,115,115,105,98,108,101,32,109,
                     101,115,115,97,103,101,115,46]}],
                  0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{text,
                  [283,84,104,101,32,105,110,116,101,114,112,114,101,116,101,
                   114,32,100,101,112,101,110,100,115,32,111,110,32,116,104,
                   101,32,75,101,114,110,101,108,44,32,83,84,68,76,73,66,44,
                   32,97,110,100,32,71,83,32,97,112,112,108,105,99,97,116,105,
                   111,110,115,46,32,84,104,105,115,32,109,101,97,110,115,32,
                   116,104,97,116,32,109,111,100,117,108,101,115,32,98,101,
                   108,111,110,103,105,110,103,32,116,111,32,97,110,121,32,
                   111,102,32,116,104,101,115,101,32,97,112,112,108,105,99,97,
                   116,105,111,110,115,32,97,114,101,32,110,111,116,32,97,108,
                   108,111,119,101,100,32,116,111,32,98,101,32,105,110,116,
                   101,114,112,114,101,116,101,100,44,32,97,115,32,105,116,32,
                   99,111,117,108,100,32,108,101,97,100,32,116,111,32,97,32,
                   100,101,97,100,108,111,99,107,32,111,114,32,101,109,117,
                   108,97,116,111,114,32,99,114,97,115,104,46,32,84,104,105,
                   115,32,97,108,115,111,32,97,112,112,108,105,101,115,32,116,
                   111,32,109,111,100,117,108,101,115,32,98,101,108,111,110,
                   103,105,110,103,32,116,111,32,116,104,101,32,68,101,98,117,
                   103,103,101,114,32,97,112,112,108,105,99,97,116,105,111,
                   110,46]}],
                0,false}],
              0,true},
             null},
            null}}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{text,"-<a name=\"int_breakpoints\">int_breakpoints</a>"},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {text,[14,35,35,32,66,114,101,97,107,112,111,105,110,116,115]},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "ûBreakpoints are specified on a line basis. When a process executing code in an interpreted module reaches a breakpoint, it stops. This means that a breakpoint must be set at an executable line, that is, a code line containing an executable expression."}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            [31,65,32,98,114,101,97,107,112,111,105,110,116,32,104,97,115,32,
             116,104,101,32,102,111,108,108,111,119,105,110,103,58]}],
          0,false}],
        0,true},
       null},
      null}},
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,
             [18,65,32,115,116,97,116,117,115,44,32,119,104,105,99,104,32,105,
              115]}],
           0,false},
          {text,"\n**active**"},
          {sep,[{text,[2,111,114]}],0,false},
          {text,"\f**inactive**"},
          {sep,[{text,"$. An inactive breakpoint is ignored."}],0,false}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{text,
             "yA trigger action. When a breakpoint is reached, the trigger action specifies if the breakpoint is to continue as active ("}],
           0,false},
          {text,"\n**enable**"},
          {sep,
           [{text,
             [26,41,44,32,111,114,32,116,111,32,98,101,99,111,109,101,32,105,
              110,97,99,116,105,118,101,32,40]}],
           0,false},
          {text,"\v**disable**"},
          {sep,
           [{text,
             [21,41,44,32,111,114,32,116,111,32,98,101,32,114,101,109,111,118,
              101,100,32,40]}],
           0,false},
          {text,"\n**delete**"},
          {sep,[{text,[2,41,46]}],0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{sep,
          [{text,
            ":Optionally an associated condition. A condition is a tuple"}],
          0,false},
         {text,[15,42,123,77,111,100,117,108,101,44,78,97,109,101,125,42]},
         {sep,[{text,"!. When the breakpoint is reached,"}],0,false},
         {text,
          [23,42,77,111,100,117,108,101,58,78,97,109,101,40,66,105,110,100,
           105,110,103,115,41,42]},
         {sep,
          [{text,
            [29,105,115,32,99,97,108,108,101,100,46,32,73,102,32,105,116,32,
             101,118,97,108,117,97,116,101,115,32,116,111]}],
          0,false},
         {text,[6,42,116,114,117,101,42]},
         {sep,[{text,"%, execution stops. If it evaluates to"}],0,false},
         {text,[7,42,102,97,108,115,101,42]},
         {sep,
          [{text,
            [28,44,32,116,104,101,32,98,114,101,97,107,112,111,105,110,116,32,
             105,115,32,105,103,110,111,114,101,100,46]}],
          0,false},
         {text,"\n*Bindings*"},
         {sep,
          [{text,
            "[contains the current variable bindings. To retrieve the value for a specified variable, use"}],
          0,false},
         {text,"\r*get_binding*"},
         {sep,[{text,[1,46]}],0,false}],
        0,false}],
      0,false}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,
            [{text,"6By default, a breakpoint is active, has trigger action"}],
            0,false},
           {text,"\b*enable*"},
           {sep,
            [{text,
              "W, and has no associated condition. For details about breakpoints, see the User's Guide."}],
            0,false}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"*## i(AbsModule) -> {module,Module} | error"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,105,40,65,98,115,77,111,100,117,108,101,115,41,32,45,62,
        32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"+## ni(AbsModule) -> {module,Module} | error"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [23,35,35,32,110,105,40,65,98,115,77,111,100,117,108,101,115,41,32,45,
        62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [19,73,110,116,101,114,112,114,101,116,32,97,32,109,111,100,117,
            108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [24,65,98,115,77,111,100,117,108,101,115,32,61,32,91,65,98,115,77,
            111,100,117,108,101,93]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"+AbsModule = Module | File | [Module | File]"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,194,160,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,194,160,70,105,108,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"#Interprets the specified module(s)."}],0,false},
            {text,[5,42,105,47,49,42]},
            {sep,
             [{text,"/interprets the module only at the current node."}],
             0,false},
            {text,[6,42,110,105,47,49,42]},
            {sep,
             [{text,")interprets the module at all known nodes."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "@A module can be specified by its module name (atom) or filename."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"0If specified by its module name, the object code"}],
             0,false},
            {text,"\r*Module.beam*"},
            {sep,
             [{text,"4is searched for in the current path. The source code"}],
             0,false},
            {text,"\f*Module.erl*"},
            {sep,
             [{text,
               "Jis searched for first in the same directory as the object code, then in an"}],
             0,false},
            {text,[5,42,115,114,99,42]},
            {sep,
             [{text,
               [21,100,105,114,101,99,116,111,114,121,32,110,101,120,116,32,
                116,111,32,105,116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "EIf specified by its filename, the filename can include a path and the"}],
             0,false},
            {text,[6,42,46,101,114,108,42]},
            {sep,
             [{text,")extension can be omitted. The object code"}],
             0,false},
            {text,"\r*Module.beam*"},
            {sep,
             [{text,
               "Jis searched for first in the same directory as the source code, then in an"}],
             0,false},
            {text,[6,42,101,98,105,110,42]},
            {sep,
             [{text,"3directory next to it, and then in the current path."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "RThe interpreter requires both the source code and the object code. The object code"}],
                        0,false},
                       {text,"\b**must**"},
                       {sep,
                        [{text,
                          "Einclude debug information, that is, only modules compiled with option"}],
                        0,false},
                       {text,"\f*debug_info*"},
                       {sep,
                        [{text,
                          [23,115,101,116,32,99,97,110,32,98,101,32,105,110,
                           116,101,114,112,114,101,116,101,100,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [21,84,104,101,32,102,117,110,99,116,105,111,110,115,32,114,
                101,116,117,114,110,115]}],
             0,false},
            {text,
             [17,42,123,109,111,100,117,108,101,44,77,111,100,117,108,101,125,
              42]},
            {sep,[{text,"(if the module was interpreted, otherwise"}],0,false},
            {text,[7,42,101,114,114,111,114,42]},
            {sep,[{text,"\fis returned."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "©The argument can also be a list of modules or filenames, in which case the function tries to interpret each module as specified earlier. The function then always returns"}],
             0,false},
            {text,[4,42,111,107,42]},
            {sep,[{text," , but prints some information to"}],0,false},
            {text,"\b*stdout*"},
            {sep,[{text,"\"if a module cannot be interpreted."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [21,35,35,32,110,40,65,98,115,77,111,100,117,108,101,41,32,45,62,32,
        111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [22,35,35,32,110,110,40,65,98,115,77,111,100,117,108,101,41,32,45,62,
        32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,[{sep,[{text,"\eStop interpreting a module."}],0,false}],0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,[{text,"+AbsModule = Module | File | [Module | File]"}],0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,194,160,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,194,160,70,105,108,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"(Stops interpreting the specified module."}],0,false},
            {text,[5,42,110,47,49,42]},
            {sep,
             [{text,
               "7stops interpreting the module only at the current node."}],
             0,false},
            {text,[6,42,110,110,47,49,42]},
            {sep,
             [{text,"1stops interpreting the module at all known nodes."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[6,65,115,32,102,111,114]}],0,false},
            {text,[5,42,105,47,49,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[6,42,110,105,47,49,42]},
            {sep,
             [{text,
               ";, a module can be specified by its module name or filename."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,105,110,116,101,114,112,114,101,116,101,100,40,41,32,45,
        62,32,91,77,111,100,117,108,101,93]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,71,101,116,32,97,108,108,32,105,110,116,101,114,112,114,101,
            116,101,100,32,109,111,100,117,108,101,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Returns a list with all interpreted modules."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,",## file(Module) -> File | {error,not_loaded}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"+Get the filename for an interpreted module."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,70,105,108,101,32,61,32,115,116,114,105,110,103,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text," Returns the source code filename"}],0,false},
            {text,[6,42,70,105,108,101,42]},
            {sep,
             [{text,
               [25,102,111,114,32,97,110,32,105,110,116,101,114,112,114,101,
                116,101,100,32,109,111,100,117,108,101]}],
             0,false},
            {text,"\b*Module*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"4## interpretable(AbsModule) -> true | {error,Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"%Check if a module can be interpreted."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [25,65,98,115,77,111,100,117,108,101,32,61,32,77,111,100,117,108,
             101,32,124,32,70,105,108,101]}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,194,160,77,111,100,117,108,101,32,61,32,97,116,111,109,40,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,194,160,70,105,108,101,32,61,32,115,116,114,105,110,103,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          ">Reason = no_src | no_beam | no_debug_info | badarg | {app,App}"}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,194,160,65,112,112,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "UChecks if a module can be interpreted. The module can be specified by its module name"}],
             0,false},
            {text,"\b*Module*"},
            {sep,
             [{text,
               [22,111,114,32,105,116,115,32,115,111,117,114,99,101,32,102,
                105,108,101,110,97,109,101]}],
             0,false},
            {text,[6,42,70,105,108,101,42]},
            {sep,
             [{text,
               "M. If specified by a module name, the module is searched for in the code path."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [20,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                116,117,114,110,115]}],
             0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,
               [30,105,102,32,97,108,108,32,111,102,32,116,104,101,32,102,111,
                108,108,111,119,105,110,103,32,97,112,112,108,121,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {text,"9Both source code and object code for the module is found."}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{sep,[{text,"(The module has been compiled with option"}],0,false},
           {text,"\f*debug_info*"},
           {sep,[{text,[4,115,101,116,46]}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {text,
         "VThe module does not belong to any of the applications Kernel, STDLIB, GS, or Debugger."}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [20,84,104,101,32,102,117,110,99,116,105,111,110,32,114,101,
                116,117,114,110,115]}],
             0,false},
            {text,
             [16,42,123,101,114,114,111,114,44,82,101,97,115,111,110,125,42]},
            {sep,[{text,"$if the module cannot be interpreted."}],0,false},
            {text,"\b*Reason*"},
            {sep,
             [{text,
               [30,99,97,110,32,104,97,118,101,32,116,104,101,32,102,111,108,
                108,111,119,105,110,103,32,118,97,108,117,101,115,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,116,62]},
                      {sep,[{text,[6,110,111,95,115,114,99]}],0,false},
                      {text,[5,60,47,100,116,62]}],
                     0,true},
                    null},
                   null}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,
                              [{text,
                                "{No source code is found. It is assumed that the source code and object code are located either in the same directory, or in"}],
                              0,false},
                             {text,[3,115,114,99]},
                             {sep,[{text,[3,97,110,100]}],0,false},
                             {text,[4,101,98,105,110]},
                             {sep,
                              [{text,
                                [31,100,105,114,101,99,116,111,114,105,101,
                                 115,32,110,101,120,116,32,116,111,32,101,97,
                                 99,104,32,111,116,104,101,114,46]}],
                              0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,[7,110,111,95,98,101,97,109]}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "{No object code is found. It is assumed that the source code and object code are located either in the same directory, or in"}],
                            0,false},
                           {text,[3,115,114,99]},
                           {sep,[{text,[3,97,110,100]}],0,false},
                           {text,[4,101,98,105,110]},
                           {sep,
                            [{text,
                              [31,100,105,114,101,99,116,111,114,105,101,115,
                               32,110,101,120,116,32,116,111,32,101,97,99,104,
                               32,111,116,104,101,114,46]}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\rno_debug_info"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{sep,
                          [{text,
                            ",The module has not been compiled with option"}],
                          0,false},
                         {text,"\ndebug_info"},
                         {sep,[{text,[4,115,101,116,46]}],0,false}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[6,98,97,100,97,114,103]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,"\tAbsModule"},
                       {sep,
                        [{text,
                          "Qis not found. This could be because the specified file does not exist, or because"}],
                        0,false},
                       {text,"\fcode:which/1"},
                       {sep,
                        [{text,
                          [143,100,111,101,115,32,110,111,116,32,114,101,116,
                           117,114,110,32,97,32,66,69,65,77,32,102,105,108,
                           101,110,97,109,101,44,32,119,104,105,99,104,32,105,
                           115,32,116,104,101,32,99,97,115,101,32,110,111,116,
                           32,111,110,108,121,32,102,111,114,32,110,111,110,
                           45,101,120,105,115,116,105,110,103,32,109,111,100,
                           117,108,101,115,32,98,117,116,32,97,108,115,111,32,
                           102,111,114,32,109,111,100,117,108,101,115,32,116,
                           104,97,116,32,97,114,101,32,112,114,101,108,111,97,
                           100,101,100,32,111,114,32,99,111,118,101,114,45,99,
                           111,109,112,105,108,101,100,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,"\t{app,App}"}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,[3,65,112,112]},
                     {sep,[{text,[2,105,115]}],0,false},
                     {text,[6,107,101,114,110,101,108]},
                     {sep,[{text,[1,44]}],0,false},
                     {text,[6,115,116,100,108,105,98]},
                     {sep,[{text,[1,44]}],0,false},
                     {text,[2,103,115]},
                     {sep,[{text,[4,44,32,111,114]}],0,false},
                     {text,"\bdebugger"},
                     {sep,[{text,[2,105,102]}],0,false},
                     {text,"\tAbsModule"},
                     {sep,
                      [{text,"%belongs to one of these applications."}],
                      0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"#Notice that the function can return"}],0,false},
            {text,[6,42,116,114,117,101,42]},
            {sep,
             [{text,
               "åfor a module that in fact is not interpretable in the case where the module is marked as sticky or resides in a directory marked as sticky. The reason is that this is not discovered until the interpreter tries to load the module."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,",## auto_attach() -> false | {Flags,Function}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [21,35,35,32,97,117,116,111,95,97,116,116,97,99,104,40,102,97,108,115,
        101,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,97,117,116,111,95,97,116,116,97,99,104,40,70,108,97,103,
        115,44,32,70,117,110,99,116,105,111,110,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"0Get and set when and how to attach to a process."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [29,70,108,97,103,115,32,61,32,91,105,110,105,116,32,124,32,98,114,
            101,97,107,32,124,32,101,120,105,116,93]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [29,70,117,110,99,116,105,111,110,32,61,32,123,77,111,100,117,108,
            101,44,78,97,109,101,44,65,114,103,115,125]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,194,160,77,111,100,117,108,101,32,61,32,78,97,109,101,32,61,32,
           97,116,111,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [17,194,160,65,114,103,115,32,61,32,91,116,101,114,109,40,41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "fGets and sets when and how to attach automatically to a process executing code in interpreted modules."}],
             0,false},
            {text,[7,42,102,97,108,115,101,42]},
            {sep,
             [{text,
               "¥means never attach automatically, this is the default. Otherwise automatic attach is defined by a list of flags and a function. The following flags can be specified:"}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[6,42,105,110,105,116,42]},
           {sep,
            [{text,
              "I- Attach when a process for the first time calls an interpreted function."}],
            0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[7,42,98,114,101,97,107,42]},
           {sep,
            [{text,"1- Attach whenever a process reaches a breakpoint."}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[6,42,101,120,105,116,42]},
          {sep,[{text,"#- Attach when a process terminates."}],0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"-When the specified event occurs, the function"}],
             0,false},
            {text,"\n*Function*"},
            {sep,[{text,"\ris called as:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,[{text,"\"\nspawn(Module, Name, [Pid | Args])"}],0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[5,42,80,105,100,42]},
            {sep,
             [{text,"5is the pid of the process executing interpreted code."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [24,35,35,32,115,116,97,99,107,95,116,114,97,99,101,40,41,32,45,62,32,
        70,108,97,103]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [20,35,35,32,115,116,97,99,107,95,116,114,97,99,101,40,70,108,97,103,
        41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"+Get and set if and how to save call frames."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [28,70,108,97,103,32,61,32,97,108,108,32,124,32,110,111,95,116,97,105,
         108,32,124,32,102,97,108,115,101]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [260,71,101,116,115,32,97,110,100,32,115,101,116,115,32,104,111,
              119,32,116,111,32,115,97,118,101,32,99,97,108,108,32,102,114,97,
              109,101,115,32,105,110,32,116,104,101,32,115,116,97,99,107,46,
              32,83,97,118,105,110,103,32,99,97,108,108,32,102,114,97,109,101,
              115,32,109,97,107,101,115,32,105,116,32,112,111,115,115,105,98,
              108,101,32,116,111,32,105,110,115,112,101,99,116,32,116,104,101,
              32,99,97,108,108,32,99,104,97,105,110,32,111,102,32,97,32,112,
              114,111,99,101,115,115,44,32,97,110,100,32,105,115,32,97,108,
              115,111,32,117,115,101,100,32,116,111,32,101,109,117,108,97,116,
              101,32,116,104,101,32,115,116,97,99,107,32,116,114,97,99,101,32,
              105,102,32,97,110,32,101,114,114,111,114,32,40,97,110,32,101,
              120,99,101,112,116,105,111,110,32,111,102,32,99,108,97,115,115,
              32,101,114,114,111,114,41,32,111,99,99,117,114,115,46,32,84,104,
              101,32,102,111,108,108,111,119,105,110,103,32,102,108,97,103,
              115,32,99,97,110,32,98,101,32,115,112,101,99,105,102,105,101,
              100,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,116,62]},
                  {sep,[{text,[3,97,108,108]}],0,false},
                  {text,[5,60,47,100,116,62]}],
                 0,true},
                null},
               null}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "eSave information about all current calls, that is, function calls that have not yet returned a value."}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[7,110,111,95,116,97,105,108]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "ýSave information about current calls, but discard previous information when a tail recursive call is made. This option consumes less memory and can be necessary to use for processes with long lifetimes and many tail recursive calls. This is the default."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,[5,102,97,108,115,101]}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,"'Save no information about currentcalls."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"3## break(Module, Line) -> ok | {error,break_exists}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,67,114,101,97,116,101,32,97,32,98,114,101,97,107,112,111,105,
            110,116,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\fLine = int()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,67,114,101,97,116,101,115,32,97,32,98,114,101,97,107,112,
                111,105,110,116,32,97,116]}],
             0,false},
            {text,[6,42,76,105,110,101,42]},
            {sep,[{text,[2,105,110]}],0,false},
            {text,"\b*Module*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"### delete_break(Module, Line) -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,68,101,108,101,116,101,32,97,32,98,114,101,97,107,112,111,105,
            110,116,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\fLine = int()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [25,68,101,108,101,116,101,115,32,116,104,101,32,98,114,101,97,
                107,112,111,105,110,116,32,97,116]}],
             0,false},
            {text,[6,42,76,105,110,101,42]},
            {sep,[{text,[2,105,110]}],0,false},
            {text,"\b*Module*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "D## break_in(Module, Name, Arity) -> ok\n\t| {error,function_not_found}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"-Create breakpoints in the specified function."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [22,77,111,100,117,108,101,32,61,32,78,97,109,101,32,61,32,97,116,
          111,109,40,41]}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\rArity = int()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BCreates a breakpoint at the first line of every clause of function"}],
             0,false},
            {text,
             [19,42,77,111,100,117,108,101,58,78,97,109,101,47,65,114,105,116,
              121,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "L## del_break_in(Module, Name, Arity) -> ok\n\t| {error,function_not_found}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"/Delete breakpoints from the specified function."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [22,77,111,100,117,108,101,32,61,32,78,97,109,101,32,61,32,97,116,
          111,109,40,41]}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\rArity = int()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "EDeletes the breakpoints at the first line of every clause of function"}],
             0,false},
            {text,
             [19,42,77,111,100,117,108,101,58,78,97,109,101,47,65,114,105,116,
              121,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [19,35,35,32,110,111,95,98,114,101,97,107,40,41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [25,35,35,32,110,111,95,98,114,101,97,107,40,77,111,100,117,108,101,41,
        32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,68,101,108,101,116,101,32,97,108,108,32,98,114,101,97,107,112,
            111,105,110,116,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".Deletes all breakpoints, or all breakpoints in"}],
             0,false},
            {text,"\b*Module*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"$## disable_break(Module, Line) -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,[{sep,[{text,"\eMake a breakpoint inactive."}],0,false}],0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\fLine = int()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,77,97,107,101,115,32,116,104,101,32,98,114,101,97,107,112,
                111,105,110,116,32,97,116]}],
             0,false},
            {text,[6,42,76,105,110,101,42]},
            {sep,[{text,[2,105,110]}],0,false},
            {text,"\b*Module*"},
            {sep,[{text,"\tinactive."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"### enable_break(Module, Line) -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [25,77,97,107,101,32,97,32,98,114,101,97,107,112,111,105,110,116,
            32,97,99,116,105,118,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false},
    {sep,[{text,[1,42]},{sep,[{text,"\fLine = int()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,77,97,107,101,115,32,116,104,101,32,98,114,101,97,107,112,
                111,105,110,116,32,97,116]}],
             0,false},
            {text,[6,42,76,105,110,101,42]},
            {sep,[{text,[2,105,110]}],0,false},
            {text,"\b*Module*"},
            {sep,[{text,[7,97,99,116,105,118,101,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,".## action_at_break(Module, Line, Action) -> ok"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"'Set the trigger action of a breakpoint."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
        0,false}],
      0,false},
     {sep,[{text,[1,42]},{sep,[{text,"\fLine = int()"}],0,false}],0,false}},
    {sep,
     [{text,[1,42]},
      {sep,[{text,"\"Action = enable | disable | delete"}],0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,",Sets the trigger action of the breakpoint at"}],
             0,false},
            {text,[6,42,76,105,110,101,42]},
            {sep,[{text,[2,105,110]}],0,false},
            {text,"\b*Module*"},
            {sep,[{text,[2,116,111]}],0,false},
            {text,"\b*Action*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,".## test_at_break(Module, Line, Function) -> ok"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")Set the conditional test of a breakpoint."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,77,111,100,117,108,101,32,61,32,97,116,111,109,40,41]}],
         0,false}],
       0,false},
      {sep,[{text,[1,42]},{sep,[{text,"\fLine = int()"}],0,false}],0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,70,117,110,99,116,105,111,110,32,61,32,123,77,111,100,117,108,
           101,44,78,97,109,101,125]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[15,194,160,78,97,109,101,32,61,32,97,116,111,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".Sets the conditional test of the breakpoint at"}],
             0,false},
            {text,[6,42,76,105,110,101,42]},
            {sep,[{text,[2,105,110]}],0,false},
            {text,"\b*Module*"},
            {sep,[{text,[2,116,111]}],0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,
               "A. The function must fulfill the requirements specified in section"}],
             0,false},
            {text,
             [31,91,66,114,101,97,107,112,111,105,110,116,115,93,40,35,105,
              110,116,95,98,114,101,97,107,112,111,105,110,116,115,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"8## get_binding(Var, Bindings) -> {value,Value} | unbound"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,82,101,116,114,105,101,118,101,32,97,32,118,97,114,105,97,98,
            108,101,32,98,105,110,100,105,110,103,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,[{text,[1,42]},{sep,[{text,"\fVar = atom()"}],0,false}],0,false},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [17,66,105,110,100,105,110,103,115,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[14,86,97,108,117,101,32,61,32,116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [24,82,101,116,114,105,101,118,101,115,32,116,104,101,32,98,
                105,110,100,105,110,103,32,111,102]}],
             0,false},
            {text,[5,42,86,97,114,42]},
            {sep,
             [{text,
               "S. This function is intended to be used by the conditional function of a breakpoint."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,97,108,108,95,98,114,101,97,107,115,40,41,32,45,62,32,91,
        66,114,101,97,107,93]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text," ## all_breaks(Module) -> [Break]"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [20,71,101,116,32,97,108,108,32,98,114,101,97,107,112,111,105,110,
            116,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [23,66,114,101,97,107,32,61,32,123,80,111,105,110,116,44,79,
                  112,116,105,111,110,115,125]}],
               0,false}],
             0,false},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [23,194,160,80,111,105,110,116,32,61,32,123,77,111,100,117,
                  108,101,44,76,105,110,101,125]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [19,194,160,194,160,77,111,100,117,108,101,32,61,32,97,116,
                 111,109,40,41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [16,194,160,194,160,76,105,110,101,32,61,32,105,110,116,40,
                41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,[{text,"'Â Options = [Status,Trigger,null,Cond|]"}],0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [30,194,160,194,160,83,116,97,116,117,115,32,61,32,97,99,116,105,
              118,101,32,124,32,105,110,97,99,116,105,118,101]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,[{text,"'Â Â Trigger = enable | disable | delete"}],0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [26,194,160,194,160,67,111,110,100,32,61,32,110,117,108,108,32,124,
            32,70,117,110,99,116,105,111,110]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [30,194,160,194,160,194,160,70,117,110,99,116,105,111,110,32,61,32,
           123,77,111,100,117,108,101,44,78,97,109,101,125]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [21,194,160,194,160,194,160,194,160,78,97,109,101,32,61,32,97,116,
          111,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"+Gets all breakpoints, or all breakpoints in"}],
             0,false},
            {text,"\b*Module*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## snapshot() -> [Snapshot]"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "?Get information about all processes executing interpreted code."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"(Snapshot = {Pid, Function, Status, Info}"}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},{sep,[{text,"\rÂ Pid = pid()"}],0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [31,194,160,70,117,110,99,116,105,111,110,32,61,32,123,77,111,
                100,117,108,101,44,78,97,109,101,44,65,114,103,115,125]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [26,194,160,194,160,77,111,100,117,108,101,32,61,32,78,97,109,
               101,32,61,32,97,116,111,109,40,41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [19,194,160,194,160,65,114,103,115,32,61,32,91,116,101,114,109,
              40,41,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "<Â Status = idle | running | waiting | break | exit | no_conn"}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,[{text,"(Â Info = {} | {Module,Line} | ExitReason"}],0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [16,194,160,194,160,76,105,110,101,32,61,32,105,110,116,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [23,194,160,194,160,69,120,105,116,82,101,97,115,111,110,32,61,32,
          116,101,114,109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "@Gets information about all processes executing interpreted code."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[5,42,80,105,100,42]},
            {sep,
             [{text,
               [21,45,32,80,114,111,99,101,115,115,32,105,100,101,110,116,105,
                102,105,101,114,46]}],
             0,false}],
           0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"\n*Function*"},
            {sep,
             [{text,"3- First interpreted function called by the process."}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\b*Status*"},
           {sep,[{text," - Current status of the process."}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[6,42,73,110,102,111,42]},
          {sep,
           [{text,
             [19,45,32,77,111,114,101,32,105,110,102,111,114,109,97,116,105,
              111,110,46]}],
           0,false}],
         0,false}],
       0,false}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\b*Status*"},
            {sep,
             [{text,
               [24,105,115,32,111,110,101,32,111,102,32,116,104,101,32,102,
                111,108,108,111,119,105,110,103,58]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {above,
        {above,
         {above,
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,[6,42,105,100,108,101,42]},
              {sep,
               [{text,
                 "6- The process is no longer executing interpreted code."}],
               0,false},
              {text,"\t*Info={}*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"\t*running*"},
              {sep,
               [{text,
                 [25,45,32,84,104,101,32,112,114,111,99,101,115,115,32,105,
                  115,32,114,117,110,110,105,110,103,46]}],
               0,false},
              {text,"\t*Info={}*"},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"\t*waiting*"},
             {sep,
              [{text,
                [29,45,32,84,104,101,32,112,114,111,99,101,115,115,32,105,115,
                 32,119,97,105,116,105,110,103,32,97,116,32,97]}],
              0,false},
             {text,"\t*receive*"},
             {sep,[{text,[1,46]}],0,false},
             {text,"\t*Info={}*"},
             {sep,[{text,[1,46]}],0,false}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[7,42,98,114,101,97,107,42]},
            {sep,
             [{text,
               "9- Process execution is stopped, normally at a breakpoint."}],
             0,false},
            {text,
             [20,42,73,110,102,111,61,123,77,111,100,117,108,101,44,76,105,
              110,101,125,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[6,42,101,120,105,116,42]},
           {sep,
            [{text,
              [28,45,32,84,104,101,32,112,114,111,99,101,115,115,32,105,115,
               32,116,101,114,109,105,110,97,116,101,100,46]}],
            0,false},
           {text,
            [17,42,73,110,102,111,61,69,120,105,116,82,101,97,115,111,110,42]},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"\t*no_conn*"},
          {sep,
           [{text,
             "B- The connection is down to the node where the process is running."}],
           0,false},
          {text,"\t*Info={}*"},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,false}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[16,35,35,32,99,108,101,97,114,40,41,32,45,62,32,111,107]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "=Clear information about processes executing interpreted code."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "uClears information about processes executing interpreted code by removing all information about terminated processes."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"0## continue(Pid) -> ok | {error,not_interpreted}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"2## continue(X,Y,Z) -> ok | {error,not_interpreted}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [25,82,101,115,117,109,101,32,112,114,111,99,101,115,115,32,101,
            120,101,99,117,116,105,111,110,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,[{text,[1,42]},{sep,[{text,"\vPid = pid()"}],0,false}],0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[17,88,32,61,32,89,32,61,32,90,32,61,32,105,110,116,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [29,82,101,115,117,109,101,115,32,112,114,111,99,101,115,115,
                32,101,120,101,99,117,116,105,111,110,32,102,111,114]}],
             0,false},
            {text,[5,42,80,105,100,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[14,42,99,58,112,105,100,40,88,44,89,44,90,41,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
