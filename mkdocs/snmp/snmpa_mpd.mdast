{above,
 {above,
  {above,
   {above,
    {above,
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\v# snmpa_mpd"},null},null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,{above,{text,"\v# snmpa_mpd"},null},null}}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{text,
            "9Message Processing and Dispatch module for the SNMP agent"}],
          0,false}],
        0,true},
       null},
      null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{sep,
                [{sep,[{text,"\nThe module"}],0,false},
                 {text,"\v*snmpa_mpd*"},
                 {sep,
                  [{text,
                    "Â¤implements the version independent Message Processing and Dispatch functionality in SNMP for the agent. It is supposed to be used from a Network Interface process ("}],
                  0,false},
                 {text,".[Definition of Agent Net if](snmp_agent_netif)"},
                 {sep,[{text,[2,41,46]}],0,false}],
                0,false}],
              0,true},
             null},
            null}},
          {text,
           [23,60,97,32,110,97,109,101,61,34,105,110,105,116,34,62,105,110,
            105,116,60,47,97,62]}],
         0,false}],
       0,true},
      null},
     null}}},
  {sep,
   [{above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,"\r## DATA TYPES"},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,
      {above,
       {sep,
        [{sep,
          [{sep,[{text,[7,83,101,101,32,116,104,101]}],0,false},
           {text,"#[data types in](./snmpa_conf#types)"},
           {sep,[{text,[1,46]}],0,false}],
          0,false}],
        0,true},
       null},
      null}}],
   0,false}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,105,110,105,116,40,86,115,110,115,41,32,45,62,32,109,112,
        100,95,115,116,97,116,101,40,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [25,73,110,105,116,105,97,108,105,122,101,32,116,104,101,32,77,80,
            68,32,109,111,100,117,108,101]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,[{text,[1,42]},{sep,[{text,"\fVsns = [Vsn]"}],0,false}],0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [18,86,115,110,32,61,32,118,49,32,124,32,118,50,32,124,32,118,51]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "pThis function can be called from the net_if process at start-up. The options list defines which versions to use."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,[{text,"'It also initializes some SNMP counters."}],0,false}],
         0,true},
        null},
       null}},
     {text,"+<a name=\"process_packet\">process_packet</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [137,35,35,32,112,114,111,99,101,115,115,95,112,97,99,107,101,116,40,
        80,97,99,107,101,116,44,32,70,114,111,109,44,32,83,116,97,116,101,44,
        32,78,111,116,101,83,116,111,114,101,44,32,76,111,103,41,32,45,62,32,
        123,111,107,44,32,86,115,110,44,32,80,100,117,44,32,80,100,117,77,83,
        44,32,65,67,77,68,97,116,97,125,32,124,32,123,100,105,115,99,97,114,
        100,101,100,44,32,82,101,97,115,111,110,125,32,124,32,123,100,105,115,
        99,111,118,101,114,121,44,32,68,105,115,99,111,80,97,99,107,101,116,
        125]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [152,35,35,32,112,114,111,99,101,115,115,95,112,97,99,107,101,116,40,
        80,97,99,107,101,116,44,32,70,114,111,109,44,32,76,111,99,97,108,69,
        110,103,105,110,101,73,68,44,32,83,116,97,116,101,44,32,78,111,116,
        101,83,116,111,114,101,44,32,76,111,103,41,32,45,62,32,123,111,107,44,
        32,86,115,110,44,32,80,100,117,44,32,80,100,117,77,83,44,32,65,67,77,
        68,97,116,97,125,32,124,32,123,100,105,115,99,97,114,100,101,100,44,
        32,82,101,97,115,111,110,125,32,124,32,123,100,105,115,99,111,118,101,
        114,121,44,32,68,105,115,99,111,80,97,99,107,101,116,125]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Process a packet received from the network"}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       [17,80,97,99,107,101,116,32,61,32,98,105,110,97,114,
                        121,40,41]}],
                     0,false}],
                   0,false},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       [23,70,114,111,109,32,61,32,123,84,68,111,109,97,105,
                        110,44,32,84,65,100,100,114,125]}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      "9TDomain = transportDomainUdpIpv4 | transportDomainUdpIpv6"}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     [24,84,65,100,100,114,32,61,32,123,73,112,65,100,100,114,
                      44,32,73,112,80,111,114,116,125]}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [24,76,111,99,97,108,69,110,103,105,110,101,73,68,32,61,
                     32,115,116,114,105,110,103,40,41]}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{sep,
                   [{sep,[{text,"\bIpAddr ="}],0,false},
                    {text,
                     "3[inet:ip_address()](../kernel/inet#type-ip_address)"}],
                   0,false}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,[{text,"\eIpPort = inet:port_number()"}],0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [19,83,116,97,116,101,32,61,32,109,112,100,95,115,116,97,116,
                  101,40,41]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [17,78,111,116,101,83,116,111,114,101,32,61,32,112,105,100,40,
                 41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [16,76,111,103,32,61,32,115,110,109,112,95,108,111,103,40,41]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"-Vsn = 'version-1' | 'version-2' | 'version-3'"}],
            0,false}],
          0,false}},
        {sep,[{text,[1,42]},{sep,[{text,"\nPdu = #pdu"}],0,false}],0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [17,80,100,117,77,115,32,61,32,105,110,116,101,103,101,114,40,
             41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [20,65,67,77,68,97,116,97,32,61,32,97,99,109,95,100,97,116,97,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,82,101,97,115,111,110,32,61,32,116,101,114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [22,68,105,115,99,111,80,97,99,107,101,116,32,61,32,98,105,110,97,
          114,121,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [131,80,114,111,99,101,115,115,101,115,32,97,110,32,105,110,99,
              111,109,105,110,103,32,112,97,99,107,101,116,46,32,80,101,114,
              102,111,114,109,115,32,97,117,116,104,101,110,116,105,99,97,116,
              105,111,110,32,97,110,100,32,100,101,99,114,121,112,116,105,111,
              110,32,97,115,32,110,101,99,101,115,115,97,114,121,46,32,84,104,
              101,32,114,101,116,117,114,110,32,118,97,108,117,101,115,32,115,
              104,111,117,108,100,32,98,101,32,112,97,115,115,101,100,32,116,
              111,32,116,104,101,32,97,103,101,110,116,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "Â¬Note that the use of the LocalEngineID argument is only intended for special cases, if the agent is to \"emulate\" multiple EngineIDs! By default, the agent uses the value of"}],
                        0,false},
                       {text,
                        [14,42,83,110,109,112,69,110,103,105,110,101,73,68,
                         42]},
                       {sep,
                        [{text,
                          [25,40,115,101,101,32,83,78,77,80,45,70,82,65,77,69,
                           87,79,82,75,45,77,73,66,41,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {text,"9<a name=\"generate_response_msg\">generate_response_msg</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "^## generate_response_msg(Vsn, RePdu, Type, ACMData, Log) -> {ok, Packet} | {discarded, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "m## generate_response_msg(Vsn, RePdu, Type, ACMData, LocalEngineID, Log) -> {ok, Packet} | {discarded, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"4Generate a response packet to be sent to the network"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"-Vsn = 'version-1' | 'version-2' | 'version-3'"}],
           0,false}],
         0,false},
        {sep,[{text,[1,42]},{sep,[{text,"\fRePdu = #pdu"}],0,false}],0,false}},
       {sep,[{text,[1,42]},{sep,[{text,"\rType = atom()"}],0,false}],0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [20,65,67,77,68,97,116,97,32,61,32,97,99,109,95,100,97,116,97,40,
            41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,76,111,99,97,108,69,110,103,105,110,101,73,68,32,61,32,115,116,
           114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[17,80,97,99,107,101,116,32,61,32,98,105,110,97,114,121,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "IGenerates a possibly encrypted response packet to be sent to the network."}],
             0,false},
            {text,[6,42,84,121,112,101,42]},
            {sep,[{text,[6,105,115,32,116,104,101]}],0,false},
            {text,"\v*#pdu.type*"},
            {sep,
             [{text,
               [24,111,102,32,116,104,101,32,111,114,105,103,105,110,97,108,
                32,114,101,113,117,101,115,116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "Â¬Note that the use of the LocalEngineID argument is only intended for special cases, if the agent is to \"emulate\" multiple EngineIDs! By default, the agent uses the value of"}],
                        0,false},
                       {text,
                        [14,42,83,110,109,112,69,110,103,105,110,101,73,68,
                         42]},
                       {sep,
                        [{text,
                          [25,40,115,101,101,32,83,78,77,80,45,70,82,65,77,69,
                           87,79,82,75,45,77,73,66,41,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {text,"'<a name=\"generate_msg\">generate_msg</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "d## generate_msg(Vsn, NoteStore, Pdu, MsgData, To) -> {ok, PacketsAndAddresses} | {discarded, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       "s## generate_msg(Vsn, NoteStore, Pdu, MsgData, LocalEngineID, To) -> {ok, PacketsAndAddresses} | {discarded, Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"4Generate a request message to be sent to the network"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,"-Vsn = 'version-1' | 'version-2' | 'version-3'"}],
                 0,false}],
               0,false},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [17,78,111,116,101,83,116,111,114,101,32,61,32,112,105,100,
                    40,41]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},{sep,[{text,"\nPdu = #pdu"}],0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [20,77,115,103,68,97,116,97,32,61,32,109,115,103,95,100,97,
                  116,97,40,41]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [24,76,111,99,97,108,69,110,103,105,110,101,73,68,32,61,32,
                 115,116,114,105,110,103,40,41]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [19,84,111,32,61,32,91,100,101,115,116,95,97,100,100,114,115,
                40,41,93]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,"3PacketsAndAddresses = [{TDomain, TAddress, Packet}]"}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [23,84,68,111,109,97,105,110,32,61,32,115,110,109,112,85,68,80,
              68,111,109,97,105,110]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [20,84,65,100,100,114,101,115,115,32,61,32,123,73,112,44,32,85,
             100,112,125]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"1Ip = {integer(), integer(), integer(), integer()}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,85,100,112,32,61,32,105,110,116,101,103,101,114,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,[17,80,97,99,107,101,116,32,61,32,98,105,110,97,114,121,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "HGenerates a possibly encrypted request packet to be sent to the network."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"\t*MsgData*"},
            {sep,
             [{text,
               "Ris the message specific data used in the SNMP message. This value is received in a"}],
             0,false},
            {text,
             ">[snmp_agent_netif#im_send_pdu](./snmp_agent_netif#im_send_pdu)"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,
             "F[snmp_agent_netif#im_send_pdu_req](./snmp_agent_netif#im_send_pdu_req)"},
            {sep,
             [{text,
               [131,109,101,115,115,97,103,101,32,102,114,111,109,32,116,104,
                101,32,97,103,101,110,116,46,32,73,110,32,83,78,77,80,118,49,
                32,97,110,100,32,83,78,77,80,118,50,99,44,32,116,104,105,115,
                32,109,101,115,115,97,103,101,32,100,97,116,97,32,105,115,32,
                116,104,101,32,99,111,109,109,117,110,105,116,121,32,115,116,
                114,105,110,103,46,32,73,110,32,83,78,77,80,118,51,44,32,105,
                116,32,105,115,32,116,104,101,32,99,111,110,116,101,120,116,
                32,105,110,102,111,114,109,97,116,105,111,110,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[4,42,84,111,42]},
            {sep,
             [{text,
               "Â¥is a list of destination addresses and their corresponding security parameters. This value is received in the same message from the agent and then transformed trough"}],
             0,false},
            {text,"![process_taddrs](#process_taddrs)"},
            {sep,
             [{text,
               [31,98,101,102,111,114,101,32,112,97,115,115,101,100,32,116,
                111,32,116,104,105,115,32,102,117,110,99,116,105,111,110,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "Â¬Note that the use of the LocalEngineID argument is only intended for special cases, if the agent is to \"emulate\" multiple EngineIDs! By default, the agent uses the value of"}],
                        0,false},
                       {text,
                        [14,42,83,110,109,112,69,110,103,105,110,101,73,68,
                         42]},
                       {sep,
                        [{text,
                          [25,40,115,101,101,32,83,78,77,80,45,70,82,65,77,69,
                           87,79,82,75,45,77,73,66,41,46]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {text,"+<a name=\"process_taddrs\">process_taddrs</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\"## process_taddrs(TDests) -> Dests"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "?Transform addresses from internal MIB format to a less internal"}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [16,84,68,101,115,116,115,32,61,32,91,84,68,101,115,116,93]}],
              0,false}],
            0,false},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                "6TDest = {{TDomain, TAddr}, SecData} | {TDomain, TAddr}"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [31,84,68,111,109,97,105,110,32,61,32,116,101,114,109,40,41,32,
                37,32,78,111,116,32,97,116,32,116,117,112,108,101]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,[14,84,65,100,100,114,32,61,32,116,101,114,109,40,41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,[16,83,101,99,68,97,116,97,32,61,32,116,101,114,109,40,41]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[14,68,101,115,116,115,32,61,32,91,68,101,115,116,93]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,"1Dest = {{Domain, Addr}, SecData} | {Domain, Addr}"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [26,68,111,109,97,105,110,32,61,32,116,114,97,110,115,112,111,114,
           116,68,111,109,97,105,110,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,[{text,"-Addr = transportAddress() % Depends on Domain"}],0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "CTransforms addresses from internal MIB format to one more useful to"}],
             0,false},
            {text," [Agent Net if](snmp_agent_netif)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bSee also"}],0,false},
            {text,
             [18,91,46,93,40,35,103,101,110,101,114,97,116,101,95,109,115,103,
              41]}],
           0,false}],
         0,true},
        null},
       null}},
     {text,")<a name=\"discarded_pdu\">discarded_pdu</a>"}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"$## discarded_pdu(Variable) -> void()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"6Increment the variable associated with a discarded pdu"}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,[17,86,97,114,105,97,98,108,101,32,61,32,97,116,111,109,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "uIncrements the variable associated with a discarded pdu. This function can be used when the net_if process receives a"}],
             0,false},
            {text,[15,42,100,105,115,99,97,114,100,101,100,95,112,100,117,42]},
            {sep,
             [{text,
               [23,109,101,115,115,97,103,101,32,102,114,111,109,32,116,104,
                101,32,97,103,101,110,116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
