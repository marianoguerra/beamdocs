{above,
 {above,
  {above,
   {above,
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,[5,35,32,116,116,98]},null},null}},
    {above,
     {above,{above,{text,[0]},null},null},
     {above,{above,{text,[5,35,32,116,116,98]},null},null}}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"8A base for building trace tools for distributed systems."}],
         0,false}],
       0,true},
      null},
     null}}},
  {above,
   {above,{above,{text,[0]},null},null},
   {above,
    {above,
     {sep,
      [{sep,
        [{above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,
                 [{text,
                   [23,84,104,101,32,84,114,97,99,101,32,84,111,111,108,32,66,
                    117,105,108,100,101,114,44]}],
                 0,false},
                {text,[5,42,116,116,98,42]},
                {sep,
                 [{text,
                   "=, is a base for building trace tools for distributed systems."}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{sep,
               [{sep,[{text,"\nWhen using"}],0,false},
                {text,[5,42,116,116,98,42]},
                {sep,
                 [{text,
                   [19,44,32,100,111,32,110,111,116,32,117,115,101,32,109,111,
                    100,117,108,101]}],
                 0,false},
                {text,[5,42,100,98,103,42]},
                {sep,
                 [{text,")in application Runtime_Tools in parallel."}],
                 0,false}],
               0,false}],
             0,true},
            null},
           null}}],
        0,false}],
      0,true},
     null},
    null}}},
 {sep,
  [{above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\v# Functions"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"9## start_trace(Nodes, Patterns, FlagSpec, Opts) -> Result"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Start a trace port on each specified node."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [16,82,101,115,117,108,116,32,61,32,115,101,101,32,112,47,50]}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [20,78,111,100,101,115,32,61,32,115,101,101,32,116,114,97,99,
               101,114,47,50]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [20,80,97,116,116,101,114,110,115,32,61,32,91,116,117,112,108,
              101,40,41,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [25,70,108,97,103,83,112,101,99,32,61,32,123,80,114,111,99,115,44,
             32,70,108,97,103,115,125]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[14,80,114,111,99,32,61,32,115,101,101,32,112,47,50]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[15,70,108,97,103,115,32,61,32,115,101,101,32,112,47,50]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [19,79,112,116,115,32,61,32,115,101,101,32,116,114,97,99,101,114,47,
          50]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "UThis function is a shortcut allowing to start a trace with one command. Each tuple in"}],
             0,false},
            {text,"\n*Patterns*"},
            {sep,
             [{text,"2is converted to a list, which in turn is passed to"}],
             0,false},
            {text,[15,42,116,116,98,58,116,112,108,47,50,44,51,44,52,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\tThe call:"}],0,false}],0,true},null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[3,10,62,32]},
            {text,
             [129,116,116,98,58,115,116,97,114,116,95,116,114,97,99,101,40,91,
              78,111,100,101,44,32,79,116,104,101,114,78,111,100,101,93,44,32,
              91,123,109,111,100,44,32,102,111,111,44,32,91,93,125,44,32,123,
              109,111,100,44,32,98,97,114,44,32,50,125,93,44,32,123,97,108,
              108,44,32,99,97,108,108,125,44,32,91,123,102,105,108,101,44,32,
              70,105,108,101,125,44,32,123,104,97,110,100,108,101,114,44,123,
              102,117,110,32,109,121,104,97,110,100,108,101,114,47,52,44,32,
              83,125,125,93,41,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [17,105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,111,
              58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,[3,10,62,32]},
            {text,
             [150,116,116,98,58,115,116,97,114,116,95,116,114,97,99,101,40,91,
              78,111,100,101,44,32,79,116,104,101,114,78,111,100,101,93,44,32,
              91,123,102,105,108,101,44,32,70,105,108,101,125,44,32,123,104,
              97,110,100,108,101,114,44,123,102,117,110,32,109,121,104,97,110,
              100,108,101,114,47,52,44,32,83,125,125,93,41,44,32,116,116,98,
              58,116,112,108,40,109,111,100,44,32,102,111,111,44,32,91,93,41,
              44,32,116,116,98,58,116,112,108,40,109,111,100,44,32,98,97,114,
              44,32,50,44,32,91,93,41,44,32,116,116,98,58,112,40,97,108,108,
              44,32,99,97,108,108,41,46]}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [21,35,35,32,116,114,97,99,101,114,40,41,32,45,62,32,82,101,115,117,
        108,116]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [29,69,113,117,105,118,97,108,101,110,116,32,116,111,32,116,114,97,
            99,101,114,40,110,111,100,101,40,41,41,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [16,42,116,114,97,99,101,114,40,110,111,100,101,40,41,41,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [29,35,35,32,116,114,97,99,101,114,40,83,104,111,114,116,99,117,116,41,
        32,45,62,32,82,101,115,117,108,116]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,",Handy shortcuts for common tracing settings."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [22,83,104,111,114,116,99,117,116,32,61,32,115,104,101,108,108,32,124,
         32,100,98,103]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,",Handy shortcuts for common tracing settings."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[7,42,115,104,101,108,108,42]},
            {sep,
             [{text,
               [16,105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,
                111]}],
             0,false},
            {text,"0*tracer(node(),[{file, {local, \"ttb\"}}, shell])*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[5,42,100,98,103,42]},
            {sep,
             [{text,
               [16,105,115,32,101,113,117,105,118,97,108,101,110,116,32,116,
                111]}],
             0,false},
            {text," *tracer(node(),[{shell, only}])*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,116,114,97,99,101,114,40,78,111,100,101,115,41,32,45,62,
        32,82,101,115,117,108,116]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [31,69,113,117,105,118,97,108,101,110,116,32,116,111,32,116,114,97,
            99,101,114,40,78,111,100,101,115,44,91,93,41,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [18,42,116,114,97,99,101,114,40,78,111,100,101,115,44,91,93,41,
              42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [31,35,35,32,116,114,97,99,101,114,40,78,111,100,101,115,44,79,112,116,
        115,41,32,45,62,32,82,101,115,117,108,116]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"*Start a trace port on each specified node."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       ".Result = {ok, ActivatedNodes} | {error,Reason}"}],
                     0,false}],
                   0,false},
                  {sep,
                   [{text,[1,42]},
                    {sep,
                     [{text,
                       "0Nodes = atom() | [atom()] | all | existing | new"}],
                     0,false}],
                   0,false}},
                 {sep,
                  [{text,[1,42]},
                   {sep,
                    [{text,
                      [18,79,112,116,115,32,61,32,79,112,116,32,124,32,91,79,
                       112,116,93]}],
                    0,false}],
                  0,false}},
                {sep,
                 [{text,[1,42]},
                  {sep,
                   [{text,
                     "íOpt = {file,Client} | {handler, FormatHandler} | {process_info,PI} | shell | {shell, ShellSpec} | {timer, TimerSpec} | {overload_check, {MSec, Module, Function}} | {flush, MSec} | resume | {resume, FetchTimeout} | {queue_size, QueueSize}"}],
                   0,false}],
                 0,false}},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,"#TimerSpec = MSec | {MSec, StopOpts}"}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [31,77,83,101,99,32,61,32,70,101,116,99,104,84,105,109,101,
                    111,117,116,32,61,32,105,110,116,101,103,101,114,40,41]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  [26,77,111,100,117,108,101,32,61,32,70,117,110,99,116,105,
                   111,110,32,61,32,97,116,111,109,40,41]}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [21,83,116,111,112,79,112,116,115,32,61,32,115,101,101,32,
                  115,116,111,112,47,50]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,
                [29,67,108,105,101,110,116,32,61,32,70,105,108,101,32,124,32,
                 123,108,111,99,97,108,44,32,70,105,108,101,125]}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,
               [22,70,105,108,101,32,61,32,70,105,108,101,110,97,109,101,32,
                124,32,87,114,97,112]}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [19,70,105,108,101,110,97,109,101,32,61,32,115,116,114,105,110,
               103,40,41]}],
            0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,"3Wrap = {wrap,Filename} | {wrap,Filename,Size,Count}"}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            [28,70,111,114,109,97,116,72,97,110,100,108,101,114,32,61,32,83,
             101,101,32,102,111,114,109,97,116,47,50]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [17,80,73,32,61,32,116,114,117,101,32,124,32,102,97,108,115,101]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [31,83,104,101,108,108,83,112,101,99,32,61,32,116,114,117,101,32,
           124,32,102,97,108,115,101,32,124,32,111,110,108,121]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [29,81,117,101,117,101,83,105,122,101,32,61,32,110,111,110,95,110,
          101,103,95,105,110,116,101,103,101,114,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "uStarts a file trace port on all specified nodes and points the system tracer for sequential tracing to the same port."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Options:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,
                          {above,
                           {above,
                            {above,
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,116,62]},
                                  {sep,[{text,"\bFilename"}],0,false},
                                  {text,[5,60,47,100,116,62]}],
                                 0,true},
                                null},
                               null}},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{text,[4,60,100,100,62]},
                                  {above,
                                   {above,{above,{text,[0]},null},null},
                                   {above,
                                    {above,
                                     {sep,
                                      [{sep,
                                        [{sep,
                                          [{text,"\rThe specified"}],
                                          0,false},
                                         {text,"\bFilename"},
                                         {sep,
                                          [{text,
                                            "'is prefixed with the node name. Default"}],
                                          0,false},
                                         {text,"\bFilename"},
                                         {sep,[{text,[2,105,115]}],0,false},
                                         {text,[3,116,116,98]},
                                         {sep,[{text,[1,46]}],0,false}],
                                        0,false}],
                                      0,true},
                                     null},
                                    null}},
                                  {text,[5,60,47,100,100,62]}],
                                 0,true},
                                null},
                               null}}},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{text,[4,60,100,116,62]},
                                 {sep,
                                  [{text,
                                    [31,70,105,108,101,61,123,119,114,97,112,
                                     44,70,105,108,101,110,97,109,101,44,83,
                                     105,122,101,44,67,111,117,110,116,125]}],
                                  0,false},
                                 {text,[5,60,47,100,116,62]}],
                                0,true},
                               null},
                              null}}},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{text,[4,60,100,100,62]},
                                {above,
                                 {above,{above,{text,[0]},null},null},
                                 {above,
                                  {above,
                                   {sep,
                                    [{sep,
                                      [{sep,
                                        [{text,
                                          "MCan be used if the size of the trace logs must be limited. Default values are"}],
                                        0,false},
                                       {text,"\rSize=128*1024"},
                                       {sep,[{text,[3,97,110,100]}],0,false},
                                       {text,[7,67,111,117,110,116,61,56]},
                                       {sep,[{text,[1,46]}],0,false}],
                                      0,false}],
                                    0,true},
                                   null},
                                  null}},
                                {text,[5,60,47,100,100,62]}],
                               0,true},
                              null},
                             null}}},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{text,[4,60,100,116,62]},
                               {sep,
                                [{text,[6,67,108,105,101,110,116]}],
                                0,false},
                               {text,[5,60,47,100,116,62]}],
                              0,true},
                             null},
                            null}}},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{text,[4,60,100,100,62]},
                              {above,
                               {above,{above,{text,[0]},null},null},
                               {above,
                                {above,
                                 {sep,
                                  [{sep,
                                    [{sep,
                                      [{text,
                                        [28,87,104,101,110,32,116,114,97,99,
                                         105,110,103,32,100,105,115,107,108,
                                         101,115,115,32,110,111,100,101,115,
                                         44]}],
                                      0,false},
                                     {text,[3,116,116,98]},
                                     {sep,
                                      [{text,
                                        "Kmust be started from an external \"trace control node\" with disk access, and"}],
                                      0,false},
                                     {text,[6,67,108,105,101,110,116]},
                                     {sep,
                                      [{text,[7,109,117,115,116,32,98,101]}],
                                      0,false},
                                     {text,"\r{local, File}"},
                                     {sep,
                                      [{text,
                                        "[. All trace information is then sent to the trace control node where it is written to file."}],
                                      0,false}],
                                    0,false}],
                                  0,true},
                                 null},
                                null}},
                              {text,[5,60,47,100,100,62]}],
                             0,true},
                            null},
                           null}}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,[{text,"\nqueue_size"}],0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,100,62]},
                            {above,
                             {above,{above,{text,[0]},null},null},
                             {above,
                              {above,
                               {sep,
                                [{sep,
                                  [{sep,
                                    [{text,
                                      [24,87,104,101,110,32,116,114,97,99,105,
                                       110,103,32,116,111,32,115,104,101,108,
                                       108,32,111,114]}],
                                    0,false},
                                   {text,"\f{local,File}"},
                                   {sep,
                                    [{text,
                                      "S, an ip trace driver is used internally. The ip trace driver has a queue of maximum"}],
                                    0,false},
                                   {text,"\tQueueSize"},
                                   {sep,
                                    [{text,
                                      "×messages waiting to be delivered. If the driver cannot deliver messages as fast as they are produced, the queue size might be exceeded and messages are dropped. This parameter is optional, and is only useful if many"}],
                                    0,false},
                                   {text,"\b{drop,N}"},
                                   {sep,
                                    [{text,
                                      "Otrace messages are received by the trace handler. It has no meaning if shell or"}],
                                    0,false},
                                   {text,"\f{local,File}"},
                                   {sep,
                                    [{text,
                                      [16,105,115,32,110,111,116,32,117,115,
                                       101,100,46,32,83,101,101]}],
                                    0,false},
                                   {text,
                                    [16,100,98,103,58,116,114,97,99,101,95,
                                     112,111,114,116,47,50]},
                                   {sep,
                                    [{text,
                                      "/for more information about the ip trace driver."}],
                                    0,false}],
                                  0,false}],
                                0,true},
                               null},
                              null}},
                            {text,[5,60,47,100,100,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,116,62]},
                           {sep,[{text,"\fprocess_info"}],0,false},
                           {text,[5,60,47,100,116,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{sep,
                                  [{text,
                                    "7Indicates if process information is to be collected. If"}],
                                  0,false},
                                 {text,"\tPI = true"},
                                 {sep,
                                  [{text,
                                    "+(which is default), each process identifier"}],
                                  0,false},
                                 {text,[3,80,105,100]},
                                 {sep,
                                  [{text,
                                    [22,105,115,32,114,101,112,108,97,99,101,
                                     100,32,98,121,32,97,32,116,117,112,108,
                                     101]}],
                                  0,false},
                                 {text,
                                  [22,123,80,105,100,44,80,114,111,99,101,115,
                                   115,73,110,102,111,44,78,111,100,101,125]},
                                 {sep,
                                  [{text,[7,44,32,119,104,101,114,101]}],
                                  0,false},
                                 {text,"\vProcessInfo"},
                                 {sep,
                                  [{text,
                                    "zis the registered process name, its globally registered name, or its initial function. To turn off this functionality, set"}],
                                  0,false},
                                 {text,"\nPI = false"},
                                 {sep,[{text,[1,46]}],0,false}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,
                          [{text,
                            [18,123,115,104,101,108,108,44,32,83,104,101,108,
                             108,83,112,101,99,125]}],
                          0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{sep,
                                [{text,
                                  [133,73,110,100,105,99,97,116,101,115,32,
                                   116,104,97,116,32,116,114,97,99,101,32,109,
                                   101,115,115,97,103,101,115,32,97,114,101,
                                   32,116,111,32,98,101,32,112,114,105,110,
                                   116,101,100,32,111,110,32,116,104,101,32,
                                   99,111,110,115,111,108,101,32,97,115,32,
                                   116,104,101,121,32,97,114,101,32,114,101,
                                   99,101,105,118,101,100,32,98,121,32,116,
                                   104,101,32,116,114,97,99,105,110,103,32,
                                   112,114,111,99,101,115,115,46,32,84,104,
                                   105,115,32,105,109,112,108,105,101,115,32,
                                   116,114,97,99,101,32,99,108,105,101,110,
                                   116]}],
                                0,false},
                               {text,"\r{local, File}"},
                               {sep,[{text,[4,46,32,73,102]}],0,false},
                               {text,"\tShellSpec"},
                               {sep,[{text,[2,105,115]}],0,false},
                               {text,[4,111,110,108,121]},
                               {sep,[{text,"\v(instead of"}],0,false},
                               {text,[4,116,114,117,101]},
                               {sep,
                                [{text,
                                  [28,41,44,32,110,111,32,116,114,97,99,101,
                                   32,108,111,103,115,32,97,114,101,32,115,
                                   116,111,114,101,100,46]}],
                                0,false}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,[{text,[5,115,104,101,108,108]}],0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{sep,[{text,"\fShortcut for"}],0,false},
                             {text,"\r{shell, true}"},
                             {sep,[{text,[1,46]}],0,false}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,[5,116,105,109,101,114]}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "=Indicates that the trace is to be automatically stopped after"}],
                            0,false},
                           {text,[4,77,83,101,99]},
                           {sep,[{text,"\rmilliseconds."}],0,false},
                           {text,"\bStopOpts"},
                           {sep,
                            [{text,
                              [21,97,114,101,32,112,97,115,115,101,100,32,116,
                               111,32,99,111,109,109,97,110,100]}],
                            0,false},
                           {text,"\nttb:stop/2"},
                           {sep,
                            [{text,
                              [24,105,102,32,115,112,101,99,105,102,105,101,
                               100,32,40,100,101,102,97,117,108,116,32,105,
                               115]}],
                            0,false},
                           {text,[2,91,93]},
                           {sep,
                            [{text,
                              [127,41,46,32,78,111,116,105,99,101,32,116,104,
                               97,116,32,116,104,101,32,116,105,109,105,110,
                               103,32,105,115,32,97,112,112,114,111,120,105,
                               109,97,116,101,44,32,97,115,32,100,101,108,97,
                               121,115,32,114,101,108,97,116,101,100,32,116,
                               111,32,110,101,116,119,111,114,107,32,99,111,
                               109,109,117,110,105,99,97,116,105,111,110,32,
                               97,114,101,32,97,108,119,97,121,115,32,112,114,
                               101,115,101,110,116,46,32,84,104,101,32,116,
                               105,109,101,114,32,115,116,97,114,116,115,32,
                               97,102,116,101,114]}],
                            0,false},
                           {text,[7,116,116,98,58,112,47,50]},
                           {sep,
                            [{text,
                              "8is issued, so you can set up your trace patterns before."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,
                    [{text,
                      [14,111,118,101,114,108,111,97,100,95,99,104,101,99,
                       107]}],
                    0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {sep,
                   [{above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "<Allows to enable overload checking on the nodes under trace."}],
                            0,false},
                           {text,
                            [22,77,111,100,117,108,101,58,70,117,110,99,116,
                             105,111,110,40,99,104,101,99,107,41]},
                           {sep,
                            [{text,
                              [17,105,115,32,112,101,114,102,111,114,109,101,
                               100,32,101,97,99,104]}],
                            0,false},
                           {text,[4,77,83,101,99]},
                           {sep,
                            [{text,"!millisecond. If the check returns"}],
                            0,false},
                           {text,[4,116,114,117,101]},
                           {sep,
                            [{text,
                              "., the tracing is disabled on a specified node."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            [15,77,111,100,117,108,101,58,70,117,110,99,116,
                             105,111,110]},
                           {sep,
                            [{text,
                              ",must be able to handle at least three atoms:"}],
                            0,false},
                           {text,[4,105,110,105,116]},
                           {sep,[{text,[1,44]}],0,false},
                           {text,[5,99,104,101,99,107]},
                           {sep,[{text,[5,44,32,97,110,100]}],0,false},
                           {text,[4,115,116,111,112]},
                           {sep,[{text,[1,46]}],0,false},
                           {text,[4,105,110,105,116]},
                           {sep,[{text,[3,97,110,100]}],0,false},
                           {text,[4,115,116,111,112]},
                           {sep,
                            [{text,
                              "<allows you to initialize and clean up the check environment."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{sep,
                            [{text,
                              "8When a node gets overloaded, it is not possible to issue"}],
                            0,false},
                           {text,[7,116,116,98,58,112,47,50]},
                           {sep,
                            [{text,
                              [23,111,114,32,97,110,121,32,99,111,109,109,97,
                               110,100,32,102,114,111,109,32,116,104,101]}],
                            0,false},
                           {text,"\fttb:tp/2,3,4"},
                           {sep,
                            [{text,
                              "kfamily, as it would lead to inconsistent tracing state (different trace specifications on different nodes)."}],
                            0,false}],
                          0,false}],
                        0,true},
                       null},
                      null}}],
                   0,false},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[5,102,108,117,115,104]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "5Periodically flushes all file trace port clients (see"}],
                        0,false},
                       {text,"$runtime_tools/dbg#flush_trace_port/1"},
                       {sep,
                        [{text,
                          "+). When enabled, the buffers are freed each"}],
                        0,false},
                       {text,[4,77,83,101,99]},
                       {sep,
                        [{text,
                          ",millisecond. This option is not allowed with"}],
                        0,false},
                       {text,
                        [21,123,102,105,108,101,44,32,123,108,111,99,97,108,
                         44,32,70,105,108,101,125,125]},
                       {sep,[{text,"\btracing."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [22,123,114,101,115,117,109,101,44,32,70,101,116,99,104,84,
                   105,109,101,111,117,116,125]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          "×Enables the autoresume feature. When enabled, remote nodes try to reconnect to the controlling node if they are restarted. The feature requires application Runtime_Tools to be started (so it has to be present in the"}],
                        0,false},
                       {text,[5,46,98,111,111,116]},
                       {sep,
                        [{text,
                          "|scripts if the traced nodes run with embedded Erlang). If this is not possible, resume can be performed manually by starting"}],
                        0,false},
                       {text,"\rRuntime_Tools"},
                       {sep,
                        [{text,
                          [14,114,101,109,111,116,101,108,121,32,117,115,105,
                           110,103]}],
                        0,false},
                       {text,
                        [17,107,101,114,110,101,108,47,114,112,99,35,99,97,
                         108,108,47,52]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,[3,116,116,98]},
                       {sep,
                        [{text,
                          "itries to fetch all logs from a reconnecting node before reinitializing the trace. This must finish within"}],
                        0,false},
                       {text,"\fFetchTimeout"},
                       {sep,[{text,"\emilliseconds or is aborted."}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,
                        [{text,
                          ";By default, autostart information is stored in a file named"}],
                        0,false},
                       {text,
                        [17,116,116,98,95,97,117,116,111,115,116,97,114,116,
                         46,98,105,110]},
                       {sep,
                        [{text,
                          "¾on each node. If this is not desired (for example, on diskless nodes), a custom module handling autostart information storage and retrieval can be provided by specifying environment variable"}],
                        0,false},
                       {text,
                        [20,116,116,98,95,97,117,116,111,115,116,97,114,116,
                         95,109,111,100,117,108,101]},
                       {sep,
                        [{text,
                          "Pfor the application Runtime_Tools. The module must respond to the following API:"}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {above,
                 {above,
                  {text,[4,60,100,108,62]},
                  {nest,4,
                   {above,
                    {above,
                     {above,
                      {above,
                       {above,
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,116,62]},
                             {sep,
                              [{text,
                                [24,119,114,105,116,101,95,99,111,110,102,105,
                                 103,40,68,97,116,97,41,32,45,62,32,111,107]}],
                              0,false},
                             {text,[5,60,47,100,116,62]}],
                            0,true},
                           null},
                          null}},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{text,[4,60,100,100,62]},
                             {above,
                              {above,{above,{text,[0]},null},null},
                              {above,
                               {above,
                                {sep,
                                 [{sep,
                                   [{text,
                                     [141,83,116,111,114,101,115,32,116,104,
                                      101,32,112,114,111,118,105,100,101,100,
                                      32,100,97,116,97,32,102,111,114,32,102,
                                      117,114,116,104,101,114,32,114,101,116,
                                      114,105,101,118,97,108,46,32,73,116,32,
                                      105,115,32,105,109,112,111,114,116,97,
                                      110,116,32,116,111,32,114,101,97,108,
                                      105,122,101,32,116,104,97,116,32,116,
                                      104,101,32,100,97,116,97,32,115,116,111,
                                      114,97,103,101,32,117,115,101,100,32,
                                      109,117,115,116,32,110,111,116,32,98,
                                      101,32,97,102,102,101,99,116,101,100,32,
                                      98,121,32,116,104,101,32,110,111,100,
                                      101,32,99,114,97,115,104,46]}],
                                   0,false}],
                                 0,true},
                                null},
                               null}},
                             {text,[5,60,47,100,100,62]}],
                            0,true},
                           null},
                          null}}},
                       {above,
                        {above,{above,{text,[0]},null},null},
                        {above,
                         {above,
                          {sep,
                           [{text,[4,60,100,116,62]},
                            {sep,
                             [{text,
                               ",read_config() -> {ok, Data} | {error, Error}"}],
                             0,false},
                            {text,[5,60,47,100,116,62]}],
                           0,true},
                          null},
                         null}}},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{text,[4,60,100,100,62]},
                           {above,
                            {above,{above,{text,[0]},null},null},
                            {above,
                             {above,
                              {sep,
                               [{sep,
                                 [{sep,
                                   [{text,
                                     "#Retrieves configuration stored with"}],
                                   0,false},
                                  {text,
                                   [18,119,114,105,116,101,95,99,111,110,102,
                                    105,103,40,68,97,116,97,41]},
                                  {sep,[{text,[1,46]}],0,false}],
                                 0,false}],
                               0,true},
                              null},
                             null}},
                           {text,[5,60,47,100,100,62]}],
                          0,true},
                         null},
                        null}}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,
                           [{text,
                             [21,100,101,108,101,116,101,95,99,111,110,102,
                              105,103,40,41,32,45,62,32,111,107]}],
                           0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,100,62]},
                         {above,
                          {above,{above,{text,[0]},null},null},
                          {above,
                           {above,
                            {sep,
                             [{sep,
                               [{sep,
                                 [{text,"!Deletes configuration stored with"}],
                                 0,false},
                                {text,
                                 [18,119,114,105,116,101,95,99,111,110,102,
                                  105,103,40,68,97,116,97,41]},
                                {sep,
                                 [{text,
                                   "5. Notice that after this call any subsequent calls to"}],
                                 0,false},
                                {text,"\vread_config"},
                                {sep,[{text,"\vmust return"}],0,false},
                                {text,
                                 [14,123,101,114,114,111,114,44,32,69,114,114,
                                  111,114,125]},
                                {sep,[{text,[1,46]}],0,false}],
                               0,false}],
                             0,true},
                            null},
                           null}},
                         {text,[5,60,47,100,100,62]}],
                        0,true},
                       null},
                      null}}}}},
                 {text,[5,60,47,100,108,62]}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,[6,114,101,115,117,109,101]},
                       {sep,
                        [{text,
                          [19,105,109,112,108,105,101,115,32,116,104,101,32,
                           100,101,102,97,117,108,116]}],
                        0,false},
                       {text,"\fFetchTimeout"},
                       {sep,
                        [{text,
                          [21,44,32,119,104,105,99,104,32,105,115,32,49,48,32,
                           115,101,99,111,110,100,115]}],
                        0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [26,35,35,32,112,40,73,116,101,109,44,70,108,97,103,115,41,32,45,62,32,
        82,101,116,117,114,110]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           "BSet the specified trace flags on the specified processes or ports."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {sep,
         [{text,[1,42]},
          {sep,[{text," Return = {ok,[{Item,MatchDesc}]}"}],0,false}],
         0,false},
        {sep,
         [{text,[1,42]},
          {sep,
           [{text,
             [21,73,116,101,109,115,32,61,32,73,116,101,109,32,124,32,91,73,
              116,101,109,93]}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,
            "¥Item = pid() | port() | RegName | {global,GlobalRegName} | all | processes | ports | existing | existing_processes | existing_ports | new | new_processes | new_ports"}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[16,82,101,103,78,97,109,101,32,61,32,97,116,111,109,40,41]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [22,71,108,111,98,97,108,82,101,103,78,97,109,101,32,61,32,116,101,
           114,109,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [21,70,108,97,103,115,32,61,32,70,108,97,103,32,124,32,91,70,108,97,
          103,93]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "HSets the specified trace flags on the specified processes or ports. Flag"}],
             0,false},
            {text,"\v*timestamp*"},
            {sep,
             [{text,
               [20,105,115,32,97,108,119,97,121,115,32,116,117,114,110,101,
                100,32,111,110,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"#See the Reference Manual for module"}],0,false},
            {text,
             [26,91,114,117,110,116,105,109,101,95,116,111,111,108,115,47,100,
              98,103,93,40,46,47,100,98,103,41]},
            {sep,[{text,"'for the possible trace flags. Parameter"}],0,false},
            {text,"\v*MatchDesc*"},
            {sep,
             [{text,
               [28,105,115,32,116,104,101,32,115,97,109,101,32,97,115,32,114,
                101,116,117,114,110,101,100,32,102,114,111,109]}],
             0,false},
            {text,"\t*dbg:p/2*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [270,80,114,111,99,101,115,115,101,115,32,99,97,110,32,98,101,32,
              115,112,101,99,105,102,105,101,100,32,97,115,32,114,101,103,105,
              115,116,101,114,101,100,32,110,97,109,101,115,44,32,103,108,111,
              98,97,108,108,121,32,114,101,103,105,115,116,101,114,101,100,32,
              110,97,109,101,115,44,32,111,114,32,112,114,111,99,101,115,115,
              32,105,100,101,110,116,105,102,105,101,114,115,46,32,80,111,114,
              116,115,32,99,97,110,32,98,101,32,115,112,101,99,105,102,105,
              101,100,32,97,115,32,114,101,103,105,115,116,101,114,101,100,32,
              110,97,109,101,115,32,111,114,32,112,111,114,116,32,105,100,101,
              110,116,105,102,105,101,114,115,46,32,73,102,32,97,32,114,101,
              103,105,115,116,101,114,101,100,32,110,97,109,101,32,105,115,32,
              115,112,101,99,105,102,105,101,100,44,32,116,104,101,32,102,108,
              97,103,115,32,97,114,101,32,115,101,116,32,111,110,32,112,114,
              111,99,101,115,115,101,115,47,112,111,114,116,115,32,119,105,
              116,104,32,116,104,105,115,32,110,97,109,101,32,111,110,32,97,
              108,108,32,97,99,116,105,118,101,32,110,111,100,101,115,46]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               ">Issuing this command starts the timer for this trace if option"}],
             0,false},
            {text,[7,42,116,105,109,101,114,42]},
            {sep,
             [{text,
               [17,105,115,32,115,112,101,99,105,102,105,101,100,32,119,105,
                116,104]}],
             0,false},
            {text,"\n*tracer/2*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\e## tp, tpl, ctp, ctpl, ctpg"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\f## tpe, ctpe"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [29,83,101,116,32,97,110,100,32,99,108,101,97,114,32,116,114,97,99,
            101,32,112,97,116,116,101,114,110,115,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,".These functions are to be used with trace flag"}],
             0,false},
            {text,[6,42,99,97,108,108,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,[6,42,115,101,110,100,42]},
            {sep,[{text,[5,44,32,97,110,100]}],0,false},
            {text,"\v*'receive'*"},
            {sep,
             [{text,"(for setting and clearing trace patterns."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [15,87,104,101,110,32,116,114,97,99,101,32,102,108,97,103]}],
             0,false},
            {text,[6,42,99,97,108,108,42]},
            {sep,
             [{text,
               "qis set on a process, function calls are traced on that process if a trace pattern is set for the called function."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[3,84,104,101]}],0,false},
            {text,[6,42,115,101,110,100,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,"\v*'receive'*"},
            {sep,
             [{text,
               "cflags enable tracing of all messages sent and received by the process/port. Trace patterns set with"}],
             0,false},
            {text,[5,42,116,112,101,42]},
            {sep,
             [{text,
               "Xmay limit traced messages based on the message content, the sender, and/or the receiver."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [132,84,114,97,99,101,32,112,97,116,116,101,114,110,115,32,115,
                112,101,99,105,102,121,32,104,111,119,32,116,111,32,116,114,
                97,99,101,32,97,32,102,117,110,99,116,105,111,110,32,111,114,
                32,97,32,109,101,115,115,97,103,101,32,98,121,32,117,115,105,
                110,103,32,109,97,116,99,104,32,115,112,101,99,105,102,105,99,
                97,116,105,111,110,115,46,32,77,97,116,99,104,32,115,112,101,
                99,105,102,105,99,97,116,105,111,110,115,32,97,114,101,32,100,
                101,115,99,114,105,98,101,100,32,105,110,32,116,104,101]}],
             0,false},
            {text,
             [31,91,101,114,116,115,47,109,97,116,99,104,95,115,112,101,99,93,
              40,46,47,109,97,116,99,104,95,115,112,101,99,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "GThese functions are equivalent to the corresponding functions in module"}],
             0,false},
            {text,"\f[dbg](./dbg)"},
            {sep,
             [{text,
               "ö, but all calls are stored in the history. The history buffer makes it easy to create configuration files; the same trace environment can be set up many times, for example, to compare two test runs. It also reduces the amount of typing when using"}],
             0,false},
            {text,[5,42,116,116,98,42]},
            {sep,
             [{text,
               [22,102,114,111,109,32,116,104,101,32,69,114,108,97,110,103,32,
                115,104,101,108,108,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,
                 {above,
                  {above,
                   {above,
                    {above,
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,116,62]},
                          {sep,[{text,[2,116,112]}],0,false},
                          {text,[5,60,47,100,116,62]}],
                         0,true},
                        null},
                       null}},
                     {above,
                      {above,{above,{text,[0]},null},null},
                      {above,
                       {above,
                        {sep,
                         [{text,[4,60,100,100,62]},
                          {above,
                           {above,{above,{text,[0]},null},null},
                           {above,
                            {above,
                             {sep,
                              [{sep,
                                [{text,
                                  "-Sets trace patterns on global function calls."}],
                                0,false}],
                              0,true},
                             null},
                            null}},
                          {text,[5,60,47,100,100,62]}],
                         0,true},
                        null},
                       null}}},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{text,[4,60,100,116,62]},
                         {sep,[{text,[3,116,112,108]}],0,false},
                         {text,[5,60,47,100,116,62]}],
                        0,true},
                       null},
                      null}}},
                   {above,
                    {above,{above,{text,[0]},null},null},
                    {above,
                     {above,
                      {sep,
                       [{text,[4,60,100,100,62]},
                        {above,
                         {above,{above,{text,[0]},null},null},
                         {above,
                          {above,
                           {sep,
                            [{sep,
                              [{text,
                                "7Sets trace patterns on local and global function calls."}],
                              0,false}],
                            0,true},
                           null},
                          null}},
                        {text,[5,60,47,100,100,62]}],
                       0,true},
                      null},
                     null}}},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{text,[4,60,100,116,62]},
                       {sep,[{text,[3,116,112,101]}],0,false},
                       {text,[5,60,47,100,116,62]}],
                      0,true},
                     null},
                    null}}},
                 {above,
                  {above,{above,{text,[0]},null},null},
                  {above,
                   {above,
                    {sep,
                     [{text,[4,60,100,100,62]},
                      {above,
                       {above,{above,{text,[0]},null},null},
                       {above,
                        {above,
                         {sep,
                          [{sep,
                            [{text," Sets trace patterns on messages."}],
                            0,false}],
                          0,true},
                         null},
                        null}},
                      {text,[5,60,47,100,100,62]}],
                     0,true},
                    null},
                   null}}},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{text,[4,60,100,116,62]},
                     {sep,[{text,[3,99,116,112]}],0,false},
                     {text,[5,60,47,100,116,62]}],
                    0,true},
                   null},
                  null}}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "9Clears trace patterns on local and global function calls."}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,[4,99,116,112,108]}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          ".Clears trace patterns on local function calls."}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[4,99,116,112,103]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "/Clears trace patterns on global function calls."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,[{text,[4,99,116,112,101]}],0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{text,"\"Clears trace patterns on messages."}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,87,105,116,104]}],0,false},
            {text,[4,42,116,112,42]},
            {sep,[{text,[3,97,110,100]}],0,false},
            {text,[5,42,116,112,108,42]},
            {sep,
             [{text,
               "D, one of the match specification shortcuts can be used (for example,"}],
             0,false},
            {text,
             [28,42,116,116,98,58,116,112,40,102,111,111,95,109,111,100,117,
              108,101,44,32,99,97,108,108,101,114,41,42]},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             [29,84,104,101,32,115,104,111,114,116,99,117,116,115,32,97,114,
              101,32,97,115,32,102,111,108,108,111,119,115,58]}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\b*return*"},
           {sep,[{text,[5,45,32,102,111,114]}],0,false},
           {text,
            [29,42,91,123,39,95,39,44,91,93,44,91,123,114,101,116,117,114,110,
             95,116,114,97,99,101,125,93,125,93,42]},
           {sep,
            [{text,"0(report the return value from a traced function)"}],
            0,false}],
          0,false}],
        0,false},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,"\b*caller*"},
           {sep,[{text,[5,45,32,102,111,114]}],0,false},
           {text,"!*[{'_',[],[{message,{caller}}]}]*"},
           {sep,
            [{text,
              [29,40,114,101,112,111,114,116,32,116,104,101,32,99,97,108,108,
               105,110,103,32,102,117,110,99,116,105,111,110,41]}],
            0,false}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [16,42,123,99,111,100,101,115,116,114,44,32,83,116,114,125,42]},
          {sep,[{text,[5,45,32,102,111,114]}],0,false},
          {text,[14,42,100,98,103,58,102,117,110,50,109,115,47,49,42]},
          {sep,[{text,"%arguments passed as strings (example:"}],0,false},
          {text," *\"fun(_) -> return_trace() end\"*"},
          {sep,[{text,[1,41]}],0,false}],
         0,false}],
       0,false}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [28,35,35,32,108,105,115,116,95,104,105,115,116,111,114,121,40,41,32,
        45,62,32,72,105,115,116,111,114,121]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"#Return all calls stored in history."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [25,72,105,115,116,111,114,121,32,61,32,91,123,78,44,70,117,110,99,44,
         65,114,103,115,125,93]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\fAll calls to"}],0,false},
            {text,[5,42,116,116,98,42]},
            {sep,
             [{text,
               "tis stored in the history. This function returns the current content of the history. Any entry can be reexecuted with"}],
             0,false},
            {text,[15,42,114,117,110,95,104,105,115,116,111,114,121,47,49,42]},
            {sep,[{text,"&or stored in a configuration file with"}],0,false},
            {text,
             [18,42,119,114,105,116,101,95,99,111,110,102,105,103,47,50,44,51,
              42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,")## run_history(N) -> ok | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"!Execute one entry of the history."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},{sep,[{text,"\eN = integer() | [integer()]"}],0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "SExecutes the specified entry or entries from the history list. To list history, use"}],
             0,false},
            {text,
             [16,42,108,105,115,116,95,104,105,115,116,111,114,121,47,48,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\"## write_config(ConfigFile,Config)"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"1Equivalent to write_config(ConfigFile,Config,[])."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,"$*write_config(ConfigFile,Config,[])*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,">## write_config(ConfigFile,Config,Opts) -> ok | {error,Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [28,67,114,101,97,116,101,32,97,32,99,111,110,102,105,103,117,114,
            97,116,105,111,110,32,102,105,108,101,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,
              [21,67,111,110,102,105,103,70,105,108,101,32,61,32,115,116,114,
               105,110,103,40,41]}],
            0,false}],
          0,false},
         {sep,
          [{text,[1,42]},
           {sep,
            [{text,".Config = all | [integer()] | [{Mod,Func,Args}]"}],
            0,false}],
          0,false}},
        {sep,[{text,[1,42]},{sep,[{text,"\fMod = atom()"}],0,false}],0,false}},
       {sep,[{text,[1,42]},{sep,[{text,"\rFunc = atom()"}],0,false}],0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,[15,65,114,103,115,32,61,32,91,116,101,114,109,40,41,93]}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [18,79,112,116,115,32,61,32,79,112,116,32,124,32,91,79,112,116,93]}],
        0,false}],
      0,false}},
    {sep,[{text,[1,42]},{sep,[{text,"\fOpt = append"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,
             "hCreates or extends a configuration file, which can be used for restoring a specific configuration later."}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "pThe contents of the configuration file can either be fetched from the history or specified directly as a list of"}],
             0,false},
            {text,
             [17,42,123,77,111,100,44,70,117,110,99,44,65,114,103,115,125,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "BIf the complete history is to be stored in the configuration file,"}],
             0,false},
            {text,"\b*Config*"},
            {sep,[{text,[7,109,117,115,116,32,98,101]}],0,false},
            {text,[5,42,97,108,108,42]},
            {sep,
             [{text,
               "I. If only a selected number of entries from the history are to be stored,"}],
             0,false},
            {text,"\b*Config*"},
            {sep,
             [{text,
               "Amust be a list of integers pointing out the entries to be stored."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[6,42,79,112,116,115,42]},
            {sep,
             [{text,
               [28,105,115,32,110,111,116,32,115,112,101,99,105,102,105,101,
                100,32,111,114,32,105,102,32,105,116,32,105,115]}],
             0,false},
            {text,[4,42,91,93,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,"\f*ConfigFile*"},
            {sep,[{text,"(is deleted and a new file is created. If"}],0,false},
            {text,
             [17,42,79,112,116,115,32,61,32,91,97,112,112,101,110,100,93,42]},
            {sep,[{text,[1,44]}],0,false},
            {text,"\f*ConfigFile*"},
            {sep,
             [{text,
               "Gis not deleted. The new information is appended at the end of the file."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"0## run_config(ConfigFile) -> ok | {error,Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,",Execute all entries in a configuration file."}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{text,[1,42]},
     {sep,
      [{text,
        [21,67,111,110,102,105,103,70,105,108,101,32,61,32,115,116,114,105,
         110,103,40,41]}],
      0,false}],
    0,false},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [127,69,120,101,99,117,116,101,115,32,97,108,108,32,101,110,
                116,114,105,101,115,32,105,110,32,116,104,101,32,115,112,101,
                99,105,102,105,101,100,32,99,111,110,102,105,103,117,114,97,
                116,105,111,110,32,102,105,108,101,46,32,78,111,116,105,99,
                101,32,116,104,97,116,32,116,104,101,32,104,105,115,116,111,
                114,121,32,111,102,32,116,104,101,32,108,97,115,116,32,116,
                114,97,99,101,32,105,115,32,97,108,119,97,121,115,32,97,118,
                97,105,108,97,98,108,101,32,105,110,32,102,105,108,101]}],
             0,false},
            {text,
             [17,42,116,116,98,95,108,97,115,116,95,99,111,110,102,105,103,
              42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"8## run_config(ConfigFile,NumList) -> ok | {error,Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"3Execute selected entries from a configuration file."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [21,67,111,110,102,105,103,70,105,108,101,32,61,32,115,116,114,105,
          110,103,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [21,78,117,109,76,105,115,116,32,61,32,91,105,110,116,101,103,101,
          114,40,41,93]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "@Executes selected entries from the specified configuration file."}],
             0,false},
            {text,"\t*NumList*"},
            {sep,
             [{text,
               ">is a list of integers pointing out the entries to be executed."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,"1To list the contents of a configuration file, use"}],
             0,false},
            {text,[15,42,108,105,115,116,95,99,111,110,102,105,103,47,49,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "ENotice that the history of the last trace is always available in file"}],
             0,false},
            {text,
             [17,42,116,116,98,95,108,97,115,116,95,99,111,110,102,105,103,
              42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,"5## list_config(ConfigFile) -> Config | {error,Reason}"},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,")List all entries in a configuration file."}],0,false}],
       0,true},
      null},
     null}},
   {above,
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [21,67,111,110,102,105,103,70,105,108,101,32,61,32,115,116,114,105,
          110,103,40,41]}],
       0,false}],
     0,false},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [24,67,111,110,102,105,103,32,61,32,91,123,78,44,70,117,110,99,44,65,
          114,103,115,125,93]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,"6Lists all entries in the specified configuration file."}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"### write_trace_info(Key,Info) -> ok"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,
           [{text,
             [29,87,114,105,116,101,32,97,110,121,32,105,110,102,111,114,109,
              97,116,105,111,110,32,116,111,32,102,105,108,101]}],
           0,false},
          {text,[5,42,46,116,105,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,[{text,[1,42]},{sep,[{text,"\fKey = term()"}],0,false}],0,false},
     {sep,
      [{text,[1,42]},{sep,[{text,"\eInfo = Data | fun() -> Data"}],0,false}],
      0,false}},
    {sep,[{text,[1,42]},{sep,[{text,"\rData = term()"}],0,false}],0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[4,70,105,108,101]}],0,false},
            {text,[5,42,46,116,105,42]},
            {sep,[{text,"\bcontains"}],0,false},
            {text,
             [17,42,123,75,101,121,44,86,97,108,117,101,76,105,115,116,125,
              42]},
            {sep,
             [{text,
               [26,116,117,112,108,101,115,46,32,84,104,105,115,32,102,117,
                110,99,116,105,111,110,32,97,100,100,115]}],
             0,false},
            {text,[6,42,68,97,116,97,42]},
            {sep,[{text,[6,116,111,32,116,104,101]}],0,false},
            {text,"\v*ValueList*"},
            {sep,
             [{text,
               [15,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104]}],
             0,false},
            {text,[5,42,75,101,121,42]},
            {sep,
             [{text,
               "[. All information written with this function is included in the call to the format handler."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text," ## seq_trigger_ms() -> MatchSpec"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,[{text,"\"Equivalent to seq_trigger_ms(all)."}],0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [21,42,115,101,113,95,116,114,105,103,103,101,114,95,109,115,40,
              97,108,108,41,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"%## seq_trigger_ms(Flags) -> MatchSpec"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"6Return a match_spec() which starts sequential tracing."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [24,77,97,116,99,104,83,112,101,99,32,61,32,109,97,116,99,104,95,
           115,112,101,99,40,41]}],
        0,false}],
      0,false},
     {sep,
      [{text,[1,42]},
       {sep,[{text,"+Flags = all | SeqTraceFlag | [SeqTraceFlag]"}],0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [21,83,101,113,84,114,97,99,101,70,108,97,103,32,61,32,97,116,111,
          109,40,41]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [158,65,32,109,97,116,99,104,32,115,112,101,99,105,102,105,99,
                97,116,105,111,110,32,99,97,110,32,116,117,114,110,32,111,110,
                32,111,114,32,111,102,102,32,115,101,113,117,101,110,116,105,
                97,108,32,116,114,97,99,105,110,103,46,32,84,104,105,115,32,
                102,117,110,99,116,105,111,110,32,114,101,116,117,114,110,115,
                32,97,32,109,97,116,99,104,32,115,112,101,99,105,102,105,99,
                97,116,105,111,110,44,32,119,104,105,99,104,32,116,117,114,
                110,115,32,111,110,32,115,101,113,117,101,110,116,105,97,108,
                32,116,114,97,99,105,110,103,32,119,105,116,104,32,116,104,
                101,32,115,112,101,99,105,102,105,101,100]}],
             0,false},
            {text,[7,42,70,108,97,103,115,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "AThis match specification can be specified as the last argument to"}],
             0,false},
            {text,[4,42,116,112,42]},
            {sep,[{text,[2,111,114]}],0,false},
            {text,[5,42,116,112,108,42]},
            {sep,
             [{text,
               [15,46,32,84,104,101,32,97,99,116,105,118,97,116,101,100]}],
             0,false},
            {text,[6,42,73,116,101,109,42]},
            {sep,
             [{text,[14,116,104,101,110,32,98,101,99,111,109,101,115,32,97]}],
             0,false},
            {text,"\v**trigger**"},
            {sep,
             [{text,
               "Zfor sequential tracing. This means that if the item is called on a process with trace flag"}],
             0,false},
            {text,[6,42,99,97,108,108,42]},
            {sep,
             [{text,"-set, the process is \"contaminated\" with token"}],
             0,false},
            {text,"\v*seq_trace*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,"\r*Flags = all*"},
            {sep,
             [{text,
               [29,44,32,97,108,108,32,112,111,115,115,105,98,108,101,32,102,
                108,97,103,115,32,97,114,101,32,115,101,116,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [23,84,104,101,32,112,111,115,115,105,98,108,101,32,118,97,108,
                117,101,115,32,102,111,114]}],
             0,false},
            {text,[14,42,83,101,113,84,114,97,99,101,70,108,97,103,42]},
            {sep,
             [{text,
               [16,97,114,101,32,97,118,97,105,108,97,98,108,101,32,105,110]}],
             0,false},
            {text,
             [31,91,107,101,114,110,101,108,47,115,101,113,95,116,114,97,99,
              101,93,40,46,47,115,101,113,95,116,114,97,99,101,41]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [24,70,111,114,32,97,32,100,101,115,99,114,105,112,116,105,111,
                110,32,111,102,32,116,104,101]}],
             0,false},
            {text,[14,42,109,97,116,99,104,95,115,112,101,99,40,41,42]},
            {sep,
             [{text,
               [19,115,121,110,116,97,120,44,32,115,101,101,32,115,101,99,116,
                105,111,110]}],
             0,false},
            {text,
             [31,91,101,114,116,115,47,109,97,116,99,104,95,115,112,101,99,93,
              40,46,47,109,97,116,99,104,95,115,112,101,99,41]},
            {sep,
             [{text,
               "Cin ERTS, which explains the general match specification \"language\"."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[15,33,33,33,32,105,110,102,111,32,34,78,111,116,101,34]},
          {sep,
           [{text,[4,32,32,32,32]},
            {sep,
             [{sep,
               [{above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{sep,[{text,[3,84,104,101]}],0,false},
                       {text,
                        [17,42,42,115,121,115,116,101,109,32,116,114,97,99,
                         101,114,42,42]},
                       {sep,
                        [{text,
                          "4for sequential tracing is automatically initiated by"}],
                        0,false},
                       {text,[5,42,116,116,98,42]},
                       {sep,
                        [{text,"!when a trace port is started with"}],
                        0,false},
                       {text,
                        [18,42,116,116,98,58,116,114,97,99,101,114,47,48,44,
                         49,44,50,42]},
                       {sep,[{text,[1,46]}],0,false}],
                      0,false}],
                    0,true},
                   null},
                  null}}],
               0,false}],
             0,true}],
           0,false}},
         {text,[0]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"!An example of how to use function"}],0,false},
            {text,
             [20,42,115,101,113,95,116,114,105,103,103,101,114,95,109,115,47,
              48,44,49,42]},
            {sep,[{text,"\bfollows:"}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {above,
         {above,
          {text,[3,96,96,96]},
          {sep,
           [{text,
             [17,10,40,116,105,103,101,114,64,100,117,114,105,110,41,53,62,
              32]},
            {text,"\rttb:tracer()."},
            {text,"$\n{ok,[tiger@durin]}\n(tiger@durin)6> "},
            {text,[16,116,116,98,58,112,40,97,108,108,44,99,97,108,108,41,46]},
            {text,"%\n{ok,{[all],[call]}}\n(tiger@durin)7> "},
            {text,"&ttb:tp(mod,func,ttb:seq_trigger_ms())."},
            {text,"-\n{ok,[{matched,1},{saved,1}]}\n(tiger@durin)8>"}],
           0,true}},
         {text,[3,96,96,96]}},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bWhenever"}],0,false},
            {text,[15,42,109,111,100,58,102,117,110,99,40,46,46,46,41,42]},
            {sep,[{text,"\eis called after this, token"}],0,false},
            {text,"\v*seq_trace*"},
            {sep,[{text," is set on the executing process."}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,{above,{text,"\t## stop()"},null},null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [23,69,113,117,105,118,97,108,101,110,116,32,116,111,32,115,116,
            111,112,40,91,93,41,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,"\n*stop([])*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,")## stop(Opts) -> stopped | {stopped, Dir}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,"2Stop tracing and fetch/format logs from all nodes."}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           [18,79,112,116,115,32,61,32,79,112,116,32,124,32,91,79,112,116,
            93]}],
         0,false}],
       0,false},
      {sep,
       [{text,[1,42]},
        {sep,
         [{text,
           "SOpt = nofetch | {fetch_dir, Dir} | format | {format, FormatOpts} | return_fetch_dir"}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,[14,68,105,114,32,61,32,115,116,114,105,110,103,40,41]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{text,
         [25,70,111,114,109,97,116,79,112,116,115,32,61,32,115,101,101,32,102,
          111,114,109,97,116,47,50]}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               [127,83,116,111,112,115,32,116,114,97,99,105,110,103,32,111,
                110,32,97,108,108,32,110,111,100,101,115,46,32,76,111,103,115,
                32,97,110,100,32,116,114,97,99,101,32,105,110,102,111,114,109,
                97,116,105,111,110,32,102,105,108,101,115,32,97,114,101,32,
                115,101,110,116,32,116,111,32,116,104,101,32,116,114,97,99,
                101,32,99,111,110,116,114,111,108,32,110,111,100,101,32,97,
                110,100,32,115,116,111,114,101,100,32,105,110,32,97,32,100,
                105,114,101,99,116,111,114,121,32,110,97,109,101,100]}],
             0,false},
            {text,
             [31,42,116,116,98,95,117,112,108,111,97,100,95,70,105,108,101,78,
              97,109,101,45,84,105,109,101,115,116,97,109,112,42]},
            {sep,[{text,[7,44,32,119,104,101,114,101]}],0,false},
            {text,"\n*Filename*"},
            {sep,
             [{text,
               [24,105,115,32,116,104,101,32,111,110,101,32,112,114,111,118,
                105,100,101,100,32,119,105,116,104]}],
             0,false},
            {text,[14,42,123,102,105,108,101,44,32,70,105,108,101,125,42]},
            {sep,
             [{text,
               [22,100,117,114,105,110,103,32,116,114,97,99,101,32,115,101,
                116,117,112,32,97,110,100]}],
             0,false},
            {text,"\v*Timestamp*"},
            {sep,
             [{text,
               [14,105,115,32,111,102,32,116,104,101,32,102,111,114,109]}],
             0,false},
            {text,
             [17,42,121,121,121,121,109,109,100,100,45,104,104,109,109,115,
              115,42]},
            {sep,
             [{text,
               [139,46,32,69,118,101,110,32,108,111,103,115,32,102,114,111,
                109,32,110,111,100,101,115,32,111,110,32,116,104,101,32,115,
                97,109,101,32,109,97,99,104,105,110,101,32,97,115,32,116,104,
                101,32,116,114,97,99,101,32,99,111,110,116,114,111,108,32,110,
                111,100,101,32,97,114,101,32,109,111,118,101,100,32,116,111,
                32,116,104,105,115,32,100,105,114,101,99,116,111,114,121,46,
                32,84,104,101,32,104,105,115,116,111,114,121,32,108,105,115,
                116,32,105,115,32,115,97,118,101,100,32,116,111,32,97,32,102,
                105,108,101,32,110,97,109,101,100]}],
             0,false},
            {text,
             [17,42,116,116,98,95,108,97,115,116,95,99,111,110,102,105,103,
              42]},
            {sep,
             [{text,
               "qfor further reference (as it is no longer accessible through history and configuration management functions, like"}],
             0,false},
            {text,
             [20,42,116,116,98,58,108,105,115,116,95,104,105,115,116,111,114,
              121,47,48,42]},
            {sep,[{text,[2,41,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,{sep,[{sep,[{text,"\f**Options:**"}],0,false}],0,true},null},
       null}},
     {above,
      {above,
       {text,[4,60,100,108,62]},
       {nest,4,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,116,62]},
                    {sep,[{text,[7,110,111,102,101,116,99,104]}],0,false},
                    {text,[5,60,47,100,116,62]}],
                   0,true},
                  null},
                 null}},
               {above,
                {above,{above,{text,[0]},null},null},
                {above,
                 {above,
                  {sep,
                   [{text,[4,60,100,100,62]},
                    {above,
                     {above,{above,{text,[0]},null},null},
                     {above,
                      {above,
                       {sep,
                        [{sep,
                          [{text,
                            "KIndicates that trace logs are not to be collected after tracing is stopped."}],
                          0,false}],
                        0,true},
                       null},
                      null}},
                    {text,[5,60,47,100,100,62]}],
                   0,true},
                  null},
                 null}}},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{text,[4,60,100,116,62]},
                   {sep,[{text,"\f{fetch, Dir}"}],0,false},
                   {text,[5,60,47,100,116,62]}],
                  0,true},
                 null},
                null}}},
             {above,
              {above,{above,{text,[0]},null},null},
              {above,
               {above,
                {sep,
                 [{text,[4,60,100,100,62]},
                  {above,
                   {above,{above,{text,[0]},null},null},
                   {above,
                    {above,
                     {sep,
                      [{sep,
                        [{text,
                          "pAllows specification of the directory to fetch the data to. If the directory already exists, an error is thrown."}],
                        0,false}],
                      0,true},
                     null},
                    null}},
                  {text,[5,60,47,100,100,62]}],
                 0,true},
                null},
               null}}},
            {above,
             {above,{above,{text,[0]},null},null},
             {above,
              {above,
               {sep,
                [{text,[4,60,100,116,62]},
                 {sep,[{text,[6,102,111,114,109,97,116]}],0,false},
                 {text,[5,60,47,100,116,62]}],
                0,true},
               null},
              null}}},
           {above,
            {above,{above,{text,[0]},null},null},
            {above,
             {above,
              {sep,
               [{text,[4,60,100,100,62]},
                {above,
                 {above,{above,{text,[0]},null},null},
                 {above,
                  {above,
                   {sep,
                    [{sep,
                      [{text,
                        "nIndicates the trace logs to be formatted after tracing is stopped. All logs in the fetch directory are merged."}],
                      0,false}],
                    0,true},
                   null},
                  null}},
                {text,[5,60,47,100,100,62]}],
               0,true},
              null},
             null}}},
          {above,
           {above,{above,{text,[0]},null},null},
           {above,
            {above,
             {sep,
              [{text,[4,60,100,116,62]},
               {sep,
                [{text,
                  [16,114,101,116,117,114,110,95,102,101,116,99,104,95,100,
                   105,114]}],
                0,false},
               {text,[5,60,47,100,116,62]}],
              0,true},
             null},
            null}}},
         {above,
          {above,{above,{text,[0]},null},null},
          {above,
           {above,
            {sep,
             [{text,[4,60,100,100,62]},
              {above,
               {above,{above,{text,[0]},null},null},
               {above,
                {above,
                 {sep,
                  [{sep,
                    [{sep,
                      [{text," Indicates the return value to be"}],
                      0,false},
                     {text,
                      [14,123,115,116,111,112,112,101,100,44,32,68,105,114,
                       125]},
                     {sep,[{text,"\fand not just"}],0,false},
                     {text,[7,115,116,111,112,112,101,100]},
                     {sep,
                      [{text,
                        [14,46,32,84,104,105,115,32,105,109,112,108,105,101,
                         115]}],
                      0,false},
                     {text,[5,102,101,116,99,104]},
                     {sep,[{text,[1,46]}],0,false}],
                    0,false}],
                  0,true},
                 null},
                null}},
              {text,[5,60,47,100,100,62]}],
             0,true},
            null},
           null}}}}},
      {text,[5,60,47,100,108,62]}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,
       [19,35,35,32,103,101,116,95,101,116,95,104,97,110,100,108,101,114,40,
        41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\nReturn the"}],0,false},
          {text,[4,42,101,116,42]},
          {sep,[{text,"\bhandler."}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\vReturns the"}],0,false},
            {text,[4,42,101,116,42]},
            {sep,
             [{text,
               [31,104,97,110,100,108,101,114,44,32,119,104,105,99,104,32,99,
                97,110,32,98,101,32,117,115,101,100,32,119,105,116,104]}],
             0,false},
            {text,"\n*format/2*"},
            {sep,[{text,[2,111,114]}],0,false},
            {text,"\n*tracer/2*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\bExample:"}],0,false},
            {text,"4*ttb:format(Dir, [{handler, ttb:get_et_handler()}])*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {text,[15,35,35,32,102,111,114,109,97,116,40,70,105,108,101,41]},
      null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{sep,[{text,"\rEquivalent to"}],0,false},
          {text,
           [17,42,102,111,114,109,97,116,40,70,105,108,101,44,91,93,41,42]},
          {sep,[{text,[1,46]}],0,false}],
         0,false}],
       0,true},
      null},
     null}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"\rEquivalent to"}],0,false},
            {text,
             [17,42,102,111,114,109,97,116,40,70,105,108,101,44,91,93,41,42]},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,{text,"/## format(File,Options) -> ok | {error, Reason}"},null},
     null}},
   {above,
    {above,{above,{text,[0]},null},null},
    {above,
     {above,
      {sep,
       [{sep,
         [{text,
           [26,70,111,114,109,97,116,32,97,32,98,105,110,97,114,121,32,116,
            114,97,99,101,32,108,111,103,46]}],
         0,false}],
       0,true},
      null},
     null}},
   {above,
    {above,
     {above,
      {above,
       {above,
        {above,
         {above,
          {above,
           {above,
            {above,
             {above,
              {above,
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    [28,70,105,108,101,32,61,32,115,116,114,105,110,103,40,41,
                     32,124,32,91,115,116,114,105,110,103,40,41,93]}],
                  0,false}],
                0,false},
               {sep,
                [{text,[1,42]},
                 {sep,
                  [{text,
                    "yThis can be the name of a binary log, a list of such logs, or the name of a directory containing one or more binary logs."}],
                  0,false}],
                0,false}},
              {sep,
               [{text,[1,42]},
                {sep,
                 [{text,
                   [21,79,112,116,105,111,110,115,32,61,32,79,112,116,32,124,
                    32,91,79,112,116,93]}],
                 0,false}],
               0,false}},
             {sep,
              [{text,[1,42]},
               {sep,
                [{text,
                  "8Opt = {out,Out} | {handler,FormatHandler} | disable_sort"}],
                0,false}],
              0,false}},
            {sep,
             [{text,[1,42]},
              {sep,
               [{text,
                 [28,79,117,116,32,61,32,115,116,97,110,100,97,114,100,95,105,
                  111,32,124,32,115,116,114,105,110,103,40,41]}],
               0,false}],
             0,false}},
           {sep,
            [{text,[1,42]},
             {sep,
              [{text,"(FormatHandler = {Function, InitialState}"}],
              0,false}],
            0,false}},
          {sep,
           [{text,[1,42]},
            {sep,
             [{text,"1Function = fun(Fd,Trace,TraceInfo,State) -> State"}],
             0,false}],
           0,false}},
         {sep,
          [{text,[1,42]},
           {sep,[{text,"!Fd = standard_io | FileDescriptor"}],0,false}],
          0,false}},
        {sep,
         [{text,[1,42]},
          {sep,
           [{sep,
             [{sep,
               [{text,"'File descriptor of the destination file"}],
               0,false},
              {text,[5,42,79,117,116,42]},
              {sep,[{text,[1,46]}],0,false}],
             0,false}],
           0,false}],
         0,false}},
       {sep,
        [{text,[1,42]},
         {sep,
          [{text,[15,84,114,97,99,101,32,61,32,116,117,112,108,101,40,41]}],
          0,false}],
        0,false}},
      {sep,
       [{text,[1,42]},
        {sep,
         [{sep,
           [{sep,
             [{text,
               "CThe trace message. For details, see the Reference Manual for module"}],
             0,false},
            {text,"\b*erlang*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,false}],
       0,false}},
     {sep,
      [{text,[1,42]},
       {sep,
        [{text,
          [29,84,114,97,99,101,73,110,102,111,32,61,32,91,123,75,101,121,44,
           86,97,108,117,101,76,105,115,116,125,93]}],
        0,false}],
      0,false}},
    {sep,
     [{text,[1,42]},
      {sep,
       [{sep,
         [{sep,
           [{text,
             [17,73,110,99,108,117,100,101,115,32,116,104,101,32,107,101,121,
              115]}],
           0,false},
          {text,[7,42,102,108,97,103,115,42]},
          {sep,[{text,[1,44]}],0,false},
          {text,"\b*client*"},
          {sep,[{text,[5,44,32,97,110,100]}],0,false},
          {text,[6,42,110,111,100,101,42]},
          {sep,[{text,[4,46,32,73,102]}],0,false},
          {text,"\t*handler*"},
          {sep,
           [{text,
             "qis specified as option to the tracer function, this is also included. Also, all information written with function"}],
           0,false},
          {text,
           [20,42,119,114,105,116,101,95,116,114,97,99,101,95,105,110,102,111,
            47,50,42]},
          {sep,[{text,"\fis included."}],0,false}],
         0,false}],
       0,false}],
     0,false}},
   {sep,
    [{above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "sReads the specified binary trace log(s). The logs are processed in the order of their time stamps as long as option"}],
             0,false},
            {text,[14,42,100,105,115,97,98,108,101,95,115,111,114,116,42]},
            {sep,
             [{text,
               [17,105,115,32,110,111,116,32,115,112,101,99,105,102,105,101,
                100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,")*FormatHandler = {Function,InitialState}*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\n*Function*"},
            {sep,[{text,"!is called for each trace message."}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,"\"*FormatHandler = get_et_handler()*"},
            {sep,[{text,[1,44]}],0,false},
            {text,"\v*et_viewer*"},
            {sep,
             [{text,
               "Cin application ET is used for presenting the trace log graphically."}],
             0,false},
            {text,[5,42,116,116,98,42]},
            {sep,
             [{text,
               "?provides a few different filters that can be selected from menu"}],
             0,false},
            {text,
             [23,42,42,70,105,108,116,101,114,115,32,97,110,100,32,115,99,97,
              108,105,110,103,42,42]},
            {sep,[{text,[6,105,110,32,116,104,101]}],0,false},
            {text,"\v*et_viewer*"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[15,42,70,111,114,109,97,116,72,97,110,100,108,101,114,42]},
            {sep,
             [{text,
               "Yis not specified, a default handler is used presenting each trace message as a text line."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,"$The state returned from each call of"}],0,false},
            {text,"\n*Function*"},
            {sep,
             [{text,
               "_is passed to the next call, even if the next call is to format a message from another log file."}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,[{text,[2,73,102]}],0,false},
            {text,[5,42,79,117,116,42]},
            {sep,[{text,"\ris specified,"}],0,false},
            {text,[15,42,70,111,114,109,97,116,72,97,110,100,108,101,114,42]},
            {sep,[{text,"\egets the file descriptor to"}],0,false},
            {text,[5,42,79,117,116,42]},
            {sep,
             [{text,
               [23,97,115,32,116,104,101,32,102,105,114,115,116,32,112,97,114,
                97,109,101,116,101,114,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{text,[5,42,79,117,116,42]},
            {sep,
             [{text,
               [17,105,115,32,105,103,110,111,114,101,100,32,105,102,32,116,
                104,101]}],
             0,false},
            {text,[4,42,101,116,42]},
            {sep,
             [{text,
               [23,102,111,114,109,97,116,32,104,97,110,100,108,101,114,32,
                105,115,32,117,115,101,100,46]}],
             0,false}],
           0,false}],
         0,true},
        null},
       null}},
     {above,
      {above,{above,{text,[0]},null},null},
      {above,
       {above,
        {sep,
         [{sep,
           [{sep,
             [{text,
               "·Wrap logs can be formatted one by one or all at once. To format one of the wrap logs in a set, specify the exact file name. To format the whole set of wrap logs, specify the name with"}],
             0,false},
            {text,[3,42,42,42]},
            {sep,
             [{text,"0instead of the wrap count. For examples, see the"}],
             0,false},
            {text," [ttb_ug#format](./ttb_ug#format)"},
            {sep,[{text,[1,46]}],0,false}],
           0,false}],
         0,true},
        null},
       null}}],
    0,false}],
  0,false}}
